;------------------------------------
;SERIAL LCD 16X2

//COMMANDS
GLOBAL LCD16_INIT
GLOBAL LCD16_NODISP
GLOBAL LCD16_DISP
GLOBAL LCD16_CLR
GLOBAL LCD16_PRINT
GLOBAL LCD16_PRCHR
GLOBAL LCD16_HOME
GLOBAL LCD16_SETCURS
GLOBAL LCD16_CURSOFF
GLOBAL LCD16_CURSON
GLOBAL LCD16_BLINKOFF
GLOBAL LCD16_BLINKON
GLOBAL LCD16_SCRLEFT
GLOBAL LCD16_SCRRIGHT
GLOBAL LCD16_MOVLEFT
GLOBAL LCD16_MOVRIGHT


LCDADDR	EQU $27 ;$3F

LCD_NOBACKLIGHT EQU 0x00
LCD_BACKLIGHT   EQU 0xFF
EN EQU 2;6  // Enable bit
RW EQU 1;5  // Read/Write bit
RS EQU 0;4  // Register select bit
D4 EQU 4;0
D5 EQU 5;1
D6 EQU 6;2
D7 EQU 7;3


;// LCD Commands
;// ---------------------------------------------------------------------------
LCD_CLEARDISPLAY        EQU 0x01
LCD_RETURNHOME          EQU 0x02
LCD_ENTRYMODESET        EQU 0x04
LCD_DISPLAYCONTROL      EQU 0x08
LCD_CURSORSHIFT         EQU 0x10
LCD_FUNCTIONSET         EQU 0x20
LCD_SETCGRAMADDR        EQU 0x40
LCD_SETDDRAMADDR        EQU 0x80

;// flags for display entry mode
;// ---------------------------------------------------------------------------
LCD_ENTRYRIGHT          EQU 0x00
LCD_ENTRYLEFT           EQU 0x02
LCD_ENTRYSHIFTINCREMENT EQU 0x01
LCD_ENTRYSHIFTDECREMENT EQU 0x00

;// flags for display on/off and cursor control
;// ---------------------------------------------------------------------------
LCD_DISPLAYON           EQU 0x04
LCD_DISPLAYOFF          EQU 0x00
LCD_CURSORON            EQU 0x02
LCD_CURSOROFF           EQU 0x00
LCD_BLINKON             EQU 0x01
LCD_BLINKOFF            EQU 0x00

;// flags for display/cursor shift
;// ---------------------------------------------------------------------------
LCD_DISPLAYMOVE         EQU 0x08
LCD_CURSORMOVE          EQU 0x00
LCD_MOVERIGHT           EQU 0x04
LCD_MOVELEFT            EQU 0x00

;// flags for function set
;// ---------------------------------------------------------------------------
LCD_8BITMODE            EQU 0x10
LCD_4BITMODE            EQU 0x00
LCD_2LINE               EQU 0x08
LCD_1LINE               EQU 0x00
LCD_5x10DOTS            EQU 0x04
LCD_5x8DOTS             EQU 0x00


;// Define COMMAND and DATA LCD Rs (used by send method).
;// ---------------------------------------------------------------------------
COMMAND                 EQU 0
LCD_DATA                EQU 1
FOUR_BITS               EQU 2


; @abstract   Defines the duration of the home and clear commands
; @discussion This constant defines the time it takes for the home and clear
; commands in the LCD - Time in microseconds.
HOME_CLEAR_EXEC      EQU 2000

;    @abstract   Backlight off constant declaration
;    @discussion Used in combination with the setBacklight to swith off the
; LCD backlight. @set setBacklight

BACKLIGHT_OFF           EQU 0

; @abstract   Backlight on constant declaration
; @discussion Used in combination with the setBacklight to swith on the
; LCD backlight. @set setBacklight

BACKLIGHT_ON          EQU 255


LCD_DSPMODE  DB 0
LCD_DSPCTRL  DB 0


;A HAS THE VALUE FOR THE 4 BITS
;E HAS THE COMMAND OR DATA SIGNAL E=1 MEANS DATA
LCD16_WR4BITS:	LD D,0		;PIN MAP VALUES FRO 8574 BIT 0-7
		; Map the value ON A to LCD pin mapping
		RRCA 		;D4 = D0,D5=D1,D6=D2,D7=D3
		JR NC,LWNXT1  	;BIT 0 NOT SET JR
		SET D4,D
LWNXT1:		RRCA
		JR NC,LWNXT2  	;BIT 1 NOT SET JR
		SET D5,D
LWNXT2:		RRCA
		JR NC,LWNXT3  	;BIT 2 NOT SET JR
		SET D6,D
LWNXT3:		RRCA
		JR NC,LWNXT4  	;BIT 3 NOT SET JR
		SET D7,D
LWNXT4:		LD A,E
		RRCA
		JR NC,LWNXT5
		SET RS,D
LWNXT5:		;HERE WE HAVE ALL BITS SET TO DRIVE 8574 PINS
		;WE SEND A PULSE TO WRITE THE 4BITS TO LCD
		SET EN,D 	;EN=HIGH
		LD A,D
		CALL LCD16_I2CSEND
		RES EN,D 	;EN=LOW
		LD A,D
		CALL LCD16_I2CSEND
		RET


;A HAS THE BYTE TO SEND
LCD16_I2CSEND:	PUSH DE
		PUSH HL
		LD HL,BUFFER
		LD (HL),A
		LD D,LCDADDR
		LD BC,1
		CALL I2C_WRITE
		POP HL
		POP DE
		RET

;A HAS THE VALUE FOR THE 4 BITS
;E HAS THE COMMAND OR DATA SIGNAL E=1 MEANS DATA E=0 MEANS COMMAND E=2 IS FOUR_BITS
LCD16_SEND:	LD D,A		;SAVE A FOR LATER USE
		LD A,E
		RRCA
		JR C,ISCMDDATA
		RRCA
		JR NC,ISCMDDATA
		;FOUR BITS
		LD E,COMMAND  	;SEND 4 BITS AS COMMAND E=0
		JR LCSD_4BIT		
ISCMDDATA:	LD A,D
		SRL A
		SRL A
		SRL A
		SRL A
		PUSH DE
		CALL LCD16_WR4BITS	;HIGH 4 BITS FIRST
		POP DE
LCSD_4BIT:	LD A,D
		AND $0F
		CALL LCD16_WR4BITS	;LOW 4 BITS NEXT
		RET
		
		
		
;A HAS THE COMMAND TO SEND
LCD16_COMMD:    LD E,COMMAND
		JP LCD16_SEND
		
;A HAS THE DATA TO SEND
LCD16_DATA:	LD E,LCD_DATA
		JP LCD16_SEND



@LCD16_INIT:	LD A,3    		;SET LCD TO 4BIT MODE
		LD E,FOUR_BITS
		CALL LCD16_SEND
		LD BC,$3000
		CALL PAUSE_LOOP  ;DELAY 4,5ms
		LD A,3
		LD E,FOUR_BITS
		CALL LCD16_SEND
		LD BC,$3000
		CALL PAUSE_LOOP  ;DELAY 4,5ms		
		LD A,3
		LD E,FOUR_BITS
		CALL LCD16_SEND
		LD BC,$3000
		CALL PAUSE_LOOP  ;DELAY 4,5ms
		LD A,2		 ;PUT 4 BIT MODE
		LD E,FOUR_BITS
		CALL LCD16_SEND
		LD BC,$3000
		CALL PAUSE_LOOP  ;DELAY 4,5ms
   		;finally, set # lines, font size, etc.
   		LD A,LCD_FUNCTIONSET OR LCD_2LINE
		CALL LCD16_COMMD
		LD A,LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF  
		LD (LCD_DSPCTRL),A   
		CALL LCD16_DISP
   		CALL LCD16_CLR
   		LD A,LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT
   		LD (LCD_DSPMODE),A
   		OR LCD_ENTRYMODESET
   		CALL LCD16_COMMD
		RET
		
@LCD16_NODISP:	LD A,(LCD_DSPCTRL)
   		RES LCD_DISPLAYON,A
   		LD (LCD_DSPCTRL),A
   		OR LCD_DISPLAYCONTROL
   		CALL LCD16_COMMD
		RET
@LCD16_DISP:	LD A,(LCD_DSPCTRL)
   		OR LCD_DISPLAYON
   		LD (LCD_DSPCTRL),A
   		OR LCD_DISPLAYCONTROL
   		CALL LCD16_COMMD
		RET

LCDDELAY:	LD BC,HOME_CLEAR_EXEC
LCLR_AGN1:	PUSH BC		
		CALL DELAYMICRO
		POP BC
		DEC C		
		JP PO,LCLR_AGN1
		RET

@LCD16_CLR:	LD A,LCD_CLEARDISPLAY 	;clear display, set cursor position to zero
		CALL LCD16_COMMD
		CALL LCDDELAY
		RET	
		
;HL POINTS TO ZERO TERMINATED STRING		
@LCD16_PRINT:	LD A,(HL)
		CP 0
		RET Z
		CALL LCD16_DATA
		INC HL
		JR LCD16_PRINT
		
;A HAS THE CHAR TO PRINT		
@LCD16_PRCHR:	CALL LCD16_DATA
		RET

@LCD16_HOME:	LD A,LCD_RETURNHOME
		CALL LCD16_COMMD 
		CALL LCDDELAY		 		
		RET
		
; D HAS THE COLUMN E HAS THE ROW
ROWOFFSET:	DB $00,$40,$14,$54	
@LCD16_SETCURS:	LD B,0
		LD C,E
		LD HL,ROWOFFSET
		ADD HL,BC
		LD A,(HL)
		ADD D
		OR LCD_SETDDRAMADDR
		CALL LCD16_COMMD
		RET
		
@LCD16_CURSOFF:	LD A,(LCD_DSPCTRL)
   		RES LCD_CURSORON,A
   		LD (LCD_DSPCTRL),A
   		OR LCD_DISPLAYCONTROL
   		CALL LCD16_COMMD
		RET
		
				
@LCD16_CURSON:	LD A,(LCD_DSPCTRL)
   		OR LCD_CURSORON
   		LD (LCD_DSPCTRL),A
   		OR LCD_DISPLAYCONTROL
   		CALL LCD16_COMMD
   		RET		
		
@LCD16_BLINKOFF: LD A,(LCD_DSPCTRL)
   		RES LCD_BLINKON,A
   		LD (LCD_DSPCTRL),A
   		OR LCD_DISPLAYCONTROL
   		CALL LCD16_COMMD
		RET
		
				
@LCD16_BLINKON:	LD A,(LCD_DSPCTRL)
   		OR LCD_BLINKON
   		LD (LCD_DSPCTRL),A
   		OR LCD_DISPLAYCONTROL
   		CALL LCD16_COMMD
   		RET		
   		
@LCD16_SCRLEFT:	LD A,LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT
		CALL LCD16_COMMD
		RET
		
@LCD16_SCRRIGHT: LD A,LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT
		CALL LCD16_COMMD
		RET
		
@LCD16_MOVLEFT:	LD A,LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT
		CALL LCD16_COMMD
		RET
		
@LCD16_MOVRIGHT: LD A,LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT
		CALL LCD16_COMMD
		RET

   		




