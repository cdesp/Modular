  3)   0000 00          		 NOP	;
  4)   0001 C3 00 02    		 JP START	;
  5)   0004 C3 E5 02    		 JP MENU	;
  6)   0007 25          		 VERSION DEFB $25    ; AT ADDR=7 VER 2.4	; AT ADDR=7 VER 2.4
  7)   0008 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   000C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0010 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0014 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0018 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   001C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0020 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0024 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0028 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   002C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0030 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0034 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
 10)   0038 C3 75 05    		 JP INTSER	;
 13)   003B 00 00 00 00 		 ALIGN 256	;
 13)   003F 00 00 00 00 		 ALIGN 256	;
 13)   0043 00 00 00 00 		 ALIGN 256	;
 13)   0047 00 00 00 00 		 ALIGN 256	;
 13)   004B 00 00 00 00 		 ALIGN 256	;
 13)   004F 00 00 00 00 		 ALIGN 256	;
 13)   0053 00 00 00 00 		 ALIGN 256	;
 13)   0057 00 00 00 00 		 ALIGN 256	;
 13)   005B 00 00 00 00 		 ALIGN 256	;
 13)   005F 00 00 00 00 		 ALIGN 256	;
 13)   0063 00 00 00 00 		 ALIGN 256	;
 13)   0067 00 00 00 00 		 ALIGN 256	;
 13)   006B 00 00 00 00 		 ALIGN 256	;
 13)   006F 00 00 00 00 		 ALIGN 256	;
 13)   0073 00 00 00 00 		 ALIGN 256	;
 13)   0077 00 00 00 00 		 ALIGN 256	;
 13)   007B 00 00 00 00 		 ALIGN 256	;
 13)   007F 00 00 00 00 		 ALIGN 256	;
 13)   0083 00 00 00 00 		 ALIGN 256	;
 13)   0087 00 00 00 00 		 ALIGN 256	;
 13)   008B 00 00 00 00 		 ALIGN 256	;
 13)   008F 00 00 00 00 		 ALIGN 256	;
 13)   0093 00 00 00 00 		 ALIGN 256	;
 13)   0097 00 00 00 00 		 ALIGN 256	;
 13)   009B 00 00 00 00 		 ALIGN 256	;
 13)   009F 00 00 00 00 		 ALIGN 256	;
 13)   00A3 00 00 00 00 		 ALIGN 256	;
 13)   00A7 00 00 00 00 		 ALIGN 256	;
 13)   00AB 00 00 00 00 		 ALIGN 256	;
 13)   00AF 00 00 00 00 		 ALIGN 256	;
 13)   00B3 00 00 00 00 		 ALIGN 256	;
 13)   00B7 00 00 00 00 		 ALIGN 256	;
 13)   00BB 00 00 00 00 		 ALIGN 256	;
 13)   00BF 00 00 00 00 		 ALIGN 256	;
 13)   00C3 00 00 00 00 		 ALIGN 256	;
 13)   00C7 00 00 00 00 		 ALIGN 256	;
 13)   00CB 00 00 00 00 		 ALIGN 256	;
 13)   00CF 00 00 00 00 		 ALIGN 256	;
 13)   00D3 00 00 00 00 		 ALIGN 256	;
 13)   00D7 00 00 00 00 		 ALIGN 256	;
 13)   00DB 00 00 00 00 		 ALIGN 256	;
 13)   00DF 00 00 00 00 		 ALIGN 256	;
 13)   00E3 00 00 00 00 		 ALIGN 256	;
 13)   00E7 00 00 00 00 		 ALIGN 256	;
 13)   00EB 00 00 00 00 		 ALIGN 256	;
 13)   00EF 00 00 00 00 		 ALIGN 256	;
 13)   00F3 00 00 00 00 		 ALIGN 256	;
 13)   00F7 00 00 00 00 		 ALIGN 256	;
 13)   00FB 00 00 00 00 		 ALIGN 256	;
 13)   00FF 00          		 ALIGN 256	;
 16)   0100 C3 6D 1E    		 JP MYOS_CLRSCN	;
 17)   0103 C3 70 1E    		 JP MYOS_PUTIME	;
 18)   0106 C3 81 1E    		 JP MYOS_GETIME	;
 19)   0109 C3 92 1E    		 JP MYOS_PUTCSR	;
 20)   010C C3 A4 1E    		 JP MYOS_GETCSR	;
 21)   010F C3 B3 1E    		 JP MYOS_OSRDCH	;
 22)   0112 C3 70 20    		 JP MYOS_PROMPT	;
 23)   0115 C3 BE 1E    		 JP MYOS_OSWRCH	;
 24)   0118 C3 9E 20    		 JP MYOS_OSKEY	;
 25)   011B C3 DA 20    		 JP MYOS_OSINIT	;
 26)   011E C3 98 25    		 JP MYOS_OSLINE	;
 27)   0121 C3 A5 21    		 JP MYOS_OSCLI	;
 28)   0124 C3 B1 24    		 JP MYOS_OSBPUT	;
 29)   0127 C3 C1 24    		 JP MYOS_OSBGET	;
 30)   012A C3 EE 24    		 JP MYOS_OSSTAT	;
 31)   012D C3 E9 24    		 JP MYOS_OSSHUT	;
 32)   0130 C3 8A 24    		 JP MYOS_OSOPEN	;
 33)   0133 C3 F5 24    		 JP MYOS_OSCALL	;
 34)   0136 C3 D5 1D    		 JP MYOS_OSSAVE	;
 35)   0139 C3 15 1E    		 JP MYOS_OSLOAD	;
 36)   013C C3 DB 24    		 JP MYOS_GETPTR	;
 37)   013F C3 E0 24    		 JP MYOS_PUTPTR	;
 38)   0142 C3 E4 24    		 JP MYOS_GETEXT	;
 39)   0145 C3 F6 24    		 JP MYOS_RESET	;
 40)   0148 C3 CA 20    		 JP MYOS_TRAP	;
 41)   014B C3 CD 20    		 JP MYOS_LTRAP	;
 42)   014E C3 FE 24    		 JP MYOS_CLG	;
 43)   0151 C3 16 25    		 JP MYOS_COLOUR	;
 44)   0154 C3 21 25    		 JP MYOS_DRAW	;
 45)   0157 C3 47 25    		 JP MYOS_ENVEL	;
 46)   015A C3 0A 25    		 JP MYOS_GCOL	;
 47)   015D C3 F7 24    		 JP MYOS_MODE	;
 48)   0160 C3 2B 25    		 JP MYOS_MOVE	;
 49)   0163 C3 35 25    		 JP MYOS_PLOT	;
 50)   0166 C3 47 25    		 JP MYOS_SOUND	;
 51)   0169 C3 47 25    		 JP MYOS_ADVAL	;
 52)   016C C3 3F 25    		 JP MYOS_POINT	;
 53)   016F C3 4D 25    		 JP MYOS_GETIMS	;
 54)   0172 C3 47 25    		 JP MYOS_PUTIMS	;
 56)   0175 00 00 00 00 		 ALIGN 256	;
 56)   0179 00 00 00 00 		 ALIGN 256	;
 56)   017D 00 00 00 00 		 ALIGN 256	;
 56)   0181 00 00 00 00 		 ALIGN 256	;
 56)   0185 00 00 00 00 		 ALIGN 256	;
 56)   0189 00 00 00 00 		 ALIGN 256	;
 56)   018D 00 00 00 00 		 ALIGN 256	;
 56)   0191 00 00 00 00 		 ALIGN 256	;
 56)   0195 00 00 00 00 		 ALIGN 256	;
 56)   0199 00 00 00 00 		 ALIGN 256	;
 56)   019D 00 00 00 00 		 ALIGN 256	;
 56)   01A1 00 00 00 00 		 ALIGN 256	;
 56)   01A5 00 00 00 00 		 ALIGN 256	;
 56)   01A9 00 00 00 00 		 ALIGN 256	;
 56)   01AD 00 00 00 00 		 ALIGN 256	;
 56)   01B1 00 00 00 00 		 ALIGN 256	;
 56)   01B5 00 00 00 00 		 ALIGN 256	;
 56)   01B9 00 00 00 00 		 ALIGN 256	;
 56)   01BD 00 00 00 00 		 ALIGN 256	;
 56)   01C1 00 00 00 00 		 ALIGN 256	;
 56)   01C5 00 00 00 00 		 ALIGN 256	;
 56)   01C9 00 00 00 00 		 ALIGN 256	;
 56)   01CD 00 00 00 00 		 ALIGN 256	;
 56)   01D1 00 00 00 00 		 ALIGN 256	;
 56)   01D5 00 00 00 00 		 ALIGN 256	;
 56)   01D9 00 00 00 00 		 ALIGN 256	;
 56)   01DD 00 00 00 00 		 ALIGN 256	;
 56)   01E1 00 00 00 00 		 ALIGN 256	;
 56)   01E5 00 00 00 00 		 ALIGN 256	;
 56)   01E9 00 00 00 00 		 ALIGN 256	;
 56)   01ED 00 00 00 00 		 ALIGN 256	;
 56)   01F1 00 00 00 00 		 ALIGN 256	;
 56)   01F5 00 00 00 00 		 ALIGN 256	;
 56)   01F9 00 00 00 00 		 ALIGN 256	;
 56)   01FD 00 00 00    		 ALIGN 256	;
 40)   0200 F3          		@START: DI	;
 50)   0201 C3 45 02    		 JP BOOT        ;SKIP TESTING	;SKIP TESTING
 55)   0204 06 05       		CN1: LD B, 5	;
 56)   0206 0E 00       		AGN1: LD C, 0	;
 57)   0208 3E 00       		 LD A, 0	;
 58)   020A ED 79       		 OUT (C), A	;
 59)   020C 0E 00       		 LD C, 0	;
 60)   020E 3E FF       		 LD A, 255	;
 61)   0210 ED 79       		 OUT (C), A	;
 62)   0212 10 F2       		 DJNZ AGN1	;
 67)   0214 11 01 00    		 LD DE, 1	;
 68)   0217 3E 00       		 LD A, 0        ;WRITE 0	;WRITE 0
 69)   0219 4F          		 LD C, A	;
 70)   021A 21 00 80    		 LD HL, RAMAD	;
 71)   021D 06 08       		 LD B, 8	;
 72)   021F 77          		AGN2: LD (HL), A	;
 73)   0220 4E          		 LD C, (HL)	;
 74)   0221 B9          		 CP C	;
 75)   0222 C2 3C 02    		 JP NZ, ERR	;
 76)   0225 19          		 ADD HL, DE	;
 77)   0226 C6 20       		 ADD A, 32       ;WRITE +32	;WRITE +32
 78)   0228 4F          		 LD C, A	;
 79)   0229 10 F4       		 DJNZ AGN2	;
 81)   022B 06 05       		 LD B, 5	;
 82)   022D 0E 08       		AGN3: LD C, 00001000B       ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
 83)   022F 3E 40       		 LD A, 64	;
 84)   0231 ED 79       		 OUT (C), A	;
 85)   0233 C6 80       		 ADD A, 128	;
 86)   0235 ED 79       		 OUT (C), A	;
 87)   0237 10 F4       		 DJNZ AGN3        ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
 88)   0239 C3 45 02    		 JP BOOT	;
 91)   023C 0E 38       		ERR: LD C, 00111000B       ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
 92)   023E 3E 40       		 LD A, 64	;
 93)   0240 ED 79       		 OUT (C), A	;
 95)   0242 C3 3C 02    		 JP ERR         ;DO AGAIN PORT 1	;DO AGAIN PORT 1
102)   0245 F3          		@BOOT: DI	;
103)   0246 ED 56       		 IM 1	;
106)   0248 0E 00       		MMUSETUP:   LD C,DEVMMU	;
107)   024A AF          		  XOR A	;
108)   024B 06 00       		 LD B,0.SHL.5	;
109)   024D ED 79       		 OUT (C),A	;
110)   024F 3C          		 INC A	;
111)   0250 06 20       		 LD B,1.SHL.5	;
112)   0252 ED 79       		 OUT (C),A  	;
113)   0254 3C          		 INC A	;
114)   0255 06 40       		 LD B,2.SHL.5	;
115)   0257 ED 79       		 OUT (C),A  	;
116)   0259 3C          		 INC A	;
117)   025A 06 60       		 LD B,3.SHL.5	;
118)   025C ED 79       		 OUT (C),A  	;
119)   025E 3C          		 INC A	;
120)   025F 06 80       		 LD B,4.SHL.5	;
121)   0261 ED 79       		 OUT (C),A  	;
122)   0263 3C          		 INC A	;
123)   0264 06 A0       		 LD B,5.SHL.5	;
124)   0266 ED 79       		 OUT (C),A  	;
125)   0268 3C          		 INC A	;
126)   0269 06 C0       		 LD B,6.SHL.5	;
127)   026B ED 79       		 OUT (C),A  	;
128)   026D 3C          		 INC A	;
129)   026E 06 E0       		 LD B,7.SHL.5	;
130)   0270 ED 79       		 OUT (C),A   	;
132)   0272 31 FF FA    		 LD SP, STACKP	;
133)   0275 21 00 FE    		 LD HL,OSVARS       ;ZERO OS VARIABLES	;ZERO OS VARIABLES
134)   0278 AF          		SI_AGN: XOR A	;
135)   0279 77          		 LD (HL),A	;
136)   027A 23          		 INC HL	;
137)   027B 7C          		 LD A,H	;
138)   027C B5          		 OR L	;
139)   027D 20 F9       		 JR NZ,SI_AGN       ;HL=0000 WHEN OVERFLOW FROM FFFF	;HL=0000 WHEN OVERFLOW FROM FFFF
140)   027F CD E0 05    		 CALL INITMMU       ;PUT PAGES 0..7 IN RAM BANKS 0..7	;PUT PAGES 0..7 IN RAM BANKS 0..7
141)   0282 CD E6 03    		 CALL FF_CLR	;
142)   0285 CD 0E 04    		 CALL EPROMOFF	;
143)   0288 CD B2 06    		 CALL KEYBDATON	;
146)   028B 3E 0C       		 LD A, 12        ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
147)   028D CD 14 06    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
148)   0290 21 26 05    		 LD HL, STR00	;
149)   0293 CD 3C 06    		 CALL RS_TXT	;
152)   0296 CD E4 0B    		 CALL I2C_INIT        ;INITIALIZE I2C	;INITIALIZE I2C
153)   0299 CD 70 0D    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
154)   029C CD 45 0E    		 CALL LCD16_INIT       ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
155)   029F 21 3A 04    		 LD HL, SVER	;
156)   02A2 CD C6 0E    		 CALL LCD16_PRINT       ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
159)   02A5 CD BF 09    		 CALL STRG_INIT	;
160)   02A8 21 5D 05    		 LD HL, STR001	;
161)   02AB CD 3C 06    		 CALL RS_TXT	;
169)   02AE CD 59 0F    		 CALL LCD_INIT	;
170)   02B1 21 00 00    		 LD HL, COL_BLACK	;
171)   02B4 22 03 FE    		 LD (BCOLOR), HL	;
172)   02B7 21 FF FF    		 LD HL, COL_WHITE	;
173)   02BA 22 01 FE    		 LD (FCOLOR), HL	;
174)   02BD 21 13 05    		 LD HL, STRSCR	;
175)   02C0 CD 3C 06    		 CALL RS_TXT	;
176)   02C3 CD 67 17    		 CALL LCD_CLRSCR	;
177)   02C6 AF          		 XOR A	;
178)   02C7 32 0F FE    		 LD (SCRLN), A	;
179)   02CA 3E 00       		 LD A, 0	;
180)   02CC 32 0D FE    		 LD (CURSORX), A	;
181)   02CF 3E 00       		 LD A, 0	;
182)   02D1 32 0E FE    		 LD (CURSORY), A	;
183)   02D4 21 6F 04    		 LD HL, STR0        ;LCD INIT MSG ON 0,0	;LCD INIT MSG ON 0,0
184)   02D7 CD A7 17    		 CALL LCD_MSG	;
185)   02DA 3E 1E       		 LD A, 30	;
186)   02DC 32 0D FE    		 LD (CURSORX), A	;
187)   02DF 21 3A 04    		 LD HL, SVER	;
188)   02E2 CD A7 17    		 CALL LCD_MSG        ;PRINT VERSION ON 30,0	;PRINT VERSION ON 30,0
196)   02E5 AF          		@MENU: XOR A	;
197)   02E6 32 0F FE    		 LD (SCRLN), A	;
198)   02E9 21 E4 04    		 LD HL, STRMN	;
199)   02EC CD 3C 06    		 CALL RS_TXT       ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
200)   02EF 21 3C 05    		 LD HL, STR01	;
201)   02F2 CD 3C 06    		 CALL RS_TXT       ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
208)   02F5 21 4A 04    		 LD HL, SMENU	;
209)   02F8 3E 05       		 LD A, 5	;
210)   02FA 32 0D FE    		 LD (CURSORX), A	;
211)   02FD 3E 02       		 LD A, 2	;
212)   02FF 32 0E FE    		 LD (CURSORY), A	;
213)   0302 CD A7 17    		 CALL LCD_MSG	;
215)   0305 CD 46 03    		 CALL GET_CHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
218)   0308 FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
219)   030A CC 64 03    		 CALL Z, UPLOD	;
220)   030D FE 58       		 CP 'X'	;
221)   030F CA 5B 03    		 JP Z, EXEC	;
222)   0312 FE 54       		 CP 'T'	;
223)   0314 CC B4 03    		 CALL Z, RSTST	;
224)   0317 FE 59       		 CP 'Y'	;
225)   0319 CC CA 03    		 CALL Z, RSTST2	;
226)   031C FE 48       		 CP 'H'	;
227)   031E CC D9 03    		 CALL Z, XMTST	;
228)   0321 FE 4A       		 CP 'J'	;
229)   0323 CC 99 03    		 CALL Z, DNLOD	;
232)   0326 FE 43       		 CP 'C'	;
233)   0328 CC 67 17    		 CALL Z, LCD_CLRSCR	;
234)   032B FE 42       		 CP 'B'	;
235)   032D CA 00 40    		 JP Z, BBCBASIC	;
237)   0330 C3 E5 02    		 JP MENU	;
244)   0333 CD 6E 25    		@GET_CHARNW: CALL CHKCURS	;
245)   0336 AF          		 XOR A	;
247)   0337 CD 6F 06    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
248)   033A 28 04       		 JR Z, CNW_TST2	;
249)   033C CD 46 06    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
250)   033F C9          		 RET	;
254)   0340 CD 88 07    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
255)   0343 FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
266)   0345 C9          		 RET	;
271)   0346 CD 6E 25    		@GET_CHAR: CALL CHKCURS	;
272)   0349 AF          		 XOR A	;
274)   034A CD 6F 06    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
275)   034D 28 04       		 JR Z, CW_TST2	;
276)   034F CD 46 06    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
277)   0352 C9          		 RET	;
281)   0353 CD 88 07    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
282)   0356 FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
283)   0358 28 EC       		 JR Z, GET_CHAR	;
293)   035A C9          		 RET	;
304)   035B 3E 05       		 LD A, 5	;
305)   035D CD BF 26    		 CALL SCPRN	;
307)   0360 2A A4 FE    		 LD HL, (PRGEX)	;
314)   0363 E9          		 JP (HL)	;
321)   0364 F3          		UPLOD: DI	;
326)   0365 CD 46 06    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
327)   0368 6F          		 LD L, A	;
328)   0369 CD 46 06    		 CALL RS_RX	;
329)   036C 67          		 LD H, A	;
330)   036D CD 46 06    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
331)   0370 4F          		 LD C, A	;
332)   0371 CD 46 06    		 CALL RS_RX	;
333)   0374 47          		 LD B, A	;
335)   0375 22 A4 FE    		 LD (PRGEX), HL	;
336)   0378 3A A5 FE    		 LD A, (PRGEX + 1)	;
344)   037B FE 80       		 CP $80	;
345)   037D DC 16 04    		 CALL C, EPROMON       ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
347)   0380 E5          		NORWR: PUSH HL	;
348)   0381 CD 46 06    		NXB: CALL RS_RX	;
349)   0384 77          		 LD (HL), A	;
350)   0385 23          		 INC HL	;
351)   0386 0B          		 DEC BC	;
352)   0387 78          		 LD A, B	;
353)   0388 B1          		 OR C	;
354)   0389 20 F6       		 JR NZ, NXB       ;LOOP ALL BYTES	;LOOP ALL BYTES
355)   038B CD 0E 04    		 CALL EPROMOFF	;
360)   038E 3E 05       		 LD A, 5	;
361)   0390 CD BF 26    		 CALL SCPRN	;
362)   0393 CD CC 26    		 CALL DELAY	;
364)   0396 E1          		 POP HL	;
367)   0397 FB          		 EI	;
368)   0398 C9          		 RET	;
379)   0399 CD 46 06    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
380)   039C 6F          		 LD L, A	;
381)   039D CD 46 06    		 CALL RS_RX	;
382)   03A0 67          		 LD H, A	;
383)   03A1 CD 46 06    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
384)   03A4 4F          		 LD C, A	;
385)   03A5 CD 46 06    		 CALL RS_RX	;
386)   03A8 47          		 LD B, A	;
388)   03A9 7E          		NXB3: LD A, (HL)	;
389)   03AA CD 2D 06    		 CALL RS_TX       ;SEND BYTE	;SEND BYTE
390)   03AD 23          		 INC HL	;
391)   03AE 0B          		 DEC BC	;
392)   03AF 78          		 LD A, B	;
393)   03B0 B1          		 OR C	;
394)   03B1 20 F6       		 JR NZ, NXB3       ;LOOP ALL BYTES	;LOOP ALL BYTES
395)   03B3 C9          		 RET	;
397)   03B4 00          		RSTST: NOP        ;GET A KEY FROM RS232	;GET A KEY FROM RS232
398)   03B5 06 0A       		 LD B, 10	;
399)   03B7 C5          		TEN: PUSH BC	;
400)   03B8 CD 46 06    		 CALL RS_RX	;
402)   03BB CD 2D 06    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
404)   03BE 3E 20       		 LD A, ' '	;
406)   03C0 3E 52       		 LD A, 'R'	;
409)   03C2 CD D9 26    		 CALL DEL2	;
411)   03C5 C1          		 POP BC	;
412)   03C6 10 EF       		 DJNZ TEN	;
414)   03C8 AF          		 XOR A	;
415)   03C9 C9          		 RET	;
417)   03CA 00          		RSTST2: NOP        ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
418)   03CB 06 FF       		 LD B, 255	;
419)   03CD C5          		TEN2: PUSH BC	;
420)   03CE CD 46 06    		 CALL RS_RX	;
422)   03D1 CD 2D 06    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
424)   03D4 C1          		 POP BC	;
425)   03D5 10 F6       		 DJNZ TEN2	;
426)   03D7 AF          		 XOR A	;
427)   03D8 C9          		 RET	;
430)   03D9 00          		XMTST: NOP        ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
431)   03DA 06 FF       		 LD B, 255	;
432)   03DC C5          		TEN3: PUSH BC	;
433)   03DD 78          		 LD A, B	;
434)   03DE CD 2D 06    		 CALL RS_TX       ;SEND  THE BYTE	;SEND  THE BYTE
435)   03E1 C1          		 POP BC	;
436)   03E2 10 F8       		 DJNZ TEN3	;
437)   03E4 AF          		 XOR A	;
438)   03E5 C9          		 RET	;
444)   03E6 AF          		 XOR A	;
445)   03E7 32 9D FE    		 LD (FFSTAT), A	;
446)   03EA C9          		 RET	;
449)   03EB 04          		@FF_OFF: INC B        ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
450)   03EC AF          		 XOR A	;
451)   03ED 37          		 SCF	;
452)   03EE 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
453)   03EF 10 FD       		 DJNZ SBAGN	;
454)   03F1 2F          		 CPL         ;INVERSE BITS ON A	;INVERSE BITS ON A
455)   03F2 47          		 LD B, A	;
456)   03F3 3A 9D FE    		 LD A, (FFSTAT)	;
457)   03F6 A0          		 AND B         ;ZERO THE BIT	;ZERO THE BIT
458)   03F7 32 9D FE    		 LD (FFSTAT), A	;
459)   03FA D3 08       		 OUT (DEVFFS), A	;
460)   03FC C9          		 RET	;
463)   03FD 04          		@FF_ON: INC B         ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
464)   03FE AF          		 XOR A	;
465)   03FF 37          		 SCF	;
466)   0400 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
467)   0401 10 FD       		 DJNZ SBAGN	;
468)   0403 47          		 LD B, A	;
469)   0404 3A 9D FE    		 LD A, (FFSTAT)	;
470)   0407 B0          		 OR B         ;SET THE BIT	;SET THE BIT
471)   0408 32 9D FE    		 LD (FFSTAT), A	;
472)   040B D3 08       		 OUT (DEVFFS), A	;
473)   040D C9          		 RET	;
475)   040E C5          		@EPROMOFF: PUSH BC	;
476)   040F 06 00       		 LD B, 0	;
477)   0411 CD EB 03    		 CALL FF_OFF	;
478)   0414 C1          		 POP BC	;
479)   0415 C9          		 RET	;
481)   0416 C5          		@EPROMON: PUSH BC	;
482)   0417 06 00       		 LD B, 0	;
483)   0419 CD FD 03    		 CALL FF_ON	;
484)   041C C1          		 POP BC	;
485)   041D C9          		 RET	;
491)   041E F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
492)   041F 26 00       		 LD H, 0	;
493)   0421 6F          		 LD L, A	;
494)   0422 11 AC FE    		 LD DE, MYNUM	;
495)   0425 CD F3 26    		 CALL OUTASC	;
497)   0428 3E 0A       		 LD A, 10	;
498)   042A 12          		 LD (DE), A	;
499)   042B 13          		 INC DE	;
500)   042C 3E 0D       		 LD A, 13	;
501)   042E 12          		 LD (DE), A	;
502)   042F 13          		 INC DE	;
503)   0430 AF          		 XOR A	;
504)   0431 12          		 LD (DE), A	;
506)   0432 21 AC FE    		 LD HL, MYNUM	;
507)   0435 CD 3C 06    		 CALL RS_TXT	;
508)   0438 F1          		 POP AF	;
509)   0439 C9          		 RET	;
514)   043A 41 54 4C 41 		SVER: DEFM "ATLAS OS V "	;
514)   043E 53 20 4F 53 		SVER: DEFM "ATLAS OS V "	;
514)   0442 20 56 20    		SVER: DEFM "ATLAS OS V "	;
515)   0445 30 2E 32 38 		 DB MJVER,'.',MNVER1,MNVER2	;
516)   0449 00          		 DB 0	;
518)   044A 55 3A 55 50 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
518)   044E 20 4A 3A 44 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
518)   0452 4E 20 58 3A 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
518)   0456 52 55 4E 20 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
518)   045A 54 59 48 3A 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
518)   045E 52 53 20 43 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
518)   0462 3A 43 4C 53 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
518)   0466 20 42 3A 42 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
518)   046A 41 53 49 43 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
519)   046E 00          		 DB 0	;
521)   046F 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
521)   0473 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
521)   0477 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
521)   047B 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
522)   047E 00          		 DB 0	;
524)   047F 52 53 32 33 		STR1: DEFM "RS232 INIT"	;
524)   0483 32 20 49 4E 		STR1: DEFM "RS232 INIT"	;
524)   0487 49 54       		STR1: DEFM "RS232 INIT"	;
525)   0489 00          		 DB 0	;
527)   048A 50 52 4F 47 		STR2: DEFM "PROGRAM HALTED"	;
527)   048E 52 41 4D 20 		STR2: DEFM "PROGRAM HALTED"	;
527)   0492 48 41 4C 54 		STR2: DEFM "PROGRAM HALTED"	;
527)   0496 45 44       		STR2: DEFM "PROGRAM HALTED"	;
528)   0498 00          		 DB 0	;
530)   0499 57 41 49 54 		STR02: DEFM "WAITING..."	;
530)   049D 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
530)   04A1 2E 2E       		STR02: DEFM "WAITING..."	;
531)   04A3 00          		 DB 0	;
533)   04A4 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
533)   04A8 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
533)   04AC 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
533)   04B0 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
534)   04B2 00          		 DB 0	;
536)   04B3 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
536)   04B7 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
536)   04BB 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
537)   04BF 00          		 DB 0	;
539)   04C0 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
539)   04C4 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
539)   04C8 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
540)   04CB 00          		 DB 0	;
542)   04CC 49 4D 41 47 		STIMG: DEFM "IMAGE COPY"	;
542)   04D0 45 20 43 4F 		STIMG: DEFM "IMAGE COPY"	;
542)   04D4 50 59       		STIMG: DEFM "IMAGE COPY"	;
543)   04D6 00          		 DB 0	;
545)   04D7 53 43 52 45 		TXTMES: DEFM "SCREEN READY"	;
545)   04DB 45 4E 20 52 		TXTMES: DEFM "SCREEN READY"	;
545)   04DF 45 41 44 59 		TXTMES: DEFM "SCREEN READY"	;
546)   04E3 00          		 DB 0	;
548)   04E4 55 49 3A 55 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   04E8 50 20 4A 3A 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   04EC 44 4E 20 58 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   04F0 3A 52 55 4E 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   04F4 20 54 59 48 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   04F8 3A 52 53 20 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   04FC 53 3A 44 49 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   0500 53 50 20 43 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   0504 3A 43 4C 53 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   0508 20 42 3A 42 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
548)   050C 41 53 49 43 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
549)   0510 0A 0D 00    		 DB 10,13,0	;
551)   0513 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
551)   0517 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
551)   051B 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
551)   051F 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
552)   0523 0A 0D 00    		 DB 10,13,0	;
554)   0526 0A 0D       		STR00: DB 10,13	;
555)   0528 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
555)   052C 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
555)   0530 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
555)   0534 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
555)   0538 44          		 DEFM "RS232 INITIALIZED"	;
556)   0539 0A 0D 00    		 DB 10,13,0	;
558)   053C 0A 0D       		STR01: DB 10,13	;
559)   053E 57 41 49 54 		 DEFM "WAITING..."	;
559)   0542 49 4E 47 2E 		 DEFM "WAITING..."	;
559)   0546 2E 2E       		 DEFM "WAITING..."	;
560)   0548 0A 0D 00    		 DB 10,13,0	;
561)   054B 00          		 DB 0	;
563)   054C 0A 0D       		STR06: DB 10,13	;
564)   054E 4B 45 59 20 		 DEFM "KEY PRESSED"	;
564)   0552 50 52 45 53 		 DEFM "KEY PRESSED"	;
564)   0556 53 45 44    		 DEFM "KEY PRESSED"	;
565)   0559 0A 0D 00    		 DB 10,13,0	;
566)   055C 00          		 DB 0	;
568)   055D 0A 0D       		STR001: DB 10,13	;
569)   055F 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
569)   0563 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
569)   0567 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
569)   056B 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
569)   056F 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
570)   0572 0A 0D 00    		 DB 10,13,0	;
  2)   0575 E5          		 PUSH HL	;
  3)   0576 F5          		 PUSH AF	;
  4)   0577 C5          		 PUSH BC	;
  5)   0578 DD E5       		 PUSH IX	;
  9)   057A DB 18       		 IN A, (DEVINP)	;
 10)   057C 2F          		 CPL	;
 11)   057D E6 07       		 AND 0X07       ;BITS 0-2	;BITS 0-2
 12)   057F 3D          		 DEC A         ;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE	;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE
 13)   0580 DD 21 9E 05 		 LD IX, MYINTADDR	;
 14)   0584 06 00       		 LD B, 0	;
 15)   0586 4F          		 LD C, A	;
 16)   0587 CB 21       		 SLA C        ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 17)   0589 DD 09       		 ADD IX, BC	;
 18)   058B DD 6E 00    		 LD L, (IX)	;
 19)   058E DD 66 01    		 LD H, (IX + 1)	;
 20)   0591 01 96 05    		 LD BC, IS_EX	;
 21)   0594 C5          		 PUSH BC        ;RETURN ADDRESS	;RETURN ADDRESS
 22)   0595 E9          		 JP (HL)        ;JP TO HL	;JP TO HL
 24)   0596 DD E1       		IS_EX: POP IX	;
 25)   0598 C1          		 POP BC	;
 26)   0599 F1          		 POP AF	;
 27)   059A E1          		 POP HL	;
 28)   059B FB          		 EI	;
 29)   059C ED 4D       		 RETI	;
 31)   059E BA 05       		MYINTADDR: DEFW INT_TIMER	;
 32)   05A0 AE 05       		 DEFW SAVETE	;
 33)   05A2 B7 05       		 DEFW DOCLRINT	;
 34)   05A4 B7 05       		 DEFW DOCLRINT	;
 35)   05A6 B7 05       		 DEFW DOCLRINT	;
 36)   05A8 B7 05       		 DEFW DOCLRINT	;
 37)   05AA B7 05       		 DEFW DOCLRINT	;
 38)   05AC B7 05       		 DEFW DOCLRINT	;
 40)   05AE D3 40       		SAVETE: OUT (DEVINT), A       ;CLEAR THE INTERRUPT	;CLEAR THE INTERRUPT
 41)   05B0 21 AB FE    		 LD HL, INT2TE        ;TEARING EFFECT	;TEARING EFFECT
 42)   05B3 3E 01       		 LD A, 1	;
 43)   05B5 77          		 LD (HL),A        ;	;
 44)   05B6 C9          		 RET	;
 47)   05B7 D3 40       		DOCLRINT: OUT (DEVINT), A	;
 48)   05B9 C9          		 RET	;
 50)   05BA D3 40       		INT_TIMER: OUT (DEVINT), A	;
 51)   05BC 21 A7 FE    		 LD HL, TIMECTR	;
 52)   05BF 34          		 INC (HL)	;
 53)   05C0 7E          		 LD A, (HL)	;
 54)   05C1 FE 00       		 CP 0	;
 55)   05C3 C0          		 RET NZ	;
 56)   05C4 23          		 INC HL	;
 57)   05C5 34          		 INC (HL)	;
 58)   05C6 7E          		 LD A, (HL)	;
 59)   05C7 FE 00       		 CP 0	;
 60)   05C9 C0          		 RET NZ	;
 61)   05CA 23          		 INC HL	;
 62)   05CB 34          		 INC (HL)	;
 63)   05CC 7E          		 LD A, (HL)	;
 64)   05CD FE 00       		 CP 0	;
 65)   05CF C0          		 RET NZ	;
 66)   05D0 23          		 INC HL	;
 67)   05D1 34          		 INC (HL)	;
 68)   05D2 7E          		 LD A, (HL)	;
 69)   05D3 FE 00       		 CP 0	;
 70)   05D5 C0          		 RET NZ	;
 72)   05D6 21 00 00    		 LD HL, 0	;
 73)   05D9 22 A7 FE    		 LD (TIMECTR), HL	;
 74)   05DC 22 A9 FE    		 LD (TIMECTR + 2), HL	;
 75)   05DF C9          		 RET	;
  8)   05E0 21 E7 FE    		INITMMU:       LD HL,BANKS	;
  9)   05E3 06 08       		               LD B,8	;
 10)   05E5 AF          		               XOR A	;
 11)   05E6 77          		INM_AGN:       LD (HL),A	;
 12)   05E7 3C          		               INC A	;
 13)   05E8 10 FC       		               DJNZ INM_AGN	;
 14)   05EA C9          		               RET                	;
 19)   05EB 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 20)   05EC 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 21)   05ED FE 01       		 CP 1	;
 22)   05EF D0          		 RET NC         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 23)   05F0 FE 07       		 CP 7	;
 24)   05F2 C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 25)   05F3 21 E7 FE    		 LD HL, BANKS	;
 26)   05F6 16 00       		 LD D, 0	;
 27)   05F8 5F          		 LD E, A	;
 28)   05F9 19          		 ADD HL, DE	;
 29)   05FA 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 30)   05FB 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 31)   05FC 0E 00       		 LD C, DEVMMU	;
 32)   05FE CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 33)   0600 CB 20       		 SLA B	;
 34)   0602 CB 20       		 SLA B	;
 35)   0604 CB 20       		 SLA B	;
 36)   0606 CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 37)   0608 ED 79       		 OUT (C), A	;
 38)   060A C9          		 RET	;
 42)   060B 21 E7 FE    		GETPGINBANK    LD HL,BANKS	;
 43)   060E 16 00       		               LD D,0	;
 44)   0610 58          		               LD E,B	;
 45)   0611 19          		               ADD HL,DE	;
 46)   0612 7E          		               LD A,(HL)	;
 47)   0613 C9          		               RET	;
 15)   0614 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   0614 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   0614 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   0614 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   0614 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   0614 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   0614 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 44)   0614 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   0614 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   0614 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   0614 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   0614 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   0614 F5          		RS_INI: PUSH AF	;
 63)   0615 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 64)   0617 D3 23       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 73)   0619 F1          		 POP AF	;
 74)   061A D3 20       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 75)   061C 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   061E D3 21       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 77)   0620 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   0622 D3 23       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 80)   0624 3E 00       		 LD A, 0	;
 81)   0626 D3 22       		 OUT (FCR), A        ;//was commented	;//was commented
 82)   0628 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   062A D3 21       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 84)   062C C9          		 RET	;
 87)   062D CD 33 06    		RS_TX: CALL RSTXRD	;
 88)   0630 D3 20       		 OUT (THR), A	;
 90)   0632 C9          		 RET	;
 94)   0633 F5          		RSTXRD: PUSH AF	;
 95)   0634 DB 25       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 96)   0636 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   0638 28 FA       		 JR Z, RSTXLP	;
 98)   063A F1          		 POP AF	;
 99)   063B C9          		 RET	;
102)   063C 7E          		RS_TXT: LD A, (HL)	;
103)   063D 23          		 INC HL	;
104)   063E FE 00       		 CP 0	;
105)   0640 C8          		 RET Z	;
106)   0641 CD 2D 06    		 CALL RS_TX	;
107)   0644 18 F6       		 JR RS_TXT	;
114)   0646 F3          		RS_RX: DI	;
115)   0647 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   0649 D3 24       		 OUT (MCR), A	;
117)   064B CD 64 06    		 CALL RSRXRD	;
118)   064E AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   064F D3 24       		 OUT (MCR), A	;
121)   0651 DB 20       		 IN A, (RBR)	;
122)   0653 FB          		 EI	;
123)   0654 C9          		 RET	;
125)   0655 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   0657 D3 24       		 OUT (MCR), A	;
127)   0659 DB 25       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
128)   065B CB 47       		 BIT 0, A	;
129)   065D 28 03       		 JR Z, RS_NOCHAR	;
130)   065F F3          		 DI	;
131)   0660 18 EC       		 JR RS_GTCH	;
132)   0662 AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
133)   0663 C9          		 RET	;
140)   0664 F3          		RSRXRD: DI	;
141)   0665 F5          		 PUSH AF	;
142)   0666 DB 25       		RSRXLP: IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
143)   0668 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
144)   066A 28 FA       		 JR Z, RSRXLP	;
145)   066C F1          		 POP AF	;
146)   066D FB          		 EI	;
147)   066E C9          		 RET	;
151)   066F DB 25       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
152)   0671 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
153)   0673 C9          		 RET	;
155)   0674 F5          		SHLCD: PUSH AF	;
157)   0675 F1          		 POP AF	;
159)   0676 C9          		 RET	;
163)   0677 F5          		CHKERR: PUSH AF	;
164)   0678 E5          		 PUSH HL	;
165)   0679 C5          		 PUSH BC	;
166)   067A DB 25       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
167)   067C CB 67       		 BIT 4, A	;
168)   067E 28 04       		 JR Z, LBLPE	;
169)   0680 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
170)   0682 18 1A       		 JR EXIT	;
171)   0684 CB 57       		LBLPE: BIT 2, A	;
172)   0686 28 04       		 JR Z, LBLFE	;
173)   0688 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
174)   068A 18 12       		 JR EXIT	;
175)   068C CB 5F       		LBLFE: BIT 3, A	;
176)   068E 28 04       		 JR Z, LBLOE	;
177)   0690 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
178)   0692 18 0A       		 JR EXIT	;
179)   0694 CB 4F       		LBLOE: BIT 1, A	;
180)   0696 28 04       		 JR Z, LBLNE	;
181)   0698 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
182)   069A 18 02       		 JR EXIT	;
183)   069C 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
184)   069E 21 9F FE    		EXIT: LD HL, SERERR	;
185)   06A1 77          		 LD (HL), A	;
187)   06A2 C1          		 POP BC	;
188)   06A3 E1          		 POP HL	;
189)   06A4 F1          		 POP AF	;
190)   06A5 C9          		 RET	;
 15)   06A6 	            		 DEVKBI EQU DEVINP      ; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP	; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP
 21)   06A6 06 01       		@KEYBCLKON: LD B, UKB_OUT_CLK	;
 22)   06A8 CD EB 03    		 CALL FF_OFF	;
 23)   06AB C9          		 RET	;
 25)   06AC 06 01       		@KEYBCLKOFF: LD B, UKB_OUT_CLK	;
 26)   06AE CD FD 03    		 CALL FF_ON	;
 27)   06B1 C9          		 RET	;
 29)   06B2 06 02       		@KEYBDATON: LD B, UKB_OUT_DAT	;
 30)   06B4 CD EB 03    		 CALL FF_OFF	;
 31)   06B7 C9          		 RET	;
 33)   06B8 06 02       		@KEYBDATOFF: LD B, UKB_OUT_DAT	;
 34)   06BA CD FD 03    		 CALL FF_ON	;
 35)   06BD C9          		 RET	;
 37)   06BE CD A6 06    		PS2ISK: CALL KEYBCLKON        ;KEYBOARD ENABLED	;KEYBOARD ENABLED
 38)   06C1 06 46       		 LD B, SAMP        ;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)	;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)
 39)   06C3 DB 18       		CHAG: IN A, (DEVKBI)	;
 40)   06C5 57          		 LD D, A	;
 41)   06C6 CB 77       		 BIT UKB_IN_CLK, A      ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 42)   06C8 28 08       		 JR Z, KEYOK	;
 43)   06CA 10 F7       		 DJNZ CHAG	;
 45)   06CC 3E 01       		PS2NTP: LD A, 1        ;SET A TO 1 MEANS NO KEY AVAILABLE	;SET A TO 1 MEANS NO KEY AVAILABLE
 46)   06CE CD AC 06    		 CALL KEYBCLKOFF	;
 47)   06D1 C9          		 RET	;
 48)   06D2 AF          		KEYOK: XOR A        ;SET A TO 0 MEANS WE HAVE A KEY	;SET A TO 0 MEANS WE HAVE A KEY
 49)   06D3 C9          		 RET	;
 52)   06D4 06 46       		WAITFORHIGH: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 53)   06D6 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 54)   06D7 DB 18       		WH1: IN A, (DEVKBI)	;
 55)   06D9 57          		 LD D, A	;
 56)   06DA CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 57)   06DC C0          		 RET NZ	;
 58)   06DD 10 F8       		 DJNZ WH1	;
 59)   06DF 37          		 SCF	;
 60)   06E0 C9          		 RET	;
 62)   06E1 06 46       		WAITFORLOW1: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 63)   06E3 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 64)   06E4 DB 18       		WL1: IN A, (DEVKBI)	;
 65)   06E6 57          		 LD D, A	;
 66)   06E7 CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 67)   06E9 C8          		 RET Z	;
 68)   06EA 10 F8       		 DJNZ WL1	;
 69)   06EC 37          		 SCF	;
 70)   06ED C9          		 RET	;
 72)   06EE CD E1 06    		WAITFORLOW: CALL WAITFORLOW1	;
 73)   06F1 D8          		 RET C	;
 74)   06F2 DB 18       		 IN A, (DEVKBI)        ;SOME MORE TIMES TO BE SURE	;SOME MORE TIMES TO BE SURE
 75)   06F4 DB 18       		 IN A, (DEVKBI)	;
 76)   06F6 57          		 LD D, A	;
 77)   06F7 C9          		 RET	;
 79)   06F8 F3          		@NEWBYTE: DI	;
 80)   06F9 7A          		 LD A, D        ;BIT 7 HAS THE DATA	;BIT 7 HAS THE DATA
 81)   06FA CB 7F       		 BIT UKB_IN_DAT, A	;
 82)   06FC 20 2D       		 JR NZ, ERROR0       ;ALWAYS START WITH 0	;ALWAYS START WITH 0
 83)   06FE 06 08       		 LD B, 8	;
 84)   0700 48          		NXTBIT: LD C, B        ;SAVE B	;SAVE B
 85)   0701 CD D4 06    		 CALL WAITFORHIGH	;
 86)   0704 D8          		 RET C	;
 87)   0705 CD EE 06    		 CALL WAITFORLOW	;
 88)   0708 D8          		 RET C	;
 89)   0709 CB 27       		 SLA A        ;BIT 7=DATA IS ON C FLAG	;BIT 7=DATA IS ON C FLAG
 90)   070B CB 1B       		 RR E        ;CARRY GOES TO BIT 7 OF E	;CARRY GOES TO BIT 7 OF E
 91)   070D 41          		 LD B, C        ;RESTORE C	;RESTORE C
 92)   070E 10 F0       		 DJNZ NXTBIT	;
 93)   0710 CD D4 06    		 CALL WAITFORHIGH	;
 94)   0713 D8          		 RET C	;
 95)   0714 CD EE 06    		 CALL WAITFORLOW	;
 96)   0717 D8          		 RET C	;
 98)   0718 CD D4 06    		 CALL WAITFORHIGH	;
 99)   071B D8          		 RET C	;
100)   071C CD EE 06    		 CALL WAITFORLOW	;
101)   071F D8          		 RET C	;
102)   0720 CB 7F       		 BIT UKB_IN_DAT, A	;
103)   0722 28 10       		 JR Z, ERROR1       ;ALWAYS ENDS WITH 1	;ALWAYS ENDS WITH 1
104)   0724 CD D4 06    		 CALL WAITFORHIGH       ;WAIT FOR END OF TRANSMITION	;WAIT FOR END OF TRANSMITION
105)   0727 D8          		 RET C	;
107)   0728 7B          		 LD A, E	;
108)   0729 FB          		 EI	;
109)   072A C9          		 RET	;
110)   072B 21 40 07    		ERROR0: LD HL, MSER4	;
111)   072E CD 3C 06    		 CALL RS_TXT	;
112)   0731 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
113)   0732 FB          		 EI	;
114)   0733 C9          		 RET	;
115)   0734 D5          		ERROR1: PUSH DE	;
116)   0735 21 55 07    		 LD HL, MSER5	;
117)   0738 CD 3C 06    		 CALL RS_TXT	;
118)   073B 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
119)   073C D1          		 POP DE	;
120)   073D 7B          		 LD A, E        ;MAYBE IGNORE THIS	;MAYBE IGNORE THIS
121)   073E FB          		 EI	;
122)   073F C9          		 RET	;
123)   0740 4B 42 5F 45 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0744 52 52 3A 20 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0748 53 54 41 52 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   074C 54 20 42 49 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0750 54 2E       		MSER4: DEFM "KB_ERR: START BIT."	;
124)   0752 0A 0D 00    		 DB 10,13,0	;
125)   0755 4B 42 5F 45 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   0759 52 52 3A 20 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   075D 53 54 4F 50 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   0761 20 42 49 54 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   0765 2E          		MSER5: DEFM "KB_ERR: STOP BIT."	;
126)   0766 0A 0D 00    		 DB 10,13,0	;
128)   0769 01 0A 00    		PS2KEY: LD BC, 10	;
129)   076C 0B          		PS2AGN: DEC BC	;
130)   076D 78          		 LD A, B	;
131)   076E B1          		 OR C	;
132)   076F 28 0F       		 JR Z, PS2TIMEOUT	;
133)   0771 C5          		 PUSH BC	;
134)   0772 CD BE 06    		 CALL PS2ISK	;
135)   0775 B7          		 OR A	;
136)   0776 C1          		 POP BC	;
137)   0777 20 F3       		 JR NZ, PS2AGN       ;NO KEY YET	;NO KEY YET
139)   0779 CD F8 06    		 CALL NEWBYTE	;
140)   077C 38 02       		 JR C, PS2TIMEOUT      ;ERROR SO INVALIDATE A	;ERROR SO INVALIDATE A
141)   077E 18 02       		 JR PS2EX	;
142)   0780 AF          		PS2TIMEOUT: XOR A       ;0 CODE IS INVALID	;0 CODE IS INVALID
143)   0781 FB          		 EI	;
144)   0782 F5          		PS2EX: PUSH AF	;
145)   0783 CD AC 06    		 CALL KEYBCLKOFF	;
146)   0786 F1          		 POP AF	;
147)   0787 C9          		 RET	;
150)   0788 CD 90 07    		READCHAR: CALL GTKEY	;
151)   078B C8          		 RET Z	;
152)   078C CD 4F 08    		 CALL PS2LOK	;
153)   078F C9          		 RET	;
156)   0790 CD 69 07    		@GTKEY: CALL PS2KEY       ;GET A KEY FROM PS2	;GET A KEY FROM PS2
157)   0793 FE E1       		 CP $E1         ;BREAK KEY	;BREAK KEY
158)   0795 CC BC 07    		 CALL Z, GTBRK	;
159)   0798 FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
160)   079A CC 00 08    		 CALL Z, GTREL	;
161)   079D FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
162)   079F CC C6 07    		 CALL Z, GTEXT	;
165)   07A2 FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
166)   07A4 CC 2B 08    		 CALL Z, SHFTOG	;
167)   07A7 FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
168)   07A9 CC 2B 08    		 CALL Z, SHFTOG	;
169)   07AC FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
170)   07AE CC 34 08    		 CALL Z, CTRTOG	;
171)   07B1 FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
172)   07B3 CC 3D 08    		 CALL Z, ALTTOG	;
173)   07B6 FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
174)   07B8 CC 46 08    		 CALL Z, CAPSTOG	;
177)   07BB C9          		 RET	;
179)   07BC CD 69 07    		GTBRK: CALL PS2KEY       ;$14 OR $F0	;$14 OR $F0
180)   07BF FE F0       		 CP $F0	;
181)   07C1 C8          		 RET Z	;
182)   07C2 CD 69 07    		 CALL PS2KEY       ;$77	;$77
183)   07C5 C9          		 RET	;
185)   07C6 CD 69 07    		GTEXT: CALL PS2KEY       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
186)   07C9 FE 6B       		 CP $6B         ;LEFT	;LEFT
187)   07CB C8          		 RET Z	;
188)   07CC FE 72       		 CP $72        ;DOWN	;DOWN
189)   07CE C8          		 RET Z	;
190)   07CF FE 74       		 CP $74        ;RIGHT	;RIGHT
191)   07D1 C8          		 RET Z	;
192)   07D2 FE 75       		 CP $75        ;UP	;UP
193)   07D4 C8          		 RET Z	;
194)   07D5 FE 70       		 CP $70        ;INSERT	;INSERT
195)   07D7 C8          		 RET Z	;
196)   07D8 FE 6C       		 CP $6C        ;HOME	;HOME
197)   07DA C8          		 RET Z	;
198)   07DB FE 7D       		 CP $7D        ;PG UP	;PG UP
199)   07DD C8          		 RET Z	;
200)   07DE FE 7A       		 CP $7A        ;PG DN	;PG DN
201)   07E0 C8          		 RET Z	;
202)   07E1 FE 69       		 CP $69        ;END	;END
203)   07E3 C8          		 RET Z	;
204)   07E4 FE 71       		 CP $71        ;DEL	;DEL
205)   07E6 C8          		 RET Z	;
206)   07E7 FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
207)   07E9 C8          		 RET Z	;
208)   07EA FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
209)   07EC C8          		 RET Z	;
210)   07ED FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
211)   07EF C8          		 RET Z	;
212)   07F0 FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
213)   07F2 C8          		 RET Z	;
214)   07F3 FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
215)   07F5 C8          		 RET Z	;
216)   07F6 FE F0       		 CP $F0	;
217)   07F8 C2 FE 07    		 JP NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
218)   07FB CD 69 07    		 CALL PS2KEY       ; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT	; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT
220)   07FE AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
221)   07FF C9          		 RET	;
224)   0800 CD 69 07    		GTREL: CALL PS2KEY       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
225)   0803 FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
226)   0805 CC 19 08    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
227)   0808 FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
228)   080A CC 1F 08    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
229)   080D FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
230)   080F CC 25 08    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
231)   0812 FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
232)   0814 CC 19 08    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
233)   0817 AF          		 XOR A         ; NO KEY	; NO KEY
234)   0818 C9          		 RET	;
236)   0819 21 9E FE    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
237)   081C CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
238)   081E C9          		 RET	;
240)   081F 21 9E FE    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
241)   0822 CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
242)   0824 C9          		 RET	;
244)   0825 21 9E FE    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
245)   0828 CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
246)   082A C9          		 RET	;
248)   082B 21 9E FE    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
249)   082E 3E 40       		 LD A, $40       ; MASK	; MASK
250)   0830 AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
251)   0831 77          		 LD (HL), A       ; SAVE	; SAVE
252)   0832 AF          		 XOR A         ; NO KEY	; NO KEY
253)   0833 C9          		 RET	;
255)   0834 21 9E FE    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
256)   0837 3E 80       		 LD A, $80       ; MASK	; MASK
257)   0839 AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
258)   083A 77          		 LD (HL), A       ; SAVE	; SAVE
259)   083B AF          		 XOR A         ; NO KEY	; NO KEY
260)   083C C9          		 RET	;
262)   083D 21 9E FE    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
263)   0840 3E 20       		 LD A, $20	;
264)   0842 AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
265)   0843 77          		 LD (HL), A       ; SAVE	; SAVE
266)   0844 AF          		 XOR A         ; NO KEY	; NO KEY
267)   0845 C9          		 RET	;
269)   0846 21 9E FE    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
270)   0849 3E 10       		 LD A, $10	;
271)   084B AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
272)   084C 77          		 LD (HL), A       ; SAVE	; SAVE
273)   084D AF          		 XOR A         ; NO KEY	; NO KEY
274)   084E C9          		 RET	;
277)   084F 21 9E FE    		@PS2LOK: LD HL, KEYCTR	;
278)   0852 47          		 LD B, A        ; SAVE A	; SAVE A
279)   0853 7E          		 LD A, (HL)       ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
280)   0854 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
281)   0855 CB 1F       		 RR A	;
282)   0857 CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
283)   0859 A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
284)   085A CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED	;CHECK IF BIT 4 IS 0 = UNSHIFTED
285)   085C 78          		 LD A, B        ;RESTORE A	;RESTORE A
290)   085D 21 6B 08    		 LD HL, PS2TAB1       ;UNSHIFTED	;UNSHIFTED
291)   0860 28 03       		 JR Z, PLK1	;
292)   0862 21 15 09    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
293)   0865 06 00       		PLK1: LD B, 0	;
294)   0867 4F          		 LD C, A	;
295)   0868 09          		 ADD HL, BC	;
296)   0869 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
297)   086A C9          		 RET	;
301)   086B 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
301)   086F 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
301)   0873 00 00       		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
302)   0875 00 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
302)   0879 60 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
302)   087D 00 00       		 DB 0,0,0,0,'`',0,0,0,0,0	;
303)   087F 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   0883 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   0887 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
304)   0889 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
304)   088D 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
304)   0891 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
305)   0893 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   0897 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   089B 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
306)   089D 62 68 67 6D 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   08A1 36 00 00 2C 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   08A5 6D 6A       		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
307)   08A7 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
307)   08AB 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
307)   08AF 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
308)   08B1 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
308)   08B5 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
308)   08B9 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
309)   08BB 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
309)   08BF 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
309)   08C3 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
310)   08C5 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
310)   08C9 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
310)   08CD 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
311)   08CF 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
311)   08D3 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
311)   08D7 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
312)   08D9 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
312)   08DD 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
312)   08E1 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
313)   08E3 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
313)   08E7 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
313)   08EB 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
314)   08ED 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
314)   08F1 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
314)   08F5 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
315)   08F7 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
315)   08FB 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
315)   08FF 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
316)   0901 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
316)   0905 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
316)   0909 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
317)   090B 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
317)   090F 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
317)   0913 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
320)   0915 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
320)   0919 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
320)   091D 00 00       		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
321)   091F 00 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
321)   0923 7E 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
321)   0927 00 00       		 DB 0,0,0,0,'~',0,0,0,0,0	;
322)   0929 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   092D 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   0931 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
323)   0933 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
323)   0937 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
323)   093B 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
324)   093D 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   0941 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   0945 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
325)   0947 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
325)   094B 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
325)   094F 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
326)   0951 55 5E 2A 00 		 DB 'U','^','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
326)   0955 00 3C 4B 49 		 DB 'U','^','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
326)   0959 4F 29       		 DB 'U','^','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
327)   095B 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
327)   095F 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
327)   0963 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
328)   0965 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
328)   0969 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
328)   096D 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
329)   096F 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
329)   0973 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
329)   0977 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
330)   0979 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
330)   097D 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
330)   0981 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
331)   0983 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
331)   0987 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
331)   098B 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
332)   098D 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
332)   0991 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
332)   0995 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
333)   0997 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
333)   099B 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
333)   099F 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
334)   09A1 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
334)   09A5 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
334)   09A9 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
335)   09AB 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
335)   09AF 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
335)   09B3 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
336)   09B5 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
336)   09B9 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
336)   09BD 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 46)   09BF 3E 03       		STRG_INIT: LD A, 3       ;38400 BPS	;38400 BPS
 47)   09C1 CD 4B 0B    		 CALL STOR_INI	;
 48)   09C4 C9          		 RET	;
 51)   09C5 21 E1 FE    		NEWCMD: LD HL, STRGCMD	;
 52)   09C8 77          		 LD (HL), A	;
 53)   09C9 23          		 INC HL	;
 54)   09CA E5          		 PUSH HL	;
 55)   09CB AF          		 XOR A	;
 56)   09CC 06 03       		 LD B, 3	;
 57)   09CE 77          		CCAGN: LD (HL), A	;
 58)   09CF 23          		 INC HL	;
 59)   09D0 10 FC       		 DJNZ CCAGN	;
 60)   09D2 E1          		 POP HL         ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 61)   09D3 C9          		 RET	;
 64)   09D4 CD AC 0B    		SENDCMD: CALL FLUSHREC	;
 65)   09D7 21 E1 FE    		 LD HL, STRGCMD	;
 66)   09DA 06 04       		 LD B, 4	;
 67)   09DC 7E          		NXTBT: LD A, (HL)	;
 68)   09DD CD 7B 0B    		 CALL STOR_TX	;
 69)   09E0 23          		 INC HL	;
 70)   09E1 10 F9       		 DJNZ NXTBT	;
 71)   09E3 C9          		 RET	;
 73)   09E4 3E 01       		STRG_OPENCRD: LD A, OPENCARD	;
 74)   09E6 CD C5 09    		 CALL NEWCMD	;
 75)   09E9 CD D4 09    		 CALL SENDCMD	;
 76)   09EC CD D9 26    		 CALL DEL2	;
 77)   09EF CD 8E 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
 78)   09F2 FE C9       		 CP FCMDOKTST	;
 79)   09F4 3F          		 CCF	;
 80)   09F5 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
 85)   09F6 F5          		STRG_GETEOF: PUSH AF	;
 86)   09F7 3E 0D       		 LD A, ENDOFFILE	;
 87)   09F9 CD C5 09    		 CALL NEWCMD	;
 88)   09FC F1          		 POP AF	;
 89)   09FD 77          		 LD (HL), A       ;FID	;FID
 90)   09FE CD D4 09    		 CALL SENDCMD	;
 92)   0A01 CD 8E 0B    		 CALL STOR_RX       ;GET EOF	;GET EOF
 93)   0A04 FE C9       		 CP FCMDOKTST	;
 94)   0A06 3F          		 CCF	;
 95)   0A07 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
100)   0A08 F5          		STRG_GETSIZE: PUSH AF	;
101)   0A09 3E 0C       		 LD A, FILESIZE	;
102)   0A0B 18 03       		 JR GT2BYTES	;
107)   0A0D F5          		STRG_GETPOS: PUSH AF	;
108)   0A0E 3E 09       		 LD A, POSITIONG	;
109)   0A10 CD C5 09    		GT2BYTES: CALL NEWCMD	;
110)   0A13 F1          		 POP AF	;
111)   0A14 77          		 LD (HL), A       ;FID	;FID
112)   0A15 CD D4 09    		 CALL SENDCMD	;
114)   0A18 CD 8E 0B    		 CALL STOR_RX       ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
115)   0A1B 67          		 LD H, A	;
116)   0A1C CD 8E 0B    		 CALL STOR_RX       ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
117)   0A1F 6F          		 LD L, A	;
118)   0A20 CD 8E 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
119)   0A23 FE C9       		 CP FCMDOKTST	;
120)   0A25 3F          		 CCF	;
121)   0A26 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
127)   0A27 EB          		STRG_SETPOS: EX DE, HL	;
128)   0A28 F5          		 PUSH AF	;
129)   0A29 3E 08       		 LD A, POSITIONS	;
130)   0A2B CD C5 09    		 CALL NEWCMD	;
131)   0A2E F1          		 POP AF	;
132)   0A2F 77          		 LD (HL), A       ;FID	;FID
133)   0A30 23          		 INC HL	;
134)   0A31 72          		 LD (HL), D       ;NEW POS ON DE	;NEW POS ON DE
135)   0A32 23          		 INC HL	;
136)   0A33 73          		 LD (HL), E	;
137)   0A34 CD D4 09    		 CALL SENDCMD	;
138)   0A37 CD D9 26    		 CALL DEL2	;
139)   0A3A CD 8E 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
140)   0A3D FE C9       		 CP FCMDOKTST	;
141)   0A3F 3F          		 CCF	;
142)   0A40 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
147)   0A41 3E 0A       		STRG_DIRLIST: LD A, LISTDIR	;
148)   0A43 CD C5 09    		 CALL NEWCMD	;
149)   0A46 CD D4 09    		 CALL SENDCMD	;
150)   0A49 CD D9 26    		 CALL DEL2	;
152)   0A4C 11 B9 FE    		 LD DE, STRGBUFF	;
153)   0A4F CD 8E 0B    		NXTCHR: CALL STOR_RX	;
154)   0A52 FE FF       		 CP 255	;
155)   0A54 28 05       		 JR Z, DIROUT	;
157)   0A56 CD A2 15    		 CALL LCD_PRINTCHAR	;
158)   0A59 18 F4       		 JR NXTCHR	;
159)   0A5B CD D9 26    		DIROUT: CALL DEL2	;
160)   0A5E CD 8E 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
161)   0A61 FE C9       		 CP FCMDOKTST	;
162)   0A63 3F          		 CCF	;
163)   0A64 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
167)   0A65 CD 84 0B    		SENDFNAME: CALL STOR_TXT      ;SEND FILENAME	;SEND FILENAME
168)   0A68 AF          		 XOR A	;
169)   0A69 CD 7B 0B    		 CALL STOR_TX	;
170)   0A6C C9          		 RET	;
173)   0A6D 3E 0B       		STRG_DIRCHG: LD A, CHANGEDIR	;
174)   0A6F CD C5 09    		 CALL NEWCMD	;
175)   0A72 CD D4 09    		 CALL SENDCMD	;
176)   0A75 21 B9 FE    		 LD HL, STRGBUFF	;
177)   0A78 CD 65 0A    		 CALL SENDFNAME	;
178)   0A7B CD D9 26    		 CALL DEL2	;
179)   0A7E CD 8E 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
180)   0A81 FE C9       		 CP FCMDOKTST	;
181)   0A83 3F          		 CCF	;
182)   0A84 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
186)   0A85 F5          		STRG_OPNFILE: PUSH AF	;
187)   0A86 3E 02       		 LD A, OPENFILE	;
188)   0A88 CD C5 09    		 CALL NEWCMD	;
189)   0A8B F1          		 POP AF	;
190)   0A8C 77          		 LD (HL), A       ;FID	;FID
191)   0A8D CD D4 09    		 CALL SENDCMD	;
192)   0A90 21 B9 FE    		 LD HL, STRGBUFF	;
193)   0A93 CD 65 0A    		 CALL SENDFNAME	;
194)   0A96 CD D9 26    		 CALL DEL2	;
195)   0A99 CD 8E 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
197)   0A9C 32 E5 FE    		 LD (FID), A	;
198)   0A9F FE C9       		 CP FCMDOKTST	;
199)   0AA1 3F          		 CCF	;
200)   0AA2 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
203)   0AA3 F5          		STRG_CLSFILE: PUSH AF	;
204)   0AA4 3E 03       		 LD A, CLOSEFILE	;
205)   0AA6 CD C5 09    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
206)   0AA9 F1          		 POP AF	;
207)   0AAA 77          		 LD (HL), A       ;FID	;FID
208)   0AAB CD D4 09    		 CALL SENDCMD	;
209)   0AAE CD 8E 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
210)   0AB1 FE C9       		 CP FCMDOKTST	;
211)   0AB3 3F          		 CCF	;
212)   0AB4 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
218)   0AB5 F5          		STRG_BLKWRITE: PUSH AF	;
219)   0AB6 3E 07       		 LD A, WRITEBLOCK	;
220)   0AB8 CD C5 09    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
221)   0ABB F1          		 POP AF	;
222)   0ABC 77          		 LD (HL), A       ;FID	;FID
223)   0ABD 23          		 INC HL	;
225)   0ABE 78          		 LD A, B        ;BYTES HI	;BYTES HI
226)   0ABF 77          		 LD (HL), A	;
227)   0AC0 23          		 INC HL	;
228)   0AC1 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
229)   0AC2 77          		 LD (HL), A	;
230)   0AC3 CD D4 09    		 CALL SENDCMD        ;SEND BLOCKWRITE COMMAND BC BYTES	;SEND BLOCKWRITE COMMAND BC BYTES
231)   0AC6 EB          		 EX DE, HL	;
232)   0AC7 7E          		BWNXCH: LD A, (HL)	;
233)   0AC8 CD 7B 0B    		 CALL STOR_TX	;
234)   0ACB 23          		 INC HL	;
235)   0ACC 0B          		 DEC BC	;
236)   0ACD 78          		 LD A, B	;
237)   0ACE B1          		 OR C	;
238)   0ACF 20 F6       		 JR NZ, BWNXCH	;
239)   0AD1 CD 8E 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
240)   0AD4 FE C9       		 CP FCMDOKTST	;
241)   0AD6 3F          		 CCF	;
242)   0AD7 C9          		 RET	;
250)   0AD8 F5          		STRG_BLKREAD: PUSH AF	;
251)   0AD9 3E 06       		 LD A, READBLOCK	;
252)   0ADB CD C5 09    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
253)   0ADE F1          		 POP AF	;
254)   0ADF 77          		 LD (HL), A       ;FID	;FID
255)   0AE0 23          		 INC HL	;
256)   0AE1 78          		 LD A, B        ;BYTES HI	;BYTES HI
257)   0AE2 77          		 LD (HL), A	;
258)   0AE3 23          		 INC HL	;
259)   0AE4 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
260)   0AE5 77          		 LD (HL), A	;
261)   0AE6 CD D4 09    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
262)   0AE9 CD D9 26    		 CALL DEL2	;
263)   0AEC CD 8E 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
264)   0AEF 47          		 LD B, A	;
265)   0AF0 CD 8E 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
266)   0AF3 4F          		 LD C, A	;
267)   0AF4 78          		 LD A, B	;
268)   0AF5 B1          		 OR C	;
269)   0AF6 28 13       		 JR Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
271)   0AF8 C5          		 PUSH BC        ;SAVE BYTES TO RECEIVE	;SAVE BYTES TO RECEIVE
272)   0AF9 CD 8E 0B    		OFNXCH: CALL STOR_RX	;
273)   0AFC 12          		 LD (DE), A	;
274)   0AFD 13          		 INC DE	;
275)   0AFE 0B          		 DEC BC	;
276)   0AFF 78          		 LD A, B	;
277)   0B00 B1          		 OR C	;
278)   0B01 20 F6       		 JR NZ, OFNXCH	;
279)   0B03 CD 8E 0B    		OFEXIT: CALL STOR_RX        ;GET RESULT	;GET RESULT
280)   0B06 C1          		 POP BC         ;TOTAL BYTES RECEIVED	;TOTAL BYTES RECEIVED
281)   0B07 FE C9       		 CP FCMDOKTST	;
282)   0B09 3F          		 CCF	;
283)   0B0A C9          		 RET	;
285)   0B0B 18 F6       		 JR OFEXIT	;
289)   0B0D F5          		STRG_TPFILE: PUSH AF	;
290)   0B0E 3E 06       		 LD A, READBLOCK	;
291)   0B10 CD C5 09    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
292)   0B13 F1          		 POP AF	;
293)   0B14 77          		 LD (HL), A       ;FID	;FID
294)   0B15 23          		 INC HL	;
295)   0B16 78          		 LD A, B        ;BYTES HI	;BYTES HI
296)   0B17 77          		 LD (HL), A	;
297)   0B18 23          		 INC HL	;
298)   0B19 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
299)   0B1A 77          		 LD (HL), A	;
300)   0B1B CD D4 09    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
301)   0B1E CD D9 26    		 CALL DEL2	;
302)   0B21 CD 8E 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
303)   0B24 47          		 LD B, A	;
304)   0B25 CD 8E 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
305)   0B28 4F          		 LD C, A	;
306)   0B29 78          		 LD A, B	;
307)   0B2A B1          		 OR C	;
308)   0B2B CA 0B 0B    		 JP Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
310)   0B2E 3E 0D       		 LD A, 13	;
311)   0B30 C5          		 PUSH BC	;
312)   0B31 CD A2 15    		 CALL LCD_PRINTCHAR	;
313)   0B34 C1          		 POP BC	;
314)   0B35 CD 8E 0B    		TFOFNXCH: CALL STOR_RX       ;GET THE CHAR	;GET THE CHAR
315)   0B38 C5          		 PUSH BC	;
316)   0B39 CD A2 15    		 CALL LCD_PRINTCHAR       ;PRINT TO SCREEN	;PRINT TO SCREEN
317)   0B3C C1          		 POP BC	;
318)   0B3D 0B          		 DEC BC	;
319)   0B3E 78          		 LD A, B	;
320)   0B3F B1          		 OR C	;
321)   0B40 20 F3       		 JR NZ, TFOFNXCH	;
322)   0B42 CD 8E 0B    		TFOFEXIT: CALL STOR_RX       ;GET RESULT	;GET RESULT
323)   0B45 FE C9       		 CP FCMDOKTST	;
324)   0B47 3F          		 CCF	;
325)   0B48 C9          		 RET         ;C SET IF ERROR	;C SET IF ERROR
328)   0B49 18 F7       		 JR TFOFEXIT	;
350)   0B4B 	            		 RBR EQU DEVSTOR+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
351)   0B4B 	            		 THR EQU DEVSTOR+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
352)   0B4B 	            		 IER EQU DEVSTOR+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
357)   0B4B 	            		 IIR EQU DEVSTOR+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
362)   0B4B 	            		 FCR EQU DEVSTOR+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
370)   0B4B 	            		 LCR EQU DEVSTOR+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
378)   0B4B 	            		 MCR EQU DEVSTOR+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
379)   0B4B 	            		 LSR EQU DEVSTOR+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
388)   0B4B 	            		 MSR EQU DEVSTOR+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
389)   0B4B 	            		 SCR EQU DEVSTOR+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
390)   0B4B 	            		 DLL EQU DEVSTOR+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
391)   0B4B 	            		 DLM EQU DEVSTOR+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
395)   0B4B F5          		STOR_INI: PUSH AF	;
396)   0B4C 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
397)   0B4E D3 33       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
405)   0B50 F1          		 POP AF	;
406)   0B51 D3 30       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
407)   0B53 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
408)   0B55 D3 31       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
409)   0B57 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
410)   0B59 D3 33       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
412)   0B5B 3E 00       		 LD A, 0	;
413)   0B5D D3 32       		 OUT (FCR), A        ;//was commented	;//was commented
414)   0B5F 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
415)   0B61 D3 31       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
416)   0B63 AF          		 XOR A         ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
417)   0B64 D3 34       		 OUT (MCR), A	;
418)   0B66 C9          		 RET	;
424)   0B67 F5          		STORTXRD: PUSH AF	;
425)   0B68 DB 35       		STORTXLP: IN A, (LSR)       ; fetch the control register	; fetch the control register
426)   0B6A CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
427)   0B6C 28 FA       		 JR Z, STORTXLP	;
428)   0B6E F1          		 POP AF	;
429)   0B6F C9          		 RET	;
432)   0B70 F5          		WAITCTSLOW: PUSH AF	;
433)   0B71 DB 36       		TSTAGN: IN A, (MSR)	;
434)   0B73 CB 67       		 BIT 4, A        ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
435)   0B75 20 02       		 JR NZ, WCLEX	;
436)   0B77 18 F8       		 JR TSTAGN	;
437)   0B79 F1          		WCLEX: POP AF	;
438)   0B7A C9          		 RET	;
444)   0B7B CD 70 0B    		 CALL WAITCTSLOW	;
449)   0B7E CD 67 0B    		 CALL STORTXRD	;
454)   0B81 D3 30       		 OUT (THR), A	;
455)   0B83 C9          		 RET	;
458)   0B84 7E          		STOR_TXT: LD A, (HL)	;
459)   0B85 23          		 INC HL	;
460)   0B86 FE 00       		 CP 0	;
461)   0B88 C8          		 RET Z	;
462)   0B89 CD 7B 0B    		 CALL STOR_TX	;
463)   0B8C 18 F6       		 JR STOR_TXT	;
470)   0B8E F3          		STOR_RX: DI	;
471)   0B8F 3E 02       		 LD A, 2        ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
472)   0B91 D3 34       		 OUT (MCR), A	;
473)   0B93 CD B7 0B    		 CALL STORRXRD	;
474)   0B96 AF          		STOR_GTCH: XOR A        ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
475)   0B97 D3 34       		 OUT (MCR), A	;
476)   0B99 DB 30       		 IN A, (RBR)	;
477)   0B9B FB          		 EI	;
478)   0B9C C9          		 RET	;
480)   0B9D 3E 02       		STOR_RXNW: LD A, 2       ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
481)   0B9F D3 34       		 OUT (MCR), A	;
482)   0BA1 DB 35       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
483)   0BA3 CB 47       		 BIT 0, A	;
484)   0BA5 28 03       		 JR Z, STOR_NOCHAR	;
485)   0BA7 F3          		 DI	;
486)   0BA8 18 EC       		 JR STOR_GTCH	;
487)   0BAA AF          		STOR_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
488)   0BAB C9          		 RET	;
490)   0BAC 06 0A       		FLUSHREC: LD B, 10	;
491)   0BAE CD 9D 0B    		FRAGN: CALL STOR_RXNW	;
492)   0BB1 10 FB       		 DJNZ FRAGN	;
493)   0BB3 AF          		 XOR A	;
494)   0BB4 D3 34       		 OUT (MCR), A	;
495)   0BB6 C9          		 RET	;
501)   0BB7 F3          		STORRXRD: DI	;
502)   0BB8 F5          		 PUSH AF	;
503)   0BB9 DB 35       		STORRXLP: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
504)   0BBB CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
505)   0BBD 28 FA       		 JR Z, STORRXLP	;
506)   0BBF F1          		 POP AF	;
507)   0BC0 FB          		 EI	;
508)   0BC1 C9          		 RET	;
512)   0BC2 DB 35       		STOR_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
513)   0BC4 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
514)   0BC6 C9          		 RET	;
  8)   0BC7 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  9)   0BC7 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
 10)   0BC7 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 11)   0BC7 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 12)   0BC7 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 57)   0BC7 C5          		I2C_RDSTAT_WT: PUSH BC	;
 58)   0BC8 01 00 20    		 LD BC, $2000	;
 59)   0BCB DB 4B       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 60)   0BCD CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 61)   0BCF 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 62)   0BD1 0B          		 DEC BC	;
 63)   0BD2 78          		 LD A, B	;
 64)   0BD3 B1          		 OR C	;
 65)   0BD4 20 F5       		 JR NZ, I2CRWT_AGN	;
 66)   0BD6 C1          		I2CRWT_OK: POP BC	;
 67)   0BD7 DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 68)   0BD9 C9          		 RET	;
 70)   0BDA DB 4B       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 71)   0BDC CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 72)   0BDE 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 73)   0BE0 C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 74)   0BE1 DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 75)   0BE3 C9          		 RET	;
 78)   0BE4 3E 01       		I2C_INIT: LD A, I2CADR	;
 79)   0BE6 D3 48       		 OUT (DI2C_INDPTR), A	;
 80)   0BE8 3E E0       		 LD A, $E0	;
 81)   0BEA D3 4A       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 83)   0BEC 3E 40       		 LD A, $40        ;INIT	;INIT
 84)   0BEE D3 4B       		 OUT (DI2C_CON), A      ;	;
 85)   0BF0 06 FA       		 LD B, 250	;
 86)   0BF2 CD C6 26    		 CALL DELAYMICRO	;
 87)   0BF5 06 FA       		 LD B, 250	;
 88)   0BF7 CD C6 26    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 93)   0BFA 3E 06       		 LD A, I2CMODE	;
 94)   0BFC D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 95)   0BFE 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 96)   0C00 D3 4A       		 OUT (DI2C_INDIR), A	;
 97)   0C02 3E 02       		 LD A, I2CSCLL	;
 98)   0C04 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 99)   0C06 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
100)   0C08 D3 4A       		 OUT (DI2C_INDIR), A	;
101)   0C0A 3E 03       		 LD A, I2CSCLH	;
102)   0C0C D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
103)   0C0E 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
104)   0C10 D3 4A       		 OUT (DI2C_INDIR), A	;
106)   0C12 C9          		 RET	;
113)   0C13 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
114)   0C15 D3 4B       		 OUT (DI2C_CON), A	;
115)   0C17 CD C7 0B    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
116)   0C1A 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
117)   0C1B FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
118)   0C1D 28 21       		 JR Z, WRB_S1	;
119)   0C1F FE 10       		 CP MASTER_RESTART_TXed	;
120)   0C21 28 1D       		 JR Z, WRB_S1	;
121)   0C23 FE 28       		 CP MASTER_DATA_W_ACK	;
122)   0C25 28 26       		 JR Z, WRB_S2	;
123)   0C27 FE 18       		 CP MASTER_SLA_W_ACK	;
124)   0C29 28 23       		 JR Z, WRB_S3	;
125)   0C2B FE 20       		 CP MASTER_SLA_W_NAK	;
126)   0C2D 28 2D       		 JR Z, WRB_EXIT	;
127)   0C2F FE 30       		 CP MASTER_DATA_W_NAK	;
128)   0C31 28 29       		 JR Z, WRB_EXIT	;
129)   0C33 FE 38       		 CP MASTER_ARB_LOST	;
130)   0C35 C8          		 RET Z	;
131)   0C36 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
132)   0C38 C8          		 RET Z	;
133)   0C39 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
134)   0C3B C8          		 RET Z	;
135)   0C3C FE D8       		 CP SLAVE_GENERALCALL_AL	;
136)   0C3E C8          		 RET Z	;
137)   0C3F C9          		 RET	;
139)   0C40 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
140)   0C41 CB 27       		 SLA A	;
141)   0C43 E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
142)   0C45 D3 49       		 OUT (DI2C_DAT), A	;
143)   0C47 3E 40       		 LD A, $40	;
144)   0C49 D3 4B       		 OUT (DI2C_CON), A	;
145)   0C4B 18 CA       		 JR WRB_LP1	;
146)   0C4D 0B          		WRB_S2: DEC BC	;
147)   0C4E 78          		WRB_S3: LD A, B	;
148)   0C4F B1          		 OR C	;
149)   0C50 28 0A       		 JR Z, WRB_EXIT	;
150)   0C52 7E          		 LD A, (HL)	;
151)   0C53 23          		 INC HL	;
152)   0C54 D3 49       		 OUT (DI2C_DAT), A	;
153)   0C56 3E 40       		 LD A, $40	;
154)   0C58 D3 4B       		 OUT (DI2C_CON), A	;
155)   0C5A 18 BB       		 JR WRB_LP1	;
157)   0C5C 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
158)   0C5E D3 4B       		 OUT (DI2C_CON), A	;
159)   0C60 78          		 LD A, B	;
160)   0C61 B1          		 OR C	;
161)   0C62 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
167)   0C63 78          		I2C_RD_BYTE: LD A, B	;
168)   0C64 B1          		 OR C	;
169)   0C65 C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
170)   0C66 3E 60       		 LD A, $60	;
171)   0C68 D3 4B       		 OUT (DI2C_CON), A	;
172)   0C6A CD C7 0B    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
173)   0C6D 1E 00       		 LD E, 0	;
174)   0C6F FE 08       		 CP MASTER_START_TXed	;
175)   0C71 28 1F       		 JR Z, RDB_S1	;
177)   0C73 28 1D       		 JR Z, RDB_S1	;
178)   0C75 FE 58       		 CP MASTER_DATA_R_NAK	;
179)   0C77 28 26       		 JR Z, RDB_S2	;
180)   0C79 FE 50       		 CP MASTER_DATA_R_ACK	;
181)   0C7B 28 24       		 JR Z, RDB_S3	;
182)   0C7D FE 40       		 CP MASTER_SLA_R_ACK	;
183)   0C7F 28 25       		 JR Z, RDB_S4	;
184)   0C81 FE 48       		 CP MASTER_SLA_R_NAK	;
185)   0C83 28 38       		 JR Z, RDB_EXIT	;
186)   0C85 FE 38       		 CP MASTER_ARB_LOST	;
187)   0C87 C8          		 RET Z	;
188)   0C88 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
189)   0C8A C8          		 RET Z	;
190)   0C8B FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
191)   0C8D C8          		 RET Z	;
192)   0C8E FE D8       		 CP SLAVE_GENERALCALL_AL	;
193)   0C90 C8          		 RET Z	;
194)   0C91 C9          		 RET	;
197)   0C92 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
198)   0C93 CB 27       		 SLA A	;
199)   0C95 F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
200)   0C97 D3 49       		 OUT (DI2C_DAT), A	;
201)   0C99 3E 40       		 LD A, $40	;
202)   0C9B D3 4B       		 OUT (DI2C_CON), A	;
203)   0C9D 18 CB       		 JR RDB_LP1	;
204)   0C9F 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
205)   0CA1 DB 49       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
206)   0CA3 77          		 LD (HL), A	;
207)   0CA4 23          		 INC HL	;
208)   0CA5 0B          		 DEC BC	;
209)   0CA6 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
210)   0CA7 B1          		 OR C	;
211)   0CA8 28 13       		 JR Z, RDB_EXIT	;
212)   0CAA 7B          		 LD A, E	;
213)   0CAB FE 01       		 CP 1	;
214)   0CAD 28 0E       		 JR Z, RDB_EXIT	;
215)   0CAF 78          		 LD A, B	;
216)   0CB0 81          		 ADD C	;
217)   0CB1 FE 01       		 CP 1	;
218)   0CB3 3E 40       		 LD A, $40	;
219)   0CB5 28 02       		 JR Z, RDB_NXT1	;
220)   0CB7 3E C0       		 LD A, $C0	;
221)   0CB9 D3 4B       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
222)   0CBB 18 AD       		 JR RDB_LP1	;
224)   0CBD 3E 50       		RDB_EXIT: LD A, $50	;
225)   0CBF D3 4B       		 OUT (DI2C_CON), A	;
226)   0CC1 78          		 LD A, B	;
227)   0CC2 B1          		 OR C	;
228)   0CC3 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
 26)   0CC4 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 26)   0CC8 61 79       		 SUN DEFM  "Sunday"	;
 27)   0CCA 00          		 DB 0	;
 28)   0CCB 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 28)   0CCF 61 79       		 MON DEFM  "Monday"	;
 29)   0CD1 00          		 DB 0	;
 30)   0CD2 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 30)   0CD6 64 61 79    		 TUE DEFM  "Tuesday"	;
 31)   0CD9 00          		 DB 0	;
 32)   0CDA 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 32)   0CDE 65 73 64 61 		 WED DEFM  "Wednesday"	;
 32)   0CE2 79          		 WED DEFM  "Wednesday"	;
 33)   0CE3 00          		 DB 0	;
 34)   0CE4 54 68 75 72 		 THU DEFM  "Thursday"	;
 34)   0CE8 73 64 61 79 		 THU DEFM  "Thursday"	;
 35)   0CEC 00          		 DB 0	;
 36)   0CED 46 72 69 64 		 FRI DEFM  "Friday"	;
 36)   0CF1 61 79       		 FRI DEFM  "Friday"	;
 37)   0CF3 00          		 DB 0	;
 38)   0CF4 53 61 74 75 		 SAT DEFM  "Saturday"	;
 38)   0CF8 72 64 61 79 		 SAT DEFM  "Saturday"	;
 39)   0CFC 00          		 DB 0	;
 41)   0CFD C4 0C       		 DAYS DEFW SUN	;
 42)   0CFF CB 0C       		 DEFW MON	;
 43)   0D01 D2 0C       		 DEFW TUE	;
 44)   0D03 DA 0C       		 DEFW WED	;
 45)   0D05 E4 0C       		 DEFW THU	;
 46)   0D07 ED 0C       		 DEFW FRI	;
 47)   0D09 F4 0C       		 DEFW SAT	;
 49)   0D0B 45 52 52 4F 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D0F 52 20 4F 4E 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D13 20 52 45 43 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D17 45 49 56 49 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D1B 4E 47       		 MESERR DEFM "ERROR ON RECEIVING"	;
 50)   0D1D 0A 0D 00    		 DEFB 10,13,0	;
 52)   0D20 45 52 52 4F 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0D24 52 20 4F 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0D28 20 53 45 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0D2C 44 49 4E 47 		 MESERR0 DEFM "ERROR ON SENDING"	;
 53)   0D30 0A 0D 00    		 DEFB 10,13,0	;
 55)   0D33 7B          		SHERR0: LD A, E	;
 56)   0D34 C5          		 PUSH BC	;
 57)   0D35 CD 1E 04    		 CALL SOUTAS	;
 58)   0D38 C1          		 POP BC	;
 59)   0D39 79          		 LD A, C	;
 60)   0D3A CD 1E 04    		 CALL SOUTAS	;
 62)   0D3D 21 20 0D    		 LD HL, MESERR0	;
 63)   0D40 CD 3C 06    		 CALL RS_TXT	;
 64)   0D43 C9          		 RET	;
 67)   0D44 79          		SHERR: LD A, C	;
 68)   0D45 CD 1E 04    		 CALL SOUTAS	;
 69)   0D48 21 0B 0D    		 LD HL, MESERR	;
 70)   0D4B CD 3C 06    		 CALL RS_TXT	;
 71)   0D4E 37          		 SCF	;
 72)   0D4F C9          		 RET	;
 75)   0D50 21 89 FE    		@DS1307_GETNOW: LD HL, BUFFER	;
 76)   0D53 AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 77)   0D54 77          		 LD (HL), A	;
 78)   0D55 16 68       		 LD D, DS1307_ADDRESS	;
 79)   0D57 01 01 00    		 LD BC, 1	;
 80)   0D5A CD 13 0C    		 CALL I2C_WRITE	;
 81)   0D5D C2 33 0D    		 JP NZ, SHERR0	;
 83)   0D60 21 89 FE    		 LD HL, BUFFER	;
 84)   0D63 16 68       		 LD D, DS1307_ADDRESS	;
 85)   0D65 01 07 00    		 LD BC, 7	;
 86)   0D68 CD 63 0C    		 CALL I2C_READ	;
 87)   0D6B C2 44 0D    		 JP NZ, SHERR	;
 88)   0D6E AF          		 XOR A	;
 89)   0D6F C9          		 RET	;
 95)   0D70 11 89 FE    		 LD DE, BUFFER	;
 96)   0D73 AF          		 XOR A	;
 97)   0D74 12          		 LD (DE), A	;
 98)   0D75 13          		 INC DE	;
 99)   0D76 3E 0A       		 LD A, 10       ; 10 SECS	; 10 SECS
100)   0D78 CD 0D 27    		 CALL BN2BCD	;
101)   0D7B 7D          		 LD A, L	;
102)   0D7C 12          		 LD (DE), A	;
103)   0D7D 13          		 INC DE	;
104)   0D7E 3E 22       		 LD A, 34       ; 28 MINS	; 28 MINS
105)   0D80 CD 0D 27    		 CALL BN2BCD	;
106)   0D83 7D          		 LD A, L	;
107)   0D84 12          		 LD (DE), A	;
108)   0D85 13          		 INC DE	;
109)   0D86 3E 12       		 LD A, 18       ; 19 HOURS	; 19 HOURS
110)   0D88 CD 0D 27    		 CALL BN2BCD	;
111)   0D8B 7D          		 LD A, L	;
112)   0D8C 12          		 LD (DE), A	;
113)   0D8D 13          		 INC DE	;
114)   0D8E 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
115)   0D90 12          		 LD (DE), A	;
116)   0D91 13          		 INC DE	;
117)   0D92 3E 12       		 LD A, 18       ; 8 DAY	; 8 DAY
118)   0D94 CD 0D 27    		 CALL BN2BCD	;
119)   0D97 7D          		 LD A, L	;
120)   0D98 12          		 LD (DE), A	;
121)   0D99 13          		 INC DE	;
122)   0D9A 3E 02       		 LD A, 02       ; 10 MONTH	; 10 MONTH
123)   0D9C CD 0D 27    		 CALL BN2BCD	;
124)   0D9F 7D          		 LD A, L	;
125)   0DA0 12          		 LD (DE), A	;
126)   0DA1 13          		 INC DE	;
127)   0DA2 3E 15       		 LD A, 21       ; 21 YEAR (2020)	; 21 YEAR (2020)
128)   0DA4 CD 0D 27    		 CALL BN2BCD	;
129)   0DA7 7D          		 LD A, L	;
130)   0DA8 12          		 LD (DE), A	;
131)   0DA9 13          		 INC DE	;
132)   0DAA AF          		 XOR A	;
133)   0DAB 12          		 LD (DE), A	;
146)   0DAC 21 89 FE    		@DS1307_ADJUST: LD HL, BUFFER	;
147)   0DAF 16 68       		 LD D, DS1307_ADDRESS	;
148)   0DB1 01 09 00    		 LD BC, 9	;
149)   0DB4 CD 13 0C    		 CALL I2C_WRITE	;
150)   0DB7 C2 33 0D    		 JP NZ, SHERR0	;
151)   0DBA 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
152)   0DBD CD 8A 27    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
153)   0DC0 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
154)   0DC3 CD 8A 27    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
155)   0DC6 C9          		 RET	;
159)   0DC7 21 89 FE    		@DS1307_SETSQ: LD HL, BUFFER	;
160)   0DCA E5          		 PUSH HL	;
161)   0DCB 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
162)   0DCD 77          		 LD (HL), A	;
163)   0DCE 23          		 INC HL	;
164)   0DCF 7A          		 LD A, D	;
165)   0DD0 77          		 LD (HL), A	;
166)   0DD1 E1          		 POP HL	;
167)   0DD2 16 68       		 LD D, DS1307_ADDRESS	;
168)   0DD4 01 02 00    		 LD BC, 2	;
169)   0DD7 CD 13 0C    		 CALL I2C_WRITE	;
170)   0DDA C2 33 0D    		 JP NZ, SHERR0	;
171)   0DDD C9          		 RET	;
105)   0DDE 00          		 LCD_DSPMODE  DB 0	;
106)   0DDF 00          		 LCD_DSPCTRL  DB 0	;
111)   0DE0 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
113)   0DE2 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
114)   0DE3 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
115)   0DE5 CB E2       		 SET D4, D	;
116)   0DE7 0F          		LWNXT1: RRCA	;
117)   0DE8 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
118)   0DEA CB EA       		 SET D5, D	;
119)   0DEC 0F          		LWNXT2: RRCA	;
120)   0DED 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
121)   0DEF CB F2       		 SET D6, D	;
122)   0DF1 0F          		LWNXT3: RRCA	;
123)   0DF2 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
124)   0DF4 CB FA       		 SET D7, D	;
125)   0DF6 7B          		LWNXT4: LD A, E	;
126)   0DF7 0F          		 RRCA	;
127)   0DF8 30 02       		 JR NC, LWNXT5	;
128)   0DFA CB C2       		 SET RS, D	;
131)   0DFC CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
132)   0DFE 7A          		 LD A, D	;
133)   0DFF CD 09 0E    		 CALL LCD16_I2CSEND	;
134)   0E02 CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
135)   0E04 7A          		 LD A, D	;
136)   0E05 CD 09 0E    		 CALL LCD16_I2CSEND	;
137)   0E08 C9          		 RET	;
141)   0E09 D5          		LCD16_I2CSEND: PUSH DE	;
142)   0E0A E5          		 PUSH HL	;
143)   0E0B 21 89 FE    		 LD HL, BUFFER	;
144)   0E0E 77          		 LD (HL), A	;
145)   0E0F 16 27       		 LD D, LCDADDR	;
146)   0E11 01 01 00    		 LD BC, 1	;
147)   0E14 CD 13 0C    		 CALL I2C_WRITE	;
148)   0E17 E1          		 POP HL	;
149)   0E18 D1          		 POP DE	;
150)   0E19 C9          		 RET	;
154)   0E1A 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
155)   0E1B 7B          		 LD A, E	;
156)   0E1C 0F          		 RRCA	;
157)   0E1D 38 07       		 JR C, ISCMDDATA	;
158)   0E1F 0F          		 RRCA	;
159)   0E20 30 04       		 JR NC, ISCMDDATA	;
161)   0E22 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
162)   0E24 18 0E       		 JR LCSD_4BIT	;
163)   0E26 7A          		ISCMDDATA: LD A, D	;
164)   0E27 CB 3F       		 SRL A	;
165)   0E29 CB 3F       		 SRL A	;
166)   0E2B CB 3F       		 SRL A	;
167)   0E2D CB 3F       		 SRL A	;
168)   0E2F D5          		 PUSH DE	;
169)   0E30 CD E0 0D    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
170)   0E33 D1          		 POP DE	;
171)   0E34 7A          		LCSD_4BIT: LD A, D	;
172)   0E35 E6 0F       		 AND $0F	;
173)   0E37 CD E0 0D    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
174)   0E3A C9          		 RET	;
179)   0E3B 1E 00       		LCD16_COMMD: LD E, COMMAND	;
180)   0E3D C3 1A 0E    		 JP LCD16_SEND	;
183)   0E40 1E 01       		LCD16_DATA: LD E, LCD_DATA	;
184)   0E42 C3 1A 0E    		 JP LCD16_SEND	;
188)   0E45 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
189)   0E47 1E 02       		 LD E, FOUR_BITS	;
190)   0E49 CD 1A 0E    		 CALL LCD16_SEND	;
191)   0E4C 01 00 30    		 LD BC, $3000	;
192)   0E4F CD 8A 27    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
193)   0E52 3E 03       		 LD A, 3	;
194)   0E54 1E 02       		 LD E, FOUR_BITS	;
195)   0E56 CD 1A 0E    		 CALL LCD16_SEND	;
196)   0E59 01 00 30    		 LD BC, $3000	;
197)   0E5C CD 8A 27    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
198)   0E5F 3E 03       		 LD A, 3	;
199)   0E61 1E 02       		 LD E, FOUR_BITS	;
200)   0E63 CD 1A 0E    		 CALL LCD16_SEND	;
201)   0E66 01 00 30    		 LD BC, $3000	;
202)   0E69 CD 8A 27    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
203)   0E6C 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
204)   0E6E 1E 02       		 LD E, FOUR_BITS	;
205)   0E70 CD 1A 0E    		 CALL LCD16_SEND	;
206)   0E73 01 00 30    		 LD BC, $3000	;
207)   0E76 CD 8A 27    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
209)   0E79 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
210)   0E7B CD 3B 0E    		 CALL LCD16_COMMD	;
211)   0E7E 3E 04       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
212)   0E80 32 DF 0D    		 LD (LCD_DSPCTRL), A	;
213)   0E83 CD A2 0E    		 CALL LCD16_DISP	;
214)   0E86 CD BD 0E    		 CALL LCD16_CLR	;
215)   0E89 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
216)   0E8B 32 DE 0D    		 LD (LCD_DSPMODE), A	;
217)   0E8E F6 04       		 OR LCD_ENTRYMODESET	;
218)   0E90 CD 3B 0E    		 CALL LCD16_COMMD	;
219)   0E93 C9          		 RET	;
221)   0E94 3A DF 0D    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
222)   0E97 CB A7       		 RES LCD_DISPLAYON, A	;
223)   0E99 32 DF 0D    		 LD (LCD_DSPCTRL), A	;
224)   0E9C F6 08       		 OR LCD_DISPLAYCONTROL	;
225)   0E9E CD 3B 0E    		 CALL LCD16_COMMD	;
226)   0EA1 C9          		 RET	;
227)   0EA2 3A DF 0D    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
228)   0EA5 F6 04       		 OR LCD_DISPLAYON	;
229)   0EA7 32 DF 0D    		 LD (LCD_DSPCTRL), A	;
230)   0EAA F6 08       		 OR LCD_DISPLAYCONTROL	;
231)   0EAC CD 3B 0E    		 CALL LCD16_COMMD	;
232)   0EAF C9          		 RET	;
234)   0EB0 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
235)   0EB3 C5          		LCLR_AGN1: PUSH BC	;
236)   0EB4 CD C6 26    		 CALL DELAYMICRO	;
237)   0EB7 C1          		 POP BC	;
238)   0EB8 0D          		 DEC C	;
239)   0EB9 E2 B3 0E    		 JP PO, LCLR_AGN1	;
240)   0EBC C9          		 RET	;
242)   0EBD 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
243)   0EBF CD 3B 0E    		 CALL LCD16_COMMD	;
244)   0EC2 CD B0 0E    		 CALL LCDDELAY	;
245)   0EC5 C9          		 RET	;
248)   0EC6 7E          		@LCD16_PRINT: LD A, (HL)	;
249)   0EC7 FE 00       		 CP 0	;
250)   0EC9 C8          		 RET Z	;
251)   0ECA CD 40 0E    		 CALL LCD16_DATA	;
252)   0ECD 23          		 INC HL	;
253)   0ECE 18 F6       		 JR LCD16_PRINT	;
256)   0ED0 CD 40 0E    		@LCD16_PRCHR: CALL LCD16_DATA	;
257)   0ED3 C9          		 RET	;
259)   0ED4 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
260)   0ED6 CD 3B 0E    		 CALL LCD16_COMMD	;
261)   0ED9 CD B0 0E    		 CALL LCDDELAY	;
262)   0EDC C9          		 RET	;
265)   0EDD 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
266)   0EE1 06 00       		@LCD16_SETCURS: LD B, 0	;
267)   0EE3 4B          		 LD C, E	;
268)   0EE4 21 DD 0E    		 LD HL, ROWOFFSET	;
269)   0EE7 09          		 ADD HL, BC	;
270)   0EE8 7E          		 LD A, (HL)	;
271)   0EE9 82          		 ADD D	;
272)   0EEA F6 80       		 OR LCD_SETDDRAMADDR	;
273)   0EEC CD 3B 0E    		 CALL LCD16_COMMD	;
274)   0EEF C9          		 RET	;
276)   0EF0 3A DF 0D    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
277)   0EF3 CB 97       		 RES LCD_CURSORON, A	;
278)   0EF5 32 DF 0D    		 LD (LCD_DSPCTRL), A	;
279)   0EF8 F6 08       		 OR LCD_DISPLAYCONTROL	;
280)   0EFA CD 3B 0E    		 CALL LCD16_COMMD	;
281)   0EFD C9          		 RET	;
284)   0EFE 3A DF 0D    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
285)   0F01 F6 02       		 OR LCD_CURSORON	;
286)   0F03 32 DF 0D    		 LD (LCD_DSPCTRL), A	;
287)   0F06 F6 08       		 OR LCD_DISPLAYCONTROL	;
288)   0F08 CD 3B 0E    		 CALL LCD16_COMMD	;
289)   0F0B C9          		 RET	;
291)   0F0C 3A DF 0D    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
292)   0F0F CB 8F       		 RES LCD_BLINKON, A	;
293)   0F11 32 DF 0D    		 LD (LCD_DSPCTRL), A	;
294)   0F14 F6 08       		 OR LCD_DISPLAYCONTROL	;
295)   0F16 CD 3B 0E    		 CALL LCD16_COMMD	;
296)   0F19 C9          		 RET	;
299)   0F1A 3A DF 0D    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
300)   0F1D F6 01       		 OR LCD_BLINKON	;
301)   0F1F 32 DF 0D    		 LD (LCD_DSPCTRL), A	;
302)   0F22 F6 08       		 OR LCD_DISPLAYCONTROL	;
303)   0F24 CD 3B 0E    		 CALL LCD16_COMMD	;
304)   0F27 C9          		 RET	;
306)   0F28 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
307)   0F2A CD 3B 0E    		 CALL LCD16_COMMD	;
308)   0F2D C9          		 RET	;
310)   0F2E 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
311)   0F30 CD 3B 0E    		 CALL LCD16_COMMD	;
312)   0F33 C9          		 RET	;
314)   0F34 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
315)   0F36 CD 3B 0E    		 CALL LCD16_COMMD	;
316)   0F39 C9          		 RET	;
318)   0F3A 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
319)   0F3C CD 3B 0E    		 CALL LCD16_COMMD	;
320)   0F3F C9          		 RET	;
 16)   0F40 	            		 LCD_RS EQU DEVTFT       ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   0F40 	            		 LCD_CS EQU DEVTFT+1       ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   0F40 7B          		 LD A, E	;
 32)   0F41 D3 11       		 OUT (LCD_CS), A	;
 37)   0F43 DB 11       		 IN A, (LCD_CS)	;
 38)   0F45 C9          		 RET	;
 45)   0F46 7A          		 LD A, D	;
 46)   0F47 D3 11       		 OUT (LCD_CS), A	;
 47)   0F49 C9          		 RET	;
 53)   0F4A 7A          		 LD A, D	;
 54)   0F4B D3 10       		 OUT (LCD_RS), A	;
 55)   0F4D C9          		 RET	;
 62)   0F4E AF          		 XOR A	;
 63)   0F4F D3 10       		 OUT (LCD_RS), A       ;RS LOW = COMMAND BYTE	;RS LOW = COMMAND BYTE
 64)   0F51 CD 46 0F    		 CALL LCD_WR_BUS	;
 65)   0F54 3E 01       		 LD A, 1	;
 66)   0F56 D3 10       		 OUT (LCD_RS), A       ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   0F58 C9          		 RET	;
 71)   0F59 16 E2       		 LD D, 0xE2        ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   0F5B CD 4A 0F    		 CALL LCD_WR_COM       ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   0F5E 16 23       		 LD D, 0x23        ;1E	;1E
 74)   0F60 CD 46 0F    		 CALL LCD_WR_DAT	;
 75)   0F63 16 02       		 LD D, 0x02	;
 76)   0F65 CD 46 0F    		 CALL LCD_WR_DAT	;
 77)   0F68 16 54       		 LD D, 0x54	;
 78)   0F6A CD 46 0F    		 CALL LCD_WR_DAT	;
 79)   0F6D 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 80)   0F6F CD 4A 0F    		 CALL LCD_WR_COM	;
 81)   0F72 16 01       		 LD D, 0x01	;
 82)   0F74 CD 46 0F    		 CALL LCD_WR_DAT	;
 83)   0F77 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 84)   0F79 CD C6 26    		 CALL DELAYMICRO	;
 85)   0F7C 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 86)   0F7E CD 4A 0F    		 CALL LCD_WR_COM	;
 87)   0F81 16 03       		 LD D, 0x03	;
 88)   0F83 CD 46 0F    		 CALL LCD_WR_DAT	;
 89)   0F86 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 90)   0F88 CD C6 26    		 CALL DELAYMICRO	;
 92)   0F8B 16 01       		 LD D, 0x01        ; software reset	; software reset
 93)   0F8D CD 4A 0F    		 CALL LCD_WR_COM	;
 94)   0F90 06 14       		 LD B, 20        ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   0F92 CD C6 26    		 CALL DELAYMICRO	;
 96)   0F95 16 E6       		 LD D, 0xE6        ;PLL setting for PCLK, depends on resolution	;PLL setting for PCLK, depends on resolution
 97)   0F97 CD 4A 0F    		 CALL LCD_WR_COM	;
 98)   0F9A 16 03       		 LD D, 0x03	;
 99)   0F9C CD 46 0F    		 CALL LCD_WR_DAT	;
100)   0F9F 16 33       		 LD D, 0x33        ;FF	;FF
101)   0FA1 CD 46 0F    		 CALL LCD_WR_DAT	;
102)   0FA4 16 33       		 LD D, 0x33        ;FF	;FF
103)   0FA6 CD 46 0F    		 CALL LCD_WR_DAT	;
105)   0FA9 16 B0       		 LD D, 0xB0        ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   0FAB CD 4A 0F    		 CALL LCD_WR_COM	;
107)   0FAE 16 20       		 LD D, 0x20	;
108)   0FB0 CD 46 0F    		 CALL LCD_WR_DAT	;
109)   0FB3 16 00       		 LD D, 0x00	;
110)   0FB5 CD 46 0F    		 CALL LCD_WR_DAT	;
111)   0FB8 16 03       		 LD D, 0x03        ;Set HDP  799	;Set HDP  799
112)   0FBA CD 46 0F    		 CALL LCD_WR_DAT	;
113)   0FBD 16 1F       		 LD D, 0x1F	;
114)   0FBF CD 46 0F    		 CALL LCD_WR_DAT	;
115)   0FC2 16 01       		 LD D, 0x01        ;Set VDP  479	;Set VDP  479
116)   0FC4 CD 46 0F    		 CALL LCD_WR_DAT	;
117)   0FC7 16 DF       		 LD D, 0xDF	;
118)   0FC9 CD 46 0F    		 CALL LCD_WR_DAT	;
119)   0FCC 16 00       		 LD D, 0x00	;
120)   0FCE CD 46 0F    		 CALL LCD_WR_DAT	;
123)   0FD1 16 B4       		 LD D, 0xB4        ;HSYNC	;HSYNC
124)   0FD3 CD 4A 0F    		 CALL LCD_WR_COM	;
125)   0FD6 16 04       		 LD D, 0x04        ;03         ;Set HT 928	;03         ;Set HT 928
126)   0FD8 CD 46 0F    		 CALL LCD_WR_DAT	;
127)   0FDB 16 1F       		 LD D, 0x1F        ;A0	;A0
128)   0FDD CD 46 0F    		 CALL LCD_WR_DAT	;
129)   0FE0 16 00       		 LD D, 0x00        ;Set HPS  46	;Set HPS  46
130)   0FE2 CD 46 0F    		 CALL LCD_WR_DAT	;
131)   0FE5 16 D2       		 LD D, 0xD2        ;2E	;2E
132)   0FE7 CD 46 0F    		 CALL LCD_WR_DAT	;
133)   0FEA 16 00       		 LD D, 0x00        ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   0FEC CD 46 0F    		 CALL LCD_WR_DAT	;
135)   0FEF 16 00       		 LD D, 0x00        ;Set LPS  15	;Set LPS  15
136)   0FF1 CD 46 0F    		 CALL LCD_WR_DAT	;
137)   0FF4 16 00       		 LD D, 0x00        ;0F	;0F
138)   0FF6 CD 46 0F    		 CALL LCD_WR_DAT	;
139)   0FF9 16 00       		 LD D, 0x00	;
140)   0FFB CD 46 0F    		 CALL LCD_WR_DAT	;
142)   0FFE 16 B6       		 LD D, 0xB6        ;VSYNC	;VSYNC
143)   1000 CD 4A 0F    		 CALL LCD_WR_COM	;
144)   1003 16 02       		 LD D, 0x02        ;Set VT 525	;Set VT 525
145)   1005 CD 46 0F    		 CALL LCD_WR_DAT	;
146)   1008 16 0C       		 LD D, 0x0C        ;0D	;0D
147)   100A CD 46 0F    		 CALL LCD_WR_DAT	;
148)   100D 16 00       		 LD D, 0x00        ;Set VPS  16	;Set VPS  16
149)   100F CD 46 0F    		 CALL LCD_WR_DAT	;
150)   1012 16 22       		 LD D, 0x22        ;10	;10
151)   1014 CD 46 0F    		 CALL LCD_WR_DAT	;
152)   1017 16 00       		 LD D, 0x00        ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   1019 CD 46 0F    		 CALL LCD_WR_DAT	;
154)   101C 16 00       		 LD D, 0x00        ;Set FPS  8	;Set FPS  8
155)   101E CD 46 0F    		 CALL LCD_WR_DAT	;
156)   1021 16 00       		 LD D, 0x00        ; 08	; 08
157)   1023 CD 46 0F    		 CALL LCD_WR_DAT	;
159)   1026 16 B8       		 LD D, 0xB8	;
160)   1028 CD 4A 0F    		 CALL LCD_WR_COM	;
161)   102B 16 0F       		 LD D, 0x0F        ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   102D CD 46 0F    		 CALL LCD_WR_DAT	;
163)   1030 16 01       		 LD D, 0x01        ;GPIO0 normal	;GPIO0 normal
164)   1032 CD 46 0F    		 CALL LCD_WR_DAT	;
166)   1035 16 BA       		 LD D, 0xBA	;
167)   1037 CD 4A 0F    		 CALL LCD_WR_COM	;
168)   103A 16 01       		 LD D, 0x01        ;0F	;0F
169)   103C CD 46 0F    		 CALL LCD_WR_DAT       ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   103F 16 36       		 LD D, 0x36        ;rotation	;rotation
172)   1041 CD 4A 0F    		 CALL LCD_WR_COM	;
173)   1044 16 08       		 LD D, 0x08        ;2A	;2A
174)   1046 CD 46 0F    		 CALL LCD_WR_DAT	;
176)   1049 16 F0       		 LD D, 0xF0        ;pixel data interface	;pixel data interface
177)   104B CD 4A 0F    		 CALL LCD_WR_COM	;
178)   104E 16 06       		 LD D, 0x06        ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   1050 CD 46 0F    		 CALL LCD_WR_DAT	;
181)   1053 06 05       		 LD B, 5        ;delay(5);	;delay(5);
182)   1055 CD C6 26    		 CALL DELAYMICRO	;
184)   1058 16 BC       		 LD D, 0xBC        ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   105A CD 4A 0F    		 CALL LCD_WR_COM	;
186)   105D 16 40       		 LD D, 0x40	;
187)   105F CD 46 0F    		 CALL LCD_WR_DAT	;
188)   1062 16 80       		 LD D, 0x80	;
189)   1064 CD 46 0F    		 CALL LCD_WR_DAT	;
190)   1067 16 40       		 LD D, 0x40	;
191)   1069 CD 46 0F    		 CALL LCD_WR_DAT	;
192)   106C 16 01       		 LD D, 0x01	;
193)   106E CD 46 0F    		 CALL LCD_WR_DAT	;
194)   1071 06 05       		 LD B, 5        ;delay(5);	;delay(5);
195)   1073 CD C6 26    		 CALL DELAYMICRO	;
197)   1076 16 35       		 LD D, 0x35        ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   1078 CD 4A 0F    		 CALL LCD_WR_COM	;
199)   107B 16 00       		 LD D, 0x00        ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   107D CD 46 0F    		 CALL LCD_WR_DAT	;
202)   1080 16 29       		 LD D, 0x29        ;display on	;display on
203)   1082 CD 4A 0F    		 CALL LCD_WR_COM	;
204)   1085 16 BE       		 LD D, 0xBE        ;set PWM for B/L	;set PWM for B/L
205)   1087 CD 4A 0F    		 CALL LCD_WR_COM	;
206)   108A 16 06       		 LD D, 0x06	;
207)   108C CD 46 0F    		 CALL LCD_WR_DAT	;
208)   108F 16 F0       		 LD D, 0xF0	;
209)   1091 CD 46 0F    		 CALL LCD_WR_DAT	;
210)   1094 16 01       		 LD D, 0x01	;
211)   1096 CD 46 0F    		 CALL LCD_WR_DAT	;
212)   1099 16 F0       		 LD D, 0xF0	;
213)   109B CD 46 0F    		 CALL LCD_WR_DAT	;
214)   109E 16 00       		 LD D, 0x00	;
215)   10A0 CD 46 0F    		 CALL LCD_WR_DAT	;
216)   10A3 16 00       		 LD D, 0x00	;
217)   10A5 CD 46 0F    		 CALL LCD_WR_DAT	;
219)   10A8 16 D0       		 LD D, 0xD0	;
220)   10AA CD 4A 0F    		 CALL LCD_WR_COM	;
221)   10AD 16 0D       		 LD D, 0x0D	;
222)   10AF CD 46 0F    		 CALL LCD_WR_DAT	;
225)   10B2 21 00 00    		 LD HL, 0	;
226)   10B5 E5          		 PUSH HL	;
227)   10B6 E5          		 PUSH HL	;
228)   10B7 21 1F 03    		 LD HL, 799	;
229)   10BA E5          		 PUSH HL	;
230)   10BB 21 DF 01    		 LD HL, 479	;
231)   10BE E5          		 PUSH HL	;
232)   10BF CD C3 10    		 CALL LCD_SETXY	;
233)   10C2 C9          		 RET	;
250)   10C3 DD 21 02 00 		 LD IX, 2	;
251)   10C7 DD 39       		 ADD IX, SP	;
252)   10C9 16 2A       		 LD D, 0x2A        ;SEND IX PARAMS	;SEND IX PARAMS
253)   10CB CD 4A 0F    		 CALL LCD_WR_COM	;
254)   10CE DD 56 07    		 LD D, (IX + 7)	;
255)   10D1 CD 46 0F    		 CALL LCD_WR_DAT	;
256)   10D4 DD 56 06    		 LD D, (IX + 6)	;
257)   10D7 CD 46 0F    		 CALL LCD_WR_DAT	;
258)   10DA DD 56 03    		 LD D, (IX + 3)	;
259)   10DD CD 46 0F    		 CALL LCD_WR_DAT	;
260)   10E0 DD 56 02    		 LD D, (IX + 2)	;
261)   10E3 CD 46 0F    		 CALL LCD_WR_DAT	;
262)   10E6 16 2B       		 LD D, 0x2B        ;SEND Y PARAMS	;SEND Y PARAMS
263)   10E8 CD 4A 0F    		 CALL LCD_WR_COM	;
264)   10EB DD 56 05    		 LD D, (IX + 5)	;
265)   10EE CD 46 0F    		 CALL LCD_WR_DAT	;
266)   10F1 DD 56 04    		 LD D, (IX + 4)	;
267)   10F4 CD 46 0F    		 CALL LCD_WR_DAT	;
268)   10F7 DD 56 01    		 LD D, (IX + 1)	;
269)   10FA CD 46 0F    		 CALL LCD_WR_DAT	;
270)   10FD DD 56 00    		 LD D, (IX)	;
271)   1100 CD 46 0F    		 CALL LCD_WR_DAT	;
272)   1103 16 2C       		 LD D, 0x2C        ;SEND DATA	;SEND DATA
273)   1105 CD 4A 0F    		 CALL LCD_WR_COM	;
274)   1108 D1          		 POP DE	;
275)   1109 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   110C 39          		 ADD HL, SP	;
277)   110D F9          		 LD SP, HL	;
278)   110E EB          		 EX DE, HL	;
279)   110F E9          		 JP (HL)	;
285)   1110 54          		 LD D, H	;
286)   1111 CD 46 0F    		 CALL LCD_WR_DAT	;
287)   1114 55          		 LD D, L	;
288)   1115 CD 46 0F    		 CALL LCD_WR_DAT	;
289)   1118 C9          		 RET	;
294)   1119 16 2E       		 LD D, 0x2E        ;READ DATA	;READ DATA
295)   111B CD 4A 0F    		 CALL LCD_WR_COM	;
296)   111E CD 43 0F    		@LCD_GTPXL: CALL LCD_RD_DAT	;
297)   1121 67          		 LD H, A	;
298)   1122 CD 43 0F    		 CALL LCD_RD_DAT	;
299)   1125 6F          		 LD L, A	;
300)   1126 C9          		 RET	;
306)   1127 DD E5       		@LCD_READPIXEL: PUSH IX       ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   1129 DD 21 04 00 		 LD IX, 4        ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   112D DD 39       		 ADD IX, SP	;
309)   112F DD 66 03    		 LD H, (IX + 3)        ;X	;X
310)   1132 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
311)   1135 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
312)   1138 DD 5E 00    		 LD E, (IX)        ;Y	;Y
313)   113B E5          		 PUSH HL	;
314)   113C D5          		 PUSH DE	;
315)   113D E5          		 PUSH HL	;
316)   113E D5          		 PUSH DE	;
317)   113F CD C3 10    		 CALL LCD_SETXY	;
318)   1142 CD 19 11    		 CALL LCD_GETPIXEL	;
319)   1145 E5          		 PUSH HL	;
320)   1146 CD 78 11    		 CALL LCD_CLRXY	;
321)   1149 D1          		 POP DE         ;RESULT COLOR	;RESULT COLOR
322)   114A DD E1       		 POP IX	;
323)   114C C1          		 POP BC         ;RET ADDR	;RET ADDR
324)   114D 21 04 00    		 LD HL, 2 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   1150 39          		 ADD HL, SP	;
326)   1151 F9          		 LD SP, HL	;
327)   1152 EB          		 EX DE, HL        ;HL RESULT	;HL RESULT
328)   1153 C5          		 PUSH BC        ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   1154 C9          		 RET	;
333)   1155 DD 21 02 00 		 LD IX, 2        ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   1159 DD 39       		 ADD IX, SP	;
335)   115B DD 66 03    		 LD H, (IX + 3)        ;X	;X
336)   115E DD 6E 02    		 LD L, (IX + 2)        ;X	;X
337)   1161 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
338)   1164 DD 5E 00    		 LD E, (IX)        ;Y	;Y
339)   1167 E5          		 PUSH HL	;
340)   1168 D5          		 PUSH DE	;
341)   1169 E5          		 PUSH HL	;
342)   116A D5          		 PUSH DE	;
343)   116B CD C3 10    		 CALL LCD_SETXY	;
344)   116E 2A 01 FE    		 LD HL, (FCOLOR)	;
345)   1171 CD 10 11    		 CALL LCD_SETPIXEL	;
346)   1174 CD 78 11    		 CALL LCD_CLRXY	;
347)   1177 C9          		 RET	;
350)   1178 21 00 00    		 LD HL, 0	;
351)   117B E5          		 PUSH HL	;
352)   117C E5          		 PUSH HL	;
353)   117D 21 1F 03    		 LD HL, LCD_WIDTH	;
354)   1180 E5          		 PUSH HL	;
355)   1181 21 DF 01    		 LD HL, LCD_HEIGHT	;
356)   1184 E5          		 PUSH HL	;
357)   1185 CD C3 10    		 CALL LCD_SETXY	;
358)   1188 C9          		 RET	;
362)   1189 DD 21 02 00 		 LD IX, 2	;
363)   118D DD 39       		 ADD IX, SP	;
364)   118F DD 66 05    		 LD H, (IX + 5)        ;X	;X
365)   1192 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
366)   1195 DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
367)   1198 DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
368)   119B DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
369)   119E DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
372)   11A1 E5          		 PUSH HL	;
373)   11A2 21 00 00    		 LD HL, 0	;
374)   11A5 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
375)   11A6 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
376)   11A8 38 0A       		 JR C, POSH1	;
377)   11AA AF          		 XOR A         ;l=-l	;l=-l
378)   11AB 91          		 SUB C	;
379)   11AC 4F          		 LD C, A	;
380)   11AD 9F          		 SBC A, A	;
381)   11AE 90          		 SUB B	;
382)   11AF 47          		 LD B, A	;
383)   11B0 E1          		 POP HL	;
384)   11B1 ED 42       		 SBC HL, BC        ;x -= l;	;x -= l;
385)   11B3 E5          		 PUSH HL	;
386)   11B4 E1          		POSH1: POP HL	;
387)   11B5 E5          		 PUSH HL	;
388)   11B6 D5          		 PUSH DE	;
389)   11B7 09          		 ADD HL, BC	;
390)   11B8 E5          		 PUSH HL	;
391)   11B9 D5          		 PUSH DE	;
392)   11BA CD C3 10    		 CALL LCD_SETXY        ;setXY(x, y, x+l, y);	;setXY(x, y, x+l, y);
393)   11BD 2A 01 FE    		 LD HL, (FCOLOR)	;
394)   11C0 CD 10 11    		NXTH1: CALL LCD_SETPIXEL	;
395)   11C3 0B          		 DEC BC	;
396)   11C4 79          		 LD A, C	;
397)   11C5 B0          		 OR B	;
398)   11C6 20 F8       		 JR NZ, NXTH1	;
399)   11C8 CD 78 11    		 CALL LCD_CLRXY	;
400)   11CB D1          		 POP DE	;
401)   11CC 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
402)   11CF 39          		 ADD HL, SP	;
403)   11D0 F9          		 LD SP, HL	;
404)   11D1 EB          		 EX DE, HL	;
405)   11D2 E9          		 JP (HL)	;
411)   11D3 DD 21 02 00 		 LD IX, 2	;
412)   11D7 DD 39       		 ADD IX, SP	;
413)   11D9 DD 56 05    		 LD D, (IX + 5)        ;X	;X
414)   11DC DD 5E 04    		 LD E, (IX + 4)        ;X	;X
415)   11DF DD 66 03    		 LD H, (IX + 3)        ;Y	;Y
416)   11E2 DD 6E 02    		 LD L, (IX + 2)        ;Y	;Y
417)   11E5 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
418)   11E8 DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
419)   11EB E5          		 PUSH HL	;
420)   11EC 21 00 00    		 LD HL, 0	;
421)   11EF B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
422)   11F0 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
423)   11F2 38 0A       		 JR C, POSV1	;
424)   11F4 AF          		 XOR A         ;l=-l	;l=-l
425)   11F5 91          		 SUB C	;
426)   11F6 4F          		 LD C, A	;
427)   11F7 9F          		 SBC A, A	;
428)   11F8 90          		 SUB B	;
429)   11F9 47          		 LD B, A	;
430)   11FA E1          		 POP HL	;
431)   11FB ED 42       		 SBC HL, BC        ;Y -= l;	;Y -= l;
432)   11FD E5          		 PUSH HL	;
433)   11FE E1          		POSV1: POP HL	;
434)   11FF D5          		 PUSH DE	;
435)   1200 E5          		 PUSH HL	;
436)   1201 D5          		 PUSH DE	;
437)   1202 09          		 ADD HL, BC	;
438)   1203 E5          		 PUSH HL	;
439)   1204 CD C3 10    		 CALL LCD_SETXY        ;setXY(x, y, x, y+l);	;setXY(x, y, x, y+l);
440)   1207 2A 01 FE    		 LD HL, (FCOLOR)	;
441)   120A CD 10 11    		NXTV1: CALL LCD_SETPIXEL	;
442)   120D 0B          		 DEC BC	;
443)   120E 79          		 LD A, C	;
444)   120F B0          		 OR B	;
445)   1210 20 F8       		 JR NZ, NXTV1	;
446)   1212 CD 78 11    		 CALL LCD_CLRXY	;
447)   1215 D1          		 POP DE	;
448)   1216 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
449)   1219 39          		 ADD HL, SP	;
450)   121A F9          		 LD SP, HL	;
451)   121B EB          		 EX DE, HL	;
452)   121C E9          		 JP (HL)	;
456)   121D DD 21 02 00 		 LD IX, 2	;
457)   1221 DD 39       		 ADD IX, SP	;
467)   1223 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
468)   1226 DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
469)   1229 DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
470)   122C DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
471)   122F B7          		 OR A	;
472)   1230 ED 52       		 SBC HL, DE	;
473)   1232 20 17       		 JR NZ, YNOTEQ	;
475)   1234 DD 46 07    		 LD B, (IX + 7)        ;X1	;X1
476)   1237 DD 4E 06    		 LD C, (IX + 6)        ;X1	;X1
477)   123A C5          		 PUSH BC        ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
478)   123B D5          		 PUSH DE        ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
479)   123C DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
480)   123F DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
481)   1242 ED 42       		 SBC HL, BC        ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
482)   1244 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
483)   1245 CD 89 11    		 CALL LCD_DRAWHLINE	;
484)   1248 C3 F8 13    		 JP DLNEX	;
486)   124B DD 66 07    		 LD H, (IX + 7)        ;X1	;X1
487)   124E DD 6E 06    		 LD L, (IX + 6)        ;X1	;X1
488)   1251 DD 56 03    		 LD D, (IX + 3)        ;X2	;X2
489)   1254 DD 5E 02    		 LD E, (IX + 2)        ;X2	;X2
490)   1257 B7          		 OR A	;
491)   1258 ED 52       		 SBC HL, DE	;
492)   125A 20 17       		 JR NZ, XNOTEQ	;
494)   125C D5          		 PUSH DE        ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
495)   125D DD 46 05    		 LD B, (IX + 5)        ;Y1	;Y1
496)   1260 DD 4E 04    		 LD C, (IX + 4)        ;Y1	;Y1
497)   1263 C5          		 PUSH BC        ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
498)   1264 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
499)   1267 DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
500)   126A ED 42       		 SBC HL, BC        ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
501)   126C E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
502)   126D CD D3 11    		 CALL LCD_DRAWVLINE	;
503)   1270 C3 F8 13    		 JP DLNEX	;
506)   1273 38 04       		 JR C, X2GTX1	;
508)   1275 AF          		 XOR A	;
509)   1276 3D          		 DEC A         ;XSTEP=-1	;XSTEP=-1
510)   1277 18 0D       		 JR DLNXT1	;
513)   1279 D5          		 PUSH DE	;
514)   127A E1          		 POP HL	;
515)   127B DD 56 07    		 LD D, (IX + 7)        ;X1	;X1
516)   127E DD 5E 06    		 LD E, (IX + 6)        ;X1	;X1
517)   1281 B7          		 OR A	;
518)   1282 ED 52       		 SBC HL, DE        ;X2-X1 ON HL	;X2-X1 ON HL
520)   1284 3E 01       		 LD A, 1        ;XSTEP=1	;XSTEP=1
522)   1286 06 00       		 LD B, 0	;
523)   1288 0E 00       		 LD C, 0	;
524)   128A C5          		 PUSH BC        ;T	;T
525)   128B E5          		 PUSH HL        ;DX	;DX
526)   128C FE 01       		 CP 1	;
527)   128E 28 02       		 JR Z, DLXMINUS1	;
528)   1290 06 FF       		 LD B, 0XFF	;
529)   1292 4F          		DLXMINUS1: LD C, A	;
530)   1293 C5          		 PUSH BC        ;XSTEP	;XSTEP
531)   1294 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
532)   1297 DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
533)   129A DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
534)   129D DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
535)   12A0 B7          		 OR A	;
536)   12A1 ED 52       		 SBC HL, DE	;
537)   12A3 38 04       		 JR C, Y2GTY1        ;HL=Y1-Y2	;HL=Y1-Y2
538)   12A5 AF          		 XOR A	;
539)   12A6 3D          		 DEC A         ;YSTEP=-1	;YSTEP=-1
540)   12A7 18 0F       		 JR DLNXT2	;
543)   12A9 D5          		 PUSH DE	;
544)   12AA E1          		 POP HL	;
545)   12AB DD 56 05    		 LD D, (IX + 5)        ;Y1	;Y1
546)   12AE DD 5E 04    		 LD E, (IX + 4)        ;Y1	;Y1
547)   12B1 B7          		 OR A	;
548)   12B2 ED 52       		 SBC HL, DE        ;HL=Y2-Y1    HL=DY	;HL=Y2-Y1    HL=DY
549)   12B4 06 00       		 LD B, 0	;
550)   12B6 3E 01       		 LD A, 1        ;YSTEP=1	;YSTEP=1
552)   12B8 FE 01       		 CP 1	;
553)   12BA 28 02       		 JR Z, DLYMINUS1	;
554)   12BC 06 FF       		 LD B, 0XFF	;
556)   12BE 4F          		 LD C, A	;
557)   12BF E5          		 PUSH HL        ;DY	;DY
558)   12C0 C5          		 PUSH BC        ;YSTEP	;YSTEP
559)   12C1 FD 21 00 00 		 LD IY, 0	;
560)   12C5 FD 39       		 ADD IY, SP	;
575)   12C7 FD 56 07    		 LD D, (IY + 7)        ;DX	;DX
576)   12CA FD 5E 06    		 LD E, (IY + 6)        ;DX	;DX
577)   12CD B7          		 OR A	;
578)   12CE ED 52       		 SBC HL, DE        ;DY-DX	;DY-DX
579)   12D0 DA 65 13    		 JP C, DXGTDY	;
580)   12D3 CA 65 13    		 JP Z, DXGTDY	;
582)   12D6 19          		 ADD HL, DE        ;HL=DY	;HL=DY
583)   12D7 44          		 LD B, H	;
584)   12D8 4D          		 LD C, L	;
585)   12D9 CB 38       		 SRL B	;
586)   12DB CB 19       		 RR C         ;(dy >> 1)	;(dy >> 1)
587)   12DD 21 00 00    		 LD HL, 0	;
588)   12E0 ED 42       		 SBC HL, BC        ;t = - (dy >> 1);	;t = - (dy >> 1);
589)   12E2 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
590)   12E5 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
592)   12E8 DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
593)   12EB DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
594)   12EE DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
595)   12F1 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
596)   12F4 D5          		 PUSH DE	;
597)   12F5 DD E5       		 PUSH IX	;
598)   12F7 E5          		 PUSH HL	;
599)   12F8 D5          		 PUSH DE	;
600)   12F9 E5          		 PUSH HL	;
601)   12FA D5          		 PUSH DE	;
602)   12FB CD C3 10    		 CALL LCD_SETXY	;
603)   12FE 2A 01 FE    		 LD HL, (FCOLOR)	;
604)   1301 CD 10 11    		 CALL LCD_SETPIXEL	;
605)   1304 DD E1       		 POP IX	;
606)   1306 D1          		 POP DE	;
607)   1307 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
608)   130A DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
609)   130D ED 52       		 SBC HL, DE        ; ROW=Y2	; ROW=Y2
610)   130F CA F3 13    		 JP Z, DLEXIT	;
611)   1312 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
612)   1315 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
613)   1318 EB          		 EX DE, HL	;
614)   1319 09          		 ADD HL, BC        ;row += ystep;	;row += ystep;
615)   131A DD 74 05    		 LD (IX + 5), H        ;SAVE ROW	;SAVE ROW
616)   131D DD 75 04    		 LD (IX + 4), L        ;	;
618)   1320 FD 56 09    		 LD D, (IY + 9)        ; T	; T
619)   1323 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
620)   1326 FD 66 07    		 LD H, (IY + 7)        ;DX	;DX
621)   1329 FD 6E 06    		 LD L, (IY + 6)        ;DX	;DX
622)   132C 19          		 ADD HL, DE	;
623)   132D FD 74 09    		 LD (IY + 9), H        ;t += dx;	;t += dx;
624)   1330 FD 75 08    		 LD (IY + 8), L	;
625)   1333 EB          		 EX DE, HL	;
626)   1334 21 00 80    		 LD HL, $8000	;
627)   1337 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
628)   1339 38 AD       		 JR C, DLAGN1        ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
629)   133B FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
630)   133E FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
631)   1341 DD 66 07    		 LD H, (IX + 7)        ;COL HI	;COL HI
632)   1344 DD 6E 06    		 LD L, (IX + 6)        ;COL LO	;COL LO
633)   1347 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
634)   1348 DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
635)   134B DD 75 06    		 LD (IX + 6), L        ;	;
637)   134E FD 66 09    		 LD H, (IY + 9)        ; T	; T
638)   1351 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
639)   1354 FD 46 03    		 LD B, (IY + 3)        ;DY	;DY
640)   1357 FD 4E 02    		 LD C, (IY + 2)        ;DY	;DY
641)   135A ED 42       		 SBC HL, BC	;
642)   135C FD 74 09    		 LD (IY + 9), H        ;t -= dY;	;t -= dY;
643)   135F FD 75 08    		 LD (IY + 8), L	;
644)   1362 C3 E8 12    		 JP DLAGN1	;
646)   1365 19          		 ADD HL, DE        ;HL=DY DE=DX	;HL=DY DE=DX
647)   1366 42          		 LD B, D	;
648)   1367 4B          		 LD C, E	;
649)   1368 CB 38       		 SRL B	;
650)   136A CB 19       		 RR C         ;(dX >> 1)	;(dX >> 1)
651)   136C 21 00 00    		 LD HL, 0	;
652)   136F ED 42       		 SBC HL, BC        ;t = - (dX >> 1);	;t = - (dX >> 1);
653)   1371 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
654)   1374 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
656)   1377 DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
657)   137A DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
658)   137D DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
659)   1380 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
660)   1383 E5          		 PUSH HL        ;SAVE COL	;SAVE COL
661)   1384 DD E5       		 PUSH IX	;
662)   1386 E5          		 PUSH HL	;
663)   1387 D5          		 PUSH DE	;
664)   1388 E5          		 PUSH HL	;
665)   1389 D5          		 PUSH DE	;
666)   138A CD C3 10    		 CALL LCD_SETXY	;
667)   138D 2A 01 FE    		 LD HL, (FCOLOR)	;
668)   1390 CD 10 11    		 CALL LCD_SETPIXEL	;
669)   1393 DD E1       		 POP IX	;
670)   1395 D1          		 POP DE         ;RETRIEVE COL	;RETRIEVE COL
671)   1396 DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
672)   1399 DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
673)   139C ED 52       		 SBC HL, DE        ; COL=X2?	; COL=X2?
674)   139E 28 53       		 JR Z, DLEXIT	;
675)   13A0 EB          		 EX DE, HL        ;HL=COL	;HL=COL
676)   13A1 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
677)   13A4 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
678)   13A7 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
679)   13A8 DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
680)   13AB DD 75 06    		 LD (IX + 6), L        ;	;
681)   13AE FD 56 09    		 LD D, (IY + 9)        ; T	; T
682)   13B1 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
683)   13B4 FD 66 03    		 LD H, (IY + 3)        ;DY	;DY
684)   13B7 FD 6E 02    		 LD L, (IY + 2)        ;DY	;DY
685)   13BA 19          		 ADD HL, DE	;
686)   13BB FD 74 09    		 LD (IY + 9), H        ;t += dY;	;t += dY;
687)   13BE FD 75 08    		 LD (IY + 8), L	;
688)   13C1 EB          		 EX DE, HL        ;T=DE	;T=DE
689)   13C2 21 00 80    		 LD HL, $8000	;
690)   13C5 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
691)   13C7 38 AE       		 JR C, DLAGN2        ;CARRY SET IF NEGATIVE	;CARRY SET IF NEGATIVE
692)   13C9 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
693)   13CC FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
694)   13CF DD 66 05    		 LD H, (IX + 5)        ;ROW HI	;ROW HI
695)   13D2 DD 6E 04    		 LD L, (IX + 4)        ;ROW LO	;ROW LO
696)   13D5 09          		 ADD HL, BC        ;ROW += Ystep;	;ROW += Ystep;
697)   13D6 DD 74 05    		 LD (IX + 5), H        ;SAVE COL	;SAVE COL
698)   13D9 DD 75 04    		 LD (IX + 4), L        ;	;
700)   13DC FD 66 09    		 LD H, (IY + 9)        ; T	; T
701)   13DF FD 6E 08    		 LD L, (IY + 8)        ; T	; T
702)   13E2 FD 46 07    		 LD B, (IY + 7)        ;DX	;DX
703)   13E5 FD 4E 06    		 LD C, (IY + 6)        ;DX	;DX
704)   13E8 ED 42       		 SBC HL, BC	;
705)   13EA FD 74 09    		 LD (IY + 9), H        ;t -= dX;	;t -= dX;
706)   13ED FD 75 08    		 LD (IY + 8), L	;
707)   13F0 C3 77 13    		 JP DLAGN2	;
710)   13F3 21 0A 00    		 LD HL, 5 * 2        ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
711)   13F6 39          		 ADD HL, SP        ;	;
712)   13F7 F9          		 LD SP, HL	;
713)   13F8 D1          		DLNEX: POP DE         ;RET ADDR	;RET ADDR
714)   13F9 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
715)   13FC 39          		 ADD HL, SP	;
716)   13FD F9          		 LD SP, HL	;
717)   13FE EB          		 EX DE, HL	;
718)   13FF E9          		 JP (HL)	;
723)   1400 C5          		@PLOTP: PUSH BC        ;SAVE BC	;SAVE BC
724)   1401 DD E5       		 PUSH IX	;
726)   1403 D5          		 PUSH DE	;
727)   1404 E5          		 PUSH HL	;
728)   1405 D5          		 PUSH DE	;
729)   1406 E5          		 PUSH HL	;
730)   1407 CD C3 10    		 CALL LCD_SETXY	;
731)   140A 2A 01 FE    		 LD HL, (FCOLOR)	;
732)   140D CD 10 11    		 CALL LCD_SETPIXEL	;
734)   1410 DD E1       		 POP IX	;
735)   1412 C1          		 POP BC         ;RESTORE BC	;RESTORE BC
736)   1413 C9          		 RET	;
741)   1414 E1          		 POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
742)   1415 D5          		 PUSH DE        ;F VAR	;F VAR
743)   1416 D5          		 PUSH DE        ;DDF_X	;DDF_X
744)   1417 D5          		 PUSH DE        ;DDF_Y	;DDF_Y
745)   1418 D5          		 PUSH DE        ;X1	;X1
746)   1419 D5          		 PUSH DE        ;Y1	;Y1
747)   141A E5          		 PUSH HL        ;RET ADDR	;RET ADDR
748)   141B DD 21 02 00 		 LD IX, 2	;
749)   141F DD 39       		 ADD IX, SP	;
767)   1421 AF          		 XOR A	;
768)   1422 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
769)   1425 DD 5E 0A    		 LD E, (IX + 10)       ;R	;R
770)   1428 DD 72 01    		 LD (IX + 1), D        ;Y1=R	;Y1=R
771)   142B DD 73 00    		 LD (IX + 0), E	;
772)   142E 21 01 00    		 LD HL, 1	;
773)   1431 DD 74 07    		 LD (IX + 7), H        ;DDF_X=1	;DDF_X=1
774)   1434 DD 75 06    		 LD (IX + 6), L	;
775)   1437 DD 74 03    		 LD (IX + 3), H        ;X1=0	;X1=0
776)   143A DD 74 02    		 LD (IX + 2), H	;
777)   143D ED 52       		 SBC HL, DE	;
778)   143F DD 74 09    		 LD (IX + 9), H        ;F	;F
779)   1442 DD 75 08    		 LD (IX + 8), L        ;F	;F
781)   1445 EB          		 EX DE, HL        ;HL=RADIUS	;HL=RADIUS
782)   1446 29          		 ADD HL, HL        ;2*R	;2*R
783)   1447 EB          		 EX DE, HL	;
784)   1448 21 00 00    		 LD HL, 0	;
785)   144B ED 52       		 SBC HL, DE        ;-2*R	;-2*R
786)   144D DD 74 05    		 LD (IX + 5), H	;
787)   1450 DD 75 04    		 LD (IX + 4), L        ;DDF_Y	;DDF_Y
789)   1453 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
790)   1456 DD 6E 0C    		 LD L, (IX + 12)	;
791)   1459 E5          		 PUSH HL        ;SAVE Y	;SAVE Y
792)   145A DD 56 0B    		 LD D, (IX + 11)       ;R	;R
793)   145D DD 5E 0A    		 LD E, (IX + 10)	;
794)   1460 D5          		 PUSH DE        ;SAVE R	;SAVE R
795)   1461 19          		 ADD HL, DE        ;Y+R	;Y+R
796)   1462 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
797)   1465 DD 5E 0E    		 LD E, (IX + 14)	;
798)   1468 D5          		 PUSH DE        ;SAVE X	;SAVE X
800)   1469 CD 00 14    		 CALL PLOTP	;
802)   146C D1          		 POP DE         ;GET X	;GET X
803)   146D C1          		 POP BC         ;GET R	;GET R
804)   146E E1          		 POP HL         ;GET Y	;GET Y
805)   146F E5          		 PUSH HL        ;SAVE VARS	;SAVE VARS
806)   1470 C5          		 PUSH BC	;
807)   1471 D5          		 PUSH DE	;
808)   1472 AF          		 XOR A	;
809)   1473 ED 42       		 SBC HL, BC        ;	;
811)   1475 CD 00 14    		 CALL PLOTP	;
813)   1478 E1          		 POP HL         ;GET X	;GET X
814)   1479 C1          		 POP BC         ;GET R	;GET R
815)   147A D1          		 POP DE         ;GET Y	;GET Y
816)   147B D5          		 PUSH DE        ;SAVE VARS	;SAVE VARS
817)   147C C5          		 PUSH BC	;
818)   147D E5          		 PUSH HL	;
819)   147E AF          		 XOR A	;
820)   147F ED 4A       		 ADC HL, BC	;
821)   1481 EB          		 EX DE, HL	;
823)   1482 CD 00 14    		 CALL PLOTP	;
825)   1485 E1          		 POP HL         ;GET X	;GET X
826)   1486 C1          		 POP BC         ;GET R	;GET R
827)   1487 D1          		 POP DE         ;GET Y	;GET Y
828)   1488 AF          		 XOR A	;
829)   1489 ED 42       		 SBC HL, BC	;
830)   148B EB          		 EX DE, HL	;
832)   148C CD 00 14    		 CALL PLOTP	;
835)   148F DD 66 03    		CIRC_AGN: LD H, (IX + 3)       ;X1	;X1
836)   1492 DD 6E 02    		 LD L, (IX + 2)        ;X1	;X1
837)   1495 DD 56 01    		 LD D, (IX + 1)        ;Y1	;Y1
838)   1498 DD 5E 00    		 LD E, (IX + 0)        ;Y1	;Y1
839)   149B AF          		 XOR A	;
840)   149C ED 52       		 SBC HL, DE	;
841)   149E D2 8D 15    		 JP NC, CIRC_EXIT	;
843)   14A1 19          		 ADD HL, DE	;
844)   14A2 E5          		 PUSH HL        ;SAVE X1	;SAVE X1
845)   14A3 D5          		 PUSH DE        ;SAVE Y1	;SAVE Y1
846)   14A4 21 00 00    		 LD HL, 0	;
847)   14A7 AF          		 XOR A	;
850)   14A8 DD 7E 09    		 LD A, (IX + 9)        ;F HI BYTE	;F HI BYTE
851)   14AB FE 50       		 CP 80	;
852)   14AD 30 26       		 JR NC, CIRC_SKIP	;
853)   14AF 28 24       		 JR Z, CIRC_SKIP	;
857)   14B1 D1          		 POP DE         ;Y1	;Y1
858)   14B2 1B          		 DEC DE	;
859)   14B3 DD 72 01    		 LD (IX + 1), D        ;SAVE Y1	;SAVE Y1
860)   14B6 DD 73 00    		 LD (IX + 0), E	;
861)   14B9 D5          		 PUSH DE        ;Y1	;Y1
862)   14BA DD 66 05    		 LD H, (IX + 5)        ;DDF_Y	;DDF_Y
863)   14BD DD 6E 04    		 LD L, (IX + 4)	;
864)   14C0 23          		 INC HL	;
865)   14C1 23          		 INC HL	;
866)   14C2 DD 74 05    		 LD (IX + 5), H        ;SAVE DDF_Y	;SAVE DDF_Y
867)   14C5 DD 75 04    		 LD (IX + 4), L	;
868)   14C8 DD 56 09    		 LD D, (IX + 9)        ;F	;F
869)   14CB DD 5E 08    		 LD E, (IX + 8)	;
870)   14CE 19          		 ADD HL, DE	;
871)   14CF DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
872)   14D2 DD 75 08    		 LD (IX + 8), L	;
876)   14D5 C1          		 POP BC         ;Y1	;Y1
877)   14D6 E1          		 POP HL         ;X1	;X1
878)   14D7 23          		 INC HL	;
879)   14D8 DD 74 03    		 LD (IX + 3), H        ;SAVE X1	;SAVE X1
880)   14DB DD 75 02    		 LD (IX + 2), L	;
881)   14DE E5          		 PUSH HL        ;X1	;X1
882)   14DF DD 66 07    		 LD H, (IX + 7)        ;DDF_X	;DDF_X
883)   14E2 DD 6E 06    		 LD L, (IX + 6)	;
884)   14E5 23          		 INC HL	;
885)   14E6 23          		 INC HL	;
886)   14E7 DD 74 07    		 LD (IX + 7), H        ;SAVE DDF_X	;SAVE DDF_X
887)   14EA DD 75 06    		 LD (IX + 6), L	;
888)   14ED DD 56 09    		 LD D, (IX + 9)        ;F	;F
889)   14F0 DD 5E 08    		 LD E, (IX + 8)	;
890)   14F3 19          		 ADD HL, DE	;
891)   14F4 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
892)   14F7 DD 75 08    		 LD (IX + 8), L	;
895)   14FA E1          		 POP HL         ;X1	;X1
896)   14FB E5          		 PUSH HL	;
897)   14FC DD 56 0F    		 LD D, (IX + 15)       ;X	;X
898)   14FF DD 5E 0E    		 LD E, (IX + 14)	;
899)   1502 D5          		 PUSH DE	;
900)   1503 19          		 ADD HL, DE	;
901)   1504 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
902)   1505 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
903)   1508 DD 6E 0C    		 LD L, (IX + 12)	;
904)   150B 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
906)   150C CD 00 14    		 CALL PLOTP	;
908)   150F E1          		 POP HL         ;X	;X
909)   1510 D1          		 POP DE         ;X1	;X1
910)   1511 D5          		 PUSH DE	;
911)   1512 E5          		 PUSH HL	;
912)   1513 AF          		 XOR A	;
913)   1514 ED 52       		 SBC HL, DE	;
914)   1516 EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
915)   1517 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
916)   151A DD 6E 0C    		 LD L, (IX + 12)	;
917)   151D 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
919)   151E CD 00 14    		 CALL PLOTP	;
921)   1521 E1          		 POP HL         ;X	;X
922)   1522 D1          		 POP DE         ;X1	;X1
923)   1523 D5          		 PUSH DE	;
924)   1524 E5          		 PUSH HL	;
925)   1525 19          		 ADD HL, DE	;
926)   1526 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
927)   1527 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
928)   152A DD 6E 0C    		 LD L, (IX + 12)	;
929)   152D AF          		 XOR A	;
930)   152E ED 42       		 SBC HL, BC        ;HL=Y+Y1	;HL=Y+Y1
932)   1530 CD 00 14    		 CALL PLOTP	;
934)   1533 E1          		 POP HL         ;X	;X
935)   1534 D1          		 POP DE         ;X1	;X1
936)   1535 D5          		 PUSH DE	;
937)   1536 E5          		 PUSH HL	;
938)   1537 AF          		 XOR A	;
939)   1538 ED 52       		 SBC HL, DE	;
940)   153A EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
941)   153B DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
942)   153E DD 6E 0C    		 LD L, (IX + 12)	;
943)   1541 AF          		 XOR A	;
944)   1542 ED 42       		 SBC HL, BC        ;HL=Y-Y1	;HL=Y-Y1
946)   1544 CD 00 14    		 CALL PLOTP	;
948)   1547 E1          		 POP HL         ;X	;X
949)   1548 D1          		 POP DE         ;X1	;X1
950)   1549 C5          		 PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
951)   154A E5          		 PUSH HL        ;SAVE X	;SAVE X
952)   154B D5          		 PUSH DE        ;SAVE X1	;SAVE X1
953)   154C 09          		 ADD HL, BC        ;	;
954)   154D C1          		 POP BC         ;BC=X1	;BC=X1
955)   154E EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
956)   154F DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
957)   1552 DD 6E 0C    		 LD L, (IX + 12)	;
958)   1555 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
960)   1556 CD 00 14    		 CALL PLOTP	;
962)   1559 E1          		 POP HL         ;X	;X
963)   155A D1          		 POP DE         ;Y1	;Y1
964)   155B D5          		 PUSH DE	;
965)   155C E5          		 PUSH HL	;
966)   155D AF          		 XOR A	;
967)   155E ED 52       		 SBC HL, DE	;
968)   1560 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
969)   1561 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
970)   1564 DD 6E 0C    		 LD L, (IX + 12)	;
971)   1567 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
973)   1568 CD 00 14    		 CALL PLOTP	;
975)   156B E1          		 POP HL         ;X	;X
976)   156C D1          		 POP DE         ;Y1	;Y1
977)   156D D5          		 PUSH DE	;
978)   156E E5          		 PUSH HL	;
979)   156F 19          		 ADD HL, DE	;
980)   1570 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
981)   1571 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
982)   1574 DD 6E 0C    		 LD L, (IX + 12)	;
983)   1577 AF          		 XOR A	;
984)   1578 ED 42       		 SBC HL, BC        ;HL=Y-X1	;HL=Y-X1
985)   157A E5          		 PUSH HL	;
987)   157B CD 00 14    		 CALL PLOTP	;
989)   157E C1          		 POP BC         ;Y-X1	;Y-X1
990)   157F E1          		 POP HL         ;X	;X
991)   1580 D1          		 POP DE         ;Y1	;Y1
992)   1581 AF          		 XOR A	;
993)   1582 ED 52       		 SBC HL, DE	;
994)   1584 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
995)   1585 C5          		 PUSH BC	;
996)   1586 E1          		 POP HL         ;HL=Y-X1	;HL=Y-X1
998)   1587 CD 00 14    		 CALL PLOTP	;
999)   158A C3 8F 14    		 JP CIRC_AGN	;
1000)   158D CD 78 11    		CIRC_EXIT: CALL LCD_CLRXY	;
1001)   1590 D1          		 POP DE         ;GET RET ADDR	;GET RET ADDR
1002)   1591 21 10 00    		 LD HL, 8 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
1003)   1594 39          		 ADD HL, SP        ;	;
1004)   1595 F9          		 LD SP, HL	;
1005)   1596 EB          		 EX DE, HL	;
1006)   1597 E9          		 JP (HL)	;
1013)   1598 D9          		 EXX	;
1014)   1599 D1          		 POP DE         ;save return addr to de'	;save return addr to de'
1015)   159A D9          		 EXX	;
1016)   159B CD 39 18    		 CALL _FILL	;
1017)   159E D9          		 EXX	;
1018)   159F D5          		 PUSH DE        ;restore return addr from de'	;restore return addr from de'
1019)   15A0 D9          		 EXX	;
1020)   15A1 C9          		 RET	;
1027)   15A2 FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
1028)   15A4 CA B4 15    		 JP Z, PRCH_DOBCKSPC	;
1029)   15A7 FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
1030)   15A9 C8          		 RET Z	;
1031)   15AA FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
1032)   15AC 20 3A       		 JR NZ, PRCH_DOPRN	;
1033)   15AE 21 0D FE    		 LD HL, CURSORX	;
1034)   15B1 C3 01 17    		 JP PRCH_NEWLN	;
1036)   15B4 21 0D FE    		 LD HL, CURSORX	;
1037)   15B7 7E          		 LD A, (HL)	;
1038)   15B8 38 05       		 JR C, DOREALBCKSPC	;
1040)   15BA FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1041)   15BC C8          		 RET Z	;
1042)   15BD 35          		 DEC (HL)	;
1043)   15BE C9          		 RET	;
1045)   15BF FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1046)   15C1 28 0A       		 JR Z, PRCH_DOBCKSPC2       ;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER	;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER
1047)   15C3 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1048)   15C4 E5          		 PUSH HL	;
1049)   15C5 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
1050)   15C7 CD E8 15    		 CALL PRCH_DOPRN       ;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN	;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN
1051)   15CA E1          		 POP HL	;
1052)   15CB 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1053)   15CC B7          		 OR A	;
1057)   15CD DD 21 02 00 		 LD IX, 2	;
1058)   15D1 DD 39       		 ADD IX, SP	;
1059)   15D3 DD 66 01    		 LD H, (IX + 1)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1060)   15D6 DD 6E 00    		 LD L, (IX)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1061)   15D9 3E 00       		 LD A, 0        ;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG	;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG
1062)   15DB 28 02       		 JR Z, PRCH_SKIP1       ;WE ARE ON COLUMN 1	;WE ARE ON COLUMN 1
1063)   15DD 2B          		 DEC HL         ;PREVIOUS POSITION DELETE BACKSPACE	;PREVIOUS POSITION DELETE BACKSPACE
1064)   15DE 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1066)   15DF 2B          		 DEC HL         ;PREVIOUS POSITION DELETE PREVIOUS CHAR	;PREVIOUS POSITION DELETE PREVIOUS CHAR
1067)   15E0 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1068)   15E1 DD 74 01    		 LD (IX + 1), H        ;PUT POSITION BACK ON STACK IT WILL POPED	;PUT POSITION BACK ON STACK IT WILL POPED
1069)   15E4 DD 75 00    		 LD (IX), L	;
1070)   15E7 C9          		 RET	;
1073)   15E8 F5          		 PUSH AF        ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
1074)   15E9 32 10 FE    		 LD (LASTCHAR), A       ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
1078)   15EC 3A 16 FE    		 LD A, (VDUMODE)	;
1079)   15EF FE 05       		 CP 5	;
1080)   15F1 20 19       		 JR NZ, VDU4	;
1081)   15F3 2A 5F FE    		 LD HL, (GR_LASTX)	;
1082)   15F6 E5          		 PUSH HL	;
1083)   15F7 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
1084)   15FB D5          		 PUSH DE	;
1085)   15FC 01 07 00    		 LD BC, FONT_WIDTH - 1	;
1086)   15FF 09          		 ADD HL, BC	;
1087)   1600 E5          		 PUSH HL	;
1088)   1601 01 09 00    		 LD BC, FONT_HEIGHT - 1	;
1089)   1604 EB          		 EX DE, HL	;
1090)   1605 09          		 ADD HL, BC	;
1091)   1606 E5          		 PUSH HL	;
1092)   1607 CD C3 10    		 CALL LCD_SETXY	;
1093)   160A 18 34       		 JR PRCHDO	;
1094)   160C 3A 0D FE    		VDU4: LD A, (CURSORX)	;
1095)   160F 06 08       		 LD B, FONT_WIDTH	;
1096)   1611 16 00       		 LD D, 0	;
1097)   1613 5F          		 LD E, A	;
1098)   1614 21 00 00    		 LD HL, 0	;
1099)   1617 B7          		 OR A         ; CLEAR CARRY	; CLEAR CARRY
1101)   1618 ED 5A       		 ADC HL, DE	;
1102)   161A 10 FC       		 DJNZ PRCH_AGN1        ;HL=DE*B	;HL=DE*B
1103)   161C E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1104)   161D 11 08 00    		 LD DE, FONT_WIDTH	;
1105)   1620 ED 5A       		 ADC HL, DE	;
1106)   1622 2B          		 DEC HL	;
1107)   1623 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1109)   1624 CD 76 16    		 CALL LCD_CALCLINE       ;SCROLL CALC	;SCROLL CALC
1110)   1627 06 0A       		 LD B, FONT_HEIGHT	;
1111)   1629 16 00       		 LD D, 0	;
1112)   162B 5F          		 LD E, A	;
1113)   162C 21 00 00    		 LD HL, 0	;
1115)   162F ED 5A       		 ADC HL, DE	;
1116)   1631 10 FC       		 DJNZ PRCH_AGN2	;
1117)   1633 D1          		 POP DE         ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
1118)   1634 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1119)   1635 D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1120)   1636 11 0A 00    		 LD DE, FONT_HEIGHT	;
1121)   1639 ED 5A       		 ADC HL, DE        ;CALC 4TH PARAM	;CALC 4TH PARAM
1122)   163B 2B          		 DEC HL         ;4TH PARAM -1	;4TH PARAM -1
1123)   163C E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1124)   163D CD C3 10    		 CALL LCD_SETXY	;
1125)   1640 F1          		PRCHDO: POP AF         ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
1126)   1641 B7          		 OR A	;
1127)   1642 21 00 75    		 LD HL, FONT_ADDR	;
1128)   1645 16 00       		 LD D, 0	;
1129)   1647 5F          		 LD E, A	;
1130)   1648 ED 5A       		 ADC HL, DE        ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
1131)   164A E5          		 PUSH HL	;
1132)   164B D1          		 POP DE         ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
1133)   164C 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
1135)   164E 1A          		 LD A, (DE)        ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1136)   164F 06 08       		 LD B, FONT_WIDTH	;
1138)   1651 CB 27       		 SLA A         ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1139)   1653 38 05       		 JR C, FORECOLOR	;
1140)   1655 2A 03 FE    		 LD HL, (BCOLOR)	;
1141)   1658 18 03       		 JR PRCH_CONT	;
1143)   165A 2A 01 FE    		 LD HL, (FCOLOR)	;
1145)   165D F5          		 PUSH AF	;
1146)   165E D5          		 PUSH DE        ;TODO:PROBABLY NOT NEEDED HERE	;TODO:PROBABLY NOT NEEDED HERE
1147)   165F CD 10 11    		 CALL LCD_SETPIXEL	;
1148)   1662 D1          		 POP DE	;
1149)   1663 F1          		 POP AF	;
1150)   1664 10 EB       		 DJNZ PRCH_AGN4	;
1151)   1666 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1152)   1667 0D          		 DEC C	;
1153)   1668 20 E4       		 JR NZ, PRCH_AGN3	;
1155)   166A 21 0D FE    		 LD HL, CURSORX	;
1156)   166D 7E          		 LD A, (HL)	;
1157)   166E 3C          		 INC A	;
1158)   166F FE 50       		 CP 80	;
1159)   1671 CA 01 17    		 JP Z, PRCH_NEWLN       ;NEW LINE	;NEW LINE
1160)   1674 77          		 LD (HL), A	;
1161)   1675 C9          		 RET	;
1164)   1676 3A 0F FE    		@LCD_CALCLINE: LD A, (SCRLN)	;
1165)   1679 57          		 LD D, A	;
1166)   167A 3A 0E FE    		 LD A, (CURSORY)       ;480/10 MAKES 48 LINES	;480/10 MAKES 48 LINES
1167)   167D 82          		 ADD A, D	;
1168)   167E FE 30       		 CP TOTLINES	;
1169)   1680 D8          		 RET C	;
1171)   1681 D6 30       		 SUB TOTLINES	;
1172)   1683 C9          		 RET	;
1177)   1684 16 33       		LCD_SETSCROLL: LD D, 0x33	;
1178)   1686 CD 4A 0F    		 CALL LCD_WR_COM	;
1179)   1689 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
1180)   168B CD 46 0F    		 CALL LCD_WR_DAT	;
1181)   168E 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
1182)   1690 CD 46 0F    		 CALL LCD_WR_DAT	;
1183)   1693 16 01       		 LD D, 0X01        ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
1184)   1695 CD 46 0F    		 CALL LCD_WR_DAT	;
1185)   1698 16 E0       		 LD D, 0XE0        ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
1186)   169A CD 46 0F    		 CALL LCD_WR_DAT	;
1187)   169D 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
1188)   169F CD 46 0F    		 CALL LCD_WR_DAT	;
1189)   16A2 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
1190)   16A4 CD 46 0F    		 CALL LCD_WR_DAT	;
1191)   16A7 AF          		 XOR A	;
1192)   16A8 32 0F FE    		 LD (SCRLN), A	;
1193)   16AB C9          		 RET	;
1196)   16AC 3A 0F FE    		@LCD_DOSCROLL: LD A, (SCRLN)	;
1197)   16AF 3C          		 INC A	;
1198)   16B0 FE 30       		 CP TOTLINES	;
1199)   16B2 38 02       		 JR C, DS_NXT	;
1200)   16B4 D6 30       		 SUB TOTLINES	;
1201)   16B6 32 0F FE    		DS_NXT: LD (SCRLN), A	;
1202)   16B9 6F          		 LD L, A	;
1203)   16BA 26 00       		 LD H, 0	;
1204)   16BC 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1205)   16BD 29          		 ADD HL, HL	;
1206)   16BE 29          		 ADD HL, HL	;
1207)   16BF 5F          		 LD E, A	;
1208)   16C0 16 00       		 LD D, 0	;
1209)   16C2 19          		 ADD HL, DE	;
1210)   16C3 19          		 ADD HL, DE	;
1211)   16C4 16 37       		 LD D, 0x37	;
1212)   16C6 CD 4A 0F    		 CALL LCD_WR_COM	;
1213)   16C9 54          		 LD D, H        ;NEW TOP SCROLL LINE BYTES HIGH (1-480)	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
1214)   16CA CD 46 0F    		 CALL LCD_WR_DAT	;
1215)   16CD 55          		 LD D, L        ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
1216)   16CE CD 46 0F    		 CALL LCD_WR_DAT	;
1217)   16D1 C9          		 RET	;
1220)   16D2 11 00 00    		@LCD_CLRTXTLN: LD DE, 0	;
1222)   16D5 D5          		 PUSH DE	;
1223)   16D6 6F          		 LD L, A	;
1224)   16D7 26 00       		 LD H, 0	;
1225)   16D9 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1226)   16DA 29          		 ADD HL, HL	;
1227)   16DB 29          		 ADD HL, HL	;
1228)   16DC 5F          		 LD E, A	;
1229)   16DD 16 00       		 LD D, 0	;
1230)   16DF 19          		 ADD HL, DE	;
1231)   16E0 19          		 ADD HL, DE	;
1233)   16E1 E5          		 PUSH HL	;
1234)   16E2 11 0A 00    		 LD DE, FONT_HEIGHT	;
1235)   16E5 19          		 ADD HL, DE	;
1237)   16E6 EB          		 EX DE, HL	;
1238)   16E7 21 1F 03    		 LD HL, LCD_WIDTH	;
1240)   16EA E5          		 PUSH HL	;
1241)   16EB D5          		 PUSH DE        ;PARAM4	;PARAM4
1242)   16EC CD C3 10    		 CALL LCD_SETXY	;
1243)   16EF 01 40 1F    		 LD BC, 8000        ; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
1244)   16F2 2A 03 FE    		 LD HL, (BCOLOR)	;
1245)   16F5 CD 10 11    		CTL_AGN: CALL LCD_SETPIXEL      ;DESTROYS D,A	;DESTROYS D,A
1246)   16F8 0B          		 DEC BC	;
1247)   16F9 78          		 LD A, B	;
1248)   16FA B1          		 OR C	;
1249)   16FB 20 F8       		 JR NZ, CTL_AGN	;
1250)   16FD CD 78 11    		 CALL LCD_CLRXY	;
1251)   1700 C9          		 RET	;
1255)   1701 AF          		 XOR A	;
1256)   1702 77          		 LD (HL), A	;
1257)   1703 23          		 INC HL	;
1258)   1704 7E          		 LD A, (HL)	;
1259)   1705 3C          		 INC A	;
1261)   1706 FE 30       		 CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
1262)   1708 28 02       		 JR Z, PRCH_SCROLL	;
1263)   170A 77          		 LD (HL), A	;
1264)   170B C9          		 RET	;
1266)   170C F5          		PRCH_SCROLL: PUSH AF	;
1267)   170D E5          		 PUSH HL	;
1269)   170E 3A 0F FE    		 LD A, (SCRLN)	;
1270)   1711 CD D2 16    		 CALL LCD_CLRTXTLN	;
1272)   1714 CD AC 16    		 CALL LCD_DOSCROLL	;
1273)   1717 E1          		 POP HL	;
1274)   1718 F1          		 POP AF	;
1276)   1719 3D          		 DEC A	;
1277)   171A 77          		 LD (HL), A        ;CURSORY	;CURSORY
1278)   171B AF          		 XOR A	;
1279)   171C 32 0D FE    		 LD (CURSORX), A	;
1280)   171F C9          		 RET	;
1295)   1720 2A 03 FE    		 LD HL, (BCOLOR)       ;	;
1296)   1723 18 03       		 JR LCD_SETCURS	;
1307)   1725 2A 01 FE    		 LD HL, (FCOLOR)       ;COLOR PARAM	;COLOR PARAM
1310)   1728 E5          		 PUSH HL        ;COLOR PARAM	;COLOR PARAM
1311)   1729 3A 0D FE    		 LD A, (CURSORX)	;
1312)   172C 06 08       		 LD B, FONT_WIDTH	;
1313)   172E 16 00       		 LD D, 0	;
1314)   1730 5F          		 LD E, A	;
1315)   1731 21 00 00    		 LD HL, 0	;
1316)   1734 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
1318)   1735 ED 5A       		 ADC HL, DE	;
1319)   1737 10 FC       		 DJNZ SCUR_AGN1        ;HL = DE * B	;HL = DE * B
1320)   1739 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1321)   173A 01 08 00    		 LD BC, FONT_WIDTH	;
1322)   173D ED 4A       		 ADC HL, BC        ;NEXT CHAR	;NEXT CHAR
1323)   173F 2B          		 DEC HL         ;MINUS 1	;MINUS 1
1324)   1740 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1326)   1741 CD 76 16    		 CALL LCD_CALCLINE	;
1327)   1744 06 0A       		 LD B, FONT_HEIGHT	;
1328)   1746 16 00       		 LD D, 0	;
1329)   1748 5F          		 LD E, A	;
1330)   1749 21 00 00    		 LD HL, 0	;
1332)   174C ED 5A       		 ADC HL, DE	;
1333)   174E 10 FC       		 DJNZ SCUR_AGN2        ;HL=B*DE	;HL=B*DE
1334)   1750 0E 08       		 LD C, FONT_HEIGHT - 2       ;2 PIXEL HEIGTH CURSOR	;2 PIXEL HEIGTH CURSOR
1335)   1752 06 00       		 LD B, 0	;
1336)   1754 ED 4A       		 ADC HL, BC        ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
1337)   1756 D1          		 POP DE         ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
1338)   1757 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1339)   1758 D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1341)   1759 23          		 INC HL         ; Y2 ADD THE LAST +2 PIXELS	; Y2 ADD THE LAST +2 PIXELS
1342)   175A E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1343)   175B CD C3 10    		 CALL LCD_SETXY	;
1345)   175E E1          		 POP HL         ;GET THE COLOR	;GET THE COLOR
1346)   175F 06 10       		 LD B, 2 * FONT_WIDTH       ;2*8=16	;2*8=16
1348)   1761 CD 10 11    		 CALL LCD_SETPIXEL       ;DESTROYS D,A	;DESTROYS D,A
1349)   1764 10 FB       		 DJNZ SCUR_AGN3	;
1354)   1766 C9          		 RET	;
1357)   1767 CD 78 11    		 CALL LCD_CLRXY        ;	;
1358)   176A 2A 03 FE    		 LD HL, (BCOLOR)	;
1360)   176D 01 E0 01    		 LD BC, LCD_HEIGHT + 1	;
1361)   1770 C5          		CS_AGNA2: PUSH BC	;
1362)   1771 01 20 03    		 LD BC, LCD_WIDTH + 1	;
1363)   1774 CD 10 11    		CS_AGNA1: CALL LCD_SETPIXEL      ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1364)   1777 0B          		 DEC BC	;
1365)   1778 78          		 LD A, B	;
1366)   1779 B1          		 OR C	;
1367)   177A 20 F8       		 JR NZ, CS_AGNA1	;
1368)   177C C1          		 POP BC	;
1369)   177D 0B          		 DEC BC	;
1370)   177E 78          		 LD A, B	;
1371)   177F B1          		 OR C	;
1372)   1780 20 EE       		 JR NZ, CS_AGNA2	;
1373)   1782 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1374)   1785 22 0D FE    		 LD (CURSORX), HL	;
1375)   1788 C9          		 RET	;
1380)   1789 06 DF       		 LD B, LCD_HEIGHT.AND.0xFF      ;lsb	;lsb
1381)   178B 0E 02       		 LD C, LCD_HEIGHT.SHR.8 + 1      ;MSB+1	;MSB+1
1383)   178D C5          		 PUSH BC	;
1385)   178E 06 1F       		 LD B, LCD_WIDTH.AND.0xFF      ;lsb	;lsb
1386)   1790 0E 04       		 LD C, LCD_WIDTH.SHR.8 + 1      ;MSV+1	;MSV+1
1388)   1792 CD 10 11    		 CALL LCD_SETPIXEL       ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1389)   1795 10 FB       		 DJNZ CS_AGN1	;
1390)   1797 0D          		 DEC C	;
1391)   1798 20 F8       		 JR NZ, CS_AGN1	;
1392)   179A C1          		 POP BC	;
1393)   179B 10 F0       		 DJNZ CS_AGN2	;
1394)   179D 0D          		 DEC C	;
1395)   179E 20 ED       		 JR NZ, CS_AGN2	;
1396)   17A0 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1397)   17A3 22 0D FE    		 LD (CURSORX), HL	;
1398)   17A6 C9          		 RET	;
1404)   17A7 7E          		 LD A, (HL)	;
1405)   17A8 FE 00       		 CP 0	;
1406)   17AA C8          		 RET Z	;
1407)   17AB E5          		 PUSH HL	;
1408)   17AC CD A2 15    		 CALL LCD_PRINTCHAR	;
1409)   17AF E1          		 POP HL	;
1410)   17B0 23          		 INC HL	;
1411)   17B1 18 F4       		 JR LCD_MSG	;
  3)   17B3 AF          		NEGHL: xor a	;
  4)   17B4 95          		 sub l	;
  5)   17B5 6F          		 ld l, a	;
  6)   17B6 9F          		 sbc a, a	;
  7)   17B7 94          		 sub h	;
  8)   17B8 67          		 ld h, a	;
  9)   17B9 C9          		 RET	;
 13)   17BA 2A 79 FE    		 LD HL, (FILL_IDX)	;
 14)   17BD 01 58 02    		 LD BC, MAXQ	;
 15)   17C0 A7          		 AND A	;
 16)   17C1 ED 42       		 SBC HL, BC	;
 17)   17C3 D0          		 RET NC     ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 18)   17C4 2A 7B FE    		 LD HL, (FILL_PY)	;
 19)   17C7 ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 20)   17CB 19          		 ADD HL, DE	;
 21)   17CC 7C          		 LD A, H	;
 22)   17CD FE 80       		 CP 80H	;
 23)   17CF D0          		 RET NC     ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 24)   17D0 11 1F 03    		 LD DE, LCD_WIDTH	;
 25)   17D3 ED 52       		 SBC HL, DE	;
 26)   17D5 D0          		 RET NC      ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 28)   17D6 2A 77 FE    		 LD HL, (FILL_Q)	;
 29)   17D9 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 30)   17DD 78          		 LD A, B	;
 31)   17DE B1          		 OR C       ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 32)   17DF 28 08       		 JR Z, QPS_NXT1	;
 33)   17E1 EB          		 EX DE, HL	;
 34)   17E2 C5          		 PUSH BC	;
 35)   17E3 E1          		 POP HL	;
 36)   17E4 29          		 ADD HL, HL	;
 37)   17E5 29          		 ADD HL, HL	;
 38)   17E6 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 39)   17E7 EB          		 EX DE, HL	;
 40)   17E8 19          		 ADD HL, DE	;
 42)   17E9 11 7B FE    		 LD DE, FILL_PY	;
 43)   17EC EB          		 EX DE, HL      ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 44)   17ED 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 45)   17F0 ED B0       		 LDIR       ;COPY	;COPY
 46)   17F2 2A 79 FE    		 LD HL, (FILL_IDX)	;
 47)   17F5 23          		 INC HL	;
 48)   17F6 22 79 FE    		 LD (FILL_IDX), HL	;
 49)   17F9 C9          		QPS_EXT: RET	;
 51)   17FA 2A 77 FE    		QPOP: LD HL, (FILL_Q)	;
 52)   17FD ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 53)   1801 0B          		 DEC BC	;
 54)   1802 C5          		 PUSH BC	;
 55)   1803 78          		 LD A, B	;
 56)   1804 B1          		 OR C       ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 57)   1805 28 08       		 JR Z, QPP_NXT1	;
 58)   1807 EB          		 EX DE, HL	;
 59)   1808 C5          		 PUSH BC	;
 60)   1809 E1          		 POP HL	;
 61)   180A 29          		 ADD HL, HL	;
 62)   180B 29          		 ADD HL, HL	;
 63)   180C 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 64)   180D EB          		 EX DE, HL	;
 65)   180E 19          		 ADD HL, DE	;
 66)   180F C1          		QPP_NXT1: POP BC	;
 67)   1810 ED 43 79 FE 		 LD (FILL_IDX), BC	;
 69)   1814 11 7B FE    		 LD DE, FILL_PY     ;ORIGIN=QUEUE DEST=FILL_PY	;ORIGIN=QUEUE DEST=FILL_PY
 70)   1817 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 71)   181A ED B0       		 LDIR       ;COPY	;COPY
 72)   181C 2A 7D FE    		 LD HL, (FILL_PXL)	;
 73)   181F 22 71 FE    		 LD (FILL_X1), HL	;
 74)   1822 2A 7F FE    		 LD HL, (FILL_PXR)	;
 75)   1825 22 73 FE    		 LD (FILL_X2), HL	;
 76)   1828 ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 77)   182C ED 53 75 FE 		 LD (FILL_DY), DE	;
 78)   1830 2A 7B FE    		 LD HL, (FILL_PY)	;
 79)   1833 A7          		 AND A	;
 80)   1834 19          		 ADD HL, DE	;
 81)   1835 22 6D FE    		 LD (FILL_Y), HL	;
 89)   1838 C9          		 RET	;
 91)   1839 E1          		@_FILL: POP HL     ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 92)   183A D1          		 POP DE      ;Y	;Y
 93)   183B C1          		 POP BC      ;X	;X
 94)   183C E5          		 PUSH HL      ;RET ADDR TO SP	;RET ADDR TO SP
 95)   183D ED 43 6B FE 		 LD (FILL_X), BC	;
 96)   1841 ED 53 6D FE 		 LD (FILL_Y), DE	;
 97)   1845 ED 73 85 FE 		 LD (FILL_OLDSP), SP	;
 98)   1849 21 3E ED    		 LD HL, - ((MAXQ * 8) + 2)  ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
 99)   184C 39          		 ADD HL, SP	;
100)   184D F9          		 LD SP, HL      ;NEW SP	;NEW SP
103)   184E 22 77 FE    		 LD (FILL_Q), HL     ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
104)   1851 21 00 00    		 LD HL, 0	;
105)   1854 22 79 FE    		 LD (FILL_IDX), HL    ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
109)   1857 2A 6B FE    		 LD HL, (FILL_X)    ;	;
110)   185A E5          		 PUSH HL	;
111)   185B 2A 6D FE    		 LD HL, (FILL_y)    ;	;
112)   185E E5          		 PUSH HL	;
113)   185F CD 27 11    		 CALL LCD_READPIXEL	;
114)   1862 22 83 FE    		 LD (FILL_OV), HL	;
116)   1865 ED 5B 01 FE 		 LD DE, (FCOLOR)	;
117)   1869 A7          		 AND A	;
118)   186A ED 52       		 SBC HL, DE      ;CHK OV=NV	;CHK OV=NV
119)   186C CA F1 19    		 JP Z, FL_EXIT	;
120)   186F 2A 6B FE    		 LD HL, (FILL_X)	;
121)   1872 7C          		 LD A, H	;
122)   1873 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
123)   1875 D2 F1 19    		 JP NC, FL_EXIT	;
124)   1878 11 1F 03    		 LD DE, LCD_WIDTH	;
125)   187B A7          		 AND A	;
126)   187C ED 52       		 SBC HL, DE      ;CHK>799	;CHK>799
127)   187E D2 F1 19    		 JP NC, FL_EXIT	;
128)   1881 2A 6D FE    		 LD HL, (FILL_Y)	;
129)   1884 7C          		 LD A, H	;
130)   1885 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
131)   1887 D2 F1 19    		 JP NC, FL_EXIT	;
132)   188A 11 DF 01    		 LD DE, LCD_HEIGHT	;
133)   188D A7          		 AND A	;
134)   188E ED 52       		 SBC HL, DE      ;CHK>480	;CHK>480
135)   1890 D2 F1 19    		 JP NC, FL_EXIT	;
137)   1893 2A 6D FE    		 LD HL, (FILL_Y)	;
138)   1896 22 7B FE    		 LD (FILL_PY), HL	;
139)   1899 2A 6B FE    		 LD HL, (FILL_X)	;
140)   189C 22 7D FE    		 LD (FILL_PXL), HL	;
141)   189F 22 7F FE    		 LD (FILL_PXR), HL	;
142)   18A2 21 01 00    		 LD HL, 1	;
143)   18A5 22 81 FE    		 LD (FILL_PDY), HL	;
144)   18A8 CD BA 17    		 CALL QPUSH      ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
146)   18AB 2A 6D FE    		 LD HL, (FILL_Y)	;
147)   18AE 23          		 INC HL	;
148)   18AF 22 7B FE    		 LD (FILL_PY), HL	;
149)   18B2 21 FF FF    		 LD HL, - 1	;
150)   18B5 22 81 FE    		 LD (FILL_PDY), HL	;
151)   18B8 CD BA 17    		 CALL QPUSH	;
153)   18BB ED 5B 79 FE 		 LD DE, (FILL_IDX)	;
154)   18BF 7A          		 LD A, D	;
155)   18C0 B3          		 OR E	;
156)   18C1 CA F1 19    		 JP Z, FL_EXIT     ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
160)   18C4 CD FA 17    		 CALL QPOP      ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
163)   18C7 2A 71 FE    		 LD HL, (FILL_X1)	;
164)   18CA 22 6B FE    		 LD (FILL_X), HL	;
165)   18CD 7C          		FL_LP1: LD A, H	;
166)   18CE FE 80       		 CP 0x80      ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
167)   18D0 D2 F8 18    		 JP NC, FL_NXT1	;
168)   18D3 ED 5B 6D FE 		 LD DE, (FILL_Y)	;
169)   18D7 E5          		 PUSH HL	;
170)   18D8 D5          		 PUSH DE	;
171)   18D9 CD 27 11    		 CALL LCD_READPIXEL	;
172)   18DC ED 5B 83 FE 		 LD DE, (FILL_OV)	;
173)   18E0 A7          		 AND A	;
174)   18E1 ED 52       		 SBC HL, DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
175)   18E3 C2 F8 18    		 JP NZ, FL_NXT1	;
176)   18E6 ED 5B 6B FE 		 LD DE, (FILL_X)	;
177)   18EA 2A 6D FE    		 LD HL, (FILL_Y)	;
178)   18ED D5          		 PUSH DE	;
179)   18EE CD 00 14    		 CALL PLOTP	;
180)   18F1 E1          		 POP HL	;
181)   18F2 2B          		 DEC HL	;
182)   18F3 22 6B FE    		 LD (FILL_X), HL	;
183)   18F6 18 D5       		 JR FL_LP1	;
187)   18F8 2A 6B FE    		 LD HL, (FILL_X)	;
188)   18FB ED 5B 71 FE 		 LD DE, (FILL_X1)	;
189)   18FF 7C          		 LD A, H	;
190)   1900 FE 80       		 CP 80H	;
191)   1902 30 08       		 JR NC, FL_NXT1A     ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
192)   1904 A7          		 AND A	;
193)   1905 ED 52       		 SBC HL, DE      ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
194)   1907 D2 AF 19    		 JP NC, FL_SKIP     ;C IF DE>HL X1>X, NC IF X>=X1	;C IF DE>HL X1>X, NC IF X>=X1
195)   190A ED 5A       		 ADC HL, DE	;
198)   190C 23          		 INC HL	;
199)   190D 22 6F FE    		 LD (FILL_L), HL	;
202)   1910 A7          		 AND A	;
203)   1911 ED 52       		 SBC HL, DE      ;CHK L-X1	;CHK L-X1
204)   1913 30 1E       		 JR NC, FL_NXT2     ;C IF DE>HL X1>L	;C IF DE>HL X1>L
205)   1915 28 1C       		 JR Z, FL_NXT2	;
206)   1917 ED 5A       		 ADC HL, DE	;
207)   1919 22 7D FE    		 LD (FILL_PXL), HL    ;L	;L
208)   191C 2A 6D FE    		 LD HL, (FILL_Y)	;
209)   191F 22 7B FE    		 LD (FILL_PY), HL	;
210)   1922 1B          		 DEC DE	;
211)   1923 ED 53 7F FE 		 LD (FILL_PXR), DE	;
212)   1927 2A 75 FE    		 LD HL, (FILL_DY)	;
213)   192A CD B3 17    		 CALL NEGHL	;
214)   192D 22 81 FE    		 LD (FILL_PDY), HL	;
215)   1930 CD BA 17    		 CALL QPUSH	;
219)   1933 2A 71 FE    		 LD HL, (FILL_X1)     ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
220)   1936 23          		 INC HL	;
221)   1937 22 6B FE    		 LD (FILL_X), HL	;
225)   193A 11 1F 03    		 LD DE, LCD_WIDTH	;
226)   193D A7          		 AND A	;
227)   193E EB          		 EX DE, HL	;
228)   193F ED 52       		 SBC HL, DE      ;800-(X=DE)	;800-(X=DE)
229)   1941 38 24       		 JR C, FL_NXT3     ;C IF X>800	;C IF X>800
230)   1943 EB          		 EX DE, HL      ;HL=X	;HL=X
231)   1944 E5          		 PUSH HL	;
232)   1945 2A 6D FE    		 LD HL, (FILL_Y)	;
233)   1948 E5          		 PUSH HL	;
234)   1949 CD 27 11    		 CALL LCD_READPIXEL	;
235)   194C ED 5B 83 FE 		 LD DE, (FILL_OV)	;
236)   1950 A7          		 AND A	;
237)   1951 ED 52       		 SBC HL, DE      ;PIXELREAD=OV	;PIXELREAD=OV
238)   1953 20 12       		 JR NZ, FL_NXT3	;
239)   1955 ED 5B 6B FE 		 LD DE, (FILL_X)	;
240)   1959 2A 6D FE    		 LD HL, (FILL_Y)	;
241)   195C D5          		 PUSH DE	;
242)   195D CD 00 14    		 CALL PLOTP	;
243)   1960 E1          		 POP HL	;
244)   1961 23          		 INC HL	;
245)   1962 22 6B FE    		 LD (FILL_X), HL	;
246)   1965 18 D3       		 JR FL_LP2	;
249)   1967 2A 6D FE    		 LD HL, (FILL_Y)	;
250)   196A 22 7B FE    		 LD (FILL_PY), HL	;
251)   196D 2A 6F FE    		 LD HL, (FILL_L)	;
252)   1970 22 7D FE    		 LD (FILL_PXL), HL	;
253)   1973 2A 6B FE    		 LD HL, (FILL_X)	;
254)   1976 2B          		 DEC HL	;
255)   1977 22 7F FE    		 LD (FILL_PXR), HL	;
256)   197A 2A 75 FE    		 LD HL, (FILL_DY)	;
257)   197D 22 81 FE    		 LD (FILL_PDY), HL	;
258)   1980 CD BA 17    		 CALL QPUSH	;
260)   1983 2A 6B FE    		 LD HL, (FILL_X)	;
261)   1986 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
262)   198A 13          		 INC DE	;
263)   198B A7          		 AND A	;
264)   198C ED 52       		 SBC HL, DE      ;X-(X2+1) C IF X2+1>X	;X-(X2+1) C IF X2+1>X
265)   198E 38 1F       		 JR C, FL_NXT4	;
266)   1990 28 1D       		 JR Z, FL_NXT4	;
267)   1992 2A 6D FE    		 LD HL, (FILL_Y)	;
268)   1995 22 7B FE    		 LD (FILL_PY), HL	;
269)   1998 ED 53 7D FE 		 LD (FILL_PXL), DE	;
270)   199C 2A 6B FE    		 LD HL, (FILL_X)    ;	;
271)   199F 2B          		 DEC HL	;
272)   19A0 22 7F FE    		 LD (FILL_PXR), HL	;
273)   19A3 2A 75 FE    		 LD HL, (FILL_DY)	;
274)   19A6 CD B3 17    		 CALL NEGHL	;
275)   19A9 22 81 FE    		 LD (FILL_PDY), HL	;
276)   19AC CD BA 17    		 CALL QPUSH	;
279)   19AF 2A 6B FE    		 LD HL, (FILL_X)	;
280)   19B2 23          		 INC HL	;
281)   19B3 22 6B FE    		 LD (FILL_X), HL	;
282)   19B6 ED 5B 73 FE 		FL_LP3: LD DE, (FILL_X2)	;
283)   19BA A7          		 AND A	;
284)   19BB EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
285)   19BC ED 52       		 SBC HL, DE      ;C IF DE>HL X>X2	;C IF DE>HL X>X2
286)   19BE 38 1C       		 JR C, FL_NXT5	;
287)   19C0 19          		 ADD HL, DE      ;	;
288)   19C1 EB          		 EX DE, HL      ;X=HL X2=DE	;X=HL X2=DE
289)   19C2 E5          		 PUSH HL	;
290)   19C3 2A 6D FE    		 LD HL, (FILL_Y)	;
291)   19C6 E5          		 PUSH HL	;
292)   19C7 CD 27 11    		 CALL LCD_READPIXEL	;
293)   19CA ED 5B 83 FE 		 LD DE, (FILL_OV)	;
294)   19CE A7          		 AND A	;
295)   19CF ED 52       		 SBC HL, DE      ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
296)   19D1 28 09       		 JR Z, FL_NXT5	;
297)   19D3 2A 6B FE    		 LD HL, (FILL_X)	;
298)   19D6 23          		 INC HL	;
299)   19D7 22 6B FE    		 LD (FILL_X), HL	;
300)   19DA 18 DA       		 JR FL_LP3	;
303)   19DC 2A 6B FE    		 LD HL, (FILL_X)	;
304)   19DF 22 6F FE    		 LD (FILL_L), HL	;
306)   19E2 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
307)   19E6 A7          		 AND A	;
308)   19E7 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
309)   19E8 ED 52       		 SBC HL, DE      ;X2-X C IF X>X2	;X2-X C IF X>X2
310)   19EA EB          		 EX DE, HL      ;X=HL X2-X=DE	;X=HL X2-X=DE
311)   19EB DA BB 18    		 JP C, FL_LP0    ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
312)   19EE C3 3A 19    		 JP FL_LP2      ;GOTO DO WHILE	;GOTO DO WHILE
315)   19F1 21 C2 12    		FL_EXIT: LD HL, (MAXQ * 8) + 2  ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
316)   19F4 39          		 ADD HL, SP	;
317)   19F5 F9          		 LD SP, HL      ;NEW SP	;NEW SP
318)   19F6 C9          		 RET	;
  9)   19F7 FE 01       		 CP 1         ;IS IT FOR GRAPHICS?	;IS IT FOR GRAPHICS?
 10)   19F9 28 0E       		 JR Z, GRCOLS	;
 11)   19FB 21 03 FE    		 LD HL, BCOLOR	;
 12)   19FE 22 69 FE    		 LD (GR_PARAM4), HL	;
 13)   1A01 21 01 FE    		 LD HL, FCOLOR	;
 14)   1A04 22 67 FE    		 LD (GR_PARAM3), HL	;
 15)   1A07 18 0C       		 JR BS_DOCOL	;
 16)   1A09 21 07 FE    		GRCOLS: LD HL, BGRCOL	;
 17)   1A0C 22 69 FE    		 LD (GR_PARAM4), HL	;
 18)   1A0F 21 05 FE    		 LD HL, FGRCOL	;
 19)   1A12 22 67 FE    		 LD (GR_PARAM3), HL	;
 20)   1A15 CD 94 5E    		BS_DOCOL: CALL EXPRI       ;GET 1ST PARAM	;GET 1ST PARAM
 21)   1A18 D9          		 EXX	;
 22)   1A19 FD 7E 00    		 LD A, (IY)	;
 23)   1A1C FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
 24)   1A1E 28 32       		 JR Z, COLSEL	;
 25)   1A20 FE 3A       		 CP ':'	;
 26)   1A22 28 2E       		 JR Z, COLSEL	;
 27)   1A24 FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
 28)   1A26 C2 C5 1D    		 JP NZ, GRPHERR	;
 30)   1A29 E5          		 PUSH HL        ;SAVE 1ST PARAM	;SAVE 1ST PARAM
 31)   1A2A FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
 32)   1A2C CD 94 5E    		 CALL EXPRI        ;GET 2ND PARAM	;GET 2ND PARAM
 33)   1A2F D9          		 EXX	;
 34)   1A30 D1          		 POP DE         ;RESTORE 1ST PARAM ON DE HL HAS THE 2ND	;RESTORE 1ST PARAM ON DE HL HAS THE 2ND
 35)   1A31 7B          		 LD A, E	;
 36)   1A32 D6 80       		 SUB 128	;
 37)   1A34 38 07       		 JR C, COLFC	;
 38)   1A36 5F          		 LD E, A	;
 39)   1A37 DD 21 37 FE 		 LD IX, BCOLPAL	;
 40)   1A3B 18 04       		 JR DOPALCOL	;
 41)   1A3D DD 21 17 FE 		COLFC: LD IX, FCOLPAL	;
 43)   1A41 7B          		 LD A, E	;
 44)   1A42 FE 0F       		 CP 15         ;MAX 16 COLORS	;MAX 16 COLORS
 45)   1A44 D2 C5 1D    		 JP NC, GRPHERR	;
 46)   1A47 DD 19       		 ADD IX, DE	;
 47)   1A49 DD 19       		 ADD IX, DE        ;2*DE CAUSE ITS A 2 BYTE ARRAY	;2*DE CAUSE ITS A 2 BYTE ARRAY
 48)   1A4B DD 75 00    		 LD (IX), L        ;SAVE THE NEW COLOR	;SAVE THE NEW COLOR
 49)   1A4E DD 74 01    		 LD (IX + 1), H	;
 50)   1A51 C9          		 RET	;
 53)   1A52 E5          		 PUSH HL	;
 54)   1A53 D1          		 POP DE	;
 55)   1A54 7B          		 LD A, E	;
 56)   1A55 D6 80       		 SUB 128        ;CHECK MSB	;CHECK MSB
 57)   1A57 38 11       		 JR C, CFC	;
 58)   1A59 5F          		 LD E, A	;
 59)   1A5A DD 21 69 FE 		 LD IX, GR_PARAM4	;
 60)   1A5E DD 6E 00    		 LD L, (IX)	;
 61)   1A61 DD 66 01    		 LD H, (IX + 1)	;
 62)   1A64 DD 21 37 FE 		 LD IX, BCOLPAL        ;BACKCOLOR	;BACKCOLOR
 63)   1A68 18 0E       		 JR SFC	;
 64)   1A6A DD 21 67 FE 		CFC: LD IX, GR_PARAM3	;
 65)   1A6E DD 6E 00    		 LD L, (IX)	;
 66)   1A71 DD 66 01    		 LD H, (IX + 1)	;
 67)   1A74 DD 21 17 FE 		 LD IX, FCOLPAL        ;FRONTCOLOR	;FRONTCOLOR
 68)   1A78 7B          		SFC: LD A, E	;
 69)   1A79 FE 10       		 CP 16         ;MAX 16 COLORS	;MAX 16 COLORS
 70)   1A7B D2 C5 1D    		 JP NC, GRPHERR	;
 71)   1A7E DD 19       		 ADD IX, DE	;
 72)   1A80 DD 19       		 ADD IX, DE	;
 73)   1A82 DD 56 00    		 LD D, (IX)	;
 74)   1A85 DD 5E 01    		 LD E, (IX + 1)	;
 75)   1A88 72          		 LD (HL), D        ;SAVE AGAIN	;SAVE AGAIN
 76)   1A89 23          		 INC HL	;
 77)   1A8A 73          		 LD (HL), E	;
 78)   1A8B C9          		 RET	;
 84)   1A8C AF          		 XOR A	;
 85)   1A8D 21 63 FE    		 LD HL, GR_PARAM1	;
 87)   1A90 F5          		 PUSH AF	;
 88)   1A91 E5          		 PUSH HL	;
 89)   1A92 CD 94 5E    		 CALL EXPRI        ;GET 1ST PARAM	;GET 1ST PARAM
 90)   1A95 D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
 91)   1A96 D1          		 POP DE         ;GET PARAM ADDRESS	;GET PARAM ADDRESS
 92)   1A97 EB          		 EX DE, HL	;
 93)   1A98 73          		 LD (HL), E	;
 94)   1A99 23          		 INC HL	;
 95)   1A9A 72          		 LD (HL), D	;
 96)   1A9B 23          		 INC HL         ;PARAM SAVED	;PARAM SAVED
 97)   1A9C F1          		 POP AF	;
 98)   1A9D 3C          		 INC A	;
 99)   1A9E FE 04       		 CP 4	;
100)   1AA0 C8          		 RET Z	;
101)   1AA1 F5          		 PUSH AF	;
102)   1AA2 FD 7E 00    		 LD A, (IY)	;
103)   1AA5 FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
104)   1AA7 28 0D       		 JR Z, NOMORE	;
105)   1AA9 FE 3A       		 CP ':'         ;FINISHED COMD LINE	;FINISHED COMD LINE
106)   1AAB 28 09       		 JR Z, NOMORE	;
107)   1AAD FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
108)   1AAF 20 05       		 JR NZ, NOMORE	;
109)   1AB1 FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
110)   1AB3 F1          		 POP AF	;
111)   1AB4 18 DA       		 JR GBP_NXT	;
112)   1AB6 F1          		NOMORE: POP AF	;
113)   1AB7 C9          		 RET	;
118)   1AB8 01 08 00    		 LD BC, 8        ;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD	;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD
119)   1ABB 11 57 FE    		 LD DE, GR_LASTX3	;
120)   1ABE 21 5B FE    		 LD HL, GR_LASTX2	;
121)   1AC1 ED B0       		 LDIR	;
122)   1AC3 2A 63 FE    		 LD HL, (GR_PARAM1)	;
123)   1AC6 22 5F FE    		 LD (GR_LASTX), HL       ;SAVE TO LAST	;SAVE TO LAST
124)   1AC9 2A 65 FE    		 LD HL, (GR_PARAM2)	;
125)   1ACC 22 61 FE    		 LD (GR_LASTY), HL       ;SAVE TO LAST	;SAVE TO LAST
126)   1ACF C9          		 RET	;
130)   1AD0 CD 8C 1A    		 CALL GETBASICPARAMS	;
131)   1AD3 FE 02       		 CP 2	;
132)   1AD5 C2 C5 1D    		 JP NZ, GRPHERR	;
133)   1AD8 CD F2 1B    		BAS_DODRAW: CALL GRPH_SAVECOLORS	;
134)   1ADB FD E5       		 PUSH IY	;
137)   1ADD 2A 5F FE    		 LD HL, (GR_LASTX)	;
138)   1AE0 E5          		 PUSH HL	;
139)   1AE1 2A 61 FE    		 LD HL, (GR_LASTY)	;
140)   1AE4 E5          		 PUSH HL	;
141)   1AE5 CD B8 1A    		 CALL GRPH_SAVELASTPOS	;
142)   1AE8 2A 63 FE    		 LD HL, (GR_PARAM1)	;
143)   1AEB E5          		 PUSH HL	;
144)   1AEC 2A 65 FE    		 LD HL, (GR_PARAM2)	;
145)   1AEF E5          		 PUSH HL	;
146)   1AF0 CD 1D 12    		 CALL LCD_DRAWLINE	;
148)   1AF3 FD E1       		 POP IY	;
149)   1AF5 CD 09 1C    		 CALL GRPH_RESTORECOLORS	;
150)   1AF8 C9          		 RET         ;RETURN TO BASIC	;RETURN TO BASIC
154)   1AF9 CD 8C 1A    		@BAS_MOVE: CALL GETBASICPARAMS	;
155)   1AFC FE 02       		 CP 2	;
156)   1AFE C2 C5 1D    		 JP NZ, GRPHERR	;
158)   1B01 CD B8 1A    		 CALL GRPH_SAVELASTPOS	;
159)   1B04 C9          		 RET	;
165)   1B05 CD 8C 1A    		@BAS_POINT: CALL GETBASICPARAMS	;
166)   1B08 FE 02       		 CP 2	;
167)   1B0A C2 C5 1D    		 JP NZ, GRPHERR	;
170)   1B0D 2A 63 FE    		 LD HL, (GR_PARAM1)	;
171)   1B10 E5          		 PUSH HL	;
172)   1B11 2A 65 FE    		 LD HL, (GR_PARAM2)	;
173)   1B14 E5          		 PUSH HL	;
174)   1B15 CD 27 11    		 CALL LCD_READPIXEL	;
178)   1B18 FD 7E 00    		 LD A, (IY)	;
179)   1B1B FE 29       		 CP ')'	;
180)   1B1D C2 C5 1D    		 JP NZ, GRPHERR	;
181)   1B20 FD 23       		 INC IY	;
184)   1B22 01 00 00    		 LD BC, 0	;
185)   1B25 F3          		 DI	;
186)   1B26 E5          		 PUSH HL	;
187)   1B27 D9          		 EXX	;
188)   1B28 E1          		 POP HL	;
189)   1B29 D9          		 EXX	;
190)   1B2A 21 00 00    		 LD HL, 0	;
191)   1B2D FB          		 EI	;
192)   1B2E C9          		 RET	;
198)   1B2F FE 00       		GRPH_GETGROUP: CP 0	;
200)   1B31 21 35 1D    		 LD HL, PLOT00	;
201)   1B34 C8          		 RET Z	;
202)   1B35 FE 0A       		 CP 80.SHR.3	;
203)   1B37 21 45 1D    		 LD HL, PLOT80	;
204)   1B3A C8          		 RET Z	;
205)   1B3B FE 0C       		 CP 96.SHR.3	;
206)   1B3D 21 55 1D    		 LD HL, PLOT96	;
207)   1B40 C8          		 RET Z	;
208)   1B41 FE 10       		 CP 128.SHR.3	;
209)   1B43 21 65 1D    		 LD HL, PLOT128	;
210)   1B46 C8          		 RET Z	;
211)   1B47 FE 12       		 CP 144.SHR.3	;
212)   1B49 21 75 1D    		 LD HL, PLOT144	;
213)   1B4C C8          		 RET Z	;
214)   1B4D FE 13       		 CP 152.SHR.3	;
215)   1B4F 21 85 1D    		 LD HL, PLOT152	;
216)   1B52 C8          		 RET Z	;
217)   1B53 FE 14       		 CP 160.SHR.3	;
218)   1B55 21 95 1D    		 LD HL, PLOT160	;
219)   1B58 C8          		 RET Z	;
220)   1B59 FE 18       		 CP 192.SHR.3	;
221)   1B5B 21 A5 1D    		 LD HL, PLOT192	;
222)   1B5E C8          		 RET Z	;
223)   1B5F FE 19       		 CP 200.SHR.3	;
224)   1B61 21 B5 1D    		 LD HL, PLOT200	;
225)   1B64 C8          		 RET Z	;
226)   1B65 21 00 00    		 LD HL, 0	;
227)   1B68 C9          		 RET	;
230)   1B69 CD 8C 1A    		@BAS_PLOT: CALL GETBASICPARAMS	;
231)   1B6C FE 03       		 CP 3	;
232)   1B6E C2 C5 1D    		 JP NZ, GRPHERR	;
233)   1B71 3A 63 FE    		 LD A, (GR_PARAM1)	;
235)   1B74 01 04 00    		 LD BC, 4	;
236)   1B77 21 65 FE    		 LD HL, GR_PARAM2	;
237)   1B7A 11 63 FE    		 LD DE, GR_PARAM1	;
238)   1B7D ED B0       		 LDIR	;
239)   1B7F 47          		 LD B, A        ;COMMAND GROUP 5 BITS	;COMMAND GROUP 5 BITS
240)   1B80 CB 38       		 SRL B	;
241)   1B82 CB 38       		 SRL B	;
242)   1B84 CB 38       		 SRL B	;
243)   1B86 E6 07       		 AND 7	;
244)   1B88 4F          		 LD C, A        ;SPECIFIC COMMAND IN GROUP	;SPECIFIC COMMAND IN GROUP
245)   1B89 78          		 LD A, B	;
246)   1B8A CD 2F 1B    		 CALL GRPH_GETGROUP	;
247)   1B8D 7C          		 LD A, H	;
248)   1B8E FE 00       		 CP 0	;
249)   1B90 C8          		 RET Z        ;RET IF HL=0 GROUP NOT IMPLEMENTED	;RET IF HL=0 GROUP NOT IMPLEMENTED
250)   1B91 06 00       		 LD B, 0	;
251)   1B93 CB 21       		 SLA C         ;C=C*2 2BYTE ADDRESSES	;C=C*2 2BYTE ADDRESSES
252)   1B95 09          		 ADD HL, BC        ;C IS 0-7 SPECIFIC COMMD	;C IS 0-7 SPECIFIC COMMD
253)   1B96 5E          		 LD E, (HL)	;
254)   1B97 23          		 INC HL	;
255)   1B98 56          		 LD D, (HL)	;
256)   1B99 EB          		 EX DE, HL	;
257)   1B9A E9          		 JP (HL)	;
259)   1B9B AF          		GRPH_NOTIMPL: XOR A	;
260)   1B9C CD F0 46    		 CALL EXTERR	;
261)   1B9F 4E 4F 54 20 		 DEFM 'NOT IMPLEMENTED'	;
261)   1BA3 49 4D 50 4C 		 DEFM 'NOT IMPLEMENTED'	;
261)   1BA7 45 4D 45 4E 		 DEFM 'NOT IMPLEMENTED'	;
261)   1BAB 54 45 44    		 DEFM 'NOT IMPLEMENTED'	;
262)   1BAE 00          		 DEFB    0	;
266)   1BAF 2A 63 FE    		GRPH_CALCREL: LD HL, (GR_PARAM1)	;
267)   1BB2 ED 5B 5F FE 		 LD DE, (GR_LASTX)	;
268)   1BB6 19          		 ADD HL, DE	;
269)   1BB7 22 63 FE    		 LD (GR_PARAM1), HL	;
270)   1BBA 2A 65 FE    		 LD HL, (GR_PARAM2)	;
271)   1BBD ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
272)   1BC1 19          		 ADD HL, DE	;
273)   1BC2 22 65 FE    		 LD (GR_PARAM2), HL	;
274)   1BC5 C9          		 RET	;
277)   1BC6 CD AF 1B    		 CALL GRPH_CALCREL	;
278)   1BC9 CD B8 1A    		 CALL GRPH_SAVELASTPOS	;
279)   1BCC C9          		 RET	;
282)   1BCD CD AF 1B    		 CALL GRPH_CALCREL	;
283)   1BD0 CD D8 1A    		 CALL BAS_DODRAW	;
284)   1BD3 C9          		 RET	;
287)   1BD4 2A 01 FE    		 LD HL, (FCOLOR)	;
288)   1BD7 E5          		 PUSH HL	;
289)   1BD8 2A 03 FE    		 LD HL, (BCOLOR)	;
290)   1BDB 22 01 FE    		 LD (FCOLOR), HL	;
291)   1BDE E1          		 POP HL	;
292)   1BDF 22 03 FE    		 LD (BCOLOR), HL	;
293)   1BE2 C9          		 RET	;
296)   1BE3 2A 05 FE    		 LD HL, (FGRCOL)	;
297)   1BE6 E5          		 PUSH HL	;
298)   1BE7 2A 07 FE    		 LD HL, (BGRCOL)	;
299)   1BEA 22 05 FE    		 LD (FGRCOL), HL	;
300)   1BED E1          		 POP HL	;
301)   1BEE 22 07 FE    		 LD (BGRCOL), HL	;
302)   1BF1 C9          		 RET	;
306)   1BF2 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
307)   1BF5 21 01 FE    		 LD HL, FCOLOR	;
308)   1BF8 11 09 FE    		 LD DE, FCOLTM	;
309)   1BFB ED B0       		 LDIR	;
310)   1BFD 01 04 00    		 LD BC, 4       ;2 FGRCOL + 2 BGRCOL	;2 FGRCOL + 2 BGRCOL
311)   1C00 21 05 FE    		 LD HL, FGRCOL	;
312)   1C03 11 01 FE    		 LD DE, FCOLOR	;
313)   1C06 ED B0       		 LDIR	;
314)   1C08 C9          		 RET	;
318)   1C09 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
319)   1C0C 21 09 FE    		 LD HL, FCOLTM	;
320)   1C0F 11 01 FE    		 LD DE, FCOLOR	;
321)   1C12 ED B0       		 LDIR	;
322)   1C14 C9          		 RET	;
326)   1C15 CD E3 1B    		 CALL GRPH_SWAPGRCOLS	;
327)   1C18 CD AF 1B    		 CALL GRPH_CALCREL	;
328)   1C1B CD D8 1A    		 CALL BAS_DODRAW	;
329)   1C1E CD E3 1B    		 CALL GRPH_SWAPGRCOLS	;
330)   1C21 C9          		 RET	;
333)   1C22 CD E3 1B    		 CALL GRPH_SWAPGRCOLS	;
334)   1C25 CD D8 1A    		 CALL BAS_DODRAW	;
335)   1C28 CD E3 1B    		 CALL GRPH_SWAPGRCOLS	;
336)   1C2B C9          		 RET	;
339)   1C2C CD D8 1A    		 CALL BAS_DODRAW       ;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT	;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT
340)   1C2F 2A 57 FE    		 LD HL, (GR_LASTX3)	;
341)   1C32 22 63 FE    		 LD (GR_PARAM1), HL	;
342)   1C35 2A 59 FE    		 LD HL, (GR_LASTY3)	;
343)   1C38 22 65 FE    		 LD (GR_PARAM2), HL	;
344)   1C3B CD D8 1A    		 CALL BAS_DODRAW       ;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT	;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT
345)   1C3E 2A 57 FE    		 LD HL, (GR_LASTX3)	;
346)   1C41 22 63 FE    		 LD (GR_PARAM1), HL	;
347)   1C44 2A 59 FE    		 LD HL, (GR_LASTY3)	;
348)   1C47 22 65 FE    		 LD (GR_PARAM2), HL	;
349)   1C4A CD D8 1A    		 CALL BAS_DODRAW       ;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT	;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT
350)   1C4D 01 04 00    		 LD BC, 4	;
351)   1C50 21 57 FE    		 LD HL, GR_LASTX3	;
352)   1C53 11 5F FE    		 LD DE, GR_LASTX	;
353)   1C56 ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
354)   1C58 C9          		 RET	;
356)   1C59 CD E3 1B    		GRPH_TRIANGLEBC: CALL GRPH_SWAPGRCOLS	;
357)   1C5C CD 2C 1C    		 CALL GRPH_TRIANGLE	;
358)   1C5F CD E3 1B    		 CALL GRPH_SWAPGRCOLS	;
359)   1C62 C9          		 RET	;
362)   1C63 21 63 FE    		GRPH_RECT: LD HL, GR_PARAM1	;
363)   1C66 11 67 FE    		 LD DE, GR_PARAM3	;
364)   1C69 01 04 00    		 LD BC, 4	;
365)   1C6C ED B0       		 LDIR         ;COPY PARAM1,2 TO 3,4	;COPY PARAM1,2 TO 3,4
366)   1C6E 2A 61 FE    		 LD HL, (GR_LASTY)	;
367)   1C71 E5          		 PUSH HL        ;PT1_Y	;PT1_Y
368)   1C72 2A 5F FE    		 LD HL, (GR_LASTX)	;
369)   1C75 E5          		 PUSH HL        ;PT1_X	;PT1_X
370)   1C76 2A 61 FE    		 LD HL, (GR_LASTY)	;
371)   1C79 22 65 FE    		 LD (GR_PARAM2), HL	;
372)   1C7C CD D8 1A    		 CALL BAS_DODRAW       ;PT1_X,PT1_Y TO PT2_X,PT1_Y	;PT1_X,PT1_Y TO PT2_X,PT1_Y
373)   1C7F 2A 69 FE    		 LD HL, (GR_PARAM4)	;
374)   1C82 22 65 FE    		 LD (GR_PARAM2), HL	;
375)   1C85 CD D8 1A    		 CALL BAS_DODRAW       ;PT2_X,PT1_Y TO PT2_X,PT2_Y	;PT2_X,PT1_Y TO PT2_X,PT2_Y
376)   1C88 E1          		 POP HL         ;PT1_X	;PT1_X
377)   1C89 22 63 FE    		 LD (GR_PARAM1), HL	;
378)   1C8C CD D8 1A    		 CALL BAS_DODRAW       ;PT2_X,PT2_Y TO PT1_X,PT2_Y	;PT2_X,PT2_Y TO PT1_X,PT2_Y
379)   1C8F E1          		 POP HL         ;PT1_Y	;PT1_Y
380)   1C90 22 65 FE    		 LD (GR_PARAM2), HL	;
381)   1C93 CD D8 1A    		 CALL BAS_DODRAW       ;PT1_X,PT2_Y TO PT1_X,PT1_Y	;PT1_X,PT2_Y TO PT1_X,PT1_Y
382)   1C96 01 04 00    		 LD BC, 4	;
383)   1C99 21 67 FE    		 LD HL, GR_PARAM3	;
384)   1C9C 11 5F FE    		 LD DE, GR_LASTX	;
385)   1C9F ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
386)   1CA1 C9          		 RET	;
388)   1CA2 CD E3 1B    		GRPH_RECTBC: CALL GRPH_SWAPGRCOLS	;
389)   1CA5 CD 63 1C    		 CALL GRPH_RECT	;
390)   1CA8 CD E3 1B    		 CALL GRPH_SWAPGRCOLS	;
391)   1CAB C9          		 RET	;
394)   1CAC CD F2 1B    		GRPH_CIRCREL: CALL GRPH_SAVECOLORS	;
395)   1CAF 2A 63 FE    		 LD HL, (GR_PARAM1)	;
396)   1CB2 7C          		 LD A, H	;
397)   1CB3 B5          		 OR L	;
398)   1CB4 20 06       		 JR NZ, CIRE_DOIT	;
399)   1CB6 2A 65 FE    		 LD HL, (GR_PARAM2)	;
400)   1CB9 7C          		 LD A, H	;
401)   1CBA B5          		 OR L	;
402)   1CBB C8          		 RET Z         ; RETURN IF BOTH PARAMS ARE ZERO	; RETURN IF BOTH PARAMS ARE ZERO
403)   1CBC ED 5B 5F FE 		CIRE_DOIT: LD DE, (GR_LASTX)	;
404)   1CC0 D5          		 PUSH DE	;
405)   1CC1 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
406)   1CC5 D5          		 PUSH DE	;
407)   1CC6 E5          		 PUSH HL	;
408)   1CC7 CD 14 14    		 CALL LCD_CIRCLE	;
409)   1CCA CD 09 1C    		 CALL GRPH_RESTORECOLORS	;
410)   1CCD C9          		 RET	;
412)   1CCE CD E3 1B    		GRPH_CIRCRELBC: CALL GRPH_SWAPGRCOLS	;
413)   1CD1 CD AC 1C    		 CALL GRPH_CIRCREL	;
414)   1CD4 CD E3 1B    		 CALL GRPH_SWAPGRCOLS	;
415)   1CD7 C9          		 RET	;
421)   1CD8 C9          		GRPH_CIRCLE: RET	;
422)   1CD9 2A 5F FE    		 LD HL, (GR_LASTX)	;
423)   1CDC ED 5B 63 FE 		 LD DE, (GR_PARAM1)	;
424)   1CE0 AF          		 XOR A	;
425)   1CE1 ED 42       		 SBC HL, BC	;
426)   1CE3 22 67 FE    		 LD (GR_PARAM3), HL       ;X2-X1	;X2-X1
427)   1CE6 2A 61 FE    		 LD HL, (GR_LASTY)	;
428)   1CE9 ED 5B 65 FE 		 LD DE, (GR_PARAM2)	;
429)   1CED AF          		 XOR A	;
430)   1CEE ED 42       		 SBC HL, BC	;
431)   1CF0 22 69 FE    		 LD (GR_PARAM4), HL       ;Y2-Y1	;Y2-Y1
433)   1CF3 ED 4B 67 FE 		 LD BC, (GR_PARAM3)	;
434)   1CF7 C5          		 PUSH BC	;
435)   1CF8 D1          		 POP DE	;
436)   1CF9 CD AB 27    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
437)   1CFC D9          		 EXX	;
438)   1CFD C5          		 PUSH BC	;
439)   1CFE D1          		 POP DE	;
440)   1CFF D9          		 EXX	;
441)   1D00 E5          		 PUSH HL        ;DE LOW	;DE LOW
442)   1D01 ED 4B 69 FE 		 LD BC, (GR_PARAM4)	;
443)   1D05 C5          		 PUSH BC	;
444)   1D06 D1          		 POP DE	;
445)   1D07 CD AB 27    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
446)   1D0A D9          		 EXX	;
447)   1D0B C5          		 PUSH BC	;
448)   1D0C E1          		 POP HL	;
449)   1D0D D9          		 EXX	;
450)   1D0E D1          		 POP DE	;
452)   1D0F CD C6 27    		 CALL ADD32	;
456)   1D12 C9          		 RET	;
458)   1D13 CD E3 1B    		GRPH_CIRCLEBC: CALL GRPH_SWAPGRCOLS	;
459)   1D16 CD D8 1C    		 CALL GRPH_CIRCLE	;
460)   1D19 CD E3 1B    		 CALL GRPH_SWAPGRCOLS	;
461)   1D1C C9          		 RET	;
465)   1D1D CD E3 1B    		GRPH_FILL: CALL GRPH_SWAPGRCOLS	;
466)   1D20 CD F2 1B    		 CALL GRPH_SAVECOLORS	;
467)   1D23 2A 63 FE    		 LD HL, (GR_PARAM1)	;
468)   1D26 E5          		 PUSH HL	;
469)   1D27 2A 65 FE    		 LD HL, (GR_PARAM2)	;
470)   1D2A E5          		 PUSH HL	;
471)   1D2B CD 98 15    		 CALL LCD_FILL	;
472)   1D2E CD 09 1C    		 CALL GRPH_RESTORECOLORS	;
473)   1D31 CD E3 1B    		 CALL GRPH_SWAPGRCOLS	;
474)   1D34 C9          		 RET	;
476)   1D35 C6 1B       		PLOT00: DW GRPH_MOVEREL	;
477)   1D37 CD 1B       		 DW GRPH_LINEREL	;
478)   1D39 9B 1B       		 DW GRPH_NOTIMPL	;
479)   1D3B 15 1C       		 DW GRPH_LINERELBC	;
480)   1D3D B8 1A       		 DW GRPH_SAVELASTPOS	;
481)   1D3F D8 1A       		 DW BAS_DODRAW	;
482)   1D41 9B 1B       		 DW GRPH_NOTIMPL	;
483)   1D43 22 1C       		 DW GRPH_DRAWBC	;
485)   1D45 9B 1B       		PLOT80: DW GRPH_NOTIMPL	;
486)   1D47 2C 1C       		 DW GRPH_TRIANGLE	;
487)   1D49 9B 1B       		 DW GRPH_NOTIMPL	;
488)   1D4B 59 1C       		 DW GRPH_TRIANGLEBC	;
489)   1D4D 9B 1B       		 DW GRPH_NOTIMPL	;
490)   1D4F 2C 1C       		 DW GRPH_TRIANGLE	;
491)   1D51 9B 1B       		 DW GRPH_NOTIMPL	;
492)   1D53 59 1C       		 DW GRPH_TRIANGLEBC	;
494)   1D55 9B 1B       		PLOT96: DW GRPH_NOTIMPL	;
495)   1D57 63 1C       		 DW GRPH_RECT	;
496)   1D59 9B 1B       		 DW GRPH_NOTIMPL	;
497)   1D5B A2 1C       		 DW GRPH_RECTBC	;
498)   1D5D 9B 1B       		 DW GRPH_NOTIMPL	;
499)   1D5F 63 1C       		 DW GRPH_RECT	;
500)   1D61 9B 1B       		 DW GRPH_NOTIMPL	;
501)   1D63 A2 1C       		 DW GRPH_RECTBC	;
503)   1D65 9B 1B       		PLOT128: DW GRPH_NOTIMPL	;
504)   1D67 1D 1D       		 DW GRPH_FILL	;
505)   1D69 9B 1B       		 DW GRPH_NOTIMPL	;
506)   1D6B 9B 1B       		 DW GRPH_NOTIMPL	;
507)   1D6D 9B 1B       		 DW GRPH_NOTIMPL	;
508)   1D6F 9B 1B       		 DW GRPH_NOTIMPL	;
509)   1D71 9B 1B       		 DW GRPH_NOTIMPL	;
510)   1D73 9B 1B       		 DW GRPH_NOTIMPL	;
512)   1D75 AC 1C       		PLOT144: DW GRPH_CIRCREL	;
513)   1D77 AC 1C       		 DW GRPH_CIRCREL	;
514)   1D79 9B 1B       		 DW GRPH_NOTIMPL	;
515)   1D7B CE 1C       		 DW GRPH_CIRCRELBC	;
516)   1D7D D8 1C       		 DW GRPH_CIRCLE	;
517)   1D7F D8 1C       		 DW GRPH_CIRCLE	;
518)   1D81 9B 1B       		 DW GRPH_NOTIMPL	;
519)   1D83 13 1D       		 DW GRPH_CIRCLEBC	;
521)   1D85 9B 1B       		PLOT152: DW GRPH_NOTIMPL	;
522)   1D87 9B 1B       		 DW GRPH_NOTIMPL	;
523)   1D89 9B 1B       		 DW GRPH_NOTIMPL	;
524)   1D8B 9B 1B       		 DW GRPH_NOTIMPL	;
525)   1D8D 9B 1B       		 DW GRPH_NOTIMPL	;
526)   1D8F 9B 1B       		 DW GRPH_NOTIMPL	;
527)   1D91 9B 1B       		 DW GRPH_NOTIMPL	;
528)   1D93 9B 1B       		 DW GRPH_NOTIMPL	;
530)   1D95 9B 1B       		PLOT160: DW GRPH_NOTIMPL	;
531)   1D97 9B 1B       		 DW GRPH_NOTIMPL	;
532)   1D99 9B 1B       		 DW GRPH_NOTIMPL	;
533)   1D9B 9B 1B       		 DW GRPH_NOTIMPL	;
534)   1D9D 9B 1B       		 DW GRPH_NOTIMPL	;
535)   1D9F 9B 1B       		 DW GRPH_NOTIMPL	;
536)   1DA1 9B 1B       		 DW GRPH_NOTIMPL	;
537)   1DA3 9B 1B       		 DW GRPH_NOTIMPL	;
539)   1DA5 9B 1B       		PLOT192: DW GRPH_NOTIMPL	;
540)   1DA7 9B 1B       		 DW GRPH_NOTIMPL	;
541)   1DA9 9B 1B       		 DW GRPH_NOTIMPL	;
542)   1DAB 9B 1B       		 DW GRPH_NOTIMPL	;
543)   1DAD 9B 1B       		 DW GRPH_NOTIMPL	;
544)   1DAF 9B 1B       		 DW GRPH_NOTIMPL	;
545)   1DB1 9B 1B       		 DW GRPH_NOTIMPL	;
546)   1DB3 9B 1B       		 DW GRPH_NOTIMPL	;
548)   1DB5 9B 1B       		PLOT200: DW GRPH_NOTIMPL	;
549)   1DB7 9B 1B       		 DW GRPH_NOTIMPL	;
550)   1DB9 9B 1B       		 DW GRPH_NOTIMPL	;
551)   1DBB 9B 1B       		 DW GRPH_NOTIMPL	;
552)   1DBD 9B 1B       		 DW GRPH_NOTIMPL	;
553)   1DBF 9B 1B       		 DW GRPH_NOTIMPL	;
554)   1DC1 9B 1B       		 DW GRPH_NOTIMPL	;
555)   1DC3 9B 1B       		 DW GRPH_NOTIMPL	;
558)   1DC5 AF          		 XOR A	;
559)   1DC6 CD F0 46    		 CALL EXTERR	;
560)   1DC9 70 61 72 61 		 DEFM 'param error'	;
560)   1DCD 6D 20 65 72 		 DEFM 'param error'	;
560)   1DD1 72 6F 72    		 DEFM 'param error'	;
561)   1DD4 00          		 DEFB    0	;
  6)   1DD5 11 B9 FE    		@MYOS_OSSAVE: LD DE, STRGBUFF	;
  7)   1DD8 7E          		OSNXT: LD A, (HL)        ;hl = ACCS =FILENAME ENDS WITH 0X0D	;hl = ACCS =FILENAME ENDS WITH 0X0D
  8)   1DD9 FE 0D       		 CP 13         ;	;
  9)   1DDB 20 01       		 JR NZ, OSCONT	;
 10)   1DDD AF          		 XOR A	;
 11)   1DDE 12          		OSCONT: LD (DE), A	;
 12)   1DDF 23          		 INC HL	;
 13)   1DE0 13          		 INC DE	;
 14)   1DE1 FE 00       		 CP 0	;
 15)   1DE3 20 F3       		 JR NZ, OSNXT	;
 16)   1DE5 3E 04       		 LD A, 4        ;OPEN FILE FOR WRITE AND CREATE IT	;OPEN FILE FOR WRITE AND CREATE IT
 17)   1DE7 C5          		 PUSH BC	;
 18)   1DE8 CD 85 0A    		 CALL STRG_OPNFILE       ;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A	;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A
 19)   1DEB C1          		 POP BC         ;bc = length of program	;bc = length of program
 20)   1DEC 38 12       		 JR C, SVERR	;
 21)   1DEE ED 5B DC FD 		 LD DE, (PAGE)	;
 22)   1DF2 CD B5 0A    		 CALL STRG_BLKWRITE      ;BLOCK WRITE	;BLOCK WRITE
 23)   1DF5 FE C8       		 CP FCMDOK	;
 24)   1DF7 20 07       		 JR NZ, SVERR	;
 25)   1DF9 3A E5 FE    		 LD A, (FID)	;
 26)   1DFC CD A3 0A    		 CALL STRG_CLSFILE	;
 27)   1DFF C9          		 RET         ;ON RET A=RESULT	;ON RET A=RESULT
 28)   1E00 FE CA       		SVERR: CP FNOTFND	;
 29)   1E02 CA 5B 1E    		 JP Z, FLNOTF	;
 30)   1E05 CD F0 46    		 CALL EXTERR	;
 31)   1E08 45 72 72 6F 		 DEFM  "Error Saving"	;
 31)   1E0C 72 20 53 61 		 DEFM  "Error Saving"	;
 31)   1E10 76 69 6E 67 		 DEFM  "Error Saving"	;
 32)   1E14 00          		 DEFB    0	;
 36)   1E15 11 B9 FE    		@MYOS_OSLOAD: LD DE, STRGBUFF	;
 37)   1E18 7E          		OLNXT: LD A, (HL)	;
 38)   1E19 FE 0D       		 CP 13         ;	;
 39)   1E1B 20 01       		 JR NZ, OLCONT	;
 40)   1E1D AF          		 XOR A	;
 41)   1E1E 12          		OLCONT: LD (DE), a	;
 42)   1E1F 23          		 INC HL	;
 43)   1E20 13          		 INC DE	;
 44)   1E21 FE 00       		 CP 0	;
 45)   1E23 20 F3       		 JR NZ, OLNXT	;
 46)   1E25 CD 85 0A    		 CALL STRG_OPNFILE      ;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A	;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A
 47)   1E28 38 1C       		 JR C, LDERR	;
 48)   1E2A 2A DC FD    		 LD HL, (PAGE)	;
 49)   1E2D EB          		 EX DE, HL	;
 50)   1E2E 01 00 00    		 LD BC, 0        ;ZERO MEANS LOAD ALL	;ZERO MEANS LOAD ALL
 51)   1E31 CD D8 0A    		 CALL STRG_BLKREAD      ;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED	;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED
 52)   1E34 FE C8       		 CP FCMDOK	;
 53)   1E36 20 0E       		 JR NZ, LDERR	;
 54)   1E38 3A E5 FE    		 LD A, (FID)	;
 55)   1E3B CD A3 0A    		 CALL STRG_CLSFILE	;
 56)   1E3E 21 DE FD    		 LD HL, TOP       ;SAVE TOP OF BASIC	;SAVE TOP OF BASIC
 57)   1E41 73          		 LD (HL), E	;
 58)   1E42 23          		 INC HL	;
 59)   1E43 72          		 LD (HL), D	;
 60)   1E44 37          		 SCF         ;SET C = NO ERROR	;SET C = NO ERROR
 61)   1E45 C9          		 RET	;
 62)   1E46 FE CA       		LDERR: CP FNOTFND	;
 63)   1E48 28 11       		 JR Z, FLNOTF	;
 64)   1E4A CD F0 46    		 CALL EXTERR	;
 65)   1E4D 45 72 72 6F 		 DEFM  "Error Loading"	;
 65)   1E51 72 20 4C 6F 		 DEFM  "Error Loading"	;
 65)   1E55 61 64 69 6E 		 DEFM  "Error Loading"	;
 65)   1E59 67          		 DEFM  "Error Loading"	;
 66)   1E5A 00          		 DEFB    0	;
 67)   1E5B CD F0 46    		FLNOTF: CALL EXTERR	;
 68)   1E5E 57 72 6F 6E 		 DEFM  "Wrong Filename"	;
 68)   1E62 67 20 46 69 		 DEFM  "Wrong Filename"	;
 68)   1E66 6C 65 6E 61 		 DEFM  "Wrong Filename"	;
 68)   1E6A 6D 65       		 DEFM  "Wrong Filename"	;
 69)   1E6C 00          		 DEFB    0	;
 41)   1E6D C3 67 17    		@MYOS_CLRSCN: JP LCD_CLRSCR       ; CLRSCN: clears the screen.	; CLRSCN: clears the screen.
 44)   1E70 7D          		 LD A, L	;
 45)   1E71 32 A7 FE    		 LD (TIMECTR), A	;
 46)   1E74 7C          		 LD A, H	;
 47)   1E75 32 A8 FE    		 LD (TIMECTR + 1), A	;
 48)   1E78 7B          		 LD A, E	;
 49)   1E79 32 A9 FE    		 LD (TIMECTR + 2), A	;
 50)   1E7C 7A          		 LD A, D	;
 51)   1E7D 32 AA FE    		 LD (TIMECTR + 3), A	;
 52)   1E80 C9          		 RET	;
 56)   1E81 3A A7 FE    		 LD A, (TIMECTR)	;
 57)   1E84 6F          		 LD L, A	;
 58)   1E85 3A A8 FE    		 LD A, (TIMECTR + 1)	;
 59)   1E88 67          		 LD H, A	;
 60)   1E89 3A A9 FE    		 LD A, (TIMECTR + 2)	;
 61)   1E8C 5F          		 LD E, A	;
 62)   1E8D 3A AA FE    		 LD A, (TIMECTR + 3)	;
 63)   1E90 57          		 LD D, A	;
 64)   1E91 C9          		 RET	;
 66)   1E92 63          		 LD H, E	;
 67)   1E93 E5          		 PUSH HL	;
 68)   1E94 CD 20 17    		 CALL LCD_RMVCURS	;
 69)   1E97 E1          		 POP HL	;
 70)   1E98 7C          		 LD A, H	;
 71)   1E99 32 0D FE    		 LD (CURSORX), A	;
 72)   1E9C 7D          		 LD A, L	;
 73)   1E9D 32 0E FE    		 LD (CURSORY), A	;
 74)   1EA0 CD 25 17    		 CALL LCD_PRNCURS	;
 75)   1EA3 C9          		 RET	;
 77)   1EA4 16 00       		 LD D, 0	;
 78)   1EA6 3A 0D FE    		 LD A, (CURSORX)	;
 79)   1EA9 5F          		 LD E, A	;
 80)   1EAA 26 00       		 LD H, 0	;
 82)   1EAC CD 76 16    		 CALL LCD_CALCLINE      ;GETS CURSORY WITH SCROLL	;GETS CURSORY WITH SCROLL
 83)   1EAF 6F          		 LD L, A	;
 84)   1EB0 C9          		 RET	;
 85)   1EB1 06 50       		KEYGET: LD B, 80       ;SCREEN WIDTH IN CHARS	;SCREEN WIDTH IN CHARS
 87)   1EB3 E5          		 PUSH HL	;
 88)   1EB4 ED 62       		 SBC HL, HL        ;HL=0	;HL=0
 89)   1EB6 CD 9E 20    		 CALL MYOS_OSKEY	;
 90)   1EB9 E1          		 POP HL	;
 91)   1EBA D8          		 RET C	;
 92)   1EBB 18 F6       		 JR MYOS_OSRDCH	;
 93)   1EBD C9          		 RET	;
 95)   1EBE F5          		 PUSH AF	;
 96)   1EBF D5          		 PUSH DE	;
 97)   1EC0 E5          		 PUSH HL	;
 98)   1EC1 DD E5       		 PUSH IX	;
 99)   1EC3 5F          		 LD E, A	;
100)   1EC4 CD BD 20    		 CALL ESCTEST	;
103)   1EC7 7B          		 LD A, E	;
104)   1EC8 FE 20       		 CP 32	;
105)   1ECA 38 0D       		 JR C, CTRCODE	;
106)   1ECC FE 7F       		 CP 127         ;BACKSPACE	;BACKSPACE
107)   1ECE C2 52 20    		 JP NZ, PRINTIT	;
108)   1ED1 3E 08       		 LD A, 8        ;DO A BACKSPACE	;DO A BACKSPACE
109)   1ED3 CD A2 15    		 CALL LCD_PRINTCHAR	;
110)   1ED6 C3 55 20    		 JP OSWREXIT	;
111)   1ED9 FE 04       		CTRCODE: CP 4       ;WRITE TEXT AT TEXT POS	;WRITE TEXT AT TEXT POS
112)   1EDB 20 06       		 JR NZ, CC1	;
113)   1EDD 32 16 FE    		 LD (VDUMODE), A	;
114)   1EE0 C3 55 20    		 JP OSWREXIT	;
115)   1EE3 FE 05       		CC1: CP 5        ;WRITE TEXT AT GRAPH POS	;WRITE TEXT AT GRAPH POS
116)   1EE5 20 06       		 JR NZ, CC2	;
117)   1EE7 32 16 FE    		 LD (VDUMODE), A	;
118)   1EEA C3 55 20    		 JP OSWREXIT	;
119)   1EED FE 06       		CC2: CP 6        ;ENABLE OUTPUT TO SCREEN	;ENABLE OUTPUT TO SCREEN
120)   1EEF 20 03       		 JR NZ, CC3	;
121)   1EF1 C3 55 20    		 JP OSWREXIT	;
122)   1EF4 FE 07       		CC3: CP 7        ;BEEP	;BEEP
123)   1EF6 20 03       		 JR NZ, CC4	;
124)   1EF8 C3 55 20    		 JP OSWREXIT	;
125)   1EFB FE 08       		CC4: CP 8        ;MOVE TEXT CURSOR BACK A CHAR	;MOVE TEXT CURSOR BACK A CHAR
126)   1EFD 20 03       		 JR NZ, CC5	;
127)   1EFF C3 52 20    		 JP PRINTIT	;
134)   1F02 FE 09       		CC5: CP 9        ;MOVE TEXT CURSOR FORWARD A CHAR	;MOVE TEXT CURSOR FORWARD A CHAR
135)   1F04 20 0F       		 JR NZ, CC6	;
136)   1F06 3A 0D FE    		 LD A, (CURSORX)	;
137)   1F09 3C          		 INC A	;
138)   1F0A FE 50       		 CP 80	;
139)   1F0C D2 55 20    		 JP NC, OSWREXIT	;
140)   1F0F 32 0D FE    		 LD (CURSORX), A	;
141)   1F12 C3 55 20    		 JP OSWREXIT	;
142)   1F15 FE 0A       		CC6: CP 10        ;MOVE TEXT DOWN LF	;MOVE TEXT DOWN LF
143)   1F17 CA 52 20    		 JP Z, PRINTIT	;
144)   1F1A FE 0B       		CC7: CP 11        ;MOVE TEXT UP	;MOVE TEXT UP
145)   1F1C 20 0F       		 JR NZ, CC8	;
146)   1F1E 3A 0E FE    		 LD A, (CURSORY)	;
147)   1F21 3D          		 DEC A	;
148)   1F22 FE FF       		 CP 0XFF	;
149)   1F24 CA 55 20    		 JP Z, OSWREXIT	;
150)   1F27 32 0E FE    		 LD (CURSORY), A	;
151)   1F2A C3 55 20    		 JP OSWREXIT	;
152)   1F2D FE 0C       		CC8: CP 12        ; CLS	; CLS
153)   1F2F 20 06       		 JR NZ, CC9	;
154)   1F31 CD 67 17    		 CALL LCD_CLRSCR	;
155)   1F34 C3 55 20    		 JP OSWREXIT	;
156)   1F37 FE 0D       		CC9: CP 13        ;GOTO START OF LINE CR	;GOTO START OF LINE CR
157)   1F39 CA 52 20    		 JP Z, PRINTIT	;
158)   1F3C FE 0E       		CC10: CP 14        ;ENABLE THE AUTOPAGING MODE	;ENABLE THE AUTOPAGING MODE
159)   1F3E 20 03       		 JR NZ, CC11	;
160)   1F40 C3 55 20    		 JP OSWREXIT	;
161)   1F43 FE 0F       		CC11: CP 15        ;DISABLE THE AUTOPAGING MODE	;DISABLE THE AUTOPAGING MODE
162)   1F45 20 03       		 JR NZ, CC12	;
163)   1F47 C3 55 20    		 JP OSWREXIT	;
164)   1F4A FE 10       		CC12: CP 16        ;CLG	;CLG
165)   1F4C 20 06       		 JR NZ, CC13	;
166)   1F4E CD FE 24    		 CALL MYOS_CLG	;
167)   1F51 C3 55 20    		 JP OSWREXIT	;
168)   1F54 FE 11       		CC13: CP 17        ; SAME AS COLOUR	; SAME AS COLOUR
169)   1F56 20 09       		 JR NZ, CC14	;
171)   1F58 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
172)   1F5A CD 94 5E    		 CALL EXPRI	;
173)   1F5D D9          		 EXX        ;l has the param  color	;l has the param  color
174)   1F5E C3 55 20    		 JP OSWREXIT	;
175)   1F61 FE 12       		CC14: CP 18        ;SAME AS GCOL	;SAME AS GCOL
176)   1F63 20 0F       		 JR NZ, CC15	;
177)   1F65 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
178)   1F67 CD 94 5E    		 CALL EXPRI	;
179)   1F6A D9          		 EXX        ;l has the param  mode	;l has the param  mode
180)   1F6B FD 23       		 INC IY        ;SKIP ','	;SKIP ','
181)   1F6D CD 94 5E    		 CALL EXPRI	;
182)   1F70 D9          		 EXX        ;l has the param  color	;l has the param  color
184)   1F71 C3 55 20    		 JP OSWREXIT	;
185)   1F74 FE 13       		CC15: CP 19        ;SELECT A COLOR PALLETTE???	;SELECT A COLOR PALLETTE???
186)   1F76 20 0F       		 JR NZ, CC16	;
188)   1F78 06 05       		 LD B, 5	;
189)   1F7A C5          		CC15AGN: PUSH BC	;
190)   1F7B FD 23       		 INC IY        ;SKIP ','	;SKIP ','
191)   1F7D CD 94 5E    		 CALL EXPRI	;
192)   1F80 D9          		 EXX        ;l has the param	;l has the param
193)   1F81 C1          		 POP BC	;
194)   1F82 10 F6       		 DJNZ CC15AGN	;
195)   1F84 C3 55 20    		 JP OSWREXIT	;
196)   1F87 FE 14       		CC16: CP 20        ;RESTORE THE DEFAULT LOGICAL COLORS	;RESTORE THE DEFAULT LOGICAL COLORS
197)   1F89 20 03       		 JR NZ, CC17	;
199)   1F8B C3 55 20    		 JP OSWREXIT	;
200)   1F8E FE 15       		CC17: CP 21        ;NO OUTPUT TO SCREEN	;NO OUTPUT TO SCREEN
201)   1F90 20 03       		 JR NZ, CC18	;
203)   1F92 C3 55 20    		 JP OSWREXIT	;
204)   1F95 FE 16       		CC18: CP 22        ;LIKE MODE	;LIKE MODE
205)   1F97 20 09       		 JR NZ, CC19	;
206)   1F99 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
207)   1F9B CD 94 5E    		 CALL EXPRI	;
208)   1F9E D9          		 EXX        ;l has the param	;l has the param
209)   1F9F C3 55 20    		 JP OSWREXIT	;
210)   1FA2 FE 17       		CC19: CP 23        ;Program characters and control the cursor.???	;Program characters and control the cursor.???
211)   1FA4 20 27       		 JR NZ, CC20	;
212)   1FA6 06 09       		 LD B, 9        ;9 PARAMS CHAR_NO +8 ROWS OF A CHAR	;9 PARAMS CHAR_NO +8 ROWS OF A CHAR
213)   1FA8 FD 7E 00    		 LD A, (IY)	;
214)   1FAB FD 23       		 INC IY        ;SKIP ',' OR ';'	;SKIP ',' OR ';'
215)   1FAD FE 3B       		 CP ';'        ;'	;'
216)   1FAF 20 01       		 JR NZ, CC19AGN	;
217)   1FB1 05          		 DEC B        ; IF ; THE DELIMETER THEN 2 BYTES AT START	; IF ; THE DELIMETER THEN 2 BYTES AT START
218)   1FB2 C5          		CC19AGN: PUSH BC	;
219)   1FB3 CD 94 5E    		 CALL EXPRI	;
220)   1FB6 D9          		 EXX        ;l has the param	;l has the param
221)   1FB7 FD 7E 00    		 LD A, (IY)	;
222)   1FBA FE 2C       		 CP ', '	;
223)   1FBC 28 07       		 JR Z, CC19NXT0	;
224)   1FBE FE 3B       		 CP ';'        ;'	;'
225)   1FC0 20 05       		 JR NZ, CC19NXT	;
226)   1FC2 C1          		 POP BC	;
227)   1FC3 05          		 DEC B	;
228)   1FC4 C5          		 PUSH BC	;
229)   1FC5 FD 23       		CC19NXT0: INC IY       ;SKIP ','	;SKIP ','
230)   1FC7 C1          		CC19NXT: POP BC	;
231)   1FC8 10 E8       		 DJNZ CC19AGN	;
232)   1FCA C3 55 20    		 JP OSWREXIT	;
233)   1FCD FE 18       		CC20: CP 24        ;Define a graphics window	;Define a graphics window
234)   1FCF 20 11       		 JR NZ, CC21	;
235)   1FD1 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
236)   1FD3 06 04       		 LD B, 4        ;4 PARAMS TWO CORNERS OF A RECT	;4 PARAMS TWO CORNERS OF A RECT
237)   1FD5 C5          		CC20AGN: PUSH BC	;
238)   1FD6 CD 94 5E    		 CALL EXPRI	;
239)   1FD9 D9          		 EXX        ;HL has the param	;HL has the param
240)   1FDA FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
241)   1FDC C1          		 POP BC	;
242)   1FDD 10 F6       		 DJNZ CC20AGN	;
243)   1FDF C3 55 20    		 JP OSWREXIT	;
244)   1FE2 FE 19       		CC21: CP 25        ;Identical to PLOT.	;Identical to PLOT.
245)   1FE4 20 17       		 JR NZ, CC22	;
246)   1FE6 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
247)   1FE8 CD 94 5E    		 CALL EXPRI	;
248)   1FEB D9          		 EXX        ;L has the param PLOTMODE	;L has the param PLOTMODE
249)   1FEC FD 23       		 INC IY        ;SKIP ','	;SKIP ','
250)   1FEE CD 94 5E    		 CALL EXPRI	;
251)   1FF1 D9          		 EXX        ;HL has the param X	;HL has the param X
252)   1FF2 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
253)   1FF4 CD 94 5E    		 CALL EXPRI	;
254)   1FF7 D9          		 EXX        ;HL has the param Y	;HL has the param Y
255)   1FF8 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
258)   1FFA C3 55 20    		 JP OSWREXIT	;
259)   1FFD FE 1A       		CC22: CP 26        ;Restore the default text and graphics windows.	;Restore the default text and graphics windows.
260)   1FFF 20 02       		 JR NZ, CC23	;
261)   2001 18 52       		 JR OSWREXIT	;
262)   2003 FE 1B       		CC23: CP 27        ;Send the next character to the screen.	;Send the next character to the screen.
263)   2005 20 07       		 JR NZ, CC24	;
264)   2007 CD 94 5E    		 CALL EXPRI	;
265)   200A D9          		 EXX        ;	;
266)   200B 7D          		 LD A, L	;
267)   200C 18 44       		 JR PRINTIT	;
268)   200E FE 1C       		CC24: CP 28        ;Define a text window.	;Define a text window.
269)   2010 20 0E       		 JR NZ, CC25	;
270)   2012 06 04       		 LD B, 4        ;4 PARAMS UPPERLEFT AND LOWERRIGHT	;4 PARAMS UPPERLEFT AND LOWERRIGHT
271)   2014 C5          		CC24AGN: PUSH BC	;
272)   2015 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
273)   2017 CD 94 5E    		 CALL EXPRI	;
274)   201A D9          		 EXX        ;l has the param	;l has the param
275)   201B C1          		 POP BC	;
276)   201C 10 F6       		 DJNZ CC24AGN	;
277)   201E 18 35       		 JR OSWREXIT	;
278)   2020 FE 1D       		CC25: CP 29        ;Set the graphics origin.	;Set the graphics origin.
279)   2022 20 10       		 JR NZ, CC26	;
280)   2024 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
281)   2026 CD 94 5E    		 CALL EXPRI	;
282)   2029 D9          		 EXX        ;HL has the param X	;HL has the param X
283)   202A FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
284)   202C CD 94 5E    		 CALL EXPRI	;
285)   202F D9          		 EXX        ;HL has the param Y	;HL has the param Y
286)   2030 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
288)   2032 18 21       		 JR OSWREXIT	;
289)   2034 FE 1E       		CC26: CP 30        ;Home the text cursor to the top left of the screen.	;Home the text cursor to the top left of the screen.
290)   2036 20 08       		 JR NZ, CC27	;
291)   2038 21 00 00    		 LD HL, 0	;
292)   203B 22 0D FE    		 LD (CURSORX), HL	;
293)   203E 18 15       		 JR OSWREXIT	;
294)   2040 FE 1F       		CC27: CP 31        ;Move the text cursor - identical to TAB(x,y).	;Move the text cursor - identical to TAB(x,y).
295)   2042 20 11       		 JR NZ, OSWREXIT	;
296)   2044 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
297)   2046 CD 94 5E    		 CALL EXPRI	;
298)   2049 D9          		 EXX        ;l has the param X	;l has the param X
299)   204A FD 23       		 INC IY        ;SKIP ','	;SKIP ','
300)   204C CD 94 5E    		 CALL EXPRI	;
301)   204F D9          		 EXX        ;l has the param Y	;l has the param Y
303)   2050 18 03       		 JR OSWREXIT	;
306)   2052 CD 5B 20    		PRINTIT: CALL EDPUT	;
307)   2055 DD E1       		OSWREXIT: POP IX	;
308)   2057 E1          		 POP HL	;
309)   2058 D1          		 POP DE	;
310)   2059 F1          		 POP AF	;
311)   205A C9          		 RET	;
316)   205B 3A 00 FE    		EDPUT: LD A, (FLAGS)	;
317)   205E CB 5F       		 BIT 3, A	;
318)   2060 28 10       		 JR Z, WRCH	;
319)   2062 7B          		 LD A, E	;
320)   2063 FE 20       		 CP ' '	;
321)   2065 D8          		 RET C	;
322)   2066 2A 12 FE    		 LD HL, (EDPTR)	;
323)   2069 73          		 LD (HL), E	;
324)   206A 2C          		 INC L	;
325)   206B C8          		 RET Z	;
326)   206C 22 12 FE    		 LD (EDPTR), HL	;
327)   206F C9          		 RET	;
330)   2070 1E 3E       		 LD E, '>'	;
331)   2072 7B          		WRCH: LD A, E	;
333)   2073 F5          		 PUSH AF	;
334)   2074 C5          		 PUSH BC	;
335)   2075 D5          		 PUSH DE	;
336)   2076 E5          		 PUSH HL	;
337)   2077 DD E5       		 PUSH IX	;
338)   2079 FD E5       		 PUSH IY	;
339)   207B F5          		 PUSH AF	;
340)   207C C5          		 PUSH BC	;
341)   207D D5          		 PUSH DE	;
342)   207E E5          		 PUSH HL	;
343)   207F CD 20 17    		 CALL LCD_RMVCURS	;
344)   2082 E1          		 POP HL	;
345)   2083 D1          		 POP DE	;
346)   2084 C1          		 POP BC	;
347)   2085 F1          		 POP AF	;
348)   2086 CD A2 15    		 CALL LCD_PRINTCHAR	;
349)   2089 CD 25 17    		 CALL LCD_PRNCURS	;
351)   208C FD E1       		 POP IY	;
352)   208E DD E1       		 POP IX	;
353)   2090 E1          		 POP HL	;
354)   2091 D1          		 POP DE	;
355)   2092 C1          		 POP BC	;
356)   2093 F1          		 POP AF	;
357)   2094 C9          		 RET	;
359)   2095 3A 00 FE    		TOGGLE: LD A, (FLAGS)	;
360)   2098 EE 04       		 XOR 00000100B	;
361)   209A 32 00 FE    		 LD (FLAGS), A	;
362)   209D C9          		 RET	;
371)   209E E5          		@MYOS_OSKEY: PUSH HL	;
372)   209F 21 15 FE    		 LD HL, INKEY	;
373)   20A2 7E          		 LD A, (HL)	;
374)   20A3 36 00       		 LD (HL), 0	;
375)   20A5 E1          		 POP HL	;
376)   20A6 B7          		 OR A	;
377)   20A7 37          		 SCF	;
378)   20A8 C0          		 RET NZ	;
380)   20A9 CD 65 25    		 CALL GETKEYNW	;
382)   20AC D0          		 RET NC	;
383)   20AD FE 1B       		 CP ESC	;
384)   20AF 37          		 SCF	;
385)   20B0 C0          		 RET NZ	;
386)   20B1 E5          		ESCSET: PUSH HL	;
387)   20B2 21 00 FE    		 LD HL, FLAGS	;
388)   20B5 CB 76       		 BIT 6, (HL)        ; ESC DISABLED?	; ESC DISABLED?
389)   20B7 20 02       		 JR NZ, ESCDIS	;
390)   20B9 CB FE       		 SET 7, (HL)        ; SET ESCAPE FLAG	; SET ESCAPE FLAG
391)   20BB E1          		ESCDIS: POP HL	;
392)   20BC C9          		 RET	;
393)   20BD CD 55 06    		ESCTEST: CALL RS_RXNW	;
394)   20C0 B7          		 OR A	;
395)   20C1 C8          		 RET Z	;
396)   20C2 FE 1B       		 CP 0x1B        ; ESC	; ESC
397)   20C4 28 EB       		 JR Z, ESCSET	;
398)   20C6 32 15 FE    		 LD (INKEY), A	;
399)   20C9 C9          		 RET	;
401)   20CA CD BD 20    		@MYOS_TRAP: CALL ESCTEST	;
402)   20CD 3A 00 FE    		@MYOS_LTRAP: LD A, (FLAGS)	;
403)   20D0 B7          		 OR A	;
404)   20D1 F0          		 RET P	;
405)   20D2 21 00 FE    		ABORT: LD HL, FLAGS	;
406)   20D5 CB BE       		 RES 7, (HL)	;
407)   20D7 C3 C2 4D    		 JP ESCAPE	;
416)   20DA F3          		 DI	;
417)   20DB 21 F6 FD    		 LD HL, RANDOM        ; SET RANDOM SEED TO NON 0	; SET RANDOM SEED TO NON 0
418)   20DE 3E 06       		 LD A, 0x06	;
419)   20E0 77          		 LD (HL), A	;
420)   20E1 3E BB       		 LD A, 0xBB	;
421)   20E3 77          		 LD (HL), A	;
422)   20E4 21 00 00    		 LD HL, 0	;
423)   20E7 22 0D FE    		 LD (CURSORX), HL       ; CURSOR X 7 Y ZEROED	; CURSOR X 7 Y ZEROED
424)   20EA 11 FF FF    		 LD DE, COL_WHITE       ; SET FCOLOR AND BCOLOR DEFAULT VALUES	; SET FCOLOR AND BCOLOR DEFAULT VALUES
425)   20ED 21 01 FE    		 LD HL, FCOLOR	;
426)   20F0 73          		 LD (HL), E	;
427)   20F1 23          		 INC HL	;
428)   20F2 72          		 LD (HL), D	;
429)   20F3 23          		 INC HL	;
430)   20F4 11 00 00    		 LD DE, COL_BLACK	;
431)   20F7 73          		 LD (HL), E	;
432)   20F8 23          		 INC HL	;
433)   20F9 72          		 LD (HL), D	;
434)   20FA 01 04 00    		 LD BC, 4        ; COPY SAME COLORS TO GRAPHICS	; COPY SAME COLORS TO GRAPHICS
435)   20FD 11 05 FE    		 LD DE, FGRCOL	;
436)   2100 21 01 FE    		 LD HL, FCOLOR	;
437)   2103 ED B0       		 LDIR	;
438)   2105 11 17 FE    		 LD DE, FCOLPAL	;
439)   2108 CD 13 21    		 CALL COPYPAL	;
440)   210B 11 37 FE    		 LD DE, BCOLPAL	;
441)   210E CD 13 21    		 CALL COPYPAL	;
442)   2111 18 16       		 JR OSFINSH       ;	;
443)   2113 21 85 21    		COPYPAL: LD HL, COL_PALET	;
444)   2116 01 20 00    		 LD BC, 16 * 2        ;SHOULD ADD 8 MORE COLORS	;SHOULD ADD 8 MORE COLORS
445)   2119 ED B0       		 LDIR	;
446)   211B AF          		 XOR A	;
447)   211C 32 0F FE    		 LD (SCRLN), A	;
448)   211F 21 00 00    		 LD HL, 0	;
449)   2122 22 A7 FE    		 LD (TIMECTR), HL	;
450)   2125 22 A9 FE    		 LD (TIMECTR + 2), HL	;
451)   2128 C9          		 RET	;
453)   2129 CD 67 17    		OSFINSH: CALL LCD_CLRSCR	;
454)   212C CD 2B 4C    		 CALL TELL	;
455)   212F 43 44 65 73 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2133 70 20 4D 6F 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2137 64 75 6C 61 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   213B 72 20 5A 38 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   213F 30 20 43 6F 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2143 6D 70 75 74 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2147 65 72 20 32 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   214B 30 32 30 2D 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   214F 32 31       		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
456)   2151 0A 0D       		 DEFB 0AH,0DH	;
457)   2153 41 54 4C 41 		 DEFM "ATLAS Operating System Version "	;
457)   2157 53 20 4F 70 		 DEFM "ATLAS Operating System Version "	;
457)   215B 65 72 61 74 		 DEFM "ATLAS Operating System Version "	;
457)   215F 69 6E 67 20 		 DEFM "ATLAS Operating System Version "	;
457)   2163 53 79 73 74 		 DEFM "ATLAS Operating System Version "	;
457)   2167 65 6D 20 56 		 DEFM "ATLAS Operating System Version "	;
457)   216B 65 72 73 69 		 DEFM "ATLAS Operating System Version "	;
457)   216F 6F 6E 20    		 DEFM "ATLAS Operating System Version "	;
458)   2172 30          		 DEFB MJVER	;
459)   2173 2E          		 DEFB 46	;
460)   2174 32          		 DEFB MNVER1,MNVER2	;
460)   2175 38          		 DEFB MNVER1,MNVER2	;
461)   2176 0A 0D 0A 0D 		 DEFB 0AH,0DH,0AH,0DH	;
462)   217A 00          		 DEFB 00H	;
463)   217B AF          		 XOR A	;
464)   217C 11 FF F9    		 LD DE, STACKP - 0x100      ;DE = HIMEM	;DE = HIMEM
465)   217F 5F          		 LD E, A        ;PAGE BOUNDARY	;PAGE BOUNDARY
466)   2180 21 00 80    		 LD HL, RAMAD        ;@USER	;@USER
467)   2183 FB          		 EI	;
468)   2184 C9          		 RET	;
469)   2185 00 00       		COL_PALET: DW COL_BLACK	;
470)   2187 00 F8       		 DW COL_RED	;
471)   2189 C0 07       		 DW COL_GREEN	;
472)   218B C0 FF       		 DW COL_YELLOW	;
473)   218D 3F 00       		 DW COL_BLUE	;
474)   218F 3F F8       		 DW COL_MAGENTA	;
475)   2191 FF 07       		 DW COL_CYAN	;
476)   2193 FF FF       		 DW COL_WHITE	;
477)   2195 00 00       		 DW COL_BLACK       ;TODO PICK 8 MORE COLORS	;TODO PICK 8 MORE COLORS
478)   2197 00 F8       		 DW COL_RED	;
479)   2199 C0 07       		 DW COL_GREEN	;
480)   219B C0 FF       		 DW COL_YELLOW	;
481)   219D 3F 00       		 DW COL_BLUE	;
482)   219F 3F F8       		 DW COL_MAGENTA	;
483)   21A1 FF 07       		 DW COL_CYAN	;
484)   21A3 FF FF       		 DW COL_WHITE	;
490)   21A5 CD 02 22    		 CALL SKIPSP	;
491)   21A8 FE 0D       		 CP CR	;
492)   21AA C8          		 RET Z	;
493)   21AB FE 7C       		 CP '|'	;
494)   21AD C8          		 RET Z	;
495)   21AE FE 2E       		 CP '.'	;
496)   21B0 CA F5 22    		 JP Z, DOT        ;*.	;*.
497)   21B3 EB          		 EX DE, HL	;
498)   21B4 21 11 22    		 LD HL, COMDS	;
499)   21B7 1A          		OSCLI0: LD A, (DE)	;
500)   21B8 CD 09 22    		 CALL UPPRC	;
501)   21BB BE          		 CP (HL)	;
502)   21BC 28 0B       		 JR Z, OSCLI2	;
503)   21BE 38 31       		 JR C, HUH	;
504)   21C0 CB 7E       		OSCLI1: BIT 7, (HL)	;
505)   21C2 23          		 INC HL	;
506)   21C3 28 FB       		 JR Z, OSCLI1	;
507)   21C5 23          		 INC HL	;
508)   21C6 23          		 INC HL	;
509)   21C7 18 EE       		 JR OSCLI0	;
511)   21C9 D5          		OSCLI2: PUSH DE	;
512)   21CA 13          		OSCLI3: INC DE	;
513)   21CB 23          		 INC HL	;
514)   21CC 1A          		 LD A, (DE)	;
515)   21CD CD 09 22    		 CALL UPPRC	;
516)   21D0 FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
517)   21D2 28 0A       		 JR Z, OSCLI4	;
518)   21D4 AE          		 XOR (HL)	;
519)   21D5 28 F3       		 JR Z, OSCLI3	;
520)   21D7 FE 80       		 CP 80H	;
521)   21D9 28 03       		 JR Z, OSCLI4	;
522)   21DB D1          		 POP DE	;
523)   21DC 18 E2       		 JR OSCLI1	;
525)   21DE F1          		OSCLI4: POP AF	;
526)   21DF 13          		 INC DE	;
527)   21E0 CB 7E       		OSCLI5: BIT 7, (HL)	;
528)   21E2 23          		 INC HL	;
529)   21E3 28 FB       		 JR Z, OSCLI5	;
530)   21E5 7E          		 LD A, (HL)	;
531)   21E6 23          		 INC HL	;
532)   21E7 66          		 LD H, (HL)	;
533)   21E8 6F          		 LD L, A	;
534)   21E9 E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
535)   21EA EB          		 EX DE, HL	;
536)   21EB E5          		 PUSH HL	;
537)   21EC FD E1       		 POP IY	;
538)   21EE C3 02 22    		 JP SKIPSP	;
540)   21F1 3E FE       		HUH: LD A, 254        ;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY	;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY
541)   21F3 CD F0 46    		 CALL EXTERR	;
542)   21F6 42 61 64 20 		 DEFM 'Bad command'	;
542)   21FA 63 6F 6D 6D 		 DEFM 'Bad command'	;
542)   21FE 61 6E 64    		 DEFM 'Bad command'	;
543)   2201 00          		 DEFB    0	;
545)   2202 7E          		SKIPSP: LD A, (HL)	;
546)   2203 FE 20       		 CP ' '	;
547)   2205 C0          		 RET NZ	;
548)   2206 23          		 INC HL	;
549)   2207 18 F9       		 JR SKIPSP	;
551)   2209 E6 7F       		UPPRC: AND 7FH	;
552)   220B FE 60       		 CP '`'	;
553)   220D D8          		 RET C	;
554)   220E E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
555)   2210 C9          		 RET	;
559)   2211 42 59       		COMDS: DEFM  "BY"	;
560)   2213 C5          		 DEFB    'E'+80H	;
561)   2214 F8 22       		 DEFW BYE	;
562)   2216 43          		 DEFM  "C"	;
563)   2217 C4          		 DEFB    'D'+80H	;
564)   2218 2C 23       		 DEFW DRV_CD	;
565)   221A 44 49       		 DEFM  "DI"	;
566)   221C D2          		 DEFB    'R'+80H	;
567)   221D 12 23       		 DEFW DRV_DIR	;
568)   221F 46          		 DEFM  "F"	;
569)   2220 D8          		 DEFB    'X'+80H	;
570)   2221 FB 22       		 DEFW FX	;
571)   2223 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
571)   2227 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
571)   222B 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
572)   222E C6          		 DEFB 'F'+80H	;
573)   222F B0 23       		 DEFW LCD_BLINKOF	;
574)   2231 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
574)   2235 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
574)   2239 4B 4F       		 DEFM  "LCD_BLINKO"	;
575)   223B CE          		 DEFB 'N'+80H	;
576)   223C B6 23       		 DEFW LCD_BLINKON	;
577)   223E 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
577)   2242 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
578)   2246 D2          		 DEFB 'R'+80H	;
579)   2247 BC 23       		 DEFW LCD_CLR	;
580)   2249 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
580)   224D 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
580)   2251 4F 52 41    		 DEFM  "LCD_CURSORA"	;
581)   2254 D4          		 DEFB 'T'+80H	;
582)   2255 C2 23       		 DEFW LCD_CURSAT	;
583)   2257 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
583)   225B 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
583)   225F 4F 46       		 DEFM  "LCD_CURSOF"	;
584)   2261 C6          		 DEFB 'F'+80H	;
585)   2262 E1 23       		 DEFW LCD_CURSOF	;
586)   2264 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
586)   2268 43 55 52 53 		 DEFM  "LCD_CURSO"	;
586)   226C 4F          		 DEFM  "LCD_CURSO"	;
587)   226D CE          		 DEFB 'N'+80H	;
588)   226E E7 23       		 DEFW LCD_CURSON	;
589)   2270 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
589)   2274 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
589)   2278 4F 46       		 DEFM  "LCD_DISPOF"	;
590)   227A C6          		 DEFB 'F'+80H	;
591)   227B ED 23       		 DEFW LCD_DISPOF	;
592)   227D 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
592)   2281 44 49 53 50 		 DEFM  "LCD_DISPO"	;
592)   2285 4F          		 DEFM  "LCD_DISPO"	;
593)   2286 CE          		 DEFB 'N'+80H	;
594)   2287 F3 23       		 DEFW LCD_DISPON	;
595)   2289 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
595)   228D 48 4F 4D    		 DEFM  "LCD_HOM"	;
596)   2290 C5          		 DEFB 'E'+80H	;
597)   2291 D4 0E       		 DEFW LCD16_HOME	;
598)   2293 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
598)   2297 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
598)   229B 45 46       		 DEFM  "LCD_MOVLEF"	;
599)   229D D4          		 DEFB 'T'+80H	;
600)   229E FF 23       		 DEFW LCD_MOVLFT	;
601)   22A0 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
601)   22A4 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
601)   22A8 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
602)   22AB D4          		 DEFB 'T'+80H	;
603)   22AC 05 24       		 DEFW LCD_MOVRGT	;
604)   22AE 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
604)   22B2 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
605)   22B6 D4          		 DEFB 'T'+80H	;
606)   22B7 0B 24       		 DEFW LCD_PRN	;
607)   22B9 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
607)   22BD 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
607)   22C1 45 46       		 DEFM  "LCD_SCRLEF"	;
608)   22C3 D4          		 DEFB 'T'+80H	;
609)   22C4 7C 24       		 DEFW LCD_SCRLFT	;
610)   22C6 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
610)   22CA 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
610)   22CE 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
611)   22D1 D4          		 DEFB 'T'+80H	;
612)   22D2 82 24       		 DEFW LCD_SCRRGT	;
613)   22D4 50 57       		 DEFM  "PW"	;
614)   22D6 C4          		 DEFB    'D'+80H	;
615)   22D7 FE 22       		 DEFW NIMP	;
616)   22D9 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
616)   22DD 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
616)   22E1 53          		 DEFM  "RTC_ADJUS"	;
617)   22E2 D4          		 DEFB    'T'+80H	;
618)   22E3 5C 23       		 DEFW RTC_ADJUST	;
619)   22E5 52 54 43 5F 		 DEFM  "RTC_GE"	;
619)   22E9 47 45       		 DEFM  "RTC_GE"	;
620)   22EB D4          		 DEFB    'T'+80H	;
621)   22EC 8A 23       		 DEFW RTC_GET	;
622)   22EE 54 59 50    		 DEFM  "TYP"	;
623)   22F1 C5          		 DEFB    'E'+80H	;
624)   22F2 37 23       		 DEFW DRV_TYPFILE	;
626)   22F4 FF          		 DEFB 0FFH	;
629)   22F5 C3 88 24    		DOT: JP EXTCMDRET	;
634)   22F8 C3 00 00    		BYE: JP 0	;
637)   22FB C3 88 24    		FX: JP EXTCMDRET	;
640)   22FE C3 88 24    		NIMP: JP EXTCMDRET        ;NOT IMPLEMENTED YET	;NOT IMPLEMENTED YET
645)   2301 CD F0 46    		DRV_ERROR: CALL EXTERR	;
646)   2304 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
646)   2308 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
646)   230C 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
646)   2310 52          		 DEFM  "STORAGE ERROR"	;
647)   2311 00          		 DEFB    0	;
652)   2312 CD 41 0A    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
653)   2315 D2 88 24    		 JP NC, EXTCMDRET	;
654)   2318 18 E7       		 JR DRV_ERROR	;
656)   231A CD 84 5D    		DRV_GETFNPRM: CALL EXPR       ;VARIABLE TYPE	;VARIABLE TYPE
657)   231D 08          		 EX AF, AF'        ;E NO OF BYTES ACCS THE PARAM	;E NO OF BYTES ACCS THE PARAM
658)   231E 21 00 FB    		 LD HL, ACCS	;
659)   2321 06 00       		 LD B, 0	;
660)   2323 4B          		 LD C, E	;
661)   2324 11 B9 FE    		 LD DE, STRGBUFF	;
662)   2327 ED B0       		 LDIR	;
663)   2329 AF          		 XOR A	;
664)   232A 12          		 LD (DE), A	;
665)   232B C9          		 RET	;
668)   232C CD 1A 23    		DRV_CD: CALL DRV_GETFNPRM	;
669)   232F CD 6D 0A    		 CALL STRG_DIRCHG	;
670)   2332 D2 88 24    		 JP NC, EXTCMDRET	;
671)   2335 18 CA       		 JR DRV_ERROR	;
674)   2337 CD 1A 23    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
675)   233A CD 85 0A    		 CALL STRG_OPNFILE	;
676)   233D 38 C2       		 JR C, DRV_ERROR	;
677)   233F CD 0D 0B    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
678)   2342 3A E5 FE    		 LD A, (FID)	;
679)   2345 CD A3 0A    		 CALL STRG_CLSFILE	;
680)   2348 C3 88 24    		 JP EXTCMDRET	;
687)   234B CD 94 5E    		RTC_GETBASPAR: CALL EXPRI	;
688)   234E D9          		 EXX	;
689)   234F 7D          		 LD A, L        ;A HAS THE NUMBER	;A HAS THE NUMBER
690)   2350 CD 0D 27    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
691)   2353 FD 7E 00    		 LD A, (IY)	;
692)   2356 FE 2C       		 CP ', '	;
693)   2358 FD 23       		 INC IY	;
694)   235A 7D          		 LD A, L	;
695)   235B C9          		 RET	;
700)   235C 0E 00       		RTC_ADJUST: LD C, 0	;
701)   235E 11 89 FE    		 LD DE, BUFFER	;
702)   2361 AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
703)   2362 32 89 FE    		 LD (BUFFER), A	;
704)   2365 13          		 INC DE	;
705)   2366 C5          		RTCADJ_NXT: PUSH BC	;
706)   2367 D5          		 PUSH DE	;
707)   2368 CD 4B 23    		 CALL RTC_GETBASPAR	;
708)   236B D1          		 POP DE	;
709)   236C C1          		 POP BC	;
710)   236D 28 0B       		 JR Z, RTCADJ_PAROK	;
712)   236F FD 2B       		 DEC IY	;
713)   2371 47          		 LD B, A        ;SAVE A	;SAVE A
714)   2372 79          		 LD A, C	;
715)   2373 FE 06       		 CP 6	;
716)   2375 28 08       		 JR Z, RTCADJ_EXEC	;
718)   2377 C3 50 25    		 JP SNTX_ERROR	;
719)   237A 0C          		RTCADJ_PAROK: INC C	;
720)   237B 12          		 LD (DE), A	;
721)   237C 13          		 INC DE	;
722)   237D 18 E7       		 JR RTCADJ_NXT	;
723)   237F 78          		RTCADJ_EXEC: LD A, B	;
724)   2380 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
725)   2381 13          		 INC DE	;
726)   2382 AF          		 XOR A	;
727)   2383 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
728)   2384 CD AC 0D    		 CALL DS1307_ADJUST	;
729)   2387 C3 88 24    		 JP EXTCMDRET	;
731)   238A CD 50 0D    		RTC_GET: CALL DS1307_GETNOW	;
733)   238D 21 9B 23    		 LD HL, TSTSTR	;
734)   2390 11 00 80    		 LD DE, $8000	;
735)   2393 01 14 00    		 LD BC, 20	;
736)   2396 C5          		 PUSH BC	;
737)   2397 ED B0       		 LDIR	;
738)   2399 C1          		 POP BC	;
739)   239A C9          		 RET	;
741)   239B 31 37 2F 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
741)   239F 33 2F 32 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
741)   23A3 32 31 20 31 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
741)   23A7 37 3A 35 32 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
741)   23AB 3A 30 33    		 TSTSTR DEFM "17/03/2021 17:52:03"	;
742)   23AE 00 0D       		 DEFB 0,0x0D	;
745)   23B0 CD 0C 0F    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
746)   23B3 C3 88 24    		 JP EXTCMDRET	;
748)   23B6 CD 1A 0F    		LCD_BLINKON: CALL LCD16_BLINKON	;
749)   23B9 C3 88 24    		 JP EXTCMDRET	;
751)   23BC CD BD 0E    		LCD_CLR: CALL LCD16_CLR	;
752)   23BF C3 88 24    		 JP EXTCMDRET	;
755)   23C2 CD 94 5E    		 CALL EXPRI	;
756)   23C5 D9          		 EXX	;
757)   23C6 55          		 LD D, L	;
758)   23C7 D5          		 PUSH DE	;
759)   23C8 FD 7E 00    		 LD A, (IY)	;
760)   23CB FE 2C       		 CP ', '	;
761)   23CD 28 04       		 JR Z, LCDCA_OK	;
762)   23CF D1          		 POP DE	;
763)   23D0 C3 50 25    		 JP SNTX_ERROR	;
764)   23D3 FD 23       		LCDCA_OK: INC IY	;
765)   23D5 CD 94 5E    		 CALL EXPRI	;
766)   23D8 D9          		 EXX	;
767)   23D9 D1          		 POP DE	;
768)   23DA 5D          		 LD E, L	;
769)   23DB CD E1 0E    		 CALL LCD16_SETCURS	;
770)   23DE C3 88 24    		 JP EXTCMDRET	;
772)   23E1 CD F0 0E    		LCD_CURSOF: CALL LCD16_CURSOFF	;
773)   23E4 C3 88 24    		 JP EXTCMDRET	;
775)   23E7 CD FE 0E    		LCD_CURSON: CALL LCD16_CURSON	;
776)   23EA C3 88 24    		 JP EXTCMDRET	;
778)   23ED CD 94 0E    		LCD_DISPOF: CALL LCD16_NODISP	;
779)   23F0 C3 88 24    		 JP EXTCMDRET	;
781)   23F3 CD A2 0E    		LCD_DISPON: CALL LCD16_DISP	;
782)   23F6 C3 88 24    		 JP EXTCMDRET	;
784)   23F9 CD D4 0E    		LCD_HOME: CALL LCD16_HOME	;
785)   23FC C3 88 24    		 JP EXTCMDRET	;
787)   23FF CD 34 0F    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
788)   2402 C3 88 24    		 JP EXTCMDRET	;
790)   2405 CD 3A 0F    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
791)   2408 C3 88 24    		 JP EXTCMDRET	;
793)   240B 18 20       		LCD_PRN: JR PRINT0	;
794)   240D 06 02       		PRINT6: LD B, 2	;
795)   240F 18 22       		 JR PRINTC	;
796)   2411 01 00 01    		PRINT8: LD BC, 100H	;
797)   2414 18 1D       		 JR PRINTC	;
798)   2416 21 00 FD    		PRINT9: LD HL, STAVAR	;
799)   2419 AF          		 XOR A	;
800)   241A BE          		 CP (HL)	;
801)   241B 28 10       		 JR Z, PRINT0	;
802)   241D 3A FB FD    		 LD A, (COUNT)	;
803)   2420 B7          		 OR A	;
804)   2421 28 0A       		 JR Z, PRINT0	;
805)   2423 96          		PRINTA: SUB (HL)	;
806)   2424 28 07       		 JR Z, PRINT0	;
807)   2426 30 FB       		 JR NC, PRINTA	;
808)   2428 ED 44       		 NEG	;
809)   242A CD 2A 57    		 CALL FILL	;
810)   242D 3A 00 FD    		PRINT0: LD A, (STAVAR)	;
811)   2430 4F          		 LD C, A        ;PRINTS	;PRINTS
812)   2431 06 00       		 LD B, 0        ;PRINTF	;PRINTF
813)   2433 CD C2 56    		PRINTC: CALL TERM?	;
814)   2436 28 41       		 JR Z, PRINT4	;
815)   2438 CB 80       		 RES 0, B	;
816)   243A FD 23       		 INC IY	;
817)   243C FE 7E       		 CP '~'	;
818)   243E 28 CD       		 JR Z, PRINT6	;
819)   2440 FE 3B       		 CP ';'        ;'	;'
820)   2442 28 CD       		 JR Z, PRINT8	;
821)   2444 FE 2C       		 CP ','	;
822)   2446 28 CE       		 JR Z, PRINT9	;
823)   2448 CD E3 56    		 CALL FORMAT        ;SPC, TAB, '	;SPC, TAB, '
824)   244B 28 E6       		 JR Z, PRINTC	;
825)   244D FD 2B       		 DEC IY	;
826)   244F C5          		 PUSH BC	;
827)   2450 CD 84 5D    		 CALL EXPR        ;VARIABLE TYPE	;VARIABLE TYPE
828)   2453 08          		 EX AF, AF'	;
829)   2454 FA 6A 24    		 JP M, PRINT3        ;STRING	;STRING
830)   2457 D1          		 POP DE	;
831)   2458 D5          		 PUSH DE	;
832)   2459 CB 4A       		 BIT 1, D	;
833)   245B F5          		 PUSH AF	;
834)   245C CC 96 63    		 CALL Z, STR        ;DECIMAL	;DECIMAL
835)   245F F1          		 POP AF	;
836)   2460 C4 53 63    		 CALL NZ, HEXSTR       ;HEX	;HEX
837)   2463 C1          		 POP BC	;
838)   2464 C5          		 PUSH BC	;
839)   2465 79          		 LD A, C	;
840)   2466 93          		 SUB E	;
841)   2467 D4 2A 57    		 CALL NC, FILL        ;RIGHT JUSTIFY	;RIGHT JUSTIFY
842)   246A C1          		PRINT3: POP BC	;
845)   246B 21 00 FB    		 LD HL, ACCS       ; L IS 00	; L IS 00
846)   246E 7D          		 LD A, L	;
847)   246F 83          		 ADD E	;
848)   2470 6F          		 LD L, A	;
849)   2471 AF          		 XOR A	;
850)   2472 77          		 LD (HL), A	;
851)   2473 6F          		 LD L, A	;
852)   2474 CD C6 0E    		 CALL LCD16_PRINT       ;PRINT	;PRINT
853)   2477 18 BA       		 JR PRINTC	;
854)   2479 C3 88 24    		PRINT4: JP EXTCMDRET	;
857)   247C CD 28 0F    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
858)   247F C3 88 24    		 JP EXTCMDRET	;
860)   2482 CD 2E 0F    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
861)   2485 C3 88 24    		 JP EXTCMDRET	;
865)   2488 AF          		 XOR A	;
868)   2489 C9          		 RET	;
875)   248A FE FF       		@MYOS_OSOPEN: CP 255	;
876)   248C 28 06       		 JR Z, OPW	;
877)   248E FE 01       		 CP 1	;
878)   2490 28 06       		 JR Z, OPRW	;
880)   2492 18 06       		 JR DOOP	;
881)   2494 3E 01       		OPW: LD A, 1	;
882)   2496 18 02       		 JR DOOP	;
883)   2498 3E 02       		OPRW: LD A, 2	;
884)   249A F5          		DOOP: PUSH AF        ;SAVE A	;SAVE A
885)   249B AF          		 XOR A         ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
886)   249C 12          		 LD (DE), A        ;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0	;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0
887)   249D EB          		 EX DE, HL	;
888)   249E ED 52       		 SBC HL, DE	;
889)   24A0 23          		 INC HL         ;+1 FOR ZERO	;+1 FOR ZERO
890)   24A1 E5          		 PUSH HL	;
891)   24A2 C1          		 POP BC	;
892)   24A3 EB          		 EX DE, HL	;
893)   24A4 11 B9 FE    		 LD DE, STRGBUFF	;
894)   24A7 ED B0       		 LDIR         ;COPY FILENAME TO STRGBUFF	;COPY FILENAME TO STRGBUFF
895)   24A9 F1          		 POP AF         ;RESTORE A	;RESTORE A
896)   24AA CD 85 0A    		 CALL STRG_OPNFILE	;
897)   24AD DA 01 23    		 JP C, DRV_ERROR	;
898)   24B0 C9          		 RET	;
902)   24B1 21 B9 FE    		@MYOS_OSBPUT: LD HL, STRGBUFF	;
903)   24B4 77          		 LD (HL), A        ;VALUE	;VALUE
904)   24B5 7B          		 LD A, E        ;FID	;FID
905)   24B6 EB          		 EX DE, HL	;
906)   24B7 01 01 00    		 LD BC, 1        ;NO OF BYTES TO WRITE	;NO OF BYTES TO WRITE
907)   24BA CD B5 0A    		 CALL STRG_BLKWRITE	;
908)   24BD DA 01 23    		 JP C, DRV_ERROR	;
909)   24C0 C9          		 RET	;
913)   24C1 7B          		@MYOS_OSBGET: LD A, E       ;FID	;FID
914)   24C2 11 B9 FE    		 LD DE, STRGBUFF       ;SET BUFFER	;SET BUFFER
915)   24C5 01 01 00    		 LD BC, 1        ;NO OF BYTES TO READ	;NO OF BYTES TO READ
916)   24C8 CD D8 0A    		 CALL STRG_BLKREAD	;
917)   24CB DA 01 23    		 JP C, DRV_ERROR	;
918)   24CE 78          		 LD A, B	;
919)   24CF 81          		 ADD C	;
920)   24D0 FE 01       		 CP 1	;
921)   24D2 28 03       		 JR Z, GETISOK	;
922)   24D4 3E FF       		 LD A, 255	;
923)   24D6 C9          		 RET	;
924)   24D7 3A B9 FE    		GETISOK: LD A, (STRGBUFF)	;
925)   24DA C9          		 RET	;
930)   24DB 7B          		@MYOS_GETPTR: LD A, E	;
931)   24DC CD 0D 0A    		 CALL STRG_GETPOS	;
932)   24DF C9          		 RET	;
937)   24E0 CD 27 0A    		@MYOS_PUTPTR: CALL STRG_SETPOS	;
938)   24E3 C9          		 RET	;
943)   24E4 7B          		@MYOS_GETEXT: LD A, E	;
944)   24E5 CD 08 0A    		 CALL STRG_GETSIZE	;
945)   24E8 C9          		 RET	;
950)   24E9 7B          		@MYOS_OSSHUT: LD A, E	;
951)   24EA CD A3 0A    		 CALL STRG_CLSFILE	;
952)   24ED C9          		 RET	;
955)   24EE 7B          		@MYOS_OSSTAT: LD A, E	;
956)   24EF CD F6 09    		 CALL STRG_GETEOF	;
957)   24F2 FE FF       		 CP 255         ;TEST IF -1	;TEST IF -1
958)   24F4 C9          		 RET	;
962)   24F5 C9          		@MYOS_OSCALL: RET	;
965)   24F6 C9          		@MYOS_RESET: RET	;
967)   24F7 CD 94 5E    		@MYOS_MODE: CALL EXPRI       ;GET PARAM	;GET PARAM
968)   24FA D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
969)   24FB C3 E8 4C    		 JP XEQ	;
971)   24FE CD F2 1B    		@MYOS_CLG: CALL GRPH_SAVECOLORS	;
972)   2501 CD 67 17    		 CALL LCD_CLRSCR	;
973)   2504 CD 09 1C    		 CALL GRPH_RESTORECOLORS	;
974)   2507 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
977)   250A DD E5       		@MYOS_GCOL: PUSH IX	;
978)   250C 3E 01       		 LD A, 1	;
979)   250E CD F7 19    		 CALL BAS_COLOUR	;
980)   2511 DD E1       		 POP IX	;
981)   2513 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
983)   2516 DD E5       		@MYOS_COLOUR: PUSH IX	;
984)   2518 AF          		 XOR A	;
985)   2519 CD F7 19    		 CALL BAS_COLOUR	;
986)   251C DD E1       		 POP IX	;
987)   251E C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
989)   2521 DD E5       		@MYOS_DRAW: PUSH IX	;
990)   2523 CD D0 1A    		 CALL BAS_DRAW	;
991)   2526 DD E1       		 POP IX	;
992)   2528 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
994)   252B DD E5       		@MYOS_MOVE: PUSH IX	;
995)   252D CD F9 1A    		 CALL BAS_MOVE	;
996)   2530 DD E1       		 POP IX	;
997)   2532 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
999)   2535 DD E5       		@MYOS_PLOT: PUSH IX	;
1000)   2537 CD 69 1B    		 CALL BAS_PLOT	;
1001)   253A DD E1       		 POP IX	;
1002)   253C C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1004)   253F DD E5       		@MYOS_POINT: PUSH IX	;
1005)   2541 CD 05 1B    		 CALL BAS_POINT       ;RETURNS A VALUE TO BASIC	;RETURNS A VALUE TO BASIC
1006)   2544 DD E1       		 POP IX	;
1007)   2546 C9          		 RET	;
1016)   2547 CD 8C 1A    		@MYOS_PUTIMS: CALL GETBASICPARAMS     ;	;
1017)   254A C3 E8 4C    		 JP XEQ	;
1019)   254D C3 8A 23    		@MYOS_GETIMS: JP RTC_GET	;
1021)   2550 CD F0 46    		SNTX_ERROR: CALL EXTERR	;
1022)   2553 53 79 6E 74 		 DEFM  "Syntax error"	;
1022)   2557 61 78 20 65 		 DEFM  "Syntax error"	;
1022)   255B 72 72 6F 72 		 DEFM  "Syntax error"	;
1023)   255F 00          		 DEFB    0	;
1030)   2560 CD 46 03    		GETKEY: CALL GET_CHAR	;
1031)   2563 37          		 SCF	;
1032)   2564 C9          		 RET	;
1038)   2565 CD 33 03    		 CALL GET_CHARNW	;
1039)   2568 3F          		 CCF	;
1040)   2569 FE 00       		 CP 0	;
1041)   256B C8          		 RET Z	;
1042)   256C 37          		 SCF	;
1043)   256D C9          		 RET	;
1045)   256E F5          		@CHKCURS: PUSH AF	;
1046)   256F 3A A7 FE    		 LD A, (TIMECTR)	;
1047)   2572 CB 67       		 BIT 4, A	;
1048)   2574 28 11       		 JR Z, CCSHOW        ;IF SET SHOW	;IF SET SHOW
1049)   2576 3A 11 FE    		CCHIDE: LD A, (CURSSTAT)	;
1050)   2579 CB 4F       		 BIT 1, A	;
1051)   257B 20 19       		 JR NZ, CCEX        ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
1052)   257D CB CF       		 SET 1, A	;
1053)   257F 32 11 FE    		 LD (CURSSTAT), A	;
1054)   2582 CD 20 17    		 CALL LCD_RMVCURS	;
1055)   2585 18 0F       		 JR CCEX	;
1056)   2587 3A 11 FE    		CCSHOW: LD A, (CURSSTAT)	;
1057)   258A CB 4F       		 BIT 1, A	;
1058)   258C 28 08       		 JR Z, CCEX        ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
1059)   258E CB 8F       		 RES 1, A	;
1060)   2590 32 11 FE    		 LD (CURSSTAT), A	;
1061)   2593 CD 25 17    		 CALL LCD_PRNCURS	;
1063)   2596 F1          		CCEX: POP AF	;
1064)   2597 C9          		 RET	;
1075)   2598 3A 00 FE    		 LD A, (FLAGS)	;
1076)   259B CB 5F       		 BIT 3, A        ;EDIT MODE?	;EDIT MODE?
1077)   259D 28 09       		 JR Z, OSLIN1	;
1078)   259F CB 9F       		 RES 3, A	;
1079)   25A1 32 00 FE    		 LD (FLAGS), A	;
1080)   25A4 2A 12 FE    		 LD HL, (EDPTR)	;
1081)   25A7 BD          		 CP L	;
1082)   25A8 3E 0D       		OSLIN1: LD A, CR	;
1083)   25AA 77          		 LD (HL), A	;
1084)   25AB C4 BE 1E    		 CALL NZ, MYOS_OSWRCH	;
1085)   25AE 2E 00       		 LD L, 0	;
1086)   25B0 4D          		 LD C, L        ;REPEAT FLAG	;REPEAT FLAG
1087)   25B1 28 20       		 JR Z, OSWAIT        ;SUPPRESS UNWANTED SPACE	;SUPPRESS UNWANTED SPACE
1088)   25B3 06 00       		UPDATE: LD B, 0	;
1089)   25B5 7E          		UPD1: LD A, (HL)	;
1090)   25B6 04          		 INC B	;
1091)   25B7 23          		 INC HL	;
1092)   25B8 FE 0D       		 CP CR	;
1093)   25BA F5          		 PUSH AF	;
1094)   25BB E5          		 PUSH HL	;
1095)   25BC 5F          		 LD E, A	;
1096)   25BD C4 72 20    		 CALL NZ, WRCH        ;FAST WRCH	;FAST WRCH
1097)   25C0 E1          		 POP HL	;
1098)   25C1 F1          		 POP AF	;
1099)   25C2 20 F1       		 JR NZ, UPD1	;
1100)   25C4 3E 20       		 LD A, ' '	;
1101)   25C6 CD BE 1E    		 CALL MYOS_OSWRCH	;
1102)   25C9 1E 08       		 LD E, BS	;
1103)   25CB E5          		UPD2: PUSH HL	;
1104)   25CC CD 72 20    		 CALL WRCH        ;FAST WRCH	;FAST WRCH
1105)   25CF E1          		 POP HL	;
1106)   25D0 2B          		 DEC HL	;
1107)   25D1 10 F8       		 DJNZ UPD2	;
1108)   25D3 79          		OSWAIT: LD A, C	;
1109)   25D4 05          		 DEC B	;
1110)   25D5 28 01       		 JR Z, LIMIT	;
1111)   25D7 B7          		 OR A         ;REPEAT COMMAND?	;REPEAT COMMAND?
1112)   25D8 CC B1 1E    		LIMIT: CALL Z, KEYGET        ;READ KEYBOARD	;READ KEYBOARD
1113)   25DB 4F          		 LD C, A        ;SAVE FOR REPEAT	;SAVE FOR REPEAT
1114)   25DC 11 D3 25    		 LD DE, OSWAIT        ;RETURN ADDRESS	;RETURN ADDRESS
1115)   25DF D5          		 PUSH DE	;
1116)   25E0 3A 00 FE    		 LD A, (FLAGS)	;
1117)   25E3 B7          		 OR A         ;TEST FOR ESCAPE	;TEST FOR ESCAPE
1118)   25E4 79          		 LD A, C	;
1119)   25E5 FA 27 26    		 JP M, OSEXIT	;
1120)   25E8 FE 0B       		 CP 11         ;CURSOR UP     (IX-11)	;CURSOR UP     (IX-11)
1121)   25EA CA 6B 26    		 JP Z, LEFT	;
1122)   25ED FE 0A       		 CP 10         ;CURSOR DOWN   (IX-10)	;CURSOR DOWN   (IX-10)
1123)   25EF CA 9E 26    		 JP Z, RIGHT	;
1124)   25F2 06 00       		 LD B, 0	;
1125)   25F4 FE 05       		 CP 5         ;CLEAR LEFT    (IX-5)	;CLEAR LEFT    (IX-5)
1126)   25F6 28 72       		 JR Z, BACK	;
1127)   25F8 FE 09       		 CP 9         ;START OF LINE (IX-9)	;START OF LINE (IX-9)
1128)   25FA 28 6F       		 JR Z, LEFT	;
1129)   25FC FE 07       		 CP 7         ;CLEAR RIGHT   (IX-7)	;CLEAR RIGHT   (IX-7)
1130)   25FE 28 76       		 JR Z, DELETE	;
1131)   2600 FE 08       		 CP 8         ;END OF LINE   (IX-8)	;END OF LINE   (IX-8)
1132)   2602 CA 9E 26    		 JP Z, RIGHT	;
1133)   2605 0E 00       		 LD C, 0        ;INHIBIT REPEAT	;INHIBIT REPEAT
1134)   2607 FE 10       		 CP 'P' AND 1FH	;
1135)   2609 CA 95 20    		 JP Z, TOGGLE	;
1136)   260C FE 06       		 CP 6         ;DELETE LEFT   (IX-6)	;DELETE LEFT   (IX-6)
1137)   260E 28 5A       		 JR Z, BACK	;
1138)   2610 FE 04       		 CP 4         ;CURSOR LEFT   (IX-4)	;CURSOR LEFT   (IX-4)
1139)   2612 28 57       		 JR Z, LEFT	;
1140)   2614 FE 02       		 CP 2         ;DELETE RIGHT  (IX-2)	;DELETE RIGHT  (IX-2)
1141)   2616 28 5E       		 JR Z, DELETE	;
1142)   2618 FE 01       		 CP 1         ;INSERT SPACE  (IX-1)	;INSERT SPACE  (IX-1)
1143)   261A 28 6E       		 JR Z, INSERT	;
1144)   261C FE 03       		 CP 3         ;CURSOR RIGHT  (IX-3)	;CURSOR RIGHT  (IX-3)
1145)   261E 28 7E       		 JR Z, RIGHT	;
1146)   2620 FE 20       		 CP ' '         ;PRINTING CHARACTER	;PRINTING CHARACTER
1147)   2622 30 7F       		 JR NC, SAVECH	;
1148)   2624 FE 0D       		 CP CR         ;ENTER LINE	;ENTER LINE
1149)   2626 C0          		 RET NZ	;
1150)   2627 7E          		OSEXIT: LD A, (HL)	;
1151)   2628 CD BE 1E    		 CALL MYOS_OSWRCH       ;WRITE REST OF LINE	;WRITE REST OF LINE
1152)   262B 23          		 INC HL	;
1153)   262C D6 0D       		 SUB CR	;
1154)   262E 20 F7       		 JR NZ, OSEXIT	;
1155)   2630 D1          		 POP DE         ;DITCH RETURN ADDRESS	;DITCH RETURN ADDRESS
1156)   2631 B9          		 CP C	;
1157)   2632 C2 D2 20    		 JP NZ, ABORT        ;ESCAPE	;ESCAPE
1158)   2635 3E 0A       		 LD A, LF	;
1159)   2637 CD BE 1E    		 CALL MYOS_OSWRCH	;
1160)   263A ED 5B F4 FD 		 LD DE, (ERRLIN)	;
1161)   263E AF          		 XOR A	;
1162)   263F 6F          		 LD L, A	;
1163)   2640 22 12 FE    		 LD (EDPTR), HL	;
1164)   2643 BA          		 CP D	;
1165)   2644 C0          		 RET NZ	;
1166)   2645 BB          		 CP E	;
1167)   2646 C0          		 RET NZ	;
1168)   2647 11 B7 26    		 LD DE, EDITST	;
1169)   264A 06 04       		 LD B, 4	;
1170)   264C 1A          		CMPARE: LD A, (DE)	;
1171)   264D BE          		 CP (HL)	;
1172)   264E 3E 00       		 LD A, 0	;
1173)   2650 C0          		 RET NZ	;
1174)   2651 23          		 INC HL	;
1175)   2652 13          		 INC DE	;
1176)   2653 7E          		 LD A, (HL)	;
1177)   2654 FE 2E       		 CP '.'	;
1178)   2656 28 02       		 JR Z, ABBR	;
1179)   2658 10 F2       		 DJNZ CMPARE	;
1180)   265A AF          		ABBR: XOR A	;
1181)   265B 47          		 LD B, A	;
1182)   265C 4D          		 LD C, L	;
1183)   265D 6F          		 LD L, A	;
1184)   265E 11 BB 26    		 LD DE, LISTST	;
1185)   2661 EB          		 EX DE, HL	;
1186)   2662 ED B0       		 LDIR	;
1187)   2664 21 00 FE    		 LD HL, FLAGS	;
1188)   2667 CB DE       		 SET 3, (HL)	;
1189)   2669 C9          		 RET	;
1191)   266A 37          		BACK: SCF         ;DELETE LEFT	;DELETE LEFT
1192)   266B 2C          		LEFT: INC L         ;CURSOR LEFT	;CURSOR LEFT
1193)   266C 2D          		 DEC L	;
1194)   266D 28 45       		 JR Z, STOP	;
1195)   266F 3E 08       		 LD A, BS	;
1196)   2671 CD BE 1E    		 CALL MYOS_OSWRCH	;
1197)   2674 2D          		 DEC L	;
1198)   2675 D0          		 RET NC	;
1199)   2676 7E          		DELETE: LD A, (HL)        ;DELETE RIGHT	;DELETE RIGHT
1200)   2677 FE 0D       		 CP CR	;
1201)   2679 28 39       		 JR Z, STOP	;
1202)   267B 54          		 LD D, H	;
1203)   267C 5D          		 LD E, L	;
1204)   267D 13          		DEL1: INC DE	;
1205)   267E 1A          		 LD A, (DE)	;
1206)   267F 1B          		 DEC DE	;
1207)   2680 12          		 LD (DE), A	;
1208)   2681 13          		 INC DE	;
1209)   2682 FE 0D       		 CP CR	;
1210)   2684 20 F7       		 JR NZ, DEL1	;
1211)   2686 D1          		DEL2: POP DE         ;DITCH	;DITCH
1212)   2687 C3 B3 25    		 JP UPDATE	;
1214)   268A 3E 0D       		INSERT: LD A, CR        ;INSERT SPACE	;INSERT SPACE
1215)   268C BE          		 CP (HL)	;
1216)   268D C8          		 RET Z	;
1217)   268E 54          		 LD D, H	;
1218)   268F 1E FE       		 LD E, 254	;
1219)   2691 13          		INS1: INC DE	;
1220)   2692 12          		 LD (DE), A	;
1221)   2693 1B          		 DEC DE	;
1222)   2694 7B          		 LD A, E	;
1223)   2695 BD          		 CP L	;
1224)   2696 1B          		 DEC DE	;
1225)   2697 1A          		 LD A, (DE)	;
1226)   2698 20 F7       		 JR NZ, INS1	;
1227)   269A 36 20       		 LD (HL), ' '	;
1228)   269C 18 E8       		 JR DEL2	;
1230)   269E 7E          		RIGHT: LD A, (HL)        ;CURSOR RIGHT	;CURSOR RIGHT
1231)   269F FE 0D       		 CP CR	;
1232)   26A1 28 11       		 JR Z, STOP	;
1233)   26A3 56          		SAVECH: LD D, (HL)        ;PRINTING CHARACTER	;PRINTING CHARACTER
1234)   26A4 77          		 LD (HL), A	;
1235)   26A5 2C          		 INC L	;
1236)   26A6 28 09       		 JR Z, WONTGO        ;LINE TOO LONG	;LINE TOO LONG
1237)   26A8 CD BE 1E    		 CALL MYOS_OSWRCH	;
1238)   26AB 3E 0D       		 LD A, CR	;
1239)   26AD BA          		 CP D	;
1240)   26AE C0          		 RET NZ	;
1241)   26AF 77          		 LD (HL), A	;
1242)   26B0 C9          		 RET	;
1244)   26B1 2D          		WONTGO: DEC L	;
1245)   26B2 36 0D       		 LD (HL), CR	;
1248)   26B4 0E 00       		STOP: LD C, 0        ;STOP REPEAT	;STOP REPEAT
1249)   26B6 C9          		 RET	;
1252)   26B7 45 44 49 54 		EDITST: DEFM  "EDIT"	;
1253)   26BB 4C 49 53 54 		LISTST: DEFM  "LIST"	;
 18)   26BF C9          		 RET	;
 21)   26C0 F5          		DELAYMICROSEC: PUSH AF	;
 22)   26C1 D5          		 PUSH DE	;
 23)   26C2 1B          		 DEC DE	;
 24)   26C3 D1          		 POP DE	;
 25)   26C4 F1          		 POP AF	;
 26)   26C5 C9          		 RET	;
 29)   26C6 CD C0 26    		S21: CALL DELAYMICROSEC	;
 30)   26C9 10 FB       		 DJNZ S21	;
 31)   26CB C9          		 RET	;
 35)   26CC F5          		DELAYMILISEC: PUSH AF	;
 36)   26CD D5          		 PUSH DE	;
 37)   26CE 11 2C 01    		 LD DE, 300       ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 38)   26D1 1B          		DEL1: DEC DE	;
 39)   26D2 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 40)   26D3 B3          		 OR E	;
 41)   26D4 20 FB       		 JR NZ, DEL1	;
 42)   26D6 D1          		 POP DE	;
 43)   26D7 F1          		 POP AF	;
 44)   26D8 C9          		 RET	;
 46)   26D9 06 50       		DEL2: LD B, 80	;
 48)   26DB CD CC 26    		S1: CALL DELAYMILISEC	;
 49)   26DE 10 FB       		 DJNZ S1	;
 50)   26E0 C9          		 RET	;
 55)   26E1 C5          		@DELAYSEC: PUSH BC	;
 56)   26E2 01 E8 03    		 LD BC, 1000	;
 57)   26E5 C5          		MYDLAGN: PUSH BC	;
 58)   26E6 CD CC 26    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 59)   26E9 C1          		 POP BC	;
 60)   26EA 0B          		 DEC BC	;
 61)   26EB 78          		 LD A, B	;
 62)   26EC B1          		 OR C	;
 63)   26ED 20 F6       		 JR NZ, MYDLAGN	;
 64)   26EF C1          		 POP BC	;
 65)   26F0 10 EF       		 DJNZ DELAYSEC	;
 66)   26F2 C9          		 RET	;
 71)   26F3 F5          		 OUTASC PUSH AF	;
 72)   26F4 D5          		 PUSH DE	;
 73)   26F5 CD 28 27    		 CALL B2Bcd	;
 74)   26F8 D1          		 POP DE	;
 75)   26F9 CD 4E 27    		 CALL BCD2HA	;
 76)   26FC F1          		 POP AF	;
 77)   26FD C9          		 RET	;
 91)   26FE B7          		BCD2BN: OR A	;
 92)   26FF 47          		 LD B, A	;
 93)   2700 E6 F0       		 AND $F0	;
 94)   2702 0F          		 RRCA	;
 95)   2703 4F          		 LD C, A	;
 96)   2704 0F          		 RRCA	;
 97)   2705 0F          		 RRCA	;
 98)   2706 81          		 ADD A, C	;
 99)   2707 4F          		 LD C, A	;
100)   2708 78          		 LD A, B	;
101)   2709 E6 0F       		 AND $0F	;
102)   270B 81          		 ADD A, C	;
103)   270C C9          		 RET	;
118)   270D 26 FF       		BN2BCD: LD H, $FF	;
119)   270F 24          		D100LP: INC H	;
120)   2710 D6 64       		 SUB 100	;
121)   2712 30 FB       		 JR NC, D100LP	;
122)   2714 C6 64       		 ADD A, 100	;
123)   2716 2E FF       		 LD L, $FF	;
124)   2718 2C          		D10LP: INC L	;
125)   2719 D6 0A       		 SUB 10	;
126)   271B 30 FB       		 JR NC, D10LP	;
127)   271D C6 0A       		 ADD A, 10	;
128)   271F 4F          		 LD C, A	;
129)   2720 7D          		 LD A, L	;
130)   2721 07          		 RLCA	;
131)   2722 07          		 RLCA	;
132)   2723 07          		 RLCA	;
133)   2724 07          		 RLCA	;
134)   2725 B1          		 OR C	;
135)   2726 6F          		 LD L, A	;
136)   2727 C9          		 RET	;
150)   2728 01 00 10    		 LD BC, 16 * 256 + 0      ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
151)   272B 11 00 00    		 LD DE, 0	;
153)   272E 29          		 ADD HL, HL	;
154)   272F 7B          		 LD A, E	;
155)   2730 8F          		 ADC A, A	;
156)   2731 27          		 DAA	;
157)   2732 5F          		 LD E, A	;
158)   2733 7A          		 LD A, D	;
159)   2734 8F          		 ADC A, A	;
160)   2735 27          		 DAA	;
161)   2736 57          		 LD D, A	;
162)   2737 79          		 LD A, C	;
163)   2738 8F          		 ADC A, A	;
164)   2739 27          		 DAA	;
165)   273A 4F          		 LD C, A	;
166)   273B 10 F1       		 DJNZ cvtLp	;
167)   273D EB          		 EX DE, HL	;
168)   273E C9          		 RET	;
182)   273F B7          		BCD2BN: OR A	;
183)   2740 47          		 LD B, A	;
184)   2741 E6 F0       		 AND $F0	;
185)   2743 0F          		 RRCA	;
186)   2744 4F          		 LD C, A	;
187)   2745 0F          		 RRCA	;
188)   2746 0F          		 RRCA	;
189)   2747 81          		 ADD A, C	;
190)   2748 4F          		 LD C, A	;
191)   2749 78          		 LD A, B	;
192)   274A E6 0F       		 AND $0F	;
193)   274C 81          		 ADD A, C	;
194)   274D C9          		 RET	;
206)   274E 79          		 LD A, C	;
207)   274F CD 7B 27    		 CALL cvtUN	;
208)   2752 79          		 LD A, C	;
209)   2753 CD 7F 27    		 CALL cvtLN	;
210)   2756 7C          		 LD A, H	;
211)   2757 CD 7B 27    		 CALL cvtUN	;
212)   275A 7C          		 LD A, H	;
213)   275B CD 7F 27    		 CALL cvtLN	;
214)   275E 7D          		 LD A, L	;
215)   275F CD 7B 27    		 CALL cvtUN	;
216)   2762 7D          		 LD A, L	;
217)   2763 18 1A       		 JR cvtLN	;
219)   2765 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
220)   2766 1F          		 RRA	;
221)   2767 1F          		 RRA	;
222)   2768 1F          		 RRA	;
224)   2769 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
225)   276B C6 90       		 ADD A, 90h       ; old trick	; old trick
226)   276D 27          		 DAA        ; for converting	; for converting
227)   276E CE 40       		 ADC A, 40h       ; one nibble	; one nibble
228)   2770 27          		 DAA        ; to hex ASCII	; to hex ASCII
229)   2771 12          		 LD (DE), A	;
230)   2772 13          		 INC DE	;
231)   2773 C9          		 RET	;
243)   2774 7D          		 LD A, L	;
244)   2775 CD 65 27    		 CALL cvtUN	;
245)   2778 7D          		 LD A, L	;
246)   2779 18 EE       		 JR cvtLN	;
248)   277B 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
249)   277C 1F          		 RRA	;
250)   277D 1F          		 RRA	;
251)   277E 1F          		 RRA	;
253)   277F E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
254)   2781 C6 90       		 ADD A, 90h       ; old trick	; old trick
255)   2783 27          		 DAA        ; for converting	; for converting
256)   2784 CE 40       		 ADC A, 40h       ; one nibble	; one nibble
257)   2786 27          		 DAA        ; to hex ASCII	; to hex ASCII
258)   2787 12          		 LD (DE), A	;
259)   2788 13          		 INC DE	;
260)   2789 C9          		 RET	;
277)   278A F5          		 PUSH AF        ; 11 T-states	; 11 T-states
279)   278B ED 44       		 NEG         ; 8 T-states	; 8 T-states
280)   278D ED 44       		 NEG         ; 8 T-states	; 8 T-states
281)   278F ED 44       		 NEG         ; 8 T-states	; 8 T-states
282)   2791 ED 44       		 NEG         ; 8 T-states	; 8 T-states
283)   2793 0B          		 DEC BC         ; 6 T-states	; 6 T-states
284)   2794 79          		 LD A, C        ; 9 T-states	; 9 T-states
285)   2795 B0          		 OR B         ; 4 T-states	; 4 T-states
286)   2796 C2 8B 27    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
287)   2799 F1          		 POP AF         ; 10 T-states	; 10 T-states
288)   279A C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
  6)   279B 21 00 00    		@Mult16: ld hl, 0	;
  7)   279E 78          		 ld a, b	;
  8)   279F 06 10       		 ld b, 16	;
 10)   27A1 29          		 add hl, hl	;
 11)   27A2 CB 21       		 sla c	;
 12)   27A4 17          		 rla	;
 13)   27A5 30 01       		 jr nc, Mult16_NoAdd	;
 14)   27A7 19          		 add hl, de	;
 16)   27A8 10 F7       		 djnz Mult16_Loop	;
 17)   27AA C9          		 ret	;
 23)   27AB D5          		@Mult32: PUSH DE	;
 24)   27AC 79          		 ld a, c	;
 25)   27AD 48          		 ld c, b	;
 26)   27AE 21 00 00    		 ld hl, 0	;
 27)   27B1 06 10       		 ld b, 16	;
 29)   27B3 29          		 add hl, hl	;
 30)   27B4 17          		 rla	;
 31)   27B5 CB 11       		 rl c	;
 32)   27B7 30 07       		 jr nc, Mult32_NoAdd	;
 33)   27B9 19          		 add hl, de	;
 34)   27BA CE 00       		 adc a, 0	;
 35)   27BC D2 C0 27    		 jp nc, Mult32_NoAdd	;
 36)   27BF 0C          		 inc c	;
 38)   27C0 10 F1       		 djnz Mult32_Loop	;
 39)   27C2 41          		 ld b, c	;
 40)   27C3 4F          		 ld c, a	;
 41)   27C4 D1          		 POP DE	;
 42)   27C5 C9          		 ret	;
 50)   27C6 19          		 ADD HL, DE        ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
 51)   27C7 D9          		 EXX	;
 52)   27C8 ED 5A       		 ADC HL, DE        ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
 53)   27CA D9          		 EXX	;
 56)   27CB C9          		 RET	;
 66)   27CC 11 40 00    		 ld de, $0040	;
 67)   27CF 7D          		 ld a, l	;
 68)   27D0 6C          		 ld l, h	;
 69)   27D1 62          		 ld h, d	;
 70)   27D2 B7          		 or a	;
 71)   27D3 06 08       		 ld b, 8	;
 73)   27D5 ED 52       		 sbc hl, de	;
 74)   27D7 30 01       		 jr nc, Sqr16_Skip	;
 75)   27D9 19          		 add hl, de	;
 77)   27DA 3F          		 ccf	;
 78)   27DB CB 12       		 rl d	;
 79)   27DD 87          		 add a, a	;
 80)   27DE ED 6A       		 adc hl, hl	;
 81)   27E0 87          		 add a, a	;
 82)   27E1 ED 6A       		 adc hl, hl	;
 83)   27E3 10 F0       		 djnz Sqr16_Loop	;
 84)   27E5 C9          		 ret	;
  9)   FE00 00          		 @FLAGS DEFS 1        ; Flags: B7=ESC PRESSED,B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 10)   FE01 00 00       		 @FCOLOR DEFS 2       ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 11)   FE03 00 00       		 @BCOLOR DEFS 2       ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 12)   FE05 00 00       		 @FGRCOL DEFS 2       ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 13)   FE07 00 00       		 @BGRCOL DEFS 2       ;BACKGROUND COLOR FOR GRAPHICS	;BACKGROUND COLOR FOR GRAPHICS
 14)   FE09 00 00       		 @FCOLTM DEFS 2       ;TEMP FOREGROUND COLOR	;TEMP FOREGROUND COLOR
 15)   FE0B 00 00       		 @BCOLTM DEFS 2       ;TEMP BACKGROUND COLOR	;TEMP BACKGROUND COLOR
 16)   FE0D 00          		 @CURSORX DEFS 1       ;0-79	;0-79
 17)   FE0E 00          		 @CURSORY DEFS 1       ;0-47	;0-47
 18)   FE0F 00          		 @SCRLN DEFS 1        ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 19)   FE10 00          		 @LASTCHAR DEFS 1      ;	;
 20)   FE11 00          		 @CURSSTAT DEFS 1       ;IF BIT 0 SET THEN SHOW ELSE HIDE,IF BIT 1 SET THEN VISIBLE ELSE HIDDEN	;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN
 21)   FE12 00 00       		 @EDPTR DEFS 2	;
 22)   FE14 00          		 @OPTVAL DEFS 1	;
 23)   FE15 00          		 @INKEY DEFS 1	;
 24)   FE16 00          		 @VDUMODE DEFS 1       ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 25)   FE17 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE23 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE27 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE33 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 26)   FE37 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE43 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE47 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE53 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 27)   FE57 00 00       		 @GR_LASTX3 DEFS 2	;
 28)   FE59 00 00       		 @GR_LASTY3 DEFS 2	;
 29)   FE5B 00 00       		 @GR_LASTX2 DEFS 2	;
 30)   FE5D 00 00       		 @GR_LASTY2 DEFS 2	;
 31)   FE5F 00 00       		 @GR_LASTX DEFS 2	;
 32)   FE61 00 00       		 @GR_LASTY DEFS 2	;
 33)   FE63 00 00       		 @GR_PARAM1 DEFS 2	;
 34)   FE65 00 00       		 @GR_PARAM2 DEFS 2	;
 35)   FE67 00 00       		 @GR_PARAM3 DEFS 2	;
 36)   FE69 00 00       		 @GR_PARAM4 DEFS 2	;
 38)   FE6B 00 00       		 @FILL_X DEFS 2	;
 39)   FE6D 00 00       		 @FILL_Y DEFS 2	;
 40)   FE6F 00 00       		 @FILL_L DEFS 2	;
 41)   FE71 00 00       		 @FILL_X1 DEFS 2	;
 42)   FE73 00 00       		 @FILL_X2 DEFS 2	;
 43)   FE75 00 00       		 @FILL_DY DEFS 2	;
 44)   FE77 00 00       		 @FILL_Q DEFS 2        ;START OF QUEUE	;START OF QUEUE
 45)   FE79 00 00       		 @FILL_IDX DEFS 2       ;INDEX OF QUEUE	;INDEX OF QUEUE
 46)   FE7B 00 00       		 @FILL_PY DEFS 2       ;FOR PUSH/POP	;FOR PUSH/POP
 47)   FE7D 00 00       		 @FILL_PXL DEFS 2	;
 48)   FE7F 00 00       		 @FILL_PXR DEFS 2	;
 49)   FE81 00 00       		 @FILL_PDY DEFS 2	;
 50)   FE83 00 00       		 @FILL_OV DEFS 2       ;OLD COLOR	;OLD COLOR
 51)   FE85 00 00       		 @FILL_OLDSP DEFS 2      ; OLD SP	; OLD SP
 52)   FE87 00          		 @LCD_DSPCTRL DEFS 1	;
 53)   FE88 00          		 @LCD_DSPMODE DEFS 1	;
 54)   FE89 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE8D 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE91 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE95 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE99 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 55)   FE9D 00          		 @FFSTAT DEFS 1        ;FOR OUTPUT FLIP FLOPS DEVEPR,DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 56)   FE9E 00          		 @KEYCTR DEFS 1        ;FOR USB KEYBOARD	;FOR USB KEYBOARD
 57)   FE9F 00          		 @SERERR DEFS 1       ;	;
 58)   FEA0 00          		 @SERER2 DEFS 1        ;AT RAM ADDRESS	;AT RAM ADDRESS
 59)   FEA1 00          		 @DISPCT DEFS 1        ;	;
 60)   FEA2 00          		 @LCDCX DEFS 1        ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 61)   FEA3 00          		 @LCDCY DEFS 1        ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 62)   FEA4 00 00       		 @PRGEX DEFS 2        ;2 BYTES	;2 BYTES
 63)   FEA6 00          		 @TVSTAT DEFS 1        ;1 BYTE	;1 BYTE
 64)   FEA7 00 00 00 00 		 @TIMECTR DEFS 4	;
 65)   FEAB 00          		 @INT2TE DEFB 0	;
 66)   FEAC 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB0 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB4 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB8 00          		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 67)   FEB9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEBD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FECD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEDD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 68)   FEE1 00 00 00 00 		 @STRGCMD DEFS 4	;
 69)   FEE5 00          		 @FID DEFS 1	;
 70)   FEE6 00          		 @SPC DEFS 1	;
 71)   FEE7 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 71)   FEEB 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
