  3)   0000 00          		 NOP	;
  4)   0001 C3 00 01    		 JP START	;
  5)   0004 C3 AC 02    		 JP MENU	;
  6)   0007 49          		 VERSION DEFB $49    ; AT ADDR=7 VER 0.32	; AT ADDR=7 VER 0.32
  7)   0008 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   000C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0010 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0014 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0018 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   001C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0020 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0024 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0028 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   002C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0030 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0034 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
 10)   0038 C3 0A 0D    		 JP INTSER	;
 13)   003B 00 00 00 00 		 ALIGN 256	;
 13)   003F 00 00 00 00 		 ALIGN 256	;
 13)   0043 00 00 00 00 		 ALIGN 256	;
 13)   0047 00 00 00 00 		 ALIGN 256	;
 13)   004B 00 00 00 00 		 ALIGN 256	;
 13)   004F 00 00 00 00 		 ALIGN 256	;
 13)   0053 00 00 00 00 		 ALIGN 256	;
 13)   0057 00 00 00 00 		 ALIGN 256	;
 13)   005B 00 00 00 00 		 ALIGN 256	;
 13)   005F 00 00 00 00 		 ALIGN 256	;
 13)   0063 00 00 00 00 		 ALIGN 256	;
 13)   0067 00 00 00 00 		 ALIGN 256	;
 13)   006B 00 00 00 00 		 ALIGN 256	;
 13)   006F 00 00 00 00 		 ALIGN 256	;
 13)   0073 00 00 00 00 		 ALIGN 256	;
 13)   0077 00 00 00 00 		 ALIGN 256	;
 13)   007B 00 00 00 00 		 ALIGN 256	;
 13)   007F 00 00 00 00 		 ALIGN 256	;
 13)   0083 00 00 00 00 		 ALIGN 256	;
 13)   0087 00 00 00 00 		 ALIGN 256	;
 13)   008B 00 00 00 00 		 ALIGN 256	;
 13)   008F 00 00 00 00 		 ALIGN 256	;
 13)   0093 00 00 00 00 		 ALIGN 256	;
 13)   0097 00 00 00 00 		 ALIGN 256	;
 13)   009B 00 00 00 00 		 ALIGN 256	;
 13)   009F 00 00 00 00 		 ALIGN 256	;
 13)   00A3 00 00 00 00 		 ALIGN 256	;
 13)   00A7 00 00 00 00 		 ALIGN 256	;
 13)   00AB 00 00 00 00 		 ALIGN 256	;
 13)   00AF 00 00 00 00 		 ALIGN 256	;
 13)   00B3 00 00 00 00 		 ALIGN 256	;
 13)   00B7 00 00 00 00 		 ALIGN 256	;
 13)   00BB 00 00 00 00 		 ALIGN 256	;
 13)   00BF 00 00 00 00 		 ALIGN 256	;
 13)   00C3 00 00 00 00 		 ALIGN 256	;
 13)   00C7 00 00 00 00 		 ALIGN 256	;
 13)   00CB 00 00 00 00 		 ALIGN 256	;
 13)   00CF 00 00 00 00 		 ALIGN 256	;
 13)   00D3 00 00 00 00 		 ALIGN 256	;
 13)   00D7 00 00 00 00 		 ALIGN 256	;
 13)   00DB 00 00 00 00 		 ALIGN 256	;
 13)   00DF 00 00 00 00 		 ALIGN 256	;
 13)   00E3 00 00 00 00 		 ALIGN 256	;
 13)   00E7 00 00 00 00 		 ALIGN 256	;
 13)   00EB 00 00 00 00 		 ALIGN 256	;
 13)   00EF 00 00 00 00 		 ALIGN 256	;
 13)   00F3 00 00 00 00 		 ALIGN 256	;
 13)   00F7 00 00 00 00 		 ALIGN 256	;
 13)   00FB 00 00 00 00 		 ALIGN 256	;
 13)   00FF 00          		 ALIGN 256	;
 42)   0100 F3          		@START: DI	;
 43)   0101 C3 E3 01    		 JP BOOT        ;SKIP TESTING	;SKIP TESTING
 45)   0104 C3 2D 05    		@IOS_CLRSCR: JP OS_CLRSCR	;
 46)   0107 C3 AD 04    		@IOS_RMVCURS: JP OS_RMVCURS	;
 47)   010A C3 99 04    		@IOS_PRNCURS: JP OS_PRNCURS	;
 48)   010D C3 AD 21    		@IOS_CALCLINE: JP LCD_CALCLINE      ;TODO: VGA???	;TODO: VGA???
 49)   0110 C3 62 04    		@IOS_PRINTCHAR: JP OS_PRINTCHAR	;
 50)   0113 C3 F6 03    		@IOS_GETCHAR: JP GET_CHAR	;
 51)   0116 C3 C7 03    		@IOS_GETCHARNW: JP GET_CHARNW	;
 52)   0119 C3 8E 11    		@IOS_DIRLIST: JP STRG_DIRLIST	;
 53)   011C C3 BA 11    		@IOS_DIRCHG: JP STRG_DIRCHG	;
 54)   011F C3 D2 11    		@IOS_OPNFILE: JP STRG_OPNFILE	;
 55)   0122 C3 5B 12    		@IOS_TPFILE: JP STRG_TPFILE	;
 56)   0125 C3 F1 11    		@IOS_CLSFILE: JP STRG_CLSFILE	;
 57)   0128 C3 03 12    		@IOS_BLKWRITE: JP STRG_BLKWRITE	;
 58)   012B C3 26 12    		@IOS_BLKREAD: JP STRG_BLKREAD	;
 59)   012E C3 5A 11    		@IOS_GETPOS: JP STRG_GETPOS	;
 60)   0131 C3 74 11    		@IOS_SETPOS: JP STRG_SETPOS	;
 61)   0134 C3 55 11    		@IOS_GETSIZE: JP STRG_GETSIZE	;
 62)   0137 C3 43 11    		@IOS_GETEOF: JP STRG_GETEOF	;
 63)   013A C3 1F 2B    		@IOS_BN2BCD: JP BN2BCD	;
 64)   013D C3 65 08    		@IOS_DOCMD: JP CGDOCMD	;
 65)   0140 C3 63 15    		@IOS_DSADJUST: JP DS1307_ADJUST	;
 66)   0143 C3 C4 14    		@IOS_DSGETNOW: JP DS1307_GETNOW	;
 67)   0146 C3 32 17    		@IOS_L16BLOFF: JP LCD16_BLINKOFF	;
 68)   0149 C3 40 17    		@IOS_L16BLON: JP LCD16_BLINKON	;
 69)   014C C3 E3 16    		@IOS_L16CLR: JP LCD16_CLR	;
 70)   014F C3 07 17    		@IOS_L16SETCRS: JP LCD16_SETCURS	;
 71)   0152 C3 16 17    		@IOS_L16CRSOFF: JP LCD16_CURSOFF	;
 72)   0155 C3 24 17    		@IOS_L16CRSON: JP LCD16_CURSON	;
 73)   0158 C3 BA 16    		@IOS_L16NODISP: JP LCD16_NODISP	;
 74)   015B C3 C8 16    		@IOS_L16DISP: JP LCD16_DISP	;
 75)   015E C3 FA 16    		@IOS_L16HOME: JP LCD16_HOME	;
 76)   0161 C3 5A 17    		@IOS_L16MVLEFT: JP LCD16_MOVLEFT	;
 77)   0164 C3 60 17    		@IOS_L16MVRGHT: JP LCD16_MOVRIGHT	;
 78)   0167 C3 EC 16    		@IOS_L16PRINT: JP LCD16_PRINT	;
 79)   016A C3 4E 17    		@IOS_L16SCLEFT: JP LCD16_SCRLEFT	;
 80)   016D C3 54 17    		@IOS_L16SCRGHT: JP LCD16_SCRRIGHT	;
 81)   0170 C3 5C 25    		@IOS_CLRGRAPH: JP CLEARGRAPH	;
 82)   0173 C3 EB 25    		@IOS_GRDRAWLNE: JP GR_DRAWLINE	;
 83)   0176 C3 7B 20    		@IOS_GRREADPXL: JP LCD_READPIXEL ;TODO: CHANGE TO GRAPH READ PIXEL	;TODO: CHANGE TO GRAPH READ PIXEL
 84)   0179 C3 C2 27    		@IOS_GRCIRCLE: JP GR_CIRCLE	;
 85)   017C C3 DD 20    		@IOS_GRFILL: JP LCD_FILL  ;TODO: CHANGE TO GRAPH	;TODO: CHANGE TO GRAPH
 86)   017F C3 30 25    		@IOS_GRPLTPXL: JP PLOTP	;
 87)   0182 C3 8A 2D    		@IOS_ADD32: JP ADD32	;
 88)   0185 C3 1B 2D    		@IOS_MULT32: JP MULT32	;
 89)   0188 C3 00 00    		@IOS_SQRT32: JP 0000  ;TODO: MAKE ONE	;TODO: MAKE ONE
 90)   018B C3 CA 29    		@IOS_SND_SETVOLUME: JP SND_SETVOLUME	;
 91)   018E C3 8F 29    		@IOS_SND_NOTE: JP SND_NOTE	;
 92)   0191 C3 ED 2A    		@IOS_DELAYMILI: JP DELAYMILI	;
 98)   0194 06 05       		CN1: LD B, 5	;
 99)   0196 0E 00       		AGN1: LD C, 0	;
100)   0198 3E 00       		 LD A, 0	;
101)   019A ED 79       		 OUT (C), A	;
102)   019C 0E 00       		 LD C, 0	;
103)   019E 3E FF       		 LD A, 255	;
104)   01A0 ED 79       		 OUT (C), A	;
105)   01A2 10 F2       		 DJNZ AGN1	;
110)   01A4 11 01 00    		 LD DE, 1	;
111)   01A7 3E 00       		 LD A, 0        ;WRITE 0	;WRITE 0
112)   01A9 4F          		 LD C, A	;
113)   01AA 21 00 40    		 LD HL, RAMAD	;
114)   01AD 06 08       		 LD B, 8	;
115)   01AF 77          		AGN2: LD (HL), A	;
116)   01B0 4E          		 LD C, (HL)	;
117)   01B1 B9          		 CP C	;
118)   01B2 C2 CC 01    		 JP NZ, ERR	;
119)   01B5 19          		 ADD HL, DE	;
120)   01B6 C6 20       		 ADD A, 32       ;WRITE +32	;WRITE +32
121)   01B8 4F          		 LD C, A	;
122)   01B9 10 F4       		 DJNZ AGN2	;
124)   01BB 06 05       		 LD B, 5	;
125)   01BD 0E 08       		AGN3: LD C, 00001000B       ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
126)   01BF 3E 40       		 LD A, 64	;
127)   01C1 ED 79       		 OUT (C), A	;
128)   01C3 C6 80       		 ADD A, 128	;
129)   01C5 ED 79       		 OUT (C), A	;
130)   01C7 10 F4       		 DJNZ AGN3        ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
131)   01C9 C3 E3 01    		 JP BOOT	;
134)   01CC 0E 38       		ERR: LD C, 00111000B       ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
135)   01CE 3E 40       		 LD A, 64	;
136)   01D0 ED 79       		 OUT (C), A	;
138)   01D2 C3 CC 01    		 JP ERR         ;DO AGAIN PORT 1	;DO AGAIN PORT 1
143)   01D5 3E 01       		SETHISPEED: LD A, 1       ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
144)   01D7 CD CE 0D    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
145)   01DA C9          		 RET	;
147)   01DB 00 01 0A 0B 		MYMMUBANK:     DB 0,1,10,11,4,5,6,7	;
147)   01DF 04 05 06 07 		MYMMUBANK:     DB 0,1,10,11,4,5,6,7	;
151)   01E3 F3          		@BOOT: DI	;
152)   01E4 ED 56       		 IM 1	;
155)   01E6 0E 00       		MMUSETUP:   LD C,DEVMMU	;
156)   01E8 AF          		  XOR A	;
157)   01E9 06 00       		 LD B,0.SHL.5	;
158)   01EB ED 79       		 OUT (C),A	;
159)   01ED 3C          		 INC A	;
160)   01EE 06 20       		 LD B,1.SHL.5	;
161)   01F0 ED 79       		 OUT (C),A  	;
163)   01F2 3E 0A       		 LD A,10   ;VID MEM RAM	;VID MEM RAM
164)   01F4 06 40       		 LD B,2.SHL.5  	;
165)   01F6 ED 79       		 OUT (C),A  	;
167)   01F8 3E 0B       		 LD A,11   ;VID MEM RAM	;VID MEM RAM
168)   01FA 06 60       		 LD B,3.SHL.5  	;
169)   01FC ED 79       		 OUT (C),A  	;
171)   01FE 3E 04       		 LD A,4	;
172)   0200 06 80       		 LD B,4.SHL.5	;
173)   0202 ED 79       		 OUT (C),A  	;
174)   0204 3C          		 INC A	;
175)   0205 06 A0       		 LD B,5.SHL.5	;
176)   0207 ED 79       		 OUT (C),A  	;
177)   0209 3C          		 INC A	;
178)   020A 06 C0       		 LD B,6.SHL.5	;
179)   020C ED 79       		 OUT (C),A  	;
180)   020E 3C          		 INC A	;
181)   020F 06 E0       		 LD B,7.SHL.5	;
182)   0211 ED 79       		 OUT (C),A 	;
185)   0213 3E 07       		INTFFPS: LD A,7	;
186)   0215 D3 68       		IFFAGN: OUT (DEVINT), A	;
187)   0217 3D          		 DEC A	;
188)   0218 C2 15 02    		 JP NZ, IFFAGN    	;
190)   021B 31 FF FA    		 LD SP, STACKP	;
191)   021E 21 00 FE    		 LD HL,OSVARS       ;ZERO OS VARIABLES	;ZERO OS VARIABLES
192)   0221 AF          		SI_AGN: XOR A	;
193)   0222 77          		 LD (HL),A	;
194)   0223 23          		 INC HL	;
195)   0224 7C          		 LD A,H	;
196)   0225 B5          		 OR L	;
197)   0226 20 F9       		 JR NZ,SI_AGN       ;HL=0000 WHEN OVERFLOW FROM FFFF  	;HL=0000 WHEN OVERFLOW FROM FFFF
199)   0228 CD 97 0D    		 CALL INITMMU       ;PUT PAGES 0..7 IN RAM BANKS 0..7	;PUT PAGES 0..7 IN RAM BANKS 0..7
200)   022B 21 DB 01    		 LD HL,MYMMUBANK	;
201)   022E 11 01 FF    		 LD DE,BANKS	;
202)   0231 01 08 00    		 LD BC,8	;
203)   0234 ED B0       		 LDIR        ;TO RAM PAGE 7 OS VARS	;TO RAM PAGE 7 OS VARS
205)   0236 3E 24       		 LD A,36        ;RANDOM SEED	;RANDOM SEED
206)   0238 32 73 FF    		 LD (RNDseed),A	;
208)   023B CD DF 05    		 CALL FF_CLR	;
209)   023E CD 07 06    		 CALL EPROMOFF	;
213)   0241 CD 7A 29    		 CALL SND_INIT  	;
216)   0244 3E 01       		 LD A, 1 ;12        ;12=9600 BPS, 1=115200BPS	;12        ;12=9600 BPS, 1=115200BPS
217)   0246 CD CE 0D    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
218)   0249 21 32 07    		 LD HL, STR00	;
219)   024C CD F6 0D    		 CALL RS_TXT	;
222)   024F CD 32 13    		 CALL I2C_INIT        ;INITIALIZE I2C	;INITIALIZE I2C
223)   0252 CD B8 14    		 CALL DS1307_INIT      ;	;
224)   0255 CD 27 15    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
225)   0258 CD 62 16    		 CALL LCD16_INIT       ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
226)   025B 21 81 07    		 LD HL, SVER	;
227)   025E CD EC 16    		 CALL LCD16_PRINT       ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
230)   0261 CD 0C 11    		 CALL STRG_INIT	;
231)   0264 21 69 07    		 LD HL, STR001	;
232)   0267 CD F6 0D    		 CALL RS_TXT	;
240)   026A 21 BB FE    		 LD HL,SCRNST	;
241)   026D CB C6       		 SET 0,(HL) ;ENABLE LCD	;ENABLE LCD
242)   026F CB CE       		 SET 1,(HL) ;ENABLE VGA	;ENABLE VGA
245)   0271 CD AD 1E    		 CALL LCD_INIT	;
246)   0274 21 00 00    		 LD HL, COL_BLACK	;
247)   0277 22 03 FE    		 LD (BCOLOR), HL	;
248)   027A 21 FF FF    		 LD HL, COL_WHITE	;
249)   027D 22 01 FE    		 LD (FCOLOR), HL	;
250)   0280 21 1F 07    		 LD HL, STRSCR	;
251)   0283 CD F6 0D    		 CALL RS_TXT	;
252)   0286 CD 9E 22    		 CALL LCD_CLRSCR	;
253)   0289 AF          		 XOR A	;
254)   028A 32 0F FE    		 LD (SCRLN), A	;
255)   028D 3E 00       		 LD A, 0	;
256)   028F 32 0D FE    		 LD (CURSORX), A	;
257)   0292 3E 00       		 LD A, 0	;
258)   0294 32 0E FE    		 LD (CURSORY), A	;
261)   0297 CD 78 17    		 CALL VGA_INIT	;
262)   029A 21 12 07    		 LD HL, TXTMES	;
263)   029D CD F6 0D    		 CALL RS_TXT	;
266)   02A0 CD 86 0E    		 CALL PS2KBINIT	;
271)   02A3 CD 31 0D    		 CALL COPYINTTAB	;
274)   02A6 21 92 07    		 LD HL,OSVERMES	;
275)   02A9 CD 48 05    		 CALL OS_PRINTTEXT	;
280)   02AC AF          		@MENU: XOR A	;
281)   02AD 32 0F FE    		 LD (SCRLN), A	;
282)   02B0 21 62 06    		 LD HL, STRMN	;
283)   02B3 CD F6 0D    		 CALL RS_TXT       ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
284)   02B6 21 48 07    		 LD HL, STR01	;
285)   02B9 CD F6 0D    		 CALL RS_TXT       ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
292)   02BC 3E 00       		 LD A, 0	;
293)   02BE 32 0D FE    		 LD (CURSORX), A	;
294)   02C1 32 13 FF    		 LD (VGATX_X), A	;
295)   02C4 3E 06       		 LD A, 6	;
296)   02C6 32 0E FE    		 LD (CURSORY), A	;
297)   02C9 32 14 FF    		 LD (VGATX_Y), A	;
298)   02CC 21 33 06    		 LD HL, SMENU	;
299)   02CF CD 48 05    		 CALL OS_PRINTTEXT	;
301)   02D2 CD F6 03    		 CALL GET_CHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
302)   02D5 F5          		 PUSH AF	;
303)   02D6 CD AD 04    		 CALL OS_RMVCURS	;
304)   02D9 F1          		 POP AF	;
307)   02DA FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
308)   02DC CC 5D 05    		 CALL Z, UPLOD	;
309)   02DF FE 58       		 CP 'X'	;
310)   02E1 CA 54 05    		 JP Z, EXEC	;
311)   02E4 FE 53       		 CP 'S'	;
312)   02E6 CC D5 01    		 CALL Z,SETHISPEED	;
313)   02E9 FE 54       		 CP 'T'	;
314)   02EB CC AD 05    		 CALL Z, RSTST	;
315)   02EE FE 59       		 CP 'Y'	;
316)   02F0 CC C3 05    		 CALL Z, RSTST2	;
317)   02F3 FE 48       		 CP 'H'	;
318)   02F5 CC D2 05    		 CALL Z, XMTST	;
319)   02F8 FE 4A       		 CP 'J'	;
320)   02FA CC 92 05    		 CALL Z, DNLOD	;
321)   02FD FE 4B       		 CP 'K'	;
322)   02FF CC F4 07    		 CALL Z,OS_COMMAND	;
323)   0302 FE 43       		 CP 'C'	;
324)   0304 CC 2D 05    		 CALL Z, OS_CLRSCR	;
325)   0307 FE 42       		 CP 'B'	;
326)   0309 CA 2E 03    		 JP Z, GOTOBBCBASIC	;
327)   030C FE 4D       		 CP 'M'	;
328)   030E CA 8B 03    		 JP Z,DOMAINMENU	;
329)   0311 FE 51       		 CP 'Q'	;
330)   0313 CC 1C 03    		 CALL Z, OS_SETTIME	;
331)   0316 CD BC 29    		 CALL SND_BEEP	;
332)   0319 C3 AC 02    		 JP MENU	;
337)   031C 21 A0 FE    		OS_SETTIME: LD HL,TIMMSG	;
338)   031F 06 13       		 LD B,19	;
339)   0321 CD 00 0E    		OSST_NXT: CALL RS_RX	;
340)   0324 77          		 LD (HL),A	;
341)   0325 23          		 INC HL	;
342)   0326 10 F9       		 DJNZ OSST_NXT	;
343)   0328 36 20       		 LD (HL),' '	;
344)   032A CD E4 14    		 CALL DS1307_SETTIME	;
345)   032D C9          		 RET	;
349)   032E 06 02       		@GOTOBBCBASIC: LD B,2	;
350)   0330 3E 02       		 LD A,2	;
351)   0332 CD A3 0D    		 CALL PUTPGINBANK	;
352)   0335 06 03       		 LD B,3	;
353)   0337 3E 03       		 LD A,3	;
354)   0339 CD A3 0D    		 CALL PUTPGINBANK	;
355)   033C C3 00 40    		 JP BBCBASIC	;
358)   033F 43 4C 45 41 		MAINMENU DEFM "CLEAR SCREEN"	;
358)   0343 52 20 53 43 		MAINMENU DEFM "CLEAR SCREEN"	;
358)   0347 52 45 45 4E 		MAINMENU DEFM "CLEAR SCREEN"	;
359)   034B 00          		 DB 0	;
360)   034C 42 42 43 20 		 DEFM "BBC BASIC"	;
360)   0350 42 41 53 49 		 DEFM "BBC BASIC"	;
360)   0354 43          		 DEFM "BBC BASIC"	;
361)   0355 00          		 DB 0	;
362)   0356 43 4F 4D 4D 		 DEFM "COMMAND PROMPT"	;
362)   035A 41 4E 44 20 		 DEFM "COMMAND PROMPT"	;
362)   035E 50 52 4F 4D 		 DEFM "COMMAND PROMPT"	;
362)   0362 50 54       		 DEFM "COMMAND PROMPT"	;
363)   0364 00          		 DB 0	;
364)   0365 53 45 54 20 		 DEFM "SET SERIAL TO 115KBPS"	;
364)   0369 53 45 52 49 		 DEFM "SET SERIAL TO 115KBPS"	;
364)   036D 41 4C 20 54 		 DEFM "SET SERIAL TO 115KBPS"	;
364)   0371 4F 20 31 31 		 DEFM "SET SERIAL TO 115KBPS"	;
364)   0375 35 4B 42 50 		 DEFM "SET SERIAL TO 115KBPS"	;
364)   0379 53          		 DEFM "SET SERIAL TO 115KBPS"	;
365)   037A 00          		 DB 0	;
366)   037B 52 45 54 55 		 DEFM "RETURN TO MENU"	;
366)   037F 52 4E 20 54 		 DEFM "RETURN TO MENU"	;
366)   0383 4F 20 4D 45 		 DEFM "RETURN TO MENU"	;
366)   0387 4E 55       		 DEFM "RETURN TO MENU"	;
367)   0389 00 00       		 DB 0,0	;
370)   038B 3E 02       		 LD A,VGA_GREEN	;
371)   038D 06 0B       		 LD B,VGA_YELLOW	;
372)   038F CD F2 19    		 CALL VGA_MIXCOLOR	;
373)   0392 32 76 FF    		 LD (MENUVCLR),A	;
374)   0395 21 3F 00    		 LD HL,COL_BLUE	;
375)   0398 22 77 FF    		 LD (MENULFORE),HL	;
376)   039B 21 FF FF    		 LD HL,COL_WHITE	;
377)   039E 22 79 FF    		 LD (MENULBACK),HL	;
379)   03A1 21 3F 03    		 LD HL,MAINMENU	;
380)   03A4 11 08 08    		 LD DE,8.SHL.8+8  ;PRINT AT 8,8	;PRINT AT 8,8
381)   03A7 3E 01       		 LD A,1   ;SELECT ITEM 1	;SELECT ITEM 1
382)   03A9 CD 10 2F    		 CALL CREATEMENU	;
383)   03AC FE 01       		 CP 1    ;A THE MENU ITEM SELECTED	;A THE MENU ITEM SELECTED
384)   03AE CC 2D 05    		 CALL Z, OS_CLRSCR	;
385)   03B1 FE 02       		 CP 2	;
386)   03B3 CA 2E 03    		 JP Z, GOTOBBCBASIC	;
387)   03B6 FE 03       		 CP 3	;
388)   03B8 CC F4 07    		 CALL Z,OS_COMMAND	;
389)   03BB FE 04       		 CP 4	;
390)   03BD CC D5 01    		 CALL Z,SETHISPEED	;
391)   03C0 FE 05       		 CP 5	;
392)   03C2 CA AC 02    		 JP Z,MENU	;
393)   03C5 18 C4       		 JR DOMAINMENU	;
402)   03C7 D5          		@GET_CHARNW: PUSH DE	;
403)   03C8 CD C1 04    		 CALL OS_CHKCURS	;
404)   03CB AF          		 XOR A	;
406)   03CC CD 27 0E    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
407)   03CF 28 10       		 JR Z, CNW_TST2	;
408)   03D1 CD 00 0E    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
409)   03D4 CD 22 04    		 CALL CHKFKEYS	;
410)   03D7 FE 0D       		 CP 13        ;BEEP ON ENTER	;BEEP ON ENTER
411)   03D9 20 03       		 JR NZ,CNW_EX1	;
412)   03DB CD BC 29    		 CALL SND_BEEP	;
413)   03DE D1          		CNW_EX1: POP DE 	;
414)   03DF 37          		 SCF	;
415)   03E0 C9          		 RET	;
417)   03E1 CD 78 0E    		CNW_TST2: CALL PS2ISK	;
418)   03E4 28 0E       		 JR Z, CNW_EXIT	;
419)   03E6 CD 6C 0E    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)  	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
420)   03E9 CD 22 04    		 CALL CHKFKEYS	;
421)   03EC FE 0D       		 CP 13        ;BEEP ON ENTER	;BEEP ON ENTER
422)   03EE 20 03       		 JR NZ,CNW_EX2	;
423)   03F0 CD BC 29    		 CALL SND_BEEP  	;
424)   03F3 37          		CNW_EX2: SCF	;
425)   03F4 D1          		CNW_EXIT: POP DE 	;
426)   03F5 C9          		 RET	;
433)   03F6 CD C1 04    		@GET_CHAR: CALL OS_CHKCURS	;
434)   03F9 AF          		 XOR A	;
436)   03FA CD 27 0E    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
437)   03FD 28 0F       		 JR Z, CW_TST2	;
438)   03FF CD 00 0E    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
439)   0402 CD 22 04    		 CALL CHKFKEYS	;
440)   0405 FE 0D       		 CP 13        ;BEEP ON ENTER	;BEEP ON ENTER
441)   0407 20 03       		 JR NZ,CW_EX1	;
442)   0409 CD BC 29    		 CALL SND_BEEP	;
443)   040C 37          		CW_EX1: SCF	;
444)   040D C9          		 RET	;
446)   040E CD 78 0E    		CW_TST2: CALL PS2ISK      ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
448)   0411 28 E3       		 JR Z, GET_CHAR	;
449)   0413 CD 6C 0E    		 CALL READCHAR	;
450)   0416 CD 22 04    		 CALL CHKFKEYS	;
451)   0419 FE 0D       		 CP 13	;
452)   041B 20 03       		 JR NZ,CW_EX2	;
453)   041D CD BC 29    		 CALL SND_BEEP	;
454)   0420 37          		CW_EX2: SCF	;
455)   0421 C9          		 RET	;
457)   0422 FE A5       		CHKFKEYS: CP 165	;
458)   0424 CC 37 04    		 CALL Z,DOF5	;
459)   0427 FE A6       		 CP 166	;
460)   0429 CC 3E 04    		 CALL Z,DOF6	;
461)   042C FE A7       		 CP 167	;
462)   042E CC 45 04    		 CALL Z,DOF7	;
463)   0431 FE A8       		 CP 168	;
464)   0433 CC 4C 04    		 CALL Z,DOF8	;
465)   0436 C9          		 RET	;
468)   0437 CD C3 29    		DOF5: CALL SND_BEEP2	;
469)   043A AF          		 XOR A	;
470)   043B C3 8C 17    		 JP VGA_SETLOWGR	;
472)   043E CD C3 29    		DOF6: CALL SND_BEEP2	;
473)   0441 AF          		 XOR A	;
474)   0442 C3 97 17    		 JP VGA_SETLOWTX	;
476)   0445 CD C3 29    		DOF7: CALL SND_BEEP2	;
477)   0448 AF          		 XOR A	;
478)   0449 C3 A2 17    		 JP VGA_SETHIGR	;
480)   044C CD C3 29    		DOF8: CALL SND_BEEP2	;
481)   044F AF          		 XOR A	;
482)   0450 C3 AD 17    		 JP VGA_SETHITX	;
487)   0453 7A          		@OS_GOTOXY: LD A, D	;
488)   0454 32 0D FE    		 LD (CURSORX), A	;
489)   0457 32 13 FF    		 LD (VGATX_X), A	;
490)   045A 7B          		 LD A, E	;
491)   045B 32 0E FE    		 LD (CURSORY), A	;
492)   045E 32 14 FF    		 LD (VGATX_Y), A	;
493)   0461 C9          		 RET	;
498)   0462 F5          		@OS_PRINTCHAR: PUSH AF	;
499)   0463 3A BB FE    		 LD A,(SCRNST)	;
500)   0466 E6 01       		 AND 1	;
501)   0468 28 05       		 JR Z, OSPCNX	;
502)   046A F1          		 POP AF	;
503)   046B F5          		 PUSH AF	;
504)   046C CD F3 20    		 CALL LCD_PRCH	;
505)   046F D1          		OSPCNX: POP DE	;
506)   0470 3A BB FE    		 LD A,(SCRNST)	;
507)   0473 E6 02       		 AND 2	;
508)   0475 C8          		 RET Z	;
509)   0476 D5          		 PUSH DE	;
510)   0477 F1          		 POP AF    ;GET THE FLAGS BACK AND THE CHAR	;GET THE FLAGS BACK AND THE CHAR
511)   0478 CD 7A 18    		 CALL VGA_PRCH	;
512)   047B C9          		 RET	;
516)   047C E5          		@OS_MSG: PUSH HL	;
517)   047D 3A BB FE    		 LD A,(SCRNST)	;
518)   0480 E6 01       		 AND 1	;
519)   0482 28 03       		 JR Z, OSMSNX	;
520)   0484 CD DE 22    		 CALL LCD_MSG	;
521)   0487 E1          		OSMSNX: POP HL	;
522)   0488 3A BB FE    		 LD A,(SCRNST)	;
523)   048B E6 01       		 AND 1	;
524)   048D 28 F8       		 JR Z, OSMSNX	;
525)   048F 3A BB FE    		 LD A,(SCRNST)	;
526)   0492 E6 02       		 AND 2	;
527)   0494 C8          		 RET Z	;
528)   0495 CD D4 18    		 CALL VGA_PRINT	;
529)   0498 C9          		 RET	;
531)   0499 3A BB FE    		@OS_PRNCURS: LD A,(SCRNST)	;
532)   049C E6 01       		 AND 1	;
533)   049E 28 03       		 JR Z, OSPSNX	;
534)   04A0 CD 5C 22    		 CALL LCD_PRNCURS	;
535)   04A3 3A BB FE    		OSPSNX: LD A,(SCRNST)	;
536)   04A6 E6 02       		 AND 2	;
537)   04A8 C8          		 RET Z	;
538)   04A9 CD C1 1A    		 CALL VGA_PRNCURS	;
539)   04AC C9          		 RET	;
541)   04AD 3A BB FE    		@OS_RMVCURS: LD A,(SCRNST)	;
542)   04B0 E6 01       		 AND 1	;
543)   04B2 28 03       		 JR Z, OSRCNX	;
544)   04B4 CD 57 22    		 CALL LCD_RMVCURS	;
545)   04B7 3A BB FE    		OSRCNX: LD A,(SCRNST)	;
546)   04BA E6 02       		 AND 2	;
547)   04BC C8          		 RET Z	;
548)   04BD CD A3 1A    		 CALL VGA_RMVCURS	;
549)   04C0 C9          		 RET	;
552)   04C1 F5          		@OS_CHKCURS: PUSH AF	;
553)   04C2 3A 11 FE    		 LD A, (CURSSTAT)	;
554)   04C5 CB 57       		 BIT 2,A        ;BIT 2 FLAG FOR CURSOR OFF IF 1	;BIT 2 FLAG FOR CURSOR OFF IF 1
555)   04C7 20 27       		 JR NZ,CCTIM	;
556)   04C9 3A C1 FE    		 LD A, (TIMECTR)	;
557)   04CC CB 67       		 BIT 4, A	;
558)   04CE 28 11       		 JR Z, CCSHOW        ;IF SET SHOW	;IF SET SHOW
559)   04D0 3A 11 FE    		CCHIDE: LD A, (CURSSTAT)	;
560)   04D3 CB 4F       		 BIT 1, A	;
561)   04D5 20 1C       		 JR NZ, CCEX        ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
562)   04D7 CB CF       		 SET 1, A	;
563)   04D9 32 11 FE    		 LD (CURSSTAT), A	;
564)   04DC CD AD 04    		 CALL OS_RMVCURS	;
565)   04DF 18 12       		 JR CCEX	;
566)   04E1 3A 11 FE    		CCSHOW: LD A, (CURSSTAT)	;
567)   04E4 CB 4F       		 BIT 1, A	;
568)   04E6 28 0B       		 JR Z, CCEX        ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
569)   04E8 CB 8F       		 RES 1, A	;
570)   04EA 32 11 FE    		 LD (CURSSTAT), A	;
571)   04ED CD 99 04    		 CALL OS_PRNCURS	;
572)   04F0 CD 15 05    		CCTIM: CALL OS_SHOWTIME      ;TODO: MAYBE CALLED LESS OFTEN	;TODO: MAYBE CALLED LESS OFTEN
573)   04F3 F1          		CCEX: POP AF	;
574)   04F4 C9          		 RET	;
580)   04F5 CB 27       		@OSSETTIME: SLA A	;
581)   04F7 CB 27       		 SLA A	;
582)   04F9 CB 27       		 SLA A	;
583)   04FB 47          		 LD B,A	;
584)   04FC 3A 11 FE    		 LD A,(CURSSTAT)	;
585)   04FF CB 9F       		 RES 3,A	;
586)   0501 B0          		 OR B	;
587)   0502 32 11 FE    		 LD (CURSSTAT),A	;
588)   0505 C9          		 RET 	;
594)   0506 CB 27       		@OSSETCURSOR: SLA A	;
595)   0508 CB 27       		 SLA A  	;
596)   050A 47          		 LD B,A	;
597)   050B 3A 11 FE    		 LD A,(CURSSTAT)	;
598)   050E CB 97       		 RES 2,A	;
599)   0510 B0          		 OR B	;
600)   0511 32 11 FE    		 LD (CURSSTAT),A	;
601)   0514 C9          		 RET 	;
605)   0515 3A 11 FE    		@OS_SHOWTIME: LD A, (CURSSTAT)	;
606)   0518 CB 5F       		 BIT 3,A	;
607)   051A C0          		 RET NZ	;
608)   051B CD AC 15    		 CALL DS1307_GETTIME	;
609)   051E D8          		 RET C       ;ERROR RET  	;ERROR RET
611)   051F 16 00       		 LD D,0 ;COL	;COL
612)   0521 1E 01       		 LD E,1 ;ROW	;ROW
613)   0523 CD 07 17    		 CALL LCD16_SETCURS	;
614)   0526 21 A1 FE    		 LD HL, TIMMSG+1      ;WE NEED 17 CHARS SO OMIT THE FIRST 	;WE NEED 17 CHARS SO OMIT THE FIRST
615)   0529 CD EC 16    		 CALL LCD16_PRINT	;
616)   052C C9          		 RET	;
618)   052D CD 9E 22    		@OS_CLRSCR: CALL LCD_CLRSCR	;
619)   0530 CD 6F 18    		 CALL VGA_CLRSCR	;
620)   0533 C9          		 RET	;
624)   0534 AF          		@OS_CLEARLINE: XOR A	;
625)   0535 32 0D FE    		 LD (CURSORX), A	;
626)   0538 32 13 FF    		 LD (VGATX_X), A 	;
627)   053B 3A 0E FE    		 LD A,(CURSORY)	;
628)   053E CD 09 22    		 CALL LCD_CLRTXTLN	;
629)   0541 3A 14 FF    		 LD A, (VGATX_Y)	;
630)   0544 CD 67 1E    		 CALL VGA_CLRTXTLN   	;
631)   0547 C9          		 RET	;
635)   0548 7E          		@OS_PRINTTEXT: LD A,(HL)	;
636)   0549 FE 00       		 CP 0	;
637)   054B C8          		 RET Z	;
638)   054C E5          		 PUSH HL	;
639)   054D CD 62 04    		 CALL OS_PRINTCHAR	;
640)   0550 E1          		 POP HL	;
641)   0551 23          		 INC HL	;
642)   0552 18 F4       		 JR OS_PRINTTEXT 	;
653)   0554 3E 05       		 LD A, 5	;
654)   0556 CD D1 2A    		 CALL SCPRN	;
656)   0559 2A BE FE    		 LD HL, (PRGEX)	;
663)   055C E9          		 JP (HL)	;
670)   055D F3          		UPLOD: DI	;
675)   055E CD 00 0E    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
676)   0561 6F          		 LD L, A	;
677)   0562 CD 00 0E    		 CALL RS_RX	;
678)   0565 67          		 LD H, A	;
679)   0566 CD 00 0E    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
680)   0569 4F          		 LD C, A	;
681)   056A CD 00 0E    		 CALL RS_RX	;
682)   056D 47          		 LD B, A	;
684)   056E 22 BE FE    		 LD (PRGEX), HL	;
685)   0571 3A BF FE    		 LD A, (PRGEX + 1)	;
693)   0574 FE 80       		 CP $80	;
694)   0576 DC 0F 06    		 CALL C, EPROMON       ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
696)   0579 E5          		NORWR: PUSH HL	;
697)   057A CD 00 0E    		NXB: CALL RS_RX	;
698)   057D 77          		 LD (HL), A	;
699)   057E 23          		 INC HL	;
700)   057F 0B          		 DEC BC	;
701)   0580 78          		 LD A, B	;
702)   0581 B1          		 OR C	;
703)   0582 20 F6       		 JR NZ, NXB       ;LOOP ALL BYTES	;LOOP ALL BYTES
704)   0584 CD 07 06    		 CALL EPROMOFF	;
709)   0587 3E 05       		 LD A, 5	;
710)   0589 CD D1 2A    		 CALL SCPRN	;
711)   058C CD DE 2A    		 CALL DELAY	;
713)   058F E1          		 POP HL	;
716)   0590 FB          		 EI	;
717)   0591 C9          		 RET	;
728)   0592 CD 00 0E    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
729)   0595 6F          		 LD L, A	;
730)   0596 CD 00 0E    		 CALL RS_RX	;
731)   0599 67          		 LD H, A	;
732)   059A CD 00 0E    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
733)   059D 4F          		 LD C, A	;
734)   059E CD 00 0E    		 CALL RS_RX	;
735)   05A1 47          		 LD B, A	;
737)   05A2 7E          		NXB3: LD A, (HL)	;
738)   05A3 CD E7 0D    		 CALL RS_TX       ;SEND BYTE	;SEND BYTE
739)   05A6 23          		 INC HL	;
740)   05A7 0B          		 DEC BC	;
741)   05A8 78          		 LD A, B	;
742)   05A9 B1          		 OR C	;
743)   05AA 20 F6       		 JR NZ, NXB3       ;LOOP ALL BYTES	;LOOP ALL BYTES
744)   05AC C9          		 RET	;
746)   05AD 00          		RSTST: NOP        ;GET A KEY FROM RS232	;GET A KEY FROM RS232
747)   05AE 06 0A       		 LD B, 10	;
748)   05B0 C5          		TEN: PUSH BC	;
749)   05B1 CD 00 0E    		 CALL RS_RX	;
751)   05B4 CD E7 0D    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
753)   05B7 3E 20       		 LD A, ' '	;
755)   05B9 3E 52       		 LD A, 'R'	;
758)   05BB CD EB 2A    		 CALL DEL2	;
760)   05BE C1          		 POP BC	;
761)   05BF 10 EF       		 DJNZ TEN	;
763)   05C1 AF          		 XOR A	;
764)   05C2 C9          		 RET	;
766)   05C3 00          		RSTST2: NOP        ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
767)   05C4 06 FF       		 LD B, 255	;
768)   05C6 C5          		TEN2: PUSH BC	;
769)   05C7 CD 00 0E    		 CALL RS_RX	;
771)   05CA CD E7 0D    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
773)   05CD C1          		 POP BC	;
774)   05CE 10 F6       		 DJNZ TEN2	;
775)   05D0 AF          		 XOR A	;
776)   05D1 C9          		 RET	;
779)   05D2 00          		XMTST: NOP        ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
780)   05D3 06 FF       		 LD B, 255	;
781)   05D5 C5          		TEN3: PUSH BC	;
782)   05D6 78          		 LD A, B	;
783)   05D7 CD E7 0D    		 CALL RS_TX       ;SEND  THE BYTE	;SEND  THE BYTE
784)   05DA C1          		 POP BC	;
785)   05DB 10 F8       		 DJNZ TEN3	;
786)   05DD AF          		 XOR A	;
787)   05DE C9          		 RET	;
793)   05DF AF          		 XOR A	;
794)   05E0 32 B6 FE    		 LD (FFSTAT), A	;
795)   05E3 C9          		 RET	;
798)   05E4 04          		@FF_OFF: INC B        ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
799)   05E5 AF          		 XOR A	;
800)   05E6 37          		 SCF	;
801)   05E7 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
802)   05E8 10 FD       		 DJNZ SBAGN	;
803)   05EA 2F          		 CPL         ;INVERSE BITS ON A	;INVERSE BITS ON A
804)   05EB 47          		 LD B, A	;
805)   05EC 3A B6 FE    		 LD A, (FFSTAT)	;
806)   05EF A0          		 AND B         ;ZERO THE BIT	;ZERO THE BIT
807)   05F0 32 B6 FE    		 LD (FFSTAT), A	;
808)   05F3 D3 08       		 OUT (DEVFFS), A	;
809)   05F5 C9          		 RET	;
812)   05F6 04          		@FF_ON: INC B         ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
813)   05F7 AF          		 XOR A	;
814)   05F8 37          		 SCF	;
815)   05F9 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
816)   05FA 10 FD       		 DJNZ SBAGN	;
817)   05FC 47          		 LD B, A	;
818)   05FD 3A B6 FE    		 LD A, (FFSTAT)	;
819)   0600 B0          		 OR B         ;SET THE BIT	;SET THE BIT
820)   0601 32 B6 FE    		 LD (FFSTAT), A	;
821)   0604 D3 08       		 OUT (DEVFFS), A	;
822)   0606 C9          		 RET	;
824)   0607 C5          		@EPROMOFF: PUSH BC	;
825)   0608 06 00       		 LD B, 0	;
826)   060A CD E4 05    		 CALL FF_OFF	;
827)   060D C1          		 POP BC	;
828)   060E C9          		 RET	;
830)   060F C5          		@EPROMON: PUSH BC	;
831)   0610 06 00       		 LD B, 0	;
832)   0612 CD F6 05    		 CALL FF_ON	;
833)   0615 C1          		 POP BC	;
834)   0616 C9          		 RET	;
840)   0617 F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
841)   0618 26 00       		 LD H, 0	;
842)   061A 6F          		 LD L, A	;
843)   061B 11 C6 FE    		 LD DE, MYNUM	;
844)   061E CD 05 2B    		 CALL OUTASC	;
846)   0621 3E 0A       		 LD A, 10	;
847)   0623 12          		 LD (DE), A	;
848)   0624 13          		 INC DE	;
849)   0625 3E 0D       		 LD A, 13	;
850)   0627 12          		 LD (DE), A	;
851)   0628 13          		 INC DE	;
852)   0629 AF          		 XOR A	;
853)   062A 12          		 LD (DE), A	;
855)   062B 21 C6 FE    		 LD HL, MYNUM	;
856)   062E CD F6 0D    		 CALL RS_TXT	;
857)   0631 F1          		 POP AF	;
858)   0632 C9          		 RET	;
865)   0633 55 3A 55 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   0637 20 4A 3A 44 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   063B 4E 20 58 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   063F 52 55 4E 20 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   0643 43 3A 43 4C 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   0647 53 20 42 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   064B 42 41 53 49 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   064F 43 20 4B 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   0653 43 4D 44 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   0657 52 4D 54 20 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   065B 4D 3A 4D 45 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
865)   065F 4E 55       		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
866)   0661 00          		 DB 0	;
868)   0662 0A 0D       		STRMN: DB 10,13	;
870)   0664 55 3A 55 50 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0668 4C 4F 41 44 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   066C 20 4A 3A 44 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0670 4F 57 4E 4C 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0674 44 20 53 3A 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0678 31 31 35 4B 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   067C 42 50 53 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0680 58 3A 52 55 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0684 4E 20 43 3A 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0688 43 4C 53 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   068C 42 3A 42 41 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0690 53 49 43 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0694 4B 3A 43 4D 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   0698 44 20 50 52 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   069C 4F 4D 50 54 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   06A0 20 4D 3A 4D 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
870)   06A4 45 4E 55    		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
871)   06A7 0A 0D 00    		 DB 10,13,0	;
874)   06AA 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
874)   06AE 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
874)   06B2 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
874)   06B6 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
875)   06B9 00          		 DB 0	;
877)   06BA 52 53 32 33 		STR1: DEFM "RS232 INIT"	;
877)   06BE 32 20 49 4E 		STR1: DEFM "RS232 INIT"	;
877)   06C2 49 54       		STR1: DEFM "RS232 INIT"	;
878)   06C4 00          		 DB 0	;
880)   06C5 50 52 4F 47 		STR2: DEFM "PROGRAM HALTED"	;
880)   06C9 52 41 4D 20 		STR2: DEFM "PROGRAM HALTED"	;
880)   06CD 48 41 4C 54 		STR2: DEFM "PROGRAM HALTED"	;
880)   06D1 45 44       		STR2: DEFM "PROGRAM HALTED"	;
881)   06D3 00          		 DB 0	;
883)   06D4 57 41 49 54 		STR02: DEFM "WAITING..."	;
883)   06D8 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
883)   06DC 2E 2E       		STR02: DEFM "WAITING..."	;
884)   06DE 00          		 DB 0	;
886)   06DF 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
886)   06E3 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
886)   06E7 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
886)   06EB 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
887)   06ED 00          		 DB 0	;
889)   06EE 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
889)   06F2 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
889)   06F6 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
890)   06FA 00          		 DB 0	;
892)   06FB 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
892)   06FF 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
892)   0703 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
893)   0706 00          		 DB 0	;
895)   0707 49 4D 41 47 		STIMG: DEFM "IMAGE COPY"	;
895)   070B 45 20 43 4F 		STIMG: DEFM "IMAGE COPY"	;
895)   070F 50 59       		STIMG: DEFM "IMAGE COPY"	;
896)   0711 00          		 DB 0	;
898)   0712 53 43 52 45 		TXTMES: DEFM "SCREEN READY"	;
898)   0716 45 4E 20 52 		TXTMES: DEFM "SCREEN READY"	;
898)   071A 45 41 44 59 		TXTMES: DEFM "SCREEN READY"	;
899)   071E 00          		 DB 0	;
901)   071F 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
901)   0723 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
901)   0727 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
901)   072B 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
902)   072F 0A 0D 00    		 DB 10,13,0	;
904)   0732 0A 0D       		STR00: DB 10,13	;
905)   0734 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
905)   0738 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
905)   073C 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
905)   0740 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
905)   0744 44          		 DEFM "RS232 INITIALIZED"	;
906)   0745 0A 0D 00    		 DB 10,13,0	;
908)   0748 0A 0D       		STR01: DB 10,13	;
909)   074A 57 41 49 54 		 DEFM "WAITING..."	;
909)   074E 49 4E 47 2E 		 DEFM "WAITING..."	;
909)   0752 2E 2E       		 DEFM "WAITING..."	;
910)   0754 0A 0D 00    		 DB 10,13,0	;
911)   0757 00          		 DB 0	;
913)   0758 0A 0D       		STR06: DB 10,13	;
914)   075A 4B 45 59 20 		 DEFM "KEY PRESSED"	;
914)   075E 50 52 45 53 		 DEFM "KEY PRESSED"	;
914)   0762 53 45 44    		 DEFM "KEY PRESSED"	;
915)   0765 0A 0D 00    		 DB 10,13,0	;
916)   0768 00          		 DB 0	;
918)   0769 0A 0D       		STR001: DB 10,13	;
919)   076B 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
919)   076F 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
919)   0773 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
919)   0777 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
919)   077B 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
920)   077E 0A 0D 00    		 DB 10,13,0	;
922)   0781 41 54 4C 41 		SVER: DEFM "ATLAS OS VER"	;
922)   0785 53 20 4F 53 		SVER: DEFM "ATLAS OS VER"	;
922)   0789 20 56 45 52 		SVER: DEFM "ATLAS OS VER"	;
923)   078D 30          		 DEFB MJVER	;
924)   078E 2E          		 DEFB '.'	;
925)   078F 35 30       		 DEFB MNVER1,MNVER2	;
926)   0791 00          		 DEFB 0	;
928)   0792 41 54 4C 41 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
928)   0796 53 20 4D 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
928)   079A 64 75 6C 61 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
928)   079E 72 20 5A 38 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
928)   07A2 30 20 43 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
928)   07A6 6D 70 75 74 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
928)   07AA 65 72       		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
929)   07AC 0A 0D       		 DEFB 0AH,0DH	;
930)   07AE 4F 70 65 72 		 DEFM "Operating System Version "  	;
930)   07B2 61 74 69 6E 		 DEFM "Operating System Version "  	;
930)   07B6 67 20 53 79 		 DEFM "Operating System Version "  	;
930)   07BA 73 74 65 6D 		 DEFM "Operating System Version "  	;
930)   07BE 20 56 65 72 		 DEFM "Operating System Version "  	;
930)   07C2 73 69 6F 6E 		 DEFM "Operating System Version "  	;
930)   07C6 20          		 DEFM "Operating System Version "  	;
931)   07C7 30          		 DEFB MJVER	;
932)   07C8 2E          		 DEFB '.'	;
933)   07C9 35 30       		 DEFB MNVER1,MNVER2	;
934)   07CB 0A 0D       		 DEFB 0AH,0DH	;
935)   07CD 43 44 65 73 		 DEFM "CDesp 2020-22"	;
935)   07D1 70 20 32 30 		 DEFM "CDesp 2020-22"	;
935)   07D5 32 30 2D 32 		 DEFM "CDesp 2020-22"	;
935)   07D9 32          		 DEFM "CDesp 2020-22"	;
936)   07DA 0A 0D       		 DEFB 0AH,0DH    	;
937)   07DC 52 41 4D 3A 		 DEFM "RAM: 4000h,TOP: FA00h"	;
937)   07E0 20 34 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
937)   07E4 30 68 2C 54 		 DEFM "RAM: 4000h,TOP: FA00h"	;
937)   07E8 4F 50 3A 20 		 DEFM "RAM: 4000h,TOP: FA00h"	;
937)   07EC 46 41 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
937)   07F0 68          		 DEFM "RAM: 4000h,TOP: FA00h"	;
938)   07F1 0A 0D       		 DEFB 0AH,0DH	;
939)   07F3 00          		 DEFB 00H	;
 11)   07F4 3E 0F       		@OS_COMMAND:   LD A, VGA_WHITE	;
 12)   07F6 32 11 FF    		 LD (VGAFCOL), A	;
 13)   07F9 3E 04       		 LD A, VGA_NAVY	;
 14)   07FB 32 12 FF    		 LD (VGABCOL), A	;
 15)   07FE 21 04 08    		 LD HL,OS_CMDGET	;
 16)   0801 22 43 FF    		 LD (COMDGET),HL	;
 19)   0804 3A 0D FE    		OS_CMDGET:     LD A,(CURSORX)	;
 20)   0807 67          		               LD H,A	;
 21)   0808 3A 0E FE    		               LD A,(CURSORY)	;
 22)   080B 84          		               ADD H	;
 23)   080C FE 00       		               CP 0	;
 24)   080E 28 0C       		               JR Z,CGSKP	;
 25)   0810 3E 0D       		               LD A,CR	;
 26)   0812 CD 62 04    		               CALL OS_PRINTCHAR	;
 27)   0815 AF          		               XOR A	;
 28)   0816 32 0D FE    		 LD (CURSORX), A	;
 29)   0819 32 13 FF    		 LD (VGATX_X), A	;
 30)   081C CD 34 05    		CGSKP:         CALL OS_CLEARLINE	;
 31)   081F 3E 23       		 LD A,'#'        ;PROMPT	;PROMPT
 32)   0821 CD 62 04    		               CALL OS_PRINTCHAR	;
 34)   0824 21 1B FF    		               LD HL,COMDBUF	;
 35)   0827 E5          		CGNXCHAR:      PUSH HL	;
 36)   0828 CD F6 03    		               CALL GET_CHAR	;
 37)   082B E1          		               POP HL	;
 38)   082C FE 00       		               CP 0	;
 39)   082E 28 F7       		               JR Z,CGNXCHAR 	;
 40)   0830 FE 20       		               CP 32	;
 41)   0832 30 21       		               JR NC,CGSVCHAR	;
 43)   0834 FE 06       		               CP 6                    ;BACKSPACE	;BACKSPACE
 44)   0836 20 17       		               JR NZ,CGTSTCH1                	;
 46)   0838 2B          		               DEC HL                	;
 47)   0839 3A 13 FF    		               LD A,(VGATX_X)	;
 48)   083C FE 01       		               CP 1                  ;CHECK START OF LINE  	;CHECK START OF LINE
 49)   083E 20 05       		               JR NZ,CGBS	;
 50)   0840 21 1B FF    		               LD HL,COMDBUF           ;WE AR AT START	;WE AR AT START
 51)   0843 18 E2       		               JR CGNXCHAR	;
 53)   0845 3E 08       		CGBS:          LD A,8	;
 54)   0847 CD 5C 08    		               CALL CGDOPRNCH	;
 55)   084A 3E 00       		               LD A,0	;
 56)   084C 77          		               LD (HL),A	;
 57)   084D 18 D8       		               JR CGNXCHAR	;
 58)   084F FE 0D       		CGTSTCH1:      CP CR                   ;ENTER	;ENTER
 59)   0851 28 12       		               JR Z,CGDOCMD            ;EXECUTE THE COMMAND	;EXECUTE THE COMMAND
 60)   0853 18 D2       		               JR CGNXCHAR             ;NO MORE TESTING NO PRINATBLE CHARS	;NO MORE TESTING NO PRINATBLE CHARS
 61)   0855 CD 5C 08    		CGSVCHAR:      CALL CGDOPRNCH          ;SAVE CHAR TO BUFFER	;SAVE CHAR TO BUFFER
 62)   0858 77          		               LD (HL),A	;
 63)   0859 23          		               INC HL	;
 64)   085A 18 CB       		               JR CGNXCHAR	;
 65)   085C E5          		CGDOPRNCH:     PUSH HL	;
 66)   085D F5          		               PUSH AF	;
 67)   085E 37          		 SCF	;
 68)   085F CD 62 04    		               CALL OS_PRINTCHAR	;
 69)   0862 F1          		               POP AF	;
 70)   0863 E1          		               POP HL	;
 71)   0864 C9          		               RET	;
 72)   0865 E5          		@CGDOCMD:      PUSH HL	;
 73)   0866 F5          		               PUSH AF	;
 74)   0867 CD AD 04    		               CALL OS_RMVCURS         ;REMOVE CURSOR	;REMOVE CURSOR
 75)   086A F1          		               POP AF	;
 76)   086B E1          		               POP HL	;
 77)   086C CD 5C 08    		 CALL CGDOPRNCH	;
 78)   086F AF          		               XOR A	;
 79)   0870 77          		               LD (HL),A	;
 80)   0871 21 1B FF    		               LD HL,COMDBUF	;
 87)   0874 CD D0 08    		 CALL SKIPSP	;
 88)   0877 FE 0D       		 CP CR	;
 89)   0879 C8          		 RET Z	;
 90)   087A FE 7C       		 CP '|'	;
 91)   087C C8          		 RET Z	;
 94)   087D EB          		 EX DE, HL	;
 95)   087E 21 DF 08    		 LD HL, COMDS	;
 96)   0881 1A          		OSCLI0: LD A, (DE)	;
 97)   0882 CD D7 08    		 CALL UPPRC	;
 98)   0885 BE          		 CP (HL)	;
 99)   0886 28 0B       		 JR Z, OSCLI2	;
100)   0888 38 31       		 JR C, HUH	;
101)   088A CB 7E       		OSCLI1: BIT 7, (HL)	;
102)   088C 23          		 INC HL	;
103)   088D 28 FB       		 JR Z, OSCLI1	;
104)   088F 23          		 INC HL	;
105)   0890 23          		 INC HL	;
106)   0891 18 EE       		 JR OSCLI0	;
108)   0893 D5          		OSCLI2: PUSH DE	;
109)   0894 13          		OSCLI3: INC DE	;
110)   0895 23          		 INC HL	;
111)   0896 1A          		 LD A, (DE)	;
112)   0897 CD D7 08    		 CALL UPPRC	;
113)   089A FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
114)   089C 28 0A       		 JR Z, OSCLI4	;
115)   089E AE          		 XOR (HL)	;
116)   089F 28 F3       		 JR Z, OSCLI3	;
117)   08A1 FE 80       		 CP 80H	;
118)   08A3 28 03       		 JR Z, OSCLI4	;
119)   08A5 D1          		 POP DE	;
120)   08A6 18 E2       		 JR OSCLI1	;
122)   08A8 F1          		OSCLI4: POP AF	;
123)   08A9 13          		 INC DE	;
124)   08AA CB 7E       		OSCLI5: BIT 7, (HL)	;
125)   08AC 23          		 INC HL	;
126)   08AD 28 FB       		 JR Z, OSCLI5	;
127)   08AF 7E          		 LD A, (HL)	;
128)   08B0 23          		 INC HL	;
129)   08B1 66          		 LD H, (HL)	;
130)   08B2 6F          		 LD L, A	;
131)   08B3 E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
132)   08B4 EB          		 EX DE, HL	;
133)   08B5 E5          		 PUSH HL	;
134)   08B6 FD E1       		 POP IY	;
135)   08B8 C3 D0 08    		 JP SKIPSP	;
137)   08BB 3E FE       		HUH: LD A, 254        	;
138)   08BD CD 1F 0A    		 CALL OSERROR	;
139)   08C0 4F 53 20 42 		 DEFM 'OS Bad command'	;
139)   08C4 61 64 20 63 		 DEFM 'OS Bad command'	;
139)   08C8 6F 6D 6D 61 		 DEFM 'OS Bad command'	;
139)   08CC 6E 64       		 DEFM 'OS Bad command'	;
140)   08CE 0D 00       		 DEFB    13,0	;
142)   08D0 7E          		SKIPSP: LD A, (HL)	;
143)   08D1 FE 20       		 CP ' '	;
144)   08D3 C0          		 RET NZ	;
145)   08D4 23          		 INC HL	;
146)   08D5 18 F9       		 JR SKIPSP	;
148)   08D7 E6 7F       		UPPRC: AND 7FH	;
149)   08D9 FE 60       		 CP '`'	;
150)   08DB D8          		 RET C	;
151)   08DC E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
152)   08DE C9          		 RET	;
156)   08DF 42 59       		COMDS: DEFM  "BY"	;
157)   08E1 C5          		 DEFB    'E'+80H	;
158)   08E2 40 0A       		 DEFW BYE	;
159)   08E4 43          		 DEFM  "C"	;
160)   08E5 C4          		 DEFB    'D'+80H	;
161)   08E6 01 0B       		 DEFW DRV_CD	;
162)   08E8 43 4C       		               DEFM "CL"	;
163)   08EA D3          		               DEFB 'S'+80H	;
164)   08EB 43 0A       		               DEFW DOCLS	;
165)   08ED 43 55 52 53 		               DEFM "CURSO"	;
165)   08F1 4F          		               DEFM "CURSO"	;
166)   08F2 D2          		               DEFB 'R'+80H	;
167)   08F3 CE 0C       		               DEFW SETCURSOR	;
168)   08F5 44 49       		 DEFM "DI"	;
169)   08F7 D2          		 DEFB 'R'+80H	;
170)   08F8 EB 0A       		 DEFW DRV_DIR	;
171)   08FA 45 58 45    		               DEFM "EXE"	;
172)   08FD C3          		               DEFB 'C'+80H	;
173)   08FE 82 0A       		               DEFW DOEXEC	;
174)   0900 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
174)   0904 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
174)   0908 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
175)   090B C6          		 DEFB 'F'+80H	;
176)   090C DA 0B       		 DEFW LCD_BLINKOF	;
177)   090E 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
177)   0912 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
177)   0916 4B 4F       		 DEFM  "LCD_BLINKO"	;
178)   0918 CE          		 DEFB 'N'+80H	;
179)   0919 E0 0B       		 DEFW LCD_BLINKON	;
180)   091B 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
180)   091F 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
181)   0923 D2          		 DEFB 'R'+80H	;
182)   0924 E6 0B       		 DEFW LCD_CLR	;
183)   0926 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
183)   092A 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
183)   092E 4F 52 41    		 DEFM  "LCD_CURSORA"	;
184)   0931 D4          		 DEFB 'T'+80H	;
185)   0932 EC 0B       		 DEFW LCD_CURSAT	;
186)   0934 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
186)   0938 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
186)   093C 4F 46       		 DEFM  "LCD_CURSOF"	;
187)   093E C6          		 DEFB 'F'+80H	;
188)   093F 09 0C       		 DEFW LCD_CURSOF	;
189)   0941 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
189)   0945 43 55 52 53 		 DEFM  "LCD_CURSO"	;
189)   0949 4F          		 DEFM  "LCD_CURSO"	;
190)   094A CE          		 DEFB 'N'+80H	;
191)   094B 0F 0C       		 DEFW LCD_CURSON	;
192)   094D 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
192)   0951 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
192)   0955 4F 46       		 DEFM  "LCD_DISPOF"	;
193)   0957 C6          		 DEFB 'F'+80H	;
194)   0958 15 0C       		 DEFW LCD_DISPOF	;
195)   095A 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
195)   095E 44 49 53 50 		 DEFM  "LCD_DISPO"	;
195)   0962 4F          		 DEFM  "LCD_DISPO"	;
196)   0963 CE          		 DEFB 'N'+80H	;
197)   0964 1B 0C       		 DEFW LCD_DISPON	;
198)   0966 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
198)   096A 48 4F 4D    		 DEFM  "LCD_HOM"	;
199)   096D C5          		 DEFB 'E'+80H	;
200)   096E FA 16       		 DEFW LCD16_HOME	;
201)   0970 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
201)   0974 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
201)   0978 45 46       		 DEFM  "LCD_MOVLEF"	;
202)   097A D4          		 DEFB 'T'+80H	;
203)   097B 27 0C       		 DEFW LCD_MOVLFT	;
204)   097D 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
204)   0981 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
204)   0985 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
205)   0988 D4          		 DEFB 'T'+80H	;
206)   0989 2D 0C       		 DEFW LCD_MOVRGT	;
207)   098B 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
207)   098F 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
208)   0993 D4          		 DEFB 'T'+80H	;
209)   0994 33 0C       		 DEFW LCD_PRN	;
210)   0996 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
210)   099A 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
210)   099E 45 46       		 DEFM  "LCD_SCRLEF"	;
211)   09A0 D4          		 DEFB 'T'+80H	;
212)   09A1 3C 0C       		 DEFW LCD_SCRLFT	;
213)   09A3 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
213)   09A7 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
213)   09AB 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
214)   09AE D4          		 DEFB 'T'+80H	;
215)   09AF 42 0C       		 DEFW LCD_SCRRGT	;
216)   09B1 4C 43 44 54 		 DEFM  "LCDTIM"	;
216)   09B5 49 4D       		 DEFM  "LCDTIM"	;
217)   09B7 C5          		 DEFB 'E'+80H	;
218)   09B8 EC 0C       		 DEFW LCDSHOWTIME	;
219)   09BA 50 57       		 DEFM  "PW"	;
220)   09BC C4          		 DEFB    'D'+80H	;
221)   09BD 3D 0A       		 DEFW NIMP	;
222)   09BF 52 45 53 45 		 DEFM  "RESE"	;
223)   09C3 D4          		 DEFB    'T'+80H	;
224)   09C4 49 0A       		 DEFW DORESET	;
225)   09C6 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
225)   09CA 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
225)   09CE 53          		 DEFM  "RTC_ADJUS"	;
226)   09CF D4          		 DEFB    'T'+80H                	;
227)   09D0 2F 0B       		 DEFW RTC_ADJUST	;
228)   09D2 52 54 43 5F 		 DEFM  "RTC_GE"	;
228)   09D6 47 45       		 DEFM  "RTC_GE"	;
229)   09D8 D4          		 DEFB    'T'+80H	;
230)   09D9 5D 0B       		 DEFW RTC_GET	;
231)   09DB 53 45 54 44 		 DEFM "SETDATETIM"	;
231)   09DF 41 54 45 54 		 DEFM "SETDATETIM"	;
231)   09E3 49 4D       		 DEFM "SETDATETIM"	;
232)   09E5 C5          		 DEFB    'E'+80H	;
233)   09E6 C9 0B       		 DEFW DSSETDATETIME	;
234)   09E8 53 45 54 44 		 DEFM "SETDAT"	;
234)   09EC 41 54       		 DEFM "SETDAT"	;
235)   09EE C5          		 DEFB    'E'+80H	;
236)   09EF 71 0B       		 DEFW DSSETDATE	;
237)   09F1 53 45 54 4C 		 DEFM "SETLC"	;
237)   09F5 43          		 DEFM "SETLC"	;
238)   09F6 C4          		 DEFB    'D'+80H	;
239)   09F7 6D 0C       		 DEFW SETLCD	;
240)   09F9 53 45 54 54 		 DEFM "SETTIM"	;
240)   09FD 49 4D       		 DEFM "SETTIM"	;
241)   09FF C5          		 DEFB    'E'+80H	;
242)   0A00 9D 0B       		 DEFW DSSETTIME	;
243)   0A02 53 45 54 56 		 DEFM "SETVG"	;
243)   0A06 47          		 DEFM "SETVG"	;
244)   0A07 C1          		 DEFB    'A'+80H	;
245)   0A08 48 0C       		 DEFW SETVGA	;
246)   0A0A 54 59 50    		 DEFM  "TYP"	;
247)   0A0D C5          		 DEFB    'E'+80H	;
248)   0A0E 0C 0B       		 DEFW DRV_TYPFILE	;
249)   0A10 56 47 41 4D 		 DEFM  "VGAMOD"	;
249)   0A14 4F 44       		 DEFM  "VGAMOD"	;
250)   0A16 C5          		 DEFB    'E'+80H	;
251)   0A17 92 0C       		 DEFW SETVGAMODE	;
254)   0A19 FF          		 DEFB 0FFH	;
262)   0A1A 2A 43 FF    		OSCMDFIN:      LD HL,(COMDGET)	;
263)   0A1D E5          		 PUSH HL	;
264)   0A1E C9          		 RET  ;GOTO COMDGET	;GOTO COMDGET
266)   0A1F E1          		OSERROR:       POP HL	;
267)   0A20 CD 48 05    		               CALL OS_PRINTTEXT	;
268)   0A23 C3 1A 0A    		               JP OSCMDFIN	;
270)   0A26 CD 1F 0A    		SNTX_ERROR: CALL OSERROR	;
271)   0A29 4F 53 20 43 		 DEFM  "OS CMD Syntax error"	;
271)   0A2D 4D 44 20 53 		 DEFM  "OS CMD Syntax error"	;
271)   0A31 79 6E 74 61 		 DEFM  "OS CMD Syntax error"	;
271)   0A35 78 20 65 72 		 DEFM  "OS CMD Syntax error"	;
271)   0A39 72 6F 72    		 DEFM  "OS CMD Syntax error"	;
272)   0A3C 00          		 DEFB    0	;
274)   0A3D C3 1A 0A    		NIMP           JP OSCMDFIN	;
276)   0A40 C3 AC 02    		BYE: JP MENU	;
278)   0A43 CD 2D 05    		DOCLS:         CALL OS_CLRSCR	;
279)   0A46 C3 1A 0A    		               JP OSCMDFIN	;
282)   0A49 C3 00 00    		DORESET: JP 0	;
285)   0A4C CD 1F 0A    		HEXERROR:      CALL OSERROR	;
286)   0A4F 4E 4F 54 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A53 41 20 56 41 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A57 4C 49 44 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A5B 48 45 58 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A5F 41 44 44 52 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A63 45 53 53    		               DEFM "NOT A VALID HEX ADDRESS"	;
287)   0A66 00          		               DEFB 0	;
291)   0A67 7E          		PRSADDR:       LD A,(HL)	;
292)   0A68 FE 00       		               CP 0	;
293)   0A6A 28 14       		               JR Z,PSADEX	;
294)   0A6C FE 2E       		               CP '.'	;
295)   0A6E 28 03       		               JR Z,PSADGTIT	;
296)   0A70 23          		               INC HL	;
297)   0A71 18 F4       		               JR PRSADDR	;
300)   0A73 23          		PSADGTIT:      INC HL	;
301)   0A74 CD 6E 2C    		               CALL IsStrHex   ;CHECK IF VALID HEX	;CHECK IF VALID HEX
302)   0A77 20 D3       		               JR NZ,HEXERROR	;
304)   0A79 CD BE 2C    		               CALL Read16bit	;
305)   0A7C 60          		               LD H,B	;
306)   0A7D 69          		               LD L,C	;
307)   0A7E AF          		               XOR A           ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
308)   0A7F C9          		               RET	;
309)   0A80 37          		PSADEX:        SCF             ;SET CARRY FLAG ON ERROR	;SET CARRY FLAG ON ERROR
310)   0A81 C9          		               RET                	;
314)   0A82 CD F3 0A    		DOEXEC:        CALL DRV_GETFNPRM	;
315)   0A85 2B          		               DEC HL	;
316)   0A86 2B          		               DEC HL	;
317)   0A87 2B          		               DEC HL	;
318)   0A88 2B          		               DEC HL	;
319)   0A89 2B          		               DEC HL	;
320)   0A8A CD 67 0A    		               CALL PRSADDR	;
321)   0A8D DA 1A 0A    		               JP C,OSCMDFIN           ;ERROR ON PARSING HEX ADDRESS	;ERROR ON PARSING HEX ADDRESS
322)   0A90 E5          		               PUSH HL                 ;SAVE HEX ADDR	;SAVE HEX ADDR
323)   0A91 CD D2 11    		 CALL STRG_OPNFILE	;
324)   0A94 E1          		               POP HL	;
325)   0A95 38 43       		 JR C, DRV_ERROR         ;ERROR ON FILE OPENING	;ERROR ON FILE OPENING
326)   0A97 E5          		               PUSH HL                 ;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN	;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN
327)   0A98 54          		               LD D,H	;
328)   0A99 5D          		               LD E,L	;
329)   0A9A 01 00 00    		               LD BC,0                 ;LOAD ALL BYTES	;LOAD ALL BYTES
330)   0A9D CD 26 12    		               CALL STRG_BLKREAD	;
331)   0AA0 3A FF FE    		 LD A, (FID)	;
332)   0AA3 CD F1 11    		 CALL STRG_CLSFILE       ;CLOSE FILE	;CLOSE FILE
333)   0AA6 C9          		               RET                     ;EXECUTE CODE AT HEX ADDR	;EXECUTE CODE AT HEX ADDR
340)   0AA7 FD E5       		PARSCMD:       PUSH IY	;
341)   0AA9 E1          		               POP HL	;
342)   0AAA CD D0 08    		               CALL SKIPSP	;
343)   0AAD E5          		               PUSH HL	;
344)   0AAE 1E 00       		               LD E,0	;
345)   0AB0 7E          		PCNXT:         LD A,(HL)	;
346)   0AB1 FE 20       		               CP ' '	;
347)   0AB3 28 18       		               JR Z,PCEXT	;
348)   0AB5 FE 2C       		               CP ','	;
349)   0AB7 28 14       		               JR Z,PCEXT	;
350)   0AB9 FE 2F       		               CP '/'	;
351)   0ABB 28 10       		               JR Z,PCEXT	;
352)   0ABD FE 3A       		               CP ':'	;
353)   0ABF 28 0C       		               JR Z,PCEXT	;
354)   0AC1 FE 0D       		               CP 13	;
355)   0AC3 28 08       		               JR Z,PCEXT	;
356)   0AC5 FE 00       		               CP 0	;
357)   0AC7 28 04       		               JR Z,PCEXT	;
358)   0AC9 23          		               INC HL	;
359)   0ACA 1C          		               INC E	;
360)   0ACB 18 E3       		               JR PCNXT	;
361)   0ACD E5          		PCEXT:         PUSH HL	;
362)   0ACE FD E1       		               POP IY          ;IY AT THE END OF PARAM	;IY AT THE END OF PARAM
363)   0AD0 E1          		               POP HL          ;HL AT THE START OF PARAM	;HL AT THE START OF PARAM
364)   0AD1 C9          		               RET                	;
367)   0AD2 CD A7 0A    		PARSCMDI:      CALL PARSCMD	;
369)   0AD5 CD 8E 2C    		               CALL STRTOB     ;CONVERT TO BYTE ON A	;CONVERT TO BYTE ON A
370)   0AD8 6F          		               LD L,A	;
371)   0AD9 C9          		               RET	;
375)   0ADA CD 1F 0A    		DRV_ERROR: CALL OSERROR	;
376)   0ADD 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
376)   0AE1 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
376)   0AE5 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
376)   0AE9 52          		 DEFM  "STORAGE ERROR"	;
377)   0AEA 00          		 DEFB    0	;
382)   0AEB CD 8E 11    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
383)   0AEE D2 1A 0A    		 JP NC, OSCMDFIN	;
384)   0AF1 18 E7       		 JR DRV_ERROR	;
386)   0AF3 CD A7 0A    		DRV_GETFNPRM: CALL PARSCMD       	;
387)   0AF6 06 00       		 LD B, 0	;
388)   0AF8 4B          		 LD C, E	;
389)   0AF9 11 D3 FE    		 LD DE, STRGBUFF	;
390)   0AFC ED B0       		 LDIR	;
391)   0AFE AF          		 XOR A	;
392)   0AFF 12          		 LD (DE), A	;
393)   0B00 C9          		 RET	;
396)   0B01 CD F3 0A    		DRV_CD: CALL DRV_GETFNPRM	;
397)   0B04 CD BA 11    		 CALL STRG_DIRCHG	;
398)   0B07 D2 1A 0A    		 JP NC, OSCMDFIN	;
399)   0B0A 18 CE       		 JR DRV_ERROR	;
402)   0B0C CD F3 0A    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
403)   0B0F CD D2 11    		 CALL STRG_OPNFILE	;
404)   0B12 38 C6       		 JR C, DRV_ERROR	;
405)   0B14 CD 5B 12    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
406)   0B17 3A FF FE    		 LD A, (FID)	;
407)   0B1A CD F1 11    		 CALL STRG_CLSFILE	;
408)   0B1D C3 1A 0A    		 JP OSCMDFIN	;
415)   0B20 CD D2 0A    		RTC_GETPARBCD: CALL PARSCMDI	;
416)   0B23 CD 1F 2B    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
417)   0B26 FD 7E 00    		 LD A, (IY)	;
418)   0B29 FE 2C       		 CP ','	;
419)   0B2B FD 23       		 INC IY	;
420)   0B2D 7D          		 LD A, L	;
421)   0B2E C9          		 RET	;
426)   0B2F 0E 00       		RTC_ADJUST: LD C, 0	;
427)   0B31 11 8A FE    		 LD DE, BUFFER	;
428)   0B34 AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
429)   0B35 32 8A FE    		 LD (BUFFER), A	;
430)   0B38 13          		 INC DE	;
431)   0B39 C5          		RTCADJ_NXT: PUSH BC	;
432)   0B3A D5          		 PUSH DE	;
433)   0B3B CD 20 0B    		 CALL RTC_GETPARBCD	;
434)   0B3E D1          		 POP DE	;
435)   0B3F C1          		 POP BC	;
436)   0B40 28 0B       		 JR Z, RTCADJ_PAROK	;
438)   0B42 FD 2B       		 DEC IY	;
439)   0B44 47          		 LD B, A        ;SAVE A	;SAVE A
440)   0B45 79          		 LD A, C	;
441)   0B46 FE 06       		 CP 6	;
442)   0B48 28 08       		 JR Z, RTCADJ_EXEC	;
444)   0B4A C3 26 0A    		 JP SNTX_ERROR	;
445)   0B4D 0C          		RTCADJ_PAROK: INC C	;
446)   0B4E 12          		 LD (DE), A	;
447)   0B4F 13          		 INC DE	;
448)   0B50 18 E7       		 JR RTCADJ_NXT	;
449)   0B52 78          		RTCADJ_EXEC: LD A, B	;
450)   0B53 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
451)   0B54 13          		 INC DE	;
452)   0B55 AF          		 XOR A	;
453)   0B56 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
454)   0B57 CD 63 15    		 CALL DS1307_ADJUST	;
455)   0B5A C3 1A 0A    		 JP OSCMDFIN	;
458)   0B5D CD AC 15    		RTC_GET: CALL DS1307_GETTIME 	;
463)   0B60 21 A0 FE    		 LD HL,TIMMSG	;
464)   0B63 11 14 00    		 LD DE,20	;
465)   0B66 AF          		 XOR A	;
466)   0B67 19          		 ADD HL,DE	;
467)   0B68 77          		 LD (HL),A	;
468)   0B69 ED 52       		 SBC HL,DE	;
469)   0B6B CD 48 05    		 CALL OS_PRINTTEXT	;
473)   0B6E C3 1A 0A    		 JP OSCMDFIN	;
479)   0B71 CD AC 15    		DSSETDATE: CALL DS1307_GETTIME      ;TIMMSG HAS THE DATE AND TIME	;TIMMSG HAS THE DATE AND TIME
482)   0B74 21 B0 FE    		 LD HL,TIMMSG+16	;
483)   0B77 11 B2 FE    		 LD DE,TIMMSG+18	;
484)   0B7A 01 08 00    		 LD BC,8	;
485)   0B7D ED B8       		 LDDR	;
486)   0B7F 21 A9 FE    		 LD HL,TIMMSG+9	;
487)   0B82 36 30       		 LD (HL),'0'	;
488)   0B84 23          		 INC HL	;
489)   0B85 36 20       		 LD (HL),' '	;
490)   0B87 FD E5       		 PUSH IY	;
491)   0B89 E1          		 POP HL     ;HL POINTS TO COMDBUFFER	;HL POINTS TO COMDBUFFER
492)   0B8A 23          		 INC HL     ;SKIP SPACE	;SKIP SPACE
493)   0B8B 11 A0 FE    		 LD DE,TIMMSG	;
494)   0B8E 01 08 00    		 LD BC,8        ;DD/MM/YY	;DD/MM/YY
495)   0B91 ED B0       		 LDIR	;
496)   0B93 FD 21 A0 FE 		 LD IY,TIMMSG	;
497)   0B97 CD E4 14    		 CALL DS1307_SETTIME	;
498)   0B9A C3 1A 0A    		 JP OSCMDFIN	;
500)   0B9D CD AC 15    		DSSETTIME: CALL DS1307_GETTIME      ;TIMMSG HAS THE DATE AND TIME	;TIMMSG HAS THE DATE AND TIME
503)   0BA0 21 B0 FE    		 LD HL,TIMMSG+16	;
504)   0BA3 11 B2 FE    		 LD DE,TIMMSG+18	;
505)   0BA6 01 08 00    		 LD BC,8	;
506)   0BA9 ED B8       		 LDDR	;
507)   0BAB 21 A9 FE    		 LD HL,TIMMSG+9	;
508)   0BAE 36 30       		 LD (HL),'0'	;
509)   0BB0 23          		 INC HL	;
510)   0BB1 36 20       		 LD (HL),' '	;
512)   0BB3 FD E5       		 PUSH IY	;
513)   0BB5 E1          		 POP HL	;
514)   0BB6 23          		 INC HL        ;SKIP SPACE	;SKIP SPACE
515)   0BB7 11 AB FE    		 LD DE,TIMMSG + 11      ;SKIP DATE PART 	;SKIP DATE PART
516)   0BBA 01 08 00    		 LD BC,8        ;HH:MN:SS	;HH:MN:SS
517)   0BBD ED B0       		 LDIR	;
518)   0BBF FD 21 A0 FE 		 LD IY,TIMMSG	;
519)   0BC3 CD E4 14    		 CALL DS1307_SETTIME	;
520)   0BC6 C3 1A 0A    		 JP OSCMDFIN	;
523)   0BC9 FD E5       		DSSETDATETIME: PUSH IY	;
524)   0BCB E1          		 POP HL	;
525)   0BCC 11 A0 FE    		 LD DE,TIMMSG	;
526)   0BCF 01 13 00    		 LD BC,19	;
527)   0BD2 ED B0       		 LDIR	;
528)   0BD4 CD E4 14    		 CALL DS1307_SETTIME	;
529)   0BD7 C3 1A 0A    		 JP OSCMDFIN  	;
533)   0BDA CD 32 17    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
534)   0BDD C3 1A 0A    		 JP OSCMDFIN	;
536)   0BE0 CD 40 17    		LCD_BLINKON: CALL LCD16_BLINKON	;
537)   0BE3 C3 1A 0A    		 JP OSCMDFIN	;
539)   0BE6 CD E3 16    		LCD_CLR: CALL LCD16_CLR	;
540)   0BE9 C3 1A 0A    		 JP OSCMDFIN	;
542)   0BEC CD D2 0A    		LCD_CURSAT: CALL PARSCMDI     ;TAKE PARAMS D COL E ROW  	;TAKE PARAMS D COL E ROW
543)   0BEF 55          		 LD D, L	;
544)   0BF0 D5          		 PUSH DE                                                 ;SAVE PARAM D	;SAVE PARAM D
545)   0BF1 FD 7E 00    		 LD A, (IY)	;
546)   0BF4 FE 2C       		 CP ', '	;
547)   0BF6 28 04       		 JR Z, LCDCA_OK	;
548)   0BF8 D1          		 POP DE	;
549)   0BF9 C3 26 0A    		 JP SNTX_ERROR	;
550)   0BFC FD 23       		LCDCA_OK: INC IY	;
551)   0BFE CD D2 0A    		 CALL PARSCMDI	;
552)   0C01 D1          		               POP DE                                                  ;RESTORE PARAM D	;RESTORE PARAM D
553)   0C02 5D          		 LD E, L	;
554)   0C03 CD 07 17    		 CALL LCD16_SETCURS	;
555)   0C06 C3 1A 0A    		 JP OSCMDFIN	;
557)   0C09 CD 16 17    		LCD_CURSOF: CALL LCD16_CURSOFF	;
558)   0C0C C3 1A 0A    		 JP OSCMDFIN	;
560)   0C0F CD 24 17    		LCD_CURSON: CALL LCD16_CURSON	;
561)   0C12 C3 1A 0A    		 JP OSCMDFIN	;
563)   0C15 CD BA 16    		LCD_DISPOF: CALL LCD16_NODISP	;
564)   0C18 C3 1A 0A    		 JP OSCMDFIN	;
566)   0C1B CD C8 16    		LCD_DISPON: CALL LCD16_DISP	;
567)   0C1E C3 1A 0A    		 JP OSCMDFIN	;
569)   0C21 CD FA 16    		LCD_HOME: CALL LCD16_HOME	;
570)   0C24 C3 1A 0A    		 JP OSCMDFIN	;
572)   0C27 CD 5A 17    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
573)   0C2A C3 1A 0A    		 JP OSCMDFIN	;
575)   0C2D CD 60 17    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
576)   0C30 C3 1A 0A    		 JP OSCMDFIN	;
578)   0C33 CD A7 0A    		LCD_PRN: CALL PARSCMD	;
579)   0C36 CD EC 16    		               CALL LCD16_PRINT	;
580)   0C39 C3 1A 0A    		               JP OSCMDFIN	;
583)   0C3C CD 4E 17    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
584)   0C3F C3 1A 0A    		 JP OSCMDFIN	;
586)   0C42 CD 54 17    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
587)   0C45 C3 1A 0A    		 JP OSCMDFIN	;
592)   0C48 CD A7 0A    		SETVGA: CALL PARSCMD  ;GET PARAM	;GET PARAM
593)   0C4B CD A2 0C    		 CALL CHKKEYWD	;
594)   0C4E 4F 4E       		 DEFM "ON"	;
595)   0C50 00          		 DB 0	;
596)   0C51 28 12       		 JR Z,SVON	;
597)   0C53 CD A2 0C    		 CALL CHKKEYWD	;
598)   0C56 4F 46 46    		 DEFM "OFF"	;
599)   0C59 00          		 DB 0	;
600)   0C5A C2 26 0A    		 JP NZ, SNTX_ERROR	;
602)   0C5D 21 BB FE    		 LD HL,SCRNST	;
603)   0C60 CB 8E       		 RES 1,(HL)	;
604)   0C62 C3 1A 0A    		 JP OSCMDFIN	;
605)   0C65 21 BB FE    		SVON: LD HL,SCRNST	;
606)   0C68 CB CE       		 SET 1,(HL)	;
607)   0C6A C3 1A 0A    		 JP OSCMDFIN	;
610)   0C6D CD A7 0A    		SETLCD: CALL PARSCMD  ;GET PARAM	;GET PARAM
611)   0C70 CD A2 0C    		 CALL CHKKEYWD	;
612)   0C73 4F 4E       		 DEFM "ON"	;
613)   0C75 00          		 DB 0	;
614)   0C76 28 12       		 JR Z,SLON	;
615)   0C78 CD A2 0C    		 CALL CHKKEYWD	;
616)   0C7B 4F 46 46    		 DEFM "OFF"	;
617)   0C7E 00          		 DB 0	;
618)   0C7F C2 26 0A    		 JP NZ, SNTX_ERROR	;
621)   0C82 21 BB FE    		 LD HL,SCRNST	;
622)   0C85 CB 86       		 RES 0,(HL)	;
623)   0C87 C3 1A 0A    		 JP OSCMDFIN	;
624)   0C8A 21 BB FE    		SLON: LD HL,SCRNST	;
625)   0C8D CB C6       		 SET 0,(HL)	;
626)   0C8F C3 1A 0A    		 JP OSCMDFIN	;
631)   0C92 CD D2 0A    		SETVGAMODE: CALL PARSCMDI	;
632)   0C95 E6 03       		 AND 3        ;KEEP ONLY BITS 0-1	;KEEP ONLY BITS 0-1
633)   0C97 6F          		 LD L, A  	;
634)   0C98 CD 48 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
635)   0C9B 4D          		 LD C, L        ;VIDEO MODE SCREEN	;VIDEO MODE SCREEN
636)   0C9C CD 16 18    		 CALL VGA_SETCONF	;
637)   0C9F C3 1A 0A    		 JP OSCMDFIN	;
646)   0CA2 D1          		CHKKEYWD: POP DE ;GET THE START OF THE KEYWD	;GET THE START OF THE KEYWD
647)   0CA3 E5          		 PUSH HL	;
648)   0CA4 1A          		CHKNXTL: LD A,(DE) ;	;
649)   0CA5 FE 00       		 CP 0	;
650)   0CA7 28 13       		 JR Z, CHKEND	;
651)   0CA9 47          		 LD B,A	;
652)   0CAA 7E          		 LD A,(HL)	;
653)   0CAB FE 00       		 CP 0	;
654)   0CAD 28 0D       		 JR Z, CHKEND	;
655)   0CAF B8          		 CP B	;
656)   0CB0 20 04       		 JR NZ, CHKNOTEQ	;
657)   0CB2 13          		 INC DE	;
658)   0CB3 23          		 INC HL	;
659)   0CB4 18 EE       		 JR CHKNXTL	;
661)   0CB6 3E 01       		CHKNOTEQ: LD A,1	;
662)   0CB8 FE 00       		 CP 0  ;NOT ZERO	;NOT ZERO
663)   0CBA 18 01       		 JR CHKEXIT	;
665)   0CBC AF          		CHKEND: XOR A  ;ZERO FLAG SET	;ZERO FLAG SET
667)   0CBD CD C3 0C    		CHKEXIT: CALL FNDKWDEND	;
668)   0CC0 E1          		 POP HL  	;
669)   0CC1 D5          		 PUSH DE   ;DE THE RETURN ADDRESS AFTER THE KWD	;DE THE RETURN ADDRESS AFTER THE KWD
670)   0CC2 C9          		 RET	;
675)   0CC3 F5          		FNDKWDEND: PUSH AF  ;SAVE FLAGS	;SAVE FLAGS
676)   0CC4 1B          		 DEC DE	;
677)   0CC5 13          		CHKEXNXT: INC DE  ;FIND THE KEYWORD END	;FIND THE KEYWORD END
678)   0CC6 1A          		 LD A,(DE)	;
679)   0CC7 FE 00       		 CP 0	;
680)   0CC9 20 FA       		 JR NZ, CHKEXNXT	;
681)   0CCB 13          		 INC DE   ;THIS IS THE RETURN ADDRESS AFTER THE KEYWD 	;THIS IS THE RETURN ADDRESS AFTER THE KEYWD
682)   0CCC F1          		 POP AF   ;RESTORE FLAGS	;RESTORE FLAGS
683)   0CCD C9          		 RET	;
688)   0CCE CD A7 0A    		SETCURSOR: CALL PARSCMD	;
689)   0CD1 CD A2 0C    		 CALL CHKKEYWD	;
690)   0CD4 4F 4E       		 DEFM "ON"	;
691)   0CD6 00          		 DB 0	;
692)   0CD7 3E 00       		 LD A,0	;
693)   0CD9 28 0B       		 JR Z, SCURSON	;
694)   0CDB CD A2 0C    		 CALL CHKKEYWD	;
695)   0CDE 4F 46 46    		 DEFM "OFF"	;
696)   0CE1 00          		 DB 0	;
697)   0CE2 C2 26 0A    		 JP NZ, SNTX_ERROR	;
698)   0CE5 3C          		SCURSOFF: INC A 	;
700)   0CE6 CD 06 05    		SCURSON: CALL OSSETCURSOR	;
701)   0CE9 C3 1A 0A    		 JP OSCMDFIN	;
705)   0CEC CD A7 0A    		LCDSHOWTIME:   CALL PARSCMD	;
706)   0CEF CD A2 0C    		 CALL CHKKEYWD	;
707)   0CF2 4F 4E       		 DEFM "ON"	;
708)   0CF4 00          		 DB 0	;
709)   0CF5 3E 00       		 LD A,0	;
710)   0CF7 28 0B       		 JR Z, STIMSON	;
711)   0CF9 CD A2 0C    		 CALL CHKKEYWD	;
712)   0CFC 4F 46 46    		 DEFM "OFF"	;
713)   0CFF 00          		 DB 0	;
714)   0D00 C2 26 0A    		 JP NZ, SNTX_ERROR	;
715)   0D03 3C          		STIMSOFF: INC A 	;
717)   0D04 CD F5 04    		STIMSON: CALL OSSETTIME	;
718)   0D07 C3 1A 0A    		 JP OSCMDFIN	;
 14)   0D0A E5          		@INTSER: PUSH HL	;
 15)   0D0B F5          		 PUSH AF	;
 16)   0D0C C5          		 PUSH BC	;
 17)   0D0D DD E5       		 PUSH IX	;
 21)   0D0F DB 68       		 IN A, (DEVINT)       ;WAS DEVINP BEFORE V 0.43	;WAS DEVINP BEFORE V 0.43
 22)   0D11 2F          		 CPL	;
 23)   0D12 E6 07       		 AND 0X07       ;BITS 0-2  	;BITS 0-2
 27)   0D14 DD 21 62 FF 		 LD IX, INTTAB	;
 28)   0D18 06 00       		 LD B, 0	;
 29)   0D1A 4F          		 LD C, A	;
 30)   0D1B CB 21       		 SLA C        ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 31)   0D1D DD 09       		 ADD IX, BC	;
 32)   0D1F DD 6E 00    		 LD L, (IX)	;
 33)   0D22 DD 66 01    		 LD H, (IX + 1)	;
 34)   0D25 01 2A 0D    		 LD BC, IS_EX	;
 35)   0D28 C5          		 PUSH BC        ;RETURN ADDRESS	;RETURN ADDRESS
 36)   0D29 E9          		 JP (HL)        ;JP TO HL	;JP TO HL
 38)   0D2A DD E1       		IS_EX: POP IX	;
 39)   0D2C C1          		 POP BC	;
 40)   0D2D F1          		 POP AF	;
 41)   0D2E E1          		 POP HL	;
 42)   0D2F FB          		 EI	;
 43)   0D30 C9          		 RET        ;SAME AS RETI FOR IM1	;SAME AS RETI FOR IM1
 48)   0D31 F3          		@COPYINTTAB: DI	;
 49)   0D32 21 47 0D    		 LD HL,MYINTADDR	;
 50)   0D35 11 62 FF    		 LD DE,INTTAB	;
 51)   0D38 01 10 00    		 LD BC,16	;
 52)   0D3B ED B0       		 LDIR	;
 53)   0D3D 0E 68       		 LD C,DEVINT	;
 54)   0D3F 06 08       		 LD B,8	;
 55)   0D41 ED 41       		CIT_NXT: OUT (C), B	;
 56)   0D43 10 FC       		 DJNZ CIT_NXT 	;
 57)   0D45 FB          		 EI 	;
 58)   0D46 C9          		 RET 	;
 60)   0D47 8E 0D       		MYINTADDR: DEFW INT_TIMER	;
 61)   0D49 5F 0D       		 DEFW SAVETE	;
 62)   0D4B 57 0D       		 DEFW INT_KEYB	;
 63)   0D4D 67 0D       		 DEFW DOCLRINT	;
 64)   0D4F 67 0D       		 DEFW DOCLRINT	;
 65)   0D51 67 0D       		 DEFW DOCLRINT	;
 66)   0D53 67 0D       		 DEFW DOCLRINT	;
 67)   0D55 67 0D       		 DEFW DOCLRINT	;
 69)   0D57 4F          		INT_KEYB: LD C,A	;
 70)   0D58 CD 5E 0E    		 CALL PS2SETKEYAV      ;SET NEW KEY AVAILABLE FROM PS/2	;SET NEW KEY AVAILABLE FROM PS/2
 71)   0D5B 79          		 LD A,C	;
 72)   0D5C D3 68       		 OUT (DEVINT), A       ;CLEAR THE INTERRUPT    	;CLEAR THE INTERRUPT
 73)   0D5E C9          		 RET	;
 76)   0D5F D3 68       		SAVETE: OUT (DEVINT), A       ;CLEAR THE INTERRUPT	;CLEAR THE INTERRUPT
 77)   0D61 3E 01       		 LD A, 1	;
 78)   0D63 32 C5 FE    		 LD (INT2TE),A        ;TEARING EFFECT	;TEARING EFFECT
 79)   0D66 C9          		 RET	;
 82)   0D67 D3 68       		DOCLRINT: OUT (DEVINT), A	;
 83)   0D69 C9          		 RET	;
 87)   0D6A 21 C1 FE    		INT_TIMRINC: LD HL, TIMECTR	;
 88)   0D6D 34          		 INC (HL)	;
 89)   0D6E 7E          		 LD A, (HL)	;
 90)   0D6F FE 00       		 CP 0	;
 91)   0D71 C0          		 RET NZ	;
 92)   0D72 23          		 INC HL	;
 93)   0D73 34          		 INC (HL)	;
 94)   0D74 7E          		 LD A, (HL)	;
 95)   0D75 FE 00       		 CP 0	;
 96)   0D77 C0          		 RET NZ	;
 97)   0D78 23          		 INC HL	;
 98)   0D79 34          		 INC (HL)	;
 99)   0D7A 7E          		 LD A, (HL)	;
100)   0D7B FE 00       		 CP 0	;
101)   0D7D C0          		 RET NZ	;
102)   0D7E 23          		 INC HL	;
103)   0D7F 34          		 INC (HL)	;
104)   0D80 7E          		 LD A, (HL)	;
105)   0D81 FE 00       		 CP 0	;
106)   0D83 C0          		 RET NZ	;
108)   0D84 21 00 00    		 LD HL, 0	;
109)   0D87 22 C1 FE    		 LD (TIMECTR), HL	;
110)   0D8A 22 C3 FE    		 LD (TIMECTR + 2), HL	;
111)   0D8D C9          		 RET	;
113)   0D8E D3 68       		INT_TIMER: OUT (DEVINT), A   ;SUPPRESS INTERRUPT	;SUPPRESS INTERRUPT
114)   0D90 CD 6A 0D    		 CALL INT_TIMRINC   ;INCREASE TIMER	;INCREASE TIMER
115)   0D93 CD A7 2A    		 CALL SND_INTDELAY   ;UPDATES DELAY VALUES FOR SOUND MODULE	;UPDATES DELAY VALUES FOR SOUND MODULE
116)   0D96 C9          		 RET	;
  9)   0D97 21 01 FF    		INITMMU:       LD HL,BANKS	;
 10)   0D9A 06 08       		               LD B,8	;
 11)   0D9C AF          		               XOR A	;
 12)   0D9D 77          		INM_AGN:       LD (HL),A	;
 13)   0D9E 3C          		               INC A	;
 14)   0D9F 23          		 INC HL	;
 15)   0DA0 10 FB       		               DJNZ INM_AGN	;
 16)   0DA2 C9          		               RET                	;
 22)   0DA3 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 23)   0DA4 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 24)   0DA5 FE 02       		 CP 2	;
 25)   0DA7 D8          		 RET C         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 26)   0DA8 FE 07       		 CP 7	;
 27)   0DAA C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 28)   0DAB 21 01 FF    		 LD HL, BANKS	;
 29)   0DAE 16 00       		 LD D, 0	;
 30)   0DB0 5F          		 LD E, A	;
 31)   0DB1 19          		 ADD HL, DE	;
 32)   0DB2 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 33)   0DB3 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 34)   0DB4 0E 00       		 LD C, DEVMMU	;
 35)   0DB6 58          		 LD E,B	;
 36)   0DB7 CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 37)   0DB9 CB 20       		 SLA B	;
 38)   0DBB CB 20       		 SLA B	;
 39)   0DBD CB 20       		 SLA B	;
 40)   0DBF CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 41)   0DC1 ED 79       		 OUT (C), A	;
 42)   0DC3 43          		 LD B,E	;
 43)   0DC4 C9          		 RET	;
 48)   0DC5 21 01 FF    		GETPGINBANK:   LD HL,BANKS	;
 49)   0DC8 16 00       		               LD D,0	;
 50)   0DCA 58          		               LD E,B	;
 51)   0DCB 19          		               ADD HL,DE	;
 52)   0DCC 7E          		               LD A,(HL)	;
 53)   0DCD C9          		               RET	;
 15)   0DCE 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   0DCE 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   0DCE 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   0DCE 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   0DCE 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   0DCE 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   0DCE 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 44)   0DCE 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   0DCE 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   0DCE 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   0DCE 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   0DCE 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   0DCE F5          		RS_INI: PUSH AF	;
 63)   0DCF 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 64)   0DD1 D3 1B       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 73)   0DD3 F1          		 POP AF	;
 74)   0DD4 D3 18       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 75)   0DD6 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   0DD8 D3 19       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 77)   0DDA 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   0DDC D3 1B       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 80)   0DDE 3E 00       		 LD A, 0	;
 81)   0DE0 D3 1A       		 OUT (FCR), A        ;//was commented	;//was commented
 82)   0DE2 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   0DE4 D3 19       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 84)   0DE6 C9          		 RET	;
 87)   0DE7 CD ED 0D    		RS_TX: CALL RSTXRD	;
 88)   0DEA D3 18       		 OUT (THR), A	;
 90)   0DEC C9          		 RET	;
 94)   0DED F5          		RSTXRD: PUSH AF	;
 95)   0DEE DB 1D       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 96)   0DF0 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   0DF2 28 FA       		 JR Z, RSTXLP	;
 98)   0DF4 F1          		 POP AF	;
 99)   0DF5 C9          		 RET	;
102)   0DF6 7E          		RS_TXT: LD A, (HL)	;
103)   0DF7 23          		 INC HL	;
104)   0DF8 FE 00       		 CP 0	;
105)   0DFA C8          		 RET Z	;
106)   0DFB CD E7 0D    		 CALL RS_TX	;
107)   0DFE 18 F6       		 JR RS_TXT	;
114)   0E00 F3          		RS_RX: DI	;
115)   0E01 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   0E03 D3 1C       		 OUT (MCR), A	;
117)   0E05 CD 1E 0E    		 CALL RSRXRD	;
118)   0E08 AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   0E09 D3 1C       		 OUT (MCR), A	;
121)   0E0B DB 18       		 IN A, (RBR)	;
122)   0E0D FB          		 EI	;
123)   0E0E C9          		 RET	;
125)   0E0F 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   0E11 D3 1C       		 OUT (MCR), A	;
127)   0E13 DB 1D       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
128)   0E15 CB 47       		 BIT 0, A	;
129)   0E17 28 03       		 JR Z, RS_NOCHAR	;
130)   0E19 F3          		 DI	;
131)   0E1A 18 EC       		 JR RS_GTCH	;
132)   0E1C AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
133)   0E1D C9          		 RET	;
141)   0E1E F5          		 PUSH AF	;
147)   0E1F DB 1D       		 IN A, (LSR)        ; fetch the control register	; fetch the control register
148)   0E21 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
149)   0E23 28 FA       		 JR Z, RSRXLP	;
151)   0E25 F1          		 POP AF	;
153)   0E26 C9          		 RET	;
157)   0E27 DB 1D       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
158)   0E29 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
159)   0E2B C9          		 RET	;
161)   0E2C F5          		SHLCD: PUSH AF	;
163)   0E2D F1          		 POP AF	;
165)   0E2E C9          		 RET	;
169)   0E2F F5          		CHKERR: PUSH AF	;
170)   0E30 E5          		 PUSH HL	;
171)   0E31 C5          		 PUSH BC	;
172)   0E32 DB 1D       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
173)   0E34 CB 67       		 BIT 4, A	;
174)   0E36 28 04       		 JR Z, LBLPE	;
175)   0E38 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
176)   0E3A 18 1A       		 JR EXIT	;
177)   0E3C CB 57       		LBLPE: BIT 2, A	;
178)   0E3E 28 04       		 JR Z, LBLFE	;
179)   0E40 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
180)   0E42 18 12       		 JR EXIT	;
181)   0E44 CB 5F       		LBLFE: BIT 3, A	;
182)   0E46 28 04       		 JR Z, LBLOE	;
183)   0E48 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
184)   0E4A 18 0A       		 JR EXIT	;
185)   0E4C CB 4F       		LBLOE: BIT 1, A	;
186)   0E4E 28 04       		 JR Z, LBLNE	;
187)   0E50 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
188)   0E52 18 02       		 JR EXIT	;
189)   0E54 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
190)   0E56 21 B8 FE    		EXIT: LD HL, SERERR	;
191)   0E59 77          		 LD (HL), A	;
193)   0E5A C1          		 POP BC	;
194)   0E5B E1          		 POP HL	;
195)   0E5C F1          		 POP AF	;
196)   0E5D C9          		 RET	;
 14)   0E5E 21 74 FF    		PS2SETKEYAV:  LD HL,KBDFLAG	;
 15)   0E61 36 01       		 LD (HL),1	;
 16)   0E63 DB 20       		 IN A, (DEVKBI)        ;JUST TO CLEAR THE INTERRUPT	;JUST TO CLEAR THE INTERRUPT
 17)   0E65 C9          		 RET	;
 20)   0E66 21 74 FF    		PS2NOKEYAV: LD HL,KBDFLAG	;
 21)   0E69 36 00       		 LD (HL),0	;
 22)   0E6B C9          		 RET 	;
 27)   0E6C CD 7D 0E    		READCHAR: CALL GTKEY	;
 28)   0E6F B7          		 OR A	;
 29)   0E70 C8          		               RET Z                                                           ;NO KEY IF A=0	;NO KEY IF A=0
 30)   0E71 32 75 FF    		 LD (LASTKEY),A                	;
 31)   0E74 CD 7C 0F    		               CALL PS2LOK                                                     ;LOOK UP TABLE TRANSLATION	;LOOK UP TABLE TRANSLATION
 32)   0E77 C9          		               RET	;
 36)   0E78 3A 74 FF    		PS2ISK:        LD A,(KBDFLAG) 	;
 37)   0E7B B7          		               OR A	;
 38)   0E7C C9          		               RET     	;
 41)   0E7D CD A2 0E    		GTKEY: CALL NGETKEY       ;GET A KEY FROM PS2 HARDWARE	;GET A KEY FROM PS2 HARDWARE
 42)   0E80 B7          		 OR A	;
 43)   0E81 C8          		 RET Z  	;
 44)   0E82 CD BB 0E    		               CALL CHECKEXT                                                   ;CHECK FOR EXTDED KEYS	;CHECK FOR EXTDED KEYS
 45)   0E85 C9          		               RET	;
 49)   0E86 CD 99 0E    		PS2KBINIT: CALL KBDISABLE       ;RESET KB                	;RESET KB
 50)   0E89 DB 20       		 IN A, (DEVKBI)        ;RESET KB INTERRUPT  	;RESET KB INTERRUPT
 51)   0E8B CD 9E 0E    		 CALL KBENABLE	;
 52)   0E8E CD 9E 0E    		               CALL KBENABLE  	;
 53)   0E91 CD 66 0E    		 CALL PS2NOKEYAV	;
 54)   0E94 AF          		 XOR A	;
 55)   0E95 32 75 FF    		 LD (LASTKEY),A   	;
 56)   0E98 C9          		 RET	;
 58)   0E99 3E 02       		KBDISABLE: LD A, 2	;
 59)   0E9B D3 20       		 OUT (DEVKBI), A	;
 60)   0E9D C9          		 RET	;
 62)   0E9E AF          		KBENABLE: XOR A	;
 63)   0E9F D3 20       		 OUT (DEVKBI), A	;
 64)   0EA1 C9          		 RET	;
 70)   0EA2 F3          		NGETKEY: DI	;
 71)   0EA3 3E 02       		 LD A,2	;
 72)   0EA5 D3 20       		 OUT (DEVKBI), A 	;
 73)   0EA7 DB 20       		 IN A, (DEVKBI)        ;GET KEY	;GET KEY
 75)   0EA9 4F          		 LD C, A	;
 76)   0EAA AF          		 XOR A	;
 77)   0EAB D3 20       		 OUT (DEVKBI), A       ;RESET FOR NEXT KEY	;RESET FOR NEXT KEY
 80)   0EAD D3 20       		 OUT (DEVKBI), A       ;ZERO COUNTER  	;ZERO COUNTER
 81)   0EAF D3 20       		 OUT (DEVKBI), A       ;ZERO COUNTER	;ZERO COUNTER
 83)   0EB1 79          		 LD A, C	;
 84)   0EB2 FB          		 EI        ;CLEAR INTERRUPT	;CLEAR INTERRUPT
 86)   0EB3 06 1E       		 LD B,30	;
 87)   0EB5 10 FE       		AGME: DJNZ AGME  	;
 89)   0EB7 CD 66 0E    		 CALL PS2NOKEYAV       ;READY FOR NEXT KEY 	;READY FOR NEXT KEY
 90)   0EBA C9          		 RET	;
 96)   0EBB FE E1       		CHECKEXT:     CP $E1         ;BREAK KEY	;BREAK KEY
 97)   0EBD C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
 98)   0EBE FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
 99)   0EC0 C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
100)   0EC1 FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
101)   0EC3 C8          		 RET Z        ;JUST SAVE IT	;JUST SAVE IT
102)   0EC4 FE AA       		 CP $AA        ;POST TEST KB OK	;POST TEST KB OK
103)   0EC6 C8          		 RET Z	;
105)   0EC7 4F          		 LD C,A        ;SAVE KEY	;SAVE KEY
106)   0EC8 3A 75 FF    		 LD A,(LASTKEY)	;
107)   0ECB FE E1       		 CP $E1	;
108)   0ECD 28 23       		 JR Z, GTBRK	;
109)   0ECF FE F0       		 CP $F0	;
110)   0ED1 28 59       		 JR Z, GTREL	;
111)   0ED3 FE E0       		 CP $E0	;
112)   0ED5 28 21       		 JR Z, GTEXT	;
113)   0ED7 79          		 LD A,C	;
115)   0ED8 FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
116)   0EDA CC 58 0F    		 CALL Z, SHFTOG	;
117)   0EDD FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
118)   0EDF CC 58 0F    		 CALL Z, SHFTOG	;
119)   0EE2 FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
120)   0EE4 CC 61 0F    		 CALL Z, CTRTOG	;
121)   0EE7 FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
122)   0EE9 CC 6A 0F    		 CALL Z, ALTTOG	;
123)   0EEC FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
124)   0EEE CC 73 0F    		 CALL Z, CAPSTOG	;
125)   0EF1 C9          		               RET	;
127)   0EF2 79          		GTBRK: LD A,C       ;$14 OR $F0	;$14 OR $F0
128)   0EF3 FE F0       		 CP $F0	;
129)   0EF5 C8          		 RET Z  	;
130)   0EF6 AF          		 XOR A        	;
131)   0EF7 C9          		 RET	;
133)   0EF8 79          		GTEXT: LD A,C       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
134)   0EF9 FE 6B       		 CP $6B         ;LEFT	;LEFT
135)   0EFB C8          		 RET Z	;
136)   0EFC FE 72       		 CP $72        ;DOWN	;DOWN
137)   0EFE C8          		 RET Z	;
138)   0EFF FE 74       		 CP $74        ;RIGHT	;RIGHT
139)   0F01 C8          		 RET Z	;
140)   0F02 FE 75       		 CP $75        ;UP	;UP
141)   0F04 C8          		 RET Z	;
142)   0F05 FE 70       		 CP $70        ;INSERT	;INSERT
143)   0F07 C8          		 RET Z	;
144)   0F08 FE 6C       		 CP $6C        ;HOME	;HOME
145)   0F0A C8          		 RET Z	;
146)   0F0B FE 7D       		 CP $7D        ;PG UP	;PG UP
147)   0F0D C8          		 RET Z	;
148)   0F0E FE 7A       		 CP $7A        ;PG DN	;PG DN
149)   0F10 C8          		 RET Z	;
150)   0F11 FE 69       		 CP $69        ;END	;END
151)   0F13 C8          		 RET Z	;
152)   0F14 FE 71       		 CP $71        ;DEL	;DEL
153)   0F16 C8          		 RET Z	;
154)   0F17 FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
155)   0F19 C8          		 RET Z	;
156)   0F1A FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
157)   0F1C C8          		 RET Z	;
158)   0F1D FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
159)   0F1F C8          		 RET Z	;
160)   0F20 FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
161)   0F22 C8          		 RET Z	;
162)   0F23 FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
163)   0F25 C8          		 RET Z	;
164)   0F26 FE F0       		 CP $F0	;
165)   0F28 20 00       		 JR NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY  	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
167)   0F2A AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
168)   0F2B C9          		 RET	;
171)   0F2C 79          		GTREL: LD A,C       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
172)   0F2D FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
173)   0F2F CC 46 0F    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
174)   0F32 FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
175)   0F34 CC 4C 0F    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
176)   0F37 FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
177)   0F39 CC 52 0F    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
178)   0F3C FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
179)   0F3E CC 46 0F    		 CALL Z, SHFRES       ; RESET SHIFT  	; RESET SHIFT
180)   0F41 32 75 FF    		 LD (LASTKEY),A         ; SET LAST KEY	; SET LAST KEY
181)   0F44 AF          		 XOR A         ; NO KEY  	; NO KEY
182)   0F45 C9          		 RET	;
184)   0F46 21 B7 FE    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
185)   0F49 CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
186)   0F4B C9          		 RET	;
188)   0F4C 21 B7 FE    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
189)   0F4F CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
190)   0F51 C9          		 RET	;
192)   0F52 21 B7 FE    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
193)   0F55 CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
194)   0F57 C9          		 RET	;
196)   0F58 21 B7 FE    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
197)   0F5B 3E 40       		 LD A, $40       ; MASK	; MASK
198)   0F5D AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
199)   0F5E 77          		 LD (HL), A       ; SAVE	; SAVE
200)   0F5F AF          		 XOR A         ; NO KEY	; NO KEY
201)   0F60 C9          		 RET	;
203)   0F61 21 B7 FE    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
204)   0F64 3E 80       		 LD A, $80       ; MASK	; MASK
205)   0F66 AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
206)   0F67 77          		 LD (HL), A       ; SAVE	; SAVE
207)   0F68 AF          		 XOR A         ; NO KEY	; NO KEY
208)   0F69 C9          		 RET	;
210)   0F6A 21 B7 FE    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
211)   0F6D 3E 20       		 LD A, $20	;
212)   0F6F AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
213)   0F70 77          		 LD (HL), A       ; SAVE	; SAVE
214)   0F71 AF          		 XOR A         ; NO KEY	; NO KEY
215)   0F72 C9          		 RET	;
217)   0F73 21 B7 FE    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
218)   0F76 3E 10       		 LD A, $10	;
219)   0F78 AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
220)   0F79 77          		 LD (HL), A       ; SAVE	; SAVE
221)   0F7A AF          		 XOR A         ; NO KEY	; NO KEY
222)   0F7B C9          		 RET	;
226)   0F7C FE AA       		@PS2LOK: CP $AA	;
227)   0F7E 38 02       		 JR C,DOTRANS       ;ONLY 0-170	;ONLY 0-170
229)   0F80 AF          		 XOR A	;
230)   0F81 C9          		 RET	;
231)   0F82 21 B8 0F    		DOTRANS: LD HL, PS2TAB1      ;UNSHIFTED	;UNSHIFTED
232)   0F85 57          		 LD D,A        ;SAVE KEY CODE	;SAVE KEY CODE
233)   0F86 CD B2 0F    		 CALL PLK1       ;GET CHAR NO SHIFT NO CAPS	;GET CHAR NO SHIFT NO CAPS
234)   0F89 47          		 LD B,A        ;SAVE CHAR	;SAVE CHAR
235)   0F8A FE 61       		 CP 'a'	;
236)   0F8C 38 04       		 JR C,PS2CHKCAPS	;
237)   0F8E FE 7B       		PS2SGT: CP 'z'+1  	;
238)   0F90 38 09       		 JR C, PS2CPSF;ITS A LETTER CAPS AND SHIFT MATTERS	;ITS A LETTER CAPS AND SHIFT MATTERS
240)   0F92 3A B7 FE    		PS2CHKCAPS: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT  	; GET KEYBFLAGS ON A SHIFT
241)   0F95 CB 77       		 BIT 6, A	;
242)   0F97 78          		 LD A,B	;
243)   0F98 C8          		 RET Z        ;IF NO SHIFT RETURN TAB1 CHAR	;IF NO SHIFT RETURN TAB1 CHAR
245)   0F99 18 0F       		 JR PS2SHIFT	;
247)   0F9B 3A B7 FE    		PS2CPSF: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
248)   0F9E 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
249)   0F9F CB 1F       		 RR A	;
250)   0FA1 CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
251)   0FA3 A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
252)   0FA4 CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED      	;CHECK IF BIT 4 IS 0 = UNSHIFTED
253)   0FA6 20 02       		 JR NZ,PS2SHIFT	;
257)   0FA8 78          		 LD A,B    	;
258)   0FA9 C9          		 RET	;
259)   0FAA 7A          		PS2SHIFT: LD A, D       ;RESTORE A KEYCODE	;RESTORE A KEYCODE
260)   0FAB 21 62 10    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
261)   0FAE CD B2 0F    		 CALL PLK1       ;GET CHAR	;GET CHAR
262)   0FB1 C9          		 RET	;
263)   0FB2 06 00       		PLK1: LD B, 0	;
264)   0FB4 4F          		 LD C, A	;
265)   0FB5 09          		 ADD HL, BC	;
266)   0FB6 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
267)   0FB7 C9          		 RET	;
271)   0FB8 00 00 00 A5 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
271)   0FBC 00 00 00 00 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
271)   0FC0 00 00       		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
272)   0FC2 A8 A6 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
272)   0FC6 60 00 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
272)   0FCA 00 00       		 DB 168,166,0,0,'`',0,0,0,0,0	;
273)   0FCC 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
273)   0FD0 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
273)   0FD4 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
274)   0FD6 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
274)   0FDA 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
274)   0FDE 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
275)   0FE0 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
275)   0FE4 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
275)   0FE8 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
276)   0FEA 62 68 67 79 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
276)   0FEE 36 00 00 2C 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
276)   0FF2 6D 6A       		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
277)   0FF4 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
277)   0FF8 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
277)   0FFC 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
278)   0FFE 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
278)   1002 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
278)   1006 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
279)   1008 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
279)   100C 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
279)   1010 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
280)   1012 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
280)   1016 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
280)   101A 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
281)   101C 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
281)   1020 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
281)   1024 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
282)   1026 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
282)   102A 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
282)   102E 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
283)   1030 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
283)   1034 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
283)   1038 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
284)   103A 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
284)   103E 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
284)   1042 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
285)   1044 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
285)   1048 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
285)   104C 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
286)   104E 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
286)   1052 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
286)   1056 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
287)   1058 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
287)   105C 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
287)   1060 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
290)   1062 00 00 00 A5 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
290)   1066 00 00 00 00 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
290)   106A 00 00       		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
291)   106C A8 A6 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
291)   1070 7E 00 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
291)   1074 00 00       		 DB 168,166,0,0,'~',0,0,0,0,0	;
292)   1076 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
292)   107A 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
292)   107E 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
293)   1080 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
293)   1084 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
293)   1088 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
294)   108A 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
294)   108E 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
294)   1092 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
295)   1094 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
295)   1098 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
295)   109C 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
296)   109E 55 26 2A 00 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
296)   10A2 00 3C 4B 49 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
296)   10A6 4F 29       		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
297)   10A8 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
297)   10AC 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
297)   10B0 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
298)   10B2 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
298)   10B6 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
298)   10BA 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
299)   10BC 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
299)   10C0 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
299)   10C4 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
300)   10C6 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
300)   10CA 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
300)   10CE 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
301)   10D0 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
301)   10D4 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
301)   10D8 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
302)   10DA 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
302)   10DE 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
302)   10E2 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
303)   10E4 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
303)   10E8 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
303)   10EC 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
304)   10EE 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
304)   10F2 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
304)   10F6 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
305)   10F8 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
305)   10FC 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
305)   1100 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
306)   1102 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
306)   1106 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
306)   110A 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 46)   110C 3E 03       		STRG_INIT: LD A, 3       ;38400 BPS	;38400 BPS
 47)   110E CD 99 12    		 CALL STOR_INI	;
 48)   1111 C9          		 RET	;
 52)   1112 21 FB FE    		NEWCMD: LD HL, STRGCMD	;
 53)   1115 77          		 LD (HL), A	;
 54)   1116 23          		 INC HL	;
 55)   1117 E5          		 PUSH HL	;
 56)   1118 AF          		 XOR A	;
 57)   1119 06 03       		 LD B, 3	;
 58)   111B 77          		CCAGN: LD (HL), A	;
 59)   111C 23          		 INC HL	;
 60)   111D 10 FC       		 DJNZ CCAGN	;
 61)   111F E1          		 POP HL         ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 62)   1120 C9          		 RET	;
 65)   1121 CD FA 12    		SENDCMD: CALL FLUSHREC	;
 66)   1124 21 FB FE    		 LD HL, STRGCMD	;
 67)   1127 06 04       		 LD B, 4	;
 68)   1129 7E          		NXTBT: LD A, (HL)	;
 69)   112A CD C9 12    		 CALL STOR_TX	;
 70)   112D 23          		 INC HL	;
 71)   112E 10 F9       		 DJNZ NXTBT	;
 72)   1130 C9          		 RET	;
 74)   1131 3E 01       		STRG_OPENCRD: LD A, OPENCARD	;
 75)   1133 CD 12 11    		 CALL NEWCMD	;
 76)   1136 CD 21 11    		 CALL SENDCMD	;
 77)   1139 CD EB 2A    		 CALL DEL2	;
 78)   113C CD DC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
 79)   113F FE C9       		 CP FCMDOKTST	;
 80)   1141 3F          		 CCF	;
 81)   1142 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
 86)   1143 F5          		STRG_GETEOF: PUSH AF	;
 87)   1144 3E 0D       		 LD A, ENDOFFILE	;
 88)   1146 CD 12 11    		 CALL NEWCMD	;
 89)   1149 F1          		 POP AF	;
 90)   114A 77          		 LD (HL), A       ;FID	;FID
 91)   114B CD 21 11    		 CALL SENDCMD	;
 93)   114E CD DC 12    		 CALL STOR_RX       ;GET EOF	;GET EOF
 94)   1151 FE C9       		 CP FCMDOKTST	;
 95)   1153 3F          		 CCF	;
 96)   1154 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
101)   1155 F5          		STRG_GETSIZE: PUSH AF	;
102)   1156 3E 0C       		 LD A, FILESIZE	;
103)   1158 18 03       		 JR GT2BYTES	;
108)   115A F5          		STRG_GETPOS: PUSH AF	;
109)   115B 3E 09       		 LD A, POSITIONG	;
110)   115D CD 12 11    		GT2BYTES: CALL NEWCMD	;
111)   1160 F1          		 POP AF	;
112)   1161 77          		 LD (HL), A       ;FID	;FID
113)   1162 CD 21 11    		 CALL SENDCMD	;
115)   1165 CD DC 12    		 CALL STOR_RX       ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
116)   1168 67          		 LD H, A	;
117)   1169 CD DC 12    		 CALL STOR_RX       ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
118)   116C 6F          		 LD L, A	;
119)   116D CD DC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
120)   1170 FE C9       		 CP FCMDOKTST	;
121)   1172 3F          		 CCF	;
122)   1173 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
128)   1174 EB          		STRG_SETPOS: EX DE, HL	;
129)   1175 F5          		 PUSH AF	;
130)   1176 3E 08       		 LD A, POSITIONS	;
131)   1178 CD 12 11    		 CALL NEWCMD	;
132)   117B F1          		 POP AF	;
133)   117C 77          		 LD (HL), A       ;FID	;FID
134)   117D 23          		 INC HL	;
135)   117E 72          		 LD (HL), D       ;NEW POS ON DE	;NEW POS ON DE
136)   117F 23          		 INC HL	;
137)   1180 73          		 LD (HL), E	;
138)   1181 CD 21 11    		 CALL SENDCMD	;
139)   1184 CD EB 2A    		 CALL DEL2	;
140)   1187 CD DC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
141)   118A FE C9       		 CP FCMDOKTST	;
142)   118C 3F          		 CCF	;
143)   118D C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
148)   118E 3E 0A       		STRG_DIRLIST: LD A, LISTDIR	;
149)   1190 CD 12 11    		 CALL NEWCMD	;
150)   1193 CD 21 11    		 CALL SENDCMD	;
151)   1196 CD EB 2A    		 CALL DEL2	;
153)   1199 11 D3 FE    		 LD DE, STRGBUFF	;
154)   119C CD DC 12    		NXTCHR: CALL STOR_RX	;
155)   119F FE FF       		 CP 255	;
156)   11A1 28 05       		 JR Z, DIROUT	;
158)   11A3 CD 62 04    		 CALL OS_PRINTCHAR	;
159)   11A6 18 F4       		 JR NXTCHR	;
160)   11A8 CD EB 2A    		DIROUT: CALL DEL2	;
161)   11AB CD DC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
162)   11AE FE C9       		 CP FCMDOKTST	;
163)   11B0 3F          		 CCF	;
164)   11B1 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
168)   11B2 CD D2 12    		SENDFNAME: CALL STOR_TXT      ;SEND FILENAME	;SEND FILENAME
169)   11B5 AF          		 XOR A	;
170)   11B6 CD C9 12    		 CALL STOR_TX	;
171)   11B9 C9          		 RET	;
174)   11BA 3E 0B       		STRG_DIRCHG: LD A, CHANGEDIR	;
175)   11BC CD 12 11    		 CALL NEWCMD	;
176)   11BF CD 21 11    		 CALL SENDCMD	;
177)   11C2 21 D3 FE    		 LD HL, STRGBUFF	;
178)   11C5 CD B2 11    		 CALL SENDFNAME	;
179)   11C8 CD EB 2A    		 CALL DEL2	;
180)   11CB CD DC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
181)   11CE FE C9       		 CP FCMDOKTST	;
182)   11D0 3F          		 CCF	;
183)   11D1 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
187)   11D2 F5          		STRG_OPNFILE: PUSH AF	;
188)   11D3 3E 02       		 LD A, OPENFILE	;
189)   11D5 CD 12 11    		 CALL NEWCMD	;
190)   11D8 F1          		 POP AF	;
191)   11D9 23          		 INC HL        ;FID IS NOT SET YET	;FID IS NOT SET YET
192)   11DA 77          		 LD (HL), A       ;PARAM1	;PARAM1
193)   11DB CD 21 11    		 CALL SENDCMD	;
194)   11DE 21 D3 FE    		 LD HL, STRGBUFF	;
195)   11E1 CD B2 11    		 CALL SENDFNAME	;
196)   11E4 CD EB 2A    		 CALL DEL2	;
197)   11E7 CD DC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
199)   11EA 32 FF FE    		 LD (FID), A	;
200)   11ED FE C9       		 CP FCMDOKTST	;
201)   11EF 3F          		 CCF	;
202)   11F0 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
205)   11F1 F5          		STRG_CLSFILE: PUSH AF	;
206)   11F2 3E 03       		 LD A, CLOSEFILE	;
207)   11F4 CD 12 11    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
208)   11F7 F1          		 POP AF	;
209)   11F8 77          		 LD (HL), A       ;FID	;FID
210)   11F9 CD 21 11    		 CALL SENDCMD	;
211)   11FC CD DC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
212)   11FF FE C9       		 CP FCMDOKTST	;
213)   1201 3F          		 CCF	;
214)   1202 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
220)   1203 F5          		STRG_BLKWRITE: PUSH AF	;
221)   1204 3E 07       		 LD A, WRITEBLOCK	;
222)   1206 CD 12 11    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
223)   1209 F1          		 POP AF	;
224)   120A 77          		 LD (HL), A       ;FID	;FID
225)   120B 23          		 INC HL	;
227)   120C 78          		 LD A, B        ;BYTES HI	;BYTES HI
228)   120D 77          		 LD (HL), A	;
229)   120E 23          		 INC HL	;
230)   120F 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
231)   1210 77          		 LD (HL), A	;
232)   1211 CD 21 11    		 CALL SENDCMD        ;SEND BLOCKWRITE COMMAND BC BYTES	;SEND BLOCKWRITE COMMAND BC BYTES
233)   1214 EB          		 EX DE, HL	;
234)   1215 7E          		BWNXCH: LD A, (HL)	;
235)   1216 CD C9 12    		 CALL STOR_TX	;
236)   1219 23          		 INC HL	;
237)   121A 0B          		 DEC BC	;
238)   121B 78          		 LD A, B	;
239)   121C B1          		 OR C	;
240)   121D 20 F6       		 JR NZ, BWNXCH	;
241)   121F CD DC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
242)   1222 FE C9       		 CP FCMDOKTST	;
243)   1224 3F          		 CCF	;
244)   1225 C9          		 RET	;
252)   1226 F5          		STRG_BLKREAD: PUSH AF	;
253)   1227 3E 06       		 LD A, READBLOCK	;
254)   1229 CD 12 11    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
255)   122C F1          		 POP AF	;
256)   122D 77          		 LD (HL), A       ;FID	;FID
257)   122E 23          		 INC HL	;
258)   122F 78          		 LD A, B        ;BYTES HI	;BYTES HI
259)   1230 77          		 LD (HL), A	;
260)   1231 23          		 INC HL	;
261)   1232 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
262)   1233 77          		 LD (HL), A	;
263)   1234 CD 21 11    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
264)   1237 CD EB 2A    		 CALL DEL2 	;
265)   123A CD DC 12    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
266)   123D 47          		 LD B, A	;
267)   123E CD DC 12    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
268)   1241 4F          		 LD C, A	;
269)   1242 78          		 LD A, B	;
270)   1243 B1          		 OR C	;
271)   1244 28 13       		 JR Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
273)   1246 C5          		 PUSH BC        ;SAVE BYTES TO RECEIVE	;SAVE BYTES TO RECEIVE
274)   1247 CD DC 12    		OFNXCH: CALL STOR_RX	;
275)   124A 12          		 LD (DE), A	;
276)   124B 13          		 INC DE	;
277)   124C 0B          		 DEC BC	;
278)   124D 78          		 LD A, B	;
279)   124E B1          		 OR C	;
280)   124F 20 F6       		 JR NZ, OFNXCH	;
281)   1251 CD DC 12    		OFEXIT: CALL STOR_RX        ;GET RESULT	;GET RESULT
282)   1254 C1          		 POP BC         ;TOTAL BYTES RECEIVED	;TOTAL BYTES RECEIVED
283)   1255 FE C9       		 CP FCMDOKTST	;
284)   1257 3F          		 CCF	;
285)   1258 C9          		 RET	;
287)   1259 18 F6       		 JR OFEXIT	;
291)   125B F5          		STRG_TPFILE: PUSH AF	;
292)   125C 3E 06       		 LD A, READBLOCK	;
293)   125E CD 12 11    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
294)   1261 F1          		 POP AF	;
295)   1262 77          		 LD (HL), A       ;FID	;FID
296)   1263 23          		 INC HL	;
297)   1264 78          		 LD A, B        ;BYTES HI	;BYTES HI
298)   1265 77          		 LD (HL), A	;
299)   1266 23          		 INC HL	;
300)   1267 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
301)   1268 77          		 LD (HL), A	;
302)   1269 CD 21 11    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
303)   126C CD EB 2A    		 CALL DEL2	;
304)   126F CD DC 12    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
305)   1272 47          		 LD B, A	;
306)   1273 CD DC 12    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
307)   1276 4F          		 LD C, A	;
308)   1277 78          		 LD A, B	;
309)   1278 B1          		 OR C	;
310)   1279 CA 59 12    		 JP Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
312)   127C 3E 0D       		 LD A, 13	;
313)   127E C5          		 PUSH BC	;
314)   127F CD 62 04    		 CALL OS_PRINTCHAR	;
315)   1282 C1          		 POP BC	;
316)   1283 CD DC 12    		TFOFNXCH: CALL STOR_RX       ;GET THE CHAR	;GET THE CHAR
317)   1286 C5          		 PUSH BC	;
318)   1287 CD 62 04    		 CALL OS_PRINTCHAR       ;PRINT TO SCREEN	;PRINT TO SCREEN
319)   128A C1          		 POP BC	;
320)   128B 0B          		 DEC BC	;
321)   128C 78          		 LD A, B	;
322)   128D B1          		 OR C	;
323)   128E 20 F3       		 JR NZ, TFOFNXCH	;
324)   1290 CD DC 12    		TFOFEXIT: CALL STOR_RX       ;GET RESULT	;GET RESULT
325)   1293 FE C9       		 CP FCMDOKTST	;
326)   1295 3F          		 CCF	;
327)   1296 C9          		 RET         ;C SET IF ERROR	;C SET IF ERROR
330)   1297 18 F7       		 JR TFOFEXIT	;
352)   1299 	            		 RBR EQU DEVSTOR+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
353)   1299 	            		 THR EQU DEVSTOR+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
354)   1299 	            		 IER EQU DEVSTOR+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
359)   1299 	            		 IIR EQU DEVSTOR+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
364)   1299 	            		 FCR EQU DEVSTOR+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
372)   1299 	            		 LCR EQU DEVSTOR+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
380)   1299 	            		 MCR EQU DEVSTOR+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
381)   1299 	            		 LSR EQU DEVSTOR+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
390)   1299 	            		 MSR EQU DEVSTOR+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
391)   1299 	            		 SCR EQU DEVSTOR+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
392)   1299 	            		 DLL EQU DEVSTOR+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
393)   1299 	            		 DLM EQU DEVSTOR+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
397)   1299 F5          		STOR_INI: PUSH AF	;
398)   129A 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
399)   129C D3 2B       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
407)   129E F1          		 POP AF	;
408)   129F D3 28       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
409)   12A1 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
410)   12A3 D3 29       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
411)   12A5 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
412)   12A7 D3 2B       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
414)   12A9 3E 00       		 LD A, 0	;
415)   12AB D3 2A       		 OUT (FCR), A        ;//was commented	;//was commented
416)   12AD 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
417)   12AF D3 29       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
418)   12B1 AF          		 XOR A         ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
419)   12B2 D3 2C       		 OUT (MCR), A	;
420)   12B4 C9          		 RET	;
426)   12B5 F5          		STORTXRD: PUSH AF	;
427)   12B6 DB 2D       		STORTXLP: IN A, (LSR)       ; fetch the control register	; fetch the control register
428)   12B8 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
429)   12BA 28 FA       		 JR Z, STORTXLP	;
430)   12BC F1          		 POP AF	;
431)   12BD C9          		 RET	;
434)   12BE F5          		WAITCTSLOW: PUSH AF	;
435)   12BF DB 2E       		TSTAGN: IN A, (MSR)	;
436)   12C1 CB 67       		 BIT 4, A        ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
437)   12C3 20 02       		 JR NZ, WCLEX	;
438)   12C5 18 F8       		 JR TSTAGN	;
439)   12C7 F1          		WCLEX: POP AF	;
440)   12C8 C9          		 RET	;
446)   12C9 CD BE 12    		 CALL WAITCTSLOW	;
451)   12CC CD B5 12    		 CALL STORTXRD	;
456)   12CF D3 28       		 OUT (THR), A	;
457)   12D1 C9          		 RET	;
460)   12D2 7E          		STOR_TXT: LD A, (HL)	;
461)   12D3 23          		 INC HL	;
462)   12D4 FE 00       		 CP 0	;
463)   12D6 C8          		 RET Z	;
464)   12D7 CD C9 12    		 CALL STOR_TX	;
465)   12DA 18 F6       		 JR STOR_TXT	;
472)   12DC F3          		STOR_RX: DI	;
473)   12DD 3E 02       		 LD A, 2        ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
474)   12DF D3 2C       		 OUT (MCR), A	;
475)   12E1 CD 05 13    		 CALL STORRXRD	;
476)   12E4 AF          		STOR_GTCH: XOR A        ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
477)   12E5 D3 2C       		 OUT (MCR), A	;
478)   12E7 DB 28       		 IN A, (RBR)	;
479)   12E9 FB          		 EI	;
480)   12EA C9          		 RET	;
482)   12EB 3E 02       		STOR_RXNW: LD A, 2       ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
483)   12ED D3 2C       		 OUT (MCR), A	;
484)   12EF DB 2D       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
485)   12F1 CB 47       		 BIT 0, A	;
486)   12F3 28 03       		 JR Z, STOR_NOCHAR	;
487)   12F5 F3          		 DI	;
488)   12F6 18 EC       		 JR STOR_GTCH	;
489)   12F8 AF          		STOR_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
490)   12F9 C9          		 RET	;
492)   12FA 06 0A       		FLUSHREC: LD B, 10	;
493)   12FC CD EB 12    		FRAGN: CALL STOR_RXNW	;
494)   12FF 10 FB       		 DJNZ FRAGN	;
495)   1301 AF          		 XOR A	;
496)   1302 D3 2C       		 OUT (MCR), A	;
497)   1304 C9          		 RET	;
503)   1305 F3          		STORRXRD: DI	;
504)   1306 F5          		 PUSH AF	;
505)   1307 DB 2D       		STORRXLP: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
506)   1309 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
507)   130B 28 FA       		 JR Z, STORRXLP	;
508)   130D F1          		 POP AF	;
509)   130E FB          		 EI	;
510)   130F C9          		 RET	;
514)   1310 DB 2D       		STOR_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
515)   1312 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
516)   1314 C9          		 RET	;
  7)   1315 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  8)   1315 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
  9)   1315 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 10)   1315 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 11)   1315 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 56)   1315 C5          		I2C_RDSTAT_WT: PUSH BC	;
 57)   1316 01 00 20    		 LD BC, $2000	;
 58)   1319 DB 73       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 59)   131B CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 60)   131D 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 61)   131F 0B          		 DEC BC	;
 62)   1320 78          		 LD A, B	;
 63)   1321 B1          		 OR C	;
 64)   1322 20 F5       		 JR NZ, I2CRWT_AGN	;
 65)   1324 C1          		I2CRWT_OK: POP BC	;
 66)   1325 DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 67)   1327 C9          		 RET	;
 69)   1328 DB 73       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 70)   132A CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 71)   132C 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 72)   132E C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 73)   132F DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 74)   1331 C9          		 RET	;
 77)   1332 3E 01       		I2C_INIT: LD A, I2CADR	;
 78)   1334 D3 70       		 OUT (DI2C_INDPTR), A	;
 79)   1336 3E E0       		 LD A, $E0	;
 80)   1338 D3 72       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 82)   133A 3E 40       		 LD A, $40        ;INIT	;INIT
 83)   133C D3 73       		 OUT (DI2C_CON), A      ;	;
 84)   133E 06 FA       		 LD B, 250	;
 85)   1340 CD D8 2A    		 CALL DELAYMICRO	;
 86)   1343 06 FA       		 LD B, 250	;
 87)   1345 CD D8 2A    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 92)   1348 3E 06       		 LD A, I2CMODE	;
 93)   134A D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 94)   134C 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 95)   134E D3 72       		 OUT (DI2C_INDIR), A	;
 96)   1350 3E 02       		 LD A, I2CSCLL	;
 97)   1352 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 98)   1354 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
 99)   1356 D3 72       		 OUT (DI2C_INDIR), A	;
100)   1358 3E 03       		 LD A, I2CSCLH	;
101)   135A D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
102)   135C 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
103)   135E D3 72       		 OUT (DI2C_INDIR), A	;
105)   1360 C9          		 RET	;
112)   1361 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
113)   1363 D3 73       		 OUT (DI2C_CON), A	;
114)   1365 CD 15 13    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
115)   1368 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
116)   1369 FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
117)   136B 28 21       		 JR Z, WRB_S1	;
118)   136D FE 10       		 CP MASTER_RESTART_TXed	;
119)   136F 28 1D       		 JR Z, WRB_S1	;
120)   1371 FE 28       		 CP MASTER_DATA_W_ACK	;
121)   1373 28 26       		 JR Z, WRB_S2	;
122)   1375 FE 18       		 CP MASTER_SLA_W_ACK	;
123)   1377 28 23       		 JR Z, WRB_S3	;
124)   1379 FE 20       		 CP MASTER_SLA_W_NAK	;
125)   137B 28 2D       		 JR Z, WRB_EXIT	;
126)   137D FE 30       		 CP MASTER_DATA_W_NAK	;
127)   137F 28 29       		 JR Z, WRB_EXIT	;
128)   1381 FE 38       		 CP MASTER_ARB_LOST	;
129)   1383 C8          		 RET Z	;
130)   1384 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
131)   1386 C8          		 RET Z	;
132)   1387 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
133)   1389 C8          		 RET Z	;
134)   138A FE D8       		 CP SLAVE_GENERALCALL_AL	;
135)   138C C8          		 RET Z	;
136)   138D C9          		 RET	;
138)   138E 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
139)   138F CB 27       		 SLA A	;
140)   1391 E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
141)   1393 D3 71       		 OUT (DI2C_DAT), A	;
142)   1395 3E 40       		 LD A, $40	;
143)   1397 D3 73       		 OUT (DI2C_CON), A	;
144)   1399 18 CA       		 JR WRB_LP1	;
145)   139B 0B          		WRB_S2: DEC BC	;
146)   139C 78          		WRB_S3: LD A, B	;
147)   139D B1          		 OR C	;
148)   139E 28 0A       		 JR Z, WRB_EXIT	;
149)   13A0 7E          		 LD A, (HL)	;
150)   13A1 23          		 INC HL	;
151)   13A2 D3 71       		 OUT (DI2C_DAT), A	;
152)   13A4 3E 40       		 LD A, $40	;
153)   13A6 D3 73       		 OUT (DI2C_CON), A	;
154)   13A8 18 BB       		 JR WRB_LP1	;
156)   13AA 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
157)   13AC D3 73       		 OUT (DI2C_CON), A	;
158)   13AE 78          		 LD A, B	;
159)   13AF B1          		 OR C	;
160)   13B0 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
166)   13B1 78          		I2C_RD_BYTE: LD A, B	;
167)   13B2 B1          		 OR C	;
168)   13B3 C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
169)   13B4 3E 60       		 LD A, $60	;
170)   13B6 D3 73       		 OUT (DI2C_CON), A	;
171)   13B8 CD 15 13    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
172)   13BB 1E 00       		 LD E, 0	;
173)   13BD FE 08       		 CP MASTER_START_TXed	;
174)   13BF 28 1F       		 JR Z, RDB_S1	;
176)   13C1 28 1D       		 JR Z, RDB_S1	;
177)   13C3 FE 58       		 CP MASTER_DATA_R_NAK	;
178)   13C5 28 26       		 JR Z, RDB_S2	;
179)   13C7 FE 50       		 CP MASTER_DATA_R_ACK	;
180)   13C9 28 24       		 JR Z, RDB_S3	;
181)   13CB FE 40       		 CP MASTER_SLA_R_ACK	;
182)   13CD 28 25       		 JR Z, RDB_S4	;
183)   13CF FE 48       		 CP MASTER_SLA_R_NAK	;
184)   13D1 28 38       		 JR Z, RDB_EXIT	;
185)   13D3 FE 38       		 CP MASTER_ARB_LOST	;
186)   13D5 C8          		 RET Z	;
187)   13D6 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
188)   13D8 C8          		 RET Z	;
189)   13D9 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
190)   13DB C8          		 RET Z	;
191)   13DC FE D8       		 CP SLAVE_GENERALCALL_AL	;
192)   13DE C8          		 RET Z	;
193)   13DF C9          		 RET	;
196)   13E0 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
197)   13E1 CB 27       		 SLA A	;
198)   13E3 F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
199)   13E5 D3 71       		 OUT (DI2C_DAT), A	;
200)   13E7 3E 40       		 LD A, $40	;
201)   13E9 D3 73       		 OUT (DI2C_CON), A	;
202)   13EB 18 CB       		 JR RDB_LP1	;
203)   13ED 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
204)   13EF DB 71       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
205)   13F1 77          		 LD (HL), A	;
206)   13F2 23          		 INC HL	;
207)   13F3 0B          		 DEC BC	;
208)   13F4 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
209)   13F5 B1          		 OR C	;
210)   13F6 28 13       		 JR Z, RDB_EXIT	;
211)   13F8 7B          		 LD A, E	;
212)   13F9 FE 01       		 CP 1	;
213)   13FB 28 0E       		 JR Z, RDB_EXIT	;
214)   13FD 78          		 LD A, B	;
215)   13FE 81          		 ADD C	;
216)   13FF FE 01       		 CP 1	;
217)   1401 3E 40       		 LD A, $40	;
218)   1403 28 02       		 JR Z, RDB_NXT1	;
219)   1405 3E C0       		 LD A, $C0	;
220)   1407 D3 73       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
221)   1409 18 AD       		 JR RDB_LP1	;
223)   140B 3E 50       		RDB_EXIT: LD A, $50	;
224)   140D D3 73       		 OUT (DI2C_CON), A	;
225)   140F 78          		 LD A, B	;
226)   1410 B1          		 OR C	;
227)   1411 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
 29)   1412 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 29)   1416 61 79       		 SUN DEFM  "Sunday"	;
 30)   1418 00          		 DB 0	;
 31)   1419 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 31)   141D 61 79       		 MON DEFM  "Monday"	;
 32)   141F 00          		 DB 0	;
 33)   1420 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 33)   1424 64 61 79    		 TUE DEFM  "Tuesday"	;
 34)   1427 00          		 DB 0	;
 35)   1428 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 35)   142C 65 73 64 61 		 WED DEFM  "Wednesday"	;
 35)   1430 79          		 WED DEFM  "Wednesday"	;
 36)   1431 00          		 DB 0	;
 37)   1432 54 68 75 72 		 THU DEFM  "Thursday"	;
 37)   1436 73 64 61 79 		 THU DEFM  "Thursday"	;
 38)   143A 00          		 DB 0	;
 39)   143B 46 72 69 64 		 FRI DEFM  "Friday"	;
 39)   143F 61 79       		 FRI DEFM  "Friday"	;
 40)   1441 00          		 DB 0	;
 41)   1442 53 61 74 75 		 SAT DEFM  "Saturday"	;
 41)   1446 72 64 61 79 		 SAT DEFM  "Saturday"	;
 42)   144A 00          		 DB 0	;
 44)   144B 12 14       		 DAYS DEFW SUN	;
 45)   144D 19 14       		 DEFW MON	;
 46)   144F 20 14       		 DEFW TUE	;
 47)   1451 28 14       		 DEFW WED	;
 48)   1453 32 14       		 DEFW THU	;
 49)   1455 3B 14       		 DEFW FRI	;
 50)   1457 42 14       		 DEFW SAT	;
 52)   1459 52 54 43 20 		 MESERR DEFM "RTC ERR ON RECV"	;
 52)   145D 45 52 52 20 		 MESERR DEFM "RTC ERR ON RECV"	;
 52)   1461 4F 4E 20 52 		 MESERR DEFM "RTC ERR ON RECV"	;
 52)   1465 45 43 56    		 MESERR DEFM "RTC ERR ON RECV"	;
 53)   1468 0A 0D 00    		 DEFB 10,13,0	;
 55)   146B 52 54 43 20 		 MESERR0 DEFM "RTC ERR ON SEND"	;
 55)   146F 45 52 52 20 		 MESERR0 DEFM "RTC ERR ON SEND"	;
 55)   1473 4F 4E 20 53 		 MESERR0 DEFM "RTC ERR ON SEND"	;
 55)   1477 45 4E 44    		 MESERR0 DEFM "RTC ERR ON SEND"	;
 56)   147A 0A 0D 00    		 DEFB 10,13,0	;
 58)   147D 7B          		SHERR0: LD A, E	;
 59)   147E C5          		 PUSH BC	;
 60)   147F CD 17 06    		 CALL SOUTAS	;
 61)   1482 C1          		 POP BC	;
 62)   1483 79          		 LD A, C	;
 63)   1484 CD 17 06    		 CALL SOUTAS	;
 65)   1487 21 6B 14    		 LD HL, MESERR0	;
 66)   148A CD F6 0D    		 CALL RS_TXT	;
 67)   148D C9          		 RET	;
 70)   148E 79          		SHERR: LD A, C	;
 71)   148F CD 17 06    		 CALL SOUTAS	;
 72)   1492 21 59 14    		 LD HL, MESERR	;
 73)   1495 CD F6 0D    		 CALL RS_TXT	;
 74)   1498 37          		 SCF	;
 75)   1499 C9          		 RET	;
 78)   149A AF          		RST_BUF: XOR A	;
 79)   149B 06 14       		 LD B, 20	;
 80)   149D 21 8A FE    		 LD HL, BUFFER	;
 81)   14A0 77          		LP1: LD (HL), A	;
 82)   14A1 23          		 INC HL	;
 83)   14A2 10 FC       		 DJNZ LP1	;
 84)   14A4 C9          		 RET	;
 86)   14A5 64 64 2F 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   14A9 6D 2F 79 79 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   14AD 20 77 20 68 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   14B1 68 3A 6D 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   14B5 3A 73 73    		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 89)   14B8 21 A5 14    		DS1307_INIT: LD HL,DATEMASK	;
 90)   14BB 11 A0 FE    		 LD DE,TIMMSG	;
 91)   14BE 01 11 00    		 LD BC,17	;
 92)   14C1 ED B0       		 LDIR        	;
 93)   14C3 C9          		 RET	;
 95)   14C4 21 8A FE    		DS1307_GETNOW: LD HL, BUFFER	;
 96)   14C7 AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 97)   14C8 77          		 LD (HL), A	;
 98)   14C9 16 68       		 LD D, DS1307_ADDRESS	;
 99)   14CB 01 01 00    		 LD BC, 1	;
100)   14CE CD 61 13    		 CALL I2C_WRITE	;
101)   14D1 C2 7D 14    		 JP NZ, SHERR0	;
103)   14D4 21 8A FE    		 LD HL, BUFFER	;
104)   14D7 16 68       		 LD D, DS1307_ADDRESS	;
105)   14D9 01 07 00    		 LD BC, 7	;
106)   14DC CD B1 13    		 CALL I2C_READ	;
107)   14DF C2 8E 14    		 JP NZ, SHERR	;
108)   14E2 AF          		 XOR A	;
109)   14E3 C9          		 RET	;
113)   14E4 11 8A FE    		DS1307_SETTIME: LD DE, BUFFER	;
114)   14E7 AF          		 XOR A	;
115)   14E8 12          		 LD (DE), A	;
116)   14E9 13          		 INC DE	;
117)   14EA 21 B1 FE    		 LD HL,TIMMSG+17  ;SS	;SS
118)   14ED CD 1B 15    		 CALL SETTMPARAM	;
119)   14F0 21 AE FE    		 LD HL,TIMMSG+14  ;MN	;MN
120)   14F3 CD 1B 15    		 CALL SETTMPARAM	;
121)   14F6 21 AB FE    		 LD HL,TIMMSG+11  ;HH	;HH
122)   14F9 CD 1B 15    		 CALL SETTMPARAM	;
123)   14FC 21 A9 FE    		 LD HL,TIMMSG+9  ;D OF WEEK 1-7	;D OF WEEK 1-7
124)   14FF CD 1B 15    		 CALL SETTMPARAM	;
125)   1502 21 A0 FE    		 LD HL,TIMMSG  ;DD	;DD
126)   1505 CD 1B 15    		 CALL SETTMPARAM	;
127)   1508 21 A3 FE    		 LD HL,TIMMSG+3  ;MM	;MM
128)   150B CD 1B 15    		 CALL SETTMPARAM	;
129)   150E 21 A6 FE    		 LD HL,TIMMSG+6  ;YY	;YY
130)   1511 CD 1B 15    		 CALL SETTMPARAM	;
131)   1514 3E 00       		 LD A,0	;
132)   1516 12          		 LD (DE), A	;
133)   1517 CD 63 15    		 CALL DS1307_ADJUST	;
134)   151A C9          		 RET	;
136)   151B D5          		SETTMPARAM: PUSH DE	;
137)   151C CD 8E 2C    		 CALL strtob	;
138)   151F D1          		 POP DE	;
139)   1520 CD 1F 2B    		 CALL BN2BCD	;
140)   1523 7D          		 LD A,L	;
141)   1524 12          		 LD (DE),A	;
142)   1525 13          		 INC DE  	;
143)   1526 C9          		 RET	;
148)   1527 11 8A FE    		 LD DE, BUFFER	;
149)   152A AF          		 XOR A	;
150)   152B 12          		 LD (DE), A	;
151)   152C 13          		 INC DE	;
152)   152D 3E 0A       		 LD A, 10        ; 10 SECS	; 10 SECS
153)   152F CD 1F 2B    		 CALL BN2BCD	;
154)   1532 7D          		 LD A, L	;
155)   1533 12          		 LD (DE), A	;
156)   1534 13          		 INC DE	;
157)   1535 3E 22       		 LD A, 34        ; 28 MINS	; 28 MINS
158)   1537 CD 1F 2B    		 CALL BN2BCD	;
159)   153A 7D          		 LD A, L	;
160)   153B 12          		 LD (DE), A	;
161)   153C 13          		 INC DE	;
162)   153D 3E 12       		 LD A, 18        ; 19 HOURS	; 19 HOURS
163)   153F CD 1F 2B    		 CALL BN2BCD	;
164)   1542 7D          		 LD A, L	;
165)   1543 12          		 LD (DE), A	;
166)   1544 13          		 INC DE	;
167)   1545 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
168)   1547 12          		 LD (DE), A	;
169)   1548 13          		 INC DE	;
170)   1549 3E 12       		 LD A, 18        ; 8 DAY	; 8 DAY
171)   154B CD 1F 2B    		 CALL BN2BCD	;
172)   154E 7D          		 LD A, L	;
173)   154F 12          		 LD (DE), A	;
174)   1550 13          		 INC DE	;
175)   1551 3E 02       		 LD A, 02        ; 10 MONTH	; 10 MONTH
176)   1553 CD 1F 2B    		 CALL BN2BCD	;
177)   1556 7D          		 LD A, L	;
178)   1557 12          		 LD (DE), A	;
179)   1558 13          		 INC DE	;
180)   1559 3E 15       		 LD A, 21        ; 21 YEAR (2020)	; 21 YEAR (2020)
181)   155B CD 1F 2B    		 CALL BN2BCD	;
182)   155E 7D          		 LD A, L	;
183)   155F 12          		 LD (DE), A	;
184)   1560 13          		 INC DE	;
185)   1561 AF          		 XOR A	;
186)   1562 12          		 LD (DE), A	;
199)   1563 21 8A FE    		DS1307_ADJUST: LD HL, BUFFER	;
200)   1566 16 68       		 LD D, DS1307_ADDRESS	;
201)   1568 01 09 00    		 LD BC, 9	;
202)   156B CD 61 13    		 CALL I2C_WRITE	;
203)   156E C2 7D 14    		 JP NZ, SHERR0	;
204)   1571 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
205)   1574 CD 9C 2B    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
206)   1577 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
207)   157A CD 9C 2B    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
208)   157D C9          		 RET	;
212)   157E 21 8A FE    		DS1307_SETSQ: LD HL, BUFFER	;
213)   1581 E5          		 PUSH HL	;
214)   1582 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
215)   1584 77          		 LD (HL), A	;
216)   1585 23          		 INC HL	;
217)   1586 7A          		 LD A, D	;
218)   1587 77          		 LD (HL), A	;
219)   1588 E1          		 POP HL	;
220)   1589 16 68       		 LD D, DS1307_ADDRESS	;
221)   158B 01 02 00    		 LD BC, 2	;
222)   158E CD 61 13    		 CALL I2C_WRITE	;
223)   1591 C2 7D 14    		 JP NZ, SHERR0	;
224)   1594 C9          		 RET	;
228)   1595 CD 86 2B    		CONVHL: CALL Bcd2ASC	;
229)   1598 26 00       		 LD H, 0	;
230)   159A C9          		 RET	;
233)   159B 06 07       		CHKERROR: LD B, 7	;
234)   159D 21 8A FE    		 LD HL, BUFFER	;
235)   15A0 7E          		CEAGN: LD A, (HL)	;
236)   15A1 FE FF       		 CP $FF	;
237)   15A3 28 05       		 JR Z, STER	;
238)   15A5 23          		 INC HL	;
239)   15A6 10 F8       		 DJNZ CEAGN	;
240)   15A8 AF          		 XOR A	;
241)   15A9 C9          		 RET	;
244)   15AA 37          		 SCF	;
245)   15AB C9          		 RET	;
250)   15AC CD 9A 14    		DS1307_GETTIME: CALL RST_BUF	;
251)   15AF CD C4 14    		 CALL DS1307_GETNOW	;
252)   15B2 D8          		 RET C         ;ERROR RETURN	;ERROR RETURN
253)   15B3 CD 9B 15    		 CALL CHKERROR	;
254)   15B6 D8          		 RET C         ;ERRREAD  ;IF ERROR DONT PRINT	;ERRREAD  ;IF ERROR DONT PRINT
255)   15B7 DD 21 8A FE 		 LD IX, BUFFER	;
256)   15BB 11 A0 FE    		 LD DE, TIMMSG	;
257)   15BE 26 00       		 LD H, 0	;
258)   15C0 DD 6E 04    		 LD L, (IX + 4)        ;DAY	;DAY
259)   15C3 CD 95 15    		 CALL CONVHL	;
260)   15C6 3E 2F       		 LD A, ' / '	;
261)   15C8 12          		 LD (DE), A	;
262)   15C9 13          		 INC DE	;
263)   15CA DD 6E 05    		 LD L, (IX + 5)        ;MONTH	;MONTH
264)   15CD CD 95 15    		 CALL CONVHL	;
265)   15D0 3E 2F       		 LD A, ' / '	;
266)   15D2 12          		 LD (DE), A	;
267)   15D3 13          		 INC DE	;
268)   15D4 DD 6E 06    		 LD L, (IX + 6)        ;YEAR	;YEAR
269)   15D7 CD 95 15    		 CALL CONVHL	;
270)   15DA 3E 20       		 LD A, ' '	;
271)   15DC 12          		 LD (DE), A	;
272)   15DD 13          		 INC DE	;
273)   15DE DD 6E 02    		 LD L, (IX + 2)        ;HOUR	;HOUR
274)   15E1 CD 95 15    		 CALL CONVHL	;
275)   15E4 3E 3A       		 LD A, ':'	;
276)   15E6 12          		 LD (DE), A	;
277)   15E7 13          		 INC DE	;
278)   15E8 DD 6E 01    		 LD L, (IX + 1)        ;MIN	;MIN
279)   15EB CD 95 15    		 CALL CONVHL	;
280)   15EE 3E 3A       		 LD A, ':'	;
281)   15F0 12          		 LD (DE), A	;
282)   15F1 13          		 INC DE	;
283)   15F2 DD 6E 00    		 LD L, (IX)        ;SECS	;SECS
284)   15F5 CD 95 15    		 CALL CONVHL	;
285)   15F8 13          		 INC DE	;
286)   15F9 AF          		 XOR A	;
287)   15FA 12          		 LD (DE), A	;
288)   15FB C9          		 RET	;
112)   15FC 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
114)   15FE 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
115)   15FF 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
116)   1601 CB E2       		 SET D4, D	;
117)   1603 0F          		LWNXT1: RRCA	;
118)   1604 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
119)   1606 CB EA       		 SET D5, D	;
120)   1608 0F          		LWNXT2: RRCA	;
121)   1609 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
122)   160B CB F2       		 SET D6, D	;
123)   160D 0F          		LWNXT3: RRCA	;
124)   160E 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
125)   1610 CB FA       		 SET D7, D	;
126)   1612 7B          		LWNXT4: LD A, E	;
127)   1613 0F          		 RRCA	;
128)   1614 30 02       		 JR NC, LWNXT5	;
129)   1616 CB C2       		 SET RS, D	;
131)   1618 3A 89 FE    		 LD A,(LCD_STSMASK)       ;ADD THE BACKLIGHT MASKS  	;ADD THE BACKLIGHT MASKS
132)   161B B2          		 OR D	;
133)   161C 57          		 LD D,A	;
135)   161D CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
136)   161F 7A          		 LD A, D	;
137)   1620 CD 2A 16    		 CALL LCD16_I2CSEND	;
138)   1623 CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
139)   1625 7A          		 LD A, D	;
140)   1626 CD 2A 16    		 CALL LCD16_I2CSEND	;
141)   1629 C9          		 RET	;
145)   162A D5          		LCD16_I2CSEND: PUSH DE	;
146)   162B E5          		 PUSH HL	;
147)   162C 21 8A FE    		 LD HL, BUFFER	;
148)   162F 77          		 LD (HL), A	;
149)   1630 16 27       		 LD D, LCDADDR	;
150)   1632 01 01 00    		 LD BC, 1	;
151)   1635 CD 61 13    		 CALL I2C_WRITE	;
152)   1638 E1          		 POP HL	;
153)   1639 D1          		 POP DE	;
154)   163A C9          		 RET	;
157)   163B 1E 00       		LCD16_COMMD: LD E, COMMAND	;
158)   163D 18 02       		 JR LCD16_SEND	;
161)   163F 1E 01       		LCD16_DATA: LD E, LCD_DATA 	;
164)   1641 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
165)   1642 7B          		 LD A, E	;
166)   1643 0F          		 RRCA	;
167)   1644 38 07       		 JR C, ISCMDDATA	;
168)   1646 0F          		 RRCA	;
169)   1647 30 04       		 JR NC, ISCMDDATA	;
171)   1649 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
172)   164B 18 0E       		 JR LCSD_4BIT	;
173)   164D 7A          		ISCMDDATA: LD A, D	;
174)   164E CB 3F       		 SRL A	;
175)   1650 CB 3F       		 SRL A	;
176)   1652 CB 3F       		 SRL A	;
177)   1654 CB 3F       		 SRL A	;
178)   1656 D5          		 PUSH DE	;
179)   1657 CD FC 15    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
180)   165A D1          		 POP DE	;
181)   165B 7A          		LCSD_4BIT: LD A, D	;
182)   165C E6 0F       		 AND $0F	;
183)   165E CD FC 15    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
184)   1661 C9          		 RET	;
186)   1662 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
187)   1664 1E 02       		 LD E, FOUR_BITS	;
188)   1666 CD 41 16    		 CALL LCD16_SEND	;
189)   1669 01 00 30    		 LD BC, $3000	;
190)   166C CD 9C 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
191)   166F 3E 03       		 LD A, 3	;
192)   1671 1E 02       		 LD E, FOUR_BITS	;
193)   1673 CD 41 16    		 CALL LCD16_SEND	;
194)   1676 01 00 30    		 LD BC, $3000	;
195)   1679 CD 9C 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
196)   167C 3E 03       		 LD A, 3	;
197)   167E 1E 02       		 LD E, FOUR_BITS	;
198)   1680 CD 41 16    		 CALL LCD16_SEND	;
199)   1683 01 00 30    		 LD BC, $3000	;
200)   1686 CD 9C 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
201)   1689 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
202)   168B 1E 02       		 LD E, FOUR_BITS	;
203)   168D CD 41 16    		 CALL LCD16_SEND	;
204)   1690 01 00 30    		 LD BC, $3000	;
205)   1693 CD 9C 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
207)   1696 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
208)   1698 CD 3B 16    		 CALL LCD16_COMMD	;
209)   169B 3E 02       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
210)   169D 32 87 FE    		 LD (LCD_DSPCTRL), A	;
211)   16A0 CD C8 16    		 CALL LCD16_DISP	;
212)   16A3 CD E3 16    		 CALL LCD16_CLR	;
213)   16A6 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
214)   16A8 32 88 FE    		 LD (LCD_DSPMODE), A	;
215)   16AB F6 04       		 OR LCD_ENTRYMODESET	;
216)   16AD CD 3B 16    		 CALL LCD16_COMMD	;
217)   16B0 01 00 30    		 LD BC, $3000	;
218)   16B3 CD 9C 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
219)   16B6 CD 66 17    		 CALL LCD16_BKLTON      ;BACKLIGHT ON BY DEFAULT	;BACKLIGHT ON BY DEFAULT
220)   16B9 C9          		 RET	;
222)   16BA 3A 87 FE    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
223)   16BD CB 97       		 RES LCD_DISPLAYON, A	;
224)   16BF 32 87 FE    		 LD (LCD_DSPCTRL), A	;
225)   16C2 F6 08       		 OR LCD_DISPLAYCONTROL	;
226)   16C4 CD 3B 16    		 CALL LCD16_COMMD	;
227)   16C7 C9          		 RET	;
228)   16C8 3A 87 FE    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
229)   16CB CB D7       		 SET LCD_DISPLAYON, A	;
230)   16CD 32 87 FE    		 LD (LCD_DSPCTRL), A	;
231)   16D0 F6 08       		 OR LCD_DISPLAYCONTROL	;
232)   16D2 CD 3B 16    		 CALL LCD16_COMMD	;
233)   16D5 C9          		 RET	;
235)   16D6 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
236)   16D9 C5          		LCLR_AGN1: PUSH BC	;
237)   16DA CD D8 2A    		 CALL DELAYMICRO	;
238)   16DD C1          		 POP BC	;
239)   16DE 0D          		 DEC C	;
240)   16DF E2 D9 16    		 JP PO, LCLR_AGN1	;
241)   16E2 C9          		 RET	;
243)   16E3 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
244)   16E5 CD 3B 16    		 CALL LCD16_COMMD	;
245)   16E8 CD D6 16    		 CALL LCDDELAY	;
246)   16EB C9          		 RET	;
249)   16EC 7E          		@LCD16_PRINT: LD A, (HL)	;
250)   16ED FE 00       		 CP 0	;
251)   16EF C8          		 RET Z	;
252)   16F0 CD 3F 16    		 CALL LCD16_DATA	;
253)   16F3 23          		 INC HL	;
254)   16F4 18 F6       		 JR LCD16_PRINT	;
257)   16F6 CD 3F 16    		@LCD16_PRCHR: CALL LCD16_DATA	;
258)   16F9 C9          		 RET	;
260)   16FA 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
261)   16FC CD 3B 16    		 CALL LCD16_COMMD	;
262)   16FF CD D6 16    		 CALL LCDDELAY	;
263)   1702 C9          		 RET	;
266)   1703 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
267)   1707 06 00       		@LCD16_SETCURS: LD B, 0	;
268)   1709 4B          		 LD C, E	;
269)   170A 21 03 17    		 LD HL, ROWOFFSET	;
270)   170D 09          		 ADD HL, BC	;
271)   170E 7E          		 LD A, (HL)	;
272)   170F 82          		 ADD D	;
273)   1710 F6 80       		 OR LCD_SETDDRAMADDR	;
274)   1712 CD 3B 16    		 CALL LCD16_COMMD	;
275)   1715 C9          		 RET	;
277)   1716 3A 87 FE    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
278)   1719 CB 8F       		 RES LCD_CURSORON, A	;
279)   171B 32 87 FE    		 LD (LCD_DSPCTRL), A	;
280)   171E F6 08       		 OR LCD_DISPLAYCONTROL	;
281)   1720 CD 3B 16    		 CALL LCD16_COMMD	;
282)   1723 C9          		 RET	;
285)   1724 3A 87 FE    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
286)   1727 CB CF       		 SET LCD_CURSORON, A	;
287)   1729 32 87 FE    		 LD (LCD_DSPCTRL), A	;
288)   172C F6 08       		 OR LCD_DISPLAYCONTROL	;
289)   172E CD 3B 16    		 CALL LCD16_COMMD	;
290)   1731 C9          		 RET	;
292)   1732 3A 87 FE    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
293)   1735 CB 87       		 RES LCD_BLINKON, A	;
294)   1737 32 87 FE    		 LD (LCD_DSPCTRL), A	;
295)   173A F6 08       		 OR LCD_DISPLAYCONTROL	;
296)   173C CD 3B 16    		 CALL LCD16_COMMD	;
297)   173F C9          		 RET	;
300)   1740 3A 87 FE    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
301)   1743 CB C7       		 SET LCD_BLINKON, A	;
302)   1745 32 87 FE    		 LD (LCD_DSPCTRL), A	;
303)   1748 F6 08       		 OR LCD_DISPLAYCONTROL	;
304)   174A CD 3B 16    		 CALL LCD16_COMMD	;
305)   174D C9          		 RET	;
307)   174E 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
308)   1750 CD 3B 16    		 CALL LCD16_COMMD	;
309)   1753 C9          		 RET	;
311)   1754 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
312)   1756 CD 3B 16    		 CALL LCD16_COMMD	;
313)   1759 C9          		 RET	;
315)   175A 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
316)   175C CD 3B 16    		 CALL LCD16_COMMD	;
317)   175F C9          		 RET	;
319)   1760 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
320)   1762 CD 3B 16    		 CALL LCD16_COMMD	;
321)   1765 C9          		 RET	;
324)   1766 3E 08       		@LCD16_BKLTON: LD A, BACKLIGHTPINMASK AND LCD_BACKLIGHT	;
325)   1768 32 89 FE    		 LD (LCD_STSMASK),A	;
326)   176B CD 2A 16    		 CALL LCD16_I2CSEND	;
327)   176E C9          		 RET	;
329)   176F 3E 00       		@LCD16_BKLTOFF: LD A, BACKLIGHTPINMASK AND LCD_NOBACKLIGHT	;
330)   1771 32 89 FE    		 LD (LCD_STSMASK),A	;
331)   1774 CD 2A 16    		 CALL LCD16_I2CSEND	;
332)   1777 C9          		 RET	;
 76)   1778 0E 03       		 LD C, 11B        ;HIRES TEXT SCREEN	;HIRES TEXT SCREEN
 77)   177A 3E 04       		 LD A, VGA_NAVY	;
 78)   177C CB 27       		 SLA A	;
 79)   177E CB 27       		 SLA A	;
 80)   1780 CB 27       		 SLA A	;
 81)   1782 CB 27       		 SLA A	;
 82)   1784 06 0F       		 LD B, VGA_WHITE	;
 83)   1786 B0          		 OR B	;
 84)   1787 47          		 LD B, A	;
 85)   1788 CD 16 18    		 CALL VGA_SETCONF	;
 86)   178B C9          		 RET	;
 90)   178C F5          		VGA_SETLOWGR: PUSH AF	;
 91)   178D CD 48 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
 92)   1790 0E 00       		 LD C, 00B        ;LOW RES GRAPH SCREEN	;LOW RES GRAPH SCREEN
 93)   1792 CD 16 18    		 CALL VGA_SETCONF	;
 94)   1795 F1          		 POP AF	;
 95)   1796 C9          		 RET	;
 98)   1797 F5          		VGA_SETLOWTX: PUSH AF	;
 99)   1798 CD 48 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
100)   179B 0E 01       		 LD C, 01B        ;LOW RES TEXT SCREEN	;LOW RES TEXT SCREEN
101)   179D CD 16 18    		 CALL VGA_SETCONF	;
102)   17A0 F1          		 POP AF	;
103)   17A1 C9          		 RET	;
105)   17A2 F5          		VGA_SETHIGR: PUSH AF	;
106)   17A3 CD 48 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
107)   17A6 0E 02       		 LD C, 10B        ;HI RES GRAPH SCREEN	;HI RES GRAPH SCREEN
108)   17A8 CD 16 18    		 CALL VGA_SETCONF	;
109)   17AB F1          		 POP AF	;
110)   17AC C9          		 RET	;
112)   17AD F5          		VGA_SETHITX: PUSH AF	;
113)   17AE CD 48 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
114)   17B1 0E 03       		 LD C, 11B        ;HI RES TEXT SCREEN	;HI RES TEXT SCREEN
115)   17B3 CD 16 18    		 CALL VGA_SETCONF	;
116)   17B6 F1          		 POP AF	;
117)   17B7 C9          		 RET	;
122)   17B8 0F          		VGA_SETVISBUFF: RRCA       ;BIT 1 > BIT 7	;BIT 1 > BIT 7
123)   17B9 E5          		 PUSH HL	;
124)   17BA F5          		 PUSH AF	;
125)   17BB 06 04       		 LD B, 4        ;8000h	;8000h
126)   17BD CD C5 0D    		 CALL GETPGINBANK	;
127)   17C0 E1          		 POP HL        ;H THE BUFFER	;H THE BUFFER
128)   17C1 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
129)   17C2 E5          		 PUSH HL	;
130)   17C3 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
131)   17C5 CD A3 0D    		 CALL PUTPGINBANK	;
132)   17C8 21 F8 1F    		 LD HL, CONFADDR	;
133)   17CB 11 00 80    		 LD DE, $8000	;
134)   17CE B7          		 OR A	;
135)   17CF ED 5A       		 ADC HL, DE	;
136)   17D1 C1          		 POP BC        ;B THE BUFFER 0 OR 1	;B THE BUFFER 0 OR 1
137)   17D2 7E          		 LD A,(HL)	;
138)   17D3 1F          		 RRA	;
139)   17D4 CB 18       		 RR B        ;BIT 0 ON CARRY	;BIT 0 ON CARRY
140)   17D6 17          		 RLA	;
141)   17D7 77          		 LD (HL),A	;
142)   17D8 F1          		 POP AF        ;PREVIOUS PAGE NO	;PREVIOUS PAGE NO
143)   17D9 06 04       		 LD B, 4	;
144)   17DB CD A3 0D    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
145)   17DE E1          		 POP HL	;
146)   17DF C9          		 RET  	;
150)   17E0 E5          		VGA_SWVISBUFF: PUSH HL	;
151)   17E1 06 04       		 LD B, 4        ;8000h	;8000h
152)   17E3 CD C5 0D    		 CALL GETPGINBANK	;
153)   17E6 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
154)   17E7 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
155)   17E9 CD A3 0D    		 CALL PUTPGINBANK	;
156)   17EC 21 F8 1F    		 LD HL, CONFADDR	;
157)   17EF 11 00 80    		 LD DE, $8000	;
158)   17F2 B7          		 OR A	;
159)   17F3 ED 5A       		 ADC HL, DE	;
160)   17F5 7E          		 LD A, (HL)        ;VIDEO CTRL REG1 VIDEO MODE	;VIDEO CTRL REG1 VIDEO MODE
161)   17F6 CB 7F       		 BIT 7,A 	;
162)   17F8 28 04       		 JR Z,VSVB_SETBUF1	;
164)   17FA CB BF       		 RES 7,A	;
165)   17FC 18 02       		 JR VSVB_CONT	;
166)   17FE CB FF       		VSVB_SETBUF1: SET 7,A       ;SET BIT 7	;SET BIT 7
169)   1800 77          		VSVB_CONT: LD (HL),A	;
170)   1801 F1          		 POP AF	;
171)   1802 06 04       		 LD B, 4	;
172)   1804 CD A3 0D    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
173)   1807 E1          		 POP HL	;
174)   1808 C9          		 RET  	;
178)   1809 32 18 FF    		VGA_SETWRKBUFF: LD (VGABUF),A	;
179)   180C C9          		 RET	;
182)   180D 3A 18 FF    		VGA_SWWRKBUFF: LD A,(VGABUF)	;
183)   1810 EE 01       		 XOR 1	;
184)   1812 32 18 FF    		 LD (VGABUF),A	;
185)   1815 C9          		 RET	;
192)   1816 E5          		VGA_SETCONF: PUSH HL	;
193)   1817 C5          		 PUSH BC	;
194)   1818 06 04       		 LD B, 4        ;8000h	;8000h
195)   181A CD C5 0D    		 CALL GETPGINBANK	;
196)   181D C1          		 POP BC	;
197)   181E F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
198)   181F C5          		 PUSH BC        ;SAVE SCREEN CODE	;SAVE SCREEN CODE
199)   1820 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
200)   1822 06 04       		 LD B, 4	;
201)   1824 CD A3 0D    		 CALL PUTPGINBANK	;
202)   1827 C1          		 POP BC	;
203)   1828 79          		 LD A, C	;
204)   1829 21 F8 1F    		 LD HL, CONFADDR	;
205)   182C 11 00 80    		 LD DE, $8000	;
206)   182F B7          		 OR A	;
207)   1830 ED 5A       		 ADC HL, DE	;
208)   1832 77          		 LD (HL), A        ;VIDEO CTRL REG1 VIDEO MODE	;VIDEO CTRL REG1 VIDEO MODE
209)   1833 23          		 INC HL	;
210)   1834 78          		 LD A, B        ;DEFAULT COLORS	;DEFAULT COLORS
211)   1835 77          		 LD (HL), A        ;VIDEO CTRL REG2 VIDEO DEF COLORS	;VIDEO CTRL REG2 VIDEO DEF COLORS
212)   1836 F1          		 POP AF	;
213)   1837 C5          		 PUSH BC	;
214)   1838 06 04       		 LD B, 4	;
215)   183A CD A3 0D    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
216)   183D C1          		 POP BC	;
217)   183E E1          		 POP HL	;
218)   183F 79          		 LD A, C        ;SCREEN MODE	;SCREEN MODE
219)   1840 CB 47       		 BIT 0, A	;
220)   1842 C2 97 19    		 JP NZ, VGA_TXTINIT	;
221)   1845 C3 E3 1B    		 JP VGA_GRPHINIT	;
228)   1848 E5          		VGA_GETCONF: PUSH HL	;
229)   1849 06 04       		 LD B, 4        ;8000h	;8000h
230)   184B CD C5 0D    		 CALL GETPGINBANK	;
231)   184E F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
232)   184F 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
233)   1851 CD A3 0D    		 CALL PUTPGINBANK	;
234)   1854 21 F8 1F    		 LD HL, CONFADDR	;
235)   1857 11 00 80    		 LD DE, $8000	;
236)   185A B7          		 OR A	;
237)   185B ED 5A       		 ADC HL, DE	;
238)   185D 7E          		 LD A, (HL)	;
239)   185E E6 03       		 AND 3        ;KEEP ONLY BITS 0,1	;KEEP ONLY BITS 0,1
240)   1860 4F          		 LD C, A        ;SCREEN MODE	;SCREEN MODE
241)   1861 23          		 INC HL	;
242)   1862 7E          		 LD A, (HL)	;
243)   1863 47          		 LD B, A        ;DEFAULT COLORS	;DEFAULT COLORS
244)   1864 F1          		 POP AF	;
245)   1865 C5          		 PUSH BC	;
246)   1866 06 04       		 LD B, 4	;
247)   1868 CD A3 0D    		 CALL PUTPGINBANK	;
248)   186B C1          		 POP BC	;
249)   186C E1          		 POP HL	;
250)   186D 79          		 LD A, C	;
251)   186E C9          		 RET	;
258)   186F CD 48 18    		VGA_CLRSCR: CALL VGA_GETCONF	;
259)   1872 CB 47       		 BIT 0,A	;
260)   1874 C2 9D 19    		 JP NZ,VGA_TXTCLR	;
261)   1877 C3 6D 1C    		 JP VGA_GRCLS	;
278)   187A F5          		 PUSH AF        ;SAVE FLAGS	;SAVE FLAGS
279)   187B D1          		 POP DE         ;FLAGS ON DE	;FLAGS ON DE
280)   187C FE 1F       		 CP 31	;
281)   187E DC 97 18    		 CALL C, VGA_NOTVISCH	;
282)   1881 28 06       		 JR Z, PRCH_EX        ;EXIT IF CHAR WAS HANDLED	;EXIT IF CHAR WAS HANDLED
283)   1883 CD 8A 18    		 CALL VGA_DOPRNCH       ;PRINT THE CHAR	;PRINT THE CHAR
284)   1886 CD E8 18    		 CALL VGA_TXFORW       ;TEXT FORWARD	;TEXT FORWARD
286)   1889 C9          		 RET	;
291)   188A 67          		VGA_DOPRNCH: LD H, A       ;SAVE A	;SAVE A
292)   188B CD 48 18    		 CALL VGA_GETCONF	;
293)   188E CB 47       		 BIT 0, A	;
294)   1890 7C          		 LD A, H        ;RESTORE A	;RESTORE A
295)   1891 C2 35 1A    		 JP NZ, VGA_DOPRNCHTXT       ;NZ MEANS TEXT	;NZ MEANS TEXT
296)   1894 C3 07 1D    		 JP VGA_DOPRNCHGRP	;
304)   1897 F5          		VGA_NOTVISCH: PUSH AF	;
305)   1898 D5          		 PUSH DE	;
306)   1899 CD A3 1A    		 CALL VGA_RMVCURS      ;REMOVE CURSOR	;REMOVE CURSOR
307)   189C D1          		 POP DE	;
308)   189D F1          		 POP AF	;
309)   189E FE 08       		 CP 8         ;BACKSPACE	;BACKSPACE
310)   18A0 20 18       		 JR NZ, NX1	;
311)   18A2 3A 13 FF    		 LD A, (VGATX_X)	;
312)   18A5 FE 00       		 CP 0         ;COL 0 HAS THE PROMPT	;COL 0 HAS THE PROMPT
313)   18A7 C8          		 RET Z         ;DO NOT PRINT ANYTHING	;DO NOT PRINT ANYTHING
314)   18A8 3D          		 DEC A	;
315)   18A9 32 13 FF    		 LD (VGATX_X), A	;
316)   18AC D5          		 PUSH DE	;
317)   18AD F1          		 POP AF         ;GET FLAGS BACK	;GET FLAGS BACK
318)   18AE 30 1B       		 JR NC, MVLEFT       ;IF C THEN DELETE THE CHAR ON THE LEFT	;IF C THEN DELETE THE CHAR ON THE LEFT
319)   18B0 3E 20       		 LD A, ' '        ;PRINT SPACE	;PRINT SPACE
320)   18B2 32 17 FF    		 LD (VGATMPC),A	;
321)   18B5 CD 8A 18    		 CALL VGA_DOPRNCH       ;	;
322)   18B8 AF          		 XOR A         ;CLEAR ZERO	;CLEAR ZERO
323)   18B9 C9          		 RET	;
324)   18BA FE 0A       		NX1: CP 10         ;JUST IGNORE IT	;JUST IGNORE IT
325)   18BC C8          		 RET Z	;
326)   18BD FE 0D       		 CP 13         ;CR =NEW LINE	;CR =NEW LINE
327)   18BF 20 11       		 JR NZ, NX2	;
328)   18C1 CD A3 1A    		 CALL VGA_RMVCURS	;
329)   18C4 CD FB 18    		 CALL VGDOY        ;ADD 1 TO TY	;ADD 1 TO TY
330)   18C7 32 13 FF    		 LD (VGATX_X), A       ;ZF IS SET	;ZF IS SET
331)   18CA C9          		 RET	;
332)   18CB CD 66 1A    		MVLEFT: CALL VGA_GETCHAR	;
333)   18CE 7A          		 LD A, D	;
334)   18CF 32 17 FF    		 LD (VGATMPC),A	;
335)   18D2 AF          		NX2: XOR A         ;NC MEANS WE DON'T PRINT	;NC MEANS WE DON'T PRINT
336)   18D3 C9          		 RET	;
340)   18D4 CD 1C 19    		VGA_PRINT: CALL VGA_GETPAGE	;
341)   18D7 7E          		VGAP_AGN: LD A, (HL)	;
342)   18D8 FE 00       		 CP 0	;
343)   18DA 28 08       		 JR Z, VGAP_EX	;
344)   18DC E5          		 PUSH HL	;
345)   18DD CD 7A 18    		 CALL VGA_PRCH	;
346)   18E0 E1          		 POP HL	;
347)   18E1 23          		 INC HL	;
348)   18E2 18 F3       		 JR VGAP_AGN	;
349)   18E4 CD 3E 19    		VGAP_EX: CALL VGA_RMVPAGE	;
350)   18E7 C9          		 RET	;
353)   18E8 F5          		VGA_TXFORW: PUSH AF	;
354)   18E9 E5          		 PUSH HL	;
355)   18EA 21 15 FF    		 LD HL, VGAMAXX	;
356)   18ED 3A 13 FF    		 LD A, (VGATX_X)	;
357)   18F0 3C          		 INC A	;
358)   18F1 BE          		 CP (HL)	;
359)   18F2 CC FB 18    		 CALL Z, VGDOY	;
360)   18F5 32 13 FF    		 LD (VGATX_X), A	;
361)   18F8 E1          		 POP HL	;
362)   18F9 F1          		 POP AF	;
363)   18FA C9          		 RET	;
364)   18FB 21 16 FF    		VGDOY: LD HL, VGAMAXY	;
365)   18FE 3A 14 FF    		 LD A, (VGATX_Y)	;
366)   1901 3C          		 INC A	;
367)   1902 BE          		 CP (HL)	;
368)   1903 CC 0B 19    		 CALL Z, DOSCRL	;
369)   1906 32 14 FF    		 LD (VGATX_Y), A	;
370)   1909 AF          		 XOR A	;
371)   190A C9          		 RET	;
373)   190B CD 48 18    		DOSCRL: CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
374)   190E CB 47       		 BIT 0, A	;
375)   1910 CA 0A 1D    		 JP Z, DOSCRLGR	;
376)   1913 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
377)   1915 CC 23 1B    		 CALL Z, DOSCRL_COL       ;SCROLL COLORS IF BIT 1=0	;SCROLL COLORS IF BIT 1=0
378)   1918 CD ED 1A    		 CALL DOSCRL_TXT       ;SCROLL TEXT	;SCROLL TEXT
379)   191B C9          		 RET	;
389)   191C 3A 0D FF    		VGA_GETPAGE: LD A, (PGSEM)	;
390)   191F 3C          		 INC A	;
391)   1920 32 0D FF    		 LD (PGSEM), A	;
392)   1923 FE 01       		 CP 1	;
393)   1925 C0          		 RET NZ	;
394)   1926 E5          		 PUSH HL	;
395)   1927 06 04       		 LD B, 4        ;8000h	;8000h
396)   1929 CD C5 0D    		 CALL GETPGINBANK	;
397)   192C 32 09 FF    		 LD (TMPG), A        ;SAVE OLD PAGE	;SAVE OLD PAGE
398)   192F 3A 18 FF    		 LD A,(VGABUF)	;
399)   1932 1F          		 RRA         ;PUT BIT 0 ON CARRY FLAG	;PUT BIT 0 ON CARRY FLAG
400)   1933 3E 08       		 LD A, 8        ;PAGE 8  IS BUFFER 0	;PAGE 8  IS BUFFER 0
401)   1935 30 02       		 JR NC, VGP_SETPG	;
402)   1937 3E 0C       		 LD A, 12        ;PAGE 12 IS BUFFER 1	;PAGE 12 IS BUFFER 1
403)   1939 CD A3 0D    		VGP_SETPG: CALL PUTPGINBANK	;
404)   193C E1          		 POP HL	;
405)   193D C9          		 RET	;
409)   193E 3A 0D FF    		VGA_RMVPAGE: LD A, (PGSEM)	;
410)   1941 3D          		 DEC A	;
411)   1942 32 0D FF    		 LD (PGSEM), A	;
412)   1945 FE 00       		 CP 0	;
413)   1947 C0          		 RET NZ	;
414)   1948 E5          		 PUSH HL	;
415)   1949 06 04       		 LD B, 4	;
416)   194B 3A 09 FF    		 LD A, (TMPG)	;
417)   194E CD A3 0D    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
418)   1951 E1          		 POP HL	;
419)   1952 C9          		 RET	;
421)   1953 CD 1C 19    		VGA_SETFONT: CALL VGA_GETPAGE	;
422)   1956 21 00 36    		 LD HL, FONT_ADDR	;
423)   1959 11 00 90    		 LD DE, $9000        ;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000	;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000
424)   195C 01 00 0A    		 LD BC, 2560	;
425)   195F ED B0       		 LDIR         ;TRANSFER	;TRANSFER
426)   1961 CD 3E 19    		 CALL VGA_RMVPAGE	;
427)   1964 C9          		 RET	;
430)   1965 79          		VGA_SETMAXS: LD A, C	;
431)   1966 16 28       		 LD D, 40	;
432)   1968 1E 14       		 LD E, 20	;
433)   196A CB 4F       		 BIT 1,A        ;LOW RES MODE	;LOW RES MODE
434)   196C 28 04       		 JR Z, VGSM_NX	;
436)   196E 16 50       		 LD D, 80	;
437)   1970 1E 28       		 LD E, 40	;
438)   1972 7A          		VGSM_NX: LD A, D	;
439)   1973 32 15 FF    		 LD (VGAMAXX), A	;
440)   1976 7B          		 LD A, E	;
441)   1977 32 16 FF    		 LD (VGAMAXY), A	;
442)   197A C9          		 RET	;
445)   197B AF          		VGA_SETSCRDEFS: XOR A	;
446)   197C 32 0D FF    		 LD (PGSEM), A	;
447)   197F 32 09 FF    		 LD (TMPG), A	;
448)   1982 3E 0B       		 LD A, VGA_YELLOW	;
449)   1984 32 11 FF    		 LD (VGAFCOL), A	;
450)   1987 3E 04       		 LD A, VGA_NAVY	;
451)   1989 32 12 FF    		 LD (VGABCOL), A	;
452)   198C CD 65 19    		 CALL VGA_SETMAXS	;
453)   198F AF          		 XOR A	;
454)   1990 32 13 FF    		 LD (VGATX_X), A	;
455)   1993 32 14 FF    		 LD (VGATX_Y), A	;
456)   1996 C9          		 RET	;
458)   1997 CD 7B 19    		VGA_TXTINIT: CALL VGA_SETSCRDEFS	;
459)   199A CD 53 19    		 CALL VGA_SETFONT       ;SET THE FONT ON VIDEO MEM	;SET THE FONT ON VIDEO MEM
462)   199D 3A 15 FF    		VGA_TXTCLR: LD A, (VGAMAXX)	;
463)   19A0 67          		 LD H, A	;
464)   19A1 3A 16 FF    		 LD A, (VGAMAXY)	;
465)   19A4 5F          		 LD E, A	;
466)   19A5 CD F3 2C    		 CALL MULT8	;
467)   19A8 E5          		 PUSH HL	;
468)   19A9 CD 1C 19    		 CALL VGA_GETPAGE	;
469)   19AC CD 48 18    		 CALL VGA_GETCONF	;
470)   19AF C1          		 POP BC         ;TOTAL BYTES	;TOTAL BYTES
471)   19B0 CB 4F       		 BIT 1, A	;
472)   19B2 28 0E       		 JR Z, ISLOWRES	;
474)   19B4 21 00 80    		 LD HL, $8000	;
475)   19B7 3E 20       		 LD A, 32	;
476)   19B9 77          		 LD (HL), A	;
477)   19BA 11 01 80    		 LD DE, $8001	;
478)   19BD ED B0       		 LDIR	;
479)   19BF C3 E7 19    		 JP VGAC_EXIT	;
481)   19C2 21 00 80    		ISLOWRES: LD HL, $8000       ;BANK4	;BANK4
482)   19C5 11 00 84    		 LD DE, $8400        ;COLOR INFO	;COLOR INFO
483)   19C8 C3 D7 19    		 JP VGAC_AGN	;
488)   19CB CD 1C 19    		VGA_CLR: CALL VGA_GETPAGE	;
489)   19CE 01 20 03    		 LD BC, 800	;
490)   19D1 21 00 80    		 LD HL, $8000        ;DEL CHARS	;DEL CHARS
491)   19D4 11 00 84    		 LD DE, $8400	;
494)   19D7 3E 20       		VGAC_AGN: LD A, 32	;
495)   19D9 77          		 LD (HL), A	;
496)   19DA C5          		 PUSH BC	;
497)   19DB CD FC 19    		 CALL VGA_GETCOL	;
498)   19DE C1          		 POP BC	;
499)   19DF 12          		 LD (DE), A	;
500)   19E0 23          		 INC HL	;
501)   19E1 13          		 INC DE	;
502)   19E2 0B          		 DEC BC	;
503)   19E3 78          		 LD A, B	;
504)   19E4 B1          		 OR C	;
505)   19E5 20 F0       		 JR NZ, VGAC_AGN	;
506)   19E7 AF          		VGAC_EXIT: XOR A	;
507)   19E8 32 13 FF    		 LD (VGATX_X), A	;
508)   19EB 32 14 FF    		 LD (VGATX_Y), A	;
509)   19EE CD 3E 19    		 CALL VGA_RMVPAGE	;
510)   19F1 C9          		 RET	;
514)   19F2 CB 20       		VGA_MIXCOLOR: SLA B	;
515)   19F4 CB 20       		 SLA B	;
516)   19F6 CB 20       		 SLA B	;
517)   19F8 CB 20       		 SLA B	;
518)   19FA B0          		 OR B         ;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR	;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR
519)   19FB C9          		 RET	;
523)   19FC 3A 12 FF    		VGA_GETCOL: LD A, (VGABCOL)      ;GET COLOR INFO	;GET COLOR INFO
524)   19FF 47          		 LD B, A	;
525)   1A00 3A 11 FF    		 LD A, (VGAFCOL)	;
526)   1A03 CD F2 19    		 CALL VGA_MIXCOLOR	;
527)   1A06 C9          		 RET	;
531)   1A07 F5          		VGA_SETCOL: PUSH AF	;
532)   1A08 E6 0F       		 AND $0F	;
533)   1A0A 32 11 FF    		 LD (VGAFCOL), A       ;SET COLOR INFO	;SET COLOR INFO
534)   1A0D F1          		 POP AF	;
535)   1A0E CB 27       		 SLA A	;
536)   1A10 CB 27       		 SLA A	;
537)   1A12 CB 27       		 SLA A	;
538)   1A14 CB 27       		 SLA A	;
539)   1A16 E6 0F       		 AND $0F	;
540)   1A18 32 12 FF    		 LD (VGABCOL), A       ;SET BACK COLOR	;SET BACK COLOR
541)   1A1B C9          		 RET	;
548)   1A1C F5          		VGA_CALC_VIDAD: PUSH AF	;
549)   1A1D 3A 14 FF    		 LD A, (VGATX_Y)	;
550)   1A20 67          		 LD H, A 	;
551)   1A21 3A 15 FF    		 LD A, (VGAMAXX)	;
552)   1A24 5F          		 LD E, A  	;
553)   1A25 CD F3 2C    		 CALL Mult8	;
554)   1A28 11 00 80    		 LD DE, $8000	;
555)   1A2B 19          		 ADD HL,DE	;
557)   1A2C 16 00       		 LD D, 0	;
558)   1A2E 3A 13 FF    		 LD A, (VGATX_X)	;
559)   1A31 5F          		 LD E, A	;
560)   1A32 19          		 ADD HL, DE	;
561)   1A33 F1          		 POP AF	;
562)   1A34 C9          		 RET	;
566)   1A35 E5          		VGA_DOPRNCHTXT: PUSH HL	;
567)   1A36 F5          		 PUSH AF	;
568)   1A37 CD 1C 19    		 CALL VGA_GETPAGE	;
569)   1A3A CD 1C 1A    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
570)   1A3D F1          		 POP AF	;
571)   1A3E 77          		 LD (HL), A        ;PUT CHAR ON SCREEN	;PUT CHAR ON SCREEN
572)   1A3F E5          		 PUSH HL	;
573)   1A40 CD 48 18    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
574)   1A43 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
575)   1A45 E1          		 POP HL	;
576)   1A46 20 08       		 JR NZ, DPC_EX	;
577)   1A48 11 00 04    		 LD DE, $400	;
578)   1A4B 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
579)   1A4C CD FC 19    		 CALL VGA_GETCOL       ;GET CURRENT COLOR	;GET CURRENT COLOR
580)   1A4F 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
581)   1A50 E1          		DPC_EX: POP HL	;
582)   1A51 CD 3E 19    		 CALL VGA_RMVPAGE	;
583)   1A54 C9          		 RET	;
587)   1A55 F5          		VGA_DOCHCLR: PUSH AF	;
588)   1A56 CD 1C 19    		 CALL VGA_GETPAGE	;
589)   1A59 CD 1C 1A    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
590)   1A5C 11 00 04    		 LD DE, $400	;
591)   1A5F 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
592)   1A60 F1          		 POP AF	;
593)   1A61 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
594)   1A62 CD 3E 19    		 CALL VGA_RMVPAGE	;
595)   1A65 C9          		 RET	;
598)   1A66 CD 48 18    		VGA_GETCHAR: CALL VGA_GETCONF      ;GET SCREEEN MODE	;GET SCREEEN MODE
599)   1A69 CB 47       		 BIT 0,A	;
600)   1A6B 20 07       		 JR NZ,GC_DOIT       ;IF TEXT DOIT	;IF TEXT DOIT
602)   1A6D 16 93       		 LD D,  147 ;' '	;' '
603)   1A6F 3A 12 FF    		 LD A,(VGABCOL)	;
604)   1A72 5F          		 LD E,A	;
605)   1A73 C9          		 RET	;
606)   1A74 CD 1C 19    		GC_DOIT: CALL VGA_GETPAGE	;
607)   1A77 CD 1C 1A    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDR ON HL	;CALC VIDEO ADDR ON HL
608)   1A7A 7E          		 LD A, (HL)	;
609)   1A7B F5          		 PUSH AF	;
610)   1A7C CD 48 18    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
611)   1A7F FE 03       		 CP 3  ;TEXT HI      ; CHECK IF HIRES SO NO COLOR INFO	;TEXT HI      ; CHECK IF HIRES SO NO COLOR INFO
612)   1A81 D1          		 POP DE        ;AF ON DE TO PRESERVE FLAG  	;AF ON DE TO PRESERVE FLAG
613)   1A82 28 0A       		 JR Z, GC_NOCOL	;
614)   1A84 7A          		 LD A, D	;
615)   1A85 11 00 04    		 LD DE, $400  ;TEXT LOW	;TEXT LOW
616)   1A88 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
617)   1A89 57          		 LD D, A        ;THE CHAR	;THE CHAR
618)   1A8A 7E          		 LD A, (HL)       ;THE COLOR	;THE COLOR
619)   1A8B 5F          		 LD E, A	;
620)   1A8C 18 02       		 JR GC_EX	;
622)   1A8E 1E 00       		 LD E, 0	;
623)   1A90 62          		GC_EX: LD H,D	;
624)   1A91 6B          		 LD L,E	;
625)   1A92 CD 3E 19    		 CALL VGA_RMVPAGE	;
626)   1A95 54          		 LD D,H	;
627)   1A96 5D          		 LD E,L	;
628)   1A97 C9          		 RET	;
631)   1A98 BB          		VGA_REVRCOLRS: CP E	;
632)   1A99 C8          		 RET Z	;
633)   1A9A 7B          		 LD A, E	;
634)   1A9B 0F          		 RRCA         ;CHANGE FORE AND BACK COLOR INFO	;CHANGE FORE AND BACK COLOR INFO
635)   1A9C 0F          		 RRCA	;
636)   1A9D 0F          		 RRCA	;
637)   1A9E 0F          		 RRCA	;
638)   1A9F CD 55 1A    		 CALL VGA_DOCHCLR     ;CHANGE THE COLOR OF THE CHAR	;CHANGE THE COLOR OF THE CHAR
639)   1AA2 C9          		 RET	;
641)   1AA3 CD 48 18    		VGA_RMVCURS: CALL VGA_GETCONF      ;GET SCREEEN MODE	;GET SCREEEN MODE
642)   1AA6 CB 47       		 BIT 0,A	;
643)   1AA8 28 04       		 JR Z, RC_GR       ;IF GRAPHICS	;IF GRAPHICS
644)   1AAA CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
645)   1AAC 28 05       		 JR Z, RC_LOW	;
646)   1AAE 3A 17 FF    		RC_GR: LD A, (VGATMPC)	;
647)   1AB1 18 0A       		 JR RC_EX	;
648)   1AB3 CD 66 1A    		RC_LOW: CALL VGA_GETCHAR      ;GET CURRENT COLORS	;GET CURRENT COLORS
649)   1AB6 CD FC 19    		 CALL VGA_GETCOL       ;GET DEFAULT COLORS	;GET DEFAULT COLORS
650)   1AB9 CD 98 1A    		 CALL VGA_REVRCOLRS      ;REVERSE IF NECESSARY	;REVERSE IF NECESSARY
651)   1ABC C9          		 RET	;
652)   1ABD CD 8A 18    		RC_EX: CALL VGA_DOPRNCH	;
653)   1AC0 C9          		 RET	;
654)   1AC1 CD 66 1A    		VGA_PRNCURS: CALL VGA_GETCHAR      ; E HAS THE COLOR INFO	; E HAS THE COLOR INFO
655)   1AC4 D5          		 PUSH DE	;
656)   1AC5 CD 48 18    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
657)   1AC8 D1          		 POP DE	;
658)   1AC9 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO  	; CHECK IF HIRES SO NO COLOR INFO
659)   1ACB 20 13       		 JR NZ, PC_NOCOL	;
660)   1ACD CB 47       		 BIT 0,A        ;CHECK IF GRAPH SO NO TEXT COLOR INFO	;CHECK IF GRAPH SO NO TEXT COLOR INFO
661)   1ACF 28 0B       		 JR Z, PC_LORESGR	;
662)   1AD1 CD FC 19    		 CALL VGA_GETCOL       ;GET CURRENT COLORS	;GET CURRENT COLORS
663)   1AD4 0F          		 RRCA        ;REVERSE BACK & FORE	;REVERSE BACK & FORE
664)   1AD5 0F          		 RRCA	;
665)   1AD6 0F          		 RRCA	;
666)   1AD7 0F          		 RRCA	;
667)   1AD8 CD 98 1A    		 CALL VGA_REVRCOLRS      ;LOWRES TEXT REVERSE COLORS	;LOWRES TEXT REVERSE COLORS
668)   1ADB C9          		 RET	;
669)   1ADC 3E 93       		PC_LORESGR: LD A, VGA_CURSCHAR	;
670)   1ADE 18 09       		 JR PC_EX	;
671)   1AE0 7A          		PC_NOCOL: LD A,D	;
672)   1AE1 FE 93       		 CP VGA_CURSCHAR	;
673)   1AE3 C8          		 RET Z        ;ALREADY PRINTED	;ALREADY PRINTED
674)   1AE4 32 17 FF    		 LD (VGATMPC), A	;
675)   1AE7 3E 93       		 LD A, VGA_CURSCHAR        ;'_'	;'_'
676)   1AE9 CD 8A 18    		PC_EX: CALL VGA_DOPRNCH  	;
677)   1AEC C9          		 RET	;
682)   1AED CD 1C 19    		DOSCRL_TXT: CALL VGA_GETPAGE	;
683)   1AF0 3A 15 FF    		 LD A, (VGAMAXX)	;
684)   1AF3 26 00       		 LD H, 0	;
685)   1AF5 6F          		 LD L, A	;
686)   1AF6 11 00 80    		 LD DE, $8000	;
687)   1AF9 19          		 ADD HL, DE	;
689)   1AFA E5          		 PUSH HL	;
690)   1AFB D5          		 PUSH DE	;
692)   1AFC 67          		 LD H, A	;
693)   1AFD 3A 16 FF    		 LD A, (VGAMAXY)	;
694)   1B00 3D          		 DEC A	;
695)   1B01 5F          		 LD E, A	;
696)   1B02 CD F3 2C    		 CALL Mult8	;
697)   1B05 44          		 LD B, H	;
698)   1B06 4D          		 LD C, L	;
699)   1B07 D1          		 POP DE	;
700)   1B08 E1          		 POP HL	;
701)   1B09 C5          		 PUSH BC	;
702)   1B0A ED B0       		 LDIR         ;SCROLL UP 39 LINES	;SCROLL UP 39 LINES
703)   1B0C D1          		 POP DE        ;DE = BC	;DE = BC
704)   1B0D 21 00 80    		 LD HL, $8000	;
705)   1B10 19          		 ADD HL, DE        ;LINE 39 OR 19 ADDRESS TO BE CLEARED (0-39) (0-19)	;LINE 39 OR 19 ADDRESS TO BE CLEARED (0-39) (0-19)
706)   1B11 3A 15 FF    		 LD A, (VGAMAXX)       ;80 OR 40	;80 OR 40
707)   1B14 47          		 LD B, A	;
708)   1B15 3E 20       		 LD A, 32	;
709)   1B17 77          		DST_AGN: LD (HL), A	;
710)   1B18 23          		 INC HL	;
711)   1B19 10 FC       		 DJNZ DST_AGN	;
712)   1B1B CD 3E 19    		 CALL VGA_RMVPAGE	;
713)   1B1E 3A 16 FF    		 LD A, (VGAMAXY)	;
714)   1B21 3D          		 DEC A	;
715)   1B22 C9          		 RET	;
717)   1B23 CD 1C 19    		DOSCRL_COL: CALL VGA_GETPAGE	;
718)   1B26 21 28 84    		 LD HL, $8428        ;LINE 1	;LINE 1
719)   1B29 11 00 84    		 LD DE, $8400        ;LINE 0	;LINE 0
720)   1B2C 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
721)   1B2F ED B0       		 LDIR	;
722)   1B31 CD FC 19    		 CALL VGA_GETCOL       ;SET DEFAULT COLOR	;SET DEFAULT COLOR
723)   1B34 21 F8 86    		 LD HL, $86F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
724)   1B37 06 28       		 LD B, 40	;
725)   1B39 77          		DOS_AGNCL: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
726)   1B3A 23          		 INC HL	;
727)   1B3B 10 FC       		 DJNZ DOS_AGNCL	;
728)   1B3D CD 3E 19    		 CALL VGA_RMVPAGE	;
729)   1B40 C9          		 RET	;
739)   1B41 3A 0D FF    		 LD A, (PGSEM)	;
740)   1B44 3C          		 INC A	;
741)   1B45 32 0D FF    		 LD (PGSEM), A	;
742)   1B48 FE 01       		 CP 1	;
743)   1B4A C0          		 RET NZ	;
744)   1B4B E5          		 PUSH HL	;
745)   1B4C 06 02       		 LD B, 2        ;4000h	;4000h
746)   1B4E CD C5 0D    		 CALL GETPGINBANK	;
747)   1B51 32 09 FF    		 LD (TMPG), A	;
748)   1B54 06 03       		 LD B, 3        ;6000h	;6000h
749)   1B56 CD C5 0D    		 CALL GETPGINBANK	;
750)   1B59 32 0A FF    		 LD (TMPG + 1), A	;
751)   1B5C 3A 18 FF    		 LD A,(VGABUF)	;
752)   1B5F 1F          		 RRA        ;PUT SCREEN BUF ON CARRY FLAG	;PUT SCREEN BUF ON CARRY FLAG
753)   1B60 38 10       		 JR C,VSPL_SETBUFONE	;
755)   1B62 3E 08       		 LD A, 8	;
756)   1B64 06 02       		 LD B, 2	;
757)   1B66 CD A3 0D    		 CALL PUTPGINBANK	;
759)   1B69 3E 09       		 LD A, 9	;
760)   1B6B 06 03       		 LD B, 3	;
761)   1B6D CD A3 0D    		 CALL PUTPGINBANK	;
762)   1B70 E1          		 POP HL	;
763)   1B71 C9          		 RET	;
765)   1B72 3E 0C       		 LD A, 12	;
766)   1B74 06 02       		 LD B, 2	;
767)   1B76 CD A3 0D    		 CALL PUTPGINBANK	;
769)   1B79 3E 0D       		 LD A, 13	;
770)   1B7B 06 03       		 LD B, 3	;
771)   1B7D CD A3 0D    		 CALL PUTPGINBANK	;
772)   1B80 E1          		 POP HL	;
773)   1B81 C9          		 RET	;
780)   1B82 3A 0D FF    		 LD A, (PGSEM)	;
781)   1B85 3C          		 INC A	;
782)   1B86 32 0D FF    		 LD (PGSEM), A	;
783)   1B89 FE 01       		 CP 1	;
784)   1B8B C0          		 RET NZ	;
785)   1B8C E5          		 PUSH HL	;
786)   1B8D 06 02       		 LD B, 2        ;4000h	;4000h
787)   1B8F CD C5 0D    		 CALL GETPGINBANK	;
788)   1B92 32 09 FF    		 LD (TMPG), A	;
789)   1B95 06 03       		 LD B, 3        ;6000h	;6000h
790)   1B97 CD C5 0D    		 CALL GETPGINBANK	;
791)   1B9A 32 0A FF    		 LD (TMPG + 1), A	;
792)   1B9D 3A 18 FF    		 LD A,(VGABUF)	;
793)   1BA0 1F          		 RRA        ;PUT SCREEN BUF ON CARRY FLAG	;PUT SCREEN BUF ON CARRY FLAG
794)   1BA1 38 10       		 JR C,VSPH_SETBUFONE	;
796)   1BA3 3E 0A       		 LD A, 10	;
797)   1BA5 06 02       		 LD B, 2	;
798)   1BA7 CD A3 0D    		 CALL PUTPGINBANK	;
800)   1BAA 3E 0B       		 LD A, 11	;
801)   1BAC 06 03       		 LD B, 3	;
802)   1BAE CD A3 0D    		 CALL PUTPGINBANK	;
803)   1BB1 E1          		 POP HL	;
804)   1BB2 C9          		 RET	;
806)   1BB3 3E 0E       		 LD A, 14	;
807)   1BB5 06 02       		 LD B, 2	;
808)   1BB7 CD A3 0D    		 CALL PUTPGINBANK	;
810)   1BBA 3E 0F       		 LD A, 15	;
811)   1BBC 06 03       		 LD B, 3	;
812)   1BBE CD A3 0D    		 CALL PUTPGINBANK	;
813)   1BC1 E1          		 POP HL	;
814)   1BC2 C9          		 RET	;
819)   1BC3 3A 0D FF    		VGA_RMVGRPG: LD A, (PGSEM)	;
820)   1BC6 FE 00       		 CP 0	;
821)   1BC8 C8          		 RET Z	;
822)   1BC9 3D          		 DEC A	;
823)   1BCA 32 0D FF    		 LD (PGSEM), A	;
824)   1BCD FE 00       		 CP 0	;
825)   1BCF C0          		 RET NZ	;
826)   1BD0 E5          		 PUSH HL	;
827)   1BD1 06 02       		 LD B, 2	;
828)   1BD3 3A 09 FF    		 LD A, (TMPG)	;
829)   1BD6 CD A3 0D    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
830)   1BD9 06 03       		 LD B, 3	;
831)   1BDB 3A 0A FF    		 LD A, (TMPG + 1)	;
832)   1BDE CD A3 0D    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
833)   1BE1 E1          		 POP HL	;
834)   1BE2 C9          		 RET	;
837)   1BE3 CD 7B 19    		VGA_GRPHINIT: CALL VGA_SETSCRDEFS     ;SET SCREEN DEFAULTS	;SET SCREEN DEFAULTS
838)   1BE6 CD 6D 1C    		 CALL VGA_GRCLS	;
839)   1BE9 AF          		 XOR A	;
840)   1BEA C9          		 RET	;
846)   1BEB F5          		VGA_CHECKXY32: PUSH AF	;
847)   1BEC E5          		 PUSH HL	;
848)   1BED D5          		 PUSH DE	;
849)   1BEE B7          		 OR A	;
850)   1BEF 11 40 01    		 LD DE, 320	;
851)   1BF2 ED 52       		 SBC HL, DE	;
852)   1BF4 30 0F       		 JR NC, CXY3_ABEX	;
853)   1BF6 D1          		 POP DE	;
854)   1BF7 D5          		 PUSH DE	;
855)   1BF8 EB          		 EX DE, HL	;
856)   1BF9 11 C8 00    		 LD DE, 200	;
857)   1BFC ED 52       		 SBC HL, DE	;
858)   1BFE 30 05       		 JR NC, CXY3_ABEX	;
859)   1C00 D1          		 POP DE	;
860)   1C01 E1          		 POP HL	;
861)   1C02 F1          		 POP AF	;
862)   1C03 37          		 SCF         ;RETURN WITH C SET	;RETURN WITH C SET
863)   1C04 C9          		 RET	;
865)   1C05 D1          		CXY3_ABEX: POP DE        	;
866)   1C06 E1          		 POP HL	;
867)   1C07 F1          		 POP AF	;
868)   1C08 B7          		 OR A	;
869)   1C09 C9          		 RET         ;RETURN WITH NC  	;RETURN WITH NC
875)   1C0A CD EB 1B    		VGA_PLTPXL32: CALL VGA_CHECKXY32     ;CHECK BOUNDS	;CHECK BOUNDS
876)   1C0D D0          		 RET NC	;
877)   1C0E E5          		 PUSH HL        ;CHECK BOUNDS	;CHECK BOUNDS
878)   1C0F F5          		 PUSH AF	;
879)   1C10 7B          		 LD A, E	;
880)   1C11 FE 66       		 CP 102	;
881)   1C13 38 27       		 JR C, PPNXT0        ;LESS THAN 102	;LESS THAN 102
882)   1C15 20 16       		 JR NZ, NXTBNK        ;MORE THAN 102	;MORE THAN 102
883)   1C17 E5          		 PUSH HL        ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES	;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
884)   1C18 01 80 00    		 LD BC, 128	;
885)   1C1B B7          		 OR A	;
886)   1C1C ED 42       		 SBC HL, BC	;
887)   1C1E 47          		 LD B, A	;
888)   1C1F 7C          		 LD A, H	;
889)   1C20 B7          		 OR A         ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128	; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
890)   1C21 78          		 LD A, B	;
891)   1C22 E1          		 POP HL	;
892)   1C23 20 17       		 JR NZ, PPNXT0	;
894)   1C25 3E 67       		 LD A, 103        ;WE ARE AT LINE ZERO ON 2ND BANK	;WE ARE AT LINE ZERO ON 2ND BANK
895)   1C27 11 40 01    		 LD DE, 129 + 191	;
896)   1C2A B7          		 OR A	;
897)   1C2B ED 52       		 SBC HL, DE        ;	;
898)   1C2D D6 67       		NXTBNK: SUB 103        ;SKIP 102 ROWS	;SKIP 102 ROWS
899)   1C2F 11 C0 00    		 LD DE, 192        ;320-128	;320-128
900)   1C32 B7          		 OR A	;
901)   1C33 ED 5A       		 ADC HL, DE	;
902)   1C35 F5          		 PUSH AF	;
904)   1C36 CD 82 1B    		 CALL VGA_SETGRPGHI	;
906)   1C39 F1          		 POP AF         ;A HAS THE ROWS ON 2ND 16K	;A HAS THE ROWS ON 2ND 16K
907)   1C3A 18 05       		 JR PPNXT1	;
908)   1C3C F5          		PPNXT0: PUSH AF        ;A=E=ROW=Y	;A=E=ROW=Y
909)   1C3D CD 41 1B    		 CALL VGA_SETGRPGLO	;
910)   1C40 F1          		 POP AF	;
911)   1C41 11 00 40    		PPNXT1: LD DE, BASEADDR	;
913)   1C44 CB 3C       		 SRL H	;
914)   1C46 CB 1D       		 RR L	;
915)   1C48 19          		 ADD HL, DE        ;FIND COLUMN	;FIND COLUMN
916)   1C49 E5          		 PUSH HL	;
917)   1C4A 11 A0 00    		 LD DE, 160	;
919)   1C4D CD FF 2C    		 CALL Mult12	;
920)   1C50 D1          		 POP DE	;
921)   1C51 19          		 ADD HL, DE	;
922)   1C52 C1          		DOPLOTPX: POP BC        ;B HAS THE COLOR	;B HAS THE COLOR
923)   1C53 D1          		 POP DE         ;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL
924)   1C54 7E          		 LD A, (HL)        ;GET PIXEL BYTE	;GET PIXEL BYTE
925)   1C55 CB 43       		 BIT 0, E        ;CHECK X IS EVEN OR ODD	;CHECK X IS EVEN OR ODD
926)   1C57 28 04       		 JR Z, DOEVEN        ;EVEN	;EVEN
928)   1C59 E6 F0       		 AND $F0        ;CLEAR RIGHT 4 BITS	;CLEAR RIGHT 4 BITS
929)   1C5B 18 0A       		 JR DPEXIT	;
931)   1C5D CB 00       		DOEVEN: RLC B	;
932)   1C5F CB 00       		 RLC B	;
933)   1C61 CB 00       		 RLC B	;
934)   1C63 CB 00       		 RLC B	;
935)   1C65 E6 0F       		 AND $0F        ;ZERO LEFT	;ZERO LEFT
936)   1C67 B0          		DPEXIT: OR B         ;MIX PIXELS	;MIX PIXELS
937)   1C68 77          		 LD (HL), A	;
938)   1C69 CD C3 1B    		 CALL VGA_RMVGRPG	;
939)   1C6C C9          		 RET	;
942)   1C6D CD 41 1B    		VGA_GRCLS: CALL VGA_SETGRPGLO	;
943)   1C70 21 00 40    		 LD HL, BASEADDR	;
944)   1C73 11 01 40    		 LD DE, BASEADDR + 1	;
945)   1C76 01 FF 3F    		 LD BC, 16384 - 1       ;BYTES ON 1ST 16K	;BYTES ON 1ST 16K
946)   1C79 AF          		 XOR A	;
947)   1C7A 77          		 LD (HL), A	;
948)   1C7B ED B0       		 LDIR         ;RED - RED	;RED - RED
950)   1C7D CD C3 1B    		 CALL VGA_RMVGRPG	;
951)   1C80 CD 82 1B    		 CALL VGA_SETGRPGHI	;
952)   1C83 21 00 40    		 LD HL, BASEADDR	;
953)   1C86 11 01 40    		 LD DE, BASEADDR + 1	;
954)   1C89 01 FF 3C    		 LD BC, 15616 - 1       ;BYTES ON 2ND 16K	;BYTES ON 2ND 16K
955)   1C8C AF          		 XOR A	;
956)   1C8D 77          		 LD (HL), A	;
957)   1C8E ED B0       		 LDIR	;
958)   1C90 CD C3 1B    		 CALL VGA_RMVGRPG	;
959)   1C93 AF          		 XOR A        ;RESET TEXT COORDS	;RESET TEXT COORDS
960)   1C94 32 13 FF    		 LD (VGATX_X), A	;
961)   1C97 32 14 FF    		 LD (VGATX_Y), A	;
962)   1C9A C9          		 RET         ;TO MENU	;TO MENU
964)   1C9B C5          		FILLBTS: PUSH BC	;
965)   1C9C 12          		AGN1: LD (DE), A	;
966)   1C9D 13          		 INC DE	;
967)   1C9E 0B          		 DEC BC	;
968)   1C9F 67          		 LD H, A	;
969)   1CA0 78          		 LD A, B	;
970)   1CA1 B1          		 OR C	;
971)   1CA2 7C          		 LD A, H	;
972)   1CA3 20 F7       		 JR NZ, AGN1	;
973)   1CA5 2D          		 DEC L	;
974)   1CA6 7D          		 LD A, L	;
975)   1CA7 B7          		 OR A	;
976)   1CA8 7C          		 LD A, H	;
977)   1CA9 C1          		 POP BC	;
978)   1CAA 20 EF       		 JR NZ, FILLBTS	;
979)   1CAC C9          		 RET	;
985)   1CAD E5          		VGA_GETPXL32: PUSH HL	;
986)   1CAE F5          		 PUSH AF	;
987)   1CAF 7B          		 LD A, E	;
988)   1CB0 FE 66       		 CP 102	;
989)   1CB2 38 25       		 JR C, GPNXT0        ;LESS THAN 102	;LESS THAN 102
990)   1CB4 20 16       		 JR NZ, GPNXTBNK       ;MORE THAN 102	;MORE THAN 102
991)   1CB6 E5          		 PUSH HL        ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES	;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
992)   1CB7 01 80 00    		 LD BC, 128	;
993)   1CBA B7          		 OR A	;
994)   1CBB ED 42       		 SBC HL, BC	;
995)   1CBD 47          		 LD B, A	;
996)   1CBE 7C          		 LD A, H	;
997)   1CBF B7          		 OR A         ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128	; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
998)   1CC0 78          		 LD A, B	;
999)   1CC1 E1          		 POP HL	;
1000)   1CC2 20 15       		 JR NZ, GPNXT0	;
1002)   1CC4 3E 67       		 LD A, 103        ;WE ARE AT LINE ZERO ON 2ND BANK	;WE ARE AT LINE ZERO ON 2ND BANK
1003)   1CC6 11 40 01    		 LD DE, 129 + 191	;
1004)   1CC9 B7          		 OR A	;
1005)   1CCA ED 52       		 SBC HL, DE        ;	;
1006)   1CCC D6 67       		GPNXTBNK: SUB 103       ;SKIP 102 ROWS	;SKIP 102 ROWS
1007)   1CCE 11 C0 00    		 LD DE, 192        ;320-128	;320-128
1008)   1CD1 19          		 ADD HL, DE	;
1009)   1CD2 F5          		 PUSH AF	;
1011)   1CD3 CD 82 1B    		 CALL VGA_SETGRPGHI	;
1013)   1CD6 F1          		 POP AF         ;A HAS THE ROWS ON 2ND 16K	;A HAS THE ROWS ON 2ND 16K
1014)   1CD7 18 05       		 JR GPNXT1	;
1015)   1CD9 F5          		GPNXT0: PUSH AF        ;A=E=ROW=Y	;A=E=ROW=Y
1016)   1CDA CD 41 1B    		 CALL VGA_SETGRPGLO	;
1017)   1CDD F1          		 POP AF	;
1018)   1CDE 11 00 40    		GPNXT1: LD DE, BASEADDR	;
1020)   1CE1 CB 3C       		 SRL H	;
1021)   1CE3 CB 1D       		 RR L	;
1022)   1CE5 19          		 ADD HL, DE        ;FIND COLUMN	;FIND COLUMN
1023)   1CE6 11 A0 00    		 LD DE, 160	;
1024)   1CE9 CD FF 2C    		 CALL Mult12        ;HL=A*DE	;HL=A*DE
1025)   1CEC C1          		GPDOGETPX: POP BC        ;B HAS THE COLOR	;B HAS THE COLOR
1026)   1CED D1          		 POP DE         ;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL
1027)   1CEE 7E          		 LD A, (HL)        ;GET PIXEL BYTE	;GET PIXEL BYTE
1028)   1CEF CB 43       		 BIT 0, E        ;CHECK X IS EVEN OR ODD	;CHECK X IS EVEN OR ODD
1029)   1CF1 28 04       		 JR Z, GPDOEVEN        ;EVEN	;EVEN
1031)   1CF3 E6 0F       		 AND $0F        ;CLEAR LEFT 4 BITS	;CLEAR LEFT 4 BITS
1032)   1CF5 18 0A       		 JR GPDPEXIT	;
1034)   1CF7 CB 07       		GPDOEVEN: RLC A	;
1035)   1CF9 CB 07       		 RLC A	;
1036)   1CFB CB 07       		 RLC A	;
1037)   1CFD CB 07       		 RLC A	;
1038)   1CFF E6 0F       		 AND $0F        ;ZERO LEFT	;ZERO LEFT
1039)   1D01 F5          		GPDPEXIT: PUSH AF       ;SAVE PIXEL	;SAVE PIXEL
1040)   1D02 CD C3 1B    		 CALL VGA_RMVGRPG	;
1041)   1D05 F1          		 POP AF         ;RESTORE PIXEL	;RESTORE PIXEL
1042)   1D06 C9          		 RET	;
1047)   1D07 C3 10 1E    		VGA_DOPRNCHGRP: JP VGA_PRNGRCH	;
1055)   1D0A C9          		 RET	;
1061)   1D0B 06 02       		SETGRAPHPGS: LD B, 2	;
1062)   1D0D 3A 0D FF    		 LD A, (PGSEM)        ;PG SEM FOR ALL 4 PAGES	;PG SEM FOR ALL 4 PAGES
1063)   1D10 3C          		 INC A	;
1064)   1D11 32 0D FF    		 LD (PGSEM), A	;
1065)   1D14 FE 01       		 CP 1	;
1066)   1D16 C0          		 RET NZ	;
1067)   1D17 E5          		 PUSH HL	;
1068)   1D18 0E 04       		 LD C, 4	;
1069)   1D1A 21 09 FF    		 LD HL, TMPG	;
1070)   1D1D C5          		 PUSH BC	;
1071)   1D1E E5          		SGP_NXT: PUSH HL	;
1072)   1D1F CD C5 0D    		 CALL GETPGINBANK	;
1073)   1D22 E1          		 POP HL	;
1074)   1D23 77          		 LD (HL), A	;
1075)   1D24 23          		 INC HL	;
1076)   1D25 04          		 INC B	;
1077)   1D26 0D          		 DEC C	;
1078)   1D27 20 F5       		 JR NZ, SGP_NXT	;
1079)   1D29 C1          		 POP BC	;
1080)   1D2A 0E 04       		 LD C, 4	;
1081)   1D2C 3A 18 FF    		 LD A,(VGABUF)	;
1082)   1D2F 1F          		 RRA	;
1083)   1D30 3E 08       		 LD A, 8       ;BUFFER 0	;BUFFER 0
1084)   1D32 30 02       		 JR NC, SGP_NXT2	;
1085)   1D34 3E 0C       		 LD A, 12      ;BUFFER 1	;BUFFER 1
1088)   1D36 C5          		SGP_NXT2: PUSH BC	;
1089)   1D37 CD A3 0D    		 CALL PUTPGINBANK	;
1090)   1D3A C1          		 POP BC	;
1091)   1D3B 3C          		 INC A	;
1092)   1D3C 04          		 INC B	;
1093)   1D3D 0D          		 DEC C	;
1094)   1D3E 20 F6       		 JR NZ, SGP_NXT2	;
1095)   1D40 E1          		 POP HL	;
1096)   1D41 C9          		 RET	;
1100)   1D42 06 02       		RMVGRAPHPGS: LD B, 2	;
1101)   1D44 3A 0D FF    		 LD A, (PGSEM)	;
1102)   1D47 FE 00       		 CP 0	;
1103)   1D49 C8          		 RET Z	;
1104)   1D4A 3D          		 DEC A	;
1105)   1D4B 32 0D FF    		 LD (PGSEM), A	;
1106)   1D4E FE 00       		 CP 0	;
1107)   1D50 C0          		 RET NZ	;
1108)   1D51 E5          		 PUSH HL	;
1109)   1D52 21 09 FF    		 LD HL, TMPG	;
1110)   1D55 0E 04       		 LD C, 4	;
1111)   1D57 7E          		RGP_NXT: LD A, (HL)	;
1112)   1D58 E5          		 PUSH HL	;
1113)   1D59 C5          		 PUSH BC	;
1114)   1D5A CD A3 0D    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
1115)   1D5D C1          		 POP BC	;
1116)   1D5E E1          		 POP HL	;
1117)   1D5F 04          		 INC B	;
1118)   1D60 23          		 INC HL	;
1119)   1D61 0D          		 DEC C	;
1120)   1D62 20 F3       		 JR NZ, RGP_NXT	;
1121)   1D64 E1          		 POP HL	;
1122)   1D65 C9          		 RET	;
1132)   1D66 3E 50       		VGA_CALC_VA64: LD A, 80	;
1134)   1D68 E5          		 PUSH HL	;
1135)   1D69 CD FF 2C    		 CALL Mult12        ;HL=A * DE=Y	;HL=A * DE=Y
1136)   1D6C EB          		 EX DE, HL        ;DE=Y*80	;DE=Y*80
1137)   1D6D E1          		 POP HL	;
1138)   1D6E 0E 08       		 LD C, 8	;
1139)   1D70 CD 55 2D    		 CALL DIV16_8        ;HL=HL/C  A=REMAINDER	;HL=HL/C  A=REMAINDER
1140)   1D73 19          		 ADD HL, DE        ;THE ADDRESS IN 32K VIDEO BUFFER	;THE ADDRESS IN 32K VIDEO BUFFER
1141)   1D74 11 00 40    		 LD DE, $4000	;
1142)   1D77 19          		 ADD HL, DE        ;THE ADDRESS IN Z80 RAM	;THE ADDRESS IN Z80 RAM
1144)   1D78 4F          		 LD C,A	;
1145)   1D79 3E 07       		 LD A,7	;
1146)   1D7B 91          		 SUB C        ;A=7-REM TO FIND THE BIT TO SET LEFT TO RIGHT	;A=7-REM TO FIND THE BIT TO SET LEFT TO RIGHT
1147)   1D7C 06 01       		 LD B, 1	;
1148)   1D7E B7          		 OR A	;
1149)   1D7F 28 05       		VCVA_AGN: JR Z, VCVA_NXT	;
1150)   1D81 CB 10       		 RL B         ;MOVE B (THE MASK) TO THE RIGHT BIT	;MOVE B (THE MASK) TO THE RIGHT BIT
1151)   1D83 3D          		 DEC A	;
1152)   1D84 18 F9       		 JR VCVA_AGN	;
1153)   1D86 78          		VCVA_NXT: LD A, B	;
1154)   1D87 C9          		 RET	;
1161)   1D88 F5          		VGA_CHECKXY64: PUSH AF	;
1162)   1D89 E5          		 PUSH HL	;
1163)   1D8A D5          		 PUSH DE	;
1164)   1D8B B7          		 OR A	;
1165)   1D8C 11 80 02    		 LD DE, 640	;
1166)   1D8F ED 52       		 SBC HL, DE	;
1167)   1D91 30 0F       		 JR NC, CXY6_ABEX	;
1168)   1D93 D1          		 POP DE	;
1169)   1D94 D5          		 PUSH DE	;
1170)   1D95 EB          		 EX DE, HL	;
1171)   1D96 11 90 01    		 LD DE, 400	;
1172)   1D99 ED 52       		 SBC HL, DE	;
1173)   1D9B D1          		 POP DE         ;ABNORMAL EXIT PIXEL CANT PUT TO SCREEN	;ABNORMAL EXIT PIXEL CANT PUT TO SCREEN
1174)   1D9C E1          		 POP HL	;
1175)   1D9D 30 03       		 JR NC, CXY6_ABEX	;
1176)   1D9F F1          		 POP AF	;
1177)   1DA0 37          		 SCF         ;RETURN WITH C SET	;RETURN WITH C SET
1178)   1DA1 C9          		 RET	;
1179)   1DA2 F1          		CXY6_ABEX: POP AF	;
1180)   1DA3 AF          		 XOR A	;
1181)   1DA4 C9          		 RET         ;RETURN WITH NC	;RETURN WITH NC
1186)   1DA5 CD 88 1D    		VGA_PLTPXL64: CALL VGA_CHECKXY64	;
1187)   1DA8 D0          		 RET NC         ;NOT VALID PARAMS	;NOT VALID PARAMS
1188)   1DA9 F5          		 PUSH AF	;
1189)   1DAA E5          		 PUSH HL	;
1190)   1DAB D5          		 PUSH DE	;
1191)   1DAC CD 0B 1D    		 CALL SETGRAPHPGS       ;BRING VIDEO PAGES TO Z80	;BRING VIDEO PAGES TO Z80
1192)   1DAF D1          		PP6_PAROK: POP DE	;
1193)   1DB0 E1          		 POP HL	;
1195)   1DB1 CD 66 1D    		 CALL VGA_CALC_VA64       ;HL THE VGA ADDRESS AND A THE BIT MASK	;HL THE VGA ADDRESS AND A THE BIT MASK
1196)   1DB4 D1          		 POP DE         ;D HAS THE COLOR 0 OR 1, RESET BIT OR SET	;D HAS THE COLOR 0 OR 1, RESET BIT OR SET
1197)   1DB5 5F          		 LD E, A	;
1198)   1DB6 3A 12 FF    		 LD A,(VGABCOL)	;
1199)   1DB9 BA          		 CP D         ;CHECK IF COLOR IS SAME AS BACKG	;CHECK IF COLOR IS SAME AS BACKG
1200)   1DBA 28 05       		 JR Z, PP6_RESET	;
1202)   1DBC 7E          		 LD A, (HL)        ;GET THE BYTE	;GET THE BYTE
1203)   1DBD B3          		 OR E         ;SET THE BIT	;SET THE BIT
1204)   1DBE 77          		 LD (HL), A        ;PUT THE BYTE BACK	;PUT THE BYTE BACK
1205)   1DBF 18 06       		 JR PP6_EXIT	;
1208)   1DC1 7B          		 LD A, E        ;MASK ON A	;MASK ON A
1209)   1DC2 2F          		 CPL         ;INVERT ALL PIXELS	;INVERT ALL PIXELS
1210)   1DC3 5F          		 LD E, A        ;MASK ON E	;MASK ON E
1211)   1DC4 7E          		 LD A, (HL)        ;GET THE BYTE	;GET THE BYTE
1212)   1DC5 A3          		 AND E         ;RESET THE BIT	;RESET THE BIT
1213)   1DC6 77          		 LD (HL), A        ;PUT THE BYTE BACK	;PUT THE BYTE BACK
1214)   1DC7 CD 42 1D    		PP6_EXIT: CALL RMVGRAPHPGS      ;RESTORE PREVIOUS PAGES TO Z80	;RESTORE PREVIOUS PAGES TO Z80
1215)   1DCA C9          		 RET	;
1223)   1DCB CD 88 1D    		VGA_GETPXL64: CALL VGA_CHECKXY64	;
1224)   1DCE D0          		 RET NC         ;NOT VALID PARAMS	;NOT VALID PARAMS
1225)   1DCF CD 0B 1D    		 CALL SETGRAPHPGS       ;BRING VIDEO PAGES TO Z80	;BRING VIDEO PAGES TO Z80
1226)   1DD2 D1          		 POP DE	;
1227)   1DD3 E1          		 POP HL	;
1228)   1DD4 F1          		 POP AF	;
1230)   1DD5 CD 66 1D    		 CALL VGA_CALC_VA64       ;HL THE VGA ADDRESS AND A THE BIT MASK	;HL THE VGA ADDRESS AND A THE BIT MASK
1231)   1DD8 5F          		 LD E, A	;
1232)   1DD9 7E          		 LD A, (HL)	;
1233)   1DDA A3          		 AND E	;
1234)   1DDB FE 00       		 CP 0	;
1235)   1DDD 28 02       		 JR Z, GP6EXIT	;
1236)   1DDF 3E 01       		 LD A, 1	;
1238)   1DE1 F5          		GP6EXIT: PUSH AF	;
1239)   1DE2 CD 42 1D    		 CALL RMVGRAPHPGS       ;RESTORE PREVIOUS PAGES TO Z80	;RESTORE PREVIOUS PAGES TO Z80
1240)   1DE5 F1          		 POP AF	;
1241)   1DE6 C9          		 RET	;
1249)   1DE7 F5          		VGA_PLTPXL: PUSH AF	;
1250)   1DE8 E5          		 PUSH HL	;
1251)   1DE9 D5          		 PUSH DE        ;SAVE A	;SAVE A
1252)   1DEA CD 48 18    		 CALL VGA_GETCONF	;
1253)   1DED D1          		 POP DE	;
1254)   1DEE E1          		 POP HL	;
1255)   1DEF F1          		 POP AF	;
1256)   1DF0 E5          		 PUSH HL	;
1257)   1DF1 D5          		 PUSH DE	;
1258)   1DF2 DD 21 00 1E 		 LD IX,VGA_PPEXIT	;
1259)   1DF6 DD E5       		 PUSH IX        ;RETURN ADDRESS  	;RETURN ADDRESS
1260)   1DF8 CB 49       		 BIT 1, C        ;test low or hi	;test low or hi
1261)   1DFA C2 A5 1D    		 JP NZ, VGA_PLTPXL64       ;NZ MEANS HI	;NZ MEANS HI
1262)   1DFD C3 0A 1C    		 JP VGA_PLTPXL32	;
1263)   1E00 D1          		VGA_PPEXIT: POP DE	;
1264)   1E01 E1          		 POP HL	;
1265)   1E02 C9          		 RET	;
1271)   1E03 D5          		VGA_GETPXL: PUSH DE	;
1272)   1E04 CD 48 18    		 CALL VGA_GETCONF	;
1273)   1E07 D1          		 POP DE	;
1274)   1E08 CB 49       		 BIT 1, C        ;test low or hi	;test low or hi
1275)   1E0A C2 CB 1D    		 JP NZ, VGA_GETPXL64       ;NZ MEANS HI	;NZ MEANS HI
1276)   1E0D C3 AD 1C    		 JP VGA_GETPXL32	;
1282)   1E10 F5          		VGA_PRNGRCH:  PUSH AF	;
1288)   1E11 1E 08       		 LD E,FONT_WIDTH	;
1289)   1E13 3A 13 FF    		VPGC_NXT: LD A,(VGATX_X)	;
1290)   1E16 67          		 LD H,A	;
1292)   1E17 CD F3 2C    		 CALL MULT8	;
1293)   1E1A E5          		 PUSH HL        ;SAVE RESULT	;SAVE RESULT
1294)   1E1B 1E 0A       		 LD E,FONT_HEIGHT	;
1295)   1E1D 3A 14 FF    		 LD A,(VGATX_Y)	;
1296)   1E20 67          		 LD H,A	;
1297)   1E21 CD F3 2C    		 CALL MULT8	;
1298)   1E24 D1          		 POP DE	;
1299)   1E25 EB          		 EX DE,HL	;
1301)   1E26 F1          		 POP AF        ;GET THE CHAR	;GET THE CHAR
1303)   1E27 E5          		VGA_PRNGRCHAT: PUSH HL	;
1304)   1E28 D5          		 PUSH DE	;
1305)   1E29 B7          		 OR A	;
1306)   1E2A 21 00 36    		 LD HL, FONT_ADDR	;
1307)   1E2D 16 00       		 LD D, 0	;
1308)   1E2F 5F          		 LD E, A	;
1309)   1E30 ED 5A       		 ADC HL, DE        ;HL THE START OF FONT	;HL THE START OF FONT
1310)   1E32 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
1311)   1E34 EB          		 EX DE,HL       ;DE THE START OF FONT PATTERN	;DE THE START OF FONT PATTERN
1312)   1E35 1A          		VPGC_AGN3: LD A, (DE)       ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1313)   1E36 06 08       		 LD B, FONT_WIDTH	;
1314)   1E38 CB 27       		VPGC_AGN4: SLA A        ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1315)   1E3A 67          		 LD H,A        ;SAVE A  	;SAVE A
1316)   1E3B 38 05       		 JR C, VPGC_FCOLOR	;
1317)   1E3D 3A 12 FF    		 LD A, (VGABCOL)	;
1318)   1E40 18 03       		 JR VPGC_CONT	;
1319)   1E42 3A 11 FF    		VPGC_FCOLOR: LD A, (VGAFCOL) 	;
1321)   1E45 D9          		VPGC_CONT: EXX 	;
1322)   1E46 D1          		 POP DE	;
1323)   1E47 E1          		 POP HL	;
1324)   1E48 CD E7 1D    		 CALL VGA_PLTPXL	;
1325)   1E4B 23          		 INC HL        ;NEXT PIXEL ON VIDEO BUF	;NEXT PIXEL ON VIDEO BUF
1326)   1E4C E5          		 PUSH HL	;
1327)   1E4D D5          		 PUSH DE	;
1328)   1E4E D9          		 EXX	;
1329)   1E4F 7C          		 LD A,H        ;RESTORE A	;RESTORE A
1330)   1E50 10 E6       		 DJNZ VPGC_AGN4	;
1331)   1E52 D9          		 EXX	;
1332)   1E53 D1          		 POP DE	;
1333)   1E54 E1          		 POP HL	;
1334)   1E55 06 00       		 LD B,0	;
1335)   1E57 0E 08       		 LD C,FONT_WIDTH	;
1336)   1E59 B7          		 OR A	;
1337)   1E5A ED 42       		 SBC HL,BC       ;X=HL AT THE START	;X=HL AT THE START
1338)   1E5C 13          		 INC DE        ;Y=DE +1	;Y=DE +1
1339)   1E5D E5          		 PUSH HL	;
1340)   1E5E D5          		 PUSH DE	;
1341)   1E5F D9          		 EXX	;
1342)   1E60 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1343)   1E61 0D          		 DEC C	;
1344)   1E62 20 D1       		 JR NZ, VPGC_AGN3	;
1345)   1E64 D1          		 POP DE	;
1346)   1E65 E1          		 POP HL	;
1347)   1E66 C9          		 RET	;
1352)   1E67 67          		VGA_CLRTXTLN: LD H,A	;
1353)   1E68 3A 14 FF    		 LD A,(VGATX_Y)	;
1354)   1E6B F5          		 PUSH AF	;
1355)   1E6C 7C          		 LD A,H	;
1356)   1E6D 32 14 FF    		 LD (VGATX_Y),A	;
1357)   1E70 F5          		 PUSH AF	;
1358)   1E71 CD 48 18    		 CALL VGA_GETCONF	;
1359)   1E74 F1          		 POP AF	;
1360)   1E75 CB 49       		 BIT 1, C 	;
1361)   1E77 06 4E       		 LD B,78       ;test low or hi	;test low or hi
1362)   1E79 20 02       		 JR NZ, DOCLRTXT;CLRTXT64    ;NZ MEANS HI	;CLRTXT64    ;NZ MEANS HI
1364)   1E7B 06 26       		 LD B,38	;
1365)   1E7D 3E 20       		DOCLRTXT: LD A,' '	;
1366)   1E7F C5          		 PUSH BC	;
1367)   1E80 CD 7A 18    		 CALL VGA_PRCH      ;PRINT AND FORWARDS	;PRINT AND FORWARDS
1368)   1E83 C1          		 POP BC	;
1369)   1E84 10 F7       		 DJNZ DOCLRTXT	;
1370)   1E86 3E 20       		 LD A,' '	;
1371)   1E88 CD 8A 18    		 CALL VGA_DOPRNCH	;
1372)   1E8B AF          		 XOR A	;
1373)   1E8C 32 13 FF    		 LD (VGATX_X),A	;
1374)   1E8F F1          		 POP AF	;
1375)   1E90 32 14 FF    		 LD LD (VGATX_Y),A	;
1376)   1E93 C9          		 RET	;
 16)   1E94 	            		 LCD_RS EQU DEVTFT       ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   1E94 	            		 LCD_CS EQU DEVTFT+1       ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   1E94 7B          		 LD A, E	;
 32)   1E95 D3 11       		 OUT (LCD_CS), A	;
 37)   1E97 DB 11       		 IN A, (LCD_CS)	;
 38)   1E99 C9          		 RET	;
 45)   1E9A 7A          		 LD A, D	;
 46)   1E9B D3 11       		 OUT (LCD_CS), A	;
 47)   1E9D C9          		 RET	;
 53)   1E9E 7A          		 LD A, D	;
 54)   1E9F D3 10       		 OUT (LCD_RS), A	;
 55)   1EA1 C9          		 RET	;
 62)   1EA2 AF          		 XOR A	;
 63)   1EA3 D3 10       		 OUT (LCD_RS), A       ;RS LOW = COMMAND BYTE	;RS LOW = COMMAND BYTE
 64)   1EA5 CD 9A 1E    		 CALL LCD_WR_BUS	;
 65)   1EA8 3E 01       		 LD A, 1	;
 66)   1EAA D3 10       		 OUT (LCD_RS), A       ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   1EAC C9          		 RET	;
 71)   1EAD 16 E2       		 LD D, 0xE2        ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   1EAF CD 9E 1E    		 CALL LCD_WR_COM       ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   1EB2 16 23       		 LD D, 0x23        ;1E	;1E
 74)   1EB4 CD 9A 1E    		 CALL LCD_WR_DAT	;
 75)   1EB7 16 02       		 LD D, 0x02	;
 76)   1EB9 CD 9A 1E    		 CALL LCD_WR_DAT	;
 77)   1EBC 16 54       		 LD D, 0x54	;
 78)   1EBE CD 9A 1E    		 CALL LCD_WR_DAT	;
 79)   1EC1 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 80)   1EC3 CD 9E 1E    		 CALL LCD_WR_COM	;
 81)   1EC6 16 01       		 LD D, 0x01	;
 82)   1EC8 CD 9A 1E    		 CALL LCD_WR_DAT	;
 83)   1ECB 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 84)   1ECD CD D8 2A    		 CALL DELAYMICRO	;
 85)   1ED0 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 86)   1ED2 CD 9E 1E    		 CALL LCD_WR_COM	;
 87)   1ED5 16 03       		 LD D, 0x03	;
 88)   1ED7 CD 9A 1E    		 CALL LCD_WR_DAT	;
 89)   1EDA 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 90)   1EDC CD D8 2A    		 CALL DELAYMICRO	;
 92)   1EDF 16 01       		 LD D, 0x01        ; software reset	; software reset
 93)   1EE1 CD 9E 1E    		 CALL LCD_WR_COM	;
 94)   1EE4 06 14       		 LD B, 20        ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   1EE6 CD D8 2A    		 CALL DELAYMICRO	;
 96)   1EE9 16 E6       		 LD D, 0xE6        ;PLL setting for PCLK, depends on resolution	;PLL setting for PCLK, depends on resolution
 97)   1EEB CD 9E 1E    		 CALL LCD_WR_COM	;
 98)   1EEE 16 03       		 LD D, 0x03	;
 99)   1EF0 CD 9A 1E    		 CALL LCD_WR_DAT	;
100)   1EF3 16 33       		 LD D, 0x33        ;FF	;FF
101)   1EF5 CD 9A 1E    		 CALL LCD_WR_DAT	;
102)   1EF8 16 33       		 LD D, 0x33        ;FF	;FF
103)   1EFA CD 9A 1E    		 CALL LCD_WR_DAT	;
105)   1EFD 16 B0       		 LD D, 0xB0        ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   1EFF CD 9E 1E    		 CALL LCD_WR_COM	;
107)   1F02 16 20       		 LD D, 0x20	;
108)   1F04 CD 9A 1E    		 CALL LCD_WR_DAT	;
109)   1F07 16 00       		 LD D, 0x00	;
110)   1F09 CD 9A 1E    		 CALL LCD_WR_DAT	;
111)   1F0C 16 03       		 LD D, 0x03        ;Set HDP  799	;Set HDP  799
112)   1F0E CD 9A 1E    		 CALL LCD_WR_DAT	;
113)   1F11 16 1F       		 LD D, 0x1F	;
114)   1F13 CD 9A 1E    		 CALL LCD_WR_DAT	;
115)   1F16 16 01       		 LD D, 0x01        ;Set VDP  479	;Set VDP  479
116)   1F18 CD 9A 1E    		 CALL LCD_WR_DAT	;
117)   1F1B 16 DF       		 LD D, 0xDF	;
118)   1F1D CD 9A 1E    		 CALL LCD_WR_DAT	;
119)   1F20 16 00       		 LD D, 0x00	;
120)   1F22 CD 9A 1E    		 CALL LCD_WR_DAT	;
123)   1F25 16 B4       		 LD D, 0xB4        ;HSYNC	;HSYNC
124)   1F27 CD 9E 1E    		 CALL LCD_WR_COM	;
125)   1F2A 16 04       		 LD D, 0x04        ;03         ;Set HT 928	;03         ;Set HT 928
126)   1F2C CD 9A 1E    		 CALL LCD_WR_DAT	;
127)   1F2F 16 1F       		 LD D, 0x1F        ;A0	;A0
128)   1F31 CD 9A 1E    		 CALL LCD_WR_DAT	;
129)   1F34 16 00       		 LD D, 0x00        ;Set HPS  46	;Set HPS  46
130)   1F36 CD 9A 1E    		 CALL LCD_WR_DAT	;
131)   1F39 16 D2       		 LD D, 0xD2        ;2E	;2E
132)   1F3B CD 9A 1E    		 CALL LCD_WR_DAT	;
133)   1F3E 16 00       		 LD D, 0x00        ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   1F40 CD 9A 1E    		 CALL LCD_WR_DAT	;
135)   1F43 16 00       		 LD D, 0x00        ;Set LPS  15	;Set LPS  15
136)   1F45 CD 9A 1E    		 CALL LCD_WR_DAT	;
137)   1F48 16 00       		 LD D, 0x00        ;0F	;0F
138)   1F4A CD 9A 1E    		 CALL LCD_WR_DAT	;
139)   1F4D 16 00       		 LD D, 0x00	;
140)   1F4F CD 9A 1E    		 CALL LCD_WR_DAT	;
142)   1F52 16 B6       		 LD D, 0xB6        ;VSYNC	;VSYNC
143)   1F54 CD 9E 1E    		 CALL LCD_WR_COM	;
144)   1F57 16 02       		 LD D, 0x02        ;Set VT 525	;Set VT 525
145)   1F59 CD 9A 1E    		 CALL LCD_WR_DAT	;
146)   1F5C 16 0C       		 LD D, 0x0C        ;0D	;0D
147)   1F5E CD 9A 1E    		 CALL LCD_WR_DAT	;
148)   1F61 16 00       		 LD D, 0x00        ;Set VPS  16	;Set VPS  16
149)   1F63 CD 9A 1E    		 CALL LCD_WR_DAT	;
150)   1F66 16 22       		 LD D, 0x22        ;10	;10
151)   1F68 CD 9A 1E    		 CALL LCD_WR_DAT	;
152)   1F6B 16 00       		 LD D, 0x00        ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   1F6D CD 9A 1E    		 CALL LCD_WR_DAT	;
154)   1F70 16 00       		 LD D, 0x00        ;Set FPS  8	;Set FPS  8
155)   1F72 CD 9A 1E    		 CALL LCD_WR_DAT	;
156)   1F75 16 00       		 LD D, 0x00        ; 08	; 08
157)   1F77 CD 9A 1E    		 CALL LCD_WR_DAT	;
159)   1F7A 16 B8       		 LD D, 0xB8	;
160)   1F7C CD 9E 1E    		 CALL LCD_WR_COM	;
161)   1F7F 16 0F       		 LD D, 0x0F        ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   1F81 CD 9A 1E    		 CALL LCD_WR_DAT	;
163)   1F84 16 01       		 LD D, 0x01        ;GPIO0 normal	;GPIO0 normal
164)   1F86 CD 9A 1E    		 CALL LCD_WR_DAT	;
166)   1F89 16 BA       		 LD D, 0xBA	;
167)   1F8B CD 9E 1E    		 CALL LCD_WR_COM	;
168)   1F8E 16 01       		 LD D, 0x01        ;0F	;0F
169)   1F90 CD 9A 1E    		 CALL LCD_WR_DAT       ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   1F93 16 36       		 LD D, 0x36        ;rotation	;rotation
172)   1F95 CD 9E 1E    		 CALL LCD_WR_COM	;
173)   1F98 16 08       		 LD D, 0x08        ;2A	;2A
174)   1F9A CD 9A 1E    		 CALL LCD_WR_DAT	;
176)   1F9D 16 F0       		 LD D, 0xF0        ;pixel data interface	;pixel data interface
177)   1F9F CD 9E 1E    		 CALL LCD_WR_COM	;
178)   1FA2 16 06       		 LD D, 0x06        ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   1FA4 CD 9A 1E    		 CALL LCD_WR_DAT	;
181)   1FA7 06 05       		 LD B, 5        ;delay(5);	;delay(5);
182)   1FA9 CD D8 2A    		 CALL DELAYMICRO	;
184)   1FAC 16 BC       		 LD D, 0xBC        ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   1FAE CD 9E 1E    		 CALL LCD_WR_COM	;
186)   1FB1 16 40       		 LD D, 0x40	;
187)   1FB3 CD 9A 1E    		 CALL LCD_WR_DAT	;
188)   1FB6 16 80       		 LD D, 0x80	;
189)   1FB8 CD 9A 1E    		 CALL LCD_WR_DAT	;
190)   1FBB 16 40       		 LD D, 0x40	;
191)   1FBD CD 9A 1E    		 CALL LCD_WR_DAT	;
192)   1FC0 16 01       		 LD D, 0x01	;
193)   1FC2 CD 9A 1E    		 CALL LCD_WR_DAT	;
194)   1FC5 06 05       		 LD B, 5        ;delay(5);	;delay(5);
195)   1FC7 CD D8 2A    		 CALL DELAYMICRO	;
197)   1FCA 16 35       		 LD D, 0x35        ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   1FCC CD 9E 1E    		 CALL LCD_WR_COM	;
199)   1FCF 16 00       		 LD D, 0x00        ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   1FD1 CD 9A 1E    		 CALL LCD_WR_DAT	;
202)   1FD4 16 29       		 LD D, 0x29        ;display on	;display on
203)   1FD6 CD 9E 1E    		 CALL LCD_WR_COM	;
204)   1FD9 16 BE       		 LD D, 0xBE        ;set PWM for B/L	;set PWM for B/L
205)   1FDB CD 9E 1E    		 CALL LCD_WR_COM	;
206)   1FDE 16 06       		 LD D, 0x06	;
207)   1FE0 CD 9A 1E    		 CALL LCD_WR_DAT	;
208)   1FE3 16 F0       		 LD D, 0xF0	;
209)   1FE5 CD 9A 1E    		 CALL LCD_WR_DAT	;
210)   1FE8 16 01       		 LD D, 0x01	;
211)   1FEA CD 9A 1E    		 CALL LCD_WR_DAT	;
212)   1FED 16 F0       		 LD D, 0xF0	;
213)   1FEF CD 9A 1E    		 CALL LCD_WR_DAT	;
214)   1FF2 16 00       		 LD D, 0x00	;
215)   1FF4 CD 9A 1E    		 CALL LCD_WR_DAT	;
216)   1FF7 16 00       		 LD D, 0x00	;
217)   1FF9 CD 9A 1E    		 CALL LCD_WR_DAT	;
219)   1FFC 16 D0       		 LD D, 0xD0	;
220)   1FFE CD 9E 1E    		 CALL LCD_WR_COM	;
221)   2001 16 0D       		 LD D, 0x0D	;
222)   2003 CD 9A 1E    		 CALL LCD_WR_DAT	;
225)   2006 21 00 00    		 LD HL, 0	;
226)   2009 E5          		 PUSH HL	;
227)   200A E5          		 PUSH HL	;
228)   200B 21 1F 03    		 LD HL, 799	;
229)   200E E5          		 PUSH HL	;
230)   200F 21 DF 01    		 LD HL, 479	;
231)   2012 E5          		 PUSH HL	;
232)   2013 CD 17 20    		 CALL LCD_SETXY	;
233)   2016 C9          		 RET	;
250)   2017 DD 21 02 00 		 LD IX, 2	;
251)   201B DD 39       		 ADD IX, SP	;
252)   201D 16 2A       		 LD D, 0x2A        ;SEND IX PARAMS	;SEND IX PARAMS
253)   201F CD 9E 1E    		 CALL LCD_WR_COM	;
254)   2022 DD 56 07    		 LD D, (IX + 7)	;
255)   2025 CD 9A 1E    		 CALL LCD_WR_DAT	;
256)   2028 DD 56 06    		 LD D, (IX + 6)	;
257)   202B CD 9A 1E    		 CALL LCD_WR_DAT	;
258)   202E DD 56 03    		 LD D, (IX + 3)	;
259)   2031 CD 9A 1E    		 CALL LCD_WR_DAT	;
260)   2034 DD 56 02    		 LD D, (IX + 2)	;
261)   2037 CD 9A 1E    		 CALL LCD_WR_DAT	;
262)   203A 16 2B       		 LD D, 0x2B        ;SEND Y PARAMS	;SEND Y PARAMS
263)   203C CD 9E 1E    		 CALL LCD_WR_COM	;
264)   203F DD 56 05    		 LD D, (IX + 5)	;
265)   2042 CD 9A 1E    		 CALL LCD_WR_DAT	;
266)   2045 DD 56 04    		 LD D, (IX + 4)	;
267)   2048 CD 9A 1E    		 CALL LCD_WR_DAT	;
268)   204B DD 56 01    		 LD D, (IX + 1)	;
269)   204E CD 9A 1E    		 CALL LCD_WR_DAT	;
270)   2051 DD 56 00    		 LD D, (IX)	;
271)   2054 CD 9A 1E    		 CALL LCD_WR_DAT	;
272)   2057 16 2C       		 LD D, 0x2C        ;SEND DATA	;SEND DATA
273)   2059 CD 9E 1E    		 CALL LCD_WR_COM	;
274)   205C D1          		 POP DE	;
275)   205D 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   2060 39          		 ADD HL, SP	;
277)   2061 F9          		 LD SP, HL	;
278)   2062 EB          		 EX DE, HL	;
279)   2063 E9          		 JP (HL)	;
285)   2064 54          		 LD D, H	;
286)   2065 CD 9A 1E    		 CALL LCD_WR_DAT	;
287)   2068 55          		 LD D, L	;
288)   2069 CD 9A 1E    		 CALL LCD_WR_DAT	;
289)   206C C9          		 RET	;
294)   206D 16 2E       		 LD D, 0x2E        ;READ DATA	;READ DATA
295)   206F CD 9E 1E    		 CALL LCD_WR_COM	;
296)   2072 CD 97 1E    		@LCD_GTPXL: CALL LCD_RD_DAT	;
297)   2075 67          		 LD H, A	;
298)   2076 CD 97 1E    		 CALL LCD_RD_DAT	;
299)   2079 6F          		 LD L, A	;
300)   207A C9          		 RET	;
306)   207B DD E5       		@LCD_READPIXEL: PUSH IX       ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   207D DD 21 04 00 		 LD IX, 4        ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   2081 DD 39       		 ADD IX, SP	;
309)   2083 DD 66 03    		 LD H, (IX + 3)        ;X	;X
310)   2086 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
311)   2089 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
312)   208C DD 5E 00    		 LD E, (IX)        ;Y	;Y
313)   208F E5          		 PUSH HL	;
314)   2090 D5          		 PUSH DE	;
315)   2091 E5          		 PUSH HL	;
316)   2092 D5          		 PUSH DE	;
317)   2093 CD 17 20    		 CALL LCD_SETXY	;
318)   2096 CD 6D 20    		 CALL LCD_GETPIXEL	;
319)   2099 E5          		 PUSH HL	;
320)   209A CD CC 20    		 CALL LCD_CLRXY	;
321)   209D D1          		 POP DE         ;RESULT COLOR	;RESULT COLOR
322)   209E DD E1       		 POP IX	;
323)   20A0 C1          		 POP BC         ;RET ADDR	;RET ADDR
324)   20A1 21 04 00    		 LD HL, 2 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   20A4 39          		 ADD HL, SP	;
326)   20A5 F9          		 LD SP, HL	;
327)   20A6 EB          		 EX DE, HL        ;HL RESULT	;HL RESULT
328)   20A7 C5          		 PUSH BC        ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   20A8 C9          		 RET	;
333)   20A9 DD 21 02 00 		 LD IX, 2        ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   20AD DD 39       		 ADD IX, SP	;
335)   20AF DD 66 03    		 LD H, (IX + 3)        ;X	;X
336)   20B2 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
337)   20B5 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
338)   20B8 DD 5E 00    		 LD E, (IX)        ;Y	;Y
339)   20BB E5          		 PUSH HL	;
340)   20BC D5          		 PUSH DE	;
341)   20BD E5          		 PUSH HL	;
342)   20BE D5          		 PUSH DE	;
343)   20BF CD 17 20    		 CALL LCD_SETXY	;
344)   20C2 2A 01 FE    		 LD HL, (FCOLOR)	;
345)   20C5 CD 64 20    		 CALL LCD_SETPIXEL	;
346)   20C8 CD CC 20    		 CALL LCD_CLRXY	;
347)   20CB C9          		 RET	;
350)   20CC 21 00 00    		 LD HL, 0	;
351)   20CF E5          		 PUSH HL	;
352)   20D0 E5          		 PUSH HL	;
353)   20D1 21 1F 03    		 LD HL, LCD_WIDTH	;
354)   20D4 E5          		 PUSH HL	;
355)   20D5 21 DF 01    		 LD HL, LCD_HEIGHT	;
356)   20D8 E5          		 PUSH HL	;
357)   20D9 CD 17 20    		 CALL LCD_SETXY	;
358)   20DC C9          		 RET	;
365)   20DD 3A BB FE    		@LCD_FILL: LD A,(SCRNST)	;
366)   20E0 E6 01       		 AND 1	;
367)   20E2 28 0A       		 JR Z,LF_NOTEN	;
368)   20E4 D9          		 EXX	;
369)   20E5 D1          		 POP DE         ;save return addr to de'	;save return addr to de'
370)   20E6 D9          		 EXX	;
371)   20E7 CD 70 23    		 CALL _FILL	;
372)   20EA D9          		 EXX	;
373)   20EB D5          		 PUSH DE        ;restore return addr from de'	;restore return addr from de'
374)   20EC D9          		 EXX	;
375)   20ED C9          		 RET	;
376)   20EE D1          		LF_NOTEN: POP DE       ;GET RETURN ADDRESS	;GET RETURN ADDRESS
377)   20EF E1          		 POP HL        ;GET 1ST PARAM FROM STACK	;GET 1ST PARAM FROM STACK
378)   20F0 E1          		 POP HL        ;GET 2ND PARAZM FROM STACK	;GET 2ND PARAZM FROM STACK
379)   20F1 D5          		 PUSH DE        ;PUT RETURN ADDRESS ON STACK	;PUT RETURN ADDRESS ON STACK
380)   20F2 C9          		 RET  	;
382)   20F3 F5          		@LCD_PRCH: PUSH AF	;
383)   20F4 CD 57 22    		 CALL LCD_RMVCURS	;
384)   20F7 F1          		 POP AF	;
388)   20F8 F5          		 PUSH AF	;
389)   20F9 D1          		 POP DE         ;FLAGS ON E	;FLAGS ON E
390)   20FA FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
391)   20FC 28 0D       		 JR Z, PRCHOS_DOBCKSPC	;
392)   20FE FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
393)   2100 C8          		 RET Z	;
394)   2101 FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
395)   2103 20 1A       		 JR NZ, PRCH_DOPRN	;
396)   2105 21 0D FE    		 LD HL, CURSORX	;
397)   2108 C3 38 22    		 JP PRCH_NEWLN	;
399)   210B 21 0D FE    		 LD HL, CURSORX	;
400)   210E 7E          		 LD A, (HL)    	;
401)   210F FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
402)   2111 C8          		 RET Z	;
403)   2112 35          		 DEC (HL)	;
404)   2113 D5          		 PUSH DE	;
405)   2114 F1          		 POP AF        ;GET CARRY FLAG BACK	;GET CARRY FLAG BACK
406)   2115 D0          		 RET NC        ;IF C THEN DELETE LEFT CHAR ALSO	;IF C THEN DELETE LEFT CHAR ALSO
407)   2116 E5          		 PUSH HL	;
408)   2117 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
409)   2119 CD 1F 21    		 CALL PRCH_DOPRN 	;
410)   211C E1          		 POP HL	;
411)   211D 35          		 DEC (HL)	;
412)   211E C9          		 RET	;
414)   211F F5          		PRCH_DOPRN: PUSH AF       ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
415)   2120 32 10 FE    		 LD (LASTCHAR), A       ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
419)   2123 3A 16 FE    		 LD A, (VDUMODE)	;
420)   2126 FE 05       		 CP 5	;
421)   2128 20 19       		 JR NZ, VDU4	;
422)   212A 2A 5F FE    		 LD HL, (GR_LASTX)	;
423)   212D E5          		 PUSH HL	;
424)   212E ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
425)   2132 D5          		 PUSH DE	;
426)   2133 01 07 00    		 LD BC, FONT_WIDTH - 1	;
427)   2136 09          		 ADD HL, BC	;
428)   2137 E5          		 PUSH HL	;
429)   2138 01 09 00    		 LD BC, FONT_HEIGHT - 1	;
430)   213B EB          		 EX DE, HL	;
431)   213C 09          		 ADD HL, BC	;
432)   213D E5          		 PUSH HL	;
433)   213E CD 17 20    		 CALL LCD_SETXY	;
434)   2141 18 34       		 JR PRCHDO	;
435)   2143 3A 0D FE    		VDU4: LD A, (CURSORX)	;
436)   2146 06 08       		 LD B, FONT_WIDTH	;
437)   2148 16 00       		 LD D, 0	;
438)   214A 5F          		 LD E, A	;
439)   214B 21 00 00    		 LD HL, 0	;
440)   214E B7          		 OR A         ; CLEAR CARRY	; CLEAR CARRY
442)   214F ED 5A       		 ADC HL, DE	;
443)   2151 10 FC       		 DJNZ PRCH_AGN1        ;HL=DE*B	;HL=DE*B
444)   2153 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
445)   2154 11 08 00    		 LD DE, FONT_WIDTH	;
446)   2157 ED 5A       		 ADC HL, DE	;
447)   2159 2B          		 DEC HL	;
448)   215A E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
450)   215B CD AD 21    		 CALL LCD_CALCLINE       ;SCROLL CALC	;SCROLL CALC
451)   215E 06 0A       		 LD B, FONT_HEIGHT	;
452)   2160 16 00       		 LD D, 0	;
453)   2162 5F          		 LD E, A	;
454)   2163 21 00 00    		 LD HL, 0	;
456)   2166 ED 5A       		 ADC HL, DE	;
457)   2168 10 FC       		 DJNZ PRCH_AGN2	;
458)   216A D1          		 POP DE         ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
459)   216B E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
460)   216C D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
461)   216D 11 0A 00    		 LD DE, FONT_HEIGHT	;
462)   2170 ED 5A       		 ADC HL, DE        ;CALC 4TH PARAM	;CALC 4TH PARAM
463)   2172 2B          		 DEC HL         ;4TH PARAM -1	;4TH PARAM -1
464)   2173 E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
465)   2174 CD 17 20    		 CALL LCD_SETXY	;
466)   2177 F1          		PRCHDO: POP AF         ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
467)   2178 B7          		 OR A	;
468)   2179 21 00 36    		 LD HL, FONT_ADDR	;
469)   217C 16 00       		 LD D, 0	;
470)   217E 5F          		 LD E, A	;
471)   217F ED 5A       		 ADC HL, DE        ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
472)   2181 E5          		 PUSH HL	;
473)   2182 D1          		 POP DE         ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
474)   2183 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
476)   2185 1A          		 LD A, (DE)        ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
477)   2186 06 08       		 LD B, FONT_WIDTH	;
479)   2188 CB 27       		 SLA A         ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
480)   218A 38 05       		 JR C, FORECOLOR	;
481)   218C 2A 03 FE    		 LD HL, (BCOLOR)	;
482)   218F 18 03       		 JR PRCH_CONT	;
484)   2191 2A 01 FE    		 LD HL, (FCOLOR)	;
486)   2194 F5          		 PUSH AF	;
487)   2195 D5          		 PUSH DE        ;TODO:PROBABLY NOT NEEDED HERE	;TODO:PROBABLY NOT NEEDED HERE
488)   2196 CD 64 20    		 CALL LCD_SETPIXEL	;
489)   2199 D1          		 POP DE	;
490)   219A F1          		 POP AF	;
491)   219B 10 EB       		 DJNZ PRCH_AGN4	;
492)   219D 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
493)   219E 0D          		 DEC C	;
494)   219F 20 E4       		 JR NZ, PRCH_AGN3	;
496)   21A1 21 0D FE    		 LD HL, CURSORX	;
497)   21A4 7E          		 LD A, (HL)	;
498)   21A5 3C          		 INC A	;
499)   21A6 FE 50       		 CP 80	;
500)   21A8 CA 38 22    		 JP Z, PRCH_NEWLN       ;NEW LINE	;NEW LINE
501)   21AB 77          		 LD (HL), A	;
502)   21AC C9          		 RET	;
505)   21AD 3A 0F FE    		@LCD_CALCLINE: LD A, (SCRLN)	;
506)   21B0 57          		 LD D, A	;
507)   21B1 3A 0E FE    		 LD A, (CURSORY)       ;480/10 MAKES 48 LINES	;480/10 MAKES 48 LINES
508)   21B4 82          		 ADD A, D	;
509)   21B5 FE 30       		 CP TOTLINES	;
510)   21B7 D8          		 RET C	;
512)   21B8 D6 30       		 SUB TOTLINES	;
513)   21BA C9          		 RET	;
518)   21BB 16 33       		LCD_SETSCROLL: LD D, 0x33	;
519)   21BD CD 9E 1E    		 CALL LCD_WR_COM	;
520)   21C0 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
521)   21C2 CD 9A 1E    		 CALL LCD_WR_DAT	;
522)   21C5 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
523)   21C7 CD 9A 1E    		 CALL LCD_WR_DAT	;
524)   21CA 16 01       		 LD D, 0X01        ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
525)   21CC CD 9A 1E    		 CALL LCD_WR_DAT	;
526)   21CF 16 E0       		 LD D, 0XE0        ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
527)   21D1 CD 9A 1E    		 CALL LCD_WR_DAT	;
528)   21D4 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
529)   21D6 CD 9A 1E    		 CALL LCD_WR_DAT	;
530)   21D9 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
531)   21DB CD 9A 1E    		 CALL LCD_WR_DAT	;
532)   21DE AF          		 XOR A	;
533)   21DF 32 0F FE    		 LD (SCRLN), A	;
534)   21E2 C9          		 RET	;
537)   21E3 3A 0F FE    		@LCD_DOSCROLL: LD A, (SCRLN)	;
538)   21E6 3C          		 INC A	;
539)   21E7 FE 30       		 CP TOTLINES	;
540)   21E9 38 02       		 JR C, DS_NXT	;
541)   21EB D6 30       		 SUB TOTLINES	;
542)   21ED 32 0F FE    		DS_NXT: LD (SCRLN), A	;
543)   21F0 6F          		 LD L, A	;
544)   21F1 26 00       		 LD H, 0	;
545)   21F3 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
546)   21F4 29          		 ADD HL, HL	;
547)   21F5 29          		 ADD HL, HL	;
548)   21F6 5F          		 LD E, A	;
549)   21F7 16 00       		 LD D, 0	;
550)   21F9 19          		 ADD HL, DE	;
551)   21FA 19          		 ADD HL, DE	;
552)   21FB 16 37       		 LD D, 0x37	;
553)   21FD CD 9E 1E    		 CALL LCD_WR_COM	;
554)   2200 54          		 LD D, H        ;NEW TOP SCROLL LINE BYTES HIGH (1-480)	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
555)   2201 CD 9A 1E    		 CALL LCD_WR_DAT	;
556)   2204 55          		 LD D, L        ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
557)   2205 CD 9A 1E    		 CALL LCD_WR_DAT	;
558)   2208 C9          		 RET	;
561)   2209 11 00 00    		@LCD_CLRTXTLN: LD DE, 0	;
563)   220C D5          		 PUSH DE	;
564)   220D 6F          		 LD L, A	;
565)   220E 26 00       		 LD H, 0	;
566)   2210 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
567)   2211 29          		 ADD HL, HL	;
568)   2212 29          		 ADD HL, HL	;
569)   2213 5F          		 LD E, A	;
570)   2214 16 00       		 LD D, 0	;
571)   2216 19          		 ADD HL, DE	;
572)   2217 19          		 ADD HL, DE	;
574)   2218 E5          		 PUSH HL	;
575)   2219 11 0A 00    		 LD DE, FONT_HEIGHT	;
576)   221C 19          		 ADD HL, DE	;
578)   221D EB          		 EX DE, HL	;
579)   221E 21 1F 03    		 LD HL, LCD_WIDTH	;
581)   2221 E5          		 PUSH HL	;
582)   2222 D5          		 PUSH DE        ;PARAM4	;PARAM4
583)   2223 CD 17 20    		 CALL LCD_SETXY	;
584)   2226 01 40 1F    		 LD BC, 8000        ; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
585)   2229 2A 03 FE    		 LD HL, (BCOLOR)	;
586)   222C CD 64 20    		CTL_AGN: CALL LCD_SETPIXEL      ;DESTROYS D,A	;DESTROYS D,A
587)   222F 0B          		 DEC BC	;
588)   2230 78          		 LD A, B	;
589)   2231 B1          		 OR C	;
590)   2232 20 F8       		 JR NZ, CTL_AGN	;
591)   2234 CD CC 20    		 CALL LCD_CLRXY	;
592)   2237 C9          		 RET	;
596)   2238 AF          		 XOR A	;
597)   2239 77          		 LD (HL), A	;
598)   223A 23          		 INC HL	;
599)   223B 7E          		 LD A, (HL)	;
600)   223C 3C          		 INC A	;
602)   223D FE 30       		 CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
603)   223F 28 02       		 JR Z, PRCH_SCROLL	;
604)   2241 77          		 LD (HL), A	;
605)   2242 C9          		 RET	;
607)   2243 F5          		PRCH_SCROLL: PUSH AF	;
608)   2244 E5          		 PUSH HL	;
610)   2245 3A 0F FE    		 LD A, (SCRLN)	;
611)   2248 CD 09 22    		 CALL LCD_CLRTXTLN	;
613)   224B CD E3 21    		 CALL LCD_DOSCROLL	;
614)   224E E1          		 POP HL	;
615)   224F F1          		 POP AF	;
617)   2250 3D          		 DEC A	;
618)   2251 77          		 LD (HL), A        ;CURSORY	;CURSORY
619)   2252 AF          		 XOR A	;
620)   2253 32 0D FE    		 LD (CURSORX), A	;
621)   2256 C9          		 RET	;
636)   2257 2A 03 FE    		 LD HL, (BCOLOR)       ;	;
637)   225A 18 03       		 JR LCD_SETCURS	;
648)   225C 2A 01 FE    		 LD HL, (FCOLOR)       ;COLOR PARAM	;COLOR PARAM
651)   225F E5          		 PUSH HL        ;COLOR PARAM	;COLOR PARAM
652)   2260 3A 0D FE    		 LD A, (CURSORX)	;
653)   2263 06 08       		 LD B, FONT_WIDTH	;
654)   2265 16 00       		 LD D, 0	;
655)   2267 5F          		 LD E, A	;
656)   2268 21 00 00    		 LD HL, 0	;
657)   226B B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
659)   226C ED 5A       		 ADC HL, DE	;
660)   226E 10 FC       		 DJNZ SCUR_AGN1        ;HL = DE * B	;HL = DE * B
661)   2270 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
662)   2271 01 08 00    		 LD BC, FONT_WIDTH	;
663)   2274 ED 4A       		 ADC HL, BC        ;NEXT CHAR	;NEXT CHAR
664)   2276 2B          		 DEC HL         ;MINUS 1	;MINUS 1
665)   2277 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
667)   2278 CD AD 21    		 CALL LCD_CALCLINE	;
668)   227B 06 0A       		 LD B, FONT_HEIGHT	;
669)   227D 16 00       		 LD D, 0	;
670)   227F 5F          		 LD E, A	;
671)   2280 21 00 00    		 LD HL, 0	;
673)   2283 ED 5A       		 ADC HL, DE	;
674)   2285 10 FC       		 DJNZ SCUR_AGN2        ;HL=B*DE	;HL=B*DE
675)   2287 0E 08       		 LD C, FONT_HEIGHT - 2       ;2 PIXEL HEIGTH CURSOR	;2 PIXEL HEIGTH CURSOR
676)   2289 06 00       		 LD B, 0	;
677)   228B ED 4A       		 ADC HL, BC        ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
678)   228D D1          		 POP DE         ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
679)   228E E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
680)   228F D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
682)   2290 23          		 INC HL         ; Y2 ADD THE LAST +2 PIXELS	; Y2 ADD THE LAST +2 PIXELS
683)   2291 E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
684)   2292 CD 17 20    		 CALL LCD_SETXY	;
686)   2295 E1          		 POP HL         ;GET THE COLOR	;GET THE COLOR
687)   2296 06 10       		 LD B, 2 * FONT_WIDTH       ;2*8=16	;2*8=16
689)   2298 CD 64 20    		 CALL LCD_SETPIXEL       ;DESTROYS D,A	;DESTROYS D,A
690)   229B 10 FB       		 DJNZ SCUR_AGN3	;
695)   229D C9          		 RET	;
699)   229E CD CC 20    		 CALL LCD_CLRXY        ;	;
700)   22A1 2A 03 FE    		 LD HL, (BCOLOR)	;
702)   22A4 01 E0 01    		 LD BC, LCD_HEIGHT + 1	;
703)   22A7 C5          		CS_AGNA2: PUSH BC	;
704)   22A8 01 20 03    		 LD BC, LCD_WIDTH + 1	;
705)   22AB CD 64 20    		CS_AGNA1: CALL LCD_SETPIXEL      ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
706)   22AE 0B          		 DEC BC	;
707)   22AF 78          		 LD A, B	;
708)   22B0 B1          		 OR C	;
709)   22B1 20 F8       		 JR NZ, CS_AGNA1	;
710)   22B3 C1          		 POP BC	;
711)   22B4 0B          		 DEC BC	;
712)   22B5 78          		 LD A, B	;
713)   22B6 B1          		 OR C	;
714)   22B7 20 EE       		 JR NZ, CS_AGNA2	;
715)   22B9 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
716)   22BC 22 0D FE    		 LD (CURSORX), HL	;
717)   22BF C9          		 RET	;
722)   22C0 06 DF       		 LD B, LCD_HEIGHT.AND.0xFF      ;lsb	;lsb
723)   22C2 0E 02       		 LD C, LCD_HEIGHT.SHR.8 + 1      ;MSB+1	;MSB+1
725)   22C4 C5          		 PUSH BC	;
727)   22C5 06 1F       		 LD B, LCD_WIDTH.AND.0xFF      ;lsb	;lsb
728)   22C7 0E 04       		 LD C, LCD_WIDTH.SHR.8 + 1      ;MSV+1	;MSV+1
730)   22C9 CD 64 20    		 CALL LCD_SETPIXEL       ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
731)   22CC 10 FB       		 DJNZ CS_AGN1	;
732)   22CE 0D          		 DEC C	;
733)   22CF 20 F8       		 JR NZ, CS_AGN1	;
734)   22D1 C1          		 POP BC	;
735)   22D2 10 F0       		 DJNZ CS_AGN2	;
736)   22D4 0D          		 DEC C	;
737)   22D5 20 ED       		 JR NZ, CS_AGN2	;
738)   22D7 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
739)   22DA 22 0D FE    		 LD (CURSORX), HL	;
740)   22DD C9          		 RET	;
745)   22DE 7E          		@LCD_MSG: LD A, (HL)	;
746)   22DF FE 00       		 CP 0	;
747)   22E1 C8          		 RET Z	;
748)   22E2 E5          		 PUSH HL	;
749)   22E3 CD F3 20    		 CALL LCD_PRCH	;
750)   22E6 E1          		 POP HL	;
751)   22E7 23          		 INC HL	;
752)   22E8 18 F4       		 JR LCD_MSG	;
  3)   22EA AF          		NEGHL: xor a	;
  4)   22EB 95          		 sub l	;
  5)   22EC 6F          		 ld l, a	;
  6)   22ED 9F          		 sbc a, a	;
  7)   22EE 94          		 sub h	;
  8)   22EF 67          		 ld h, a	;
  9)   22F0 C9          		 RET	;
 13)   22F1 2A 79 FE    		 LD HL, (FILL_IDX)	;
 14)   22F4 01 58 02    		 LD BC, MAXQ	;
 15)   22F7 A7          		 AND A	;
 16)   22F8 ED 42       		 SBC HL, BC	;
 17)   22FA D0          		 RET NC     ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 18)   22FB 2A 7B FE    		 LD HL, (FILL_PY)	;
 19)   22FE ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 20)   2302 19          		 ADD HL, DE	;
 21)   2303 7C          		 LD A, H	;
 22)   2304 FE 80       		 CP 80H	;
 23)   2306 D0          		 RET NC     ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 24)   2307 11 1F 03    		 LD DE, LCD_WIDTH	;
 25)   230A ED 52       		 SBC HL, DE	;
 26)   230C D0          		 RET NC      ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 28)   230D 2A 77 FE    		 LD HL, (FILL_Q)	;
 29)   2310 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 30)   2314 78          		 LD A, B	;
 31)   2315 B1          		 OR C       ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 32)   2316 28 08       		 JR Z, QPS_NXT1	;
 33)   2318 EB          		 EX DE, HL	;
 34)   2319 C5          		 PUSH BC	;
 35)   231A E1          		 POP HL	;
 36)   231B 29          		 ADD HL, HL	;
 37)   231C 29          		 ADD HL, HL	;
 38)   231D 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 39)   231E EB          		 EX DE, HL	;
 40)   231F 19          		 ADD HL, DE	;
 42)   2320 11 7B FE    		 LD DE, FILL_PY	;
 43)   2323 EB          		 EX DE, HL      ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 44)   2324 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 45)   2327 ED B0       		 LDIR       ;COPY	;COPY
 46)   2329 2A 79 FE    		 LD HL, (FILL_IDX)	;
 47)   232C 23          		 INC HL	;
 48)   232D 22 79 FE    		 LD (FILL_IDX), HL	;
 49)   2330 C9          		QPS_EXT: RET	;
 51)   2331 2A 77 FE    		QPOP: LD HL, (FILL_Q)	;
 52)   2334 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 53)   2338 0B          		 DEC BC	;
 54)   2339 C5          		 PUSH BC	;
 55)   233A 78          		 LD A, B	;
 56)   233B B1          		 OR C       ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 57)   233C 28 08       		 JR Z, QPP_NXT1	;
 58)   233E EB          		 EX DE, HL	;
 59)   233F C5          		 PUSH BC	;
 60)   2340 E1          		 POP HL	;
 61)   2341 29          		 ADD HL, HL	;
 62)   2342 29          		 ADD HL, HL	;
 63)   2343 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 64)   2344 EB          		 EX DE, HL	;
 65)   2345 19          		 ADD HL, DE	;
 66)   2346 C1          		QPP_NXT1: POP BC	;
 67)   2347 ED 43 79 FE 		 LD (FILL_IDX), BC	;
 69)   234B 11 7B FE    		 LD DE, FILL_PY     ;ORIGIN=QUEUE DEST=FILL_PY	;ORIGIN=QUEUE DEST=FILL_PY
 70)   234E 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 71)   2351 ED B0       		 LDIR       ;COPY	;COPY
 72)   2353 2A 7D FE    		 LD HL, (FILL_PXL)	;
 73)   2356 22 71 FE    		 LD (FILL_X1), HL	;
 74)   2359 2A 7F FE    		 LD HL, (FILL_PXR)	;
 75)   235C 22 73 FE    		 LD (FILL_X2), HL	;
 76)   235F ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 77)   2363 ED 53 75 FE 		 LD (FILL_DY), DE	;
 78)   2367 2A 7B FE    		 LD HL, (FILL_PY)	;
 79)   236A A7          		 AND A	;
 80)   236B 19          		 ADD HL, DE	;
 81)   236C 22 6D FE    		 LD (FILL_Y), HL	;
 89)   236F C9          		 RET	;
 91)   2370 E1          		@_FILL: POP HL     ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 92)   2371 D1          		 POP DE      ;Y	;Y
 93)   2372 C1          		 POP BC      ;X	;X
 94)   2373 E5          		 PUSH HL      ;RET ADDR TO SP	;RET ADDR TO SP
 95)   2374 ED 43 6B FE 		 LD (FILL_X), BC	;
 96)   2378 ED 53 6D FE 		 LD (FILL_Y), DE	;
 97)   237C ED 73 85 FE 		 LD (FILL_OLDSP), SP	;
 98)   2380 21 3E ED    		 LD HL, - ((MAXQ * 8) + 2)  ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
 99)   2383 39          		 ADD HL, SP	;
100)   2384 F9          		 LD SP, HL      ;NEW SP	;NEW SP
103)   2385 22 77 FE    		 LD (FILL_Q), HL     ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
104)   2388 21 00 00    		 LD HL, 0	;
105)   238B 22 79 FE    		 LD (FILL_IDX), HL    ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
109)   238E 2A 6B FE    		 LD HL, (FILL_X)    ;	;
110)   2391 E5          		 PUSH HL	;
111)   2392 2A 6D FE    		 LD HL, (FILL_y)    ;	;
112)   2395 E5          		 PUSH HL	;
113)   2396 CD 7B 20    		 CALL LCD_READPIXEL	;
114)   2399 22 83 FE    		 LD (FILL_OV), HL	;
116)   239C ED 5B 01 FE 		 LD DE, (FCOLOR)	;
117)   23A0 A7          		 AND A	;
118)   23A1 ED 52       		 SBC HL, DE      ;CHK OV=NV	;CHK OV=NV
119)   23A3 CA 2A 25    		 JP Z, FL_EXIT	;
120)   23A6 2A 6B FE    		 LD HL, (FILL_X)	;
121)   23A9 7C          		 LD A, H	;
122)   23AA FE 80       		 CP 0x80      ;CHK <0	;CHK <0
123)   23AC D2 2A 25    		 JP NC, FL_EXIT	;
124)   23AF 11 1F 03    		 LD DE, LCD_WIDTH	;
125)   23B2 A7          		 AND A	;
126)   23B3 ED 52       		 SBC HL, DE      ;CHK>799	;CHK>799
127)   23B5 D2 2A 25    		 JP NC, FL_EXIT	;
128)   23B8 2A 6D FE    		 LD HL, (FILL_Y)	;
129)   23BB 7C          		 LD A, H	;
130)   23BC FE 80       		 CP 0x80      ;CHK <0	;CHK <0
131)   23BE D2 2A 25    		 JP NC, FL_EXIT	;
132)   23C1 11 DF 01    		 LD DE, LCD_HEIGHT	;
133)   23C4 A7          		 AND A	;
134)   23C5 ED 52       		 SBC HL, DE      ;CHK>480	;CHK>480
135)   23C7 D2 2A 25    		 JP NC, FL_EXIT	;
137)   23CA 2A 6D FE    		 LD HL, (FILL_Y)	;
138)   23CD 22 7B FE    		 LD (FILL_PY), HL	;
139)   23D0 2A 6B FE    		 LD HL, (FILL_X)	;
140)   23D3 22 7D FE    		 LD (FILL_PXL), HL	;
141)   23D6 22 7F FE    		 LD (FILL_PXR), HL	;
142)   23D9 21 01 00    		 LD HL, 1	;
143)   23DC 22 81 FE    		 LD (FILL_PDY), HL	;
144)   23DF CD F1 22    		 CALL QPUSH      ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
146)   23E2 2A 6D FE    		 LD HL, (FILL_Y)	;
147)   23E5 23          		 INC HL	;
148)   23E6 22 7B FE    		 LD (FILL_PY), HL	;
149)   23E9 21 FF FF    		 LD HL, - 1	;
150)   23EC 22 81 FE    		 LD (FILL_PDY), HL	;
151)   23EF CD F1 22    		 CALL QPUSH	;
153)   23F2 ED 5B 79 FE 		 LD DE, (FILL_IDX)	;
154)   23F6 7A          		 LD A, D	;
155)   23F7 B3          		 OR E	;
156)   23F8 CA 2A 25    		 JP Z, FL_EXIT     ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
160)   23FB CD 31 23    		 CALL QPOP      ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
163)   23FE 2A 71 FE    		 LD HL, (FILL_X1)	;
164)   2401 22 6B FE    		 LD (FILL_X), HL	;
165)   2404 7C          		FL_LP1: LD A, H	;
166)   2405 FE 80       		 CP 0x80      ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
167)   2407 D2 30 24    		 JP NC, FL_NXT1	;
168)   240A ED 5B 6D FE 		 LD DE, (FILL_Y)	;
169)   240E E5          		 PUSH HL	;
170)   240F D5          		 PUSH DE	;
171)   2410 CD 7B 20    		 CALL LCD_READPIXEL	;
172)   2413 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
173)   2417 A7          		 AND A	;
174)   2418 ED 52       		 SBC HL, DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
175)   241A C2 30 24    		 JP NZ, FL_NXT1	;
176)   241D ED 5B 6B FE 		 LD DE, (FILL_X)	;
177)   2421 2A 6D FE    		 LD HL, (FILL_Y)	;
178)   2424 D5          		 PUSH DE	;
179)   2425 EB          		 EX DE,HL	;
180)   2426 CD 30 25    		 CALL PLOTP	;
181)   2429 E1          		 POP HL	;
182)   242A 2B          		 DEC HL	;
183)   242B 22 6B FE    		 LD (FILL_X), HL	;
184)   242E 18 D4       		 JR FL_LP1	;
188)   2430 2A 6B FE    		 LD HL, (FILL_X)	;
189)   2433 ED 5B 71 FE 		 LD DE, (FILL_X1)	;
190)   2437 7C          		 LD A, H	;
191)   2438 FE 80       		 CP 80H	;
192)   243A 30 08       		 JR NC, FL_NXT1A     ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
193)   243C A7          		 AND A	;
194)   243D ED 52       		 SBC HL, DE      ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
195)   243F D2 E8 24    		 JP NC, FL_SKIP     ;C IF DE>HL X1>X, NC IF X>=X1	;C IF DE>HL X1>X, NC IF X>=X1
196)   2442 ED 5A       		 ADC HL, DE	;
199)   2444 23          		 INC HL	;
200)   2445 22 6F FE    		 LD (FILL_L), HL	;
203)   2448 A7          		 AND A	;
204)   2449 ED 52       		 SBC HL, DE      ;CHK L-X1	;CHK L-X1
205)   244B 30 1E       		 JR NC, FL_NXT2     ;C IF DE>HL X1>L	;C IF DE>HL X1>L
206)   244D 28 1C       		 JR Z, FL_NXT2	;
207)   244F ED 5A       		 ADC HL, DE	;
208)   2451 22 7D FE    		 LD (FILL_PXL), HL    ;L	;L
209)   2454 2A 6D FE    		 LD HL, (FILL_Y)	;
210)   2457 22 7B FE    		 LD (FILL_PY), HL	;
211)   245A 1B          		 DEC DE	;
212)   245B ED 53 7F FE 		 LD (FILL_PXR), DE	;
213)   245F 2A 75 FE    		 LD HL, (FILL_DY)	;
214)   2462 CD EA 22    		 CALL NEGHL	;
215)   2465 22 81 FE    		 LD (FILL_PDY), HL	;
216)   2468 CD F1 22    		 CALL QPUSH	;
220)   246B 2A 71 FE    		 LD HL, (FILL_X1)     ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
221)   246E 23          		 INC HL	;
222)   246F 22 6B FE    		 LD (FILL_X), HL	;
226)   2472 11 1F 03    		 LD DE, LCD_WIDTH	;
227)   2475 A7          		 AND A	;
228)   2476 EB          		 EX DE, HL	;
229)   2477 ED 52       		 SBC HL, DE      ;800-(X=DE)	;800-(X=DE)
230)   2479 38 25       		 JR C, FL_NXT3     ;C IF X>800	;C IF X>800
231)   247B EB          		 EX DE, HL      ;HL=X	;HL=X
232)   247C E5          		 PUSH HL	;
233)   247D 2A 6D FE    		 LD HL, (FILL_Y)	;
234)   2480 E5          		 PUSH HL	;
235)   2481 CD 7B 20    		 CALL LCD_READPIXEL	;
236)   2484 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
237)   2488 A7          		 AND A	;
238)   2489 ED 52       		 SBC HL, DE      ;PIXELREAD=OV	;PIXELREAD=OV
239)   248B 20 13       		 JR NZ, FL_NXT3	;
240)   248D ED 5B 6B FE 		 LD DE, (FILL_X)	;
241)   2491 2A 6D FE    		 LD HL, (FILL_Y)	;
242)   2494 D5          		 PUSH DE	;
243)   2495 EB          		 EX DE,HL	;
244)   2496 CD 30 25    		 CALL PLOTP	;
245)   2499 E1          		 POP HL	;
246)   249A 23          		 INC HL	;
247)   249B 22 6B FE    		 LD (FILL_X), HL	;
248)   249E 18 D2       		 JR FL_LP2	;
251)   24A0 2A 6D FE    		 LD HL, (FILL_Y)	;
252)   24A3 22 7B FE    		 LD (FILL_PY), HL	;
253)   24A6 2A 6F FE    		 LD HL, (FILL_L)	;
254)   24A9 22 7D FE    		 LD (FILL_PXL), HL	;
255)   24AC 2A 6B FE    		 LD HL, (FILL_X)	;
256)   24AF 2B          		 DEC HL	;
257)   24B0 22 7F FE    		 LD (FILL_PXR), HL	;
258)   24B3 2A 75 FE    		 LD HL, (FILL_DY)	;
259)   24B6 22 81 FE    		 LD (FILL_PDY), HL	;
260)   24B9 CD F1 22    		 CALL QPUSH	;
262)   24BC 2A 6B FE    		 LD HL, (FILL_X)	;
263)   24BF ED 5B 73 FE 		 LD DE, (FILL_X2)	;
264)   24C3 13          		 INC DE	;
265)   24C4 A7          		 AND A	;
266)   24C5 ED 52       		 SBC HL, DE      ;X-(X2+1) C IF X2+1>X	;X-(X2+1) C IF X2+1>X
267)   24C7 38 1F       		 JR C, FL_NXT4	;
268)   24C9 28 1D       		 JR Z, FL_NXT4	;
269)   24CB 2A 6D FE    		 LD HL, (FILL_Y)	;
270)   24CE 22 7B FE    		 LD (FILL_PY), HL	;
271)   24D1 ED 53 7D FE 		 LD (FILL_PXL), DE	;
272)   24D5 2A 6B FE    		 LD HL, (FILL_X)    ;	;
273)   24D8 2B          		 DEC HL	;
274)   24D9 22 7F FE    		 LD (FILL_PXR), HL	;
275)   24DC 2A 75 FE    		 LD HL, (FILL_DY)	;
276)   24DF CD EA 22    		 CALL NEGHL	;
277)   24E2 22 81 FE    		 LD (FILL_PDY), HL	;
278)   24E5 CD F1 22    		 CALL QPUSH	;
281)   24E8 2A 6B FE    		 LD HL, (FILL_X)	;
282)   24EB 23          		 INC HL	;
283)   24EC 22 6B FE    		 LD (FILL_X), HL	;
284)   24EF ED 5B 73 FE 		FL_LP3: LD DE, (FILL_X2)	;
285)   24F3 A7          		 AND A	;
286)   24F4 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
287)   24F5 ED 52       		 SBC HL, DE      ;C IF DE>HL X>X2	;C IF DE>HL X>X2
288)   24F7 38 1C       		 JR C, FL_NXT5	;
289)   24F9 19          		 ADD HL, DE      ;	;
290)   24FA EB          		 EX DE, HL      ;X=HL X2=DE	;X=HL X2=DE
291)   24FB E5          		 PUSH HL	;
292)   24FC 2A 6D FE    		 LD HL, (FILL_Y)	;
293)   24FF E5          		 PUSH HL	;
294)   2500 CD 7B 20    		 CALL LCD_READPIXEL	;
295)   2503 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
296)   2507 A7          		 AND A	;
297)   2508 ED 52       		 SBC HL, DE      ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
298)   250A 28 09       		 JR Z, FL_NXT5	;
299)   250C 2A 6B FE    		 LD HL, (FILL_X)	;
300)   250F 23          		 INC HL	;
301)   2510 22 6B FE    		 LD (FILL_X), HL	;
302)   2513 18 DA       		 JR FL_LP3	;
305)   2515 2A 6B FE    		 LD HL, (FILL_X)	;
306)   2518 22 6F FE    		 LD (FILL_L), HL	;
308)   251B ED 5B 73 FE 		 LD DE, (FILL_X2)	;
309)   251F A7          		 AND A	;
310)   2520 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
311)   2521 ED 52       		 SBC HL, DE      ;X2-X C IF X>X2	;X2-X C IF X>X2
312)   2523 EB          		 EX DE, HL      ;X=HL X2-X=DE	;X=HL X2-X=DE
313)   2524 DA F2 23    		 JP C, FL_LP0    ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
314)   2527 C3 72 24    		 JP FL_LP2      ;GOTO DO WHILE	;GOTO DO WHILE
317)   252A 21 C2 12    		FL_EXIT: LD HL, (MAXQ * 8) + 2  ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
318)   252D 39          		 ADD HL, SP	;
319)   252E F9          		 LD SP, HL      ;NEW SP	;NEW SP
320)   252F C9          		 RET	;
  7)   2530 C5          		@PLOTP:        PUSH BC        ;SAVE BC	;SAVE BC
  8)   2531 DD E5       		 PUSH IX	;
 11)   2533 3A BB FE    		 LD A,(SCRNST)	;
 12)   2536 E6 01       		 AND 1	;
 13)   2538 28 11       		 JR Z, PPNX  	;
 15)   253A D5          		               PUSH DE	;
 16)   253B E5          		               PUSH HL	;
 19)   253C E5          		 PUSH HL	;
 20)   253D D5          		 PUSH DE	;
 21)   253E E5          		 PUSH HL	;
 22)   253F D5          		 PUSH DE	;
 23)   2540 CD 17 20    		 CALL LCD_SETXY	;
 25)   2543 2A 01 FE    		 LD HL, (FCOLOR)	;
 26)   2546 CD 64 20    		 CALL LCD_SETPIXEL	;
 29)   2549 E1          		               POP HL	;
 30)   254A D1          		               POP DE                 	;
 31)   254B 3A BB FE    		PPNX: LD A,(SCRNST)	;
 32)   254E E6 02       		 AND 2	;
 33)   2550 28 06       		 JR Z, PPNX2  	;
 35)   2552 3A 11 FF    		               LD A,(VGAFCOL)	;
 36)   2555 CD E7 1D    		               CALL VGA_PLTPXL	;
 38)   2558 DD E1       		PPNX2: POP IX	;
 39)   255A C1          		 POP BC         ;RESTORE BC	;RESTORE BC
 40)   255B C9          		 RET	;
 43)   255C CD 9E 22    		@CLEARGRAPH:   CALL LCD_CLRSCR	;
 44)   255F CD 6D 1C    		 CALL VGA_GRCLS	;
 45)   2562 C9          		               RET	;
 49)   2563 DD 21 02 00 		@GR_DRAWHLINE: LD IX, 2      ;3 PARAMS 2-BYTES EACH TOTAL 6 BYTES  	;3 PARAMS 2-BYTES EACH TOTAL 6 BYTES
 50)   2567 DD 39       		 ADD IX, SP	;
 51)   2569 DD 66 05    		 LD H, (IX + 5)        ;X	;X
 52)   256C DD 6E 04    		 LD L, (IX + 4)        ;X	;X
 53)   256F DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
 54)   2572 DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
 55)   2575 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
 56)   2578 DD 4E 00    		 LD C, (IX)        ;LENGTH   	;LENGTH
 57)   257B E5          		 PUSH HL	;
 58)   257C 21 00 80    		 LD HL, $8000	;
 59)   257F B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 60)   2580 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
 61)   2582 30 0A       		 JR NC, POSH1	;
 62)   2584 AF          		 XOR A         ;l=-l	;l=-l
 63)   2585 91          		 SUB C	;
 64)   2586 4F          		 LD C, A	;
 65)   2587 9F          		 SBC A, A	;
 66)   2588 90          		 SUB B	;
 67)   2589 47          		 LD B, A	;
 68)   258A E1          		 POP HL	;
 69)   258B ED 42       		 SBC HL, BC        ;x -= l;	;x -= l;
 70)   258D E5          		 PUSH HL	;
 71)   258E E1          		POSH1: POP HL 	;
 72)   258F E5          		NXTH1: PUSH HL	;
 73)   2590 D5          		               PUSH DE                	;
 74)   2591 CD 30 25    		               CALL PLOTP                     ;HL X,DE Y                	;HL X,DE Y
 75)   2594 D1          		               POP DE	;
 76)   2595 E1          		               POP HL                	;
 77)   2596 23          		               INC HL	;
 78)   2597 0B          		 DEC BC	;
 79)   2598 79          		 LD A, C	;
 80)   2599 B0          		 OR B	;
 81)   259A 20 F3       		 JR NZ, NXTH1	;
 82)   259C CD CC 20    		 CALL LCD_CLRXY	;
 83)   259F D1          		 POP DE	;
 84)   25A0 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
 85)   25A3 39          		 ADD HL, SP	;
 86)   25A4 F9          		 LD SP, HL	;
 87)   25A5 EB          		 EX DE, HL	;
 88)   25A6 E9          		 JP (HL)	;
 94)   25A7 DD 21 02 00 		 LD IX, 2	;
 95)   25AB DD 39       		 ADD IX, SP	;
 96)   25AD DD 66 05    		 LD H, (IX + 5)        ;X	;X
 97)   25B0 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
 98)   25B3 DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
 99)   25B6 DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
100)   25B9 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
101)   25BC DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
102)   25BF E5          		 PUSH HL	;
103)   25C0 21 00 80    		 LD HL, $8000	;
104)   25C3 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
105)   25C4 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
106)   25C6 30 0A       		 JR NC, POSV1	;
107)   25C8 AF          		 XOR A         ;l=-l	;l=-l
108)   25C9 91          		 SUB C	;
109)   25CA 4F          		 LD C, A	;
110)   25CB 9F          		 SBC A, A	;
111)   25CC 90          		 SUB B	;
112)   25CD 47          		 LD B, A	;
113)   25CE EB          		 EX DE,HL	;
114)   25CF ED 42       		 SBC HL, BC        ;Y -= l;	;Y -= l;
115)   25D1 EB          		 EX DE,HL	;
116)   25D2 E1          		POSV1: POP HL	;
117)   25D3 E5          		NXTV1: PUSH HL	;
118)   25D4 D5          		               PUSH DE	;
119)   25D5 CD 30 25    		               CALL PLOTP	;
120)   25D8 D1          		               POP DE	;
121)   25D9 E1          		               POP HL	;
122)   25DA 13          		               INC DE	;
123)   25DB 0B          		 DEC BC	;
124)   25DC 79          		 LD A, C	;
125)   25DD B0          		 OR B	;
126)   25DE 20 F3       		 JR NZ, NXTV1	;
127)   25E0 CD CC 20    		 CALL LCD_CLRXY	;
128)   25E3 D1          		 POP DE	;
129)   25E4 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
130)   25E7 39          		 ADD HL, SP	;
131)   25E8 F9          		 LD SP, HL	;
132)   25E9 EB          		 EX DE, HL	;
133)   25EA E9          		 JP (HL)	;
137)   25EB DD 21 02 00 		 LD IX, 2	;
138)   25EF DD 39       		 ADD IX, SP	;
148)   25F1 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
149)   25F4 DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
150)   25F7 DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
151)   25FA DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
152)   25FD B7          		 OR A	;
153)   25FE ED 52       		 SBC HL, DE	;
154)   2600 20 17       		 JR NZ, YNOTEQ	;
156)   2602 DD 46 07    		 LD B, (IX + 7)        ;X1	;X1
157)   2605 DD 4E 06    		 LD C, (IX + 6)        ;X1	;X1
158)   2608 C5          		 PUSH BC        ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
159)   2609 D5          		 PUSH DE        ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
160)   260A DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
161)   260D DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
162)   2610 ED 42       		 SBC HL, BC        ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
163)   2612 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
164)   2613 CD 63 25    		 CALL GR_DRAWHLINE	;
165)   2616 C3 BA 27    		 JP DLNEX	;
167)   2619 DD 66 07    		 LD H, (IX + 7)        ;X1	;X1
168)   261C DD 6E 06    		 LD L, (IX + 6)        ;X1	;X1
169)   261F DD 56 03    		 LD D, (IX + 3)        ;X2	;X2
170)   2622 DD 5E 02    		 LD E, (IX + 2)        ;X2	;X2
171)   2625 B7          		 OR A	;
172)   2626 ED 52       		 SBC HL, DE	;
173)   2628 20 17       		 JR NZ, XNOTEQ	;
175)   262A D5          		 PUSH DE        ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
176)   262B DD 46 05    		 LD B, (IX + 5)        ;Y1	;Y1
177)   262E DD 4E 04    		 LD C, (IX + 4)        ;Y1	;Y1
178)   2631 C5          		 PUSH BC        ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
179)   2632 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
180)   2635 DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
181)   2638 ED 42       		 SBC HL, BC        ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
182)   263A E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
183)   263B CD A7 25    		 CALL GR_DRAWVLINE	;
184)   263E C3 BA 27    		 JP DLNEX	;
187)   2641 38 04       		 JR C, X2GTX1	;
189)   2643 AF          		 XOR A	;
190)   2644 3D          		 DEC A         ;XSTEP=-1	;XSTEP=-1
191)   2645 18 0D       		 JR DLNXT1	;
194)   2647 D5          		 PUSH DE	;
195)   2648 E1          		 POP HL	;
196)   2649 DD 56 07    		 LD D, (IX + 7)        ;X1	;X1
197)   264C DD 5E 06    		 LD E, (IX + 6)        ;X1	;X1
198)   264F B7          		 OR A	;
199)   2650 ED 52       		 SBC HL, DE        ;X2-X1 ON HL	;X2-X1 ON HL
201)   2652 3E 01       		 LD A, 1        ;XSTEP=1	;XSTEP=1
203)   2654 06 00       		 LD B, 0	;
204)   2656 0E 00       		 LD C, 0	;
205)   2658 C5          		 PUSH BC        ;T	;T
206)   2659 E5          		 PUSH HL        ;DX	;DX
207)   265A FE 01       		 CP 1	;
208)   265C 28 02       		 JR Z, DLXMINUS1	;
209)   265E 06 FF       		 LD B, 0XFF	;
210)   2660 4F          		DLXMINUS1: LD C, A	;
211)   2661 C5          		 PUSH BC        ;XSTEP	;XSTEP
212)   2662 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
213)   2665 DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
214)   2668 DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
215)   266B DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
216)   266E B7          		 OR A	;
217)   266F ED 52       		 SBC HL, DE	;
218)   2671 38 04       		 JR C, Y2GTY1        ;HL=Y1-Y2	;HL=Y1-Y2
219)   2673 AF          		 XOR A	;
220)   2674 3D          		 DEC A         ;YSTEP=-1	;YSTEP=-1
221)   2675 18 0F       		 JR DLNXT2	;
224)   2677 D5          		 PUSH DE	;
225)   2678 E1          		 POP HL	;
226)   2679 DD 56 05    		 LD D, (IX + 5)        ;Y1	;Y1
227)   267C DD 5E 04    		 LD E, (IX + 4)        ;Y1	;Y1
228)   267F B7          		 OR A	;
229)   2680 ED 52       		 SBC HL, DE        ;HL=Y2-Y1    HL=DY	;HL=Y2-Y1    HL=DY
230)   2682 06 00       		 LD B, 0	;
231)   2684 3E 01       		 LD A, 1        ;YSTEP=1	;YSTEP=1
233)   2686 FE 01       		 CP 1	;
234)   2688 28 02       		 JR Z, DLYMINUS1	;
235)   268A 06 FF       		 LD B, 0XFF	;
237)   268C 4F          		 LD C, A	;
238)   268D E5          		 PUSH HL        ;DY	;DY
239)   268E C5          		 PUSH BC        ;YSTEP	;YSTEP
240)   268F FD 21 00 00 		 LD IY, 0	;
241)   2693 FD 39       		 ADD IY, SP	;
256)   2695 FD 56 07    		 LD D, (IY + 7)        ;DX	;DX
257)   2698 FD 5E 06    		 LD E, (IY + 6)        ;DX	;DX
258)   269B B7          		 OR A	;
259)   269C ED 52       		 SBC HL, DE        ;DY-DX	;DY-DX
260)   269E DA 2D 27    		 JP C, DXGTDY	;
261)   26A1 CA 2D 27    		 JP Z, DXGTDY	;
263)   26A4 19          		 ADD HL, DE        ;HL=DY	;HL=DY
264)   26A5 44          		 LD B, H	;
265)   26A6 4D          		 LD C, L	;
266)   26A7 CB 38       		 SRL B	;
267)   26A9 CB 19       		 RR C         ;(dy >> 1)	;(dy >> 1)
268)   26AB 21 00 00    		 LD HL, 0	;
269)   26AE ED 42       		 SBC HL, BC        ;t = - (dy >> 1);	;t = - (dy >> 1);
270)   26B0 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
271)   26B3 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
273)   26B6 DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
274)   26B9 DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
275)   26BC DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
276)   26BF DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
277)   26C2 D5          		 PUSH DE	;
278)   26C3 DD E5       		 PUSH IX	;
281)   26C5 E5          		               PUSH HL	;
282)   26C6 D5          		               PUSH DE	;
283)   26C7 CD 30 25    		               CALL PLOTP	;
284)   26CA D1          		               POP DE	;
285)   26CB E1          		               POP HL	;
287)   26CC DD E1       		 POP IX	;
288)   26CE D1          		 POP DE	;
289)   26CF DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
290)   26D2 DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
291)   26D5 ED 52       		 SBC HL, DE        ; ROW=Y2	; ROW=Y2
292)   26D7 CA B5 27    		 JP Z, DLEXIT	;
293)   26DA FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
294)   26DD FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
295)   26E0 EB          		 EX DE, HL	;
296)   26E1 09          		 ADD HL, BC        ;row += ystep;	;row += ystep;
297)   26E2 DD 74 05    		 LD (IX + 5), H        ;SAVE ROW	;SAVE ROW
298)   26E5 DD 75 04    		 LD (IX + 4), L        ;	;
300)   26E8 FD 56 09    		 LD D, (IY + 9)        ; T	; T
301)   26EB FD 5E 08    		 LD E, (IY + 8)        ; T	; T
302)   26EE FD 66 07    		 LD H, (IY + 7)        ;DX	;DX
303)   26F1 FD 6E 06    		 LD L, (IY + 6)        ;DX	;DX
304)   26F4 19          		 ADD HL, DE	;
305)   26F5 FD 74 09    		 LD (IY + 9), H        ;t += dx;	;t += dx;
306)   26F8 FD 75 08    		 LD (IY + 8), L	;
307)   26FB EB          		 EX DE, HL	;
308)   26FC 21 00 80    		 LD HL, $8000	;
309)   26FF ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
310)   2701 38 B3       		 JR C, DLAGN1        ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
311)   2703 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
312)   2706 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
313)   2709 DD 66 07    		 LD H, (IX + 7)        ;COL HI	;COL HI
314)   270C DD 6E 06    		 LD L, (IX + 6)        ;COL LO	;COL LO
315)   270F 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
316)   2710 DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
317)   2713 DD 75 06    		 LD (IX + 6), L        ;	;
319)   2716 FD 66 09    		 LD H, (IY + 9)        ; T	; T
320)   2719 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
321)   271C FD 46 03    		 LD B, (IY + 3)        ;DY	;DY
322)   271F FD 4E 02    		 LD C, (IY + 2)        ;DY	;DY
323)   2722 ED 42       		 SBC HL, BC	;
324)   2724 FD 74 09    		 LD (IY + 9), H        ;t -= dY;	;t -= dY;
325)   2727 FD 75 08    		 LD (IY + 8), L	;
326)   272A C3 B6 26    		 JP DLAGN1	;
328)   272D 19          		 ADD HL, DE        ;HL=DY DE=DX	;HL=DY DE=DX
329)   272E 42          		 LD B, D	;
330)   272F 4B          		 LD C, E	;
331)   2730 CB 38       		 SRL B	;
332)   2732 CB 19       		 RR C         ;(dX >> 1)	;(dX >> 1)
333)   2734 21 00 00    		 LD HL, 0	;
334)   2737 ED 42       		 SBC HL, BC        ;t = - (dX >> 1);	;t = - (dX >> 1);
335)   2739 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
336)   273C FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
338)   273F DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
339)   2742 DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
340)   2745 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
341)   2748 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
342)   274B E5          		 PUSH HL        ;SAVE COL	;SAVE COL
343)   274C DD E5       		 PUSH IX	;
345)   274E E5          		 PUSH HL	;
346)   274F D5          		 PUSH DE	;
347)   2750 CD 30 25    		               CALL PLOTP	;
348)   2753 D1          		               POP DE	;
349)   2754 E1          		               POP HL	;
351)   2755 DD E1       		 POP IX	;
352)   2757 D1          		 POP DE         ;RETRIEVE COL	;RETRIEVE COL
353)   2758 DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
354)   275B DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
355)   275E ED 52       		 SBC HL, DE        ; COL=X2?	; COL=X2?
356)   2760 28 53       		 JR Z, DLEXIT	;
357)   2762 EB          		 EX DE, HL        ;HL=COL	;HL=COL
358)   2763 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
359)   2766 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
360)   2769 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
361)   276A DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
362)   276D DD 75 06    		 LD (IX + 6), L        ;	;
363)   2770 FD 56 09    		 LD D, (IY + 9)        ; T	; T
364)   2773 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
365)   2776 FD 66 03    		 LD H, (IY + 3)        ;DY	;DY
366)   2779 FD 6E 02    		 LD L, (IY + 2)        ;DY	;DY
367)   277C 19          		 ADD HL, DE	;
368)   277D FD 74 09    		 LD (IY + 9), H        ;t += dY;	;t += dY;
369)   2780 FD 75 08    		 LD (IY + 8), L	;
370)   2783 EB          		 EX DE, HL        ;T=DE	;T=DE
371)   2784 21 00 80    		 LD HL, $8000	;
372)   2787 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
373)   2789 38 B4       		 JR C, DLAGN2        ;CARRY SET IF NEGATIVE	;CARRY SET IF NEGATIVE
374)   278B FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
375)   278E FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
376)   2791 DD 66 05    		 LD H, (IX + 5)        ;ROW HI	;ROW HI
377)   2794 DD 6E 04    		 LD L, (IX + 4)        ;ROW LO	;ROW LO
378)   2797 09          		 ADD HL, BC        ;ROW += Ystep;	;ROW += Ystep;
379)   2798 DD 74 05    		 LD (IX + 5), H        ;SAVE COL	;SAVE COL
380)   279B DD 75 04    		 LD (IX + 4), L        ;	;
382)   279E FD 66 09    		 LD H, (IY + 9)        ; T	; T
383)   27A1 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
384)   27A4 FD 46 07    		 LD B, (IY + 7)        ;DX	;DX
385)   27A7 FD 4E 06    		 LD C, (IY + 6)        ;DX	;DX
386)   27AA ED 42       		 SBC HL, BC	;
387)   27AC FD 74 09    		 LD (IY + 9), H        ;t -= dX;	;t -= dX;
388)   27AF FD 75 08    		 LD (IY + 8), L	;
389)   27B2 C3 3F 27    		 JP DLAGN2	;
392)   27B5 21 0A 00    		 LD HL, 5 * 2        ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
393)   27B8 39          		 ADD HL, SP        ;	;
394)   27B9 F9          		 LD SP, HL	;
395)   27BA D1          		DLNEX: POP DE         ;RET ADDR	;RET ADDR
396)   27BB 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
397)   27BE 39          		 ADD HL, SP	;
398)   27BF F9          		 LD SP, HL	;
399)   27C0 EB          		 EX DE, HL	;
400)   27C1 E9          		 JP (HL)	;
406)   27C2 E1          		 POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
407)   27C3 D5          		 PUSH DE        ;F VAR	;F VAR
408)   27C4 D5          		 PUSH DE        ;DDF_X	;DDF_X
409)   27C5 D5          		 PUSH DE        ;DDF_Y	;DDF_Y
410)   27C6 D5          		 PUSH DE        ;X1	;X1
411)   27C7 D5          		 PUSH DE        ;Y1	;Y1
412)   27C8 E5          		 PUSH HL        ;RET ADDR	;RET ADDR
413)   27C9 DD 21 02 00 		 LD IX, 2	;
414)   27CD DD 39       		 ADD IX, SP	;
432)   27CF AF          		 XOR A	;
433)   27D0 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
434)   27D3 DD 5E 0A    		 LD E, (IX + 10)       ;R	;R
435)   27D6 DD 72 01    		 LD (IX + 1), D        ;Y1=R	;Y1=R
436)   27D9 DD 73 00    		 LD (IX + 0), E	;
437)   27DC 21 01 00    		 LD HL, 1	;
438)   27DF DD 74 07    		 LD (IX + 7), H        ;DDF_X=1	;DDF_X=1
439)   27E2 DD 75 06    		 LD (IX + 6), L	;
440)   27E5 DD 74 03    		 LD (IX + 3), H        ;X1=0	;X1=0
441)   27E8 DD 74 02    		 LD (IX + 2), H	;
442)   27EB ED 52       		 SBC HL, DE	;
443)   27ED DD 74 09    		 LD (IX + 9), H        ;F	;F
444)   27F0 DD 75 08    		 LD (IX + 8), L        ;F	;F
446)   27F3 EB          		 EX DE, HL        ;HL=RADIUS	;HL=RADIUS
447)   27F4 29          		 ADD HL, HL        ;2*R	;2*R
448)   27F5 EB          		 EX DE, HL	;
449)   27F6 21 00 00    		 LD HL, 0	;
450)   27F9 ED 52       		 SBC HL, DE        ;-2*R	;-2*R
451)   27FB DD 74 05    		 LD (IX + 5), H	;
452)   27FE DD 75 04    		 LD (IX + 4), L        ;DDF_Y	;DDF_Y
454)   2801 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
455)   2804 DD 6E 0C    		 LD L, (IX + 12)	;
456)   2807 E5          		 PUSH HL        ;SAVE Y	;SAVE Y
457)   2808 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
458)   280B DD 5E 0A    		 LD E, (IX + 10)	;
459)   280E D5          		 PUSH DE        ;SAVE R	;SAVE R
460)   280F 19          		 ADD HL, DE        ;Y+R	;Y+R
461)   2810 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
462)   2813 DD 5E 0E    		 LD E, (IX + 14)	;
463)   2816 D5          		 PUSH DE        ;SAVE X	;SAVE X
464)   2817 EB          		 EX DE,HL	;
466)   2818 CD 30 25    		 CALL PLOTP	;
468)   281B D1          		 POP DE         ;GET X	;GET X
469)   281C C1          		 POP BC         ;GET R	;GET R
470)   281D E1          		 POP HL         ;GET Y	;GET Y
471)   281E E5          		 PUSH HL        ;SAVE VARS	;SAVE VARS
472)   281F C5          		 PUSH BC	;
473)   2820 D5          		 PUSH DE	;
474)   2821 AF          		 XOR A	;
475)   2822 ED 42       		 SBC HL, BC        ;	;
477)   2824 EB          		 EX DE,HL	;
478)   2825 CD 30 25    		 CALL PLOTP	;
480)   2828 E1          		 POP HL         ;GET X	;GET X
481)   2829 C1          		 POP BC         ;GET R	;GET R
482)   282A D1          		 POP DE         ;GET Y	;GET Y
483)   282B D5          		 PUSH DE        ;SAVE VARS	;SAVE VARS
484)   282C C5          		 PUSH BC	;
485)   282D E5          		 PUSH HL	;
486)   282E AF          		 XOR A	;
487)   282F ED 4A       		 ADC HL, BC	;
490)   2831 CD 30 25    		 CALL PLOTP	;
492)   2834 E1          		 POP HL         ;GET X	;GET X
493)   2835 C1          		 POP BC         ;GET R	;GET R
494)   2836 D1          		 POP DE         ;GET Y	;GET Y
495)   2837 AF          		 XOR A	;
496)   2838 ED 42       		 SBC HL, BC	;
499)   283A CD 30 25    		 CALL PLOTP	;
502)   283D DD 66 03    		CIRC_AGN: LD H, (IX + 3)       ;X1	;X1
503)   2840 DD 6E 02    		 LD L, (IX + 2)        ;X1	;X1
504)   2843 DD 56 01    		 LD D, (IX + 1)        ;Y1	;Y1
505)   2846 DD 5E 00    		 LD E, (IX + 0)        ;Y1	;Y1
506)   2849 AF          		 XOR A	;
507)   284A ED 52       		 SBC HL, DE	;
508)   284C D2 43 29    		 JP NC, CIRC_EXIT	;
510)   284F 19          		 ADD HL, DE	;
511)   2850 E5          		 PUSH HL        ;SAVE X1	;SAVE X1
512)   2851 D5          		 PUSH DE        ;SAVE Y1	;SAVE Y1
513)   2852 21 00 00    		 LD HL, 0	;
514)   2855 AF          		 XOR A	;
517)   2856 DD 7E 09    		 LD A, (IX + 9)        ;F HI BYTE	;F HI BYTE
518)   2859 FE 50       		 CP 80	;
519)   285B 30 26       		 JR NC, CIRC_SKIP	;
520)   285D 28 24       		 JR Z, CIRC_SKIP	;
524)   285F D1          		 POP DE         ;Y1	;Y1
525)   2860 1B          		 DEC DE	;
526)   2861 DD 72 01    		 LD (IX + 1), D        ;SAVE Y1	;SAVE Y1
527)   2864 DD 73 00    		 LD (IX + 0), E	;
528)   2867 D5          		 PUSH DE        ;Y1	;Y1
529)   2868 DD 66 05    		 LD H, (IX + 5)        ;DDF_Y	;DDF_Y
530)   286B DD 6E 04    		 LD L, (IX + 4)	;
531)   286E 23          		 INC HL	;
532)   286F 23          		 INC HL	;
533)   2870 DD 74 05    		 LD (IX + 5), H        ;SAVE DDF_Y	;SAVE DDF_Y
534)   2873 DD 75 04    		 LD (IX + 4), L	;
535)   2876 DD 56 09    		 LD D, (IX + 9)        ;F	;F
536)   2879 DD 5E 08    		 LD E, (IX + 8)	;
537)   287C 19          		 ADD HL, DE	;
538)   287D DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
539)   2880 DD 75 08    		 LD (IX + 8), L	;
543)   2883 C1          		 POP BC         ;Y1	;Y1
544)   2884 E1          		 POP HL         ;X1	;X1
545)   2885 23          		 INC HL	;
546)   2886 DD 74 03    		 LD (IX + 3), H        ;SAVE X1	;SAVE X1
547)   2889 DD 75 02    		 LD (IX + 2), L	;
548)   288C E5          		 PUSH HL        ;X1	;X1
549)   288D DD 66 07    		 LD H, (IX + 7)        ;DDF_X	;DDF_X
550)   2890 DD 6E 06    		 LD L, (IX + 6)	;
551)   2893 23          		 INC HL	;
552)   2894 23          		 INC HL	;
553)   2895 DD 74 07    		 LD (IX + 7), H        ;SAVE DDF_X	;SAVE DDF_X
554)   2898 DD 75 06    		 LD (IX + 6), L	;
555)   289B DD 56 09    		 LD D, (IX + 9)        ;F	;F
556)   289E DD 5E 08    		 LD E, (IX + 8)	;
557)   28A1 19          		 ADD HL, DE	;
558)   28A2 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
559)   28A5 DD 75 08    		 LD (IX + 8), L	;
562)   28A8 E1          		 POP HL         ;X1	;X1
563)   28A9 E5          		 PUSH HL	;
564)   28AA DD 56 0F    		 LD D, (IX + 15)       ;X	;X
565)   28AD DD 5E 0E    		 LD E, (IX + 14)	;
566)   28B0 D5          		 PUSH DE	;
567)   28B1 19          		 ADD HL, DE	;
568)   28B2 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
569)   28B3 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
570)   28B6 DD 6E 0C    		 LD L, (IX + 12)  	;
571)   28B9 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
573)   28BA EB          		 EX DE,HL	;
574)   28BB CD 30 25    		 CALL PLOTP	;
576)   28BE E1          		 POP HL         ;X	;X
577)   28BF D1          		 POP DE         ;X1	;X1
578)   28C0 D5          		 PUSH DE	;
579)   28C1 E5          		 PUSH HL	;
580)   28C2 AF          		 XOR A	;
581)   28C3 ED 52       		 SBC HL, DE	;
582)   28C5 EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
583)   28C6 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
584)   28C9 DD 6E 0C    		 LD L, (IX + 12)	;
585)   28CC 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
587)   28CD EB          		 EX DE,HL	;
588)   28CE CD 30 25    		 CALL PLOTP	;
590)   28D1 E1          		 POP HL         ;X	;X
591)   28D2 D1          		 POP DE         ;X1	;X1
592)   28D3 D5          		 PUSH DE	;
593)   28D4 E5          		 PUSH HL	;
594)   28D5 19          		 ADD HL, DE	;
595)   28D6 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
596)   28D7 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
597)   28DA DD 6E 0C    		 LD L, (IX + 12)	;
598)   28DD AF          		 XOR A	;
599)   28DE ED 42       		 SBC HL, BC        ;HL=Y+Y1	;HL=Y+Y1
601)   28E0 EB          		 EX DE,HL	;
602)   28E1 CD 30 25    		 CALL PLOTP	;
604)   28E4 E1          		 POP HL         ;X	;X
605)   28E5 D1          		 POP DE         ;X1	;X1
606)   28E6 D5          		 PUSH DE	;
607)   28E7 E5          		 PUSH HL	;
608)   28E8 AF          		 XOR A	;
609)   28E9 ED 52       		 SBC HL, DE	;
610)   28EB EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
611)   28EC DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
612)   28EF DD 6E 0C    		 LD L, (IX + 12)	;
613)   28F2 AF          		 XOR A	;
614)   28F3 ED 42       		 SBC HL, BC        ;HL=Y-Y1	;HL=Y-Y1
616)   28F5 EB          		 EX DE,HL	;
617)   28F6 CD 30 25    		 CALL PLOTP	;
619)   28F9 E1          		 POP HL         ;X	;X
620)   28FA D1          		 POP DE         ;X1	;X1
621)   28FB C5          		 PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
622)   28FC E5          		 PUSH HL        ;SAVE X	;SAVE X
623)   28FD D5          		 PUSH DE        ;SAVE X1	;SAVE X1
624)   28FE 09          		 ADD HL, BC        ;	;
625)   28FF C1          		 POP BC         ;BC=X1	;BC=X1
626)   2900 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
627)   2901 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
628)   2904 DD 6E 0C    		 LD L, (IX + 12)	;
629)   2907 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
631)   2908 EB          		 EX DE,HL	;
632)   2909 CD 30 25    		 CALL PLOTP	;
634)   290C E1          		 POP HL         ;X	;X
635)   290D D1          		 POP DE         ;Y1	;Y1
636)   290E D5          		 PUSH DE	;
637)   290F E5          		 PUSH HL	;
638)   2910 AF          		 XOR A	;
639)   2911 ED 52       		 SBC HL, DE	;
640)   2913 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
641)   2914 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
642)   2917 DD 6E 0C    		 LD L, (IX + 12)	;
643)   291A 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
645)   291B EB          		 EX DE,HL	;
646)   291C CD 30 25    		 CALL PLOTP	;
648)   291F E1          		 POP HL         ;X	;X
649)   2920 D1          		 POP DE         ;Y1	;Y1
650)   2921 D5          		 PUSH DE	;
651)   2922 E5          		 PUSH HL	;
652)   2923 19          		 ADD HL, DE	;
653)   2924 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
654)   2925 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
655)   2928 DD 6E 0C    		 LD L, (IX + 12)	;
656)   292B AF          		 XOR A	;
657)   292C ED 42       		 SBC HL, BC        ;HL=Y-X1	;HL=Y-X1
658)   292E E5          		 PUSH HL	;
660)   292F EB          		 EX DE,HL	;
661)   2930 CD 30 25    		 CALL PLOTP	;
663)   2933 C1          		 POP BC         ;Y-X1	;Y-X1
664)   2934 E1          		 POP HL         ;X	;X
665)   2935 D1          		 POP DE         ;Y1	;Y1
666)   2936 AF          		 XOR A	;
667)   2937 ED 52       		 SBC HL, DE	;
668)   2939 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
669)   293A C5          		 PUSH BC	;
670)   293B E1          		 POP HL         ;HL=Y-X1	;HL=Y-X1
672)   293C EB          		 EX DE,HL	;
673)   293D CD 30 25    		 CALL PLOTP	;
674)   2940 C3 3D 28    		 JP CIRC_AGN	;
675)   2943 CD CC 20    		CIRC_EXIT: CALL LCD_CLRXY	;
676)   2946 D1          		 POP DE         ;GET RET ADDR	;GET RET ADDR
677)   2947 21 10 00    		 LD HL, 8 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
678)   294A 39          		 ADD HL, SP        ;	;
679)   294B F9          		 LD SP, HL	;
680)   294C EB          		 EX DE, HL	;
681)   294D E9          		 JP (HL)                	;
108)   294E ED 44       		DELAYABIT: NEG  ;8 CLOCK CYCLES	;8 CLOCK CYCLES
109)   2950 ED 44       		 NEG	;
110)   2952 ED 44       		 NEG	;
111)   2954 ED 44       		 NEG	;
112)   2956 ED 44       		 NEG	;
113)   2958 ED 44       		 NEG	;
114)   295A ED 44       		 NEG	;
115)   295C ED 44       		 NEG	;
116)   295E C9          		 RET	;
123)   295F D3 38       		SND_OUT: OUT (DEVSND),A ;SEND TO SOUND	;SEND TO SOUND
139)   2961 CD 4E 29    		 CALL DELAYABIT	;
140)   2964 C9          		 RET	;
142)   2965 3E 9F       		SND_MUTEALL:   LD A,$9F  ;MUTE CHANNEL 0	;MUTE CHANNEL 0
143)   2967 CD 5F 29    		 CALL SND_OUT	;
144)   296A 3E BF       		 LD A,$BF  ;MUTE CHANNEL 1	;MUTE CHANNEL 1
145)   296C CD 5F 29    		 CALL SND_OUT	;
146)   296F 3E DF       		 LD A,$DF  ;MUTE CHANNEL 2	;MUTE CHANNEL 2
147)   2971 CD 5F 29    		 CALL SND_OUT	;
148)   2974 3E FF       		 LD A,$FF  ;MUTE CHANNEL NOISE	;MUTE CHANNEL NOISE
149)   2976 CD 5F 29    		 CALL SND_OUT                	;
150)   2979 C9          		               RET	;
152)   297A CD 65 29    		SND_INIT: CALL SND_MUTEALL	;
153)   297D AF          		               XOR A	;
154)   297E 32 8F FF    		               LD (CHANST),A	;
155)   2981 AF          		SND_CLRDAT:    XOR A	;
156)   2982 21 7B FF    		               LD HL,CHANDATA	;
157)   2985 77          		               LD (HL),A	;
158)   2986 54          		               LD D,H	;
159)   2987 5D          		               LD E,L	;
160)   2988 13          		               INC DE	;
161)   2989 01 0B 00    		               LD BC,11  	;
162)   298C ED B0       		               LDIR	;
163)   298E C9          		 RET	;
168)   298F F5          		SND_NOTE:      PUSH AF	;
169)   2990 E6 03       		               AND $03                  ;KEEP 2 BITS	;KEEP 2 BITS
170)   2992 07          		               RLCA	;
171)   2993 07          		               RLCA	;
172)   2994 07          		               RLCA	;
173)   2995 07          		               RLCA	;
174)   2996 07          		               RLCA                    ;TRANSFER TO BITS 6&5	;TRANSFER TO BITS 6&5
175)   2997 B4          		               OR H                    ;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL	;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL
176)   2998 CD 5F 29    		               CALL SND_OUT	;
177)   299B 7D          		SN_LOW:        LD A,L                	;
178)   299C CD 5F 29    		               CALL SND_OUT	;
179)   299F F1          		               POP AF	;
180)   29A0 C9          		               RET	;
186)   29A1 F5          		SND_DOBEEP:    PUSH AF	;
187)   29A2 3E 02       		               LD A,DEFCHN	;
188)   29A4 0E 00       		               LD C,SNDVOLHI	;
189)   29A6 CD CA 29    		               CALL SND_SETVOLUME                	;
190)   29A9 3E 02       		               LD A,DEFCHN	;
191)   29AB CD 8F 29    		               CALL SND_NOTE	;
192)   29AE 06 A0       		               LD B,160	;
193)   29B0 CD ED 2A    		               CALL DELAYMILI	;
194)   29B3 3E 02       		               LD A,DEFCHN	;
195)   29B5 0E 04       		               LD C,SNDMUTE	;
196)   29B7 CD CA 29    		               CALL SND_SETVOLUME	;
197)   29BA F1          		               POP AF	;
198)   29BB C9          		               RET	;
200)   29BC 21 07 83    		SND_BEEP:      LD HL,nG4             ;NOTE G4 ON CHANNEL2	;NOTE G4 ON CHANNEL2
201)   29BF CD A1 29    		               CALL SND_DOBEEP	;
202)   29C2 C9          		               RET	;
204)   29C3 21 02 81    		SND_BEEP2:     LD HL,nD6             ;NOTE D6 ON CHANNEL2	;NOTE D6 ON CHANNEL2
205)   29C6 CD A1 29    		               CALL SND_DOBEEP	;
206)   29C9 C9          		               RET	;
213)   29CA 07          		SND_SETVOLUME: RLCA                            ;DOUBLE CHANNEL 0-3 --> 0,2,4,6               	;DOUBLE CHANNEL 0-3 --> 0,2,4,6
214)   29CB 3C          		               INC A                           ;E=A+1	;E=A+1
215)   29CC 5F          		               LD E,A                          ;SAVE CHANNEL INFO	;SAVE CHANNEL INFO
216)   29CD 79          		               LD A,C	;
217)   29CE FE 04       		               CP SNDMUTE	;
218)   29D0 3E 0F       		               LD A,$F	;
219)   29D2 28 09       		               JR Z, SV_DOIT                   ;SNDMUTE=4 MEANS NO VOLUME = MUTE	;SNDMUTE=4 MEANS NO VOLUME = MUTE
220)   29D4 3E 01       		               LD A,1                          ;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3	;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3
221)   29D6 0C          		               INC C	;
222)   29D7 0D          		SV_AGN:        DEC C	;
223)   29D8 28 03       		               JR Z, SV_DOIT	;
224)   29DA 07          		               RLCA	;
225)   29DB 18 FA       		               JR SV_AGN	;
226)   29DD 57          		SV_DOIT:       LD D,A                          ;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV	;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV
227)   29DE 3E 80       		               LD A,$80	;
228)   29E0 CB 03       		               RLC E	;
229)   29E2 CB 03       		               RLC E	;
230)   29E4 CB 03       		               RLC E	;
231)   29E6 CB 03       		               RLC E	;
232)   29E8 B2          		               OR D	;
233)   29E9 B3          		               OR E	;
234)   29EA CD 5F 29    		               CALL SND_OUT                    ;SET THE VOLUME        	;SET THE VOLUME
235)   29ED C9          		               RET	;
238)   29EE F5          		SND_DISABLE:   PUSH AF	;
239)   29EF CD 17 2A    		               CALL SND_GETCHMASK	;
240)   29F2 47          		               LD B,A	;
241)   29F3 3A 8F FF    		               LD A,(CHANST)	;
242)   29F6 B0          		               OR B	;
243)   29F7 32 8F FF    		               LD (CHANST),A	;
244)   29FA F1          		               POP AF	;
245)   29FB 0E 04       		               LD C, SNDMUTE	;
246)   29FD CD CA 29    		               CALL SND_SETVOLUME	;
247)   2A00 C9          		               RET	;
250)   2A01 F5          		SND_ENABLE:    PUSH AF	;
251)   2A02 CD 17 2A    		               CALL SND_GETCHMASK	;
252)   2A05 ED 44       		               NEG	;
253)   2A07 3D          		               DEC A	;
254)   2A08 47          		               LD B,A	;
255)   2A09 3A 8F FF    		               LD A,(CHANST)	;
256)   2A0C A0          		               AND B	;
257)   2A0D 32 8F FF    		               LD (CHANST),A	;
258)   2A10 F1          		               POP AF	;
259)   2A11 0E 00       		               LD C, SNDVOLHI                  ;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL	;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL
260)   2A13 CD CA 29    		               CALL SND_SETVOLUME	;
261)   2A16 C9          		               RET	;
266)   2A17 3C          		SND_GETCHMASK: INC A	;
267)   2A18 4F          		               LD C,A	;
268)   2A19 AF          		               XOR A	;
269)   2A1A 3C          		               INC A                	;
270)   2A1B 0D          		GMCAGN:        DEC C	;
271)   2A1C C8          		               RET Z	;
272)   2A1D 07          		               RLCA	;
273)   2A1E 18 FB       		               JR GMCAGN             	;
280)   2A20 F5          		SND_PLAYCH:    PUSH AF	;
281)   2A21 21 7B FF    		               LD HL,CHANDATA	;
282)   2A24 07          		               RLCA                            ;DOUBLE A	;DOUBLE A
283)   2A25 06 00       		               LD B,0	;
284)   2A27 4F          		               LD C,A	;
285)   2A28 09          		               ADD HL,BC                       ;HL ON CHANNELS DATA ADDRESS VAR	;HL ON CHANNELS DATA ADDRESS VAR
286)   2A29 5E          		               LD E,(HL)	;
287)   2A2A 23          		               INC HL	;
288)   2A2B 56          		               LD D,(HL)                       ;DE THE CHANNEL DATA ADDRESS	;DE THE CHANNEL DATA ADDRESS
289)   2A2C 7A          		               LD A,D	;
290)   2A2D 83          		               ADD E	;
291)   2A2E B7          		               OR A	;
292)   2A2F 28 4B       		               JR Z, PC_NOMORE                 ;IF CHANDATA ADDRESS IS ZERO RETURN	;IF CHANDATA ADDRESS IS ZERO RETURN
294)   2A31 F1          		               POP AF                          ;GET CHANNEL	;GET CHANNEL
295)   2A32 F5          		               PUSH AF	;
296)   2A33 CD 17 2A    		               CALL SND_GETCHMASK	;
297)   2A36 4F          		               LD C, A	;
298)   2A37 3A 8F FF    		               LD A,(CHANST)	;
299)   2A3A A1          		               AND C	;
300)   2A3B C1          		               POP BC	;
301)   2A3C 20 50       		               JR NZ,SNDOK                     ;SIGNAL OK BUT DON'T PLAY ANYTHING	;SIGNAL OK BUT DON'T PLAY ANYTHING
302)   2A3E C5          		               PUSH BC	;
303)   2A3F 48          		               LD C,B                          ;CHAN NO ON C	;CHAN NO ON C
304)   2A40 06 00       		               LD B,0	;
305)   2A42 21 8B FF    		               LD HL,CHANCN	;
306)   2A45 09          		               ADD HL,BC                       ;HL ON CHANNELS NOTE IDX	;HL ON CHANNELS NOTE IDX
307)   2A46 7E          		               LD A,(HL)                       ;A THE NOTE IDX 0-255 	;A THE NOTE IDX 0-255
308)   2A47 3C          		               INC A	;
309)   2A48 28 32       		               JR Z, PC_NOMORE                 ;IF 255 NO MORE NOTES TO PLAY	;IF 255 NO MORE NOTES TO PLAY
310)   2A4A 3D          		               DEC A          	;
311)   2A4B 34          		               INC (HL)                        ;NEXT NOTE	;NEXT NOTE
312)   2A4C 6F          		               LD L,A                          ;HL THE NOTE IDX	;HL THE NOTE IDX
313)   2A4D 26 00       		               LD H,0                          ;	;
314)   2A4F 29          		               ADD HL,HL                       ;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE	;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE
315)   2A50 29          		               ADD HL,HL                       ;DOUBLE AGAIN THE IDX CAUSE 2 BYTES IS THE DURATION OF THE NOTE	;DOUBLE AGAIN THE IDX CAUSE 2 BYTES IS THE DURATION OF THE NOTE
316)   2A51 19          		               ADD HL,DE                       ;THE NOTE ADDRESS ON HL	;THE NOTE ADDRESS ON HL
317)   2A52 5E          		               LD E,(HL)                       ;E 2ND BYTE OF THE NOTE TO PLAY	;E 2ND BYTE OF THE NOTE TO PLAY
318)   2A53 23          		               INC HL	;
319)   2A54 56          		               LD D,(HL)                       ;D 1ST BYTE OF THE NOTE TO PLAY	;D 1ST BYTE OF THE NOTE TO PLAY
320)   2A55 23          		               INC HL	;
321)   2A56 4E          		               LD C,(HL)                      ;THE DURATION OF THE NOTE ON BC	;THE DURATION OF THE NOTE ON BC
322)   2A57 23          		               INC HL	;
323)   2A58 46          		               LD B,(HL)	;
324)   2A59 ED 43 BE FE 		               LD (PRGEX),BC                   ;SAVE BC                	;SAVE BC
325)   2A5D C1          		               POP BC                          ;CHANNEL ON B	;CHANNEL ON B
326)   2A5E C5          		               PUSH BC                         	;
327)   2A5F 21 83 FF    		               LD HL,CHANDEL                   ;SAVING DURATION ON CHANDEL + CHAN IDX         	;SAVING DURATION ON CHANDEL + CHAN IDX
328)   2A62 CB 00       		               RLC B                           ;DOUBLE IDX	;DOUBLE IDX
329)   2A64 48          		               LD C,B	;
330)   2A65 06 00       		               LD B,0	;
331)   2A67 09          		               ADD HL,BC	;
332)   2A68 ED 4B BE FE 		               LD BC,(PRGEX)                      ;RESTORE BC	;RESTORE BC
333)   2A6C 71          		               LD (HL),C                       ;SAVE NOTE DELAY ON CHANNEL DELAY	;SAVE NOTE DELAY ON CHANNEL DELAY
334)   2A6D 23          		               INC HL	;
335)   2A6E 70          		               LD (HL),B	;
336)   2A6F 7A          		               LD A,D	;
337)   2A70 C1          		               POP BC                          ;GET THE CHANNEL ON B	;GET THE CHANNEL ON B
338)   2A71 FE 0A       		               CP 10                           ;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS	;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS
339)   2A73 38 0A       		               JR C,SND_SPOPS	;
340)   2A75 EB          		               EX DE,HL                        ;HL THE NOTE	;HL THE NOTE
341)   2A76 78          		               LD A,B                          ;CHANNEL ON A	;CHANNEL ON A
342)   2A77 CD 8F 29    		               CALL SND_NOTE	;
343)   2A7A 18 12       		               JR SNDOK                        ;NOTE PLAYED OK	;NOTE PLAYED OK
344)   2A7C C1          		PC_NOMORE:     POP BC	;
345)   2A7D 18 11       		               JR SNDEND                       ;SIGNAL  SONG END	;SIGNAL  SONG END
349)   2A7F FE 03       		SND_SPOPS:     CP 3	;
350)   2A81 30 07       		               JR NC,SNDOTOPS	;
351)   2A83 4F          		               LD C,A                          ;VOLUME	;VOLUME
352)   2A84 78          		               LD A,B                          ;CHANNEL	;CHANNEL
353)   2A85 CD CA 29    		               CALL SND_SETVOLUME	;
354)   2A88 18 04       		               JR SNDOK                        ;VOLUME SET OK	;VOLUME SET OK
356)   2A8A FE 09       		SNDOTOPS:      CP 9                            ;9 MEANS SONG ENDED	;9 MEANS SONG ENDED
357)   2A8C 28 02       		               JR Z, SNDEND	;
359)   2A8E AF          		SNDOK:         XOR A                           ;END OK                	;END OK
360)   2A8F C9          		               RET	;
361)   2A90 3E 01       		SNDEND:        LD A,1                          ;SONG END	;SONG END
362)   2A92 C9          		               RET	;
368)   2A93 21 83 FF    		SND_DOCHAN:    LD HL,CHANDEL	;
369)   2A96 4F          		               LD C,A	;
370)   2A97 06 00       		               LD B,0	;
371)   2A99 09          		               ADD HL,BC	;
372)   2A9A 09          		               ADD HL,BC       ;DOUBLE CAUSE 2 BYTES PER DELAY VALUE	;DOUBLE CAUSE 2 BYTES PER DELAY VALUE
373)   2A9B 4E          		               LD C,(HL)	;
374)   2A9C 23          		               INC HL	;
375)   2A9D 46          		               LD B,(HL)	;
376)   2A9E 57          		               LD D,A          ;SAVE A	;SAVE A
377)   2A9F 78          		               LD A,B	;
378)   2AA0 B1          		               OR C	;
379)   2AA1 7A          		               LD A,D          ;RESTORE CHANNEL ON A	;RESTORE CHANNEL ON A
380)   2AA2 CA 20 2A    		               JP Z,SND_PLAYCH ;PLAY CHANNEL NOTES	;PLAY CHANNEL NOTES
381)   2AA5 AF          		               XOR A           ;DATA ON CHANNEL CAUSE WE DELAY 	;DATA ON CHANNEL CAUSE WE DELAY
383)   2AA6 C9          		               RET	;
388)   2AA7 21 83 FF    		SND_INTDELAY:  LD HL,CHANDEL	;
389)   2AAA 06 04       		               LD B,4                  	;
390)   2AAC 5E          		ID_NXTCH:      LD E,(HL)	;
391)   2AAD 23          		               INC HL	;
392)   2AAE 56          		               LD D,(HL)	;
393)   2AAF 7A          		               LD A, D	;
394)   2AB0 B3          		               OR E	;
395)   2AB1 28 05       		               JR Z, ID_SKP	;
396)   2AB3 1B          		               DEC DE          ;MINUS NOTE DELAY VALUE	;MINUS NOTE DELAY VALUE
397)   2AB4 72          		               LD (HL),D	;
398)   2AB5 2B          		               DEC HL	;
399)   2AB6 73          		               LD (HL),E	;
400)   2AB7 23          		               INC HL	;
401)   2AB8 23          		ID_SKP:        INC HL	;
402)   2AB9 10 F1       		               DJNZ ID_NXTCH	;
403)   2ABB C9          		               RET	;
407)   2ABC 06 04       		SND_PLAYMUSIC: LD B,4	;
408)   2ABE 0E 00       		               LD C,0	;
409)   2AC0 05          		PM_NXT:        DEC B                           ;PLAY 3,2,1,0	;PLAY 3,2,1,0
410)   2AC1 78          		               LD A,B	;
411)   2AC2 C5          		               PUSH BC                	;
412)   2AC3 CD 93 2A    		               CALL SND_DOCHAN	;
413)   2AC6 C1          		               POP BC                	;
414)   2AC7 81          		               ADD A,C                         ;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES	;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES
415)   2AC8 4F          		               LD C,A	;
416)   2AC9 78          		               LD A,B	;
417)   2ACA B7          		               OR A	;
418)   2ACB 20 F3       		               JR NZ, PM_NXT	;
419)   2ACD 79          		               LD A,C	;
420)   2ACE FE 04       		               CP 4                            ;MEANS ALL 4 CHANNELS ARE NOT ENABLED	;MEANS ALL 4 CHANNELS ARE NOT ENABLED
421)   2AD0 C9          		               RET	;
 27)   2AD1 C9          		 RET	;
 30)   2AD2 F5          		DELAYMICROSEC: PUSH AF	;
 31)   2AD3 D5          		 PUSH DE	;
 32)   2AD4 1B          		 DEC DE	;
 33)   2AD5 D1          		 POP DE	;
 34)   2AD6 F1          		 POP AF	;
 35)   2AD7 C9          		 RET	;
 38)   2AD8 CD D2 2A    		S21: CALL DELAYMICROSEC	;
 39)   2ADB 10 FB       		 DJNZ S21	;
 40)   2ADD C9          		 RET	;
 44)   2ADE F5          		DELAYMILISEC: PUSH AF	;
 45)   2ADF D5          		 PUSH DE	;
 46)   2AE0 11 2C 01    		 LD DE, 300        ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 47)   2AE3 1B          		DEL1: DEC DE	;
 48)   2AE4 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 49)   2AE5 B3          		 OR E	;
 50)   2AE6 20 FB       		 JR NZ, DEL1	;
 51)   2AE8 D1          		 POP DE	;
 52)   2AE9 F1          		 POP AF	;
 53)   2AEA C9          		 RET	;
 56)   2AEB 06 50       		 LD B, 80	;
 58)   2AED CD DE 2A    		S1: CALL DELAYMILISEC	;
 59)   2AF0 10 FB       		 DJNZ S1	;
 60)   2AF2 C9          		 RET	;
 65)   2AF3 C5          		@DELAYSEC: PUSH BC	;
 66)   2AF4 01 E8 03    		 LD BC, 1000	;
 67)   2AF7 C5          		MYDLAGN: PUSH BC	;
 68)   2AF8 CD DE 2A    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 69)   2AFB C1          		 POP BC	;
 70)   2AFC 0B          		 DEC BC	;
 71)   2AFD 78          		 LD A, B	;
 72)   2AFE B1          		 OR C	;
 73)   2AFF 20 F6       		 JR NZ, MYDLAGN	;
 74)   2B01 C1          		 POP BC	;
 75)   2B02 10 EF       		 DJNZ DELAYSEC	;
 76)   2B04 C9          		 RET	;
 81)   2B05 F5          		OUTASC: PUSH AF	;
 82)   2B06 D5          		 PUSH DE	;
 83)   2B07 CD 3A 2B    		 CALL B2Bcd	;
 84)   2B0A D1          		 POP DE	;
 85)   2B0B CD 60 2B    		 CALL BCD2HA	;
 86)   2B0E F1          		 POP AF	;
 87)   2B0F C9          		 RET	;
101)   2B10 B7          		BCD2BN: OR A	;
102)   2B11 47          		 LD B, A	;
103)   2B12 E6 F0       		 AND $F0	;
104)   2B14 0F          		 RRCA	;
105)   2B15 4F          		 LD C, A	;
106)   2B16 0F          		 RRCA	;
107)   2B17 0F          		 RRCA	;
108)   2B18 81          		 ADD A, C	;
109)   2B19 4F          		 LD C, A	;
110)   2B1A 78          		 LD A, B	;
111)   2B1B E6 0F       		 AND $0F	;
112)   2B1D 81          		 ADD A, C	;
113)   2B1E C9          		 RET	;
128)   2B1F 26 FF       		BN2BCD: LD H, $FF	;
129)   2B21 24          		D100LP: INC H	;
130)   2B22 D6 64       		 SUB 100	;
131)   2B24 30 FB       		 JR NC, D100LP	;
132)   2B26 C6 64       		 ADD A, 100	;
133)   2B28 2E FF       		 LD L, $FF	;
134)   2B2A 2C          		D10LP: INC L	;
135)   2B2B D6 0A       		 SUB 10	;
136)   2B2D 30 FB       		 JR NC, D10LP	;
137)   2B2F C6 0A       		 ADD A, 10	;
138)   2B31 4F          		 LD C, A	;
139)   2B32 7D          		 LD A, L	;
140)   2B33 07          		 RLCA	;
141)   2B34 07          		 RLCA	;
142)   2B35 07          		 RLCA	;
143)   2B36 07          		 RLCA	;
144)   2B37 B1          		 OR C	;
145)   2B38 6F          		 LD L, A	;
146)   2B39 C9          		 RET	;
160)   2B3A 01 00 10    		 LD BC, 16 * 256 + 0       ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
161)   2B3D 11 00 00    		 LD DE, 0	;
163)   2B40 29          		 ADD HL, HL	;
164)   2B41 7B          		 LD A, E	;
165)   2B42 8F          		 ADC A, A	;
166)   2B43 27          		 DAA	;
167)   2B44 5F          		 LD E, A	;
168)   2B45 7A          		 LD A, D	;
169)   2B46 8F          		 ADC A, A	;
170)   2B47 27          		 DAA	;
171)   2B48 57          		 LD D, A	;
172)   2B49 79          		 LD A, C	;
173)   2B4A 8F          		 ADC A, A	;
174)   2B4B 27          		 DAA	;
175)   2B4C 4F          		 LD C, A	;
176)   2B4D 10 F1       		 DJNZ cvtLp	;
177)   2B4F EB          		 EX DE, HL	;
178)   2B50 C9          		 RET	;
192)   2B51 B7          		BCD2BN: OR A	;
193)   2B52 47          		 LD B, A	;
194)   2B53 E6 F0       		 AND $F0	;
195)   2B55 0F          		 RRCA	;
196)   2B56 4F          		 LD C, A	;
197)   2B57 0F          		 RRCA	;
198)   2B58 0F          		 RRCA	;
199)   2B59 81          		 ADD A, C	;
200)   2B5A 4F          		 LD C, A	;
201)   2B5B 78          		 LD A, B	;
202)   2B5C E6 0F       		 AND $0F	;
203)   2B5E 81          		 ADD A, C	;
204)   2B5F C9          		 RET	;
216)   2B60 79          		 LD A, C	;
217)   2B61 CD 8D 2B    		 CALL cvtUN	;
218)   2B64 79          		 LD A, C	;
219)   2B65 CD 91 2B    		 CALL cvtLN	;
220)   2B68 7C          		 LD A, H	;
221)   2B69 CD 8D 2B    		 CALL cvtUN	;
222)   2B6C 7C          		 LD A, H	;
223)   2B6D CD 91 2B    		 CALL cvtLN	;
224)   2B70 7D          		 LD A, L	;
225)   2B71 CD 8D 2B    		 CALL cvtUN	;
226)   2B74 7D          		 LD A, L	;
227)   2B75 18 1A       		 JR cvtLN	;
229)   2B77 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
230)   2B78 1F          		 RRA	;
231)   2B79 1F          		 RRA	;
232)   2B7A 1F          		 RRA	;
234)   2B7B E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
235)   2B7D C6 90       		 ADD A, 90h        ; old trick	; old trick
236)   2B7F 27          		 DAA         ; for converting	; for converting
237)   2B80 CE 40       		 ADC A, 40h        ; one nibble	; one nibble
238)   2B82 27          		 DAA         ; to hex ASCII	; to hex ASCII
239)   2B83 12          		 LD (DE), A	;
240)   2B84 13          		 INC DE	;
241)   2B85 C9          		 RET	;
253)   2B86 7D          		 LD A, L	;
254)   2B87 CD 77 2B    		 CALL cvtUN	;
255)   2B8A 7D          		 LD A, L	;
256)   2B8B 18 EE       		 JR cvtLN	;
258)   2B8D 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
259)   2B8E 1F          		 RRA	;
260)   2B8F 1F          		 RRA	;
261)   2B90 1F          		 RRA	;
263)   2B91 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
264)   2B93 C6 90       		 ADD A, 90h        ; old trick	; old trick
265)   2B95 27          		 DAA         ; for converting	; for converting
266)   2B96 CE 40       		 ADC A, 40h        ; one nibble	; one nibble
267)   2B98 27          		 DAA         ; to hex ASCII	; to hex ASCII
268)   2B99 12          		 LD (DE), A	;
269)   2B9A 13          		 INC DE	;
270)   2B9B C9          		 RET	;
287)   2B9C F5          		 PUSH AF        ; 11 T-states	; 11 T-states
289)   2B9D ED 44       		 NEG         ; 8 T-states	; 8 T-states
290)   2B9F ED 44       		 NEG         ; 8 T-states	; 8 T-states
291)   2BA1 ED 44       		 NEG         ; 8 T-states	; 8 T-states
292)   2BA3 ED 44       		 NEG         ; 8 T-states	; 8 T-states
293)   2BA5 0B          		 DEC BC         ; 6 T-states	; 6 T-states
294)   2BA6 79          		 LD A, C        ; 9 T-states	; 9 T-states
295)   2BA7 B0          		 OR B         ; 4 T-states	; 4 T-states
296)   2BA8 C2 9D 2B    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
297)   2BAB F1          		 POP AF         ; 10 T-states	; 10 T-states
298)   2BAC C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
336)   2BAD 26 00       		@B2D8: LD H, 0	;
337)   2BAF 6F          		 LD L, A	;
338)   2BB0 1E 00       		@B2D16: LD E, 0	;
339)   2BB2 16 00       		@B2D24: LD D, 0	;
340)   2BB4 01 00 00    		@B2D32: LD BC, 0	;
341)   2BB7 DD 21 00 00 		@B2D48: LD IX, 0        ; zero all non-used bits	; zero all non-used bits
342)   2BBB 22 45 FF    		@B2D64: LD (B2DINV), HL	;
343)   2BBE ED 53 47 FF 		 LD (B2DINV + 2), DE	;
344)   2BC2 ED 43 49 FF 		 LD (B2DINV + 4), BC	;
345)   2BC6 DD 22 4B FF 		 LD (B2DINV + 6), IX       ; place full 64-bit input value in buffer	; place full 64-bit input value in buffer
346)   2BCA 21 4D FF    		 LD HL, B2DBUF	;
347)   2BCD 11 4E FF    		 LD DE, B2DBUF + 1	;
348)   2BD0 36 20       		 LD (HL), ' '	;
350)   2BD2 01 12 00    		 LD BC, 18	;
351)   2BD5 ED B0       		 LDIR         ; fill 1st 19 bytes of buffer with spaces	; fill 1st 19 bytes of buffer with spaces
352)   2BD7 ED 43 60 FF 		 LD (B2DEND - 1), BC       ;set BCD value to "0" & place terminating 0	;set BCD value to "0" & place terminating 0
353)   2BDB 1E 01       		 LD E, 1        ; no. of bytes in BCD value	; no. of bytes in BCD value
354)   2BDD 21 4D FF    		 LD HL, B2DINV + 8       ; (address MSB input)+1	; (address MSB input)+1
355)   2BE0 01 09 09    		 LD BC, 0x0909	;
356)   2BE3 AF          		 XOR A	;
357)   2BE4 05          		B2DSKP0: DEC B	;
358)   2BE5 28 29       		 JR Z, B2DSIZ        ; all 0: continue with postprocessing	; all 0: continue with postprocessing
359)   2BE7 2B          		 DEC HL	;
360)   2BE8 B6          		 OR (HL)        ; find first byte <>0	; find first byte <>0
361)   2BE9 28 F9       		 JR Z, B2DSKP0	;
362)   2BEB 0D          		B2DFND1: DEC C	;
363)   2BEC 17          		 RLA	;
364)   2BED 30 FC       		 JR NC, B2DFND1        ; determine no. of most significant 1-bit	; determine no. of most significant 1-bit
365)   2BEF 1F          		 RRA	;
366)   2BF0 57          		 LD D, A        ; byte from binary input value	; byte from binary input value
367)   2BF1 E5          		B2DLUS2: PUSH HL	;
368)   2BF2 C5          		 PUSH BC	;
369)   2BF3 21 60 FF    		B2DLUS1: LD HL, B2DEND - 1      ; address LSB of BCD value	; address LSB of BCD value
370)   2BF6 43          		 LD B, E        ; current length of BCD value in bytes	; current length of BCD value in bytes
371)   2BF7 CB 12       		 RL D         ; highest bit from input value -> carry	; highest bit from input value -> carry
372)   2BF9 7E          		B2DLUS0: LD A, (HL)	;
373)   2BFA 8F          		 ADC A, A	;
374)   2BFB 27          		 DAA	;
375)   2BFC 77          		 LD (HL), A        ; double 1 BCD byte from intermediate result	; double 1 BCD byte from intermediate result
376)   2BFD 2B          		 DEC HL	;
377)   2BFE 10 F9       		 DJNZ B2DLUS0        ; and go on to double entire BCD value (+carry!)	; and go on to double entire BCD value (+carry!)
378)   2C00 30 03       		 JR NC, B2DNXT	;
379)   2C02 1C          		 INC E         ; carry at MSB -> BCD value grew 1 byte larger	; carry at MSB -> BCD value grew 1 byte larger
380)   2C03 36 01       		 LD (HL), 1        ; initialize new MSB of BCD value	; initialize new MSB of BCD value
381)   2C05 0D          		B2DNXT: DEC C	;
382)   2C06 20 EB       		 JR NZ, B2DLUS1        ; repeat for remaining bits from 1 input byte	; repeat for remaining bits from 1 input byte
383)   2C08 C1          		 POP BC         ; no. of remaining bytes in input value	; no. of remaining bytes in input value
384)   2C09 0E 08       		 LD C, 8        ; reset bit-counter	; reset bit-counter
385)   2C0B E1          		 POP HL         ; pointer to byte from input value	; pointer to byte from input value
386)   2C0C 2B          		 DEC HL	;
387)   2C0D 56          		 LD D, (HL)        ; get next group of 8 bits	; get next group of 8 bits
388)   2C0E 10 E1       		 DJNZ B2DLUS2        ; and repeat until last byte from input value	; and repeat until last byte from input value
389)   2C10 21 61 FF    		B2DSIZ: LD HL, B2DEND        ; address of terminating 0	; address of terminating 0
390)   2C13 4B          		 LD C, E        ; size of BCD value in bytes	; size of BCD value in bytes
391)   2C14 B7          		 OR A	;
392)   2C15 ED 42       		 SBC HL, BC        ; calculate address of MSB BCD	; calculate address of MSB BCD
393)   2C17 54          		 LD D, H	;
394)   2C18 5D          		 LD E, L	;
395)   2C19 ED 42       		 SBC HL, BC	;
396)   2C1B EB          		 EX DE, HL        ; HL=address BCD value, DE=start of decimal value	; HL=address BCD value, DE=start of decimal value
397)   2C1C 41          		 LD B, C        ; no. of bytes BCD	; no. of bytes BCD
398)   2C1D CB 21       		 SLA C         ; no. of bytes decimal (possibly 1 too high)	; no. of bytes decimal (possibly 1 too high)
399)   2C1F 3E 30       		 LD A, '0'	;
400)   2C21 ED 6F       		 RLD         ; shift bits 4-7 of (HL) into bit 0-3 of A	; shift bits 4-7 of (HL) into bit 0-3 of A
401)   2C23 FE 30       		 CP '0'         ; (HL) was > 9h?	; (HL) was > 9h?
402)   2C25 20 06       		 JR NZ, B2DEXPH        ; if yes, start with recording high digit	; if yes, start with recording high digit
403)   2C27 0D          		 DEC C         ; correct number of decimals	; correct number of decimals
404)   2C28 13          		 INC DE         ; correct start address	; correct start address
405)   2C29 18 04       		 JR B2DEXPL        ; continue with converting low digit	; continue with converting low digit
406)   2C2B ED 6F       		B2DEXP: RLD         ; shift high digit (HL) into low digit of A	; shift high digit (HL) into low digit of A
407)   2C2D 12          		B2DEXPH: LD (DE), A       ; record resulting ASCII-code	; record resulting ASCII-code
408)   2C2E 13          		 INC DE	;
409)   2C2F ED 6F       		B2DEXPL: RLD	;
410)   2C31 12          		 LD (DE), A	;
411)   2C32 13          		 INC DE	;
412)   2C33 23          		 INC HL         ; next BCD-byte	; next BCD-byte
413)   2C34 10 F5       		 DJNZ B2DEXP        ; and go on to convert each BCD-byte into 2 ASCII	; and go on to convert each BCD-byte into 2 ASCII
414)   2C36 ED 42       		 SBC HL, BC        ; return with HL pointing to 1st decimal	; return with HL pointing to 1st decimal
415)   2C38 C9          		 RET	;
419)   2C39 EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
420)   2C3A 21 4D FF    		 ld hl, B2DBUF	;
421)   2C3D CD 44 2C    		 call SkipWhitespace	;
422)   2C40 ED B0       		 ldir	;
423)   2C42 EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
424)   2C43 C9          		 ret	;
428)   2C44 7E          		 ld a, (hl)	;
429)   2C45 FE 20       		 cp ' '	;
430)   2C47 C0          		 ret nz	;
431)   2C48 23          		 inc hl	;
432)   2C49 18 F9       		 jr SkipWhitespace	;
436)   2C4B 06 08       		@REVBITS: ld b, 8	;
437)   2C4D 6F          		 ld l, a	;
439)   2C4E CB 15       		 rl l	;
440)   2C50 1F          		 rra	;
441)   2C51 10 FB       		 djnz REVLOOP	;
442)   2C53 C9          		 RET	;
452)   2C54 E5          		 push hl	;
454)   2C55 7E          		 ld a, (hl)	;
456)   2C56 FE 00       		 cp  0	;
457)   2C58 28 0E       		 jr z, IsStrDecTrue	;
459)   2C5A FE 30       		 cp  '0'	;
460)   2C5C 38 06       		 jr c, IsStrDecFalse	;
462)   2C5E FE 3A       		 cp  '9'+1	;
463)   2C60 38 09       		 jr c, IsStrDecContinue	;
464)   2C62 FE 39       		 cp  '9'	;
467)   2C64 F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
468)   2C66 E1          		 pop hl	;
469)   2C67 C9          		 ret	;
471)   2C68 BF          		 cp a         ; Set zero flag	; Set zero flag
472)   2C69 E1          		 pop hl	;
473)   2C6A C9          		 ret	;
475)   2C6B 23          		 inc hl	;
476)   2C6C 18 E7       		 jr IsStrDec00	;
483)   2C6E E5          		 push hl	;
485)   2C6F 7E          		 ld a, (hl)	;
487)   2C70 FE 00       		 cp  0	;
488)   2C72 28 14       		 jr z, IsStrHexTrue	;
490)   2C74 FE 30       		 cp  '0'	;
491)   2C76 38 0C       		 jr c, IsStrHexFalse	;
493)   2C78 FE 3A       		 cp  '9'+1	;
494)   2C7A 38 0F       		 jr c, IsStrHexContinue	;
496)   2C7C FE 30       		 cp  '0'	;
497)   2C7E 38 04       		 jr c, IsStrHexFalse	;
499)   2C80 FE 47       		 cp  'F'+1	;
500)   2C82 38 07       		 jr c, IsStrHexContinue	;
503)   2C84 F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
504)   2C86 E1          		 pop hl	;
505)   2C87 C9          		 ret	;
507)   2C88 BF          		 cp a         ; Set zero flag	; Set zero flag
508)   2C89 E1          		 pop hl	;
509)   2C8A C9          		 ret	;
511)   2C8B 23          		 inc hl	;
512)   2C8C 18 E1       		 jr IsStrHex00	;
519)   2C8E AF          		 xor a	;
520)   2C8F CD 94 2C    		 call loop	;
521)   2C92 7A          		 ld a, d	;
522)   2C93 C9          		 ret	;
524)   2C94 57          		 ld d, a	;
525)   2C95 7E          		 ld a, (hl)	;
526)   2C96 23          		 inc hl	;
527)   2C97 D6 3A       		 sub '9' + 1	;
528)   2C99 C6 0A       		 add 10	;
529)   2C9B D0          		 ret nc	;
530)   2C9C 5F          		 ld e, a	;
531)   2C9D 7A          		 ld a, d	;
532)   2C9E 87          		 add a, a        ;double our accumulator	;double our accumulator
533)   2C9F 87          		 add a, a        ;double again (now x4)	;double again (now x4)
534)   2CA0 82          		 add a, d        ;add the original (now x5)	;add the original (now x5)
535)   2CA1 87          		 add a, a        ;double again (now x10)	;double again (now x10)
536)   2CA2 83          		 add a, e        ;add in the incoming digit	;add in the incoming digit
537)   2CA3 18 EF       		 jr loop	;
545)   2CA5 7E          		 ld a, (hl)        ; Copy first char to A	; Copy first char to A
546)   2CA6 CD B6 2C    		 call Hex12        ; Convert first char	; Convert first char
547)   2CA9 87          		 add a, a        ; Multiply by 16...	; Multiply by 16...
548)   2CAA 87          		 add a, a        ; ...	; ...
549)   2CAB 87          		 add a, a        ; ...	; ...
550)   2CAC 87          		 add a, a        ; ...done!	; ...done!
551)   2CAD 57          		 ld d, a        ; Store top 4 bits in D	; Store top 4 bits in D
552)   2CAE 23          		 inc hl         ; Advance to next char	; Advance to next char
553)   2CAF 7E          		 ld a, (hl)	;
554)   2CB0 CD B6 2C    		 call Hex12        ; Convert second char	; Convert second char
555)   2CB3 B2          		 or d         ; Add back top bits	; Add back top bits
556)   2CB4 23          		 inc hl         ; Advance for next guy	; Advance for next guy
557)   2CB5 C9          		 ret	;
558)   2CB6 D6 30       		Hex12: sub  '0'	;
559)   2CB8 FE 0A       		 cp 10	;
560)   2CBA D8          		 ret c	;
561)   2CBB D6 07       		 sub 'A' - '0' - 10	;
562)   2CBD C9          		 ret	;
569)   2CBE CD A5 2C    		 call Read8bit	;
570)   2CC1 47          		 ld b, a	;
571)   2CC2 CD A5 2C    		 call Read8bit	;
572)   2CC5 4F          		 ld c, a	;
573)   2CC6 C9          		 ret	;
581)   2CC7 7E          		 ld a, (hl)	;
582)   2CC8 23          		 inc hl	;
583)   2CC9 D6 30       		 sub '0'	;
584)   2CCB CB 27       		 sla a	;
585)   2CCD CB 27       		 sla a	;
586)   2CCF CB 27       		 sla a	;
587)   2CD1 CB 27       		 sla a	;
588)   2CD3 47          		 ld b, a	;
589)   2CD4 7E          		 ld a, (hl)	;
590)   2CD5 23          		 inc hl	;
591)   2CD6 D6 30       		 sub '0'	;
592)   2CD8 B0          		 or b	;
593)   2CD9 C9          		 ret	;
598)   2CDA 4F          		 ld c, a        ; a = number to convert	; a = number to convert
599)   2CDB CD E7 2C    		 call Num1	;
600)   2CDE 77          		 ld (hl), a	;
601)   2CDF 23          		 inc hl	;
602)   2CE0 79          		 ld a, c	;
603)   2CE1 CD EB 2C    		 call Num2	;
604)   2CE4 77          		 ld (hl), a	;
605)   2CE5 23          		 inc hl	;
606)   2CE6 C9          		 ret	;
607)   2CE7 1F          		Num1: rra	;
608)   2CE8 1F          		 rra	;
609)   2CE9 1F          		 rra	;
610)   2CEA 1F          		 rra	;
611)   2CEB F6 F0       		Num2: or $F0	;
612)   2CED 27          		 daa	;
613)   2CEE C6 A0       		 add a, $A0	;
614)   2CF0 CE 40       		 adc a, $40        ; Ascii hex at this point (0 to F)	; Ascii hex at this point (0 to F)
615)   2CF2 C9          		 ret	;
  7)   2CF3 16 00       		   ld d,0	;
  8)   2CF5 6A          		   ld l,d	;
  9)   2CF6 06 08       		   ld b,8	;
 11)   2CF8 29          		   add hl,hl	;
 12)   2CF9 30 01       		   jr nc,Mult8_NoAdd	;
 13)   2CFB 19          		   add hl,de	;
 15)   2CFC 10 FA       		   djnz Mult8_Loop	;
 16)   2CFE C9          		   ret	;
 23)   2CFF 2E 00       		   ld l,0	;
 24)   2D01 06 08       		   ld b,8	;
 26)   2D03 29          		   add hl,hl	;
 27)   2D04 87          		   add a,a	;
 28)   2D05 30 01       		   jr nc,Mult12_NoAdd	;
 29)   2D07 19          		   add hl,de	;
 31)   2D08 10 F9       		   djnz Mult12_Loop	;
 32)   2D0A C9          		   ret	;
 39)   2D0B 21 00 00    		@Mult16: ld hl, 0	;
 40)   2D0E 78          		 ld a, b	;
 41)   2D0F 06 10       		 ld b, 16	;
 43)   2D11 29          		 add hl, hl	;
 44)   2D12 CB 21       		 sla c	;
 45)   2D14 17          		 rla	;
 46)   2D15 30 01       		 jr nc, Mult16_NoAdd	;
 47)   2D17 19          		 add hl, de	;
 49)   2D18 10 F7       		 djnz Mult16_Loop	;
 50)   2D1A C9          		 ret	;
 56)   2D1B D5          		@Mult32: PUSH DE	;
 57)   2D1C 79          		 ld a, c	;
 58)   2D1D 48          		 ld c, b	;
 59)   2D1E 21 00 00    		 ld hl, 0	;
 60)   2D21 06 10       		 ld b, 16	;
 62)   2D23 29          		 add hl, hl	;
 63)   2D24 17          		 rla	;
 64)   2D25 CB 11       		 rl c	;
 65)   2D27 30 07       		 jr nc, Mult32_NoAdd	;
 66)   2D29 19          		 add hl, de	;
 67)   2D2A CE 00       		 adc a, 0	;
 68)   2D2C D2 30 2D    		 jp nc, Mult32_NoAdd	;
 69)   2D2F 0C          		 inc c	;
 71)   2D30 10 F1       		 djnz Mult32_Loop	;
 72)   2D32 41          		 ld b, c	;
 73)   2D33 4F          		 ld c, a	;
 74)   2D34 D1          		 POP DE	;
 75)   2D35 C9          		 ret	;
 83)   2D36 AF          		   xor a	;
 84)   2D37 06 08       		   ld b,8	;
 86)   2D39 CB 13       		   rl e	;
 87)   2D3B 17          		   rla	;
 88)   2D3C 91          		   sub c	;
 89)   2D3D 30 01       		   jr nc,Div8_NoAdd	;
 90)   2D3F 81          		   add a,c	;
 92)   2D40 10 F7       		   djnz Div8_Loop	;
 93)   2D42 47          		   ld b,a	;
 94)   2D43 7B          		   ld a,e	;
 95)   2D44 17          		   rla	;
 96)   2D45 2F          		   cpl	;
 97)   2D46 C9          		   ret	;
103)   2D47 AF          		  xor a	;
104)   2D48 06 08       		  ld b, 8	;
107)   2D4A CB 22       		  sla d	;
108)   2D4C 17          		  rla	;
109)   2D4D BB          		  cp e	;
110)   2D4E 38 02       		  jr c, $+4	;
111)   2D50 93          		  sub e	;
112)   2D51 14          		  inc d	;
114)   2D52 10 F6       		  djnz DIV8_8_loop	;
116)   2D54 C9          		  ret	;
122)   2D55 AF          		  xor a	;
123)   2D56 06 10       		  ld b, 16	;
126)   2D58 29          		  add hl, hl	;
127)   2D59 17          		  rla	;
128)   2D5A 38 03       		  jr c, $+5	;
129)   2D5C B9          		  cp c	;
130)   2D5D 38 02       		  jr c, $+4	;
132)   2D5F 91          		  sub c	;
133)   2D60 2C          		  inc l	;
135)   2D61 10 F5       		  djnz DIV16_8_loop	;
137)   2D63 C9          		  ret	;
145)   2D64 21 00 00    		   ld hl,0	;
146)   2D67 78          		   ld a,b	;
147)   2D68 06 08       		   ld b,8	;
149)   2D6A 17          		   rla	;
150)   2D6B ED 6A       		   adc hl,hl	;
151)   2D6D ED 52       		   sbc hl,de	;
152)   2D6F 30 01       		   jr nc,Div16_NoAdd1	;
153)   2D71 19          		   add hl,de	;
155)   2D72 10 F6       		   djnz Div16_Loop1	;
156)   2D74 17          		   rla	;
157)   2D75 2F          		   cpl	;
158)   2D76 47          		   ld b,a	;
159)   2D77 79          		   ld a,c	;
160)   2D78 48          		   ld c,b	;
161)   2D79 06 08       		   ld b,8	;
163)   2D7B 17          		   rla	;
164)   2D7C ED 6A       		   adc hl,hl	;
165)   2D7E ED 52       		   sbc hl,de	;
166)   2D80 30 01       		   jr nc,Div16_NoAdd2	;
167)   2D82 19          		   add hl,de	;
169)   2D83 10 F6       		   djnz Div16_Loop2	;
170)   2D85 17          		   rla	;
171)   2D86 2F          		   cpl	;
172)   2D87 41          		   ld b,c	;
173)   2D88 4F          		   ld c,a	;
174)   2D89 C9          		   ret  	;
181)   2D8A 19          		 ADD HL, DE        ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
182)   2D8B D9          		 EXX	;
183)   2D8C ED 5A       		 ADC HL, DE        ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
184)   2D8E D9          		 EXX	;
187)   2D8F C9          		 RET	;
197)   2D90 11 40 00    		 ld de, $0040	;
198)   2D93 7D          		 ld a, l	;
199)   2D94 6C          		 ld l, h	;
200)   2D95 62          		 ld h, d	;
201)   2D96 B7          		 or a	;
202)   2D97 06 08       		 ld b, 8	;
204)   2D99 ED 52       		 sbc hl, de	;
205)   2D9B 30 01       		 jr nc, Sqr16_Skip	;
206)   2D9D 19          		 add hl, de	;
208)   2D9E 3F          		 ccf	;
209)   2D9F CB 12       		 rl d	;
210)   2DA1 87          		 add a, a	;
211)   2DA2 ED 6A       		 adc hl, hl	;
212)   2DA4 87          		 add a, a	;
213)   2DA5 ED 6A       		 adc hl, hl	;
214)   2DA7 10 F0       		 djnz Sqr16_Loop	;
215)   2DA9 C9          		 ret	;
235)   2DAA 3A 73 FF    		 ld a, (RNDseed)	;
236)   2DAD 47          		 ld b, a 	;
238)   2DAE 0F          		 rrca ; multiply by 32	; multiply by 32
239)   2DAF 0F          		 rrca	;
240)   2DB0 0F          		 rrca	;
241)   2DB1 EE 1F       		 xor 0x1f	;
243)   2DB3 80          		 add a, b	;
244)   2DB4 DE FF       		 sbc a, 255 ; carry	; carry
246)   2DB6 32 73 FF    		 ld (RNDseed), a	;
247)   2DB9 C9          		 ret	;
 10)   2DBA 0E 00       		MNU_CNTITMS: LD C,0   ;ITEM COUNTER	;ITEM COUNTER
 11)   2DBC 06 00       		 LD B,0   ;ITEM LENGTH COUNTER	;ITEM LENGTH COUNTER
 12)   2DBE 16 00       		 LD D,0   ;TEMP ITEM LENGTH COUNTER	;TEMP ITEM LENGTH COUNTER
 13)   2DC0 7E          		MNU_CHKNXT: LD A,(HL)	;
 14)   2DC1 B7          		 OR A	;
 15)   2DC2 C8          		 RET Z   ;RETURN IF MENU ITEM STARTS WITH ZERO	;RETURN IF MENU ITEM STARTS WITH ZERO
 16)   2DC3 0C          		 INC C   ;WE HAVE A NEW ITEM	;WE HAVE A NEW ITEM
 17)   2DC4 16 00       		 LD D,0	;
 18)   2DC6 23          		MNU_LPITM: INC HL	;
 19)   2DC7 14          		 INC D	;
 20)   2DC8 78          		 LD A,B	;
 21)   2DC9 BA          		 CP D	;
 22)   2DCA 30 01       		 JR NC,MNU_NOTBIGER	;
 23)   2DCC 42          		 LD B,D   ;SAVE THE BIGGER ITEMS LENGTH  	;SAVE THE BIGGER ITEMS LENGTH
 24)   2DCD 7E          		MNU_NOTBIGER: LD A,(HL)	;
 25)   2DCE B7          		 OR A	;
 26)   2DCF 20 F5       		 JR NZ, MNU_LPITM	;
 27)   2DD1 23          		 INC HL	;
 28)   2DD2 18 EC       		 JR MNU_CHKNXT	;
 30)   2DD4 DD E5       		PRINTMNUITM: PUSH IX	;
 31)   2DD6 C5          		 PUSH BC	;
 32)   2DD7 CD 48 05    		 CALL OS_PRINTTEXT	;
 33)   2DDA C1          		 POP BC	;
 34)   2DDB DD E1       		 POP IX	;
 35)   2DDD C9          		 RET	;
 38)   2DDE 3A 76 FF    		VGA_REVMNUCLR: LD A,(MENUVCLR)	;
 39)   2DE1 07          		 RLCA	;
 40)   2DE2 07          		 RLCA	;
 41)   2DE3 07          		 RLCA	;
 42)   2DE4 07          		 RLCA	;
 43)   2DE5 32 76 FF    		 LD (MENUVCLR),A	;
 44)   2DE8 2A 77 FF    		 LD HL,(MENULFORE)	;
 45)   2DEB 22 03 FE    		 LD (BCOLOR),HL	;
 46)   2DEE 2A 79 FF    		 LD HL,(MENULBACK)	;
 47)   2DF1 22 01 FE    		 LD (FCOLOR),HL	;
 48)   2DF4 C9          		 RET	;
 51)   2DF5 FE 00       		SETITMCOLOR: CP 0	;
 52)   2DF7 28 05       		 JR Z,DEFCOLOR	;
 53)   2DF9 CD DE 2D    		 CALL VGA_REVMNUCLR	;
 54)   2DFC 18 0C       		 JR SETVGACOL     	;
 55)   2DFE 2A 77 FF    		DEFCOLOR: LD HL,(MENULFORE)	;
 56)   2E01 22 01 FE    		 LD (FCOLOR),HL	;
 57)   2E04 2A 79 FF    		 LD HL,(MENULBACK)	;
 58)   2E07 22 03 FE    		 LD (BCOLOR),HL	;
 59)   2E0A 3A 76 FF    		SETVGACOL: LD A,(MENUVCLR)	;
 60)   2E0D F5          		 PUSH AF	;
 61)   2E0E E6 0F       		 AND $0F	;
 62)   2E10 32 11 FF    		 LD (VGAFCOL),A	;
 63)   2E13 F1          		 POP AF	;
 64)   2E14 07          		 RLCA	;
 65)   2E15 07          		 RLCA	;
 66)   2E16 07          		 RLCA	;
 67)   2E17 07          		 RLCA	;
 68)   2E18 E6 0F       		 AND $0F	;
 69)   2E1A 32 12 FF    		 LD (VGABCOL),A	;
 70)   2E1D C9          		 RET	;
 74)   2E1E FE 00       		RESETITMCOLOR: CP 0	;
 75)   2E20 C8          		 RET Z	;
 77)   2E21 CD DE 2D    		 CALL VGA_REVMNUCLR	;
 78)   2E24 2A 77 FF    		 LD HL,(MENULFORE)	;
 79)   2E27 22 01 FE    		 LD (FCOLOR),HL	;
 80)   2E2A 2A 79 FF    		 LD HL,(MENULBACK)	;
 81)   2E2D 22 03 FE    		 LD (BCOLOR),HL	;
 82)   2E30 C9          		 RET	;
 88)   2E31 F5          		PRINTMENU: PUSH AF	;
 89)   2E32 E5          		 PUSH HL	;
 90)   2E33 D5          		 PUSH DE  	;
 91)   2E34 CD 53 04    		 CALL OS_GOTOXY  ;SET CURSOR TO X,Y=D,E	;SET CURSOR TO X,Y=D,E
 92)   2E37 CD BA 2D    		 CALL MNU_CNTITMS ;C THE ITEM NUMBER B THE MAX LENGTH	;C THE ITEM NUMBER B THE MAX LENGTH
 93)   2E3A C5          		 PUSH BC	;
 94)   2E3B DD 21 00 00 		 LD IX,0	;
 95)   2E3F DD 39       		 ADD IX,SP  	;
 96)   2E41 C5          		 PUSH BC	;
 97)   2E42 CD FC 19    		 CALL VGA_GETCOL  ;GET VGA COLOR ON A	;GET VGA COLOR ON A
 98)   2E45 C1          		 POP BC  	;
 99)   2E46 F5          		 PUSH AF   ;SAVE COLOR INFO	;SAVE COLOR INFO
100)   2E47 2A 01 FE    		 LD HL,(FCOLOR)	;
101)   2E4A E5          		 PUSH HL   ;SAVE COLOR INFO	;SAVE COLOR INFO
102)   2E4B 2A 03 FE    		 LD HL,(BCOLOR)	;
103)   2E4E E5          		 PUSH HL   ;SAVE COLOR INFO	;SAVE COLOR INFO
104)   2E4F 3E 00       		 LD A,0   ;SET MENU COLORS	;SET MENU COLORS
105)   2E51 CD F5 2D    		 CALL SETITMCOLOR	;
106)   2E54 21 D3 FE    		 LD HL,STRGBUFF  ;USE STRGBUFF TO CREATE THE OUT TEXT	;USE STRGBUFF TO CREATE THE OUT TEXT
107)   2E57 E5          		 PUSH HL	;
109)   2E58 04          		 INC B	;
110)   2E59 36 8B       		 LD (HL),139  ;'/'	;'/'
111)   2E5B 23          		PM_AGN1: INC HL	;
112)   2E5C 36 81       		 LD (HL),129  ;'='	;'='
113)   2E5E 10 FB       		 DJNZ PM_AGN1	;
114)   2E60 23          		 INC HL	;
115)   2E61 36 8A       		 LD (HL),138  ;'\'	;'\'
116)   2E63 23          		 INC HL	;
117)   2E64 36 00       		 LD (HL),0	;
118)   2E66 E1          		 POP HL	;
119)   2E67 CD D4 2D    		 CALL PRINTMNUITM	;
120)   2E6A 06 01       		 LD B,1   ;;1ST ITEM	;;1ST ITEM
121)   2E6C DD 66 05    		 LD H,(IX+5)  ;MENU ITEM	;MENU ITEM
122)   2E6F DD 6E 04    		 LD L,(IX+4)	;
123)   2E72 11 D3 FE    		PM_AGN3: LD DE,STRGBUFF	;
124)   2E75 3E 82       		 LD A,130  ;'|'	;'|'
125)   2E77 12          		 LD (DE),A	;
126)   2E78 DD 7E 07    		 LD A,(IX+07)  ;GET SELECTED ITEM	;GET SELECTED ITEM
127)   2E7B B8          		 CP B	;
128)   2E7C 3E 20       		 LD A,' '	;
129)   2E7E 20 02       		 JR NZ, PM_SKP2	;
130)   2E80 3E C5       		 LD A,197  ;'>'	;'>'
131)   2E82 13          		PM_SKP2: INC DE	;
132)   2E83 12          		 LD (DE),A  	;
133)   2E84 0E 00       		 LD C,0   ;COUNT CHARS PRINTED	;COUNT CHARS PRINTED
134)   2E86 7E          		PM_AGN2: LD A,(HL)	;
135)   2E87 13          		 INC DE	;
136)   2E88 B7          		 OR A	;
137)   2E89 28 05       		 JR Z,PM_NXT1  ;ITEM END    	;ITEM END
138)   2E8B 12          		 LD (DE),A	;
139)   2E8C 23          		 INC HL	;
140)   2E8D 0C          		 INC C	;
141)   2E8E 18 F6       		 JR PM_AGN2	;
142)   2E90 E5          		PM_NXT1: PUSH HL  ;SAVE MENU ITEMS IDX	;SAVE MENU ITEMS IDX
143)   2E91 C5          		 PUSH BC	;
144)   2E92 DD 7E 01    		 LD A,(IX+1)  ;A MAX LENGTH	;A MAX LENGTH
145)   2E95 91          		 SUB C	;
146)   2E96 47          		 LD B,A	;
147)   2E97 FE 00       		 CP 0	;
148)   2E99 28 06       		 JR Z,NOSPC  	;
149)   2E9B 3E 20       		 LD A,' '  	;
150)   2E9D 12          		 LD (DE),A	;
151)   2E9E 13          		 INC DE	;
152)   2E9F 10 FC       		 DJNZ $-2  	;
153)   2EA1 C1          		NOSPC: POP BC   	;
154)   2EA2 3E 82       		 LD A,130  ;'|'	;'|'
155)   2EA4 12          		 LD (DE),A  	;
156)   2EA5 13          		 INC DE  	;
157)   2EA6 AF          		 XOR A	;
158)   2EA7 12          		 LD (DE),A  	;
159)   2EA8 DD 56 03    		 LD D,(IX+3)  ;X,Y	;X,Y
160)   2EAB DD 7E 02    		 LD A,(IX+2)	;
161)   2EAE 80          		 ADD A,B   ;ADD MENU ITEM NO	;ADD MENU ITEM NO
162)   2EAF 04          		 INC B	;
163)   2EB0 5F          		 LD E,A	;
164)   2EB1 CD 53 04    		 CALL OS_GOTOXY  ;GOTO XY	;GOTO XY
165)   2EB4 C5          		 PUSH BC	;
166)   2EB5 DD 7E 07    		 LD A,(IX+07)  ;GET SELECTED ITEM	;GET SELECTED ITEM
167)   2EB8 3C          		 INC A   ;1 BASED	;1 BASED
168)   2EB9 B8          		 CP B	;
169)   2EBA 3E 00       		 LD A,0   ;NO CHANGE OF COLORS	;NO CHANGE OF COLORS
170)   2EBC 20 01       		 JR NZ,NOSELEC	;
172)   2EBE 3C          		 INC A	;
173)   2EBF F5          		NOSELEC: PUSH AF	;
174)   2EC0 CD F5 2D    		 CALL SETITMCOLOR ;SETS ITEM COLOR	;SETS ITEM COLOR
175)   2EC3 21 D3 FE    		 LD HL,STRGBUFF	;
176)   2EC6 CD D4 2D    		 CALL PRINTMNUITM	;
177)   2EC9 F1          		 POP AF	;
178)   2ECA CD 1E 2E    		 CALL RESETITMCOLOR ;RESETS THE COLOR IF REVERSED	;RESETS THE COLOR IF REVERSED
179)   2ECD C1          		 POP BC	;
180)   2ECE E1          		 POP HL   ;GET NEXT MENU ITEM	;GET NEXT MENU ITEM
181)   2ECF 23          		 INC HL	;
182)   2ED0 7E          		 LD A,(HL)	;
183)   2ED1 B7          		 OR A	;
184)   2ED2 20 9E       		 JR NZ,PM_AGN3	;
185)   2ED4 DD 46 01    		 LD B,(IX+1)  ;GET STRING LENGTH AT B	;GET STRING LENGTH AT B
186)   2ED7 DD 4E 00    		 LD C,(IX+0)	;
188)   2EDA CD F5 2D    		 CALL SETITMCOLOR ;SETS ITEM COLOR	;SETS ITEM COLOR
189)   2EDD 21 D3 FE    		 LD HL,STRGBUFF  ;USE STRGBUFF TO CREATE THE OUT TEXT	;USE STRGBUFF TO CREATE THE OUT TEXT
190)   2EE0 E5          		 PUSH HL	;
191)   2EE1 36 89       		 LD (HL),137  ;'\'	;'\'
192)   2EE3 04          		 INC B	;
193)   2EE4 23          		PM_AGN4: INC HL	;
194)   2EE5 36 81       		 LD (HL),129  ;'='	;'='
195)   2EE7 10 FB       		 DJNZ PM_AGN4	;
196)   2EE9 23          		 INC HL	;
197)   2EEA 36 88       		 LD (HL),136  ;'/'	;'/'
198)   2EEC 23          		 INC HL	;
199)   2EED 36 00       		 LD (HL),0  	;
200)   2EEF DD 56 03    		 LD D,(IX+3)  ;X,Y	;X,Y
201)   2EF2 DD 7E 02    		 LD A,(IX+2)	;
202)   2EF5 81          		 ADD A,C	;
203)   2EF6 3C          		 INC A	;
204)   2EF7 5F          		 LD E,A	;
205)   2EF8 CD 53 04    		 CALL OS_GOTOXY	;
206)   2EFB E1          		 POP HL	;
207)   2EFC CD D4 2D    		 CALL PRINTMNUITM	;
209)   2EFF E1          		 POP HL	;
210)   2F00 22 03 FE    		 LD (BCOLOR),HL	;
211)   2F03 E1          		 POP HL	;
212)   2F04 22 01 FE    		 LD (FCOLOR),HL	;
213)   2F07 F1          		 POP AF	;
214)   2F08 CD 07 1A    		 CALL VGA_SETCOL  ;RESTORE ORIGINAL COLORS	;RESTORE ORIGINAL COLORS
215)   2F0B C1          		 POP BC	;
216)   2F0C D1          		 POP DE	;
217)   2F0D E1          		 POP HL	;
218)   2F0E F1          		 POP AF	;
219)   2F0F C9          		 RET  	;
226)   2F10 E5          		CREATEMENU: PUSH HL  ;SAVE MENU POSITION AND INFO	;SAVE MENU POSITION AND INFO
227)   2F11 D5          		 PUSH DE	;
228)   2F12 F5          		 PUSH AF	;
229)   2F13 CD 31 2E    		 CALL PRINTMENU	;
230)   2F16 CD F6 03    		CM_GTKEY: CALL GET_CHAR	;
231)   2F19 C1          		 POP BC   ;CURRENT ITEM SELECTED ON A	;CURRENT ITEM SELECTED ON A
232)   2F1A FE 0B       		 CP 11   ;ARROW UP	;ARROW UP
233)   2F1C 20 0B       		 JR NZ,CM_CHKNXT	;
234)   2F1E 78          		 LD A,B	;
235)   2F1F FE 01       		 CP 1	;
236)   2F21 C5          		 PUSH BC	;
237)   2F22 28 F2       		 JR Z,CM_GTKEY  ;NO CHANGE	;NO CHANGE
238)   2F24 F1          		 POP AF	;
239)   2F25 3D          		 DEC A	;
240)   2F26 F5          		 PUSH AF	;
241)   2F27 18 14       		 JR REPRINT  	;
242)   2F29 FE 0A       		CM_CHKNXT: CP 10  ;ARROW DOWN	;ARROW DOWN
243)   2F2B 20 15       		 JR NZ,CM_CHKNXT1	;
244)   2F2D D1          		 POP DE	;
245)   2F2E E1          		 POP HL	;
246)   2F2F E5          		 PUSH HL	;
247)   2F30 D5          		 PUSH DE	;
248)   2F31 C5          		 PUSH BC  	;
249)   2F32 CD BA 2D    		 CALL MNU_CNTITMS ;C THE MENU ITEMS	;C THE MENU ITEMS
250)   2F35 F1          		 POP AF   ;A THE CURRENT ITEM NO	;A THE CURRENT ITEM NO
251)   2F36 B9          		 CP C   ;WE ARE AT THE LAST?	;WE ARE AT THE LAST?
252)   2F37 F5          		 PUSH AF	;
253)   2F38 28 DC       		 JR Z,CM_GTKEY  ;NO CHANGE	;NO CHANGE
254)   2F3A F1          		 POP AF	;
255)   2F3B 3C          		 INC A	;
256)   2F3C F5          		 PUSH AF	;
258)   2F3D F1          		REPRINT: POP AF	;
259)   2F3E D1          		 POP DE	;
260)   2F3F E1          		 POP HL	;
261)   2F40 18 CE       		 JR CREATEMENU	;
262)   2F42 FE 0D       		CM_CHKNXT1: CP 13  ;ENTER RETURN THE SELECTED ITEM	;ENTER RETURN THE SELECTED ITEM
263)   2F44 C5          		 PUSH BC	;
264)   2F45 20 CF       		 JR NZ,CM_GTKEY	;
265)   2F47 C1          		 POP BC	;
266)   2F48 78          		 LD A,B   ;SELECTED ITEM	;SELECTED ITEM
267)   2F49 D1          		 POP DE	;
268)   2F4A E1          		 POP HL	;
269)   2F4B C9          		 RET	;
  4)   2F4C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F50 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F54 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F58 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F5C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F60 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F64 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F68 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F6C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F70 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F74 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F78 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F7C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F80 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F84 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F88 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F8C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F90 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F94 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F98 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F9C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FA0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FA4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FA8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FAC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FB0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FB4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FB8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FBC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FC0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FC4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FC8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FCC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FD0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FD4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FD8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FDC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FE0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FE4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FE8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FEC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FF0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FF4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FF8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FFC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3000 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3004 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3008 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   300C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3010 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3014 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3018 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   301C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3020 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3024 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3028 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   302C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3030 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3034 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3038 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   303C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3040 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3044 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3048 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   304C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3050 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3054 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3058 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   305C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3060 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3064 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3068 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   306C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3070 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3074 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3078 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   307C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3080 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3084 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3088 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   308C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3090 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3094 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3098 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   309C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30AC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30BC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30CC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30DC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30EC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30FC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3100 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3104 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3108 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   310C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3110 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3114 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3118 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   311C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3120 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3124 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3128 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   312C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3130 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3134 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3138 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   313C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3140 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3144 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3148 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   314C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3150 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3154 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3158 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   315C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3160 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3164 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3168 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   316C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3170 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3174 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3178 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   317C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3180 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3184 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3188 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   318C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3190 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3194 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3198 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   319C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31AC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31BC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31CC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31DC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31EC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31FC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3200 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3204 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3208 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   320C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3210 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3214 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3218 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   321C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3220 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3224 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3228 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   322C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3230 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3234 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3238 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   323C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3240 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3244 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3248 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   324C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3250 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3254 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3258 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   325C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3260 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3264 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3268 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   326C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3270 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3274 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3278 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   327C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3280 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3284 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3288 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   328C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3290 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3294 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3298 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   329C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32AC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32BC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32CC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32DC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32EC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32FC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3300 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3304 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3308 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   330C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3310 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3314 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3318 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   331C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3320 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3324 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3328 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   332C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3330 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3334 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3338 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   333C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3340 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3344 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3348 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   334C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3350 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3354 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3358 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   335C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3360 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3364 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3368 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   336C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3370 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3374 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3378 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   337C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3380 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3384 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3388 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   338C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3390 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3394 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3398 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   339C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33AC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33BC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33CC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33DC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33EC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33FC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3400 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3404 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3408 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   340C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3410 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3414 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3418 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   341C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3420 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3424 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3428 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   342C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3430 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3434 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3438 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   343C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3440 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3444 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3448 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   344C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3450 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3454 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3458 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   345C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3460 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3464 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3468 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   346C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3470 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3474 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3478 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   347C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3480 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3484 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3488 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   348C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3490 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3494 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3498 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   349C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34AC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34BC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34CC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34DC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34EC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34FC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3500 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3504 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3508 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   350C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3510 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3514 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3518 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   351C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3520 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3524 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3528 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   352C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3530 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3534 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3538 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   353C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3540 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3544 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3548 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   354C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3550 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3554 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3558 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   355C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3560 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3564 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3568 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   356C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3570 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3574 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3578 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   357C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3580 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3584 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3588 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   358C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3590 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3594 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3598 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   359C 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35AC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35BC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35CC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35DC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35EC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F0 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F4 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F8 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35FC 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  5)   3600 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3604 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3608 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   360C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3610 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3614 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3618 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   361C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3620 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3624 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3628 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   362C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3630 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3634 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3638 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   363C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3640 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3644 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3648 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   364C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3650 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3654 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3658 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   365C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3660 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3664 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3668 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   366C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3670 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3674 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3678 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   367C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3680 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3684 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3688 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   368C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3690 80 01 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3694 7E 00 C0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3698 00 00 FF 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   369C 80 02 F0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36AC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36BC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36CC 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D0 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D8 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36DC 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E0 14 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E4 00 18 18 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E8 18 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36EC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F8 0C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36FC 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3700 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3704 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3708 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   370C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3710 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3714 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3718 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   371C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3720 00 10 12 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3724 10 60 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3728 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   372C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3730 38 10 38 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3734 08 7C 1C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3738 38 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   373C 08 00 20 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3740 3C 18 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3744 7C 7E 7E 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3748 42 38 02 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   374C 40 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3750 7C 3C 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3754 FE 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3758 44 44 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   375C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3760 20 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3764 04 00 08 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3768 40 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   376C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3770 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3774 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3778 00 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   377C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3780 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3784 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3788 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   378C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3790 C0 03 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3794 7E 00 B0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3798 00 00 00 06 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   379C 40 04 C0 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A0 7C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A4 38 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37AC 60 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B0 00 7E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B4 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B8 00 00 00 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37BC 38 38 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C0 7E 10 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C4 10 00 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C8 60 08 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37CC 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D0 08 20 28 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D4 20 10 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D8 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37DC 08 20 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E0 28 00 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E4 18 18 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E8 3C 42 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37EC 44 10 10 3A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F0 00 3E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F4 04 FE 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F8 10 7E 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3800 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3804 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3808 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   380C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3810 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3814 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3818 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   381C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3820 00 10 24 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3824 3C 64 50 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3828 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   382C 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3830 44 30 44 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3834 18 40 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3838 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   383C 10 00 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3840 42 24 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3844 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3848 42 10 02 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   384C 40 66 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3850 42 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3854 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3858 44 44 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   385C 40 08 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3860 10 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3864 04 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3868 40 10 10 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   386C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3870 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3874 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3878 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   387C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3880 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3884 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3888 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   388C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3890 E0 07 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3894 7E 7E 8C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3898 00 00 00 0A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   389C 20 08 A0 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A0 44 00 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A4 40 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A8 00 00 7C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38AC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B0 00 42 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B4 00 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B8 00 00 7C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38BC 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C0 22 28 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C4 10 10 60 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C8 10 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38CC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D0 10 10 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D4 10 28 28 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D8 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38DC 10 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E0 00 00 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E4 24 24 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E8 42 42 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38EC EE 38 00 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F0 00 50 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F4 08 82 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F8 18 90 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38FC 28 48 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3900 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3904 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3908 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   390C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3910 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3914 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3918 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   391C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3920 00 10 48 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3924 50 08 50 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3928 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   392C 00 00 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3930 4C 10 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3934 28 78 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3938 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   393C 20 7C 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3940 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3944 22 40 40 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3948 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   394C 40 5A 52 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3950 42 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3954 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3958 28 28 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   395C 20 08 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3960 08 38 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3964 3C 38 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3968 78 00 00 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   396C 10 EC 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3970 78 3C 5C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3974 38 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3978 44 44 7C 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   397C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3980 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3984 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3988 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   398C 10 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3990 F0 0F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3994 7E 7E 82 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3998 18 18 00 12 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   399C 12 90 90 41 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A0 40 34 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A4 38 1C 28 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A8 58 10 20 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39AC 10 44 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B0 7C 00 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B4 7C 44 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B8 44 44 20 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39BC 7C 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C0 10 28 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C4 10 08 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C8 30 08 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39CC 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D0 38 38 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D4 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39DC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E0 78 3C 52 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39EC FE 7C 38 4C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F0 3A 90 6C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F4 08 44 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F8 24 90 6C 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A24 38 10 20 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A28 40 04 10 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A2C 00 7C 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A30 54 10 18 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A34 48 04 78 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A38 38 3C 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A3C 40 00 04 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A40 52 7E 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A44 22 7C 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A48 7E 10 02 70 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A4C 40 5A 4A 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A50 7C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A58 10 10 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A5C 10 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A60 00 04 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A64 44 44 38 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A70 44 44 60 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A74 10 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A78 28 44 08 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A7C 00 04 32 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A80 00 FF 08 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A84 FF FF F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A88 F8 0F F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A8C E0 03 E0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A90 F8 1F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A94 7E 7E 8C 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A98 24 3C 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A9C 0A A0 08 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA0 40 48 78 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA4 44 20 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA8 64 10 78 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB0 28 18 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB4 10 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB8 24 24 40 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ABC 92 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC0 08 44 24 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC4 10 7C 2C 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC8 14 08 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ACC 04 04 04 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD0 44 44 44 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ADC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE0 44 40 4A 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE4 78 7E 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE8 42 42 FE FE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AEC FE FE 04 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF0 4C FC 12 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF4 08 44 7C 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF8 24 9C 92 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B20 00 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B24 14 20 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B28 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B2C 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B30 64 10 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B34 7C 04 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B38 44 04 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B3C 20 7C 08 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B40 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B44 22 40 40 4E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B48 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B4C 40 42 46 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B50 40 4A 48 02 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B58 28 10 20 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B5C 08 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B60 00 7C 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B64 44 7C 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B68 44 10 10 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B70 44 44 40 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B78 10 44 10 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B7C 10 08 4C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B8C 00 00 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B90 FC 3F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B94 7E 7E B0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B98 24 3C 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B9C 06 C0 04 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA4 44 18 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA8 44 10 20 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB0 28 00 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB8 28 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BBC 7C 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC0 10 44 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC4 54 08 32 2C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC8 6C 08 20 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BCC 7C 7C 7C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD0 7C 7C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE0 44 40 46 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BEC 7C D6 7C 64 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF0 54 90 FE 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF4 08 28 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF8 18 90 9E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C20 00 00 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C24 78 4C 88 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C28 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C2C 00 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C30 44 10 40 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C34 08 44 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C38 44 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C3C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C40 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C44 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C48 42 10 42 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C4C 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C50 40 44 44 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C54 10 42 24 66 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C58 44 10 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C5C 04 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C60 00 44 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C64 44 40 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C70 78 3C 40 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C78 28 44 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C7C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C90 FE 7F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C94 7E 7E C0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C98 18 18 00 80 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C9C 3E F0 02 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA4 44 20 54 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA8 44 10 40 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CAC 44 44 18 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB0 28 42 64 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB8 10 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CBC 10 10 44 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC0 22 82 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC4 38 10 0C 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC8 14 08 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CCC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD0 40 40 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE0 44 40 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE8 42 42 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CEC 38 10 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF0 64 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF4 08 28 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF8 08 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D1C F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D24 10 0C 74 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D28 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D2C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D30 38 38 7C 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D34 08 38 38 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D38 38 70 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D3C 08 00 20 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D40 3C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D44 7C 7E 40 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D48 42 38 3C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D4C 7E 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D50 40 3A 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D54 10 3C 18 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D58 44 10 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D5C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D60 00 3C 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D64 3C 3C 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D68 44 18 10 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D6C 18 92 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D70 40 04 40 78 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D74 18 3C 10 6C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D78 44 3C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D7C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA0 40 34 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA4 38 1C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA8 44 08 38 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DAC 44 78 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB0 24 7E 58 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB4 08 38 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB8 28 18 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DBC 38 38 C6 EE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC0 7E FE 66 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC4 10 00 10 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC8 1E 08 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DCC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD0 3C 3C 3C 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD4 18 18 18 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DDC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE0 44 3C 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE4 7C 42 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE8 3C 3C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DEC 10 38 3C B8 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF0 B8 9E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF4 08 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF8 30 7E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E2C 20 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E38 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E5C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E64 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E68 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E78 00 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA8 04 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB4 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB8 48 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC4 00 00 1E 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC8 04 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ECC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE0 00 08 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF4 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F2C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F38 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F5C 00 00 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F64 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F68 00 00 30 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F78 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA8 04 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB4 00 00 00 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB8 44 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FCC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE0 00 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
 14)   FE00 00          		 @FLAGS DEFS 1        ; Flags: B7=ESC PRESSED,B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 15)   FE01 00 00       		 @FCOLOR DEFS 2       ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 16)   FE03 00 00       		 @BCOLOR DEFS 2       ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 17)   FE05 00 00       		 @FGRCOL DEFS 2       ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 18)   FE07 00 00       		 @BGRCOL DEFS 2       ;BACKGROUND COLOR FOR GRAPHICS	;BACKGROUND COLOR FOR GRAPHICS
 19)   FE09 00 00       		 @FCOLTM DEFS 2       ;TEMP FOREGROUND COLOR	;TEMP FOREGROUND COLOR
 20)   FE0B 00 00       		 @BCOLTM DEFS 2       ;TEMP BACKGROUND COLOR	;TEMP BACKGROUND COLOR
 21)   FE0D 00          		 @CURSORX DEFS 1       ;0-79	;0-79
 22)   FE0E 00          		 @CURSORY DEFS 1       ;0-47	;0-47
 23)   FE0F 00          		 @SCRLN DEFS 1        ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 24)   FE10 00          		 @LASTCHAR DEFS 1      ;	;
 25)   FE11 00          		 @CURSSTAT DEFS 1       ;IF BIT 0 SET THEN SHOW ELSE HIDE,IF BIT 1 SET THEN VISIBLE ELSE HIDDEN ,BIT 2 EN/DIS CURSOR; BIT 3 EN/DIS TIME DISPLAY ON LCD	;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN , BIT 2 EN/DIS CURSOR; BIT 3 EN/DIS TIME DISPLAY ON LCD
 26)   FE12 00 00       		 @EDPTR DEFS 2	;
 27)   FE14 00          		 @OPTVAL DEFS 1	;
 28)   FE15 00          		 @INKEY DEFS 1	;
 29)   FE16 00          		 @VDUMODE DEFS 1       ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 30)   FE17 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE23 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE27 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE33 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 31)   FE37 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE43 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE47 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE53 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 32)   FE57 00 00       		 @GR_LASTX3 DEFS 2	;
 33)   FE59 00 00       		 @GR_LASTY3 DEFS 2	;
 34)   FE5B 00 00       		 @GR_LASTX2 DEFS 2	;
 35)   FE5D 00 00       		 @GR_LASTY2 DEFS 2	;
 36)   FE5F 00 00       		 @GR_LASTX DEFS 2	;
 37)   FE61 00 00       		 @GR_LASTY DEFS 2	;
 38)   FE63 00 00       		 @GR_PARAM1 DEFS 2	;
 39)   FE65 00 00       		 @GR_PARAM2 DEFS 2	;
 40)   FE67 00 00       		 @GR_PARAM3 DEFS 2	;
 41)   FE69 00 00       		 @GR_PARAM4 DEFS 2	;
 43)   FE6B 00 00       		 @FILL_X DEFS 2	;
 44)   FE6D 00 00       		 @FILL_Y DEFS 2	;
 45)   FE6F 00 00       		 @FILL_L DEFS 2	;
 46)   FE71 00 00       		 @FILL_X1 DEFS 2	;
 47)   FE73 00 00       		 @FILL_X2 DEFS 2	;
 48)   FE75 00 00       		 @FILL_DY DEFS 2	;
 49)   FE77 00 00       		 @FILL_Q DEFS 2        ;START OF QUEUE	;START OF QUEUE
 50)   FE79 00 00       		 @FILL_IDX DEFS 2       ;INDEX OF QUEUE	;INDEX OF QUEUE
 51)   FE7B 00 00       		 @FILL_PY DEFS 2       ;FOR PUSH/POP	;FOR PUSH/POP
 52)   FE7D 00 00       		 @FILL_PXL DEFS 2	;
 53)   FE7F 00 00       		 @FILL_PXR DEFS 2	;
 54)   FE81 00 00       		 @FILL_PDY DEFS 2	;
 55)   FE83 00 00       		 @FILL_OV DEFS 2       ;OLD COLOR	;OLD COLOR
 56)   FE85 00 00       		 @FILL_OLDSP DEFS 2      ; OLD SP	; OLD SP
 57)   FE87 00          		 @LCD_DSPCTRL DEFS 1      ;LCD I2C 16X2	;LCD I2C 16X2
 58)   FE88 00          		 @LCD_DSPMODE DEFS 1      ;LCD I2C 16X2	;LCD I2C 16X2
 59)   FE89 00          		 @LCD_STSMASK DEFS 1      ;LCD I2C 16X2 	;LCD I2C 16X2
 60)   FE8A 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE8E 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE92 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE96 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE9A 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE9E 00 00       		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 61)   FEA0 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEA4 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEA8 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEAC 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEB0 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEB4 00 00       		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 62)   FEB6 00          		 @FFSTAT DEFS 1        ;FOR OUTPUT FLIP FLOPS DEVEPR,DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 63)   FEB7 00          		 @KEYCTR DEFS 1        ;FOR USB KEYBOARD	;FOR USB KEYBOARD
 64)   FEB8 00          		 @SERERR DEFS 1       ;	;
 65)   FEB9 00          		 @SERER2 DEFS 1        ;AT RAM ADDRESS	;AT RAM ADDRESS
 66)   FEBA 00          		 @DISPCT DEFS 1        ;	;
 67)   FEBB 00          		 @SCRNST DEFS 1       ;SCREEN STATUS BIT 0 ON/OFF LCD,BIT 1 ON/OFF VGA	;SCREEN STATUS BIT 0 ON/OFF LCD, BIT 1 ON/OFF VGA
 68)   FEBC 00          		 @LCDCX DEFS 1        ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 69)   FEBD 00          		 @LCDCY DEFS 1        ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 70)   FEBE 00 00       		 @PRGEX DEFS 2        ;2 BYTES	;2 BYTES
 71)   FEC0 00          		 @TVSTAT DEFS 1        ;1 BYTE	;1 BYTE
 72)   FEC1 00 00 00 00 		 @TIMECTR DEFS 4	;
 73)   FEC5 00          		 @INT2TE DEFS 1	;
 74)   FEC6 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FECA 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FECE 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FED2 00          		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 75)   FED3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FED7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEDB 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEDF 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEE3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEE7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEEB 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEEF 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEF3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEF7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 76)   FEFB 00 00 00 00 		 @STRGCMD DEFS 4	;
 77)   FEFF 00          		 @FID DEFS 1	;
 78)   FF00 00          		 @SPC DEFS 1	;
 79)   FF01 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 79)   FF05 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 80)   FF09 00 00 00 00 		 @TMPG  DEFS 4  ;TEMP PAGE FOR VIDEO VGA	;TEMP PAGE FOR VIDEO VGA
 81)   FF0D 00 00 00 00 		 @PGSEM DEFS 4  ;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS	;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS
 83)   FF11 00          		 @VGAFCOL DEFS 1  ;VGA FORE COLOR	;VGA FORE COLOR
 84)   FF12 00          		 @VGABCOL DEFS 1  ;VGA BACK COLOR	;VGA BACK COLOR
 85)   FF13 00          		 @VGATX_X DEFS 1  ;VGA CURRENT X POS	;VGA CURRENT X POS
 86)   FF14 00          		 @VGATX_Y DEFS 1  ;VGA CUR Y POS	;VGA CUR Y POS
 87)   FF15 00          		 @VGAMAXX DEFS 1  ;MAX HORZ CHARS	;MAX HORZ CHARS
 88)   FF16 00          		 @VGAMAXY DEFS 1  ;MAX VERT LINES	;MAX VERT LINES
 89)   FF17 00          		 @VGATMPC DEFS 1  ;TMP CHAR FOR CURSOR	;TMP CHAR FOR CURSOR
 90)   FF18 00          		 @VGABUF  DEFS 1  ;BUFFER TO WRITE-BIT 0 TO SELECT	;BUFFER TO WRITE - BIT 0 TO SELECT
 91)   FF19 00 00       		 @VGASTADR DEFS 2 ;START ADDRESS TO CALCULATE TEXT OUTPUT	;START ADDRESS TO CALCULATE TEXT OUTPUT
 93)   FF1B 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF1F 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF23 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF27 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF2B 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF2F 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF33 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF37 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF3B 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF3F 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF43 00 00       		 @COMDGET DEFS 2  ;OS COMDGET ADDRESS (CHANGE THIS IN BASIC TO RETURN THERE)	;OS COMDGET ADDRESS (CHANGE THIS IN BASIC TO RETURN THERE)
 96)   FF45 00 00 00 00 		 @B2DINV DEFS 8  ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 96)   FF49 00 00 00 00 		 @B2DINV DEFS 8  ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 97)   FF4D 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF51 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF55 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF59 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF5D 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 98)   FF61 00          		 @B2DEND DEFS 1  ;0 FOR TERMINATE THE STRING	;0 FOR TERMINATE THE STRING
 99)   FF62 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
 99)   FF66 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
 99)   FF6A 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
 99)   FF6E 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
100)   FF72 00          		 @DISPEN DEFS 1  ;BIT 0 = LCD OFF/ON BIT 1 = VGA OFF/ON	;BIT 0 = LCD OFF/ON BIT 1 = VGA OFF/ON
101)   FF73 00          		 @RNDseed DEFS 1  ;RANDOM SEED	;RANDOM SEED
103)   FF74 00          		 @KBDFLAG DEFS 1  ;KEYB FLAG	;KEYB FLAG
104)   FF75 00          		 @LASTKEY DEFS 1  ;LAST KEY PRESSED	;LAST KEY PRESSED
105)   FF76 00          		 @MENUVCLR DEFS 1 ;MENU VGA COLOR FORE AND BACK HI NIBBLE IS BACKGROUND	;MENU VGA COLOR FORE AND BACK HI NIBBLE IS BACKGROUND
106)   FF77 00 00       		 @MENULFORE DEFS 2 ;MENU LCD COLOR FOREGROUND	;MENU LCD COLOR FOREGROUND
107)   FF79 00 00       		 @MENULBACK DEFS 2 ;MENU LCD COLOR BACKGROUND	;MENU LCD COLOR BACKGROUND
111)   FF7B 00 00       		               DEFS 2	;
112)   FF7D 00 00       		               DEFS 2	;
113)   FF7F 00 00       		               DEFS 2	;
114)   FF81 00 00       		               DEFS 2	;
116)   FF83 00 00       		               DEFS 2	;
117)   FF85 00 00       		               DEFS 2	;
118)   FF87 00 00       		               DEFS 2	;
119)   FF89 00 00       		               DEFS 2	;
121)   FF8B 00          		               DEFS 1	;
122)   FF8C 00          		               DEFS 1	;
123)   FF8D 00          		               DEFS 1	;
124)   FF8E 00          		               DEFS 1	;
125)   FF8F 00          		@CHANST:       DEFS 1    ;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED                	;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED
