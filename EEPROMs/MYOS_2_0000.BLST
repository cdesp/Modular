  3)   0000 00          		 NOP	;
  4)   0001 C3 00 02    		 JP START	;
  5)   0004 C3 AE 02    		 JP MENU	;
  6)   0007 25          		 VERSION DEFB $25    ; AT ADDR=7 VER 2.4	; AT ADDR=7 VER 2.4
  7)   0008 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   000C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0010 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0014 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0018 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   001C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0020 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0024 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0028 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   002C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0030 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0034 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
 10)   0038 C3 3E 05    		 JP INTSER	;
 13)   003B 00 00 00 00 		 ALIGN 256	;
 13)   003F 00 00 00 00 		 ALIGN 256	;
 13)   0043 00 00 00 00 		 ALIGN 256	;
 13)   0047 00 00 00 00 		 ALIGN 256	;
 13)   004B 00 00 00 00 		 ALIGN 256	;
 13)   004F 00 00 00 00 		 ALIGN 256	;
 13)   0053 00 00 00 00 		 ALIGN 256	;
 13)   0057 00 00 00 00 		 ALIGN 256	;
 13)   005B 00 00 00 00 		 ALIGN 256	;
 13)   005F 00 00 00 00 		 ALIGN 256	;
 13)   0063 00 00 00 00 		 ALIGN 256	;
 13)   0067 00 00 00 00 		 ALIGN 256	;
 13)   006B 00 00 00 00 		 ALIGN 256	;
 13)   006F 00 00 00 00 		 ALIGN 256	;
 13)   0073 00 00 00 00 		 ALIGN 256	;
 13)   0077 00 00 00 00 		 ALIGN 256	;
 13)   007B 00 00 00 00 		 ALIGN 256	;
 13)   007F 00 00 00 00 		 ALIGN 256	;
 13)   0083 00 00 00 00 		 ALIGN 256	;
 13)   0087 00 00 00 00 		 ALIGN 256	;
 13)   008B 00 00 00 00 		 ALIGN 256	;
 13)   008F 00 00 00 00 		 ALIGN 256	;
 13)   0093 00 00 00 00 		 ALIGN 256	;
 13)   0097 00 00 00 00 		 ALIGN 256	;
 13)   009B 00 00 00 00 		 ALIGN 256	;
 13)   009F 00 00 00 00 		 ALIGN 256	;
 13)   00A3 00 00 00 00 		 ALIGN 256	;
 13)   00A7 00 00 00 00 		 ALIGN 256	;
 13)   00AB 00 00 00 00 		 ALIGN 256	;
 13)   00AF 00 00 00 00 		 ALIGN 256	;
 13)   00B3 00 00 00 00 		 ALIGN 256	;
 13)   00B7 00 00 00 00 		 ALIGN 256	;
 13)   00BB 00 00 00 00 		 ALIGN 256	;
 13)   00BF 00 00 00 00 		 ALIGN 256	;
 13)   00C3 00 00 00 00 		 ALIGN 256	;
 13)   00C7 00 00 00 00 		 ALIGN 256	;
 13)   00CB 00 00 00 00 		 ALIGN 256	;
 13)   00CF 00 00 00 00 		 ALIGN 256	;
 13)   00D3 00 00 00 00 		 ALIGN 256	;
 13)   00D7 00 00 00 00 		 ALIGN 256	;
 13)   00DB 00 00 00 00 		 ALIGN 256	;
 13)   00DF 00 00 00 00 		 ALIGN 256	;
 13)   00E3 00 00 00 00 		 ALIGN 256	;
 13)   00E7 00 00 00 00 		 ALIGN 256	;
 13)   00EB 00 00 00 00 		 ALIGN 256	;
 13)   00EF 00 00 00 00 		 ALIGN 256	;
 13)   00F3 00 00 00 00 		 ALIGN 256	;
 13)   00F7 00 00 00 00 		 ALIGN 256	;
 13)   00FB 00 00 00 00 		 ALIGN 256	;
 13)   00FF 00          		 ALIGN 256	;
 16)   0100 C3 02 1E    		 JP MYOS_CLRSCN	;
 17)   0103 C3 05 1E    		 JP MYOS_PUTIME	;
 18)   0106 C3 16 1E    		 JP MYOS_GETIME	;
 19)   0109 C3 27 1E    		 JP MYOS_PUTCSR	;
 20)   010C C3 39 1E    		 JP MYOS_GETCSR	;
 21)   010F C3 48 1E    		 JP MYOS_OSRDCH	;
 22)   0112 C3 05 20    		 JP MYOS_PROMPT	;
 23)   0115 C3 53 1E    		 JP MYOS_OSWRCH	;
 24)   0118 C3 33 20    		 JP MYOS_OSKEY	;
 25)   011B C3 6F 20    		 JP MYOS_OSINIT	;
 26)   011E C3 2D 25    		 JP MYOS_OSLINE	;
 27)   0121 C3 3A 21    		 JP MYOS_OSCLI	;
 28)   0124 C3 46 24    		 JP MYOS_OSBPUT	;
 29)   0127 C3 56 24    		 JP MYOS_OSBGET	;
 30)   012A C3 83 24    		 JP MYOS_OSSTAT	;
 31)   012D C3 7E 24    		 JP MYOS_OSSHUT	;
 32)   0130 C3 1F 24    		 JP MYOS_OSOPEN	;
 33)   0133 C3 8A 24    		 JP MYOS_OSCALL	;
 34)   0136 C3 6A 1D    		 JP MYOS_OSSAVE	;
 35)   0139 C3 AA 1D    		 JP MYOS_OSLOAD	;
 36)   013C C3 70 24    		 JP MYOS_GETPTR	;
 37)   013F C3 75 24    		 JP MYOS_PUTPTR	;
 38)   0142 C3 79 24    		 JP MYOS_GETEXT	;
 39)   0145 C3 8B 24    		 JP MYOS_RESET	;
 40)   0148 C3 5F 20    		 JP MYOS_TRAP	;
 41)   014B C3 62 20    		 JP MYOS_LTRAP	;
 42)   014E C3 93 24    		 JP MYOS_CLG	;
 43)   0151 C3 AB 24    		 JP MYOS_COLOUR	;
 44)   0154 C3 B6 24    		 JP MYOS_DRAW	;
 45)   0157 C3 DC 24    		 JP MYOS_ENVEL	;
 46)   015A C3 9F 24    		 JP MYOS_GCOL	;
 47)   015D C3 8C 24    		 JP MYOS_MODE	;
 48)   0160 C3 C0 24    		 JP MYOS_MOVE	;
 49)   0163 C3 CA 24    		 JP MYOS_PLOT	;
 50)   0166 C3 DC 24    		 JP MYOS_SOUND	;
 51)   0169 C3 DC 24    		 JP MYOS_ADVAL	;
 52)   016C C3 D4 24    		 JP MYOS_POINT	;
 53)   016F C3 E2 24    		 JP MYOS_GETIMS	;
 54)   0172 C3 DC 24    		 JP MYOS_PUTIMS	;
 56)   0175 00 00 00 00 		 ALIGN 256	;
 56)   0179 00 00 00 00 		 ALIGN 256	;
 56)   017D 00 00 00 00 		 ALIGN 256	;
 56)   0181 00 00 00 00 		 ALIGN 256	;
 56)   0185 00 00 00 00 		 ALIGN 256	;
 56)   0189 00 00 00 00 		 ALIGN 256	;
 56)   018D 00 00 00 00 		 ALIGN 256	;
 56)   0191 00 00 00 00 		 ALIGN 256	;
 56)   0195 00 00 00 00 		 ALIGN 256	;
 56)   0199 00 00 00 00 		 ALIGN 256	;
 56)   019D 00 00 00 00 		 ALIGN 256	;
 56)   01A1 00 00 00 00 		 ALIGN 256	;
 56)   01A5 00 00 00 00 		 ALIGN 256	;
 56)   01A9 00 00 00 00 		 ALIGN 256	;
 56)   01AD 00 00 00 00 		 ALIGN 256	;
 56)   01B1 00 00 00 00 		 ALIGN 256	;
 56)   01B5 00 00 00 00 		 ALIGN 256	;
 56)   01B9 00 00 00 00 		 ALIGN 256	;
 56)   01BD 00 00 00 00 		 ALIGN 256	;
 56)   01C1 00 00 00 00 		 ALIGN 256	;
 56)   01C5 00 00 00 00 		 ALIGN 256	;
 56)   01C9 00 00 00 00 		 ALIGN 256	;
 56)   01CD 00 00 00 00 		 ALIGN 256	;
 56)   01D1 00 00 00 00 		 ALIGN 256	;
 56)   01D5 00 00 00 00 		 ALIGN 256	;
 56)   01D9 00 00 00 00 		 ALIGN 256	;
 56)   01DD 00 00 00 00 		 ALIGN 256	;
 56)   01E1 00 00 00 00 		 ALIGN 256	;
 56)   01E5 00 00 00 00 		 ALIGN 256	;
 56)   01E9 00 00 00 00 		 ALIGN 256	;
 56)   01ED 00 00 00 00 		 ALIGN 256	;
 56)   01F1 00 00 00 00 		 ALIGN 256	;
 56)   01F5 00 00 00 00 		 ALIGN 256	;
 56)   01F9 00 00 00 00 		 ALIGN 256	;
 56)   01FD 00 00 00    		 ALIGN 256	;
 39)   0200 F3          		@START: DI	;
 49)   0201 C3 45 02    		 JP BOOT        ;SKIP TESTING	;SKIP TESTING
 54)   0204 06 05       		CN1: LD B, 5	;
 55)   0206 0E 00       		AGN1: LD C, 0	;
 56)   0208 3E 00       		 LD A, 0	;
 57)   020A ED 79       		 OUT (C), A	;
 58)   020C 0E 00       		 LD C, 0	;
 59)   020E 3E FF       		 LD A, 255	;
 60)   0210 ED 79       		 OUT (C), A	;
 61)   0212 10 F2       		 DJNZ AGN1	;
 66)   0214 11 01 00    		 LD DE, 1	;
 67)   0217 3E 00       		 LD A, 0        ;WRITE 0	;WRITE 0
 68)   0219 4F          		 LD C, A	;
 69)   021A 21 00 80    		 LD HL, RAMAD	;
 70)   021D 06 08       		 LD B, 8	;
 71)   021F 77          		AGN2: LD (HL), A	;
 72)   0220 4E          		 LD C, (HL)	;
 73)   0221 B9          		 CP C	;
 74)   0222 C2 3C 02    		 JP NZ, ERR	;
 75)   0225 19          		 ADD HL, DE	;
 76)   0226 C6 20       		 ADD A, 32       ;WRITE +32	;WRITE +32
 77)   0228 4F          		 LD C, A	;
 78)   0229 10 F4       		 DJNZ AGN2	;
 80)   022B 06 05       		 LD B, 5	;
 81)   022D 0E 08       		AGN3: LD C, 00001000B       ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
 82)   022F 3E 40       		 LD A, 64	;
 83)   0231 ED 79       		 OUT (C), A	;
 84)   0233 C6 80       		 ADD A, 128	;
 85)   0235 ED 79       		 OUT (C), A	;
 86)   0237 10 F4       		 DJNZ AGN3        ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
 87)   0239 C3 45 02    		 JP BOOT	;
 90)   023C 0E 38       		ERR: LD C, 00111000B       ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
 91)   023E 3E 40       		 LD A, 64	;
 92)   0240 ED 79       		 OUT (C), A	;
 94)   0242 C3 3C 02    		 JP ERR         ;DO AGAIN PORT 1	;DO AGAIN PORT 1
101)   0245 F3          		@BOOT: DI	;
102)   0246 ED 56       		 IM 1	;
103)   0248 31 FF FA    		 LD SP, STACKP	;
104)   024B CD AF 03    		 CALL FF_CLR	;
105)   024E CD D7 03    		 CALL EPROMOFF	;
106)   0251 CD 47 06    		 CALL KEYBDATON	;
109)   0254 3E 0C       		 LD A, 12        ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
110)   0256 CD A9 05    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
111)   0259 21 EF 04    		 LD HL, STR00	;
112)   025C CD D1 05    		 CALL RS_TXT	;
115)   025F CD 79 0B    		 CALL I2C_INIT        ;INITIALIZE I2C	;INITIALIZE I2C
116)   0262 CD 05 0D    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
117)   0265 CD DA 0D    		 CALL LCD16_INIT       ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
118)   0268 21 03 04    		 LD HL, SVER	;
119)   026B CD 5B 0E    		 CALL LCD16_PRINT       ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
122)   026E CD 54 09    		 CALL STRG_INIT	;
123)   0271 21 26 05    		 LD HL, STR001	;
124)   0274 CD D1 05    		 CALL RS_TXT	;
132)   0277 CD EE 0E    		 CALL LCD_INIT	;
133)   027A 21 00 00    		 LD HL, COL_BLACK	;
134)   027D 22 03 FE    		 LD (BCOLOR), HL	;
135)   0280 21 FF FF    		 LD HL, COL_WHITE	;
136)   0283 22 01 FE    		 LD (FCOLOR), HL	;
137)   0286 21 DC 04    		 LD HL, STRSCR	;
138)   0289 CD D1 05    		 CALL RS_TXT	;
139)   028C CD FC 16    		 CALL LCD_CLRSCR	;
140)   028F AF          		 XOR A	;
141)   0290 32 0F FE    		 LD (SCRLN), A	;
142)   0293 3E 00       		 LD A, 0	;
143)   0295 32 0D FE    		 LD (CURSORX), A	;
144)   0298 3E 00       		 LD A, 0	;
145)   029A 32 0E FE    		 LD (CURSORY), A	;
146)   029D 21 38 04    		 LD HL, STR0        ;LCD INIT MSG ON 0,0	;LCD INIT MSG ON 0,0
147)   02A0 CD 3C 17    		 CALL LCD_MSG	;
148)   02A3 3E 1E       		 LD A, 30	;
149)   02A5 32 0D FE    		 LD (CURSORX), A	;
150)   02A8 21 03 04    		 LD HL, SVER	;
151)   02AB CD 3C 17    		 CALL LCD_MSG        ;PRINT VERSION ON 30,0	;PRINT VERSION ON 30,0
159)   02AE AF          		@MENU: XOR A	;
160)   02AF 32 0F FE    		 LD (SCRLN), A	;
161)   02B2 21 AD 04    		 LD HL, STRMN	;
162)   02B5 CD D1 05    		 CALL RS_TXT       ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
163)   02B8 21 05 05    		 LD HL, STR01	;
164)   02BB CD D1 05    		 CALL RS_TXT       ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
171)   02BE 21 13 04    		 LD HL, SMENU	;
172)   02C1 3E 05       		 LD A, 5	;
173)   02C3 32 0D FE    		 LD (CURSORX), A	;
174)   02C6 3E 02       		 LD A, 2	;
175)   02C8 32 0E FE    		 LD (CURSORY), A	;
176)   02CB CD 3C 17    		 CALL LCD_MSG	;
178)   02CE CD 0F 03    		 CALL GET_CHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
181)   02D1 FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
182)   02D3 CC 2D 03    		 CALL Z, UPLOD	;
183)   02D6 FE 58       		 CP 'X'	;
184)   02D8 CA 24 03    		 JP Z, EXEC	;
185)   02DB FE 54       		 CP 'T'	;
186)   02DD CC 7D 03    		 CALL Z, RSTST	;
187)   02E0 FE 59       		 CP 'Y'	;
188)   02E2 CC 93 03    		 CALL Z, RSTST2	;
189)   02E5 FE 48       		 CP 'H'	;
190)   02E7 CC A2 03    		 CALL Z, XMTST	;
191)   02EA FE 4A       		 CP 'J'	;
192)   02EC CC 62 03    		 CALL Z, DNLOD	;
195)   02EF FE 43       		 CP 'C'	;
196)   02F1 CC FC 16    		 CALL Z, LCD_CLRSCR	;
197)   02F4 FE 42       		 CP 'B'	;
198)   02F6 CA 00 40    		 JP Z, BBCBASIC	;
200)   02F9 C3 AE 02    		 JP MENU	;
207)   02FC CD 03 25    		@GET_CHARNW: CALL CHKCURS	;
208)   02FF AF          		 XOR A	;
210)   0300 CD 04 06    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
211)   0303 28 04       		 JR Z, CNW_TST2	;
212)   0305 CD DB 05    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
213)   0308 C9          		 RET	;
217)   0309 CD 1D 07    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
218)   030C FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
229)   030E C9          		 RET	;
234)   030F CD 03 25    		@GET_CHAR: CALL CHKCURS	;
235)   0312 AF          		 XOR A	;
237)   0313 CD 04 06    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
238)   0316 28 04       		 JR Z, CW_TST2	;
239)   0318 CD DB 05    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
240)   031B C9          		 RET	;
244)   031C CD 1D 07    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
245)   031F FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
246)   0321 28 EC       		 JR Z, GET_CHAR	;
256)   0323 C9          		 RET	;
267)   0324 3E 05       		 LD A, 5	;
268)   0326 CD 54 26    		 CALL SCPRN	;
270)   0329 2A A4 FE    		 LD HL, (PRGEX)	;
277)   032C E9          		 JP (HL)	;
284)   032D F3          		UPLOD: DI	;
289)   032E CD DB 05    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
290)   0331 6F          		 LD L, A	;
291)   0332 CD DB 05    		 CALL RS_RX	;
292)   0335 67          		 LD H, A	;
293)   0336 CD DB 05    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
294)   0339 4F          		 LD C, A	;
295)   033A CD DB 05    		 CALL RS_RX	;
296)   033D 47          		 LD B, A	;
298)   033E 22 A4 FE    		 LD (PRGEX), HL	;
299)   0341 3A A5 FE    		 LD A, (PRGEX + 1)	;
307)   0344 FE 80       		 CP $80	;
308)   0346 DC DF 03    		 CALL C, EPROMON       ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
310)   0349 E5          		NORWR: PUSH HL	;
311)   034A CD DB 05    		NXB: CALL RS_RX	;
312)   034D 77          		 LD (HL), A	;
313)   034E 23          		 INC HL	;
314)   034F 0B          		 DEC BC	;
315)   0350 78          		 LD A, B	;
316)   0351 B1          		 OR C	;
317)   0352 20 F6       		 JR NZ, NXB       ;LOOP ALL BYTES	;LOOP ALL BYTES
318)   0354 CD D7 03    		 CALL EPROMOFF	;
323)   0357 3E 05       		 LD A, 5	;
324)   0359 CD 54 26    		 CALL SCPRN	;
325)   035C CD 61 26    		 CALL DELAY	;
327)   035F E1          		 POP HL	;
330)   0360 FB          		 EI	;
331)   0361 C9          		 RET	;
342)   0362 CD DB 05    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
343)   0365 6F          		 LD L, A	;
344)   0366 CD DB 05    		 CALL RS_RX	;
345)   0369 67          		 LD H, A	;
346)   036A CD DB 05    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
347)   036D 4F          		 LD C, A	;
348)   036E CD DB 05    		 CALL RS_RX	;
349)   0371 47          		 LD B, A	;
351)   0372 7E          		NXB3: LD A, (HL)	;
352)   0373 CD C2 05    		 CALL RS_TX       ;SEND BYTE	;SEND BYTE
353)   0376 23          		 INC HL	;
354)   0377 0B          		 DEC BC	;
355)   0378 78          		 LD A, B	;
356)   0379 B1          		 OR C	;
357)   037A 20 F6       		 JR NZ, NXB3       ;LOOP ALL BYTES	;LOOP ALL BYTES
358)   037C C9          		 RET	;
360)   037D 00          		RSTST: NOP        ;GET A KEY FROM RS232	;GET A KEY FROM RS232
361)   037E 06 0A       		 LD B, 10	;
362)   0380 C5          		TEN: PUSH BC	;
363)   0381 CD DB 05    		 CALL RS_RX	;
365)   0384 CD C2 05    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
367)   0387 3E 20       		 LD A, ' '	;
369)   0389 3E 52       		 LD A, 'R'	;
372)   038B CD 6E 26    		 CALL DEL2	;
374)   038E C1          		 POP BC	;
375)   038F 10 EF       		 DJNZ TEN	;
377)   0391 AF          		 XOR A	;
378)   0392 C9          		 RET	;
380)   0393 00          		RSTST2: NOP        ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
381)   0394 06 FF       		 LD B, 255	;
382)   0396 C5          		TEN2: PUSH BC	;
383)   0397 CD DB 05    		 CALL RS_RX	;
385)   039A CD C2 05    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
387)   039D C1          		 POP BC	;
388)   039E 10 F6       		 DJNZ TEN2	;
389)   03A0 AF          		 XOR A	;
390)   03A1 C9          		 RET	;
393)   03A2 00          		XMTST: NOP        ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
394)   03A3 06 FF       		 LD B, 255	;
395)   03A5 C5          		TEN3: PUSH BC	;
396)   03A6 78          		 LD A, B	;
397)   03A7 CD C2 05    		 CALL RS_TX       ;SEND  THE BYTE	;SEND  THE BYTE
398)   03AA C1          		 POP BC	;
399)   03AB 10 F8       		 DJNZ TEN3	;
400)   03AD AF          		 XOR A	;
401)   03AE C9          		 RET	;
407)   03AF AF          		 XOR A	;
408)   03B0 32 9D FE    		 LD (FFSTAT), A	;
409)   03B3 C9          		 RET	;
412)   03B4 04          		@FF_OFF: INC B        ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
413)   03B5 AF          		 XOR A	;
414)   03B6 37          		 SCF	;
415)   03B7 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
416)   03B8 10 FD       		 DJNZ SBAGN	;
417)   03BA 2F          		 CPL         ;INVERSE BITS ON A	;INVERSE BITS ON A
418)   03BB 47          		 LD B, A	;
419)   03BC 3A 9D FE    		 LD A, (FFSTAT)	;
420)   03BF A0          		 AND B         ;ZERO THE BIT	;ZERO THE BIT
421)   03C0 32 9D FE    		 LD (FFSTAT), A	;
422)   03C3 D3 08       		 OUT (DEVFFS), A	;
423)   03C5 C9          		 RET	;
426)   03C6 04          		@FF_ON: INC B         ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
427)   03C7 AF          		 XOR A	;
428)   03C8 37          		 SCF	;
429)   03C9 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
430)   03CA 10 FD       		 DJNZ SBAGN	;
431)   03CC 47          		 LD B, A	;
432)   03CD 3A 9D FE    		 LD A, (FFSTAT)	;
433)   03D0 B0          		 OR B         ;SET THE BIT	;SET THE BIT
434)   03D1 32 9D FE    		 LD (FFSTAT), A	;
435)   03D4 D3 08       		 OUT (DEVFFS), A	;
436)   03D6 C9          		 RET	;
438)   03D7 C5          		@EPROMOFF: PUSH BC	;
439)   03D8 06 00       		 LD B, 0	;
440)   03DA CD B4 03    		 CALL FF_OFF	;
441)   03DD C1          		 POP BC	;
442)   03DE C9          		 RET	;
444)   03DF C5          		@EPROMON: PUSH BC	;
445)   03E0 06 00       		 LD B, 0	;
446)   03E2 CD C6 03    		 CALL FF_ON	;
447)   03E5 C1          		 POP BC	;
448)   03E6 C9          		 RET	;
454)   03E7 F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
455)   03E8 26 00       		 LD H, 0	;
456)   03EA 6F          		 LD L, A	;
457)   03EB 11 AC FE    		 LD DE, MYNUM	;
458)   03EE CD 88 26    		 CALL OUTASC	;
460)   03F1 3E 0A       		 LD A, 10	;
461)   03F3 12          		 LD (DE), A	;
462)   03F4 13          		 INC DE	;
463)   03F5 3E 0D       		 LD A, 13	;
464)   03F7 12          		 LD (DE), A	;
465)   03F8 13          		 INC DE	;
466)   03F9 AF          		 XOR A	;
467)   03FA 12          		 LD (DE), A	;
469)   03FB 21 AC FE    		 LD HL, MYNUM	;
470)   03FE CD D1 05    		 CALL RS_TXT	;
471)   0401 F1          		 POP AF	;
472)   0402 C9          		 RET	;
477)   0403 41 54 4C 41 		SVER: DEFM "ATLAS OS V "	;
477)   0407 53 20 4F 53 		SVER: DEFM "ATLAS OS V "	;
477)   040B 20 56 20    		SVER: DEFM "ATLAS OS V "	;
478)   040E 30 2E 32 37 		 DB MJVER,'.',MNVER1,MNVER2	;
479)   0412 00          		 DB 0	;
481)   0413 55 3A 55 50 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
481)   0417 20 4A 3A 44 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
481)   041B 4E 20 58 3A 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
481)   041F 52 55 4E 20 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
481)   0423 54 59 48 3A 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
481)   0427 52 53 20 43 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
481)   042B 3A 43 4C 53 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
481)   042F 20 42 3A 42 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
481)   0433 41 53 49 43 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
482)   0437 00          		 DB 0	;
484)   0438 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
484)   043C 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
484)   0440 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
484)   0444 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
485)   0447 00          		 DB 0	;
487)   0448 52 53 32 33 		STR1: DEFM "RS232 INIT"	;
487)   044C 32 20 49 4E 		STR1: DEFM "RS232 INIT"	;
487)   0450 49 54       		STR1: DEFM "RS232 INIT"	;
488)   0452 00          		 DB 0	;
490)   0453 50 52 4F 47 		STR2: DEFM "PROGRAM HALTED"	;
490)   0457 52 41 4D 20 		STR2: DEFM "PROGRAM HALTED"	;
490)   045B 48 41 4C 54 		STR2: DEFM "PROGRAM HALTED"	;
490)   045F 45 44       		STR2: DEFM "PROGRAM HALTED"	;
491)   0461 00          		 DB 0	;
493)   0462 57 41 49 54 		STR02: DEFM "WAITING..."	;
493)   0466 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
493)   046A 2E 2E       		STR02: DEFM "WAITING..."	;
494)   046C 00          		 DB 0	;
496)   046D 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
496)   0471 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
496)   0475 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
496)   0479 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
497)   047B 00          		 DB 0	;
499)   047C 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
499)   0480 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
499)   0484 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
500)   0488 00          		 DB 0	;
502)   0489 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
502)   048D 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
502)   0491 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
503)   0494 00          		 DB 0	;
505)   0495 49 4D 41 47 		STIMG: DEFM "IMAGE COPY"	;
505)   0499 45 20 43 4F 		STIMG: DEFM "IMAGE COPY"	;
505)   049D 50 59       		STIMG: DEFM "IMAGE COPY"	;
506)   049F 00          		 DB 0	;
508)   04A0 53 43 52 45 		TXTMES: DEFM "SCREEN READY"	;
508)   04A4 45 4E 20 52 		TXTMES: DEFM "SCREEN READY"	;
508)   04A8 45 41 44 59 		TXTMES: DEFM "SCREEN READY"	;
509)   04AC 00          		 DB 0	;
511)   04AD 55 49 3A 55 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04B1 50 20 4A 3A 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04B5 44 4E 20 58 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04B9 3A 52 55 4E 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04BD 20 54 59 48 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04C1 3A 52 53 20 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04C5 53 3A 44 49 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04C9 53 50 20 43 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04CD 3A 43 4C 53 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04D1 20 42 3A 42 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
511)   04D5 41 53 49 43 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
512)   04D9 0A 0D 00    		 DB 10,13,0	;
514)   04DC 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
514)   04E0 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
514)   04E4 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
514)   04E8 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
515)   04EC 0A 0D 00    		 DB 10,13,0	;
517)   04EF 0A 0D       		STR00: DB 10,13	;
518)   04F1 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
518)   04F5 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
518)   04F9 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
518)   04FD 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
518)   0501 44          		 DEFM "RS232 INITIALIZED"	;
519)   0502 0A 0D 00    		 DB 10,13,0	;
521)   0505 0A 0D       		STR01: DB 10,13	;
522)   0507 57 41 49 54 		 DEFM "WAITING..."	;
522)   050B 49 4E 47 2E 		 DEFM "WAITING..."	;
522)   050F 2E 2E       		 DEFM "WAITING..."	;
523)   0511 0A 0D 00    		 DB 10,13,0	;
524)   0514 00          		 DB 0	;
526)   0515 0A 0D       		STR06: DB 10,13	;
527)   0517 4B 45 59 20 		 DEFM "KEY PRESSED"	;
527)   051B 50 52 45 53 		 DEFM "KEY PRESSED"	;
527)   051F 53 45 44    		 DEFM "KEY PRESSED"	;
528)   0522 0A 0D 00    		 DB 10,13,0	;
529)   0525 00          		 DB 0	;
531)   0526 0A 0D       		STR001: DB 10,13	;
532)   0528 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
532)   052C 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
532)   0530 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
532)   0534 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
532)   0538 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
533)   053B 0A 0D 00    		 DB 10,13,0	;
  2)   053E E5          		 PUSH HL	;
  3)   053F F5          		 PUSH AF	;
  4)   0540 C5          		 PUSH BC	;
  5)   0541 DD E5       		 PUSH IX	;
  9)   0543 DB 18       		 IN A, (DEVINP)	;
 10)   0545 2F          		 CPL	;
 11)   0546 E6 07       		 AND 0X07       ;BITS 0-2	;BITS 0-2
 12)   0548 3D          		 DEC A         ;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE	;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE
 13)   0549 DD 21 67 05 		 LD IX, MYINTADDR	;
 14)   054D 06 00       		 LD B, 0	;
 15)   054F 4F          		 LD C, A	;
 16)   0550 CB 21       		 SLA C        ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 17)   0552 DD 09       		 ADD IX, BC	;
 18)   0554 DD 6E 00    		 LD L, (IX)	;
 19)   0557 DD 66 01    		 LD H, (IX + 1)	;
 20)   055A 01 5F 05    		 LD BC, IS_EX	;
 21)   055D C5          		 PUSH BC        ;RETURN ADDRESS	;RETURN ADDRESS
 22)   055E E9          		 JP (HL)        ;JP TO HL	;JP TO HL
 24)   055F DD E1       		IS_EX: POP IX	;
 25)   0561 C1          		 POP BC	;
 26)   0562 F1          		 POP AF	;
 27)   0563 E1          		 POP HL	;
 28)   0564 FB          		 EI	;
 29)   0565 ED 4D       		 RETI	;
 31)   0567 83 05       		MYINTADDR: DEFW INT_TIMER	;
 32)   0569 77 05       		 DEFW SAVETE	;
 33)   056B 80 05       		 DEFW DOCLRINT	;
 34)   056D 80 05       		 DEFW DOCLRINT	;
 35)   056F 80 05       		 DEFW DOCLRINT	;
 36)   0571 80 05       		 DEFW DOCLRINT	;
 37)   0573 80 05       		 DEFW DOCLRINT	;
 38)   0575 80 05       		 DEFW DOCLRINT	;
 40)   0577 D3 40       		SAVETE: OUT (DEVINT), A       ;CLEAR THE INTERRUPT	;CLEAR THE INTERRUPT
 41)   0579 21 AB FE    		 LD HL, INT2TE        ;TEARING EFFECT	;TEARING EFFECT
 42)   057C 3E 01       		 LD A, 1	;
 43)   057E 77          		 LD (HL),A        ;	;
 44)   057F C9          		 RET	;
 47)   0580 D3 40       		DOCLRINT: OUT (DEVINT), A	;
 48)   0582 C9          		 RET	;
 50)   0583 D3 40       		INT_TIMER: OUT (DEVINT), A	;
 51)   0585 21 A7 FE    		 LD HL, TIMECTR	;
 52)   0588 34          		 INC (HL)	;
 53)   0589 7E          		 LD A, (HL)	;
 54)   058A FE 00       		 CP 0	;
 55)   058C C0          		 RET NZ	;
 56)   058D 23          		 INC HL	;
 57)   058E 34          		 INC (HL)	;
 58)   058F 7E          		 LD A, (HL)	;
 59)   0590 FE 00       		 CP 0	;
 60)   0592 C0          		 RET NZ	;
 61)   0593 23          		 INC HL	;
 62)   0594 34          		 INC (HL)	;
 63)   0595 7E          		 LD A, (HL)	;
 64)   0596 FE 00       		 CP 0	;
 65)   0598 C0          		 RET NZ	;
 66)   0599 23          		 INC HL	;
 67)   059A 34          		 INC (HL)	;
 68)   059B 7E          		 LD A, (HL)	;
 69)   059C FE 00       		 CP 0	;
 70)   059E C0          		 RET NZ	;
 72)   059F 21 00 00    		 LD HL, 0	;
 73)   05A2 22 A7 FE    		 LD (TIMECTR), HL	;
 74)   05A5 22 A9 FE    		 LD (TIMECTR + 2), HL	;
 75)   05A8 C9          		 RET	;
 15)   05A9 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   05A9 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   05A9 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   05A9 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   05A9 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   05A9 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   05A9 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 44)   05A9 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   05A9 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   05A9 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   05A9 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   05A9 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   05A9 F5          		RS_INI: PUSH AF	;
 63)   05AA 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 64)   05AC D3 23       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 73)   05AE F1          		 POP AF	;
 74)   05AF D3 20       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 75)   05B1 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   05B3 D3 21       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 77)   05B5 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   05B7 D3 23       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 80)   05B9 3E 00       		 LD A, 0	;
 81)   05BB D3 22       		 OUT (FCR), A        ;//was commented	;//was commented
 82)   05BD 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   05BF D3 21       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 84)   05C1 C9          		 RET	;
 87)   05C2 CD C8 05    		RS_TX: CALL RSTXRD	;
 88)   05C5 D3 20       		 OUT (THR), A	;
 90)   05C7 C9          		 RET	;
 94)   05C8 F5          		RSTXRD: PUSH AF	;
 95)   05C9 DB 25       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 96)   05CB CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   05CD 28 FA       		 JR Z, RSTXLP	;
 98)   05CF F1          		 POP AF	;
 99)   05D0 C9          		 RET	;
102)   05D1 7E          		RS_TXT: LD A, (HL)	;
103)   05D2 23          		 INC HL	;
104)   05D3 FE 00       		 CP 0	;
105)   05D5 C8          		 RET Z	;
106)   05D6 CD C2 05    		 CALL RS_TX	;
107)   05D9 18 F6       		 JR RS_TXT	;
114)   05DB F3          		RS_RX: DI	;
115)   05DC 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   05DE D3 24       		 OUT (MCR), A	;
117)   05E0 CD F9 05    		 CALL RSRXRD	;
118)   05E3 AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   05E4 D3 24       		 OUT (MCR), A	;
121)   05E6 DB 20       		 IN A, (RBR)	;
122)   05E8 FB          		 EI	;
123)   05E9 C9          		 RET	;
125)   05EA 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   05EC D3 24       		 OUT (MCR), A	;
127)   05EE DB 25       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
128)   05F0 CB 47       		 BIT 0, A	;
129)   05F2 28 03       		 JR Z, RS_NOCHAR	;
130)   05F4 F3          		 DI	;
131)   05F5 18 EC       		 JR RS_GTCH	;
132)   05F7 AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
133)   05F8 C9          		 RET	;
140)   05F9 F3          		RSRXRD: DI	;
141)   05FA F5          		 PUSH AF	;
142)   05FB DB 25       		RSRXLP: IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
143)   05FD CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
144)   05FF 28 FA       		 JR Z, RSRXLP	;
145)   0601 F1          		 POP AF	;
146)   0602 FB          		 EI	;
147)   0603 C9          		 RET	;
151)   0604 DB 25       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
152)   0606 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
153)   0608 C9          		 RET	;
155)   0609 F5          		SHLCD: PUSH AF	;
157)   060A F1          		 POP AF	;
159)   060B C9          		 RET	;
163)   060C F5          		CHKERR: PUSH AF	;
164)   060D E5          		 PUSH HL	;
165)   060E C5          		 PUSH BC	;
166)   060F DB 25       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
167)   0611 CB 67       		 BIT 4, A	;
168)   0613 28 04       		 JR Z, LBLPE	;
169)   0615 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
170)   0617 18 1A       		 JR EXIT	;
171)   0619 CB 57       		LBLPE: BIT 2, A	;
172)   061B 28 04       		 JR Z, LBLFE	;
173)   061D 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
174)   061F 18 12       		 JR EXIT	;
175)   0621 CB 5F       		LBLFE: BIT 3, A	;
176)   0623 28 04       		 JR Z, LBLOE	;
177)   0625 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
178)   0627 18 0A       		 JR EXIT	;
179)   0629 CB 4F       		LBLOE: BIT 1, A	;
180)   062B 28 04       		 JR Z, LBLNE	;
181)   062D 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
182)   062F 18 02       		 JR EXIT	;
183)   0631 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
184)   0633 21 9F FE    		EXIT: LD HL, SERERR	;
185)   0636 77          		 LD (HL), A	;
187)   0637 C1          		 POP BC	;
188)   0638 E1          		 POP HL	;
189)   0639 F1          		 POP AF	;
190)   063A C9          		 RET	;
 15)   063B 	            		 DEVKBI EQU DEVINP      ; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP	; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP
 21)   063B 06 01       		@KEYBCLKON: LD B, UKB_OUT_CLK	;
 22)   063D CD B4 03    		 CALL FF_OFF	;
 23)   0640 C9          		 RET	;
 25)   0641 06 01       		@KEYBCLKOFF: LD B, UKB_OUT_CLK	;
 26)   0643 CD C6 03    		 CALL FF_ON	;
 27)   0646 C9          		 RET	;
 29)   0647 06 02       		@KEYBDATON: LD B, UKB_OUT_DAT	;
 30)   0649 CD B4 03    		 CALL FF_OFF	;
 31)   064C C9          		 RET	;
 33)   064D 06 02       		@KEYBDATOFF: LD B, UKB_OUT_DAT	;
 34)   064F CD C6 03    		 CALL FF_ON	;
 35)   0652 C9          		 RET	;
 37)   0653 CD 3B 06    		PS2ISK: CALL KEYBCLKON        ;KEYBOARD ENABLED	;KEYBOARD ENABLED
 38)   0656 06 46       		 LD B, SAMP        ;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)	;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)
 39)   0658 DB 18       		CHAG: IN A, (DEVKBI)	;
 40)   065A 57          		 LD D, A	;
 41)   065B CB 77       		 BIT UKB_IN_CLK, A      ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 42)   065D 28 08       		 JR Z, KEYOK	;
 43)   065F 10 F7       		 DJNZ CHAG	;
 45)   0661 3E 01       		PS2NTP: LD A, 1        ;SET A TO 1 MEANS NO KEY AVAILABLE	;SET A TO 1 MEANS NO KEY AVAILABLE
 46)   0663 CD 41 06    		 CALL KEYBCLKOFF	;
 47)   0666 C9          		 RET	;
 48)   0667 AF          		KEYOK: XOR A        ;SET A TO 0 MEANS WE HAVE A KEY	;SET A TO 0 MEANS WE HAVE A KEY
 49)   0668 C9          		 RET	;
 52)   0669 06 46       		WAITFORHIGH: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 53)   066B B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 54)   066C DB 18       		WH1: IN A, (DEVKBI)	;
 55)   066E 57          		 LD D, A	;
 56)   066F CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 57)   0671 C0          		 RET NZ	;
 58)   0672 10 F8       		 DJNZ WH1	;
 59)   0674 37          		 SCF	;
 60)   0675 C9          		 RET	;
 62)   0676 06 46       		WAITFORLOW1: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 63)   0678 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 64)   0679 DB 18       		WL1: IN A, (DEVKBI)	;
 65)   067B 57          		 LD D, A	;
 66)   067C CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 67)   067E C8          		 RET Z	;
 68)   067F 10 F8       		 DJNZ WL1	;
 69)   0681 37          		 SCF	;
 70)   0682 C9          		 RET	;
 72)   0683 CD 76 06    		WAITFORLOW: CALL WAITFORLOW1	;
 73)   0686 D8          		 RET C	;
 74)   0687 DB 18       		 IN A, (DEVKBI)        ;SOME MORE TIMES TO BE SURE	;SOME MORE TIMES TO BE SURE
 75)   0689 DB 18       		 IN A, (DEVKBI)	;
 76)   068B 57          		 LD D, A	;
 77)   068C C9          		 RET	;
 79)   068D F3          		@NEWBYTE: DI	;
 80)   068E 7A          		 LD A, D        ;BIT 7 HAS THE DATA	;BIT 7 HAS THE DATA
 81)   068F CB 7F       		 BIT UKB_IN_DAT, A	;
 82)   0691 20 2D       		 JR NZ, ERROR0       ;ALWAYS START WITH 0	;ALWAYS START WITH 0
 83)   0693 06 08       		 LD B, 8	;
 84)   0695 48          		NXTBIT: LD C, B        ;SAVE B	;SAVE B
 85)   0696 CD 69 06    		 CALL WAITFORHIGH	;
 86)   0699 D8          		 RET C	;
 87)   069A CD 83 06    		 CALL WAITFORLOW	;
 88)   069D D8          		 RET C	;
 89)   069E CB 27       		 SLA A        ;BIT 7=DATA IS ON C FLAG	;BIT 7=DATA IS ON C FLAG
 90)   06A0 CB 1B       		 RR E        ;CARRY GOES TO BIT 7 OF E	;CARRY GOES TO BIT 7 OF E
 91)   06A2 41          		 LD B, C        ;RESTORE C	;RESTORE C
 92)   06A3 10 F0       		 DJNZ NXTBIT	;
 93)   06A5 CD 69 06    		 CALL WAITFORHIGH	;
 94)   06A8 D8          		 RET C	;
 95)   06A9 CD 83 06    		 CALL WAITFORLOW	;
 96)   06AC D8          		 RET C	;
 98)   06AD CD 69 06    		 CALL WAITFORHIGH	;
 99)   06B0 D8          		 RET C	;
100)   06B1 CD 83 06    		 CALL WAITFORLOW	;
101)   06B4 D8          		 RET C	;
102)   06B5 CB 7F       		 BIT UKB_IN_DAT, A	;
103)   06B7 28 10       		 JR Z, ERROR1       ;ALWAYS ENDS WITH 1	;ALWAYS ENDS WITH 1
104)   06B9 CD 69 06    		 CALL WAITFORHIGH       ;WAIT FOR END OF TRANSMITION	;WAIT FOR END OF TRANSMITION
105)   06BC D8          		 RET C	;
107)   06BD 7B          		 LD A, E	;
108)   06BE FB          		 EI	;
109)   06BF C9          		 RET	;
110)   06C0 21 D5 06    		ERROR0: LD HL, MSER4	;
111)   06C3 CD D1 05    		 CALL RS_TXT	;
112)   06C6 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
113)   06C7 FB          		 EI	;
114)   06C8 C9          		 RET	;
115)   06C9 D5          		ERROR1: PUSH DE	;
116)   06CA 21 EA 06    		 LD HL, MSER5	;
117)   06CD CD D1 05    		 CALL RS_TXT	;
118)   06D0 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
119)   06D1 D1          		 POP DE	;
120)   06D2 7B          		 LD A, E        ;MAYBE IGNORE THIS	;MAYBE IGNORE THIS
121)   06D3 FB          		 EI	;
122)   06D4 C9          		 RET	;
123)   06D5 4B 42 5F 45 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   06D9 52 52 3A 20 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   06DD 53 54 41 52 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   06E1 54 20 42 49 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   06E5 54 2E       		MSER4: DEFM "KB_ERR: START BIT."	;
124)   06E7 0A 0D 00    		 DB 10,13,0	;
125)   06EA 4B 42 5F 45 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   06EE 52 52 3A 20 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   06F2 53 54 4F 50 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   06F6 20 42 49 54 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   06FA 2E          		MSER5: DEFM "KB_ERR: STOP BIT."	;
126)   06FB 0A 0D 00    		 DB 10,13,0	;
128)   06FE 01 0A 00    		PS2KEY: LD BC, 10	;
129)   0701 0B          		PS2AGN: DEC BC	;
130)   0702 78          		 LD A, B	;
131)   0703 B1          		 OR C	;
132)   0704 28 0F       		 JR Z, PS2TIMEOUT	;
133)   0706 C5          		 PUSH BC	;
134)   0707 CD 53 06    		 CALL PS2ISK	;
135)   070A B7          		 OR A	;
136)   070B C1          		 POP BC	;
137)   070C 20 F3       		 JR NZ, PS2AGN       ;NO KEY YET	;NO KEY YET
139)   070E CD 8D 06    		 CALL NEWBYTE	;
140)   0711 38 02       		 JR C, PS2TIMEOUT      ;ERROR SO INVALIDATE A	;ERROR SO INVALIDATE A
141)   0713 18 02       		 JR PS2EX	;
142)   0715 AF          		PS2TIMEOUT: XOR A       ;0 CODE IS INVALID	;0 CODE IS INVALID
143)   0716 FB          		 EI	;
144)   0717 F5          		PS2EX: PUSH AF	;
145)   0718 CD 41 06    		 CALL KEYBCLKOFF	;
146)   071B F1          		 POP AF	;
147)   071C C9          		 RET	;
150)   071D CD 25 07    		READCHAR: CALL GTKEY	;
151)   0720 C8          		 RET Z	;
152)   0721 CD E4 07    		 CALL PS2LOK	;
153)   0724 C9          		 RET	;
156)   0725 CD FE 06    		@GTKEY: CALL PS2KEY       ;GET A KEY FROM PS2	;GET A KEY FROM PS2
157)   0728 FE E1       		 CP $E1         ;BREAK KEY	;BREAK KEY
158)   072A CC 51 07    		 CALL Z, GTBRK	;
159)   072D FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
160)   072F CC 95 07    		 CALL Z, GTREL	;
161)   0732 FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
162)   0734 CC 5B 07    		 CALL Z, GTEXT	;
165)   0737 FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
166)   0739 CC C0 07    		 CALL Z, SHFTOG	;
167)   073C FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
168)   073E CC C0 07    		 CALL Z, SHFTOG	;
169)   0741 FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
170)   0743 CC C9 07    		 CALL Z, CTRTOG	;
171)   0746 FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
172)   0748 CC D2 07    		 CALL Z, ALTTOG	;
173)   074B FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
174)   074D CC DB 07    		 CALL Z, CAPSTOG	;
177)   0750 C9          		 RET	;
179)   0751 CD FE 06    		GTBRK: CALL PS2KEY       ;$14 OR $F0	;$14 OR $F0
180)   0754 FE F0       		 CP $F0	;
181)   0756 C8          		 RET Z	;
182)   0757 CD FE 06    		 CALL PS2KEY       ;$77	;$77
183)   075A C9          		 RET	;
185)   075B CD FE 06    		GTEXT: CALL PS2KEY       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
186)   075E FE 6B       		 CP $6B         ;LEFT	;LEFT
187)   0760 C8          		 RET Z	;
188)   0761 FE 72       		 CP $72        ;DOWN	;DOWN
189)   0763 C8          		 RET Z	;
190)   0764 FE 74       		 CP $74        ;RIGHT	;RIGHT
191)   0766 C8          		 RET Z	;
192)   0767 FE 75       		 CP $75        ;UP	;UP
193)   0769 C8          		 RET Z	;
194)   076A FE 70       		 CP $70        ;INSERT	;INSERT
195)   076C C8          		 RET Z	;
196)   076D FE 6C       		 CP $6C        ;HOME	;HOME
197)   076F C8          		 RET Z	;
198)   0770 FE 7D       		 CP $7D        ;PG UP	;PG UP
199)   0772 C8          		 RET Z	;
200)   0773 FE 7A       		 CP $7A        ;PG DN	;PG DN
201)   0775 C8          		 RET Z	;
202)   0776 FE 69       		 CP $69        ;END	;END
203)   0778 C8          		 RET Z	;
204)   0779 FE 71       		 CP $71        ;DEL	;DEL
205)   077B C8          		 RET Z	;
206)   077C FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
207)   077E C8          		 RET Z	;
208)   077F FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
209)   0781 C8          		 RET Z	;
210)   0782 FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
211)   0784 C8          		 RET Z	;
212)   0785 FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
213)   0787 C8          		 RET Z	;
214)   0788 FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
215)   078A C8          		 RET Z	;
216)   078B FE F0       		 CP $F0	;
217)   078D C2 93 07    		 JP NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
218)   0790 CD FE 06    		 CALL PS2KEY       ; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT	; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT
220)   0793 AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
221)   0794 C9          		 RET	;
224)   0795 CD FE 06    		GTREL: CALL PS2KEY       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
225)   0798 FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
226)   079A CC AE 07    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
227)   079D FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
228)   079F CC B4 07    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
229)   07A2 FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
230)   07A4 CC BA 07    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
231)   07A7 FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
232)   07A9 CC AE 07    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
233)   07AC AF          		 XOR A         ; NO KEY	; NO KEY
234)   07AD C9          		 RET	;
236)   07AE 21 9E FE    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
237)   07B1 CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
238)   07B3 C9          		 RET	;
240)   07B4 21 9E FE    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
241)   07B7 CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
242)   07B9 C9          		 RET	;
244)   07BA 21 9E FE    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
245)   07BD CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
246)   07BF C9          		 RET	;
248)   07C0 21 9E FE    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
249)   07C3 3E 40       		 LD A, $40       ; MASK	; MASK
250)   07C5 AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
251)   07C6 77          		 LD (HL), A       ; SAVE	; SAVE
252)   07C7 AF          		 XOR A         ; NO KEY	; NO KEY
253)   07C8 C9          		 RET	;
255)   07C9 21 9E FE    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
256)   07CC 3E 80       		 LD A, $80       ; MASK	; MASK
257)   07CE AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
258)   07CF 77          		 LD (HL), A       ; SAVE	; SAVE
259)   07D0 AF          		 XOR A         ; NO KEY	; NO KEY
260)   07D1 C9          		 RET	;
262)   07D2 21 9E FE    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
263)   07D5 3E 20       		 LD A, $20	;
264)   07D7 AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
265)   07D8 77          		 LD (HL), A       ; SAVE	; SAVE
266)   07D9 AF          		 XOR A         ; NO KEY	; NO KEY
267)   07DA C9          		 RET	;
269)   07DB 21 9E FE    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
270)   07DE 3E 10       		 LD A, $10	;
271)   07E0 AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
272)   07E1 77          		 LD (HL), A       ; SAVE	; SAVE
273)   07E2 AF          		 XOR A         ; NO KEY	; NO KEY
274)   07E3 C9          		 RET	;
277)   07E4 21 9E FE    		@PS2LOK: LD HL, KEYCTR	;
278)   07E7 47          		 LD B, A        ; SAVE A	; SAVE A
279)   07E8 7E          		 LD A, (HL)       ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
280)   07E9 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
281)   07EA CB 1F       		 RR A	;
282)   07EC CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
283)   07EE A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
284)   07EF CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED	;CHECK IF BIT 4 IS 0 = UNSHIFTED
285)   07F1 78          		 LD A, B        ;RESTORE A	;RESTORE A
290)   07F2 21 00 08    		 LD HL, PS2TAB1       ;UNSHIFTED	;UNSHIFTED
291)   07F5 28 03       		 JR Z, PLK1	;
292)   07F7 21 AA 08    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
293)   07FA 06 00       		PLK1: LD B, 0	;
294)   07FC 4F          		 LD C, A	;
295)   07FD 09          		 ADD HL, BC	;
296)   07FE 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
297)   07FF C9          		 RET	;
301)   0800 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
301)   0804 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
301)   0808 00 00       		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
302)   080A 00 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
302)   080E 60 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
302)   0812 00 00       		 DB 0,0,0,0,'`',0,0,0,0,0	;
303)   0814 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   0818 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   081C 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
304)   081E 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
304)   0822 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
304)   0826 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
305)   0828 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   082C 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   0830 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
306)   0832 62 68 67 6D 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   0836 36 00 00 2C 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   083A 6D 6A       		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
307)   083C 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
307)   0840 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
307)   0844 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
308)   0846 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
308)   084A 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
308)   084E 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
309)   0850 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
309)   0854 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
309)   0858 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
310)   085A 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
310)   085E 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
310)   0862 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
311)   0864 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
311)   0868 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
311)   086C 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
312)   086E 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
312)   0872 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
312)   0876 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
313)   0878 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
313)   087C 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
313)   0880 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
314)   0882 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
314)   0886 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
314)   088A 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
315)   088C 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
315)   0890 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
315)   0894 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
316)   0896 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
316)   089A 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
316)   089E 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
317)   08A0 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
317)   08A4 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
317)   08A8 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
320)   08AA 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
320)   08AE 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
320)   08B2 00 00       		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
321)   08B4 00 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
321)   08B8 7E 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
321)   08BC 00 00       		 DB 0,0,0,0,'~',0,0,0,0,0	;
322)   08BE 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   08C2 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   08C6 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
323)   08C8 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
323)   08CC 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
323)   08D0 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
324)   08D2 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   08D6 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   08DA 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
325)   08DC 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
325)   08E0 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
325)   08E4 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
326)   08E6 55 5E 2A 00 		 DB 'U','^','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
326)   08EA 00 3C 4B 49 		 DB 'U','^','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
326)   08EE 4F 29       		 DB 'U','^','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
327)   08F0 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
327)   08F4 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
327)   08F8 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
328)   08FA 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
328)   08FE 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
328)   0902 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
329)   0904 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
329)   0908 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
329)   090C 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
330)   090E 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
330)   0912 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
330)   0916 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
331)   0918 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
331)   091C 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
331)   0920 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
332)   0922 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
332)   0926 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
332)   092A 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
333)   092C 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
333)   0930 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
333)   0934 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
334)   0936 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
334)   093A 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
334)   093E 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
335)   0940 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
335)   0944 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
335)   0948 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
336)   094A 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
336)   094E 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
336)   0952 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 46)   0954 3E 03       		STRG_INIT: LD A, 3       ;38400 BPS	;38400 BPS
 47)   0956 CD E0 0A    		 CALL STOR_INI	;
 48)   0959 C9          		 RET	;
 51)   095A 21 E1 FE    		NEWCMD: LD HL, STRGCMD	;
 52)   095D 77          		 LD (HL), A	;
 53)   095E 23          		 INC HL	;
 54)   095F E5          		 PUSH HL	;
 55)   0960 AF          		 XOR A	;
 56)   0961 06 03       		 LD B, 3	;
 57)   0963 77          		CCAGN: LD (HL), A	;
 58)   0964 23          		 INC HL	;
 59)   0965 10 FC       		 DJNZ CCAGN	;
 60)   0967 E1          		 POP HL         ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 61)   0968 C9          		 RET	;
 64)   0969 CD 41 0B    		SENDCMD: CALL FLUSHREC	;
 65)   096C 21 E1 FE    		 LD HL, STRGCMD	;
 66)   096F 06 04       		 LD B, 4	;
 67)   0971 7E          		NXTBT: LD A, (HL)	;
 68)   0972 CD 10 0B    		 CALL STOR_TX	;
 69)   0975 23          		 INC HL	;
 70)   0976 10 F9       		 DJNZ NXTBT	;
 71)   0978 C9          		 RET	;
 73)   0979 3E 01       		STRG_OPENCRD: LD A, OPENCARD	;
 74)   097B CD 5A 09    		 CALL NEWCMD	;
 75)   097E CD 69 09    		 CALL SENDCMD	;
 76)   0981 CD 6E 26    		 CALL DEL2	;
 77)   0984 CD 23 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
 78)   0987 FE C9       		 CP FCMDOKTST	;
 79)   0989 3F          		 CCF	;
 80)   098A C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
 85)   098B F5          		STRG_GETEOF: PUSH AF	;
 86)   098C 3E 0D       		 LD A, ENDOFFILE	;
 87)   098E CD 5A 09    		 CALL NEWCMD	;
 88)   0991 F1          		 POP AF	;
 89)   0992 77          		 LD (HL), A       ;FID	;FID
 90)   0993 CD 69 09    		 CALL SENDCMD	;
 92)   0996 CD 23 0B    		 CALL STOR_RX       ;GET EOF	;GET EOF
 93)   0999 FE C9       		 CP FCMDOKTST	;
 94)   099B 3F          		 CCF	;
 95)   099C C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
100)   099D F5          		STRG_GETSIZE: PUSH AF	;
101)   099E 3E 0C       		 LD A, FILESIZE	;
102)   09A0 18 03       		 JR GT2BYTES	;
107)   09A2 F5          		STRG_GETPOS: PUSH AF	;
108)   09A3 3E 09       		 LD A, POSITIONG	;
109)   09A5 CD 5A 09    		GT2BYTES: CALL NEWCMD	;
110)   09A8 F1          		 POP AF	;
111)   09A9 77          		 LD (HL), A       ;FID	;FID
112)   09AA CD 69 09    		 CALL SENDCMD	;
114)   09AD CD 23 0B    		 CALL STOR_RX       ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
115)   09B0 67          		 LD H, A	;
116)   09B1 CD 23 0B    		 CALL STOR_RX       ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
117)   09B4 6F          		 LD L, A	;
118)   09B5 CD 23 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
119)   09B8 FE C9       		 CP FCMDOKTST	;
120)   09BA 3F          		 CCF	;
121)   09BB C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
127)   09BC EB          		STRG_SETPOS: EX DE, HL	;
128)   09BD F5          		 PUSH AF	;
129)   09BE 3E 08       		 LD A, POSITIONS	;
130)   09C0 CD 5A 09    		 CALL NEWCMD	;
131)   09C3 F1          		 POP AF	;
132)   09C4 77          		 LD (HL), A       ;FID	;FID
133)   09C5 23          		 INC HL	;
134)   09C6 72          		 LD (HL), D       ;NEW POS ON DE	;NEW POS ON DE
135)   09C7 23          		 INC HL	;
136)   09C8 73          		 LD (HL), E	;
137)   09C9 CD 69 09    		 CALL SENDCMD	;
138)   09CC CD 6E 26    		 CALL DEL2	;
139)   09CF CD 23 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
140)   09D2 FE C9       		 CP FCMDOKTST	;
141)   09D4 3F          		 CCF	;
142)   09D5 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
147)   09D6 3E 0A       		STRG_DIRLIST: LD A, LISTDIR	;
148)   09D8 CD 5A 09    		 CALL NEWCMD	;
149)   09DB CD 69 09    		 CALL SENDCMD	;
150)   09DE CD 6E 26    		 CALL DEL2	;
152)   09E1 11 B9 FE    		 LD DE, STRGBUFF	;
153)   09E4 CD 23 0B    		NXTCHR: CALL STOR_RX	;
154)   09E7 FE FF       		 CP 255	;
155)   09E9 28 05       		 JR Z, DIROUT	;
157)   09EB CD 37 15    		 CALL LCD_PRINTCHAR	;
158)   09EE 18 F4       		 JR NXTCHR	;
159)   09F0 CD 6E 26    		DIROUT: CALL DEL2	;
160)   09F3 CD 23 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
161)   09F6 FE C9       		 CP FCMDOKTST	;
162)   09F8 3F          		 CCF	;
163)   09F9 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
167)   09FA CD 19 0B    		SENDFNAME: CALL STOR_TXT      ;SEND FILENAME	;SEND FILENAME
168)   09FD AF          		 XOR A	;
169)   09FE CD 10 0B    		 CALL STOR_TX	;
170)   0A01 C9          		 RET	;
173)   0A02 3E 0B       		STRG_DIRCHG: LD A, CHANGEDIR	;
174)   0A04 CD 5A 09    		 CALL NEWCMD	;
175)   0A07 CD 69 09    		 CALL SENDCMD	;
176)   0A0A 21 B9 FE    		 LD HL, STRGBUFF	;
177)   0A0D CD FA 09    		 CALL SENDFNAME	;
178)   0A10 CD 6E 26    		 CALL DEL2	;
179)   0A13 CD 23 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
180)   0A16 FE C9       		 CP FCMDOKTST	;
181)   0A18 3F          		 CCF	;
182)   0A19 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
186)   0A1A F5          		STRG_OPNFILE: PUSH AF	;
187)   0A1B 3E 02       		 LD A, OPENFILE	;
188)   0A1D CD 5A 09    		 CALL NEWCMD	;
189)   0A20 F1          		 POP AF	;
190)   0A21 77          		 LD (HL), A       ;FID	;FID
191)   0A22 CD 69 09    		 CALL SENDCMD	;
192)   0A25 21 B9 FE    		 LD HL, STRGBUFF	;
193)   0A28 CD FA 09    		 CALL SENDFNAME	;
194)   0A2B CD 6E 26    		 CALL DEL2	;
195)   0A2E CD 23 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
197)   0A31 32 E5 FE    		 LD (FID), A	;
198)   0A34 FE C9       		 CP FCMDOKTST	;
199)   0A36 3F          		 CCF	;
200)   0A37 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
203)   0A38 F5          		STRG_CLSFILE: PUSH AF	;
204)   0A39 3E 03       		 LD A, CLOSEFILE	;
205)   0A3B CD 5A 09    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
206)   0A3E F1          		 POP AF	;
207)   0A3F 77          		 LD (HL), A       ;FID	;FID
208)   0A40 CD 69 09    		 CALL SENDCMD	;
209)   0A43 CD 23 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
210)   0A46 FE C9       		 CP FCMDOKTST	;
211)   0A48 3F          		 CCF	;
212)   0A49 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
218)   0A4A F5          		STRG_BLKWRITE: PUSH AF	;
219)   0A4B 3E 07       		 LD A, WRITEBLOCK	;
220)   0A4D CD 5A 09    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
221)   0A50 F1          		 POP AF	;
222)   0A51 77          		 LD (HL), A       ;FID	;FID
223)   0A52 23          		 INC HL	;
225)   0A53 78          		 LD A, B        ;BYTES HI	;BYTES HI
226)   0A54 77          		 LD (HL), A	;
227)   0A55 23          		 INC HL	;
228)   0A56 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
229)   0A57 77          		 LD (HL), A	;
230)   0A58 CD 69 09    		 CALL SENDCMD        ;SEND BLOCKWRITE COMMAND BC BYTES	;SEND BLOCKWRITE COMMAND BC BYTES
231)   0A5B EB          		 EX DE, HL	;
232)   0A5C 7E          		BWNXCH: LD A, (HL)	;
233)   0A5D CD 10 0B    		 CALL STOR_TX	;
234)   0A60 23          		 INC HL	;
235)   0A61 0B          		 DEC BC	;
236)   0A62 78          		 LD A, B	;
237)   0A63 B1          		 OR C	;
238)   0A64 20 F6       		 JR NZ, BWNXCH	;
239)   0A66 CD 23 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
240)   0A69 FE C9       		 CP FCMDOKTST	;
241)   0A6B 3F          		 CCF	;
242)   0A6C C9          		 RET	;
250)   0A6D F5          		STRG_BLKREAD: PUSH AF	;
251)   0A6E 3E 06       		 LD A, READBLOCK	;
252)   0A70 CD 5A 09    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
253)   0A73 F1          		 POP AF	;
254)   0A74 77          		 LD (HL), A       ;FID	;FID
255)   0A75 23          		 INC HL	;
256)   0A76 78          		 LD A, B        ;BYTES HI	;BYTES HI
257)   0A77 77          		 LD (HL), A	;
258)   0A78 23          		 INC HL	;
259)   0A79 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
260)   0A7A 77          		 LD (HL), A	;
261)   0A7B CD 69 09    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
262)   0A7E CD 6E 26    		 CALL DEL2	;
263)   0A81 CD 23 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
264)   0A84 47          		 LD B, A	;
265)   0A85 CD 23 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
266)   0A88 4F          		 LD C, A	;
267)   0A89 78          		 LD A, B	;
268)   0A8A B1          		 OR C	;
269)   0A8B 28 13       		 JR Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
271)   0A8D C5          		 PUSH BC        ;SAVE BYTES TO RECEIVE	;SAVE BYTES TO RECEIVE
272)   0A8E CD 23 0B    		OFNXCH: CALL STOR_RX	;
273)   0A91 12          		 LD (DE), A	;
274)   0A92 13          		 INC DE	;
275)   0A93 0B          		 DEC BC	;
276)   0A94 78          		 LD A, B	;
277)   0A95 B1          		 OR C	;
278)   0A96 20 F6       		 JR NZ, OFNXCH	;
279)   0A98 CD 23 0B    		OFEXIT: CALL STOR_RX        ;GET RESULT	;GET RESULT
280)   0A9B C1          		 POP BC         ;TOTAL BYTES RECEIVED	;TOTAL BYTES RECEIVED
281)   0A9C FE C9       		 CP FCMDOKTST	;
282)   0A9E 3F          		 CCF	;
283)   0A9F C9          		 RET	;
285)   0AA0 18 F6       		 JR OFEXIT	;
289)   0AA2 F5          		STRG_TPFILE: PUSH AF	;
290)   0AA3 3E 06       		 LD A, READBLOCK	;
291)   0AA5 CD 5A 09    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
292)   0AA8 F1          		 POP AF	;
293)   0AA9 77          		 LD (HL), A       ;FID	;FID
294)   0AAA 23          		 INC HL	;
295)   0AAB 78          		 LD A, B        ;BYTES HI	;BYTES HI
296)   0AAC 77          		 LD (HL), A	;
297)   0AAD 23          		 INC HL	;
298)   0AAE 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
299)   0AAF 77          		 LD (HL), A	;
300)   0AB0 CD 69 09    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
301)   0AB3 CD 6E 26    		 CALL DEL2	;
302)   0AB6 CD 23 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
303)   0AB9 47          		 LD B, A	;
304)   0ABA CD 23 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
305)   0ABD 4F          		 LD C, A	;
306)   0ABE 78          		 LD A, B	;
307)   0ABF B1          		 OR C	;
308)   0AC0 CA A0 0A    		 JP Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
310)   0AC3 3E 0D       		 LD A, 13	;
311)   0AC5 C5          		 PUSH BC	;
312)   0AC6 CD 37 15    		 CALL LCD_PRINTCHAR	;
313)   0AC9 C1          		 POP BC	;
314)   0ACA CD 23 0B    		TFOFNXCH: CALL STOR_RX       ;GET THE CHAR	;GET THE CHAR
315)   0ACD C5          		 PUSH BC	;
316)   0ACE CD 37 15    		 CALL LCD_PRINTCHAR       ;PRINT TO SCREEN	;PRINT TO SCREEN
317)   0AD1 C1          		 POP BC	;
318)   0AD2 0B          		 DEC BC	;
319)   0AD3 78          		 LD A, B	;
320)   0AD4 B1          		 OR C	;
321)   0AD5 20 F3       		 JR NZ, TFOFNXCH	;
322)   0AD7 CD 23 0B    		TFOFEXIT: CALL STOR_RX       ;GET RESULT	;GET RESULT
323)   0ADA FE C9       		 CP FCMDOKTST	;
324)   0ADC 3F          		 CCF	;
325)   0ADD C9          		 RET         ;C SET IF ERROR	;C SET IF ERROR
328)   0ADE 18 F7       		 JR TFOFEXIT	;
350)   0AE0 	            		 RBR EQU DEVSTOR+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
351)   0AE0 	            		 THR EQU DEVSTOR+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
352)   0AE0 	            		 IER EQU DEVSTOR+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
357)   0AE0 	            		 IIR EQU DEVSTOR+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
362)   0AE0 	            		 FCR EQU DEVSTOR+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
370)   0AE0 	            		 LCR EQU DEVSTOR+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
378)   0AE0 	            		 MCR EQU DEVSTOR+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
379)   0AE0 	            		 LSR EQU DEVSTOR+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
388)   0AE0 	            		 MSR EQU DEVSTOR+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
389)   0AE0 	            		 SCR EQU DEVSTOR+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
390)   0AE0 	            		 DLL EQU DEVSTOR+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
391)   0AE0 	            		 DLM EQU DEVSTOR+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
395)   0AE0 F5          		STOR_INI: PUSH AF	;
396)   0AE1 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
397)   0AE3 D3 33       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
405)   0AE5 F1          		 POP AF	;
406)   0AE6 D3 30       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
407)   0AE8 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
408)   0AEA D3 31       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
409)   0AEC 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
410)   0AEE D3 33       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
412)   0AF0 3E 00       		 LD A, 0	;
413)   0AF2 D3 32       		 OUT (FCR), A        ;//was commented	;//was commented
414)   0AF4 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
415)   0AF6 D3 31       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
416)   0AF8 AF          		 XOR A         ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
417)   0AF9 D3 34       		 OUT (MCR), A	;
418)   0AFB C9          		 RET	;
424)   0AFC F5          		STORTXRD: PUSH AF	;
425)   0AFD DB 35       		STORTXLP: IN A, (LSR)       ; fetch the control register	; fetch the control register
426)   0AFF CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
427)   0B01 28 FA       		 JR Z, STORTXLP	;
428)   0B03 F1          		 POP AF	;
429)   0B04 C9          		 RET	;
432)   0B05 F5          		WAITCTSLOW: PUSH AF	;
433)   0B06 DB 36       		TSTAGN: IN A, (MSR)	;
434)   0B08 CB 67       		 BIT 4, A        ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
435)   0B0A 20 02       		 JR NZ, WCLEX	;
436)   0B0C 18 F8       		 JR TSTAGN	;
437)   0B0E F1          		WCLEX: POP AF	;
438)   0B0F C9          		 RET	;
444)   0B10 CD 05 0B    		 CALL WAITCTSLOW	;
449)   0B13 CD FC 0A    		 CALL STORTXRD	;
454)   0B16 D3 30       		 OUT (THR), A	;
455)   0B18 C9          		 RET	;
458)   0B19 7E          		STOR_TXT: LD A, (HL)	;
459)   0B1A 23          		 INC HL	;
460)   0B1B FE 00       		 CP 0	;
461)   0B1D C8          		 RET Z	;
462)   0B1E CD 10 0B    		 CALL STOR_TX	;
463)   0B21 18 F6       		 JR STOR_TXT	;
470)   0B23 F3          		STOR_RX: DI	;
471)   0B24 3E 02       		 LD A, 2        ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
472)   0B26 D3 34       		 OUT (MCR), A	;
473)   0B28 CD 4C 0B    		 CALL STORRXRD	;
474)   0B2B AF          		STOR_GTCH: XOR A        ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
475)   0B2C D3 34       		 OUT (MCR), A	;
476)   0B2E DB 30       		 IN A, (RBR)	;
477)   0B30 FB          		 EI	;
478)   0B31 C9          		 RET	;
480)   0B32 3E 02       		STOR_RXNW: LD A, 2       ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
481)   0B34 D3 34       		 OUT (MCR), A	;
482)   0B36 DB 35       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
483)   0B38 CB 47       		 BIT 0, A	;
484)   0B3A 28 03       		 JR Z, STOR_NOCHAR	;
485)   0B3C F3          		 DI	;
486)   0B3D 18 EC       		 JR STOR_GTCH	;
487)   0B3F AF          		STOR_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
488)   0B40 C9          		 RET	;
490)   0B41 06 0A       		FLUSHREC: LD B, 10	;
491)   0B43 CD 32 0B    		FRAGN: CALL STOR_RXNW	;
492)   0B46 10 FB       		 DJNZ FRAGN	;
493)   0B48 AF          		 XOR A	;
494)   0B49 D3 34       		 OUT (MCR), A	;
495)   0B4B C9          		 RET	;
501)   0B4C F3          		STORRXRD: DI	;
502)   0B4D F5          		 PUSH AF	;
503)   0B4E DB 35       		STORRXLP: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
504)   0B50 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
505)   0B52 28 FA       		 JR Z, STORRXLP	;
506)   0B54 F1          		 POP AF	;
507)   0B55 FB          		 EI	;
508)   0B56 C9          		 RET	;
512)   0B57 DB 35       		STOR_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
513)   0B59 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
514)   0B5B C9          		 RET	;
  8)   0B5C 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  9)   0B5C 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
 10)   0B5C 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 11)   0B5C 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 12)   0B5C 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 57)   0B5C C5          		I2C_RDSTAT_WT: PUSH BC	;
 58)   0B5D 01 00 20    		 LD BC, $2000	;
 59)   0B60 DB 4B       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 60)   0B62 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 61)   0B64 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 62)   0B66 0B          		 DEC BC	;
 63)   0B67 78          		 LD A, B	;
 64)   0B68 B1          		 OR C	;
 65)   0B69 20 F5       		 JR NZ, I2CRWT_AGN	;
 66)   0B6B C1          		I2CRWT_OK: POP BC	;
 67)   0B6C DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 68)   0B6E C9          		 RET	;
 70)   0B6F DB 4B       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 71)   0B71 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 72)   0B73 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 73)   0B75 C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 74)   0B76 DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 75)   0B78 C9          		 RET	;
 78)   0B79 3E 01       		I2C_INIT: LD A, I2CADR	;
 79)   0B7B D3 48       		 OUT (DI2C_INDPTR), A	;
 80)   0B7D 3E E0       		 LD A, $E0	;
 81)   0B7F D3 4A       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 83)   0B81 3E 40       		 LD A, $40        ;INIT	;INIT
 84)   0B83 D3 4B       		 OUT (DI2C_CON), A      ;	;
 85)   0B85 06 FA       		 LD B, 250	;
 86)   0B87 CD 5B 26    		 CALL DELAYMICRO	;
 87)   0B8A 06 FA       		 LD B, 250	;
 88)   0B8C CD 5B 26    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 93)   0B8F 3E 06       		 LD A, I2CMODE	;
 94)   0B91 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 95)   0B93 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 96)   0B95 D3 4A       		 OUT (DI2C_INDIR), A	;
 97)   0B97 3E 02       		 LD A, I2CSCLL	;
 98)   0B99 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 99)   0B9B 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
100)   0B9D D3 4A       		 OUT (DI2C_INDIR), A	;
101)   0B9F 3E 03       		 LD A, I2CSCLH	;
102)   0BA1 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
103)   0BA3 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
104)   0BA5 D3 4A       		 OUT (DI2C_INDIR), A	;
106)   0BA7 C9          		 RET	;
113)   0BA8 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
114)   0BAA D3 4B       		 OUT (DI2C_CON), A	;
115)   0BAC CD 5C 0B    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
116)   0BAF 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
117)   0BB0 FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
118)   0BB2 28 21       		 JR Z, WRB_S1	;
119)   0BB4 FE 10       		 CP MASTER_RESTART_TXed	;
120)   0BB6 28 1D       		 JR Z, WRB_S1	;
121)   0BB8 FE 28       		 CP MASTER_DATA_W_ACK	;
122)   0BBA 28 26       		 JR Z, WRB_S2	;
123)   0BBC FE 18       		 CP MASTER_SLA_W_ACK	;
124)   0BBE 28 23       		 JR Z, WRB_S3	;
125)   0BC0 FE 20       		 CP MASTER_SLA_W_NAK	;
126)   0BC2 28 2D       		 JR Z, WRB_EXIT	;
127)   0BC4 FE 30       		 CP MASTER_DATA_W_NAK	;
128)   0BC6 28 29       		 JR Z, WRB_EXIT	;
129)   0BC8 FE 38       		 CP MASTER_ARB_LOST	;
130)   0BCA C8          		 RET Z	;
131)   0BCB FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
132)   0BCD C8          		 RET Z	;
133)   0BCE FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
134)   0BD0 C8          		 RET Z	;
135)   0BD1 FE D8       		 CP SLAVE_GENERALCALL_AL	;
136)   0BD3 C8          		 RET Z	;
137)   0BD4 C9          		 RET	;
139)   0BD5 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
140)   0BD6 CB 27       		 SLA A	;
141)   0BD8 E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
142)   0BDA D3 49       		 OUT (DI2C_DAT), A	;
143)   0BDC 3E 40       		 LD A, $40	;
144)   0BDE D3 4B       		 OUT (DI2C_CON), A	;
145)   0BE0 18 CA       		 JR WRB_LP1	;
146)   0BE2 0B          		WRB_S2: DEC BC	;
147)   0BE3 78          		WRB_S3: LD A, B	;
148)   0BE4 B1          		 OR C	;
149)   0BE5 28 0A       		 JR Z, WRB_EXIT	;
150)   0BE7 7E          		 LD A, (HL)	;
151)   0BE8 23          		 INC HL	;
152)   0BE9 D3 49       		 OUT (DI2C_DAT), A	;
153)   0BEB 3E 40       		 LD A, $40	;
154)   0BED D3 4B       		 OUT (DI2C_CON), A	;
155)   0BEF 18 BB       		 JR WRB_LP1	;
157)   0BF1 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
158)   0BF3 D3 4B       		 OUT (DI2C_CON), A	;
159)   0BF5 78          		 LD A, B	;
160)   0BF6 B1          		 OR C	;
161)   0BF7 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
167)   0BF8 78          		I2C_RD_BYTE: LD A, B	;
168)   0BF9 B1          		 OR C	;
169)   0BFA C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
170)   0BFB 3E 60       		 LD A, $60	;
171)   0BFD D3 4B       		 OUT (DI2C_CON), A	;
172)   0BFF CD 5C 0B    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
173)   0C02 1E 00       		 LD E, 0	;
174)   0C04 FE 08       		 CP MASTER_START_TXed	;
175)   0C06 28 1F       		 JR Z, RDB_S1	;
177)   0C08 28 1D       		 JR Z, RDB_S1	;
178)   0C0A FE 58       		 CP MASTER_DATA_R_NAK	;
179)   0C0C 28 26       		 JR Z, RDB_S2	;
180)   0C0E FE 50       		 CP MASTER_DATA_R_ACK	;
181)   0C10 28 24       		 JR Z, RDB_S3	;
182)   0C12 FE 40       		 CP MASTER_SLA_R_ACK	;
183)   0C14 28 25       		 JR Z, RDB_S4	;
184)   0C16 FE 48       		 CP MASTER_SLA_R_NAK	;
185)   0C18 28 38       		 JR Z, RDB_EXIT	;
186)   0C1A FE 38       		 CP MASTER_ARB_LOST	;
187)   0C1C C8          		 RET Z	;
188)   0C1D FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
189)   0C1F C8          		 RET Z	;
190)   0C20 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
191)   0C22 C8          		 RET Z	;
192)   0C23 FE D8       		 CP SLAVE_GENERALCALL_AL	;
193)   0C25 C8          		 RET Z	;
194)   0C26 C9          		 RET	;
197)   0C27 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
198)   0C28 CB 27       		 SLA A	;
199)   0C2A F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
200)   0C2C D3 49       		 OUT (DI2C_DAT), A	;
201)   0C2E 3E 40       		 LD A, $40	;
202)   0C30 D3 4B       		 OUT (DI2C_CON), A	;
203)   0C32 18 CB       		 JR RDB_LP1	;
204)   0C34 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
205)   0C36 DB 49       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
206)   0C38 77          		 LD (HL), A	;
207)   0C39 23          		 INC HL	;
208)   0C3A 0B          		 DEC BC	;
209)   0C3B 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
210)   0C3C B1          		 OR C	;
211)   0C3D 28 13       		 JR Z, RDB_EXIT	;
212)   0C3F 7B          		 LD A, E	;
213)   0C40 FE 01       		 CP 1	;
214)   0C42 28 0E       		 JR Z, RDB_EXIT	;
215)   0C44 78          		 LD A, B	;
216)   0C45 81          		 ADD C	;
217)   0C46 FE 01       		 CP 1	;
218)   0C48 3E 40       		 LD A, $40	;
219)   0C4A 28 02       		 JR Z, RDB_NXT1	;
220)   0C4C 3E C0       		 LD A, $C0	;
221)   0C4E D3 4B       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
222)   0C50 18 AD       		 JR RDB_LP1	;
224)   0C52 3E 50       		RDB_EXIT: LD A, $50	;
225)   0C54 D3 4B       		 OUT (DI2C_CON), A	;
226)   0C56 78          		 LD A, B	;
227)   0C57 B1          		 OR C	;
228)   0C58 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
 26)   0C59 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 26)   0C5D 61 79       		 SUN DEFM  "Sunday"	;
 27)   0C5F 00          		 DB 0	;
 28)   0C60 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 28)   0C64 61 79       		 MON DEFM  "Monday"	;
 29)   0C66 00          		 DB 0	;
 30)   0C67 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 30)   0C6B 64 61 79    		 TUE DEFM  "Tuesday"	;
 31)   0C6E 00          		 DB 0	;
 32)   0C6F 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 32)   0C73 65 73 64 61 		 WED DEFM  "Wednesday"	;
 32)   0C77 79          		 WED DEFM  "Wednesday"	;
 33)   0C78 00          		 DB 0	;
 34)   0C79 54 68 75 72 		 THU DEFM  "Thursday"	;
 34)   0C7D 73 64 61 79 		 THU DEFM  "Thursday"	;
 35)   0C81 00          		 DB 0	;
 36)   0C82 46 72 69 64 		 FRI DEFM  "Friday"	;
 36)   0C86 61 79       		 FRI DEFM  "Friday"	;
 37)   0C88 00          		 DB 0	;
 38)   0C89 53 61 74 75 		 SAT DEFM  "Saturday"	;
 38)   0C8D 72 64 61 79 		 SAT DEFM  "Saturday"	;
 39)   0C91 00          		 DB 0	;
 41)   0C92 59 0C       		 DAYS DEFW SUN	;
 42)   0C94 60 0C       		 DEFW MON	;
 43)   0C96 67 0C       		 DEFW TUE	;
 44)   0C98 6F 0C       		 DEFW WED	;
 45)   0C9A 79 0C       		 DEFW THU	;
 46)   0C9C 82 0C       		 DEFW FRI	;
 47)   0C9E 89 0C       		 DEFW SAT	;
 49)   0CA0 45 52 52 4F 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CA4 52 20 4F 4E 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CA8 20 52 45 43 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CAC 45 49 56 49 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CB0 4E 47       		 MESERR DEFM "ERROR ON RECEIVING"	;
 50)   0CB2 0A 0D 00    		 DEFB 10,13,0	;
 52)   0CB5 45 52 52 4F 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0CB9 52 20 4F 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0CBD 20 53 45 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0CC1 44 49 4E 47 		 MESERR0 DEFM "ERROR ON SENDING"	;
 53)   0CC5 0A 0D 00    		 DEFB 10,13,0	;
 55)   0CC8 7B          		SHERR0: LD A, E	;
 56)   0CC9 C5          		 PUSH BC	;
 57)   0CCA CD E7 03    		 CALL SOUTAS	;
 58)   0CCD C1          		 POP BC	;
 59)   0CCE 79          		 LD A, C	;
 60)   0CCF CD E7 03    		 CALL SOUTAS	;
 62)   0CD2 21 B5 0C    		 LD HL, MESERR0	;
 63)   0CD5 CD D1 05    		 CALL RS_TXT	;
 64)   0CD8 C9          		 RET	;
 67)   0CD9 79          		SHERR: LD A, C	;
 68)   0CDA CD E7 03    		 CALL SOUTAS	;
 69)   0CDD 21 A0 0C    		 LD HL, MESERR	;
 70)   0CE0 CD D1 05    		 CALL RS_TXT	;
 71)   0CE3 37          		 SCF	;
 72)   0CE4 C9          		 RET	;
 75)   0CE5 21 89 FE    		@DS1307_GETNOW: LD HL, BUFFER	;
 76)   0CE8 AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 77)   0CE9 77          		 LD (HL), A	;
 78)   0CEA 16 68       		 LD D, DS1307_ADDRESS	;
 79)   0CEC 01 01 00    		 LD BC, 1	;
 80)   0CEF CD A8 0B    		 CALL I2C_WRITE	;
 81)   0CF2 C2 C8 0C    		 JP NZ, SHERR0	;
 83)   0CF5 21 89 FE    		 LD HL, BUFFER	;
 84)   0CF8 16 68       		 LD D, DS1307_ADDRESS	;
 85)   0CFA 01 07 00    		 LD BC, 7	;
 86)   0CFD CD F8 0B    		 CALL I2C_READ	;
 87)   0D00 C2 D9 0C    		 JP NZ, SHERR	;
 88)   0D03 AF          		 XOR A	;
 89)   0D04 C9          		 RET	;
 95)   0D05 11 89 FE    		 LD DE, BUFFER	;
 96)   0D08 AF          		 XOR A	;
 97)   0D09 12          		 LD (DE), A	;
 98)   0D0A 13          		 INC DE	;
 99)   0D0B 3E 0A       		 LD A, 10       ; 10 SECS	; 10 SECS
100)   0D0D CD A2 26    		 CALL BN2BCD	;
101)   0D10 7D          		 LD A, L	;
102)   0D11 12          		 LD (DE), A	;
103)   0D12 13          		 INC DE	;
104)   0D13 3E 22       		 LD A, 34       ; 28 MINS	; 28 MINS
105)   0D15 CD A2 26    		 CALL BN2BCD	;
106)   0D18 7D          		 LD A, L	;
107)   0D19 12          		 LD (DE), A	;
108)   0D1A 13          		 INC DE	;
109)   0D1B 3E 12       		 LD A, 18       ; 19 HOURS	; 19 HOURS
110)   0D1D CD A2 26    		 CALL BN2BCD	;
111)   0D20 7D          		 LD A, L	;
112)   0D21 12          		 LD (DE), A	;
113)   0D22 13          		 INC DE	;
114)   0D23 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
115)   0D25 12          		 LD (DE), A	;
116)   0D26 13          		 INC DE	;
117)   0D27 3E 12       		 LD A, 18       ; 8 DAY	; 8 DAY
118)   0D29 CD A2 26    		 CALL BN2BCD	;
119)   0D2C 7D          		 LD A, L	;
120)   0D2D 12          		 LD (DE), A	;
121)   0D2E 13          		 INC DE	;
122)   0D2F 3E 02       		 LD A, 02       ; 10 MONTH	; 10 MONTH
123)   0D31 CD A2 26    		 CALL BN2BCD	;
124)   0D34 7D          		 LD A, L	;
125)   0D35 12          		 LD (DE), A	;
126)   0D36 13          		 INC DE	;
127)   0D37 3E 15       		 LD A, 21       ; 21 YEAR (2020)	; 21 YEAR (2020)
128)   0D39 CD A2 26    		 CALL BN2BCD	;
129)   0D3C 7D          		 LD A, L	;
130)   0D3D 12          		 LD (DE), A	;
131)   0D3E 13          		 INC DE	;
132)   0D3F AF          		 XOR A	;
133)   0D40 12          		 LD (DE), A	;
146)   0D41 21 89 FE    		@DS1307_ADJUST: LD HL, BUFFER	;
147)   0D44 16 68       		 LD D, DS1307_ADDRESS	;
148)   0D46 01 09 00    		 LD BC, 9	;
149)   0D49 CD A8 0B    		 CALL I2C_WRITE	;
150)   0D4C C2 C8 0C    		 JP NZ, SHERR0	;
151)   0D4F 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
152)   0D52 CD 1F 27    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
153)   0D55 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
154)   0D58 CD 1F 27    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
155)   0D5B C9          		 RET	;
159)   0D5C 21 89 FE    		@DS1307_SETSQ: LD HL, BUFFER	;
160)   0D5F E5          		 PUSH HL	;
161)   0D60 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
162)   0D62 77          		 LD (HL), A	;
163)   0D63 23          		 INC HL	;
164)   0D64 7A          		 LD A, D	;
165)   0D65 77          		 LD (HL), A	;
166)   0D66 E1          		 POP HL	;
167)   0D67 16 68       		 LD D, DS1307_ADDRESS	;
168)   0D69 01 02 00    		 LD BC, 2	;
169)   0D6C CD A8 0B    		 CALL I2C_WRITE	;
170)   0D6F C2 C8 0C    		 JP NZ, SHERR0	;
171)   0D72 C9          		 RET	;
105)   0D73 00          		 LCD_DSPMODE  DB 0	;
106)   0D74 00          		 LCD_DSPCTRL  DB 0	;
111)   0D75 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
113)   0D77 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
114)   0D78 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
115)   0D7A CB E2       		 SET D4, D	;
116)   0D7C 0F          		LWNXT1: RRCA	;
117)   0D7D 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
118)   0D7F CB EA       		 SET D5, D	;
119)   0D81 0F          		LWNXT2: RRCA	;
120)   0D82 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
121)   0D84 CB F2       		 SET D6, D	;
122)   0D86 0F          		LWNXT3: RRCA	;
123)   0D87 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
124)   0D89 CB FA       		 SET D7, D	;
125)   0D8B 7B          		LWNXT4: LD A, E	;
126)   0D8C 0F          		 RRCA	;
127)   0D8D 30 02       		 JR NC, LWNXT5	;
128)   0D8F CB C2       		 SET RS, D	;
131)   0D91 CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
132)   0D93 7A          		 LD A, D	;
133)   0D94 CD 9E 0D    		 CALL LCD16_I2CSEND	;
134)   0D97 CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
135)   0D99 7A          		 LD A, D	;
136)   0D9A CD 9E 0D    		 CALL LCD16_I2CSEND	;
137)   0D9D C9          		 RET	;
141)   0D9E D5          		LCD16_I2CSEND: PUSH DE	;
142)   0D9F E5          		 PUSH HL	;
143)   0DA0 21 89 FE    		 LD HL, BUFFER	;
144)   0DA3 77          		 LD (HL), A	;
145)   0DA4 16 27       		 LD D, LCDADDR	;
146)   0DA6 01 01 00    		 LD BC, 1	;
147)   0DA9 CD A8 0B    		 CALL I2C_WRITE	;
148)   0DAC E1          		 POP HL	;
149)   0DAD D1          		 POP DE	;
150)   0DAE C9          		 RET	;
154)   0DAF 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
155)   0DB0 7B          		 LD A, E	;
156)   0DB1 0F          		 RRCA	;
157)   0DB2 38 07       		 JR C, ISCMDDATA	;
158)   0DB4 0F          		 RRCA	;
159)   0DB5 30 04       		 JR NC, ISCMDDATA	;
161)   0DB7 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
162)   0DB9 18 0E       		 JR LCSD_4BIT	;
163)   0DBB 7A          		ISCMDDATA: LD A, D	;
164)   0DBC CB 3F       		 SRL A	;
165)   0DBE CB 3F       		 SRL A	;
166)   0DC0 CB 3F       		 SRL A	;
167)   0DC2 CB 3F       		 SRL A	;
168)   0DC4 D5          		 PUSH DE	;
169)   0DC5 CD 75 0D    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
170)   0DC8 D1          		 POP DE	;
171)   0DC9 7A          		LCSD_4BIT: LD A, D	;
172)   0DCA E6 0F       		 AND $0F	;
173)   0DCC CD 75 0D    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
174)   0DCF C9          		 RET	;
179)   0DD0 1E 00       		LCD16_COMMD: LD E, COMMAND	;
180)   0DD2 C3 AF 0D    		 JP LCD16_SEND	;
183)   0DD5 1E 01       		LCD16_DATA: LD E, LCD_DATA	;
184)   0DD7 C3 AF 0D    		 JP LCD16_SEND	;
188)   0DDA 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
189)   0DDC 1E 02       		 LD E, FOUR_BITS	;
190)   0DDE CD AF 0D    		 CALL LCD16_SEND	;
191)   0DE1 01 00 30    		 LD BC, $3000	;
192)   0DE4 CD 1F 27    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
193)   0DE7 3E 03       		 LD A, 3	;
194)   0DE9 1E 02       		 LD E, FOUR_BITS	;
195)   0DEB CD AF 0D    		 CALL LCD16_SEND	;
196)   0DEE 01 00 30    		 LD BC, $3000	;
197)   0DF1 CD 1F 27    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
198)   0DF4 3E 03       		 LD A, 3	;
199)   0DF6 1E 02       		 LD E, FOUR_BITS	;
200)   0DF8 CD AF 0D    		 CALL LCD16_SEND	;
201)   0DFB 01 00 30    		 LD BC, $3000	;
202)   0DFE CD 1F 27    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
203)   0E01 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
204)   0E03 1E 02       		 LD E, FOUR_BITS	;
205)   0E05 CD AF 0D    		 CALL LCD16_SEND	;
206)   0E08 01 00 30    		 LD BC, $3000	;
207)   0E0B CD 1F 27    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
209)   0E0E 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
210)   0E10 CD D0 0D    		 CALL LCD16_COMMD	;
211)   0E13 3E 04       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
212)   0E15 32 74 0D    		 LD (LCD_DSPCTRL), A	;
213)   0E18 CD 37 0E    		 CALL LCD16_DISP	;
214)   0E1B CD 52 0E    		 CALL LCD16_CLR	;
215)   0E1E 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
216)   0E20 32 73 0D    		 LD (LCD_DSPMODE), A	;
217)   0E23 F6 04       		 OR LCD_ENTRYMODESET	;
218)   0E25 CD D0 0D    		 CALL LCD16_COMMD	;
219)   0E28 C9          		 RET	;
221)   0E29 3A 74 0D    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
222)   0E2C CB A7       		 RES LCD_DISPLAYON, A	;
223)   0E2E 32 74 0D    		 LD (LCD_DSPCTRL), A	;
224)   0E31 F6 08       		 OR LCD_DISPLAYCONTROL	;
225)   0E33 CD D0 0D    		 CALL LCD16_COMMD	;
226)   0E36 C9          		 RET	;
227)   0E37 3A 74 0D    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
228)   0E3A F6 04       		 OR LCD_DISPLAYON	;
229)   0E3C 32 74 0D    		 LD (LCD_DSPCTRL), A	;
230)   0E3F F6 08       		 OR LCD_DISPLAYCONTROL	;
231)   0E41 CD D0 0D    		 CALL LCD16_COMMD	;
232)   0E44 C9          		 RET	;
234)   0E45 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
235)   0E48 C5          		LCLR_AGN1: PUSH BC	;
236)   0E49 CD 5B 26    		 CALL DELAYMICRO	;
237)   0E4C C1          		 POP BC	;
238)   0E4D 0D          		 DEC C	;
239)   0E4E E2 48 0E    		 JP PO, LCLR_AGN1	;
240)   0E51 C9          		 RET	;
242)   0E52 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
243)   0E54 CD D0 0D    		 CALL LCD16_COMMD	;
244)   0E57 CD 45 0E    		 CALL LCDDELAY	;
245)   0E5A C9          		 RET	;
248)   0E5B 7E          		@LCD16_PRINT: LD A, (HL)	;
249)   0E5C FE 00       		 CP 0	;
250)   0E5E C8          		 RET Z	;
251)   0E5F CD D5 0D    		 CALL LCD16_DATA	;
252)   0E62 23          		 INC HL	;
253)   0E63 18 F6       		 JR LCD16_PRINT	;
256)   0E65 CD D5 0D    		@LCD16_PRCHR: CALL LCD16_DATA	;
257)   0E68 C9          		 RET	;
259)   0E69 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
260)   0E6B CD D0 0D    		 CALL LCD16_COMMD	;
261)   0E6E CD 45 0E    		 CALL LCDDELAY	;
262)   0E71 C9          		 RET	;
265)   0E72 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
266)   0E76 06 00       		@LCD16_SETCURS: LD B, 0	;
267)   0E78 4B          		 LD C, E	;
268)   0E79 21 72 0E    		 LD HL, ROWOFFSET	;
269)   0E7C 09          		 ADD HL, BC	;
270)   0E7D 7E          		 LD A, (HL)	;
271)   0E7E 82          		 ADD D	;
272)   0E7F F6 80       		 OR LCD_SETDDRAMADDR	;
273)   0E81 CD D0 0D    		 CALL LCD16_COMMD	;
274)   0E84 C9          		 RET	;
276)   0E85 3A 74 0D    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
277)   0E88 CB 97       		 RES LCD_CURSORON, A	;
278)   0E8A 32 74 0D    		 LD (LCD_DSPCTRL), A	;
279)   0E8D F6 08       		 OR LCD_DISPLAYCONTROL	;
280)   0E8F CD D0 0D    		 CALL LCD16_COMMD	;
281)   0E92 C9          		 RET	;
284)   0E93 3A 74 0D    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
285)   0E96 F6 02       		 OR LCD_CURSORON	;
286)   0E98 32 74 0D    		 LD (LCD_DSPCTRL), A	;
287)   0E9B F6 08       		 OR LCD_DISPLAYCONTROL	;
288)   0E9D CD D0 0D    		 CALL LCD16_COMMD	;
289)   0EA0 C9          		 RET	;
291)   0EA1 3A 74 0D    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
292)   0EA4 CB 8F       		 RES LCD_BLINKON, A	;
293)   0EA6 32 74 0D    		 LD (LCD_DSPCTRL), A	;
294)   0EA9 F6 08       		 OR LCD_DISPLAYCONTROL	;
295)   0EAB CD D0 0D    		 CALL LCD16_COMMD	;
296)   0EAE C9          		 RET	;
299)   0EAF 3A 74 0D    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
300)   0EB2 F6 01       		 OR LCD_BLINKON	;
301)   0EB4 32 74 0D    		 LD (LCD_DSPCTRL), A	;
302)   0EB7 F6 08       		 OR LCD_DISPLAYCONTROL	;
303)   0EB9 CD D0 0D    		 CALL LCD16_COMMD	;
304)   0EBC C9          		 RET	;
306)   0EBD 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
307)   0EBF CD D0 0D    		 CALL LCD16_COMMD	;
308)   0EC2 C9          		 RET	;
310)   0EC3 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
311)   0EC5 CD D0 0D    		 CALL LCD16_COMMD	;
312)   0EC8 C9          		 RET	;
314)   0EC9 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
315)   0ECB CD D0 0D    		 CALL LCD16_COMMD	;
316)   0ECE C9          		 RET	;
318)   0ECF 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
319)   0ED1 CD D0 0D    		 CALL LCD16_COMMD	;
320)   0ED4 C9          		 RET	;
 16)   0ED5 	            		 LCD_RS EQU DEVTFT       ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   0ED5 	            		 LCD_CS EQU DEVTFT+1       ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   0ED5 7B          		 LD A, E	;
 32)   0ED6 D3 11       		 OUT (LCD_CS), A	;
 37)   0ED8 DB 11       		 IN A, (LCD_CS)	;
 38)   0EDA C9          		 RET	;
 45)   0EDB 7A          		 LD A, D	;
 46)   0EDC D3 11       		 OUT (LCD_CS), A	;
 47)   0EDE C9          		 RET	;
 53)   0EDF 7A          		 LD A, D	;
 54)   0EE0 D3 10       		 OUT (LCD_RS), A	;
 55)   0EE2 C9          		 RET	;
 62)   0EE3 AF          		 XOR A	;
 63)   0EE4 D3 10       		 OUT (LCD_RS), A       ;RS LOW = COMMAND BYTE	;RS LOW = COMMAND BYTE
 64)   0EE6 CD DB 0E    		 CALL LCD_WR_BUS	;
 65)   0EE9 3E 01       		 LD A, 1	;
 66)   0EEB D3 10       		 OUT (LCD_RS), A       ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   0EED C9          		 RET	;
 71)   0EEE 16 E2       		 LD D, 0xE2        ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   0EF0 CD DF 0E    		 CALL LCD_WR_COM       ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   0EF3 16 23       		 LD D, 0x23        ;1E	;1E
 74)   0EF5 CD DB 0E    		 CALL LCD_WR_DAT	;
 75)   0EF8 16 02       		 LD D, 0x02	;
 76)   0EFA CD DB 0E    		 CALL LCD_WR_DAT	;
 77)   0EFD 16 54       		 LD D, 0x54	;
 78)   0EFF CD DB 0E    		 CALL LCD_WR_DAT	;
 79)   0F02 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 80)   0F04 CD DF 0E    		 CALL LCD_WR_COM	;
 81)   0F07 16 01       		 LD D, 0x01	;
 82)   0F09 CD DB 0E    		 CALL LCD_WR_DAT	;
 83)   0F0C 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 84)   0F0E CD 5B 26    		 CALL DELAYMICRO	;
 85)   0F11 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 86)   0F13 CD DF 0E    		 CALL LCD_WR_COM	;
 87)   0F16 16 03       		 LD D, 0x03	;
 88)   0F18 CD DB 0E    		 CALL LCD_WR_DAT	;
 89)   0F1B 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 90)   0F1D CD 5B 26    		 CALL DELAYMICRO	;
 92)   0F20 16 01       		 LD D, 0x01        ; software reset	; software reset
 93)   0F22 CD DF 0E    		 CALL LCD_WR_COM	;
 94)   0F25 06 14       		 LD B, 20        ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   0F27 CD 5B 26    		 CALL DELAYMICRO	;
 96)   0F2A 16 E6       		 LD D, 0xE6        ;PLL setting for PCLK, depends on resolution	;PLL setting for PCLK, depends on resolution
 97)   0F2C CD DF 0E    		 CALL LCD_WR_COM	;
 98)   0F2F 16 03       		 LD D, 0x03	;
 99)   0F31 CD DB 0E    		 CALL LCD_WR_DAT	;
100)   0F34 16 33       		 LD D, 0x33        ;FF	;FF
101)   0F36 CD DB 0E    		 CALL LCD_WR_DAT	;
102)   0F39 16 33       		 LD D, 0x33        ;FF	;FF
103)   0F3B CD DB 0E    		 CALL LCD_WR_DAT	;
105)   0F3E 16 B0       		 LD D, 0xB0        ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   0F40 CD DF 0E    		 CALL LCD_WR_COM	;
107)   0F43 16 20       		 LD D, 0x20	;
108)   0F45 CD DB 0E    		 CALL LCD_WR_DAT	;
109)   0F48 16 00       		 LD D, 0x00	;
110)   0F4A CD DB 0E    		 CALL LCD_WR_DAT	;
111)   0F4D 16 03       		 LD D, 0x03        ;Set HDP  799	;Set HDP  799
112)   0F4F CD DB 0E    		 CALL LCD_WR_DAT	;
113)   0F52 16 1F       		 LD D, 0x1F	;
114)   0F54 CD DB 0E    		 CALL LCD_WR_DAT	;
115)   0F57 16 01       		 LD D, 0x01        ;Set VDP  479	;Set VDP  479
116)   0F59 CD DB 0E    		 CALL LCD_WR_DAT	;
117)   0F5C 16 DF       		 LD D, 0xDF	;
118)   0F5E CD DB 0E    		 CALL LCD_WR_DAT	;
119)   0F61 16 00       		 LD D, 0x00	;
120)   0F63 CD DB 0E    		 CALL LCD_WR_DAT	;
123)   0F66 16 B4       		 LD D, 0xB4        ;HSYNC	;HSYNC
124)   0F68 CD DF 0E    		 CALL LCD_WR_COM	;
125)   0F6B 16 04       		 LD D, 0x04        ;03         ;Set HT 928	;03         ;Set HT 928
126)   0F6D CD DB 0E    		 CALL LCD_WR_DAT	;
127)   0F70 16 1F       		 LD D, 0x1F        ;A0	;A0
128)   0F72 CD DB 0E    		 CALL LCD_WR_DAT	;
129)   0F75 16 00       		 LD D, 0x00        ;Set HPS  46	;Set HPS  46
130)   0F77 CD DB 0E    		 CALL LCD_WR_DAT	;
131)   0F7A 16 D2       		 LD D, 0xD2        ;2E	;2E
132)   0F7C CD DB 0E    		 CALL LCD_WR_DAT	;
133)   0F7F 16 00       		 LD D, 0x00        ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   0F81 CD DB 0E    		 CALL LCD_WR_DAT	;
135)   0F84 16 00       		 LD D, 0x00        ;Set LPS  15	;Set LPS  15
136)   0F86 CD DB 0E    		 CALL LCD_WR_DAT	;
137)   0F89 16 00       		 LD D, 0x00        ;0F	;0F
138)   0F8B CD DB 0E    		 CALL LCD_WR_DAT	;
139)   0F8E 16 00       		 LD D, 0x00	;
140)   0F90 CD DB 0E    		 CALL LCD_WR_DAT	;
142)   0F93 16 B6       		 LD D, 0xB6        ;VSYNC	;VSYNC
143)   0F95 CD DF 0E    		 CALL LCD_WR_COM	;
144)   0F98 16 02       		 LD D, 0x02        ;Set VT 525	;Set VT 525
145)   0F9A CD DB 0E    		 CALL LCD_WR_DAT	;
146)   0F9D 16 0C       		 LD D, 0x0C        ;0D	;0D
147)   0F9F CD DB 0E    		 CALL LCD_WR_DAT	;
148)   0FA2 16 00       		 LD D, 0x00        ;Set VPS  16	;Set VPS  16
149)   0FA4 CD DB 0E    		 CALL LCD_WR_DAT	;
150)   0FA7 16 22       		 LD D, 0x22        ;10	;10
151)   0FA9 CD DB 0E    		 CALL LCD_WR_DAT	;
152)   0FAC 16 00       		 LD D, 0x00        ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   0FAE CD DB 0E    		 CALL LCD_WR_DAT	;
154)   0FB1 16 00       		 LD D, 0x00        ;Set FPS  8	;Set FPS  8
155)   0FB3 CD DB 0E    		 CALL LCD_WR_DAT	;
156)   0FB6 16 00       		 LD D, 0x00        ; 08	; 08
157)   0FB8 CD DB 0E    		 CALL LCD_WR_DAT	;
159)   0FBB 16 B8       		 LD D, 0xB8	;
160)   0FBD CD DF 0E    		 CALL LCD_WR_COM	;
161)   0FC0 16 0F       		 LD D, 0x0F        ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   0FC2 CD DB 0E    		 CALL LCD_WR_DAT	;
163)   0FC5 16 01       		 LD D, 0x01        ;GPIO0 normal	;GPIO0 normal
164)   0FC7 CD DB 0E    		 CALL LCD_WR_DAT	;
166)   0FCA 16 BA       		 LD D, 0xBA	;
167)   0FCC CD DF 0E    		 CALL LCD_WR_COM	;
168)   0FCF 16 01       		 LD D, 0x01        ;0F	;0F
169)   0FD1 CD DB 0E    		 CALL LCD_WR_DAT       ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   0FD4 16 36       		 LD D, 0x36        ;rotation	;rotation
172)   0FD6 CD DF 0E    		 CALL LCD_WR_COM	;
173)   0FD9 16 08       		 LD D, 0x08        ;2A	;2A
174)   0FDB CD DB 0E    		 CALL LCD_WR_DAT	;
176)   0FDE 16 F0       		 LD D, 0xF0        ;pixel data interface	;pixel data interface
177)   0FE0 CD DF 0E    		 CALL LCD_WR_COM	;
178)   0FE3 16 06       		 LD D, 0x06        ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   0FE5 CD DB 0E    		 CALL LCD_WR_DAT	;
181)   0FE8 06 05       		 LD B, 5        ;delay(5);	;delay(5);
182)   0FEA CD 5B 26    		 CALL DELAYMICRO	;
184)   0FED 16 BC       		 LD D, 0xBC        ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   0FEF CD DF 0E    		 CALL LCD_WR_COM	;
186)   0FF2 16 40       		 LD D, 0x40	;
187)   0FF4 CD DB 0E    		 CALL LCD_WR_DAT	;
188)   0FF7 16 80       		 LD D, 0x80	;
189)   0FF9 CD DB 0E    		 CALL LCD_WR_DAT	;
190)   0FFC 16 40       		 LD D, 0x40	;
191)   0FFE CD DB 0E    		 CALL LCD_WR_DAT	;
192)   1001 16 01       		 LD D, 0x01	;
193)   1003 CD DB 0E    		 CALL LCD_WR_DAT	;
194)   1006 06 05       		 LD B, 5        ;delay(5);	;delay(5);
195)   1008 CD 5B 26    		 CALL DELAYMICRO	;
197)   100B 16 35       		 LD D, 0x35        ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   100D CD DF 0E    		 CALL LCD_WR_COM	;
199)   1010 16 00       		 LD D, 0x00        ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   1012 CD DB 0E    		 CALL LCD_WR_DAT	;
202)   1015 16 29       		 LD D, 0x29        ;display on	;display on
203)   1017 CD DF 0E    		 CALL LCD_WR_COM	;
204)   101A 16 BE       		 LD D, 0xBE        ;set PWM for B/L	;set PWM for B/L
205)   101C CD DF 0E    		 CALL LCD_WR_COM	;
206)   101F 16 06       		 LD D, 0x06	;
207)   1021 CD DB 0E    		 CALL LCD_WR_DAT	;
208)   1024 16 F0       		 LD D, 0xF0	;
209)   1026 CD DB 0E    		 CALL LCD_WR_DAT	;
210)   1029 16 01       		 LD D, 0x01	;
211)   102B CD DB 0E    		 CALL LCD_WR_DAT	;
212)   102E 16 F0       		 LD D, 0xF0	;
213)   1030 CD DB 0E    		 CALL LCD_WR_DAT	;
214)   1033 16 00       		 LD D, 0x00	;
215)   1035 CD DB 0E    		 CALL LCD_WR_DAT	;
216)   1038 16 00       		 LD D, 0x00	;
217)   103A CD DB 0E    		 CALL LCD_WR_DAT	;
219)   103D 16 D0       		 LD D, 0xD0	;
220)   103F CD DF 0E    		 CALL LCD_WR_COM	;
221)   1042 16 0D       		 LD D, 0x0D	;
222)   1044 CD DB 0E    		 CALL LCD_WR_DAT	;
225)   1047 21 00 00    		 LD HL, 0	;
226)   104A E5          		 PUSH HL	;
227)   104B E5          		 PUSH HL	;
228)   104C 21 1F 03    		 LD HL, 799	;
229)   104F E5          		 PUSH HL	;
230)   1050 21 DF 01    		 LD HL, 479	;
231)   1053 E5          		 PUSH HL	;
232)   1054 CD 58 10    		 CALL LCD_SETXY	;
233)   1057 C9          		 RET	;
250)   1058 DD 21 02 00 		 LD IX, 2	;
251)   105C DD 39       		 ADD IX, SP	;
252)   105E 16 2A       		 LD D, 0x2A        ;SEND IX PARAMS	;SEND IX PARAMS
253)   1060 CD DF 0E    		 CALL LCD_WR_COM	;
254)   1063 DD 56 07    		 LD D, (IX + 7)	;
255)   1066 CD DB 0E    		 CALL LCD_WR_DAT	;
256)   1069 DD 56 06    		 LD D, (IX + 6)	;
257)   106C CD DB 0E    		 CALL LCD_WR_DAT	;
258)   106F DD 56 03    		 LD D, (IX + 3)	;
259)   1072 CD DB 0E    		 CALL LCD_WR_DAT	;
260)   1075 DD 56 02    		 LD D, (IX + 2)	;
261)   1078 CD DB 0E    		 CALL LCD_WR_DAT	;
262)   107B 16 2B       		 LD D, 0x2B        ;SEND Y PARAMS	;SEND Y PARAMS
263)   107D CD DF 0E    		 CALL LCD_WR_COM	;
264)   1080 DD 56 05    		 LD D, (IX + 5)	;
265)   1083 CD DB 0E    		 CALL LCD_WR_DAT	;
266)   1086 DD 56 04    		 LD D, (IX + 4)	;
267)   1089 CD DB 0E    		 CALL LCD_WR_DAT	;
268)   108C DD 56 01    		 LD D, (IX + 1)	;
269)   108F CD DB 0E    		 CALL LCD_WR_DAT	;
270)   1092 DD 56 00    		 LD D, (IX)	;
271)   1095 CD DB 0E    		 CALL LCD_WR_DAT	;
272)   1098 16 2C       		 LD D, 0x2C        ;SEND DATA	;SEND DATA
273)   109A CD DF 0E    		 CALL LCD_WR_COM	;
274)   109D D1          		 POP DE	;
275)   109E 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   10A1 39          		 ADD HL, SP	;
277)   10A2 F9          		 LD SP, HL	;
278)   10A3 EB          		 EX DE, HL	;
279)   10A4 E9          		 JP (HL)	;
285)   10A5 54          		 LD D, H	;
286)   10A6 CD DB 0E    		 CALL LCD_WR_DAT	;
287)   10A9 55          		 LD D, L	;
288)   10AA CD DB 0E    		 CALL LCD_WR_DAT	;
289)   10AD C9          		 RET	;
294)   10AE 16 2E       		 LD D, 0x2E        ;READ DATA	;READ DATA
295)   10B0 CD DF 0E    		 CALL LCD_WR_COM	;
296)   10B3 CD D8 0E    		@LCD_GTPXL: CALL LCD_RD_DAT	;
297)   10B6 67          		 LD H, A	;
298)   10B7 CD D8 0E    		 CALL LCD_RD_DAT	;
299)   10BA 6F          		 LD L, A	;
300)   10BB C9          		 RET	;
306)   10BC DD E5       		@LCD_READPIXEL: PUSH IX       ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   10BE DD 21 04 00 		 LD IX, 4        ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   10C2 DD 39       		 ADD IX, SP	;
309)   10C4 DD 66 03    		 LD H, (IX + 3)        ;X	;X
310)   10C7 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
311)   10CA DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
312)   10CD DD 5E 00    		 LD E, (IX)        ;Y	;Y
313)   10D0 E5          		 PUSH HL	;
314)   10D1 D5          		 PUSH DE	;
315)   10D2 E5          		 PUSH HL	;
316)   10D3 D5          		 PUSH DE	;
317)   10D4 CD 58 10    		 CALL LCD_SETXY	;
318)   10D7 CD AE 10    		 CALL LCD_GETPIXEL	;
319)   10DA E5          		 PUSH HL	;
320)   10DB CD 0D 11    		 CALL LCD_CLRXY	;
321)   10DE D1          		 POP DE         ;RESULT COLOR	;RESULT COLOR
322)   10DF DD E1       		 POP IX	;
323)   10E1 C1          		 POP BC         ;RET ADDR	;RET ADDR
324)   10E2 21 04 00    		 LD HL, 2 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   10E5 39          		 ADD HL, SP	;
326)   10E6 F9          		 LD SP, HL	;
327)   10E7 EB          		 EX DE, HL        ;HL RESULT	;HL RESULT
328)   10E8 C5          		 PUSH BC        ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   10E9 C9          		 RET	;
333)   10EA DD 21 02 00 		 LD IX, 2        ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   10EE DD 39       		 ADD IX, SP	;
335)   10F0 DD 66 03    		 LD H, (IX + 3)        ;X	;X
336)   10F3 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
337)   10F6 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
338)   10F9 DD 5E 00    		 LD E, (IX)        ;Y	;Y
339)   10FC E5          		 PUSH HL	;
340)   10FD D5          		 PUSH DE	;
341)   10FE E5          		 PUSH HL	;
342)   10FF D5          		 PUSH DE	;
343)   1100 CD 58 10    		 CALL LCD_SETXY	;
344)   1103 2A 01 FE    		 LD HL, (FCOLOR)	;
345)   1106 CD A5 10    		 CALL LCD_SETPIXEL	;
346)   1109 CD 0D 11    		 CALL LCD_CLRXY	;
347)   110C C9          		 RET	;
350)   110D 21 00 00    		 LD HL, 0	;
351)   1110 E5          		 PUSH HL	;
352)   1111 E5          		 PUSH HL	;
353)   1112 21 1F 03    		 LD HL, LCD_WIDTH	;
354)   1115 E5          		 PUSH HL	;
355)   1116 21 DF 01    		 LD HL, LCD_HEIGHT	;
356)   1119 E5          		 PUSH HL	;
357)   111A CD 58 10    		 CALL LCD_SETXY	;
358)   111D C9          		 RET	;
362)   111E DD 21 02 00 		 LD IX, 2	;
363)   1122 DD 39       		 ADD IX, SP	;
364)   1124 DD 66 05    		 LD H, (IX + 5)        ;X	;X
365)   1127 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
366)   112A DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
367)   112D DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
368)   1130 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
369)   1133 DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
372)   1136 E5          		 PUSH HL	;
373)   1137 21 00 00    		 LD HL, 0	;
374)   113A B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
375)   113B ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
376)   113D 38 0A       		 JR C, POSH1	;
377)   113F AF          		 XOR A         ;l=-l	;l=-l
378)   1140 91          		 SUB C	;
379)   1141 4F          		 LD C, A	;
380)   1142 9F          		 SBC A, A	;
381)   1143 90          		 SUB B	;
382)   1144 47          		 LD B, A	;
383)   1145 E1          		 POP HL	;
384)   1146 ED 42       		 SBC HL, BC        ;x -= l;	;x -= l;
385)   1148 E5          		 PUSH HL	;
386)   1149 E1          		POSH1: POP HL	;
387)   114A E5          		 PUSH HL	;
388)   114B D5          		 PUSH DE	;
389)   114C 09          		 ADD HL, BC	;
390)   114D E5          		 PUSH HL	;
391)   114E D5          		 PUSH DE	;
392)   114F CD 58 10    		 CALL LCD_SETXY        ;setXY(x, y, x+l, y);	;setXY(x, y, x+l, y);
393)   1152 2A 01 FE    		 LD HL, (FCOLOR)	;
394)   1155 CD A5 10    		NXTH1: CALL LCD_SETPIXEL	;
395)   1158 0B          		 DEC BC	;
396)   1159 79          		 LD A, C	;
397)   115A B0          		 OR B	;
398)   115B 20 F8       		 JR NZ, NXTH1	;
399)   115D CD 0D 11    		 CALL LCD_CLRXY	;
400)   1160 D1          		 POP DE	;
401)   1161 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
402)   1164 39          		 ADD HL, SP	;
403)   1165 F9          		 LD SP, HL	;
404)   1166 EB          		 EX DE, HL	;
405)   1167 E9          		 JP (HL)	;
411)   1168 DD 21 02 00 		 LD IX, 2	;
412)   116C DD 39       		 ADD IX, SP	;
413)   116E DD 56 05    		 LD D, (IX + 5)        ;X	;X
414)   1171 DD 5E 04    		 LD E, (IX + 4)        ;X	;X
415)   1174 DD 66 03    		 LD H, (IX + 3)        ;Y	;Y
416)   1177 DD 6E 02    		 LD L, (IX + 2)        ;Y	;Y
417)   117A DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
418)   117D DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
419)   1180 E5          		 PUSH HL	;
420)   1181 21 00 00    		 LD HL, 0	;
421)   1184 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
422)   1185 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
423)   1187 38 0A       		 JR C, POSV1	;
424)   1189 AF          		 XOR A         ;l=-l	;l=-l
425)   118A 91          		 SUB C	;
426)   118B 4F          		 LD C, A	;
427)   118C 9F          		 SBC A, A	;
428)   118D 90          		 SUB B	;
429)   118E 47          		 LD B, A	;
430)   118F E1          		 POP HL	;
431)   1190 ED 42       		 SBC HL, BC        ;Y -= l;	;Y -= l;
432)   1192 E5          		 PUSH HL	;
433)   1193 E1          		POSV1: POP HL	;
434)   1194 D5          		 PUSH DE	;
435)   1195 E5          		 PUSH HL	;
436)   1196 D5          		 PUSH DE	;
437)   1197 09          		 ADD HL, BC	;
438)   1198 E5          		 PUSH HL	;
439)   1199 CD 58 10    		 CALL LCD_SETXY        ;setXY(x, y, x, y+l);	;setXY(x, y, x, y+l);
440)   119C 2A 01 FE    		 LD HL, (FCOLOR)	;
441)   119F CD A5 10    		NXTV1: CALL LCD_SETPIXEL	;
442)   11A2 0B          		 DEC BC	;
443)   11A3 79          		 LD A, C	;
444)   11A4 B0          		 OR B	;
445)   11A5 20 F8       		 JR NZ, NXTV1	;
446)   11A7 CD 0D 11    		 CALL LCD_CLRXY	;
447)   11AA D1          		 POP DE	;
448)   11AB 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
449)   11AE 39          		 ADD HL, SP	;
450)   11AF F9          		 LD SP, HL	;
451)   11B0 EB          		 EX DE, HL	;
452)   11B1 E9          		 JP (HL)	;
456)   11B2 DD 21 02 00 		 LD IX, 2	;
457)   11B6 DD 39       		 ADD IX, SP	;
467)   11B8 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
468)   11BB DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
469)   11BE DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
470)   11C1 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
471)   11C4 B7          		 OR A	;
472)   11C5 ED 52       		 SBC HL, DE	;
473)   11C7 20 17       		 JR NZ, YNOTEQ	;
475)   11C9 DD 46 07    		 LD B, (IX + 7)        ;X1	;X1
476)   11CC DD 4E 06    		 LD C, (IX + 6)        ;X1	;X1
477)   11CF C5          		 PUSH BC        ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
478)   11D0 D5          		 PUSH DE        ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
479)   11D1 DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
480)   11D4 DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
481)   11D7 ED 42       		 SBC HL, BC        ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
482)   11D9 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
483)   11DA CD 1E 11    		 CALL LCD_DRAWHLINE	;
484)   11DD C3 8D 13    		 JP DLNEX	;
486)   11E0 DD 66 07    		 LD H, (IX + 7)        ;X1	;X1
487)   11E3 DD 6E 06    		 LD L, (IX + 6)        ;X1	;X1
488)   11E6 DD 56 03    		 LD D, (IX + 3)        ;X2	;X2
489)   11E9 DD 5E 02    		 LD E, (IX + 2)        ;X2	;X2
490)   11EC B7          		 OR A	;
491)   11ED ED 52       		 SBC HL, DE	;
492)   11EF 20 17       		 JR NZ, XNOTEQ	;
494)   11F1 D5          		 PUSH DE        ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
495)   11F2 DD 46 05    		 LD B, (IX + 5)        ;Y1	;Y1
496)   11F5 DD 4E 04    		 LD C, (IX + 4)        ;Y1	;Y1
497)   11F8 C5          		 PUSH BC        ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
498)   11F9 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
499)   11FC DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
500)   11FF ED 42       		 SBC HL, BC        ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
501)   1201 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
502)   1202 CD 68 11    		 CALL LCD_DRAWVLINE	;
503)   1205 C3 8D 13    		 JP DLNEX	;
506)   1208 38 04       		 JR C, X2GTX1	;
508)   120A AF          		 XOR A	;
509)   120B 3D          		 DEC A         ;XSTEP=-1	;XSTEP=-1
510)   120C 18 0D       		 JR DLNXT1	;
513)   120E D5          		 PUSH DE	;
514)   120F E1          		 POP HL	;
515)   1210 DD 56 07    		 LD D, (IX + 7)        ;X1	;X1
516)   1213 DD 5E 06    		 LD E, (IX + 6)        ;X1	;X1
517)   1216 B7          		 OR A	;
518)   1217 ED 52       		 SBC HL, DE        ;X2-X1 ON HL	;X2-X1 ON HL
520)   1219 3E 01       		 LD A, 1        ;XSTEP=1	;XSTEP=1
522)   121B 06 00       		 LD B, 0	;
523)   121D 0E 00       		 LD C, 0	;
524)   121F C5          		 PUSH BC        ;T	;T
525)   1220 E5          		 PUSH HL        ;DX	;DX
526)   1221 FE 01       		 CP 1	;
527)   1223 28 02       		 JR Z, DLXMINUS1	;
528)   1225 06 FF       		 LD B, 0XFF	;
529)   1227 4F          		DLXMINUS1: LD C, A	;
530)   1228 C5          		 PUSH BC        ;XSTEP	;XSTEP
531)   1229 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
532)   122C DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
533)   122F DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
534)   1232 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
535)   1235 B7          		 OR A	;
536)   1236 ED 52       		 SBC HL, DE	;
537)   1238 38 04       		 JR C, Y2GTY1        ;HL=Y1-Y2	;HL=Y1-Y2
538)   123A AF          		 XOR A	;
539)   123B 3D          		 DEC A         ;YSTEP=-1	;YSTEP=-1
540)   123C 18 0F       		 JR DLNXT2	;
543)   123E D5          		 PUSH DE	;
544)   123F E1          		 POP HL	;
545)   1240 DD 56 05    		 LD D, (IX + 5)        ;Y1	;Y1
546)   1243 DD 5E 04    		 LD E, (IX + 4)        ;Y1	;Y1
547)   1246 B7          		 OR A	;
548)   1247 ED 52       		 SBC HL, DE        ;HL=Y2-Y1    HL=DY	;HL=Y2-Y1    HL=DY
549)   1249 06 00       		 LD B, 0	;
550)   124B 3E 01       		 LD A, 1        ;YSTEP=1	;YSTEP=1
552)   124D FE 01       		 CP 1	;
553)   124F 28 02       		 JR Z, DLYMINUS1	;
554)   1251 06 FF       		 LD B, 0XFF	;
556)   1253 4F          		 LD C, A	;
557)   1254 E5          		 PUSH HL        ;DY	;DY
558)   1255 C5          		 PUSH BC        ;YSTEP	;YSTEP
559)   1256 FD 21 00 00 		 LD IY, 0	;
560)   125A FD 39       		 ADD IY, SP	;
575)   125C FD 56 07    		 LD D, (IY + 7)        ;DX	;DX
576)   125F FD 5E 06    		 LD E, (IY + 6)        ;DX	;DX
577)   1262 B7          		 OR A	;
578)   1263 ED 52       		 SBC HL, DE        ;DY-DX	;DY-DX
579)   1265 DA FA 12    		 JP C, DXGTDY	;
580)   1268 CA FA 12    		 JP Z, DXGTDY	;
582)   126B 19          		 ADD HL, DE        ;HL=DY	;HL=DY
583)   126C 44          		 LD B, H	;
584)   126D 4D          		 LD C, L	;
585)   126E CB 38       		 SRL B	;
586)   1270 CB 19       		 RR C         ;(dy >> 1)	;(dy >> 1)
587)   1272 21 00 00    		 LD HL, 0	;
588)   1275 ED 42       		 SBC HL, BC        ;t = - (dy >> 1);	;t = - (dy >> 1);
589)   1277 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
590)   127A FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
592)   127D DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
593)   1280 DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
594)   1283 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
595)   1286 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
596)   1289 D5          		 PUSH DE	;
597)   128A DD E5       		 PUSH IX	;
598)   128C E5          		 PUSH HL	;
599)   128D D5          		 PUSH DE	;
600)   128E E5          		 PUSH HL	;
601)   128F D5          		 PUSH DE	;
602)   1290 CD 58 10    		 CALL LCD_SETXY	;
603)   1293 2A 01 FE    		 LD HL, (FCOLOR)	;
604)   1296 CD A5 10    		 CALL LCD_SETPIXEL	;
605)   1299 DD E1       		 POP IX	;
606)   129B D1          		 POP DE	;
607)   129C DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
608)   129F DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
609)   12A2 ED 52       		 SBC HL, DE        ; ROW=Y2	; ROW=Y2
610)   12A4 CA 88 13    		 JP Z, DLEXIT	;
611)   12A7 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
612)   12AA FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
613)   12AD EB          		 EX DE, HL	;
614)   12AE 09          		 ADD HL, BC        ;row += ystep;	;row += ystep;
615)   12AF DD 74 05    		 LD (IX + 5), H        ;SAVE ROW	;SAVE ROW
616)   12B2 DD 75 04    		 LD (IX + 4), L        ;	;
618)   12B5 FD 56 09    		 LD D, (IY + 9)        ; T	; T
619)   12B8 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
620)   12BB FD 66 07    		 LD H, (IY + 7)        ;DX	;DX
621)   12BE FD 6E 06    		 LD L, (IY + 6)        ;DX	;DX
622)   12C1 19          		 ADD HL, DE	;
623)   12C2 FD 74 09    		 LD (IY + 9), H        ;t += dx;	;t += dx;
624)   12C5 FD 75 08    		 LD (IY + 8), L	;
625)   12C8 EB          		 EX DE, HL	;
626)   12C9 21 00 80    		 LD HL, $8000	;
627)   12CC ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
628)   12CE 38 AD       		 JR C, DLAGN1        ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
629)   12D0 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
630)   12D3 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
631)   12D6 DD 66 07    		 LD H, (IX + 7)        ;COL HI	;COL HI
632)   12D9 DD 6E 06    		 LD L, (IX + 6)        ;COL LO	;COL LO
633)   12DC 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
634)   12DD DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
635)   12E0 DD 75 06    		 LD (IX + 6), L        ;	;
637)   12E3 FD 66 09    		 LD H, (IY + 9)        ; T	; T
638)   12E6 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
639)   12E9 FD 46 03    		 LD B, (IY + 3)        ;DY	;DY
640)   12EC FD 4E 02    		 LD C, (IY + 2)        ;DY	;DY
641)   12EF ED 42       		 SBC HL, BC	;
642)   12F1 FD 74 09    		 LD (IY + 9), H        ;t -= dY;	;t -= dY;
643)   12F4 FD 75 08    		 LD (IY + 8), L	;
644)   12F7 C3 7D 12    		 JP DLAGN1	;
646)   12FA 19          		 ADD HL, DE        ;HL=DY DE=DX	;HL=DY DE=DX
647)   12FB 42          		 LD B, D	;
648)   12FC 4B          		 LD C, E	;
649)   12FD CB 38       		 SRL B	;
650)   12FF CB 19       		 RR C         ;(dX >> 1)	;(dX >> 1)
651)   1301 21 00 00    		 LD HL, 0	;
652)   1304 ED 42       		 SBC HL, BC        ;t = - (dX >> 1);	;t = - (dX >> 1);
653)   1306 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
654)   1309 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
656)   130C DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
657)   130F DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
658)   1312 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
659)   1315 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
660)   1318 E5          		 PUSH HL        ;SAVE COL	;SAVE COL
661)   1319 DD E5       		 PUSH IX	;
662)   131B E5          		 PUSH HL	;
663)   131C D5          		 PUSH DE	;
664)   131D E5          		 PUSH HL	;
665)   131E D5          		 PUSH DE	;
666)   131F CD 58 10    		 CALL LCD_SETXY	;
667)   1322 2A 01 FE    		 LD HL, (FCOLOR)	;
668)   1325 CD A5 10    		 CALL LCD_SETPIXEL	;
669)   1328 DD E1       		 POP IX	;
670)   132A D1          		 POP DE         ;RETRIEVE COL	;RETRIEVE COL
671)   132B DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
672)   132E DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
673)   1331 ED 52       		 SBC HL, DE        ; COL=X2?	; COL=X2?
674)   1333 28 53       		 JR Z, DLEXIT	;
675)   1335 EB          		 EX DE, HL        ;HL=COL	;HL=COL
676)   1336 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
677)   1339 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
678)   133C 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
679)   133D DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
680)   1340 DD 75 06    		 LD (IX + 6), L        ;	;
681)   1343 FD 56 09    		 LD D, (IY + 9)        ; T	; T
682)   1346 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
683)   1349 FD 66 03    		 LD H, (IY + 3)        ;DY	;DY
684)   134C FD 6E 02    		 LD L, (IY + 2)        ;DY	;DY
685)   134F 19          		 ADD HL, DE	;
686)   1350 FD 74 09    		 LD (IY + 9), H        ;t += dY;	;t += dY;
687)   1353 FD 75 08    		 LD (IY + 8), L	;
688)   1356 EB          		 EX DE, HL        ;T=DE	;T=DE
689)   1357 21 00 80    		 LD HL, $8000	;
690)   135A ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
691)   135C 38 AE       		 JR C, DLAGN2        ;CARRY SET IF NEGATIVE	;CARRY SET IF NEGATIVE
692)   135E FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
693)   1361 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
694)   1364 DD 66 05    		 LD H, (IX + 5)        ;ROW HI	;ROW HI
695)   1367 DD 6E 04    		 LD L, (IX + 4)        ;ROW LO	;ROW LO
696)   136A 09          		 ADD HL, BC        ;ROW += Ystep;	;ROW += Ystep;
697)   136B DD 74 05    		 LD (IX + 5), H        ;SAVE COL	;SAVE COL
698)   136E DD 75 04    		 LD (IX + 4), L        ;	;
700)   1371 FD 66 09    		 LD H, (IY + 9)        ; T	; T
701)   1374 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
702)   1377 FD 46 07    		 LD B, (IY + 7)        ;DX	;DX
703)   137A FD 4E 06    		 LD C, (IY + 6)        ;DX	;DX
704)   137D ED 42       		 SBC HL, BC	;
705)   137F FD 74 09    		 LD (IY + 9), H        ;t -= dX;	;t -= dX;
706)   1382 FD 75 08    		 LD (IY + 8), L	;
707)   1385 C3 0C 13    		 JP DLAGN2	;
710)   1388 21 0A 00    		 LD HL, 5 * 2        ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
711)   138B 39          		 ADD HL, SP        ;	;
712)   138C F9          		 LD SP, HL	;
713)   138D D1          		DLNEX: POP DE         ;RET ADDR	;RET ADDR
714)   138E 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
715)   1391 39          		 ADD HL, SP	;
716)   1392 F9          		 LD SP, HL	;
717)   1393 EB          		 EX DE, HL	;
718)   1394 E9          		 JP (HL)	;
723)   1395 C5          		@PLOTP: PUSH BC        ;SAVE BC	;SAVE BC
724)   1396 DD E5       		 PUSH IX	;
726)   1398 D5          		 PUSH DE	;
727)   1399 E5          		 PUSH HL	;
728)   139A D5          		 PUSH DE	;
729)   139B E5          		 PUSH HL	;
730)   139C CD 58 10    		 CALL LCD_SETXY	;
731)   139F 2A 01 FE    		 LD HL, (FCOLOR)	;
732)   13A2 CD A5 10    		 CALL LCD_SETPIXEL	;
734)   13A5 DD E1       		 POP IX	;
735)   13A7 C1          		 POP BC         ;RESTORE BC	;RESTORE BC
736)   13A8 C9          		 RET	;
741)   13A9 E1          		 POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
742)   13AA D5          		 PUSH DE        ;F VAR	;F VAR
743)   13AB D5          		 PUSH DE        ;DDF_X	;DDF_X
744)   13AC D5          		 PUSH DE        ;DDF_Y	;DDF_Y
745)   13AD D5          		 PUSH DE        ;X1	;X1
746)   13AE D5          		 PUSH DE        ;Y1	;Y1
747)   13AF E5          		 PUSH HL        ;RET ADDR	;RET ADDR
748)   13B0 DD 21 02 00 		 LD IX, 2	;
749)   13B4 DD 39       		 ADD IX, SP	;
767)   13B6 AF          		 XOR A	;
768)   13B7 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
769)   13BA DD 5E 0A    		 LD E, (IX + 10)       ;R	;R
770)   13BD DD 72 01    		 LD (IX + 1), D        ;Y1=R	;Y1=R
771)   13C0 DD 73 00    		 LD (IX + 0), E	;
772)   13C3 21 01 00    		 LD HL, 1	;
773)   13C6 DD 74 07    		 LD (IX + 7), H        ;DDF_X=1	;DDF_X=1
774)   13C9 DD 75 06    		 LD (IX + 6), L	;
775)   13CC DD 74 03    		 LD (IX + 3), H        ;X1=0	;X1=0
776)   13CF DD 74 02    		 LD (IX + 2), H	;
777)   13D2 ED 52       		 SBC HL, DE	;
778)   13D4 DD 74 09    		 LD (IX + 9), H        ;F	;F
779)   13D7 DD 75 08    		 LD (IX + 8), L        ;F	;F
781)   13DA EB          		 EX DE, HL        ;HL=RADIUS	;HL=RADIUS
782)   13DB 29          		 ADD HL, HL        ;2*R	;2*R
783)   13DC EB          		 EX DE, HL	;
784)   13DD 21 00 00    		 LD HL, 0	;
785)   13E0 ED 52       		 SBC HL, DE        ;-2*R	;-2*R
786)   13E2 DD 74 05    		 LD (IX + 5), H	;
787)   13E5 DD 75 04    		 LD (IX + 4), L        ;DDF_Y	;DDF_Y
789)   13E8 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
790)   13EB DD 6E 0C    		 LD L, (IX + 12)	;
791)   13EE E5          		 PUSH HL        ;SAVE Y	;SAVE Y
792)   13EF DD 56 0B    		 LD D, (IX + 11)       ;R	;R
793)   13F2 DD 5E 0A    		 LD E, (IX + 10)	;
794)   13F5 D5          		 PUSH DE        ;SAVE R	;SAVE R
795)   13F6 19          		 ADD HL, DE        ;Y+R	;Y+R
796)   13F7 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
797)   13FA DD 5E 0E    		 LD E, (IX + 14)	;
798)   13FD D5          		 PUSH DE        ;SAVE X	;SAVE X
800)   13FE CD 95 13    		 CALL PLOTP	;
802)   1401 D1          		 POP DE         ;GET X	;GET X
803)   1402 C1          		 POP BC         ;GET R	;GET R
804)   1403 E1          		 POP HL         ;GET Y	;GET Y
805)   1404 E5          		 PUSH HL        ;SAVE VARS	;SAVE VARS
806)   1405 C5          		 PUSH BC	;
807)   1406 D5          		 PUSH DE	;
808)   1407 AF          		 XOR A	;
809)   1408 ED 42       		 SBC HL, BC        ;	;
811)   140A CD 95 13    		 CALL PLOTP	;
813)   140D E1          		 POP HL         ;GET X	;GET X
814)   140E C1          		 POP BC         ;GET R	;GET R
815)   140F D1          		 POP DE         ;GET Y	;GET Y
816)   1410 D5          		 PUSH DE        ;SAVE VARS	;SAVE VARS
817)   1411 C5          		 PUSH BC	;
818)   1412 E5          		 PUSH HL	;
819)   1413 AF          		 XOR A	;
820)   1414 ED 4A       		 ADC HL, BC	;
821)   1416 EB          		 EX DE, HL	;
823)   1417 CD 95 13    		 CALL PLOTP	;
825)   141A E1          		 POP HL         ;GET X	;GET X
826)   141B C1          		 POP BC         ;GET R	;GET R
827)   141C D1          		 POP DE         ;GET Y	;GET Y
828)   141D AF          		 XOR A	;
829)   141E ED 42       		 SBC HL, BC	;
830)   1420 EB          		 EX DE, HL	;
832)   1421 CD 95 13    		 CALL PLOTP	;
835)   1424 DD 66 03    		CIRC_AGN: LD H, (IX + 3)       ;X1	;X1
836)   1427 DD 6E 02    		 LD L, (IX + 2)        ;X1	;X1
837)   142A DD 56 01    		 LD D, (IX + 1)        ;Y1	;Y1
838)   142D DD 5E 00    		 LD E, (IX + 0)        ;Y1	;Y1
839)   1430 AF          		 XOR A	;
840)   1431 ED 52       		 SBC HL, DE	;
841)   1433 D2 22 15    		 JP NC, CIRC_EXIT	;
843)   1436 19          		 ADD HL, DE	;
844)   1437 E5          		 PUSH HL        ;SAVE X1	;SAVE X1
845)   1438 D5          		 PUSH DE        ;SAVE Y1	;SAVE Y1
846)   1439 21 00 00    		 LD HL, 0	;
847)   143C AF          		 XOR A	;
850)   143D DD 7E 09    		 LD A, (IX + 9)        ;F HI BYTE	;F HI BYTE
851)   1440 FE 50       		 CP 80	;
852)   1442 30 26       		 JR NC, CIRC_SKIP	;
853)   1444 28 24       		 JR Z, CIRC_SKIP	;
857)   1446 D1          		 POP DE         ;Y1	;Y1
858)   1447 1B          		 DEC DE	;
859)   1448 DD 72 01    		 LD (IX + 1), D        ;SAVE Y1	;SAVE Y1
860)   144B DD 73 00    		 LD (IX + 0), E	;
861)   144E D5          		 PUSH DE        ;Y1	;Y1
862)   144F DD 66 05    		 LD H, (IX + 5)        ;DDF_Y	;DDF_Y
863)   1452 DD 6E 04    		 LD L, (IX + 4)	;
864)   1455 23          		 INC HL	;
865)   1456 23          		 INC HL	;
866)   1457 DD 74 05    		 LD (IX + 5), H        ;SAVE DDF_Y	;SAVE DDF_Y
867)   145A DD 75 04    		 LD (IX + 4), L	;
868)   145D DD 56 09    		 LD D, (IX + 9)        ;F	;F
869)   1460 DD 5E 08    		 LD E, (IX + 8)	;
870)   1463 19          		 ADD HL, DE	;
871)   1464 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
872)   1467 DD 75 08    		 LD (IX + 8), L	;
876)   146A C1          		 POP BC         ;Y1	;Y1
877)   146B E1          		 POP HL         ;X1	;X1
878)   146C 23          		 INC HL	;
879)   146D DD 74 03    		 LD (IX + 3), H        ;SAVE X1	;SAVE X1
880)   1470 DD 75 02    		 LD (IX + 2), L	;
881)   1473 E5          		 PUSH HL        ;X1	;X1
882)   1474 DD 66 07    		 LD H, (IX + 7)        ;DDF_X	;DDF_X
883)   1477 DD 6E 06    		 LD L, (IX + 6)	;
884)   147A 23          		 INC HL	;
885)   147B 23          		 INC HL	;
886)   147C DD 74 07    		 LD (IX + 7), H        ;SAVE DDF_X	;SAVE DDF_X
887)   147F DD 75 06    		 LD (IX + 6), L	;
888)   1482 DD 56 09    		 LD D, (IX + 9)        ;F	;F
889)   1485 DD 5E 08    		 LD E, (IX + 8)	;
890)   1488 19          		 ADD HL, DE	;
891)   1489 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
892)   148C DD 75 08    		 LD (IX + 8), L	;
895)   148F E1          		 POP HL         ;X1	;X1
896)   1490 E5          		 PUSH HL	;
897)   1491 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
898)   1494 DD 5E 0E    		 LD E, (IX + 14)	;
899)   1497 D5          		 PUSH DE	;
900)   1498 19          		 ADD HL, DE	;
901)   1499 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
902)   149A DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
903)   149D DD 6E 0C    		 LD L, (IX + 12)	;
904)   14A0 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
906)   14A1 CD 95 13    		 CALL PLOTP	;
908)   14A4 E1          		 POP HL         ;X	;X
909)   14A5 D1          		 POP DE         ;X1	;X1
910)   14A6 D5          		 PUSH DE	;
911)   14A7 E5          		 PUSH HL	;
912)   14A8 AF          		 XOR A	;
913)   14A9 ED 52       		 SBC HL, DE	;
914)   14AB EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
915)   14AC DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
916)   14AF DD 6E 0C    		 LD L, (IX + 12)	;
917)   14B2 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
919)   14B3 CD 95 13    		 CALL PLOTP	;
921)   14B6 E1          		 POP HL         ;X	;X
922)   14B7 D1          		 POP DE         ;X1	;X1
923)   14B8 D5          		 PUSH DE	;
924)   14B9 E5          		 PUSH HL	;
925)   14BA 19          		 ADD HL, DE	;
926)   14BB EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
927)   14BC DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
928)   14BF DD 6E 0C    		 LD L, (IX + 12)	;
929)   14C2 AF          		 XOR A	;
930)   14C3 ED 42       		 SBC HL, BC        ;HL=Y+Y1	;HL=Y+Y1
932)   14C5 CD 95 13    		 CALL PLOTP	;
934)   14C8 E1          		 POP HL         ;X	;X
935)   14C9 D1          		 POP DE         ;X1	;X1
936)   14CA D5          		 PUSH DE	;
937)   14CB E5          		 PUSH HL	;
938)   14CC AF          		 XOR A	;
939)   14CD ED 52       		 SBC HL, DE	;
940)   14CF EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
941)   14D0 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
942)   14D3 DD 6E 0C    		 LD L, (IX + 12)	;
943)   14D6 AF          		 XOR A	;
944)   14D7 ED 42       		 SBC HL, BC        ;HL=Y-Y1	;HL=Y-Y1
946)   14D9 CD 95 13    		 CALL PLOTP	;
948)   14DC E1          		 POP HL         ;X	;X
949)   14DD D1          		 POP DE         ;X1	;X1
950)   14DE C5          		 PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
951)   14DF E5          		 PUSH HL        ;SAVE X	;SAVE X
952)   14E0 D5          		 PUSH DE        ;SAVE X1	;SAVE X1
953)   14E1 09          		 ADD HL, BC        ;	;
954)   14E2 C1          		 POP BC         ;BC=X1	;BC=X1
955)   14E3 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
956)   14E4 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
957)   14E7 DD 6E 0C    		 LD L, (IX + 12)	;
958)   14EA 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
960)   14EB CD 95 13    		 CALL PLOTP	;
962)   14EE E1          		 POP HL         ;X	;X
963)   14EF D1          		 POP DE         ;Y1	;Y1
964)   14F0 D5          		 PUSH DE	;
965)   14F1 E5          		 PUSH HL	;
966)   14F2 AF          		 XOR A	;
967)   14F3 ED 52       		 SBC HL, DE	;
968)   14F5 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
969)   14F6 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
970)   14F9 DD 6E 0C    		 LD L, (IX + 12)	;
971)   14FC 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
973)   14FD CD 95 13    		 CALL PLOTP	;
975)   1500 E1          		 POP HL         ;X	;X
976)   1501 D1          		 POP DE         ;Y1	;Y1
977)   1502 D5          		 PUSH DE	;
978)   1503 E5          		 PUSH HL	;
979)   1504 19          		 ADD HL, DE	;
980)   1505 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
981)   1506 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
982)   1509 DD 6E 0C    		 LD L, (IX + 12)	;
983)   150C AF          		 XOR A	;
984)   150D ED 42       		 SBC HL, BC        ;HL=Y-X1	;HL=Y-X1
985)   150F E5          		 PUSH HL	;
987)   1510 CD 95 13    		 CALL PLOTP	;
989)   1513 C1          		 POP BC         ;Y-X1	;Y-X1
990)   1514 E1          		 POP HL         ;X	;X
991)   1515 D1          		 POP DE         ;Y1	;Y1
992)   1516 AF          		 XOR A	;
993)   1517 ED 52       		 SBC HL, DE	;
994)   1519 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
995)   151A C5          		 PUSH BC	;
996)   151B E1          		 POP HL         ;HL=Y-X1	;HL=Y-X1
998)   151C CD 95 13    		 CALL PLOTP	;
999)   151F C3 24 14    		 JP CIRC_AGN	;
1000)   1522 CD 0D 11    		CIRC_EXIT: CALL LCD_CLRXY	;
1001)   1525 D1          		 POP DE         ;GET RET ADDR	;GET RET ADDR
1002)   1526 21 10 00    		 LD HL, 8 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
1003)   1529 39          		 ADD HL, SP        ;	;
1004)   152A F9          		 LD SP, HL	;
1005)   152B EB          		 EX DE, HL	;
1006)   152C E9          		 JP (HL)	;
1013)   152D D9          		 EXX	;
1014)   152E D1          		 POP DE         ;save return addr to de'	;save return addr to de'
1015)   152F D9          		 EXX	;
1016)   1530 CD CE 17    		 CALL _FILL	;
1017)   1533 D9          		 EXX	;
1018)   1534 D5          		 PUSH DE        ;restore return addr from de'	;restore return addr from de'
1019)   1535 D9          		 EXX	;
1020)   1536 C9          		 RET	;
1027)   1537 FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
1028)   1539 CA 49 15    		 JP Z, PRCH_DOBCKSPC	;
1029)   153C FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
1030)   153E C8          		 RET Z	;
1031)   153F FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
1032)   1541 20 3A       		 JR NZ, PRCH_DOPRN	;
1033)   1543 21 0D FE    		 LD HL, CURSORX	;
1034)   1546 C3 96 16    		 JP PRCH_NEWLN	;
1036)   1549 21 0D FE    		 LD HL, CURSORX	;
1037)   154C 7E          		 LD A, (HL)	;
1038)   154D 38 05       		 JR C, DOREALBCKSPC	;
1040)   154F FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1041)   1551 C8          		 RET Z	;
1042)   1552 35          		 DEC (HL)	;
1043)   1553 C9          		 RET	;
1045)   1554 FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1046)   1556 28 0A       		 JR Z, PRCH_DOBCKSPC2       ;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER	;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER
1047)   1558 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1048)   1559 E5          		 PUSH HL	;
1049)   155A 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
1050)   155C CD 7D 15    		 CALL PRCH_DOPRN       ;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN	;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN
1051)   155F E1          		 POP HL	;
1052)   1560 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1053)   1561 B7          		 OR A	;
1057)   1562 DD 21 02 00 		 LD IX, 2	;
1058)   1566 DD 39       		 ADD IX, SP	;
1059)   1568 DD 66 01    		 LD H, (IX + 1)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1060)   156B DD 6E 00    		 LD L, (IX)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1061)   156E 3E 00       		 LD A, 0        ;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG	;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG
1062)   1570 28 02       		 JR Z, PRCH_SKIP1       ;WE ARE ON COLUMN 1	;WE ARE ON COLUMN 1
1063)   1572 2B          		 DEC HL         ;PREVIOUS POSITION DELETE BACKSPACE	;PREVIOUS POSITION DELETE BACKSPACE
1064)   1573 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1066)   1574 2B          		 DEC HL         ;PREVIOUS POSITION DELETE PREVIOUS CHAR	;PREVIOUS POSITION DELETE PREVIOUS CHAR
1067)   1575 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1068)   1576 DD 74 01    		 LD (IX + 1), H        ;PUT POSITION BACK ON STACK IT WILL POPED	;PUT POSITION BACK ON STACK IT WILL POPED
1069)   1579 DD 75 00    		 LD (IX), L	;
1070)   157C C9          		 RET	;
1073)   157D F5          		 PUSH AF        ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
1074)   157E 32 10 FE    		 LD (LASTCHAR), A       ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
1078)   1581 3A 16 FE    		 LD A, (VDUMODE)	;
1079)   1584 FE 05       		 CP 5	;
1080)   1586 20 19       		 JR NZ, VDU4	;
1081)   1588 2A 5F FE    		 LD HL, (GR_LASTX)	;
1082)   158B E5          		 PUSH HL	;
1083)   158C ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
1084)   1590 D5          		 PUSH DE	;
1085)   1591 01 07 00    		 LD BC, FONT_WIDTH - 1	;
1086)   1594 09          		 ADD HL, BC	;
1087)   1595 E5          		 PUSH HL	;
1088)   1596 01 09 00    		 LD BC, FONT_HEIGHT - 1	;
1089)   1599 EB          		 EX DE, HL	;
1090)   159A 09          		 ADD HL, BC	;
1091)   159B E5          		 PUSH HL	;
1092)   159C CD 58 10    		 CALL LCD_SETXY	;
1093)   159F 18 34       		 JR PRCHDO	;
1094)   15A1 3A 0D FE    		VDU4: LD A, (CURSORX)	;
1095)   15A4 06 08       		 LD B, FONT_WIDTH	;
1096)   15A6 16 00       		 LD D, 0	;
1097)   15A8 5F          		 LD E, A	;
1098)   15A9 21 00 00    		 LD HL, 0	;
1099)   15AC B7          		 OR A         ; CLEAR CARRY	; CLEAR CARRY
1101)   15AD ED 5A       		 ADC HL, DE	;
1102)   15AF 10 FC       		 DJNZ PRCH_AGN1        ;HL=DE*B	;HL=DE*B
1103)   15B1 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1104)   15B2 11 08 00    		 LD DE, FONT_WIDTH	;
1105)   15B5 ED 5A       		 ADC HL, DE	;
1106)   15B7 2B          		 DEC HL	;
1107)   15B8 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1109)   15B9 CD 0B 16    		 CALL LCD_CALCLINE       ;SCROLL CALC	;SCROLL CALC
1110)   15BC 06 0A       		 LD B, FONT_HEIGHT	;
1111)   15BE 16 00       		 LD D, 0	;
1112)   15C0 5F          		 LD E, A	;
1113)   15C1 21 00 00    		 LD HL, 0	;
1115)   15C4 ED 5A       		 ADC HL, DE	;
1116)   15C6 10 FC       		 DJNZ PRCH_AGN2	;
1117)   15C8 D1          		 POP DE         ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
1118)   15C9 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1119)   15CA D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1120)   15CB 11 0A 00    		 LD DE, FONT_HEIGHT	;
1121)   15CE ED 5A       		 ADC HL, DE        ;CALC 4TH PARAM	;CALC 4TH PARAM
1122)   15D0 2B          		 DEC HL         ;4TH PARAM -1	;4TH PARAM -1
1123)   15D1 E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1124)   15D2 CD 58 10    		 CALL LCD_SETXY	;
1125)   15D5 F1          		PRCHDO: POP AF         ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
1126)   15D6 B7          		 OR A	;
1127)   15D7 21 00 75    		 LD HL, FONT_ADDR	;
1128)   15DA 16 00       		 LD D, 0	;
1129)   15DC 5F          		 LD E, A	;
1130)   15DD ED 5A       		 ADC HL, DE        ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
1131)   15DF E5          		 PUSH HL	;
1132)   15E0 D1          		 POP DE         ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
1133)   15E1 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
1135)   15E3 1A          		 LD A, (DE)        ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1136)   15E4 06 08       		 LD B, FONT_WIDTH	;
1138)   15E6 CB 27       		 SLA A         ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1139)   15E8 38 05       		 JR C, FORECOLOR	;
1140)   15EA 2A 03 FE    		 LD HL, (BCOLOR)	;
1141)   15ED 18 03       		 JR PRCH_CONT	;
1143)   15EF 2A 01 FE    		 LD HL, (FCOLOR)	;
1145)   15F2 F5          		 PUSH AF	;
1146)   15F3 D5          		 PUSH DE        ;TODO:PROBABLY NOT NEEDED HERE	;TODO:PROBABLY NOT NEEDED HERE
1147)   15F4 CD A5 10    		 CALL LCD_SETPIXEL	;
1148)   15F7 D1          		 POP DE	;
1149)   15F8 F1          		 POP AF	;
1150)   15F9 10 EB       		 DJNZ PRCH_AGN4	;
1151)   15FB 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1152)   15FC 0D          		 DEC C	;
1153)   15FD 20 E4       		 JR NZ, PRCH_AGN3	;
1155)   15FF 21 0D FE    		 LD HL, CURSORX	;
1156)   1602 7E          		 LD A, (HL)	;
1157)   1603 3C          		 INC A	;
1158)   1604 FE 50       		 CP 80	;
1159)   1606 CA 96 16    		 JP Z, PRCH_NEWLN       ;NEW LINE	;NEW LINE
1160)   1609 77          		 LD (HL), A	;
1161)   160A C9          		 RET	;
1164)   160B 3A 0F FE    		@LCD_CALCLINE: LD A, (SCRLN)	;
1165)   160E 57          		 LD D, A	;
1166)   160F 3A 0E FE    		 LD A, (CURSORY)       ;480/10 MAKES 48 LINES	;480/10 MAKES 48 LINES
1167)   1612 82          		 ADD A, D	;
1168)   1613 FE 30       		 CP TOTLINES	;
1169)   1615 D8          		 RET C	;
1171)   1616 D6 30       		 SUB TOTLINES	;
1172)   1618 C9          		 RET	;
1177)   1619 16 33       		LCD_SETSCROLL: LD D, 0x33	;
1178)   161B CD DF 0E    		 CALL LCD_WR_COM	;
1179)   161E 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
1180)   1620 CD DB 0E    		 CALL LCD_WR_DAT	;
1181)   1623 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
1182)   1625 CD DB 0E    		 CALL LCD_WR_DAT	;
1183)   1628 16 01       		 LD D, 0X01        ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
1184)   162A CD DB 0E    		 CALL LCD_WR_DAT	;
1185)   162D 16 E0       		 LD D, 0XE0        ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
1186)   162F CD DB 0E    		 CALL LCD_WR_DAT	;
1187)   1632 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
1188)   1634 CD DB 0E    		 CALL LCD_WR_DAT	;
1189)   1637 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
1190)   1639 CD DB 0E    		 CALL LCD_WR_DAT	;
1191)   163C AF          		 XOR A	;
1192)   163D 32 0F FE    		 LD (SCRLN), A	;
1193)   1640 C9          		 RET	;
1196)   1641 3A 0F FE    		@LCD_DOSCROLL: LD A, (SCRLN)	;
1197)   1644 3C          		 INC A	;
1198)   1645 FE 30       		 CP TOTLINES	;
1199)   1647 38 02       		 JR C, DS_NXT	;
1200)   1649 D6 30       		 SUB TOTLINES	;
1201)   164B 32 0F FE    		DS_NXT: LD (SCRLN), A	;
1202)   164E 6F          		 LD L, A	;
1203)   164F 26 00       		 LD H, 0	;
1204)   1651 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1205)   1652 29          		 ADD HL, HL	;
1206)   1653 29          		 ADD HL, HL	;
1207)   1654 5F          		 LD E, A	;
1208)   1655 16 00       		 LD D, 0	;
1209)   1657 19          		 ADD HL, DE	;
1210)   1658 19          		 ADD HL, DE	;
1211)   1659 16 37       		 LD D, 0x37	;
1212)   165B CD DF 0E    		 CALL LCD_WR_COM	;
1213)   165E 54          		 LD D, H        ;NEW TOP SCROLL LINE BYTES HIGH (1-480)	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
1214)   165F CD DB 0E    		 CALL LCD_WR_DAT	;
1215)   1662 55          		 LD D, L        ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
1216)   1663 CD DB 0E    		 CALL LCD_WR_DAT	;
1217)   1666 C9          		 RET	;
1220)   1667 11 00 00    		@LCD_CLRTXTLN: LD DE, 0	;
1222)   166A D5          		 PUSH DE	;
1223)   166B 6F          		 LD L, A	;
1224)   166C 26 00       		 LD H, 0	;
1225)   166E 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1226)   166F 29          		 ADD HL, HL	;
1227)   1670 29          		 ADD HL, HL	;
1228)   1671 5F          		 LD E, A	;
1229)   1672 16 00       		 LD D, 0	;
1230)   1674 19          		 ADD HL, DE	;
1231)   1675 19          		 ADD HL, DE	;
1233)   1676 E5          		 PUSH HL	;
1234)   1677 11 0A 00    		 LD DE, FONT_HEIGHT	;
1235)   167A 19          		 ADD HL, DE	;
1237)   167B EB          		 EX DE, HL	;
1238)   167C 21 1F 03    		 LD HL, LCD_WIDTH	;
1240)   167F E5          		 PUSH HL	;
1241)   1680 D5          		 PUSH DE        ;PARAM4	;PARAM4
1242)   1681 CD 58 10    		 CALL LCD_SETXY	;
1243)   1684 01 40 1F    		 LD BC, 8000        ; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
1244)   1687 2A 03 FE    		 LD HL, (BCOLOR)	;
1245)   168A CD A5 10    		CTL_AGN: CALL LCD_SETPIXEL      ;DESTROYS D,A	;DESTROYS D,A
1246)   168D 0B          		 DEC BC	;
1247)   168E 78          		 LD A, B	;
1248)   168F B1          		 OR C	;
1249)   1690 20 F8       		 JR NZ, CTL_AGN	;
1250)   1692 CD 0D 11    		 CALL LCD_CLRXY	;
1251)   1695 C9          		 RET	;
1255)   1696 AF          		 XOR A	;
1256)   1697 77          		 LD (HL), A	;
1257)   1698 23          		 INC HL	;
1258)   1699 7E          		 LD A, (HL)	;
1259)   169A 3C          		 INC A	;
1261)   169B FE 30       		 CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
1262)   169D 28 02       		 JR Z, PRCH_SCROLL	;
1263)   169F 77          		 LD (HL), A	;
1264)   16A0 C9          		 RET	;
1266)   16A1 F5          		PRCH_SCROLL: PUSH AF	;
1267)   16A2 E5          		 PUSH HL	;
1269)   16A3 3A 0F FE    		 LD A, (SCRLN)	;
1270)   16A6 CD 67 16    		 CALL LCD_CLRTXTLN	;
1272)   16A9 CD 41 16    		 CALL LCD_DOSCROLL	;
1273)   16AC E1          		 POP HL	;
1274)   16AD F1          		 POP AF	;
1276)   16AE 3D          		 DEC A	;
1277)   16AF 77          		 LD (HL), A        ;CURSORY	;CURSORY
1278)   16B0 AF          		 XOR A	;
1279)   16B1 32 0D FE    		 LD (CURSORX), A	;
1280)   16B4 C9          		 RET	;
1295)   16B5 2A 03 FE    		 LD HL, (BCOLOR)       ;	;
1296)   16B8 18 03       		 JR LCD_SETCURS	;
1307)   16BA 2A 01 FE    		 LD HL, (FCOLOR)       ;COLOR PARAM	;COLOR PARAM
1310)   16BD E5          		 PUSH HL        ;COLOR PARAM	;COLOR PARAM
1311)   16BE 3A 0D FE    		 LD A, (CURSORX)	;
1312)   16C1 06 08       		 LD B, FONT_WIDTH	;
1313)   16C3 16 00       		 LD D, 0	;
1314)   16C5 5F          		 LD E, A	;
1315)   16C6 21 00 00    		 LD HL, 0	;
1316)   16C9 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
1318)   16CA ED 5A       		 ADC HL, DE	;
1319)   16CC 10 FC       		 DJNZ SCUR_AGN1        ;HL = DE * B	;HL = DE * B
1320)   16CE E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1321)   16CF 01 08 00    		 LD BC, FONT_WIDTH	;
1322)   16D2 ED 4A       		 ADC HL, BC        ;NEXT CHAR	;NEXT CHAR
1323)   16D4 2B          		 DEC HL         ;MINUS 1	;MINUS 1
1324)   16D5 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1326)   16D6 CD 0B 16    		 CALL LCD_CALCLINE	;
1327)   16D9 06 0A       		 LD B, FONT_HEIGHT	;
1328)   16DB 16 00       		 LD D, 0	;
1329)   16DD 5F          		 LD E, A	;
1330)   16DE 21 00 00    		 LD HL, 0	;
1332)   16E1 ED 5A       		 ADC HL, DE	;
1333)   16E3 10 FC       		 DJNZ SCUR_AGN2        ;HL=B*DE	;HL=B*DE
1334)   16E5 0E 08       		 LD C, FONT_HEIGHT - 2       ;2 PIXEL HEIGTH CURSOR	;2 PIXEL HEIGTH CURSOR
1335)   16E7 06 00       		 LD B, 0	;
1336)   16E9 ED 4A       		 ADC HL, BC        ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
1337)   16EB D1          		 POP DE         ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
1338)   16EC E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1339)   16ED D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1341)   16EE 23          		 INC HL         ; Y2 ADD THE LAST +2 PIXELS	; Y2 ADD THE LAST +2 PIXELS
1342)   16EF E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1343)   16F0 CD 58 10    		 CALL LCD_SETXY	;
1345)   16F3 E1          		 POP HL         ;GET THE COLOR	;GET THE COLOR
1346)   16F4 06 10       		 LD B, 2 * FONT_WIDTH       ;2*8=16	;2*8=16
1348)   16F6 CD A5 10    		 CALL LCD_SETPIXEL       ;DESTROYS D,A	;DESTROYS D,A
1349)   16F9 10 FB       		 DJNZ SCUR_AGN3	;
1354)   16FB C9          		 RET	;
1357)   16FC CD 0D 11    		 CALL LCD_CLRXY        ;	;
1358)   16FF 2A 03 FE    		 LD HL, (BCOLOR)	;
1360)   1702 01 E0 01    		 LD BC, LCD_HEIGHT + 1	;
1361)   1705 C5          		CS_AGNA2: PUSH BC	;
1362)   1706 01 20 03    		 LD BC, LCD_WIDTH + 1	;
1363)   1709 CD A5 10    		CS_AGNA1: CALL LCD_SETPIXEL      ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1364)   170C 0B          		 DEC BC	;
1365)   170D 78          		 LD A, B	;
1366)   170E B1          		 OR C	;
1367)   170F 20 F8       		 JR NZ, CS_AGNA1	;
1368)   1711 C1          		 POP BC	;
1369)   1712 0B          		 DEC BC	;
1370)   1713 78          		 LD A, B	;
1371)   1714 B1          		 OR C	;
1372)   1715 20 EE       		 JR NZ, CS_AGNA2	;
1373)   1717 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1374)   171A 22 0D FE    		 LD (CURSORX), HL	;
1375)   171D C9          		 RET	;
1380)   171E 06 DF       		 LD B, LCD_HEIGHT.AND.0xFF      ;lsb	;lsb
1381)   1720 0E 02       		 LD C, LCD_HEIGHT.SHR.8 + 1      ;MSB+1	;MSB+1
1383)   1722 C5          		 PUSH BC	;
1385)   1723 06 1F       		 LD B, LCD_WIDTH.AND.0xFF      ;lsb	;lsb
1386)   1725 0E 04       		 LD C, LCD_WIDTH.SHR.8 + 1      ;MSV+1	;MSV+1
1388)   1727 CD A5 10    		 CALL LCD_SETPIXEL       ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1389)   172A 10 FB       		 DJNZ CS_AGN1	;
1390)   172C 0D          		 DEC C	;
1391)   172D 20 F8       		 JR NZ, CS_AGN1	;
1392)   172F C1          		 POP BC	;
1393)   1730 10 F0       		 DJNZ CS_AGN2	;
1394)   1732 0D          		 DEC C	;
1395)   1733 20 ED       		 JR NZ, CS_AGN2	;
1396)   1735 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1397)   1738 22 0D FE    		 LD (CURSORX), HL	;
1398)   173B C9          		 RET	;
1404)   173C 7E          		 LD A, (HL)	;
1405)   173D FE 00       		 CP 0	;
1406)   173F C8          		 RET Z	;
1407)   1740 E5          		 PUSH HL	;
1408)   1741 CD 37 15    		 CALL LCD_PRINTCHAR	;
1409)   1744 E1          		 POP HL	;
1410)   1745 23          		 INC HL	;
1411)   1746 18 F4       		 JR LCD_MSG	;
  3)   1748 AF          		NEGHL: xor a	;
  4)   1749 95          		 sub l	;
  5)   174A 6F          		 ld l, a	;
  6)   174B 9F          		 sbc a, a	;
  7)   174C 94          		 sub h	;
  8)   174D 67          		 ld h, a	;
  9)   174E C9          		 RET	;
 13)   174F 2A 79 FE    		 LD HL, (FILL_IDX)	;
 14)   1752 01 58 02    		 LD BC, MAXQ	;
 15)   1755 A7          		 AND A	;
 16)   1756 ED 42       		 SBC HL, BC	;
 17)   1758 D0          		 RET NC     ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 18)   1759 2A 7B FE    		 LD HL, (FILL_PY)	;
 19)   175C ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 20)   1760 19          		 ADD HL, DE	;
 21)   1761 7C          		 LD A, H	;
 22)   1762 FE 80       		 CP 80H	;
 23)   1764 D0          		 RET NC     ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 24)   1765 11 1F 03    		 LD DE, LCD_WIDTH	;
 25)   1768 ED 52       		 SBC HL, DE	;
 26)   176A D0          		 RET NC      ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 28)   176B 2A 77 FE    		 LD HL, (FILL_Q)	;
 29)   176E ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 30)   1772 78          		 LD A, B	;
 31)   1773 B1          		 OR C       ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 32)   1774 28 08       		 JR Z, QPS_NXT1	;
 33)   1776 EB          		 EX DE, HL	;
 34)   1777 C5          		 PUSH BC	;
 35)   1778 E1          		 POP HL	;
 36)   1779 29          		 ADD HL, HL	;
 37)   177A 29          		 ADD HL, HL	;
 38)   177B 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 39)   177C EB          		 EX DE, HL	;
 40)   177D 19          		 ADD HL, DE	;
 42)   177E 11 7B FE    		 LD DE, FILL_PY	;
 43)   1781 EB          		 EX DE, HL      ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 44)   1782 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 45)   1785 ED B0       		 LDIR       ;COPY	;COPY
 46)   1787 2A 79 FE    		 LD HL, (FILL_IDX)	;
 47)   178A 23          		 INC HL	;
 48)   178B 22 79 FE    		 LD (FILL_IDX), HL	;
 49)   178E C9          		QPS_EXT: RET	;
 51)   178F 2A 77 FE    		QPOP: LD HL, (FILL_Q)	;
 52)   1792 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 53)   1796 0B          		 DEC BC	;
 54)   1797 C5          		 PUSH BC	;
 55)   1798 78          		 LD A, B	;
 56)   1799 B1          		 OR C       ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 57)   179A 28 08       		 JR Z, QPP_NXT1	;
 58)   179C EB          		 EX DE, HL	;
 59)   179D C5          		 PUSH BC	;
 60)   179E E1          		 POP HL	;
 61)   179F 29          		 ADD HL, HL	;
 62)   17A0 29          		 ADD HL, HL	;
 63)   17A1 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 64)   17A2 EB          		 EX DE, HL	;
 65)   17A3 19          		 ADD HL, DE	;
 66)   17A4 C1          		QPP_NXT1: POP BC	;
 67)   17A5 ED 43 79 FE 		 LD (FILL_IDX), BC	;
 69)   17A9 11 7B FE    		 LD DE, FILL_PY     ;ORIGIN=QUEUE DEST=FILL_PY	;ORIGIN=QUEUE DEST=FILL_PY
 70)   17AC 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 71)   17AF ED B0       		 LDIR       ;COPY	;COPY
 72)   17B1 2A 7D FE    		 LD HL, (FILL_PXL)	;
 73)   17B4 22 71 FE    		 LD (FILL_X1), HL	;
 74)   17B7 2A 7F FE    		 LD HL, (FILL_PXR)	;
 75)   17BA 22 73 FE    		 LD (FILL_X2), HL	;
 76)   17BD ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 77)   17C1 ED 53 75 FE 		 LD (FILL_DY), DE	;
 78)   17C5 2A 7B FE    		 LD HL, (FILL_PY)	;
 79)   17C8 A7          		 AND A	;
 80)   17C9 19          		 ADD HL, DE	;
 81)   17CA 22 6D FE    		 LD (FILL_Y), HL	;
 89)   17CD C9          		 RET	;
 91)   17CE E1          		@_FILL: POP HL     ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 92)   17CF D1          		 POP DE      ;Y	;Y
 93)   17D0 C1          		 POP BC      ;X	;X
 94)   17D1 E5          		 PUSH HL      ;RET ADDR TO SP	;RET ADDR TO SP
 95)   17D2 ED 43 6B FE 		 LD (FILL_X), BC	;
 96)   17D6 ED 53 6D FE 		 LD (FILL_Y), DE	;
 97)   17DA ED 73 85 FE 		 LD (FILL_OLDSP), SP	;
 98)   17DE 21 3E ED    		 LD HL, - ((MAXQ * 8) + 2)  ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
 99)   17E1 39          		 ADD HL, SP	;
100)   17E2 F9          		 LD SP, HL      ;NEW SP	;NEW SP
103)   17E3 22 77 FE    		 LD (FILL_Q), HL     ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
104)   17E6 21 00 00    		 LD HL, 0	;
105)   17E9 22 79 FE    		 LD (FILL_IDX), HL    ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
109)   17EC 2A 6B FE    		 LD HL, (FILL_X)    ;	;
110)   17EF E5          		 PUSH HL	;
111)   17F0 2A 6D FE    		 LD HL, (FILL_y)    ;	;
112)   17F3 E5          		 PUSH HL	;
113)   17F4 CD BC 10    		 CALL LCD_READPIXEL	;
114)   17F7 22 83 FE    		 LD (FILL_OV), HL	;
116)   17FA ED 5B 01 FE 		 LD DE, (FCOLOR)	;
117)   17FE A7          		 AND A	;
118)   17FF ED 52       		 SBC HL, DE      ;CHK OV=NV	;CHK OV=NV
119)   1801 CA 86 19    		 JP Z, FL_EXIT	;
120)   1804 2A 6B FE    		 LD HL, (FILL_X)	;
121)   1807 7C          		 LD A, H	;
122)   1808 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
123)   180A D2 86 19    		 JP NC, FL_EXIT	;
124)   180D 11 1F 03    		 LD DE, LCD_WIDTH	;
125)   1810 A7          		 AND A	;
126)   1811 ED 52       		 SBC HL, DE      ;CHK>799	;CHK>799
127)   1813 D2 86 19    		 JP NC, FL_EXIT	;
128)   1816 2A 6D FE    		 LD HL, (FILL_Y)	;
129)   1819 7C          		 LD A, H	;
130)   181A FE 80       		 CP 0x80      ;CHK <0	;CHK <0
131)   181C D2 86 19    		 JP NC, FL_EXIT	;
132)   181F 11 DF 01    		 LD DE, LCD_HEIGHT	;
133)   1822 A7          		 AND A	;
134)   1823 ED 52       		 SBC HL, DE      ;CHK>480	;CHK>480
135)   1825 D2 86 19    		 JP NC, FL_EXIT	;
137)   1828 2A 6D FE    		 LD HL, (FILL_Y)	;
138)   182B 22 7B FE    		 LD (FILL_PY), HL	;
139)   182E 2A 6B FE    		 LD HL, (FILL_X)	;
140)   1831 22 7D FE    		 LD (FILL_PXL), HL	;
141)   1834 22 7F FE    		 LD (FILL_PXR), HL	;
142)   1837 21 01 00    		 LD HL, 1	;
143)   183A 22 81 FE    		 LD (FILL_PDY), HL	;
144)   183D CD 4F 17    		 CALL QPUSH      ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
146)   1840 2A 6D FE    		 LD HL, (FILL_Y)	;
147)   1843 23          		 INC HL	;
148)   1844 22 7B FE    		 LD (FILL_PY), HL	;
149)   1847 21 FF FF    		 LD HL, - 1	;
150)   184A 22 81 FE    		 LD (FILL_PDY), HL	;
151)   184D CD 4F 17    		 CALL QPUSH	;
153)   1850 ED 5B 79 FE 		 LD DE, (FILL_IDX)	;
154)   1854 7A          		 LD A, D	;
155)   1855 B3          		 OR E	;
156)   1856 CA 86 19    		 JP Z, FL_EXIT     ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
160)   1859 CD 8F 17    		 CALL QPOP      ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
163)   185C 2A 71 FE    		 LD HL, (FILL_X1)	;
164)   185F 22 6B FE    		 LD (FILL_X), HL	;
165)   1862 7C          		FL_LP1: LD A, H	;
166)   1863 FE 80       		 CP 0x80      ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
167)   1865 D2 8D 18    		 JP NC, FL_NXT1	;
168)   1868 ED 5B 6D FE 		 LD DE, (FILL_Y)	;
169)   186C E5          		 PUSH HL	;
170)   186D D5          		 PUSH DE	;
171)   186E CD BC 10    		 CALL LCD_READPIXEL	;
172)   1871 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
173)   1875 A7          		 AND A	;
174)   1876 ED 52       		 SBC HL, DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
175)   1878 C2 8D 18    		 JP NZ, FL_NXT1	;
176)   187B ED 5B 6B FE 		 LD DE, (FILL_X)	;
177)   187F 2A 6D FE    		 LD HL, (FILL_Y)	;
178)   1882 D5          		 PUSH DE	;
179)   1883 CD 95 13    		 CALL PLOTP	;
180)   1886 E1          		 POP HL	;
181)   1887 2B          		 DEC HL	;
182)   1888 22 6B FE    		 LD (FILL_X), HL	;
183)   188B 18 D5       		 JR FL_LP1	;
187)   188D 2A 6B FE    		 LD HL, (FILL_X)	;
188)   1890 ED 5B 71 FE 		 LD DE, (FILL_X1)	;
189)   1894 7C          		 LD A, H	;
190)   1895 FE 80       		 CP 80H	;
191)   1897 30 08       		 JR NC, FL_NXT1A     ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
192)   1899 A7          		 AND A	;
193)   189A ED 52       		 SBC HL, DE      ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
194)   189C D2 44 19    		 JP NC, FL_SKIP     ;C IF DE>HL X1>X, NC IF X>=X1	;C IF DE>HL X1>X, NC IF X>=X1
195)   189F ED 5A       		 ADC HL, DE	;
198)   18A1 23          		 INC HL	;
199)   18A2 22 6F FE    		 LD (FILL_L), HL	;
202)   18A5 A7          		 AND A	;
203)   18A6 ED 52       		 SBC HL, DE      ;CHK L-X1	;CHK L-X1
204)   18A8 30 1E       		 JR NC, FL_NXT2     ;C IF DE>HL X1>L	;C IF DE>HL X1>L
205)   18AA 28 1C       		 JR Z, FL_NXT2	;
206)   18AC ED 5A       		 ADC HL, DE	;
207)   18AE 22 7D FE    		 LD (FILL_PXL), HL    ;L	;L
208)   18B1 2A 6D FE    		 LD HL, (FILL_Y)	;
209)   18B4 22 7B FE    		 LD (FILL_PY), HL	;
210)   18B7 1B          		 DEC DE	;
211)   18B8 ED 53 7F FE 		 LD (FILL_PXR), DE	;
212)   18BC 2A 75 FE    		 LD HL, (FILL_DY)	;
213)   18BF CD 48 17    		 CALL NEGHL	;
214)   18C2 22 81 FE    		 LD (FILL_PDY), HL	;
215)   18C5 CD 4F 17    		 CALL QPUSH	;
219)   18C8 2A 71 FE    		 LD HL, (FILL_X1)     ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
220)   18CB 23          		 INC HL	;
221)   18CC 22 6B FE    		 LD (FILL_X), HL	;
225)   18CF 11 1F 03    		 LD DE, LCD_WIDTH	;
226)   18D2 A7          		 AND A	;
227)   18D3 EB          		 EX DE, HL	;
228)   18D4 ED 52       		 SBC HL, DE      ;800-(X=DE)	;800-(X=DE)
229)   18D6 38 24       		 JR C, FL_NXT3     ;C IF X>800	;C IF X>800
230)   18D8 EB          		 EX DE, HL      ;HL=X	;HL=X
231)   18D9 E5          		 PUSH HL	;
232)   18DA 2A 6D FE    		 LD HL, (FILL_Y)	;
233)   18DD E5          		 PUSH HL	;
234)   18DE CD BC 10    		 CALL LCD_READPIXEL	;
235)   18E1 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
236)   18E5 A7          		 AND A	;
237)   18E6 ED 52       		 SBC HL, DE      ;PIXELREAD=OV	;PIXELREAD=OV
238)   18E8 20 12       		 JR NZ, FL_NXT3	;
239)   18EA ED 5B 6B FE 		 LD DE, (FILL_X)	;
240)   18EE 2A 6D FE    		 LD HL, (FILL_Y)	;
241)   18F1 D5          		 PUSH DE	;
242)   18F2 CD 95 13    		 CALL PLOTP	;
243)   18F5 E1          		 POP HL	;
244)   18F6 23          		 INC HL	;
245)   18F7 22 6B FE    		 LD (FILL_X), HL	;
246)   18FA 18 D3       		 JR FL_LP2	;
249)   18FC 2A 6D FE    		 LD HL, (FILL_Y)	;
250)   18FF 22 7B FE    		 LD (FILL_PY), HL	;
251)   1902 2A 6F FE    		 LD HL, (FILL_L)	;
252)   1905 22 7D FE    		 LD (FILL_PXL), HL	;
253)   1908 2A 6B FE    		 LD HL, (FILL_X)	;
254)   190B 2B          		 DEC HL	;
255)   190C 22 7F FE    		 LD (FILL_PXR), HL	;
256)   190F 2A 75 FE    		 LD HL, (FILL_DY)	;
257)   1912 22 81 FE    		 LD (FILL_PDY), HL	;
258)   1915 CD 4F 17    		 CALL QPUSH	;
260)   1918 2A 6B FE    		 LD HL, (FILL_X)	;
261)   191B ED 5B 73 FE 		 LD DE, (FILL_X2)	;
262)   191F 13          		 INC DE	;
263)   1920 A7          		 AND A	;
264)   1921 ED 52       		 SBC HL, DE      ;X-(X2+1) C IF X2+1>X	;X-(X2+1) C IF X2+1>X
265)   1923 38 1F       		 JR C, FL_NXT4	;
266)   1925 28 1D       		 JR Z, FL_NXT4	;
267)   1927 2A 6D FE    		 LD HL, (FILL_Y)	;
268)   192A 22 7B FE    		 LD (FILL_PY), HL	;
269)   192D ED 53 7D FE 		 LD (FILL_PXL), DE	;
270)   1931 2A 6B FE    		 LD HL, (FILL_X)    ;	;
271)   1934 2B          		 DEC HL	;
272)   1935 22 7F FE    		 LD (FILL_PXR), HL	;
273)   1938 2A 75 FE    		 LD HL, (FILL_DY)	;
274)   193B CD 48 17    		 CALL NEGHL	;
275)   193E 22 81 FE    		 LD (FILL_PDY), HL	;
276)   1941 CD 4F 17    		 CALL QPUSH	;
279)   1944 2A 6B FE    		 LD HL, (FILL_X)	;
280)   1947 23          		 INC HL	;
281)   1948 22 6B FE    		 LD (FILL_X), HL	;
282)   194B ED 5B 73 FE 		FL_LP3: LD DE, (FILL_X2)	;
283)   194F A7          		 AND A	;
284)   1950 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
285)   1951 ED 52       		 SBC HL, DE      ;C IF DE>HL X>X2	;C IF DE>HL X>X2
286)   1953 38 1C       		 JR C, FL_NXT5	;
287)   1955 19          		 ADD HL, DE      ;	;
288)   1956 EB          		 EX DE, HL      ;X=HL X2=DE	;X=HL X2=DE
289)   1957 E5          		 PUSH HL	;
290)   1958 2A 6D FE    		 LD HL, (FILL_Y)	;
291)   195B E5          		 PUSH HL	;
292)   195C CD BC 10    		 CALL LCD_READPIXEL	;
293)   195F ED 5B 83 FE 		 LD DE, (FILL_OV)	;
294)   1963 A7          		 AND A	;
295)   1964 ED 52       		 SBC HL, DE      ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
296)   1966 28 09       		 JR Z, FL_NXT5	;
297)   1968 2A 6B FE    		 LD HL, (FILL_X)	;
298)   196B 23          		 INC HL	;
299)   196C 22 6B FE    		 LD (FILL_X), HL	;
300)   196F 18 DA       		 JR FL_LP3	;
303)   1971 2A 6B FE    		 LD HL, (FILL_X)	;
304)   1974 22 6F FE    		 LD (FILL_L), HL	;
306)   1977 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
307)   197B A7          		 AND A	;
308)   197C EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
309)   197D ED 52       		 SBC HL, DE      ;X2-X C IF X>X2	;X2-X C IF X>X2
310)   197F EB          		 EX DE, HL      ;X=HL X2-X=DE	;X=HL X2-X=DE
311)   1980 DA 50 18    		 JP C, FL_LP0    ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
312)   1983 C3 CF 18    		 JP FL_LP2      ;GOTO DO WHILE	;GOTO DO WHILE
315)   1986 21 C2 12    		FL_EXIT: LD HL, (MAXQ * 8) + 2  ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
316)   1989 39          		 ADD HL, SP	;
317)   198A F9          		 LD SP, HL      ;NEW SP	;NEW SP
318)   198B C9          		 RET	;
  9)   198C FE 01       		 CP 1         ;IS IT FOR GRAPHICS?	;IS IT FOR GRAPHICS?
 10)   198E 28 0E       		 JR Z, GRCOLS	;
 11)   1990 21 03 FE    		 LD HL, BCOLOR	;
 12)   1993 22 69 FE    		 LD (GR_PARAM4), HL	;
 13)   1996 21 01 FE    		 LD HL, FCOLOR	;
 14)   1999 22 67 FE    		 LD (GR_PARAM3), HL	;
 15)   199C 18 0C       		 JR BS_DOCOL	;
 16)   199E 21 07 FE    		GRCOLS: LD HL, BGRCOL	;
 17)   19A1 22 69 FE    		 LD (GR_PARAM4), HL	;
 18)   19A4 21 05 FE    		 LD HL, FGRCOL	;
 19)   19A7 22 67 FE    		 LD (GR_PARAM3), HL	;
 20)   19AA CD 94 5E    		BS_DOCOL: CALL EXPRI       ;GET 1ST PARAM	;GET 1ST PARAM
 21)   19AD D9          		 EXX	;
 22)   19AE FD 7E 00    		 LD A, (IY)	;
 23)   19B1 FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
 24)   19B3 28 32       		 JR Z, COLSEL	;
 25)   19B5 FE 3A       		 CP ':'	;
 26)   19B7 28 2E       		 JR Z, COLSEL	;
 27)   19B9 FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
 28)   19BB C2 5A 1D    		 JP NZ, GRPHERR	;
 30)   19BE E5          		 PUSH HL        ;SAVE 1ST PARAM	;SAVE 1ST PARAM
 31)   19BF FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
 32)   19C1 CD 94 5E    		 CALL EXPRI        ;GET 2ND PARAM	;GET 2ND PARAM
 33)   19C4 D9          		 EXX	;
 34)   19C5 D1          		 POP DE         ;RESTORE 1ST PARAM ON DE HL HAS THE 2ND	;RESTORE 1ST PARAM ON DE HL HAS THE 2ND
 35)   19C6 7B          		 LD A, E	;
 36)   19C7 D6 80       		 SUB 128	;
 37)   19C9 38 07       		 JR C, COLFC	;
 38)   19CB 5F          		 LD E, A	;
 39)   19CC DD 21 37 FE 		 LD IX, BCOLPAL	;
 40)   19D0 18 04       		 JR DOPALCOL	;
 41)   19D2 DD 21 17 FE 		COLFC: LD IX, FCOLPAL	;
 43)   19D6 7B          		 LD A, E	;
 44)   19D7 FE 0F       		 CP 15         ;MAX 16 COLORS	;MAX 16 COLORS
 45)   19D9 D2 5A 1D    		 JP NC, GRPHERR	;
 46)   19DC DD 19       		 ADD IX, DE	;
 47)   19DE DD 19       		 ADD IX, DE        ;2*DE CAUSE ITS A 2 BYTE ARRAY	;2*DE CAUSE ITS A 2 BYTE ARRAY
 48)   19E0 DD 75 00    		 LD (IX), L        ;SAVE THE NEW COLOR	;SAVE THE NEW COLOR
 49)   19E3 DD 74 01    		 LD (IX + 1), H	;
 50)   19E6 C9          		 RET	;
 53)   19E7 E5          		 PUSH HL	;
 54)   19E8 D1          		 POP DE	;
 55)   19E9 7B          		 LD A, E	;
 56)   19EA D6 80       		 SUB 128        ;CHECK MSB	;CHECK MSB
 57)   19EC 38 11       		 JR C, CFC	;
 58)   19EE 5F          		 LD E, A	;
 59)   19EF DD 21 69 FE 		 LD IX, GR_PARAM4	;
 60)   19F3 DD 6E 00    		 LD L, (IX)	;
 61)   19F6 DD 66 01    		 LD H, (IX + 1)	;
 62)   19F9 DD 21 37 FE 		 LD IX, BCOLPAL        ;BACKCOLOR	;BACKCOLOR
 63)   19FD 18 0E       		 JR SFC	;
 64)   19FF DD 21 67 FE 		CFC: LD IX, GR_PARAM3	;
 65)   1A03 DD 6E 00    		 LD L, (IX)	;
 66)   1A06 DD 66 01    		 LD H, (IX + 1)	;
 67)   1A09 DD 21 17 FE 		 LD IX, FCOLPAL        ;FRONTCOLOR	;FRONTCOLOR
 68)   1A0D 7B          		SFC: LD A, E	;
 69)   1A0E FE 10       		 CP 16         ;MAX 16 COLORS	;MAX 16 COLORS
 70)   1A10 D2 5A 1D    		 JP NC, GRPHERR	;
 71)   1A13 DD 19       		 ADD IX, DE	;
 72)   1A15 DD 19       		 ADD IX, DE	;
 73)   1A17 DD 56 00    		 LD D, (IX)	;
 74)   1A1A DD 5E 01    		 LD E, (IX + 1)	;
 75)   1A1D 72          		 LD (HL), D        ;SAVE AGAIN	;SAVE AGAIN
 76)   1A1E 23          		 INC HL	;
 77)   1A1F 73          		 LD (HL), E	;
 78)   1A20 C9          		 RET	;
 84)   1A21 AF          		 XOR A	;
 85)   1A22 21 63 FE    		 LD HL, GR_PARAM1	;
 87)   1A25 F5          		 PUSH AF	;
 88)   1A26 E5          		 PUSH HL	;
 89)   1A27 CD 94 5E    		 CALL EXPRI        ;GET 1ST PARAM	;GET 1ST PARAM
 90)   1A2A D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
 91)   1A2B D1          		 POP DE         ;GET PARAM ADDRESS	;GET PARAM ADDRESS
 92)   1A2C EB          		 EX DE, HL	;
 93)   1A2D 73          		 LD (HL), E	;
 94)   1A2E 23          		 INC HL	;
 95)   1A2F 72          		 LD (HL), D	;
 96)   1A30 23          		 INC HL         ;PARAM SAVED	;PARAM SAVED
 97)   1A31 F1          		 POP AF	;
 98)   1A32 3C          		 INC A	;
 99)   1A33 FE 04       		 CP 4	;
100)   1A35 C8          		 RET Z	;
101)   1A36 F5          		 PUSH AF	;
102)   1A37 FD 7E 00    		 LD A, (IY)	;
103)   1A3A FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
104)   1A3C 28 0D       		 JR Z, NOMORE	;
105)   1A3E FE 3A       		 CP ':'         ;FINISHED COMD LINE	;FINISHED COMD LINE
106)   1A40 28 09       		 JR Z, NOMORE	;
107)   1A42 FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
108)   1A44 20 05       		 JR NZ, NOMORE	;
109)   1A46 FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
110)   1A48 F1          		 POP AF	;
111)   1A49 18 DA       		 JR GBP_NXT	;
112)   1A4B F1          		NOMORE: POP AF	;
113)   1A4C C9          		 RET	;
118)   1A4D 01 08 00    		 LD BC, 8        ;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD	;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD
119)   1A50 11 57 FE    		 LD DE, GR_LASTX3	;
120)   1A53 21 5B FE    		 LD HL, GR_LASTX2	;
121)   1A56 ED B0       		 LDIR	;
122)   1A58 2A 63 FE    		 LD HL, (GR_PARAM1)	;
123)   1A5B 22 5F FE    		 LD (GR_LASTX), HL       ;SAVE TO LAST	;SAVE TO LAST
124)   1A5E 2A 65 FE    		 LD HL, (GR_PARAM2)	;
125)   1A61 22 61 FE    		 LD (GR_LASTY), HL       ;SAVE TO LAST	;SAVE TO LAST
126)   1A64 C9          		 RET	;
130)   1A65 CD 21 1A    		 CALL GETBASICPARAMS	;
131)   1A68 FE 02       		 CP 2	;
132)   1A6A C2 5A 1D    		 JP NZ, GRPHERR	;
133)   1A6D CD 87 1B    		BAS_DODRAW: CALL GRPH_SAVECOLORS	;
134)   1A70 FD E5       		 PUSH IY	;
137)   1A72 2A 5F FE    		 LD HL, (GR_LASTX)	;
138)   1A75 E5          		 PUSH HL	;
139)   1A76 2A 61 FE    		 LD HL, (GR_LASTY)	;
140)   1A79 E5          		 PUSH HL	;
141)   1A7A CD 4D 1A    		 CALL GRPH_SAVELASTPOS	;
142)   1A7D 2A 63 FE    		 LD HL, (GR_PARAM1)	;
143)   1A80 E5          		 PUSH HL	;
144)   1A81 2A 65 FE    		 LD HL, (GR_PARAM2)	;
145)   1A84 E5          		 PUSH HL	;
146)   1A85 CD B2 11    		 CALL LCD_DRAWLINE	;
148)   1A88 FD E1       		 POP IY	;
149)   1A8A CD 9E 1B    		 CALL GRPH_RESTORECOLORS	;
150)   1A8D C9          		 RET         ;RETURN TO BASIC	;RETURN TO BASIC
154)   1A8E CD 21 1A    		@BAS_MOVE: CALL GETBASICPARAMS	;
155)   1A91 FE 02       		 CP 2	;
156)   1A93 C2 5A 1D    		 JP NZ, GRPHERR	;
158)   1A96 CD 4D 1A    		 CALL GRPH_SAVELASTPOS	;
159)   1A99 C9          		 RET	;
165)   1A9A CD 21 1A    		@BAS_POINT: CALL GETBASICPARAMS	;
166)   1A9D FE 02       		 CP 2	;
167)   1A9F C2 5A 1D    		 JP NZ, GRPHERR	;
170)   1AA2 2A 63 FE    		 LD HL, (GR_PARAM1)	;
171)   1AA5 E5          		 PUSH HL	;
172)   1AA6 2A 65 FE    		 LD HL, (GR_PARAM2)	;
173)   1AA9 E5          		 PUSH HL	;
174)   1AAA CD BC 10    		 CALL LCD_READPIXEL	;
178)   1AAD FD 7E 00    		 LD A, (IY)	;
179)   1AB0 FE 29       		 CP ')'	;
180)   1AB2 C2 5A 1D    		 JP NZ, GRPHERR	;
181)   1AB5 FD 23       		 INC IY	;
184)   1AB7 01 00 00    		 LD BC, 0	;
185)   1ABA F3          		 DI	;
186)   1ABB E5          		 PUSH HL	;
187)   1ABC D9          		 EXX	;
188)   1ABD E1          		 POP HL	;
189)   1ABE D9          		 EXX	;
190)   1ABF 21 00 00    		 LD HL, 0	;
191)   1AC2 FB          		 EI	;
192)   1AC3 C9          		 RET	;
198)   1AC4 FE 00       		GRPH_GETGROUP: CP 0	;
200)   1AC6 21 CA 1C    		 LD HL, PLOT00	;
201)   1AC9 C8          		 RET Z	;
202)   1ACA FE 0A       		 CP 80.SHR.3	;
203)   1ACC 21 DA 1C    		 LD HL, PLOT80	;
204)   1ACF C8          		 RET Z	;
205)   1AD0 FE 0C       		 CP 96.SHR.3	;
206)   1AD2 21 EA 1C    		 LD HL, PLOT96	;
207)   1AD5 C8          		 RET Z	;
208)   1AD6 FE 10       		 CP 128.SHR.3	;
209)   1AD8 21 FA 1C    		 LD HL, PLOT128	;
210)   1ADB C8          		 RET Z	;
211)   1ADC FE 12       		 CP 144.SHR.3	;
212)   1ADE 21 0A 1D    		 LD HL, PLOT144	;
213)   1AE1 C8          		 RET Z	;
214)   1AE2 FE 13       		 CP 152.SHR.3	;
215)   1AE4 21 1A 1D    		 LD HL, PLOT152	;
216)   1AE7 C8          		 RET Z	;
217)   1AE8 FE 14       		 CP 160.SHR.3	;
218)   1AEA 21 2A 1D    		 LD HL, PLOT160	;
219)   1AED C8          		 RET Z	;
220)   1AEE FE 18       		 CP 192.SHR.3	;
221)   1AF0 21 3A 1D    		 LD HL, PLOT192	;
222)   1AF3 C8          		 RET Z	;
223)   1AF4 FE 19       		 CP 200.SHR.3	;
224)   1AF6 21 4A 1D    		 LD HL, PLOT200	;
225)   1AF9 C8          		 RET Z	;
226)   1AFA 21 00 00    		 LD HL, 0	;
227)   1AFD C9          		 RET	;
230)   1AFE CD 21 1A    		@BAS_PLOT: CALL GETBASICPARAMS	;
231)   1B01 FE 03       		 CP 3	;
232)   1B03 C2 5A 1D    		 JP NZ, GRPHERR	;
233)   1B06 3A 63 FE    		 LD A, (GR_PARAM1)	;
235)   1B09 01 04 00    		 LD BC, 4	;
236)   1B0C 21 65 FE    		 LD HL, GR_PARAM2	;
237)   1B0F 11 63 FE    		 LD DE, GR_PARAM1	;
238)   1B12 ED B0       		 LDIR	;
239)   1B14 47          		 LD B, A        ;COMMAND GROUP 5 BITS	;COMMAND GROUP 5 BITS
240)   1B15 CB 38       		 SRL B	;
241)   1B17 CB 38       		 SRL B	;
242)   1B19 CB 38       		 SRL B	;
243)   1B1B E6 07       		 AND 7	;
244)   1B1D 4F          		 LD C, A        ;SPECIFIC COMMAND IN GROUP	;SPECIFIC COMMAND IN GROUP
245)   1B1E 78          		 LD A, B	;
246)   1B1F CD C4 1A    		 CALL GRPH_GETGROUP	;
247)   1B22 7C          		 LD A, H	;
248)   1B23 FE 00       		 CP 0	;
249)   1B25 C8          		 RET Z        ;RET IF HL=0 GROUP NOT IMPLEMENTED	;RET IF HL=0 GROUP NOT IMPLEMENTED
250)   1B26 06 00       		 LD B, 0	;
251)   1B28 CB 21       		 SLA C         ;C=C*2 2BYTE ADDRESSES	;C=C*2 2BYTE ADDRESSES
252)   1B2A 09          		 ADD HL, BC        ;C IS 0-7 SPECIFIC COMMD	;C IS 0-7 SPECIFIC COMMD
253)   1B2B 5E          		 LD E, (HL)	;
254)   1B2C 23          		 INC HL	;
255)   1B2D 56          		 LD D, (HL)	;
256)   1B2E EB          		 EX DE, HL	;
257)   1B2F E9          		 JP (HL)	;
259)   1B30 AF          		GRPH_NOTIMPL: XOR A	;
260)   1B31 CD F0 46    		 CALL EXTERR	;
261)   1B34 4E 4F 54 20 		 DEFM 'NOT IMPLEMENTED'	;
261)   1B38 49 4D 50 4C 		 DEFM 'NOT IMPLEMENTED'	;
261)   1B3C 45 4D 45 4E 		 DEFM 'NOT IMPLEMENTED'	;
261)   1B40 54 45 44    		 DEFM 'NOT IMPLEMENTED'	;
262)   1B43 00          		 DEFB    0	;
266)   1B44 2A 63 FE    		GRPH_CALCREL: LD HL, (GR_PARAM1)	;
267)   1B47 ED 5B 5F FE 		 LD DE, (GR_LASTX)	;
268)   1B4B 19          		 ADD HL, DE	;
269)   1B4C 22 63 FE    		 LD (GR_PARAM1), HL	;
270)   1B4F 2A 65 FE    		 LD HL, (GR_PARAM2)	;
271)   1B52 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
272)   1B56 19          		 ADD HL, DE	;
273)   1B57 22 65 FE    		 LD (GR_PARAM2), HL	;
274)   1B5A C9          		 RET	;
277)   1B5B CD 44 1B    		 CALL GRPH_CALCREL	;
278)   1B5E CD 4D 1A    		 CALL GRPH_SAVELASTPOS	;
279)   1B61 C9          		 RET	;
282)   1B62 CD 44 1B    		 CALL GRPH_CALCREL	;
283)   1B65 CD 6D 1A    		 CALL BAS_DODRAW	;
284)   1B68 C9          		 RET	;
287)   1B69 2A 01 FE    		 LD HL, (FCOLOR)	;
288)   1B6C E5          		 PUSH HL	;
289)   1B6D 2A 03 FE    		 LD HL, (BCOLOR)	;
290)   1B70 22 01 FE    		 LD (FCOLOR), HL	;
291)   1B73 E1          		 POP HL	;
292)   1B74 22 03 FE    		 LD (BCOLOR), HL	;
293)   1B77 C9          		 RET	;
296)   1B78 2A 05 FE    		 LD HL, (FGRCOL)	;
297)   1B7B E5          		 PUSH HL	;
298)   1B7C 2A 07 FE    		 LD HL, (BGRCOL)	;
299)   1B7F 22 05 FE    		 LD (FGRCOL), HL	;
300)   1B82 E1          		 POP HL	;
301)   1B83 22 07 FE    		 LD (BGRCOL), HL	;
302)   1B86 C9          		 RET	;
306)   1B87 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
307)   1B8A 21 01 FE    		 LD HL, FCOLOR	;
308)   1B8D 11 09 FE    		 LD DE, FCOLTM	;
309)   1B90 ED B0       		 LDIR	;
310)   1B92 01 04 00    		 LD BC, 4       ;2 FGRCOL + 2 BGRCOL	;2 FGRCOL + 2 BGRCOL
311)   1B95 21 05 FE    		 LD HL, FGRCOL	;
312)   1B98 11 01 FE    		 LD DE, FCOLOR	;
313)   1B9B ED B0       		 LDIR	;
314)   1B9D C9          		 RET	;
318)   1B9E 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
319)   1BA1 21 09 FE    		 LD HL, FCOLTM	;
320)   1BA4 11 01 FE    		 LD DE, FCOLOR	;
321)   1BA7 ED B0       		 LDIR	;
322)   1BA9 C9          		 RET	;
326)   1BAA CD 78 1B    		 CALL GRPH_SWAPGRCOLS	;
327)   1BAD CD 44 1B    		 CALL GRPH_CALCREL	;
328)   1BB0 CD 6D 1A    		 CALL BAS_DODRAW	;
329)   1BB3 CD 78 1B    		 CALL GRPH_SWAPGRCOLS	;
330)   1BB6 C9          		 RET	;
333)   1BB7 CD 78 1B    		 CALL GRPH_SWAPGRCOLS	;
334)   1BBA CD 6D 1A    		 CALL BAS_DODRAW	;
335)   1BBD CD 78 1B    		 CALL GRPH_SWAPGRCOLS	;
336)   1BC0 C9          		 RET	;
339)   1BC1 CD 6D 1A    		 CALL BAS_DODRAW       ;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT	;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT
340)   1BC4 2A 57 FE    		 LD HL, (GR_LASTX3)	;
341)   1BC7 22 63 FE    		 LD (GR_PARAM1), HL	;
342)   1BCA 2A 59 FE    		 LD HL, (GR_LASTY3)	;
343)   1BCD 22 65 FE    		 LD (GR_PARAM2), HL	;
344)   1BD0 CD 6D 1A    		 CALL BAS_DODRAW       ;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT	;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT
345)   1BD3 2A 57 FE    		 LD HL, (GR_LASTX3)	;
346)   1BD6 22 63 FE    		 LD (GR_PARAM1), HL	;
347)   1BD9 2A 59 FE    		 LD HL, (GR_LASTY3)	;
348)   1BDC 22 65 FE    		 LD (GR_PARAM2), HL	;
349)   1BDF CD 6D 1A    		 CALL BAS_DODRAW       ;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT	;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT
350)   1BE2 01 04 00    		 LD BC, 4	;
351)   1BE5 21 57 FE    		 LD HL, GR_LASTX3	;
352)   1BE8 11 5F FE    		 LD DE, GR_LASTX	;
353)   1BEB ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
354)   1BED C9          		 RET	;
356)   1BEE CD 78 1B    		GRPH_TRIANGLEBC: CALL GRPH_SWAPGRCOLS	;
357)   1BF1 CD C1 1B    		 CALL GRPH_TRIANGLE	;
358)   1BF4 CD 78 1B    		 CALL GRPH_SWAPGRCOLS	;
359)   1BF7 C9          		 RET	;
362)   1BF8 21 63 FE    		GRPH_RECT: LD HL, GR_PARAM1	;
363)   1BFB 11 67 FE    		 LD DE, GR_PARAM3	;
364)   1BFE 01 04 00    		 LD BC, 4	;
365)   1C01 ED B0       		 LDIR         ;COPY PARAM1,2 TO 3,4	;COPY PARAM1,2 TO 3,4
366)   1C03 2A 61 FE    		 LD HL, (GR_LASTY)	;
367)   1C06 E5          		 PUSH HL        ;PT1_Y	;PT1_Y
368)   1C07 2A 5F FE    		 LD HL, (GR_LASTX)	;
369)   1C0A E5          		 PUSH HL        ;PT1_X	;PT1_X
370)   1C0B 2A 61 FE    		 LD HL, (GR_LASTY)	;
371)   1C0E 22 65 FE    		 LD (GR_PARAM2), HL	;
372)   1C11 CD 6D 1A    		 CALL BAS_DODRAW       ;PT1_X,PT1_Y TO PT2_X,PT1_Y	;PT1_X,PT1_Y TO PT2_X,PT1_Y
373)   1C14 2A 69 FE    		 LD HL, (GR_PARAM4)	;
374)   1C17 22 65 FE    		 LD (GR_PARAM2), HL	;
375)   1C1A CD 6D 1A    		 CALL BAS_DODRAW       ;PT2_X,PT1_Y TO PT2_X,PT2_Y	;PT2_X,PT1_Y TO PT2_X,PT2_Y
376)   1C1D E1          		 POP HL         ;PT1_X	;PT1_X
377)   1C1E 22 63 FE    		 LD (GR_PARAM1), HL	;
378)   1C21 CD 6D 1A    		 CALL BAS_DODRAW       ;PT2_X,PT2_Y TO PT1_X,PT2_Y	;PT2_X,PT2_Y TO PT1_X,PT2_Y
379)   1C24 E1          		 POP HL         ;PT1_Y	;PT1_Y
380)   1C25 22 65 FE    		 LD (GR_PARAM2), HL	;
381)   1C28 CD 6D 1A    		 CALL BAS_DODRAW       ;PT1_X,PT2_Y TO PT1_X,PT1_Y	;PT1_X,PT2_Y TO PT1_X,PT1_Y
382)   1C2B 01 04 00    		 LD BC, 4	;
383)   1C2E 21 67 FE    		 LD HL, GR_PARAM3	;
384)   1C31 11 5F FE    		 LD DE, GR_LASTX	;
385)   1C34 ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
386)   1C36 C9          		 RET	;
388)   1C37 CD 78 1B    		GRPH_RECTBC: CALL GRPH_SWAPGRCOLS	;
389)   1C3A CD F8 1B    		 CALL GRPH_RECT	;
390)   1C3D CD 78 1B    		 CALL GRPH_SWAPGRCOLS	;
391)   1C40 C9          		 RET	;
394)   1C41 CD 87 1B    		GRPH_CIRCREL: CALL GRPH_SAVECOLORS	;
395)   1C44 2A 63 FE    		 LD HL, (GR_PARAM1)	;
396)   1C47 7C          		 LD A, H	;
397)   1C48 B5          		 OR L	;
398)   1C49 20 06       		 JR NZ, CIRE_DOIT	;
399)   1C4B 2A 65 FE    		 LD HL, (GR_PARAM2)	;
400)   1C4E 7C          		 LD A, H	;
401)   1C4F B5          		 OR L	;
402)   1C50 C8          		 RET Z         ; RETURN IF BOTH PARAMS ARE ZERO	; RETURN IF BOTH PARAMS ARE ZERO
403)   1C51 ED 5B 5F FE 		CIRE_DOIT: LD DE, (GR_LASTX)	;
404)   1C55 D5          		 PUSH DE	;
405)   1C56 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
406)   1C5A D5          		 PUSH DE	;
407)   1C5B E5          		 PUSH HL	;
408)   1C5C CD A9 13    		 CALL LCD_CIRCLE	;
409)   1C5F CD 9E 1B    		 CALL GRPH_RESTORECOLORS	;
410)   1C62 C9          		 RET	;
412)   1C63 CD 78 1B    		GRPH_CIRCRELBC: CALL GRPH_SWAPGRCOLS	;
413)   1C66 CD 41 1C    		 CALL GRPH_CIRCREL	;
414)   1C69 CD 78 1B    		 CALL GRPH_SWAPGRCOLS	;
415)   1C6C C9          		 RET	;
421)   1C6D C9          		GRPH_CIRCLE: RET	;
422)   1C6E 2A 5F FE    		 LD HL, (GR_LASTX)	;
423)   1C71 ED 5B 63 FE 		 LD DE, (GR_PARAM1)	;
424)   1C75 AF          		 XOR A	;
425)   1C76 ED 42       		 SBC HL, BC	;
426)   1C78 22 67 FE    		 LD (GR_PARAM3), HL       ;X2-X1	;X2-X1
427)   1C7B 2A 61 FE    		 LD HL, (GR_LASTY)	;
428)   1C7E ED 5B 65 FE 		 LD DE, (GR_PARAM2)	;
429)   1C82 AF          		 XOR A	;
430)   1C83 ED 42       		 SBC HL, BC	;
431)   1C85 22 69 FE    		 LD (GR_PARAM4), HL       ;Y2-Y1	;Y2-Y1
433)   1C88 ED 4B 67 FE 		 LD BC, (GR_PARAM3)	;
434)   1C8C C5          		 PUSH BC	;
435)   1C8D D1          		 POP DE	;
436)   1C8E CD 40 27    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
437)   1C91 D9          		 EXX	;
438)   1C92 C5          		 PUSH BC	;
439)   1C93 D1          		 POP DE	;
440)   1C94 D9          		 EXX	;
441)   1C95 E5          		 PUSH HL        ;DE LOW	;DE LOW
442)   1C96 ED 4B 69 FE 		 LD BC, (GR_PARAM4)	;
443)   1C9A C5          		 PUSH BC	;
444)   1C9B D1          		 POP DE	;
445)   1C9C CD 40 27    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
446)   1C9F D9          		 EXX	;
447)   1CA0 C5          		 PUSH BC	;
448)   1CA1 E1          		 POP HL	;
449)   1CA2 D9          		 EXX	;
450)   1CA3 D1          		 POP DE	;
452)   1CA4 CD 5B 27    		 CALL ADD32	;
456)   1CA7 C9          		 RET	;
458)   1CA8 CD 78 1B    		GRPH_CIRCLEBC: CALL GRPH_SWAPGRCOLS	;
459)   1CAB CD 6D 1C    		 CALL GRPH_CIRCLE	;
460)   1CAE CD 78 1B    		 CALL GRPH_SWAPGRCOLS	;
461)   1CB1 C9          		 RET	;
465)   1CB2 CD 78 1B    		GRPH_FILL: CALL GRPH_SWAPGRCOLS	;
466)   1CB5 CD 87 1B    		 CALL GRPH_SAVECOLORS	;
467)   1CB8 2A 63 FE    		 LD HL, (GR_PARAM1)	;
468)   1CBB E5          		 PUSH HL	;
469)   1CBC 2A 65 FE    		 LD HL, (GR_PARAM2)	;
470)   1CBF E5          		 PUSH HL	;
471)   1CC0 CD 2D 15    		 CALL LCD_FILL	;
472)   1CC3 CD 9E 1B    		 CALL GRPH_RESTORECOLORS	;
473)   1CC6 CD 78 1B    		 CALL GRPH_SWAPGRCOLS	;
474)   1CC9 C9          		 RET	;
476)   1CCA 5B 1B       		PLOT00: DW GRPH_MOVEREL	;
477)   1CCC 62 1B       		 DW GRPH_LINEREL	;
478)   1CCE 30 1B       		 DW GRPH_NOTIMPL	;
479)   1CD0 AA 1B       		 DW GRPH_LINERELBC	;
480)   1CD2 4D 1A       		 DW GRPH_SAVELASTPOS	;
481)   1CD4 6D 1A       		 DW BAS_DODRAW	;
482)   1CD6 30 1B       		 DW GRPH_NOTIMPL	;
483)   1CD8 B7 1B       		 DW GRPH_DRAWBC	;
485)   1CDA 30 1B       		PLOT80: DW GRPH_NOTIMPL	;
486)   1CDC C1 1B       		 DW GRPH_TRIANGLE	;
487)   1CDE 30 1B       		 DW GRPH_NOTIMPL	;
488)   1CE0 EE 1B       		 DW GRPH_TRIANGLEBC	;
489)   1CE2 30 1B       		 DW GRPH_NOTIMPL	;
490)   1CE4 C1 1B       		 DW GRPH_TRIANGLE	;
491)   1CE6 30 1B       		 DW GRPH_NOTIMPL	;
492)   1CE8 EE 1B       		 DW GRPH_TRIANGLEBC	;
494)   1CEA 30 1B       		PLOT96: DW GRPH_NOTIMPL	;
495)   1CEC F8 1B       		 DW GRPH_RECT	;
496)   1CEE 30 1B       		 DW GRPH_NOTIMPL	;
497)   1CF0 37 1C       		 DW GRPH_RECTBC	;
498)   1CF2 30 1B       		 DW GRPH_NOTIMPL	;
499)   1CF4 F8 1B       		 DW GRPH_RECT	;
500)   1CF6 30 1B       		 DW GRPH_NOTIMPL	;
501)   1CF8 37 1C       		 DW GRPH_RECTBC	;
503)   1CFA 30 1B       		PLOT128: DW GRPH_NOTIMPL	;
504)   1CFC B2 1C       		 DW GRPH_FILL	;
505)   1CFE 30 1B       		 DW GRPH_NOTIMPL	;
506)   1D00 30 1B       		 DW GRPH_NOTIMPL	;
507)   1D02 30 1B       		 DW GRPH_NOTIMPL	;
508)   1D04 30 1B       		 DW GRPH_NOTIMPL	;
509)   1D06 30 1B       		 DW GRPH_NOTIMPL	;
510)   1D08 30 1B       		 DW GRPH_NOTIMPL	;
512)   1D0A 41 1C       		PLOT144: DW GRPH_CIRCREL	;
513)   1D0C 41 1C       		 DW GRPH_CIRCREL	;
514)   1D0E 30 1B       		 DW GRPH_NOTIMPL	;
515)   1D10 63 1C       		 DW GRPH_CIRCRELBC	;
516)   1D12 6D 1C       		 DW GRPH_CIRCLE	;
517)   1D14 6D 1C       		 DW GRPH_CIRCLE	;
518)   1D16 30 1B       		 DW GRPH_NOTIMPL	;
519)   1D18 A8 1C       		 DW GRPH_CIRCLEBC	;
521)   1D1A 30 1B       		PLOT152: DW GRPH_NOTIMPL	;
522)   1D1C 30 1B       		 DW GRPH_NOTIMPL	;
523)   1D1E 30 1B       		 DW GRPH_NOTIMPL	;
524)   1D20 30 1B       		 DW GRPH_NOTIMPL	;
525)   1D22 30 1B       		 DW GRPH_NOTIMPL	;
526)   1D24 30 1B       		 DW GRPH_NOTIMPL	;
527)   1D26 30 1B       		 DW GRPH_NOTIMPL	;
528)   1D28 30 1B       		 DW GRPH_NOTIMPL	;
530)   1D2A 30 1B       		PLOT160: DW GRPH_NOTIMPL	;
531)   1D2C 30 1B       		 DW GRPH_NOTIMPL	;
532)   1D2E 30 1B       		 DW GRPH_NOTIMPL	;
533)   1D30 30 1B       		 DW GRPH_NOTIMPL	;
534)   1D32 30 1B       		 DW GRPH_NOTIMPL	;
535)   1D34 30 1B       		 DW GRPH_NOTIMPL	;
536)   1D36 30 1B       		 DW GRPH_NOTIMPL	;
537)   1D38 30 1B       		 DW GRPH_NOTIMPL	;
539)   1D3A 30 1B       		PLOT192: DW GRPH_NOTIMPL	;
540)   1D3C 30 1B       		 DW GRPH_NOTIMPL	;
541)   1D3E 30 1B       		 DW GRPH_NOTIMPL	;
542)   1D40 30 1B       		 DW GRPH_NOTIMPL	;
543)   1D42 30 1B       		 DW GRPH_NOTIMPL	;
544)   1D44 30 1B       		 DW GRPH_NOTIMPL	;
545)   1D46 30 1B       		 DW GRPH_NOTIMPL	;
546)   1D48 30 1B       		 DW GRPH_NOTIMPL	;
548)   1D4A 30 1B       		PLOT200: DW GRPH_NOTIMPL	;
549)   1D4C 30 1B       		 DW GRPH_NOTIMPL	;
550)   1D4E 30 1B       		 DW GRPH_NOTIMPL	;
551)   1D50 30 1B       		 DW GRPH_NOTIMPL	;
552)   1D52 30 1B       		 DW GRPH_NOTIMPL	;
553)   1D54 30 1B       		 DW GRPH_NOTIMPL	;
554)   1D56 30 1B       		 DW GRPH_NOTIMPL	;
555)   1D58 30 1B       		 DW GRPH_NOTIMPL	;
558)   1D5A AF          		 XOR A	;
559)   1D5B CD F0 46    		 CALL EXTERR	;
560)   1D5E 70 61 72 61 		 DEFM 'param error'	;
560)   1D62 6D 20 65 72 		 DEFM 'param error'	;
560)   1D66 72 6F 72    		 DEFM 'param error'	;
561)   1D69 00          		 DEFB    0	;
  6)   1D6A 11 B9 FE    		@MYOS_OSSAVE: LD DE, STRGBUFF	;
  7)   1D6D 7E          		OSNXT: LD A, (HL)        ;hl = ACCS =FILENAME ENDS WITH 0X0D	;hl = ACCS =FILENAME ENDS WITH 0X0D
  8)   1D6E FE 0D       		 CP 13         ;	;
  9)   1D70 20 01       		 JR NZ, OSCONT	;
 10)   1D72 AF          		 XOR A	;
 11)   1D73 12          		OSCONT: LD (DE), A	;
 12)   1D74 23          		 INC HL	;
 13)   1D75 13          		 INC DE	;
 14)   1D76 FE 00       		 CP 0	;
 15)   1D78 20 F3       		 JR NZ, OSNXT	;
 16)   1D7A 3E 04       		 LD A, 4        ;OPEN FILE FOR WRITE AND CREATE IT	;OPEN FILE FOR WRITE AND CREATE IT
 17)   1D7C C5          		 PUSH BC	;
 18)   1D7D CD 1A 0A    		 CALL STRG_OPNFILE       ;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A	;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A
 19)   1D80 C1          		 POP BC         ;bc = length of program	;bc = length of program
 20)   1D81 38 12       		 JR C, SVERR	;
 21)   1D83 ED 5B DC FD 		 LD DE, (PAGE)	;
 22)   1D87 CD 4A 0A    		 CALL STRG_BLKWRITE      ;BLOCK WRITE	;BLOCK WRITE
 23)   1D8A FE C8       		 CP FCMDOK	;
 24)   1D8C 20 07       		 JR NZ, SVERR	;
 25)   1D8E 3A E5 FE    		 LD A, (FID)	;
 26)   1D91 CD 38 0A    		 CALL STRG_CLSFILE	;
 27)   1D94 C9          		 RET         ;ON RET A=RESULT	;ON RET A=RESULT
 28)   1D95 FE CA       		SVERR: CP FNOTFND	;
 29)   1D97 CA F0 1D    		 JP Z, FLNOTF	;
 30)   1D9A CD F0 46    		 CALL EXTERR	;
 31)   1D9D 45 72 72 6F 		 DEFM  "Error Saving"	;
 31)   1DA1 72 20 53 61 		 DEFM  "Error Saving"	;
 31)   1DA5 76 69 6E 67 		 DEFM  "Error Saving"	;
 32)   1DA9 00          		 DEFB    0	;
 36)   1DAA 11 B9 FE    		@MYOS_OSLOAD: LD DE, STRGBUFF	;
 37)   1DAD 7E          		OLNXT: LD A, (HL)	;
 38)   1DAE FE 0D       		 CP 13         ;	;
 39)   1DB0 20 01       		 JR NZ, OLCONT	;
 40)   1DB2 AF          		 XOR A	;
 41)   1DB3 12          		OLCONT: LD (DE), a	;
 42)   1DB4 23          		 INC HL	;
 43)   1DB5 13          		 INC DE	;
 44)   1DB6 FE 00       		 CP 0	;
 45)   1DB8 20 F3       		 JR NZ, OLNXT	;
 46)   1DBA CD 1A 0A    		 CALL STRG_OPNFILE      ;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A	;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A
 47)   1DBD 38 1C       		 JR C, LDERR	;
 48)   1DBF 2A DC FD    		 LD HL, (PAGE)	;
 49)   1DC2 EB          		 EX DE, HL	;
 50)   1DC3 01 00 00    		 LD BC, 0        ;ZERO MEANS LOAD ALL	;ZERO MEANS LOAD ALL
 51)   1DC6 CD 6D 0A    		 CALL STRG_BLKREAD      ;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED	;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED
 52)   1DC9 FE C8       		 CP FCMDOK	;
 53)   1DCB 20 0E       		 JR NZ, LDERR	;
 54)   1DCD 3A E5 FE    		 LD A, (FID)	;
 55)   1DD0 CD 38 0A    		 CALL STRG_CLSFILE	;
 56)   1DD3 21 DE FD    		 LD HL, TOP       ;SAVE TOP OF BASIC	;SAVE TOP OF BASIC
 57)   1DD6 73          		 LD (HL), E	;
 58)   1DD7 23          		 INC HL	;
 59)   1DD8 72          		 LD (HL), D	;
 60)   1DD9 37          		 SCF         ;SET C = NO ERROR	;SET C = NO ERROR
 61)   1DDA C9          		 RET	;
 62)   1DDB FE CA       		LDERR: CP FNOTFND	;
 63)   1DDD 28 11       		 JR Z, FLNOTF	;
 64)   1DDF CD F0 46    		 CALL EXTERR	;
 65)   1DE2 45 72 72 6F 		 DEFM  "Error Loading"	;
 65)   1DE6 72 20 4C 6F 		 DEFM  "Error Loading"	;
 65)   1DEA 61 64 69 6E 		 DEFM  "Error Loading"	;
 65)   1DEE 67          		 DEFM  "Error Loading"	;
 66)   1DEF 00          		 DEFB    0	;
 67)   1DF0 CD F0 46    		FLNOTF: CALL EXTERR	;
 68)   1DF3 57 72 6F 6E 		 DEFM  "Wrong Filename"	;
 68)   1DF7 67 20 46 69 		 DEFM  "Wrong Filename"	;
 68)   1DFB 6C 65 6E 61 		 DEFM  "Wrong Filename"	;
 68)   1DFF 6D 65       		 DEFM  "Wrong Filename"	;
 69)   1E01 00          		 DEFB    0	;
 41)   1E02 C3 FC 16    		@MYOS_CLRSCN: JP LCD_CLRSCR       ; CLRSCN: clears the screen.	; CLRSCN: clears the screen.
 44)   1E05 7D          		 LD A, L	;
 45)   1E06 32 A7 FE    		 LD (TIMECTR), A	;
 46)   1E09 7C          		 LD A, H	;
 47)   1E0A 32 A8 FE    		 LD (TIMECTR + 1), A	;
 48)   1E0D 7B          		 LD A, E	;
 49)   1E0E 32 A9 FE    		 LD (TIMECTR + 2), A	;
 50)   1E11 7A          		 LD A, D	;
 51)   1E12 32 AA FE    		 LD (TIMECTR + 3), A	;
 52)   1E15 C9          		 RET	;
 56)   1E16 3A A7 FE    		 LD A, (TIMECTR)	;
 57)   1E19 6F          		 LD L, A	;
 58)   1E1A 3A A8 FE    		 LD A, (TIMECTR + 1)	;
 59)   1E1D 67          		 LD H, A	;
 60)   1E1E 3A A9 FE    		 LD A, (TIMECTR + 2)	;
 61)   1E21 5F          		 LD E, A	;
 62)   1E22 3A AA FE    		 LD A, (TIMECTR + 3)	;
 63)   1E25 57          		 LD D, A	;
 64)   1E26 C9          		 RET	;
 66)   1E27 63          		 LD H, E	;
 67)   1E28 E5          		 PUSH HL	;
 68)   1E29 CD B5 16    		 CALL LCD_RMVCURS	;
 69)   1E2C E1          		 POP HL	;
 70)   1E2D 7C          		 LD A, H	;
 71)   1E2E 32 0D FE    		 LD (CURSORX), A	;
 72)   1E31 7D          		 LD A, L	;
 73)   1E32 32 0E FE    		 LD (CURSORY), A	;
 74)   1E35 CD BA 16    		 CALL LCD_PRNCURS	;
 75)   1E38 C9          		 RET	;
 77)   1E39 16 00       		 LD D, 0	;
 78)   1E3B 3A 0D FE    		 LD A, (CURSORX)	;
 79)   1E3E 5F          		 LD E, A	;
 80)   1E3F 26 00       		 LD H, 0	;
 82)   1E41 CD 0B 16    		 CALL LCD_CALCLINE      ;GETS CURSORY WITH SCROLL	;GETS CURSORY WITH SCROLL
 83)   1E44 6F          		 LD L, A	;
 84)   1E45 C9          		 RET	;
 85)   1E46 06 50       		KEYGET: LD B, 80       ;SCREEN WIDTH IN CHARS	;SCREEN WIDTH IN CHARS
 87)   1E48 E5          		 PUSH HL	;
 88)   1E49 ED 62       		 SBC HL, HL        ;HL=0	;HL=0
 89)   1E4B CD 33 20    		 CALL MYOS_OSKEY	;
 90)   1E4E E1          		 POP HL	;
 91)   1E4F D8          		 RET C	;
 92)   1E50 18 F6       		 JR MYOS_OSRDCH	;
 93)   1E52 C9          		 RET	;
 95)   1E53 F5          		 PUSH AF	;
 96)   1E54 D5          		 PUSH DE	;
 97)   1E55 E5          		 PUSH HL	;
 98)   1E56 DD E5       		 PUSH IX	;
 99)   1E58 5F          		 LD E, A	;
100)   1E59 CD 52 20    		 CALL ESCTEST	;
103)   1E5C 7B          		 LD A, E	;
104)   1E5D FE 20       		 CP 32	;
105)   1E5F 38 0D       		 JR C, CTRCODE	;
106)   1E61 FE 7F       		 CP 127         ;BACKSPACE	;BACKSPACE
107)   1E63 C2 E7 1F    		 JP NZ, PRINTIT	;
108)   1E66 3E 08       		 LD A, 8        ;DO A BACKSPACE	;DO A BACKSPACE
109)   1E68 CD 37 15    		 CALL LCD_PRINTCHAR	;
110)   1E6B C3 EA 1F    		 JP OSWREXIT	;
111)   1E6E FE 04       		CTRCODE: CP 4       ;WRITE TEXT AT TEXT POS	;WRITE TEXT AT TEXT POS
112)   1E70 20 06       		 JR NZ, CC1	;
113)   1E72 32 16 FE    		 LD (VDUMODE), A	;
114)   1E75 C3 EA 1F    		 JP OSWREXIT	;
115)   1E78 FE 05       		CC1: CP 5        ;WRITE TEXT AT GRAPH POS	;WRITE TEXT AT GRAPH POS
116)   1E7A 20 06       		 JR NZ, CC2	;
117)   1E7C 32 16 FE    		 LD (VDUMODE), A	;
118)   1E7F C3 EA 1F    		 JP OSWREXIT	;
119)   1E82 FE 06       		CC2: CP 6        ;ENABLE OUTPUT TO SCREEN	;ENABLE OUTPUT TO SCREEN
120)   1E84 20 03       		 JR NZ, CC3	;
121)   1E86 C3 EA 1F    		 JP OSWREXIT	;
122)   1E89 FE 07       		CC3: CP 7        ;BEEP	;BEEP
123)   1E8B 20 03       		 JR NZ, CC4	;
124)   1E8D C3 EA 1F    		 JP OSWREXIT	;
125)   1E90 FE 08       		CC4: CP 8        ;MOVE TEXT CURSOR BACK A CHAR	;MOVE TEXT CURSOR BACK A CHAR
126)   1E92 20 03       		 JR NZ, CC5	;
127)   1E94 C3 E7 1F    		 JP PRINTIT	;
134)   1E97 FE 09       		CC5: CP 9        ;MOVE TEXT CURSOR FORWARD A CHAR	;MOVE TEXT CURSOR FORWARD A CHAR
135)   1E99 20 0F       		 JR NZ, CC6	;
136)   1E9B 3A 0D FE    		 LD A, (CURSORX)	;
137)   1E9E 3C          		 INC A	;
138)   1E9F FE 50       		 CP 80	;
139)   1EA1 D2 EA 1F    		 JP NC, OSWREXIT	;
140)   1EA4 32 0D FE    		 LD (CURSORX), A	;
141)   1EA7 C3 EA 1F    		 JP OSWREXIT	;
142)   1EAA FE 0A       		CC6: CP 10        ;MOVE TEXT DOWN LF	;MOVE TEXT DOWN LF
143)   1EAC CA E7 1F    		 JP Z, PRINTIT	;
144)   1EAF FE 0B       		CC7: CP 11        ;MOVE TEXT UP	;MOVE TEXT UP
145)   1EB1 20 0F       		 JR NZ, CC8	;
146)   1EB3 3A 0E FE    		 LD A, (CURSORY)	;
147)   1EB6 3D          		 DEC A	;
148)   1EB7 FE FF       		 CP 0XFF	;
149)   1EB9 CA EA 1F    		 JP Z, OSWREXIT	;
150)   1EBC 32 0E FE    		 LD (CURSORY), A	;
151)   1EBF C3 EA 1F    		 JP OSWREXIT	;
152)   1EC2 FE 0C       		CC8: CP 12        ; CLS	; CLS
153)   1EC4 20 06       		 JR NZ, CC9	;
154)   1EC6 CD FC 16    		 CALL LCD_CLRSCR	;
155)   1EC9 C3 EA 1F    		 JP OSWREXIT	;
156)   1ECC FE 0D       		CC9: CP 13        ;GOTO START OF LINE CR	;GOTO START OF LINE CR
157)   1ECE CA E7 1F    		 JP Z, PRINTIT	;
158)   1ED1 FE 0E       		CC10: CP 14        ;ENABLE THE AUTOPAGING MODE	;ENABLE THE AUTOPAGING MODE
159)   1ED3 20 03       		 JR NZ, CC11	;
160)   1ED5 C3 EA 1F    		 JP OSWREXIT	;
161)   1ED8 FE 0F       		CC11: CP 15        ;DISABLE THE AUTOPAGING MODE	;DISABLE THE AUTOPAGING MODE
162)   1EDA 20 03       		 JR NZ, CC12	;
163)   1EDC C3 EA 1F    		 JP OSWREXIT	;
164)   1EDF FE 10       		CC12: CP 16        ;CLG	;CLG
165)   1EE1 20 06       		 JR NZ, CC13	;
166)   1EE3 CD 93 24    		 CALL MYOS_CLG	;
167)   1EE6 C3 EA 1F    		 JP OSWREXIT	;
168)   1EE9 FE 11       		CC13: CP 17        ; SAME AS COLOUR	; SAME AS COLOUR
169)   1EEB 20 09       		 JR NZ, CC14	;
171)   1EED FD 23       		 INC IY        ;SKIP ','	;SKIP ','
172)   1EEF CD 94 5E    		 CALL EXPRI	;
173)   1EF2 D9          		 EXX        ;l has the param  color	;l has the param  color
174)   1EF3 C3 EA 1F    		 JP OSWREXIT	;
175)   1EF6 FE 12       		CC14: CP 18        ;SAME AS GCOL	;SAME AS GCOL
176)   1EF8 20 0F       		 JR NZ, CC15	;
177)   1EFA FD 23       		 INC IY        ;SKIP ','	;SKIP ','
178)   1EFC CD 94 5E    		 CALL EXPRI	;
179)   1EFF D9          		 EXX        ;l has the param  mode	;l has the param  mode
180)   1F00 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
181)   1F02 CD 94 5E    		 CALL EXPRI	;
182)   1F05 D9          		 EXX        ;l has the param  color	;l has the param  color
184)   1F06 C3 EA 1F    		 JP OSWREXIT	;
185)   1F09 FE 13       		CC15: CP 19        ;SELECT A COLOR PALLETTE???	;SELECT A COLOR PALLETTE???
186)   1F0B 20 0F       		 JR NZ, CC16	;
188)   1F0D 06 05       		 LD B, 5	;
189)   1F0F C5          		CC15AGN: PUSH BC	;
190)   1F10 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
191)   1F12 CD 94 5E    		 CALL EXPRI	;
192)   1F15 D9          		 EXX        ;l has the param	;l has the param
193)   1F16 C1          		 POP BC	;
194)   1F17 10 F6       		 DJNZ CC15AGN	;
195)   1F19 C3 EA 1F    		 JP OSWREXIT	;
196)   1F1C FE 14       		CC16: CP 20        ;RESTORE THE DEFAULT LOGICAL COLORS	;RESTORE THE DEFAULT LOGICAL COLORS
197)   1F1E 20 03       		 JR NZ, CC17	;
199)   1F20 C3 EA 1F    		 JP OSWREXIT	;
200)   1F23 FE 15       		CC17: CP 21        ;NO OUTPUT TO SCREEN	;NO OUTPUT TO SCREEN
201)   1F25 20 03       		 JR NZ, CC18	;
203)   1F27 C3 EA 1F    		 JP OSWREXIT	;
204)   1F2A FE 16       		CC18: CP 22        ;LIKE MODE	;LIKE MODE
205)   1F2C 20 09       		 JR NZ, CC19	;
206)   1F2E FD 23       		 INC IY        ;SKIP ','	;SKIP ','
207)   1F30 CD 94 5E    		 CALL EXPRI	;
208)   1F33 D9          		 EXX        ;l has the param	;l has the param
209)   1F34 C3 EA 1F    		 JP OSWREXIT	;
210)   1F37 FE 17       		CC19: CP 23        ;Program characters and control the cursor.???	;Program characters and control the cursor.???
211)   1F39 20 27       		 JR NZ, CC20	;
212)   1F3B 06 09       		 LD B, 9        ;9 PARAMS CHAR_NO +8 ROWS OF A CHAR	;9 PARAMS CHAR_NO +8 ROWS OF A CHAR
213)   1F3D FD 7E 00    		 LD A, (IY)	;
214)   1F40 FD 23       		 INC IY        ;SKIP ',' OR ';'	;SKIP ',' OR ';'
215)   1F42 FE 3B       		 CP ';'        ;'	;'
216)   1F44 20 01       		 JR NZ, CC19AGN	;
217)   1F46 05          		 DEC B        ; IF ; THE DELIMETER THEN 2 BYTES AT START	; IF ; THE DELIMETER THEN 2 BYTES AT START
218)   1F47 C5          		CC19AGN: PUSH BC	;
219)   1F48 CD 94 5E    		 CALL EXPRI	;
220)   1F4B D9          		 EXX        ;l has the param	;l has the param
221)   1F4C FD 7E 00    		 LD A, (IY)	;
222)   1F4F FE 2C       		 CP ', '	;
223)   1F51 28 07       		 JR Z, CC19NXT0	;
224)   1F53 FE 3B       		 CP ';'        ;'	;'
225)   1F55 20 05       		 JR NZ, CC19NXT	;
226)   1F57 C1          		 POP BC	;
227)   1F58 05          		 DEC B	;
228)   1F59 C5          		 PUSH BC	;
229)   1F5A FD 23       		CC19NXT0: INC IY       ;SKIP ','	;SKIP ','
230)   1F5C C1          		CC19NXT: POP BC	;
231)   1F5D 10 E8       		 DJNZ CC19AGN	;
232)   1F5F C3 EA 1F    		 JP OSWREXIT	;
233)   1F62 FE 18       		CC20: CP 24        ;Define a graphics window	;Define a graphics window
234)   1F64 20 11       		 JR NZ, CC21	;
235)   1F66 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
236)   1F68 06 04       		 LD B, 4        ;4 PARAMS TWO CORNERS OF A RECT	;4 PARAMS TWO CORNERS OF A RECT
237)   1F6A C5          		CC20AGN: PUSH BC	;
238)   1F6B CD 94 5E    		 CALL EXPRI	;
239)   1F6E D9          		 EXX        ;HL has the param	;HL has the param
240)   1F6F FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
241)   1F71 C1          		 POP BC	;
242)   1F72 10 F6       		 DJNZ CC20AGN	;
243)   1F74 C3 EA 1F    		 JP OSWREXIT	;
244)   1F77 FE 19       		CC21: CP 25        ;Identical to PLOT.	;Identical to PLOT.
245)   1F79 20 17       		 JR NZ, CC22	;
246)   1F7B FD 23       		 INC IY        ;SKIP ','	;SKIP ','
247)   1F7D CD 94 5E    		 CALL EXPRI	;
248)   1F80 D9          		 EXX        ;L has the param PLOTMODE	;L has the param PLOTMODE
249)   1F81 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
250)   1F83 CD 94 5E    		 CALL EXPRI	;
251)   1F86 D9          		 EXX        ;HL has the param X	;HL has the param X
252)   1F87 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
253)   1F89 CD 94 5E    		 CALL EXPRI	;
254)   1F8C D9          		 EXX        ;HL has the param Y	;HL has the param Y
255)   1F8D FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
258)   1F8F C3 EA 1F    		 JP OSWREXIT	;
259)   1F92 FE 1A       		CC22: CP 26        ;Restore the default text and graphics windows.	;Restore the default text and graphics windows.
260)   1F94 20 02       		 JR NZ, CC23	;
261)   1F96 18 52       		 JR OSWREXIT	;
262)   1F98 FE 1B       		CC23: CP 27        ;Send the next character to the screen.	;Send the next character to the screen.
263)   1F9A 20 07       		 JR NZ, CC24	;
264)   1F9C CD 94 5E    		 CALL EXPRI	;
265)   1F9F D9          		 EXX        ;	;
266)   1FA0 7D          		 LD A, L	;
267)   1FA1 18 44       		 JR PRINTIT	;
268)   1FA3 FE 1C       		CC24: CP 28        ;Define a text window.	;Define a text window.
269)   1FA5 20 0E       		 JR NZ, CC25	;
270)   1FA7 06 04       		 LD B, 4        ;4 PARAMS UPPERLEFT AND LOWERRIGHT	;4 PARAMS UPPERLEFT AND LOWERRIGHT
271)   1FA9 C5          		CC24AGN: PUSH BC	;
272)   1FAA FD 23       		 INC IY        ;SKIP ','	;SKIP ','
273)   1FAC CD 94 5E    		 CALL EXPRI	;
274)   1FAF D9          		 EXX        ;l has the param	;l has the param
275)   1FB0 C1          		 POP BC	;
276)   1FB1 10 F6       		 DJNZ CC24AGN	;
277)   1FB3 18 35       		 JR OSWREXIT	;
278)   1FB5 FE 1D       		CC25: CP 29        ;Set the graphics origin.	;Set the graphics origin.
279)   1FB7 20 10       		 JR NZ, CC26	;
280)   1FB9 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
281)   1FBB CD 94 5E    		 CALL EXPRI	;
282)   1FBE D9          		 EXX        ;HL has the param X	;HL has the param X
283)   1FBF FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
284)   1FC1 CD 94 5E    		 CALL EXPRI	;
285)   1FC4 D9          		 EXX        ;HL has the param Y	;HL has the param Y
286)   1FC5 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
288)   1FC7 18 21       		 JR OSWREXIT	;
289)   1FC9 FE 1E       		CC26: CP 30        ;Home the text cursor to the top left of the screen.	;Home the text cursor to the top left of the screen.
290)   1FCB 20 08       		 JR NZ, CC27	;
291)   1FCD 21 00 00    		 LD HL, 0	;
292)   1FD0 22 0D FE    		 LD (CURSORX), HL	;
293)   1FD3 18 15       		 JR OSWREXIT	;
294)   1FD5 FE 1F       		CC27: CP 31        ;Move the text cursor - identical to TAB(x,y).	;Move the text cursor - identical to TAB(x,y).
295)   1FD7 20 11       		 JR NZ, OSWREXIT	;
296)   1FD9 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
297)   1FDB CD 94 5E    		 CALL EXPRI	;
298)   1FDE D9          		 EXX        ;l has the param X	;l has the param X
299)   1FDF FD 23       		 INC IY        ;SKIP ','	;SKIP ','
300)   1FE1 CD 94 5E    		 CALL EXPRI	;
301)   1FE4 D9          		 EXX        ;l has the param Y	;l has the param Y
303)   1FE5 18 03       		 JR OSWREXIT	;
306)   1FE7 CD F0 1F    		PRINTIT: CALL EDPUT	;
307)   1FEA DD E1       		OSWREXIT: POP IX	;
308)   1FEC E1          		 POP HL	;
309)   1FED D1          		 POP DE	;
310)   1FEE F1          		 POP AF	;
311)   1FEF C9          		 RET	;
316)   1FF0 3A 00 FE    		EDPUT: LD A, (FLAGS)	;
317)   1FF3 CB 5F       		 BIT 3, A	;
318)   1FF5 28 10       		 JR Z, WRCH	;
319)   1FF7 7B          		 LD A, E	;
320)   1FF8 FE 20       		 CP ' '	;
321)   1FFA D8          		 RET C	;
322)   1FFB 2A 12 FE    		 LD HL, (EDPTR)	;
323)   1FFE 73          		 LD (HL), E	;
324)   1FFF 2C          		 INC L	;
325)   2000 C8          		 RET Z	;
326)   2001 22 12 FE    		 LD (EDPTR), HL	;
327)   2004 C9          		 RET	;
330)   2005 1E 3E       		 LD E, '>'	;
331)   2007 7B          		WRCH: LD A, E	;
333)   2008 F5          		 PUSH AF	;
334)   2009 C5          		 PUSH BC	;
335)   200A D5          		 PUSH DE	;
336)   200B E5          		 PUSH HL	;
337)   200C DD E5       		 PUSH IX	;
338)   200E FD E5       		 PUSH IY	;
339)   2010 F5          		 PUSH AF	;
340)   2011 C5          		 PUSH BC	;
341)   2012 D5          		 PUSH DE	;
342)   2013 E5          		 PUSH HL	;
343)   2014 CD B5 16    		 CALL LCD_RMVCURS	;
344)   2017 E1          		 POP HL	;
345)   2018 D1          		 POP DE	;
346)   2019 C1          		 POP BC	;
347)   201A F1          		 POP AF	;
348)   201B CD 37 15    		 CALL LCD_PRINTCHAR	;
349)   201E CD BA 16    		 CALL LCD_PRNCURS	;
351)   2021 FD E1       		 POP IY	;
352)   2023 DD E1       		 POP IX	;
353)   2025 E1          		 POP HL	;
354)   2026 D1          		 POP DE	;
355)   2027 C1          		 POP BC	;
356)   2028 F1          		 POP AF	;
357)   2029 C9          		 RET	;
359)   202A 3A 00 FE    		TOGGLE: LD A, (FLAGS)	;
360)   202D EE 04       		 XOR 00000100B	;
361)   202F 32 00 FE    		 LD (FLAGS), A	;
362)   2032 C9          		 RET	;
371)   2033 E5          		@MYOS_OSKEY: PUSH HL	;
372)   2034 21 15 FE    		 LD HL, INKEY	;
373)   2037 7E          		 LD A, (HL)	;
374)   2038 36 00       		 LD (HL), 0	;
375)   203A E1          		 POP HL	;
376)   203B B7          		 OR A	;
377)   203C 37          		 SCF	;
378)   203D C0          		 RET NZ	;
380)   203E CD FA 24    		 CALL GETKEYNW	;
382)   2041 D0          		 RET NC	;
383)   2042 FE 1B       		 CP ESC	;
384)   2044 37          		 SCF	;
385)   2045 C0          		 RET NZ	;
386)   2046 E5          		ESCSET: PUSH HL	;
387)   2047 21 00 FE    		 LD HL, FLAGS	;
388)   204A CB 76       		 BIT 6, (HL)        ; ESC DISABLED?	; ESC DISABLED?
389)   204C 20 02       		 JR NZ, ESCDIS	;
390)   204E CB FE       		 SET 7, (HL)        ; SET ESCAPE FLAG	; SET ESCAPE FLAG
391)   2050 E1          		ESCDIS: POP HL	;
392)   2051 C9          		 RET	;
393)   2052 CD EA 05    		ESCTEST: CALL RS_RXNW	;
394)   2055 B7          		 OR A	;
395)   2056 C8          		 RET Z	;
396)   2057 FE 1B       		 CP 0x1B        ; ESC	; ESC
397)   2059 28 EB       		 JR Z, ESCSET	;
398)   205B 32 15 FE    		 LD (INKEY), A	;
399)   205E C9          		 RET	;
401)   205F CD 52 20    		@MYOS_TRAP: CALL ESCTEST	;
402)   2062 3A 00 FE    		@MYOS_LTRAP: LD A, (FLAGS)	;
403)   2065 B7          		 OR A	;
404)   2066 F0          		 RET P	;
405)   2067 21 00 FE    		ABORT: LD HL, FLAGS	;
406)   206A CB BE       		 RES 7, (HL)	;
407)   206C C3 C2 4D    		 JP ESCAPE	;
416)   206F F3          		 DI	;
417)   2070 21 F6 FD    		 LD HL, RANDOM        ; SET RANDOM SEED TO NON 0	; SET RANDOM SEED TO NON 0
418)   2073 3E 06       		 LD A, 0x06	;
419)   2075 77          		 LD (HL), A	;
420)   2076 3E BB       		 LD A, 0xBB	;
421)   2078 77          		 LD (HL), A	;
422)   2079 21 00 00    		 LD HL, 0	;
423)   207C 22 0D FE    		 LD (CURSORX), HL       ; CURSOR X 7 Y ZEROED	; CURSOR X 7 Y ZEROED
424)   207F 11 FF FF    		 LD DE, COL_WHITE       ; SET FCOLOR AND BCOLOR DEFAULT VALUES	; SET FCOLOR AND BCOLOR DEFAULT VALUES
425)   2082 21 01 FE    		 LD HL, FCOLOR	;
426)   2085 73          		 LD (HL), E	;
427)   2086 23          		 INC HL	;
428)   2087 72          		 LD (HL), D	;
429)   2088 23          		 INC HL	;
430)   2089 11 00 00    		 LD DE, COL_BLACK	;
431)   208C 73          		 LD (HL), E	;
432)   208D 23          		 INC HL	;
433)   208E 72          		 LD (HL), D	;
434)   208F 01 04 00    		 LD BC, 4        ; COPY SAME COLORS TO GRAPHICS	; COPY SAME COLORS TO GRAPHICS
435)   2092 11 05 FE    		 LD DE, FGRCOL	;
436)   2095 21 01 FE    		 LD HL, FCOLOR	;
437)   2098 ED B0       		 LDIR	;
438)   209A 11 17 FE    		 LD DE, FCOLPAL	;
439)   209D CD A8 20    		 CALL COPYPAL	;
440)   20A0 11 37 FE    		 LD DE, BCOLPAL	;
441)   20A3 CD A8 20    		 CALL COPYPAL	;
442)   20A6 18 16       		 JR OSFINSH       ;	;
443)   20A8 21 1A 21    		COPYPAL: LD HL, COL_PALET	;
444)   20AB 01 20 00    		 LD BC, 16 * 2        ;SHOULD ADD 8 MORE COLORS	;SHOULD ADD 8 MORE COLORS
445)   20AE ED B0       		 LDIR	;
446)   20B0 AF          		 XOR A	;
447)   20B1 32 0F FE    		 LD (SCRLN), A	;
448)   20B4 21 00 00    		 LD HL, 0	;
449)   20B7 22 A7 FE    		 LD (TIMECTR), HL	;
450)   20BA 22 A9 FE    		 LD (TIMECTR + 2), HL	;
451)   20BD C9          		 RET	;
453)   20BE CD FC 16    		OSFINSH: CALL LCD_CLRSCR	;
454)   20C1 CD 2B 4C    		 CALL TELL	;
455)   20C4 43 44 65 73 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20C8 70 20 4D 6F 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20CC 64 75 6C 61 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20D0 72 20 5A 38 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20D4 30 20 43 6F 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20D8 6D 70 75 74 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20DC 65 72 20 32 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20E0 30 32 30 2D 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20E4 32 31       		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
456)   20E6 0A 0D       		 DEFB 0AH,0DH	;
457)   20E8 41 54 4C 41 		 DEFM "ATLAS Operating System Version "	;
457)   20EC 53 20 4F 70 		 DEFM "ATLAS Operating System Version "	;
457)   20F0 65 72 61 74 		 DEFM "ATLAS Operating System Version "	;
457)   20F4 69 6E 67 20 		 DEFM "ATLAS Operating System Version "	;
457)   20F8 53 79 73 74 		 DEFM "ATLAS Operating System Version "	;
457)   20FC 65 6D 20 56 		 DEFM "ATLAS Operating System Version "	;
457)   2100 65 72 73 69 		 DEFM "ATLAS Operating System Version "	;
457)   2104 6F 6E 20    		 DEFM "ATLAS Operating System Version "	;
458)   2107 30          		 DEFB MJVER	;
459)   2108 2E          		 DEFB 46	;
460)   2109 32          		 DEFB MNVER1,MNVER2	;
460)   210A 37          		 DEFB MNVER1,MNVER2	;
461)   210B 0A 0D 0A 0D 		 DEFB 0AH,0DH,0AH,0DH	;
462)   210F 00          		 DEFB 00H	;
463)   2110 AF          		 XOR A	;
464)   2111 11 FF F9    		 LD DE, STACKP - 0x100      ;DE = HIMEM	;DE = HIMEM
465)   2114 5F          		 LD E, A        ;PAGE BOUNDARY	;PAGE BOUNDARY
466)   2115 21 00 80    		 LD HL, RAMAD        ;@USER	;@USER
467)   2118 FB          		 EI	;
468)   2119 C9          		 RET	;
469)   211A 00 00       		COL_PALET: DW COL_BLACK	;
470)   211C 00 F8       		 DW COL_RED	;
471)   211E C0 07       		 DW COL_GREEN	;
472)   2120 C0 FF       		 DW COL_YELLOW	;
473)   2122 3F 00       		 DW COL_BLUE	;
474)   2124 3F F8       		 DW COL_MAGENTA	;
475)   2126 FF 07       		 DW COL_CYAN	;
476)   2128 FF FF       		 DW COL_WHITE	;
477)   212A 00 00       		 DW COL_BLACK       ;TODO PICK 8 MORE COLORS	;TODO PICK 8 MORE COLORS
478)   212C 00 F8       		 DW COL_RED	;
479)   212E C0 07       		 DW COL_GREEN	;
480)   2130 C0 FF       		 DW COL_YELLOW	;
481)   2132 3F 00       		 DW COL_BLUE	;
482)   2134 3F F8       		 DW COL_MAGENTA	;
483)   2136 FF 07       		 DW COL_CYAN	;
484)   2138 FF FF       		 DW COL_WHITE	;
490)   213A CD 97 21    		 CALL SKIPSP	;
491)   213D FE 0D       		 CP CR	;
492)   213F C8          		 RET Z	;
493)   2140 FE 7C       		 CP '|'	;
494)   2142 C8          		 RET Z	;
495)   2143 FE 2E       		 CP '.'	;
496)   2145 CA 8A 22    		 JP Z, DOT        ;*.	;*.
497)   2148 EB          		 EX DE, HL	;
498)   2149 21 A6 21    		 LD HL, COMDS	;
499)   214C 1A          		OSCLI0: LD A, (DE)	;
500)   214D CD 9E 21    		 CALL UPPRC	;
501)   2150 BE          		 CP (HL)	;
502)   2151 28 0B       		 JR Z, OSCLI2	;
503)   2153 38 31       		 JR C, HUH	;
504)   2155 CB 7E       		OSCLI1: BIT 7, (HL)	;
505)   2157 23          		 INC HL	;
506)   2158 28 FB       		 JR Z, OSCLI1	;
507)   215A 23          		 INC HL	;
508)   215B 23          		 INC HL	;
509)   215C 18 EE       		 JR OSCLI0	;
511)   215E D5          		OSCLI2: PUSH DE	;
512)   215F 13          		OSCLI3: INC DE	;
513)   2160 23          		 INC HL	;
514)   2161 1A          		 LD A, (DE)	;
515)   2162 CD 9E 21    		 CALL UPPRC	;
516)   2165 FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
517)   2167 28 0A       		 JR Z, OSCLI4	;
518)   2169 AE          		 XOR (HL)	;
519)   216A 28 F3       		 JR Z, OSCLI3	;
520)   216C FE 80       		 CP 80H	;
521)   216E 28 03       		 JR Z, OSCLI4	;
522)   2170 D1          		 POP DE	;
523)   2171 18 E2       		 JR OSCLI1	;
525)   2173 F1          		OSCLI4: POP AF	;
526)   2174 13          		 INC DE	;
527)   2175 CB 7E       		OSCLI5: BIT 7, (HL)	;
528)   2177 23          		 INC HL	;
529)   2178 28 FB       		 JR Z, OSCLI5	;
530)   217A 7E          		 LD A, (HL)	;
531)   217B 23          		 INC HL	;
532)   217C 66          		 LD H, (HL)	;
533)   217D 6F          		 LD L, A	;
534)   217E E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
535)   217F EB          		 EX DE, HL	;
536)   2180 E5          		 PUSH HL	;
537)   2181 FD E1       		 POP IY	;
538)   2183 C3 97 21    		 JP SKIPSP	;
540)   2186 3E FE       		HUH: LD A, 254        ;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY	;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY
541)   2188 CD F0 46    		 CALL EXTERR	;
542)   218B 42 61 64 20 		 DEFM 'Bad command'	;
542)   218F 63 6F 6D 6D 		 DEFM 'Bad command'	;
542)   2193 61 6E 64    		 DEFM 'Bad command'	;
543)   2196 00          		 DEFB    0	;
545)   2197 7E          		SKIPSP: LD A, (HL)	;
546)   2198 FE 20       		 CP ' '	;
547)   219A C0          		 RET NZ	;
548)   219B 23          		 INC HL	;
549)   219C 18 F9       		 JR SKIPSP	;
551)   219E E6 7F       		UPPRC: AND 7FH	;
552)   21A0 FE 60       		 CP '`'	;
553)   21A2 D8          		 RET C	;
554)   21A3 E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
555)   21A5 C9          		 RET	;
559)   21A6 42 59       		COMDS: DEFM  "BY"	;
560)   21A8 C5          		 DEFB    'E'+80H	;
561)   21A9 8D 22       		 DEFW BYE	;
562)   21AB 43          		 DEFM  "C"	;
563)   21AC C4          		 DEFB    'D'+80H	;
564)   21AD C1 22       		 DEFW DRV_CD	;
565)   21AF 44 49       		 DEFM  "DI"	;
566)   21B1 D2          		 DEFB    'R'+80H	;
567)   21B2 A7 22       		 DEFW DRV_DIR	;
568)   21B4 46          		 DEFM  "F"	;
569)   21B5 D8          		 DEFB    'X'+80H	;
570)   21B6 90 22       		 DEFW FX	;
571)   21B8 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
571)   21BC 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
571)   21C0 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
572)   21C3 C6          		 DEFB 'F'+80H	;
573)   21C4 45 23       		 DEFW LCD_BLINKOF	;
574)   21C6 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
574)   21CA 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
574)   21CE 4B 4F       		 DEFM  "LCD_BLINKO"	;
575)   21D0 CE          		 DEFB 'N'+80H	;
576)   21D1 4B 23       		 DEFW LCD_BLINKON	;
577)   21D3 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
577)   21D7 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
578)   21DB D2          		 DEFB 'R'+80H	;
579)   21DC 51 23       		 DEFW LCD_CLR	;
580)   21DE 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
580)   21E2 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
580)   21E6 4F 52 41    		 DEFM  "LCD_CURSORA"	;
581)   21E9 D4          		 DEFB 'T'+80H	;
582)   21EA 57 23       		 DEFW LCD_CURSAT	;
583)   21EC 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
583)   21F0 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
583)   21F4 4F 46       		 DEFM  "LCD_CURSOF"	;
584)   21F6 C6          		 DEFB 'F'+80H	;
585)   21F7 76 23       		 DEFW LCD_CURSOF	;
586)   21F9 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
586)   21FD 43 55 52 53 		 DEFM  "LCD_CURSO"	;
586)   2201 4F          		 DEFM  "LCD_CURSO"	;
587)   2202 CE          		 DEFB 'N'+80H	;
588)   2203 7C 23       		 DEFW LCD_CURSON	;
589)   2205 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
589)   2209 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
589)   220D 4F 46       		 DEFM  "LCD_DISPOF"	;
590)   220F C6          		 DEFB 'F'+80H	;
591)   2210 82 23       		 DEFW LCD_DISPOF	;
592)   2212 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
592)   2216 44 49 53 50 		 DEFM  "LCD_DISPO"	;
592)   221A 4F          		 DEFM  "LCD_DISPO"	;
593)   221B CE          		 DEFB 'N'+80H	;
594)   221C 88 23       		 DEFW LCD_DISPON	;
595)   221E 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
595)   2222 48 4F 4D    		 DEFM  "LCD_HOM"	;
596)   2225 C5          		 DEFB 'E'+80H	;
597)   2226 69 0E       		 DEFW LCD16_HOME	;
598)   2228 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
598)   222C 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
598)   2230 45 46       		 DEFM  "LCD_MOVLEF"	;
599)   2232 D4          		 DEFB 'T'+80H	;
600)   2233 94 23       		 DEFW LCD_MOVLFT	;
601)   2235 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
601)   2239 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
601)   223D 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
602)   2240 D4          		 DEFB 'T'+80H	;
603)   2241 9A 23       		 DEFW LCD_MOVRGT	;
604)   2243 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
604)   2247 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
605)   224B D4          		 DEFB 'T'+80H	;
606)   224C A0 23       		 DEFW LCD_PRN	;
607)   224E 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
607)   2252 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
607)   2256 45 46       		 DEFM  "LCD_SCRLEF"	;
608)   2258 D4          		 DEFB 'T'+80H	;
609)   2259 11 24       		 DEFW LCD_SCRLFT	;
610)   225B 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
610)   225F 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
610)   2263 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
611)   2266 D4          		 DEFB 'T'+80H	;
612)   2267 17 24       		 DEFW LCD_SCRRGT	;
613)   2269 50 57       		 DEFM  "PW"	;
614)   226B C4          		 DEFB    'D'+80H	;
615)   226C 93 22       		 DEFW NIMP	;
616)   226E 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
616)   2272 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
616)   2276 53          		 DEFM  "RTC_ADJUS"	;
617)   2277 D4          		 DEFB    'T'+80H	;
618)   2278 F1 22       		 DEFW RTC_ADJUST	;
619)   227A 52 54 43 5F 		 DEFM  "RTC_GE"	;
619)   227E 47 45       		 DEFM  "RTC_GE"	;
620)   2280 D4          		 DEFB    'T'+80H	;
621)   2281 1F 23       		 DEFW RTC_GET	;
622)   2283 54 59 50    		 DEFM  "TYP"	;
623)   2286 C5          		 DEFB    'E'+80H	;
624)   2287 CC 22       		 DEFW DRV_TYPFILE	;
626)   2289 FF          		 DEFB 0FFH	;
629)   228A C3 1D 24    		DOT: JP EXTCMDRET	;
634)   228D C3 00 00    		BYE: JP 0	;
637)   2290 C3 1D 24    		FX: JP EXTCMDRET	;
640)   2293 C3 1D 24    		NIMP: JP EXTCMDRET        ;NOT IMPLEMENTED YET	;NOT IMPLEMENTED YET
645)   2296 CD F0 46    		DRV_ERROR: CALL EXTERR	;
646)   2299 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
646)   229D 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
646)   22A1 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
646)   22A5 52          		 DEFM  "STORAGE ERROR"	;
647)   22A6 00          		 DEFB    0	;
652)   22A7 CD D6 09    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
653)   22AA D2 1D 24    		 JP NC, EXTCMDRET	;
654)   22AD 18 E7       		 JR DRV_ERROR	;
656)   22AF CD 84 5D    		DRV_GETFNPRM: CALL EXPR       ;VARIABLE TYPE	;VARIABLE TYPE
657)   22B2 08          		 EX AF, AF'        ;E NO OF BYTES ACCS THE PARAM	;E NO OF BYTES ACCS THE PARAM
658)   22B3 21 00 FB    		 LD HL, ACCS	;
659)   22B6 06 00       		 LD B, 0	;
660)   22B8 4B          		 LD C, E	;
661)   22B9 11 B9 FE    		 LD DE, STRGBUFF	;
662)   22BC ED B0       		 LDIR	;
663)   22BE AF          		 XOR A	;
664)   22BF 12          		 LD (DE), A	;
665)   22C0 C9          		 RET	;
668)   22C1 CD AF 22    		DRV_CD: CALL DRV_GETFNPRM	;
669)   22C4 CD 02 0A    		 CALL STRG_DIRCHG	;
670)   22C7 D2 1D 24    		 JP NC, EXTCMDRET	;
671)   22CA 18 CA       		 JR DRV_ERROR	;
674)   22CC CD AF 22    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
675)   22CF CD 1A 0A    		 CALL STRG_OPNFILE	;
676)   22D2 38 C2       		 JR C, DRV_ERROR	;
677)   22D4 CD A2 0A    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
678)   22D7 3A E5 FE    		 LD A, (FID)	;
679)   22DA CD 38 0A    		 CALL STRG_CLSFILE	;
680)   22DD C3 1D 24    		 JP EXTCMDRET	;
687)   22E0 CD 94 5E    		RTC_GETBASPAR: CALL EXPRI	;
688)   22E3 D9          		 EXX	;
689)   22E4 7D          		 LD A, L        ;A HAS THE NUMBER	;A HAS THE NUMBER
690)   22E5 CD A2 26    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
691)   22E8 FD 7E 00    		 LD A, (IY)	;
692)   22EB FE 2C       		 CP ', '	;
693)   22ED FD 23       		 INC IY	;
694)   22EF 7D          		 LD A, L	;
695)   22F0 C9          		 RET	;
700)   22F1 0E 00       		RTC_ADJUST: LD C, 0	;
701)   22F3 11 89 FE    		 LD DE, BUFFER	;
702)   22F6 AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
703)   22F7 32 89 FE    		 LD (BUFFER), A	;
704)   22FA 13          		 INC DE	;
705)   22FB C5          		RTCADJ_NXT: PUSH BC	;
706)   22FC D5          		 PUSH DE	;
707)   22FD CD E0 22    		 CALL RTC_GETBASPAR	;
708)   2300 D1          		 POP DE	;
709)   2301 C1          		 POP BC	;
710)   2302 28 0B       		 JR Z, RTCADJ_PAROK	;
712)   2304 FD 2B       		 DEC IY	;
713)   2306 47          		 LD B, A        ;SAVE A	;SAVE A
714)   2307 79          		 LD A, C	;
715)   2308 FE 06       		 CP 6	;
716)   230A 28 08       		 JR Z, RTCADJ_EXEC	;
718)   230C C3 E5 24    		 JP SNTX_ERROR	;
719)   230F 0C          		RTCADJ_PAROK: INC C	;
720)   2310 12          		 LD (DE), A	;
721)   2311 13          		 INC DE	;
722)   2312 18 E7       		 JR RTCADJ_NXT	;
723)   2314 78          		RTCADJ_EXEC: LD A, B	;
724)   2315 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
725)   2316 13          		 INC DE	;
726)   2317 AF          		 XOR A	;
727)   2318 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
728)   2319 CD 41 0D    		 CALL DS1307_ADJUST	;
729)   231C C3 1D 24    		 JP EXTCMDRET	;
731)   231F CD E5 0C    		RTC_GET: CALL DS1307_GETNOW	;
733)   2322 21 30 23    		 LD HL, TSTSTR	;
734)   2325 11 00 80    		 LD DE, $8000	;
735)   2328 01 14 00    		 LD BC, 20	;
736)   232B C5          		 PUSH BC	;
737)   232C ED B0       		 LDIR	;
738)   232E C1          		 POP BC	;
739)   232F C9          		 RET	;
741)   2330 31 37 2F 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
741)   2334 33 2F 32 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
741)   2338 32 31 20 31 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
741)   233C 37 3A 35 32 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
741)   2340 3A 30 33    		 TSTSTR DEFM "17/03/2021 17:52:03"	;
742)   2343 00 0D       		 DEFB 0,0x0D	;
745)   2345 CD A1 0E    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
746)   2348 C3 1D 24    		 JP EXTCMDRET	;
748)   234B CD AF 0E    		LCD_BLINKON: CALL LCD16_BLINKON	;
749)   234E C3 1D 24    		 JP EXTCMDRET	;
751)   2351 CD 52 0E    		LCD_CLR: CALL LCD16_CLR	;
752)   2354 C3 1D 24    		 JP EXTCMDRET	;
755)   2357 CD 94 5E    		 CALL EXPRI	;
756)   235A D9          		 EXX	;
757)   235B 55          		 LD D, L	;
758)   235C D5          		 PUSH DE	;
759)   235D FD 7E 00    		 LD A, (IY)	;
760)   2360 FE 2C       		 CP ', '	;
761)   2362 28 04       		 JR Z, LCDCA_OK	;
762)   2364 D1          		 POP DE	;
763)   2365 C3 E5 24    		 JP SNTX_ERROR	;
764)   2368 FD 23       		LCDCA_OK: INC IY	;
765)   236A CD 94 5E    		 CALL EXPRI	;
766)   236D D9          		 EXX	;
767)   236E D1          		 POP DE	;
768)   236F 5D          		 LD E, L	;
769)   2370 CD 76 0E    		 CALL LCD16_SETCURS	;
770)   2373 C3 1D 24    		 JP EXTCMDRET	;
772)   2376 CD 85 0E    		LCD_CURSOF: CALL LCD16_CURSOFF	;
773)   2379 C3 1D 24    		 JP EXTCMDRET	;
775)   237C CD 93 0E    		LCD_CURSON: CALL LCD16_CURSON	;
776)   237F C3 1D 24    		 JP EXTCMDRET	;
778)   2382 CD 29 0E    		LCD_DISPOF: CALL LCD16_NODISP	;
779)   2385 C3 1D 24    		 JP EXTCMDRET	;
781)   2388 CD 37 0E    		LCD_DISPON: CALL LCD16_DISP	;
782)   238B C3 1D 24    		 JP EXTCMDRET	;
784)   238E CD 69 0E    		LCD_HOME: CALL LCD16_HOME	;
785)   2391 C3 1D 24    		 JP EXTCMDRET	;
787)   2394 CD C9 0E    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
788)   2397 C3 1D 24    		 JP EXTCMDRET	;
790)   239A CD CF 0E    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
791)   239D C3 1D 24    		 JP EXTCMDRET	;
793)   23A0 18 20       		LCD_PRN: JR PRINT0	;
794)   23A2 06 02       		PRINT6: LD B, 2	;
795)   23A4 18 22       		 JR PRINTC	;
796)   23A6 01 00 01    		PRINT8: LD BC, 100H	;
797)   23A9 18 1D       		 JR PRINTC	;
798)   23AB 21 00 FD    		PRINT9: LD HL, STAVAR	;
799)   23AE AF          		 XOR A	;
800)   23AF BE          		 CP (HL)	;
801)   23B0 28 10       		 JR Z, PRINT0	;
802)   23B2 3A FB FD    		 LD A, (COUNT)	;
803)   23B5 B7          		 OR A	;
804)   23B6 28 0A       		 JR Z, PRINT0	;
805)   23B8 96          		PRINTA: SUB (HL)	;
806)   23B9 28 07       		 JR Z, PRINT0	;
807)   23BB 30 FB       		 JR NC, PRINTA	;
808)   23BD ED 44       		 NEG	;
809)   23BF CD 2A 57    		 CALL FILL	;
810)   23C2 3A 00 FD    		PRINT0: LD A, (STAVAR)	;
811)   23C5 4F          		 LD C, A        ;PRINTS	;PRINTS
812)   23C6 06 00       		 LD B, 0        ;PRINTF	;PRINTF
813)   23C8 CD C2 56    		PRINTC: CALL TERM?	;
814)   23CB 28 41       		 JR Z, PRINT4	;
815)   23CD CB 80       		 RES 0, B	;
816)   23CF FD 23       		 INC IY	;
817)   23D1 FE 7E       		 CP '~'	;
818)   23D3 28 CD       		 JR Z, PRINT6	;
819)   23D5 FE 3B       		 CP ';'        ;'	;'
820)   23D7 28 CD       		 JR Z, PRINT8	;
821)   23D9 FE 2C       		 CP ','	;
822)   23DB 28 CE       		 JR Z, PRINT9	;
823)   23DD CD E3 56    		 CALL FORMAT        ;SPC, TAB, '	;SPC, TAB, '
824)   23E0 28 E6       		 JR Z, PRINTC	;
825)   23E2 FD 2B       		 DEC IY	;
826)   23E4 C5          		 PUSH BC	;
827)   23E5 CD 84 5D    		 CALL EXPR        ;VARIABLE TYPE	;VARIABLE TYPE
828)   23E8 08          		 EX AF, AF'	;
829)   23E9 FA FF 23    		 JP M, PRINT3        ;STRING	;STRING
830)   23EC D1          		 POP DE	;
831)   23ED D5          		 PUSH DE	;
832)   23EE CB 4A       		 BIT 1, D	;
833)   23F0 F5          		 PUSH AF	;
834)   23F1 CC 96 63    		 CALL Z, STR        ;DECIMAL	;DECIMAL
835)   23F4 F1          		 POP AF	;
836)   23F5 C4 53 63    		 CALL NZ, HEXSTR       ;HEX	;HEX
837)   23F8 C1          		 POP BC	;
838)   23F9 C5          		 PUSH BC	;
839)   23FA 79          		 LD A, C	;
840)   23FB 93          		 SUB E	;
841)   23FC D4 2A 57    		 CALL NC, FILL        ;RIGHT JUSTIFY	;RIGHT JUSTIFY
842)   23FF C1          		PRINT3: POP BC	;
845)   2400 21 00 FB    		 LD HL, ACCS       ; L IS 00	; L IS 00
846)   2403 7D          		 LD A, L	;
847)   2404 83          		 ADD E	;
848)   2405 6F          		 LD L, A	;
849)   2406 AF          		 XOR A	;
850)   2407 77          		 LD (HL), A	;
851)   2408 6F          		 LD L, A	;
852)   2409 CD 5B 0E    		 CALL LCD16_PRINT       ;PRINT	;PRINT
853)   240C 18 BA       		 JR PRINTC	;
854)   240E C3 1D 24    		PRINT4: JP EXTCMDRET	;
857)   2411 CD BD 0E    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
858)   2414 C3 1D 24    		 JP EXTCMDRET	;
860)   2417 CD C3 0E    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
861)   241A C3 1D 24    		 JP EXTCMDRET	;
865)   241D AF          		 XOR A	;
868)   241E C9          		 RET	;
875)   241F FE FF       		@MYOS_OSOPEN: CP 255	;
876)   2421 28 06       		 JR Z, OPW	;
877)   2423 FE 01       		 CP 1	;
878)   2425 28 06       		 JR Z, OPRW	;
880)   2427 18 06       		 JR DOOP	;
881)   2429 3E 01       		OPW: LD A, 1	;
882)   242B 18 02       		 JR DOOP	;
883)   242D 3E 02       		OPRW: LD A, 2	;
884)   242F F5          		DOOP: PUSH AF        ;SAVE A	;SAVE A
885)   2430 AF          		 XOR A         ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
886)   2431 12          		 LD (DE), A        ;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0	;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0
887)   2432 EB          		 EX DE, HL	;
888)   2433 ED 52       		 SBC HL, DE	;
889)   2435 23          		 INC HL         ;+1 FOR ZERO	;+1 FOR ZERO
890)   2436 E5          		 PUSH HL	;
891)   2437 C1          		 POP BC	;
892)   2438 EB          		 EX DE, HL	;
893)   2439 11 B9 FE    		 LD DE, STRGBUFF	;
894)   243C ED B0       		 LDIR         ;COPY FILENAME TO STRGBUFF	;COPY FILENAME TO STRGBUFF
895)   243E F1          		 POP AF         ;RESTORE A	;RESTORE A
896)   243F CD 1A 0A    		 CALL STRG_OPNFILE	;
897)   2442 DA 96 22    		 JP C, DRV_ERROR	;
898)   2445 C9          		 RET	;
902)   2446 21 B9 FE    		@MYOS_OSBPUT: LD HL, STRGBUFF	;
903)   2449 77          		 LD (HL), A        ;VALUE	;VALUE
904)   244A 7B          		 LD A, E        ;FID	;FID
905)   244B EB          		 EX DE, HL	;
906)   244C 01 01 00    		 LD BC, 1        ;NO OF BYTES TO WRITE	;NO OF BYTES TO WRITE
907)   244F CD 4A 0A    		 CALL STRG_BLKWRITE	;
908)   2452 DA 96 22    		 JP C, DRV_ERROR	;
909)   2455 C9          		 RET	;
913)   2456 7B          		@MYOS_OSBGET: LD A, E       ;FID	;FID
914)   2457 11 B9 FE    		 LD DE, STRGBUFF       ;SET BUFFER	;SET BUFFER
915)   245A 01 01 00    		 LD BC, 1        ;NO OF BYTES TO READ	;NO OF BYTES TO READ
916)   245D CD 6D 0A    		 CALL STRG_BLKREAD	;
917)   2460 DA 96 22    		 JP C, DRV_ERROR	;
918)   2463 78          		 LD A, B	;
919)   2464 81          		 ADD C	;
920)   2465 FE 01       		 CP 1	;
921)   2467 28 03       		 JR Z, GETISOK	;
922)   2469 3E FF       		 LD A, 255	;
923)   246B C9          		 RET	;
924)   246C 3A B9 FE    		GETISOK: LD A, (STRGBUFF)	;
925)   246F C9          		 RET	;
930)   2470 7B          		@MYOS_GETPTR: LD A, E	;
931)   2471 CD A2 09    		 CALL STRG_GETPOS	;
932)   2474 C9          		 RET	;
937)   2475 CD BC 09    		@MYOS_PUTPTR: CALL STRG_SETPOS	;
938)   2478 C9          		 RET	;
943)   2479 7B          		@MYOS_GETEXT: LD A, E	;
944)   247A CD 9D 09    		 CALL STRG_GETSIZE	;
945)   247D C9          		 RET	;
950)   247E 7B          		@MYOS_OSSHUT: LD A, E	;
951)   247F CD 38 0A    		 CALL STRG_CLSFILE	;
952)   2482 C9          		 RET	;
955)   2483 7B          		@MYOS_OSSTAT: LD A, E	;
956)   2484 CD 8B 09    		 CALL STRG_GETEOF	;
957)   2487 FE FF       		 CP 255         ;TEST IF -1	;TEST IF -1
958)   2489 C9          		 RET	;
962)   248A C9          		@MYOS_OSCALL: RET	;
965)   248B C9          		@MYOS_RESET: RET	;
967)   248C CD 94 5E    		@MYOS_MODE: CALL EXPRI       ;GET PARAM	;GET PARAM
968)   248F D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
969)   2490 C3 E8 4C    		 JP XEQ	;
971)   2493 CD 87 1B    		@MYOS_CLG: CALL GRPH_SAVECOLORS	;
972)   2496 CD FC 16    		 CALL LCD_CLRSCR	;
973)   2499 CD 9E 1B    		 CALL GRPH_RESTORECOLORS	;
974)   249C C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
977)   249F DD E5       		@MYOS_GCOL: PUSH IX	;
978)   24A1 3E 01       		 LD A, 1	;
979)   24A3 CD 8C 19    		 CALL BAS_COLOUR	;
980)   24A6 DD E1       		 POP IX	;
981)   24A8 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
983)   24AB DD E5       		@MYOS_COLOUR: PUSH IX	;
984)   24AD AF          		 XOR A	;
985)   24AE CD 8C 19    		 CALL BAS_COLOUR	;
986)   24B1 DD E1       		 POP IX	;
987)   24B3 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
989)   24B6 DD E5       		@MYOS_DRAW: PUSH IX	;
990)   24B8 CD 65 1A    		 CALL BAS_DRAW	;
991)   24BB DD E1       		 POP IX	;
992)   24BD C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
994)   24C0 DD E5       		@MYOS_MOVE: PUSH IX	;
995)   24C2 CD 8E 1A    		 CALL BAS_MOVE	;
996)   24C5 DD E1       		 POP IX	;
997)   24C7 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
999)   24CA DD E5       		@MYOS_PLOT: PUSH IX	;
1000)   24CC CD FE 1A    		 CALL BAS_PLOT	;
1001)   24CF DD E1       		 POP IX	;
1002)   24D1 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1004)   24D4 DD E5       		@MYOS_POINT: PUSH IX	;
1005)   24D6 CD 9A 1A    		 CALL BAS_POINT       ;RETURNS A VALUE TO BASIC	;RETURNS A VALUE TO BASIC
1006)   24D9 DD E1       		 POP IX	;
1007)   24DB C9          		 RET	;
1016)   24DC CD 21 1A    		@MYOS_PUTIMS: CALL GETBASICPARAMS     ;	;
1017)   24DF C3 E8 4C    		 JP XEQ	;
1019)   24E2 C3 1F 23    		@MYOS_GETIMS: JP RTC_GET	;
1021)   24E5 CD F0 46    		SNTX_ERROR: CALL EXTERR	;
1022)   24E8 53 79 6E 74 		 DEFM  "Syntax error"	;
1022)   24EC 61 78 20 65 		 DEFM  "Syntax error"	;
1022)   24F0 72 72 6F 72 		 DEFM  "Syntax error"	;
1023)   24F4 00          		 DEFB    0	;
1030)   24F5 CD 0F 03    		GETKEY: CALL GET_CHAR	;
1031)   24F8 37          		 SCF	;
1032)   24F9 C9          		 RET	;
1038)   24FA CD FC 02    		 CALL GET_CHARNW	;
1039)   24FD 3F          		 CCF	;
1040)   24FE FE 00       		 CP 0	;
1041)   2500 C8          		 RET Z	;
1042)   2501 37          		 SCF	;
1043)   2502 C9          		 RET	;
1045)   2503 F5          		@CHKCURS: PUSH AF	;
1046)   2504 3A A7 FE    		 LD A, (TIMECTR)	;
1047)   2507 CB 67       		 BIT 4, A	;
1048)   2509 28 11       		 JR Z, CCSHOW        ;IF SET SHOW	;IF SET SHOW
1049)   250B 3A 11 FE    		CCHIDE: LD A, (CURSSTAT)	;
1050)   250E CB 4F       		 BIT 1, A	;
1051)   2510 20 19       		 JR NZ, CCEX        ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
1052)   2512 CB CF       		 SET 1, A	;
1053)   2514 32 11 FE    		 LD (CURSSTAT), A	;
1054)   2517 CD B5 16    		 CALL LCD_RMVCURS	;
1055)   251A 18 0F       		 JR CCEX	;
1056)   251C 3A 11 FE    		CCSHOW: LD A, (CURSSTAT)	;
1057)   251F CB 4F       		 BIT 1, A	;
1058)   2521 28 08       		 JR Z, CCEX        ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
1059)   2523 CB 8F       		 RES 1, A	;
1060)   2525 32 11 FE    		 LD (CURSSTAT), A	;
1061)   2528 CD BA 16    		 CALL LCD_PRNCURS	;
1063)   252B F1          		CCEX: POP AF	;
1064)   252C C9          		 RET	;
1075)   252D 3A 00 FE    		 LD A, (FLAGS)	;
1076)   2530 CB 5F       		 BIT 3, A        ;EDIT MODE?	;EDIT MODE?
1077)   2532 28 09       		 JR Z, OSLIN1	;
1078)   2534 CB 9F       		 RES 3, A	;
1079)   2536 32 00 FE    		 LD (FLAGS), A	;
1080)   2539 2A 12 FE    		 LD HL, (EDPTR)	;
1081)   253C BD          		 CP L	;
1082)   253D 3E 0D       		OSLIN1: LD A, CR	;
1083)   253F 77          		 LD (HL), A	;
1084)   2540 C4 53 1E    		 CALL NZ, MYOS_OSWRCH	;
1085)   2543 2E 00       		 LD L, 0	;
1086)   2545 4D          		 LD C, L        ;REPEAT FLAG	;REPEAT FLAG
1087)   2546 28 20       		 JR Z, OSWAIT        ;SUPPRESS UNWANTED SPACE	;SUPPRESS UNWANTED SPACE
1088)   2548 06 00       		UPDATE: LD B, 0	;
1089)   254A 7E          		UPD1: LD A, (HL)	;
1090)   254B 04          		 INC B	;
1091)   254C 23          		 INC HL	;
1092)   254D FE 0D       		 CP CR	;
1093)   254F F5          		 PUSH AF	;
1094)   2550 E5          		 PUSH HL	;
1095)   2551 5F          		 LD E, A	;
1096)   2552 C4 07 20    		 CALL NZ, WRCH        ;FAST WRCH	;FAST WRCH
1097)   2555 E1          		 POP HL	;
1098)   2556 F1          		 POP AF	;
1099)   2557 20 F1       		 JR NZ, UPD1	;
1100)   2559 3E 20       		 LD A, ' '	;
1101)   255B CD 53 1E    		 CALL MYOS_OSWRCH	;
1102)   255E 1E 08       		 LD E, BS	;
1103)   2560 E5          		UPD2: PUSH HL	;
1104)   2561 CD 07 20    		 CALL WRCH        ;FAST WRCH	;FAST WRCH
1105)   2564 E1          		 POP HL	;
1106)   2565 2B          		 DEC HL	;
1107)   2566 10 F8       		 DJNZ UPD2	;
1108)   2568 79          		OSWAIT: LD A, C	;
1109)   2569 05          		 DEC B	;
1110)   256A 28 01       		 JR Z, LIMIT	;
1111)   256C B7          		 OR A         ;REPEAT COMMAND?	;REPEAT COMMAND?
1112)   256D CC 46 1E    		LIMIT: CALL Z, KEYGET        ;READ KEYBOARD	;READ KEYBOARD
1113)   2570 4F          		 LD C, A        ;SAVE FOR REPEAT	;SAVE FOR REPEAT
1114)   2571 11 68 25    		 LD DE, OSWAIT        ;RETURN ADDRESS	;RETURN ADDRESS
1115)   2574 D5          		 PUSH DE	;
1116)   2575 3A 00 FE    		 LD A, (FLAGS)	;
1117)   2578 B7          		 OR A         ;TEST FOR ESCAPE	;TEST FOR ESCAPE
1118)   2579 79          		 LD A, C	;
1119)   257A FA BC 25    		 JP M, OSEXIT	;
1120)   257D FE 0B       		 CP 11         ;CURSOR UP     (IX-11)	;CURSOR UP     (IX-11)
1121)   257F CA 00 26    		 JP Z, LEFT	;
1122)   2582 FE 0A       		 CP 10         ;CURSOR DOWN   (IX-10)	;CURSOR DOWN   (IX-10)
1123)   2584 CA 33 26    		 JP Z, RIGHT	;
1124)   2587 06 00       		 LD B, 0	;
1125)   2589 FE 05       		 CP 5         ;CLEAR LEFT    (IX-5)	;CLEAR LEFT    (IX-5)
1126)   258B 28 72       		 JR Z, BACK	;
1127)   258D FE 09       		 CP 9         ;START OF LINE (IX-9)	;START OF LINE (IX-9)
1128)   258F 28 6F       		 JR Z, LEFT	;
1129)   2591 FE 07       		 CP 7         ;CLEAR RIGHT   (IX-7)	;CLEAR RIGHT   (IX-7)
1130)   2593 28 76       		 JR Z, DELETE	;
1131)   2595 FE 08       		 CP 8         ;END OF LINE   (IX-8)	;END OF LINE   (IX-8)
1132)   2597 CA 33 26    		 JP Z, RIGHT	;
1133)   259A 0E 00       		 LD C, 0        ;INHIBIT REPEAT	;INHIBIT REPEAT
1134)   259C FE 10       		 CP 'P' AND 1FH	;
1135)   259E CA 2A 20    		 JP Z, TOGGLE	;
1136)   25A1 FE 06       		 CP 6         ;DELETE LEFT   (IX-6)	;DELETE LEFT   (IX-6)
1137)   25A3 28 5A       		 JR Z, BACK	;
1138)   25A5 FE 04       		 CP 4         ;CURSOR LEFT   (IX-4)	;CURSOR LEFT   (IX-4)
1139)   25A7 28 57       		 JR Z, LEFT	;
1140)   25A9 FE 02       		 CP 2         ;DELETE RIGHT  (IX-2)	;DELETE RIGHT  (IX-2)
1141)   25AB 28 5E       		 JR Z, DELETE	;
1142)   25AD FE 01       		 CP 1         ;INSERT SPACE  (IX-1)	;INSERT SPACE  (IX-1)
1143)   25AF 28 6E       		 JR Z, INSERT	;
1144)   25B1 FE 03       		 CP 3         ;CURSOR RIGHT  (IX-3)	;CURSOR RIGHT  (IX-3)
1145)   25B3 28 7E       		 JR Z, RIGHT	;
1146)   25B5 FE 20       		 CP ' '         ;PRINTING CHARACTER	;PRINTING CHARACTER
1147)   25B7 30 7F       		 JR NC, SAVECH	;
1148)   25B9 FE 0D       		 CP CR         ;ENTER LINE	;ENTER LINE
1149)   25BB C0          		 RET NZ	;
1150)   25BC 7E          		OSEXIT: LD A, (HL)	;
1151)   25BD CD 53 1E    		 CALL MYOS_OSWRCH       ;WRITE REST OF LINE	;WRITE REST OF LINE
1152)   25C0 23          		 INC HL	;
1153)   25C1 D6 0D       		 SUB CR	;
1154)   25C3 20 F7       		 JR NZ, OSEXIT	;
1155)   25C5 D1          		 POP DE         ;DITCH RETURN ADDRESS	;DITCH RETURN ADDRESS
1156)   25C6 B9          		 CP C	;
1157)   25C7 C2 67 20    		 JP NZ, ABORT        ;ESCAPE	;ESCAPE
1158)   25CA 3E 0A       		 LD A, LF	;
1159)   25CC CD 53 1E    		 CALL MYOS_OSWRCH	;
1160)   25CF ED 5B F4 FD 		 LD DE, (ERRLIN)	;
1161)   25D3 AF          		 XOR A	;
1162)   25D4 6F          		 LD L, A	;
1163)   25D5 22 12 FE    		 LD (EDPTR), HL	;
1164)   25D8 BA          		 CP D	;
1165)   25D9 C0          		 RET NZ	;
1166)   25DA BB          		 CP E	;
1167)   25DB C0          		 RET NZ	;
1168)   25DC 11 4C 26    		 LD DE, EDITST	;
1169)   25DF 06 04       		 LD B, 4	;
1170)   25E1 1A          		CMPARE: LD A, (DE)	;
1171)   25E2 BE          		 CP (HL)	;
1172)   25E3 3E 00       		 LD A, 0	;
1173)   25E5 C0          		 RET NZ	;
1174)   25E6 23          		 INC HL	;
1175)   25E7 13          		 INC DE	;
1176)   25E8 7E          		 LD A, (HL)	;
1177)   25E9 FE 2E       		 CP '.'	;
1178)   25EB 28 02       		 JR Z, ABBR	;
1179)   25ED 10 F2       		 DJNZ CMPARE	;
1180)   25EF AF          		ABBR: XOR A	;
1181)   25F0 47          		 LD B, A	;
1182)   25F1 4D          		 LD C, L	;
1183)   25F2 6F          		 LD L, A	;
1184)   25F3 11 50 26    		 LD DE, LISTST	;
1185)   25F6 EB          		 EX DE, HL	;
1186)   25F7 ED B0       		 LDIR	;
1187)   25F9 21 00 FE    		 LD HL, FLAGS	;
1188)   25FC CB DE       		 SET 3, (HL)	;
1189)   25FE C9          		 RET	;
1191)   25FF 37          		BACK: SCF         ;DELETE LEFT	;DELETE LEFT
1192)   2600 2C          		LEFT: INC L         ;CURSOR LEFT	;CURSOR LEFT
1193)   2601 2D          		 DEC L	;
1194)   2602 28 45       		 JR Z, STOP	;
1195)   2604 3E 08       		 LD A, BS	;
1196)   2606 CD 53 1E    		 CALL MYOS_OSWRCH	;
1197)   2609 2D          		 DEC L	;
1198)   260A D0          		 RET NC	;
1199)   260B 7E          		DELETE: LD A, (HL)        ;DELETE RIGHT	;DELETE RIGHT
1200)   260C FE 0D       		 CP CR	;
1201)   260E 28 39       		 JR Z, STOP	;
1202)   2610 54          		 LD D, H	;
1203)   2611 5D          		 LD E, L	;
1204)   2612 13          		DEL1: INC DE	;
1205)   2613 1A          		 LD A, (DE)	;
1206)   2614 1B          		 DEC DE	;
1207)   2615 12          		 LD (DE), A	;
1208)   2616 13          		 INC DE	;
1209)   2617 FE 0D       		 CP CR	;
1210)   2619 20 F7       		 JR NZ, DEL1	;
1211)   261B D1          		DEL2: POP DE         ;DITCH	;DITCH
1212)   261C C3 48 25    		 JP UPDATE	;
1214)   261F 3E 0D       		INSERT: LD A, CR        ;INSERT SPACE	;INSERT SPACE
1215)   2621 BE          		 CP (HL)	;
1216)   2622 C8          		 RET Z	;
1217)   2623 54          		 LD D, H	;
1218)   2624 1E FE       		 LD E, 254	;
1219)   2626 13          		INS1: INC DE	;
1220)   2627 12          		 LD (DE), A	;
1221)   2628 1B          		 DEC DE	;
1222)   2629 7B          		 LD A, E	;
1223)   262A BD          		 CP L	;
1224)   262B 1B          		 DEC DE	;
1225)   262C 1A          		 LD A, (DE)	;
1226)   262D 20 F7       		 JR NZ, INS1	;
1227)   262F 36 20       		 LD (HL), ' '	;
1228)   2631 18 E8       		 JR DEL2	;
1230)   2633 7E          		RIGHT: LD A, (HL)        ;CURSOR RIGHT	;CURSOR RIGHT
1231)   2634 FE 0D       		 CP CR	;
1232)   2636 28 11       		 JR Z, STOP	;
1233)   2638 56          		SAVECH: LD D, (HL)        ;PRINTING CHARACTER	;PRINTING CHARACTER
1234)   2639 77          		 LD (HL), A	;
1235)   263A 2C          		 INC L	;
1236)   263B 28 09       		 JR Z, WONTGO        ;LINE TOO LONG	;LINE TOO LONG
1237)   263D CD 53 1E    		 CALL MYOS_OSWRCH	;
1238)   2640 3E 0D       		 LD A, CR	;
1239)   2642 BA          		 CP D	;
1240)   2643 C0          		 RET NZ	;
1241)   2644 77          		 LD (HL), A	;
1242)   2645 C9          		 RET	;
1244)   2646 2D          		WONTGO: DEC L	;
1245)   2647 36 0D       		 LD (HL), CR	;
1248)   2649 0E 00       		STOP: LD C, 0        ;STOP REPEAT	;STOP REPEAT
1249)   264B C9          		 RET	;
1252)   264C 45 44 49 54 		EDITST: DEFM  "EDIT"	;
1253)   2650 4C 49 53 54 		LISTST: DEFM  "LIST"	;
 18)   2654 C9          		 RET	;
 21)   2655 F5          		DELAYMICROSEC: PUSH AF	;
 22)   2656 D5          		 PUSH DE	;
 23)   2657 1B          		 DEC DE	;
 24)   2658 D1          		 POP DE	;
 25)   2659 F1          		 POP AF	;
 26)   265A C9          		 RET	;
 29)   265B CD 55 26    		S21: CALL DELAYMICROSEC	;
 30)   265E 10 FB       		 DJNZ S21	;
 31)   2660 C9          		 RET	;
 35)   2661 F5          		DELAYMILISEC: PUSH AF	;
 36)   2662 D5          		 PUSH DE	;
 37)   2663 11 2C 01    		 LD DE, 300       ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 38)   2666 1B          		DEL1: DEC DE	;
 39)   2667 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 40)   2668 B3          		 OR E	;
 41)   2669 20 FB       		 JR NZ, DEL1	;
 42)   266B D1          		 POP DE	;
 43)   266C F1          		 POP AF	;
 44)   266D C9          		 RET	;
 46)   266E 06 50       		DEL2: LD B, 80	;
 48)   2670 CD 61 26    		S1: CALL DELAYMILISEC	;
 49)   2673 10 FB       		 DJNZ S1	;
 50)   2675 C9          		 RET	;
 55)   2676 C5          		@DELAYSEC: PUSH BC	;
 56)   2677 01 E8 03    		 LD BC, 1000	;
 57)   267A C5          		MYDLAGN: PUSH BC	;
 58)   267B CD 61 26    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 59)   267E C1          		 POP BC	;
 60)   267F 0B          		 DEC BC	;
 61)   2680 78          		 LD A, B	;
 62)   2681 B1          		 OR C	;
 63)   2682 20 F6       		 JR NZ, MYDLAGN	;
 64)   2684 C1          		 POP BC	;
 65)   2685 10 EF       		 DJNZ DELAYSEC	;
 66)   2687 C9          		 RET	;
 71)   2688 F5          		 OUTASC PUSH AF	;
 72)   2689 D5          		 PUSH DE	;
 73)   268A CD BD 26    		 CALL B2Bcd	;
 74)   268D D1          		 POP DE	;
 75)   268E CD E3 26    		 CALL BCD2HA	;
 76)   2691 F1          		 POP AF	;
 77)   2692 C9          		 RET	;
 91)   2693 B7          		BCD2BN: OR A	;
 92)   2694 47          		 LD B, A	;
 93)   2695 E6 F0       		 AND $F0	;
 94)   2697 0F          		 RRCA	;
 95)   2698 4F          		 LD C, A	;
 96)   2699 0F          		 RRCA	;
 97)   269A 0F          		 RRCA	;
 98)   269B 81          		 ADD A, C	;
 99)   269C 4F          		 LD C, A	;
100)   269D 78          		 LD A, B	;
101)   269E E6 0F       		 AND $0F	;
102)   26A0 81          		 ADD A, C	;
103)   26A1 C9          		 RET	;
118)   26A2 26 FF       		BN2BCD: LD H, $FF	;
119)   26A4 24          		D100LP: INC H	;
120)   26A5 D6 64       		 SUB 100	;
121)   26A7 30 FB       		 JR NC, D100LP	;
122)   26A9 C6 64       		 ADD A, 100	;
123)   26AB 2E FF       		 LD L, $FF	;
124)   26AD 2C          		D10LP: INC L	;
125)   26AE D6 0A       		 SUB 10	;
126)   26B0 30 FB       		 JR NC, D10LP	;
127)   26B2 C6 0A       		 ADD A, 10	;
128)   26B4 4F          		 LD C, A	;
129)   26B5 7D          		 LD A, L	;
130)   26B6 07          		 RLCA	;
131)   26B7 07          		 RLCA	;
132)   26B8 07          		 RLCA	;
133)   26B9 07          		 RLCA	;
134)   26BA B1          		 OR C	;
135)   26BB 6F          		 LD L, A	;
136)   26BC C9          		 RET	;
150)   26BD 01 00 10    		 LD BC, 16 * 256 + 0      ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
151)   26C0 11 00 00    		 LD DE, 0	;
153)   26C3 29          		 ADD HL, HL	;
154)   26C4 7B          		 LD A, E	;
155)   26C5 8F          		 ADC A, A	;
156)   26C6 27          		 DAA	;
157)   26C7 5F          		 LD E, A	;
158)   26C8 7A          		 LD A, D	;
159)   26C9 8F          		 ADC A, A	;
160)   26CA 27          		 DAA	;
161)   26CB 57          		 LD D, A	;
162)   26CC 79          		 LD A, C	;
163)   26CD 8F          		 ADC A, A	;
164)   26CE 27          		 DAA	;
165)   26CF 4F          		 LD C, A	;
166)   26D0 10 F1       		 DJNZ cvtLp	;
167)   26D2 EB          		 EX DE, HL	;
168)   26D3 C9          		 RET	;
182)   26D4 B7          		BCD2BN: OR A	;
183)   26D5 47          		 LD B, A	;
184)   26D6 E6 F0       		 AND $F0	;
185)   26D8 0F          		 RRCA	;
186)   26D9 4F          		 LD C, A	;
187)   26DA 0F          		 RRCA	;
188)   26DB 0F          		 RRCA	;
189)   26DC 81          		 ADD A, C	;
190)   26DD 4F          		 LD C, A	;
191)   26DE 78          		 LD A, B	;
192)   26DF E6 0F       		 AND $0F	;
193)   26E1 81          		 ADD A, C	;
194)   26E2 C9          		 RET	;
206)   26E3 79          		 LD A, C	;
207)   26E4 CD 10 27    		 CALL cvtUN	;
208)   26E7 79          		 LD A, C	;
209)   26E8 CD 14 27    		 CALL cvtLN	;
210)   26EB 7C          		 LD A, H	;
211)   26EC CD 10 27    		 CALL cvtUN	;
212)   26EF 7C          		 LD A, H	;
213)   26F0 CD 14 27    		 CALL cvtLN	;
214)   26F3 7D          		 LD A, L	;
215)   26F4 CD 10 27    		 CALL cvtUN	;
216)   26F7 7D          		 LD A, L	;
217)   26F8 18 1A       		 JR cvtLN	;
219)   26FA 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
220)   26FB 1F          		 RRA	;
221)   26FC 1F          		 RRA	;
222)   26FD 1F          		 RRA	;
224)   26FE E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
225)   2700 C6 90       		 ADD A, 90h       ; old trick	; old trick
226)   2702 27          		 DAA        ; for converting	; for converting
227)   2703 CE 40       		 ADC A, 40h       ; one nibble	; one nibble
228)   2705 27          		 DAA        ; to hex ASCII	; to hex ASCII
229)   2706 12          		 LD (DE), A	;
230)   2707 13          		 INC DE	;
231)   2708 C9          		 RET	;
243)   2709 7D          		 LD A, L	;
244)   270A CD FA 26    		 CALL cvtUN	;
245)   270D 7D          		 LD A, L	;
246)   270E 18 EE       		 JR cvtLN	;
248)   2710 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
249)   2711 1F          		 RRA	;
250)   2712 1F          		 RRA	;
251)   2713 1F          		 RRA	;
253)   2714 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
254)   2716 C6 90       		 ADD A, 90h       ; old trick	; old trick
255)   2718 27          		 DAA        ; for converting	; for converting
256)   2719 CE 40       		 ADC A, 40h       ; one nibble	; one nibble
257)   271B 27          		 DAA        ; to hex ASCII	; to hex ASCII
258)   271C 12          		 LD (DE), A	;
259)   271D 13          		 INC DE	;
260)   271E C9          		 RET	;
277)   271F F5          		 PUSH AF        ; 11 T-states	; 11 T-states
279)   2720 ED 44       		 NEG         ; 8 T-states	; 8 T-states
280)   2722 ED 44       		 NEG         ; 8 T-states	; 8 T-states
281)   2724 ED 44       		 NEG         ; 8 T-states	; 8 T-states
282)   2726 ED 44       		 NEG         ; 8 T-states	; 8 T-states
283)   2728 0B          		 DEC BC         ; 6 T-states	; 6 T-states
284)   2729 79          		 LD A, C        ; 9 T-states	; 9 T-states
285)   272A B0          		 OR B         ; 4 T-states	; 4 T-states
286)   272B C2 20 27    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
287)   272E F1          		 POP AF         ; 10 T-states	; 10 T-states
288)   272F C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
  6)   2730 21 00 00    		@Mult16: ld hl, 0	;
  7)   2733 78          		 ld a, b	;
  8)   2734 06 10       		 ld b, 16	;
 10)   2736 29          		 add hl, hl	;
 11)   2737 CB 21       		 sla c	;
 12)   2739 17          		 rla	;
 13)   273A 30 01       		 jr nc, Mult16_NoAdd	;
 14)   273C 19          		 add hl, de	;
 16)   273D 10 F7       		 djnz Mult16_Loop	;
 17)   273F C9          		 ret	;
 23)   2740 D5          		@Mult32: PUSH DE	;
 24)   2741 79          		 ld a, c	;
 25)   2742 48          		 ld c, b	;
 26)   2743 21 00 00    		 ld hl, 0	;
 27)   2746 06 10       		 ld b, 16	;
 29)   2748 29          		 add hl, hl	;
 30)   2749 17          		 rla	;
 31)   274A CB 11       		 rl c	;
 32)   274C 30 07       		 jr nc, Mult32_NoAdd	;
 33)   274E 19          		 add hl, de	;
 34)   274F CE 00       		 adc a, 0	;
 35)   2751 D2 55 27    		 jp nc, Mult32_NoAdd	;
 36)   2754 0C          		 inc c	;
 38)   2755 10 F1       		 djnz Mult32_Loop	;
 39)   2757 41          		 ld b, c	;
 40)   2758 4F          		 ld c, a	;
 41)   2759 D1          		 POP DE	;
 42)   275A C9          		 ret	;
 50)   275B 19          		 ADD HL, DE        ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
 51)   275C D9          		 EXX	;
 52)   275D ED 5A       		 ADC HL, DE        ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
 53)   275F D9          		 EXX	;
 56)   2760 C9          		 RET	;
 66)   2761 11 40 00    		 ld de, $0040	;
 67)   2764 7D          		 ld a, l	;
 68)   2765 6C          		 ld l, h	;
 69)   2766 62          		 ld h, d	;
 70)   2767 B7          		 or a	;
 71)   2768 06 08       		 ld b, 8	;
 73)   276A ED 52       		 sbc hl, de	;
 74)   276C 30 01       		 jr nc, Sqr16_Skip	;
 75)   276E 19          		 add hl, de	;
 77)   276F 3F          		 ccf	;
 78)   2770 CB 12       		 rl d	;
 79)   2772 87          		 add a, a	;
 80)   2773 ED 6A       		 adc hl, hl	;
 81)   2775 87          		 add a, a	;
 82)   2776 ED 6A       		 adc hl, hl	;
 83)   2778 10 F0       		 djnz Sqr16_Loop	;
 84)   277A C9          		 ret	;
  9)   FE00 00          		 @FLAGS DEFS 1        ; Flags: B7=ESC PRESSED,B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 10)   FE01 00 00       		 @FCOLOR DEFS 2       ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 11)   FE03 00 00       		 @BCOLOR DEFS 2       ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 12)   FE05 00 00       		 @FGRCOL DEFS 2       ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 13)   FE07 00 00       		 @BGRCOL DEFS 2       ;BACKGROUND COLOR FOR GRAPHICS	;BACKGROUND COLOR FOR GRAPHICS
 14)   FE09 00 00       		 @FCOLTM DEFS 2       ;TEMP FOREGROUND COLOR	;TEMP FOREGROUND COLOR
 15)   FE0B 00 00       		 @BCOLTM DEFS 2       ;TEMP BACKGROUND COLOR	;TEMP BACKGROUND COLOR
 16)   FE0D 00          		 @CURSORX DEFS 1       ;0-79	;0-79
 17)   FE0E 00          		 @CURSORY DEFS 1       ;0-47	;0-47
 18)   FE0F 00          		 @SCRLN DEFS 1        ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 19)   FE10 00          		 @LASTCHAR DEFS 1      ;	;
 20)   FE11 00          		 @CURSSTAT DEFS 1       ;IF BIT 0 SET THEN SHOW ELSE HIDE,IF BIT 1 SET THEN VISIBLE ELSE HIDDEN	;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN
 21)   FE12 00 00       		 @EDPTR DEFS 2	;
 22)   FE14 00          		 @OPTVAL DEFS 1	;
 23)   FE15 00          		 @INKEY DEFS 1	;
 24)   FE16 00          		 @VDUMODE DEFS 1       ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 25)   FE17 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE23 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE27 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE33 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 26)   FE37 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE43 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE47 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE53 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 27)   FE57 00 00       		 @GR_LASTX3 DEFS 2	;
 28)   FE59 00 00       		 @GR_LASTY3 DEFS 2	;
 29)   FE5B 00 00       		 @GR_LASTX2 DEFS 2	;
 30)   FE5D 00 00       		 @GR_LASTY2 DEFS 2	;
 31)   FE5F 00 00       		 @GR_LASTX DEFS 2	;
 32)   FE61 00 00       		 @GR_LASTY DEFS 2	;
 33)   FE63 00 00       		 @GR_PARAM1 DEFS 2	;
 34)   FE65 00 00       		 @GR_PARAM2 DEFS 2	;
 35)   FE67 00 00       		 @GR_PARAM3 DEFS 2	;
 36)   FE69 00 00       		 @GR_PARAM4 DEFS 2	;
 38)   FE6B 00 00       		 @FILL_X DEFS 2	;
 39)   FE6D 00 00       		 @FILL_Y DEFS 2	;
 40)   FE6F 00 00       		 @FILL_L DEFS 2	;
 41)   FE71 00 00       		 @FILL_X1 DEFS 2	;
 42)   FE73 00 00       		 @FILL_X2 DEFS 2	;
 43)   FE75 00 00       		 @FILL_DY DEFS 2	;
 44)   FE77 00 00       		 @FILL_Q DEFS 2        ;START OF QUEUE	;START OF QUEUE
 45)   FE79 00 00       		 @FILL_IDX DEFS 2       ;INDEX OF QUEUE	;INDEX OF QUEUE
 46)   FE7B 00 00       		 @FILL_PY DEFS 2       ;FOR PUSH/POP	;FOR PUSH/POP
 47)   FE7D 00 00       		 @FILL_PXL DEFS 2	;
 48)   FE7F 00 00       		 @FILL_PXR DEFS 2	;
 49)   FE81 00 00       		 @FILL_PDY DEFS 2	;
 50)   FE83 00 00       		 @FILL_OV DEFS 2       ;OLD COLOR	;OLD COLOR
 51)   FE85 00 00       		 @FILL_OLDSP DEFS 2      ; OLD SP	; OLD SP
 52)   FE87 00          		 @LCD_DSPCTRL DEFS 1	;
 53)   FE88 00          		 @LCD_DSPMODE DEFS 1	;
 54)   FE89 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE8D 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE91 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE95 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE99 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 55)   FE9D 00          		 @FFSTAT DEFS 1        ;FOR OUTPUT FLIP FLOPS DEVEPR,DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 56)   FE9E 00          		 @KEYCTR DEFS 1        ;FOR USB KEYBOARD	;FOR USB KEYBOARD
 57)   FE9F 00          		 @SERERR DEFS 1       ;	;
 58)   FEA0 00          		 @SERER2 DEFS 1        ;AT RAM ADDRESS	;AT RAM ADDRESS
 59)   FEA1 00          		 @DISPCT DEFS 1        ;	;
 60)   FEA2 00          		 @LCDCX DEFS 1        ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 61)   FEA3 00          		 @LCDCY DEFS 1        ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 62)   FEA4 00 00       		 @PRGEX DEFS 2        ;2 BYTES	;2 BYTES
 63)   FEA6 00          		 @TVSTAT DEFS 1        ;1 BYTE	;1 BYTE
 64)   FEA7 00 00 00 00 		 @TIMECTR DEFS 4	;
 65)   FEAB 00          		 @INT2TE DEFB 0	;
 66)   FEAC 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB0 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB4 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB8 00          		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 67)   FEB9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEBD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FECD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEDD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 68)   FEE1 00 00 00 00 		 @STRGCMD DEFS 4	;
 69)   FEE5 00          		 @FID DEFS 1	;
 70)   FEE6 00          		 @SPC DEFS 1	;
