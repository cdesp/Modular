  5)   0000 00          		 NOP	;
  6)   0001 C3 00 02    		 JP START	;
  7)   0004 C3 A2 02    		 JP MENU	;
  8)   0007 25          		 VERSION DEFB $25 ; AT ADDR=7 VER 2.4	; AT ADDR=7 VER 2.4
  9)   0008 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   000C 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0010 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0014 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0018 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   001C 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0020 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0024 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0028 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   002C 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0030 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0034 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
 12)   0038 C3 7A 05    		 JP INTSER	;
 15)   003B 00 00 00 00 		 ALIGN 256	;
 15)   003F 00 00 00 00 		 ALIGN 256	;
 15)   0043 00 00 00 00 		 ALIGN 256	;
 15)   0047 00 00 00 00 		 ALIGN 256	;
 15)   004B 00 00 00 00 		 ALIGN 256	;
 15)   004F 00 00 00 00 		 ALIGN 256	;
 15)   0053 00 00 00 00 		 ALIGN 256	;
 15)   0057 00 00 00 00 		 ALIGN 256	;
 15)   005B 00 00 00 00 		 ALIGN 256	;
 15)   005F 00 00 00 00 		 ALIGN 256	;
 15)   0063 00 00 00 00 		 ALIGN 256	;
 15)   0067 00 00 00 00 		 ALIGN 256	;
 15)   006B 00 00 00 00 		 ALIGN 256	;
 15)   006F 00 00 00 00 		 ALIGN 256	;
 15)   0073 00 00 00 00 		 ALIGN 256	;
 15)   0077 00 00 00 00 		 ALIGN 256	;
 15)   007B 00 00 00 00 		 ALIGN 256	;
 15)   007F 00 00 00 00 		 ALIGN 256	;
 15)   0083 00 00 00 00 		 ALIGN 256	;
 15)   0087 00 00 00 00 		 ALIGN 256	;
 15)   008B 00 00 00 00 		 ALIGN 256	;
 15)   008F 00 00 00 00 		 ALIGN 256	;
 15)   0093 00 00 00 00 		 ALIGN 256	;
 15)   0097 00 00 00 00 		 ALIGN 256	;
 15)   009B 00 00 00 00 		 ALIGN 256	;
 15)   009F 00 00 00 00 		 ALIGN 256	;
 15)   00A3 00 00 00 00 		 ALIGN 256	;
 15)   00A7 00 00 00 00 		 ALIGN 256	;
 15)   00AB 00 00 00 00 		 ALIGN 256	;
 15)   00AF 00 00 00 00 		 ALIGN 256	;
 15)   00B3 00 00 00 00 		 ALIGN 256	;
 15)   00B7 00 00 00 00 		 ALIGN 256	;
 15)   00BB 00 00 00 00 		 ALIGN 256	;
 15)   00BF 00 00 00 00 		 ALIGN 256	;
 15)   00C3 00 00 00 00 		 ALIGN 256	;
 15)   00C7 00 00 00 00 		 ALIGN 256	;
 15)   00CB 00 00 00 00 		 ALIGN 256	;
 15)   00CF 00 00 00 00 		 ALIGN 256	;
 15)   00D3 00 00 00 00 		 ALIGN 256	;
 15)   00D7 00 00 00 00 		 ALIGN 256	;
 15)   00DB 00 00 00 00 		 ALIGN 256	;
 15)   00DF 00 00 00 00 		 ALIGN 256	;
 15)   00E3 00 00 00 00 		 ALIGN 256	;
 15)   00E7 00 00 00 00 		 ALIGN 256	;
 15)   00EB 00 00 00 00 		 ALIGN 256	;
 15)   00EF 00 00 00 00 		 ALIGN 256	;
 15)   00F3 00 00 00 00 		 ALIGN 256	;
 15)   00F7 00 00 00 00 		 ALIGN 256	;
 15)   00FB 00 00 00 00 		 ALIGN 256	;
 15)   00FF 00          		 ALIGN 256	;
 18)   0100 C3 DD 1D    		     JP MYOS_CLRSCN	;
 19)   0103 C3 E0 1D    		     JP MYOS_PUTIME	;
 20)   0106 C3 F1 1D    		     JP MYOS_GETIME	;
 21)   0109 C3 02 1E    		     JP MYOS_PUTCSR	;
 22)   010C C3 14 1E    		     JP MYOS_GETCSR	;
 23)   010F C3 23 1E    		     JP MYOS_OSRDCH	;
 24)   0112 C3 E0 1F    		     JP MYOS_PROMPT	;
 25)   0115 C3 2E 1E    		     JP MYOS_OSWRCH	;
 26)   0118 C3 0E 20    		     JP MYOS_OSKEY	;
 27)   011B C3 4A 20    		     JP MYOS_OSINIT	;
 28)   011E C3 8A 24    		     JP MYOS_OSLINE	;
 29)   0121 C3 14 21    		     JP MYOS_OSCLI	;
 30)   0124 C3 E2 23    		     JP MYOS_OSBPUT 	;
 31)   0127 C3 E2 23    		     JP MYOS_OSBGET 	;
 32)   012A C3 E2 23    		     JP MYOS_OSSTAT 	;
 33)   012D C3 E2 23    		     JP MYOS_OSSHUT 	;
 34)   0130 C3 E2 23    		     JP MYOS_OSOPEN 	;
 35)   0133 C3 E2 23    		     JP MYOS_OSCALL 	;
 36)   0136 C3 5E 1D    		     JP MYOS_OSSAVE 	;
 37)   0139 C3 87 1D    		     JP MYOS_OSLOAD 	;
 38)   013C C3 E2 23    		     JP MYOS_GETPTR 	;
 39)   013F C3 E2 23    		     JP MYOS_PUTPTR 	;
 40)   0142 C3 E2 23    		     JP MYOS_GETEXT 	;
 41)   0145 C3 E5 23    		     JP MYOS_RESET 	;
 42)   0148 C3 3A 20    		     JP MYOS_TRAP	;
 43)   014B C3 3D 20    		     JP MYOS_LTRAP  	;
 44)   014E C3 ED 23    		     JP MYOS_CLG	;
 45)   0151 C3 05 24    		     JP MYOS_COLOUR	;
 46)   0154 C3 10 24    		     JP MYOS_DRAW	;
 47)   0157 C3 36 24    		     JP MYOS_ENVEL	;
 48)   015A C3 F9 23    		     JP MYOS_GCOL	;
 49)   015D C3 E6 23    		     JP MYOS_MODE	;
 50)   0160 C3 1A 24    		     JP MYOS_MOVE	;
 51)   0163 C3 24 24    		     JP MYOS_PLOT	;
 52)   0166 C3 36 24    		     JP MYOS_SOUND	;
 53)   0169 C3 36 24    		     JP MYOS_ADVAL	;
 54)   016C C3 2E 24    		     JP MYOS_POINT	;
 55)   016F C3 3C 24    		     JP MYOS_GETIMS	;
 56)   0172 C3 36 24    		     JP MYOS_PUTIMS        	;
 58)   0175 00 00 00 00 		 ALIGN 256     	;
 58)   0179 00 00 00 00 		 ALIGN 256     	;
 58)   017D 00 00 00 00 		 ALIGN 256     	;
 58)   0181 00 00 00 00 		 ALIGN 256     	;
 58)   0185 00 00 00 00 		 ALIGN 256     	;
 58)   0189 00 00 00 00 		 ALIGN 256     	;
 58)   018D 00 00 00 00 		 ALIGN 256     	;
 58)   0191 00 00 00 00 		 ALIGN 256     	;
 58)   0195 00 00 00 00 		 ALIGN 256     	;
 58)   0199 00 00 00 00 		 ALIGN 256     	;
 58)   019D 00 00 00 00 		 ALIGN 256     	;
 58)   01A1 00 00 00 00 		 ALIGN 256     	;
 58)   01A5 00 00 00 00 		 ALIGN 256     	;
 58)   01A9 00 00 00 00 		 ALIGN 256     	;
 58)   01AD 00 00 00 00 		 ALIGN 256     	;
 58)   01B1 00 00 00 00 		 ALIGN 256     	;
 58)   01B5 00 00 00 00 		 ALIGN 256     	;
 58)   01B9 00 00 00 00 		 ALIGN 256     	;
 58)   01BD 00 00 00 00 		 ALIGN 256     	;
 58)   01C1 00 00 00 00 		 ALIGN 256     	;
 58)   01C5 00 00 00 00 		 ALIGN 256     	;
 58)   01C9 00 00 00 00 		 ALIGN 256     	;
 58)   01CD 00 00 00 00 		 ALIGN 256     	;
 58)   01D1 00 00 00 00 		 ALIGN 256     	;
 58)   01D5 00 00 00 00 		 ALIGN 256     	;
 58)   01D9 00 00 00 00 		 ALIGN 256     	;
 58)   01DD 00 00 00 00 		 ALIGN 256     	;
 58)   01E1 00 00 00 00 		 ALIGN 256     	;
 58)   01E5 00 00 00 00 		 ALIGN 256     	;
 58)   01E9 00 00 00 00 		 ALIGN 256     	;
 58)   01ED 00 00 00 00 		 ALIGN 256     	;
 58)   01F1 00 00 00 00 		 ALIGN 256     	;
 58)   01F5 00 00 00 00 		 ALIGN 256     	;
 58)   01F9 00 00 00 00 		 ALIGN 256     	;
 58)   01FD 00 00 00    		 ALIGN 256     	;
 35)   0200 F3          		@START: DI	;
 45)   0201 C3 45 02    		 JP BOOT ;SKIP TESTING	;SKIP TESTING
 50)   0204 06 05       		CN1: LD B,5	;
 51)   0206 0E 00       		AGN1: LD C,0	;
 52)   0208 3E 00       		 LD A,0	;
 53)   020A ED 79       		 OUT (C),A	;
 54)   020C 0E 00       		 LD C,0	;
 55)   020E 3E FF       		 LD A,255	;
 56)   0210 ED 79       		 OUT (C),A	;
 57)   0212 10 F2       		 DJNZ AGN1	;
 62)   0214 11 01 00    		 LD DE,1	;
 63)   0217 3E 00       		 LD A,0 ;WRITE 0	;WRITE 0
 64)   0219 4F          		 LD C,A	;
 65)   021A 21 00 80    		 LD HL,RAMAD 	;
 66)   021D 06 08       		 LD B,8	;
 67)   021F 77          		AGN2: LD (HL),A	;
 68)   0220 4E          		 LD C,(HL)	;
 69)   0221 B9          		 CP C	;
 70)   0222 C2 3C 02    		 JP NZ, ERR	;
 71)   0225 19          		 ADD HL,DE	;
 72)   0226 C6 20       		 ADD A,32 ;WRITE +32	;WRITE +32
 73)   0228 4F          		 LD C,A	;
 74)   0229 10 F4       		 DJNZ AGN2	;
 76)   022B 06 05       		 LD B,5	;
 77)   022D 0E 08       		AGN3: LD C,00001000B ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
 78)   022F 3E 40       		 LD A,64	;
 79)   0231 ED 79       		 OUT (C),A	;
 80)   0233 C6 80       		 ADD A,128	;
 81)   0235 ED 79       		 OUT (C),A 	;
 82)   0237 10 F4       		 DJNZ AGN3  ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
 83)   0239 C3 45 02    		 JP BOOT	;
 86)   023C 0E 38       		ERR: LD C,00111000B ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
 87)   023E 3E 40       		 LD A,64	;
 88)   0240 ED 79       		 OUT (C),A	;
 90)   0242 C3 3C 02    		 JP ERR ;DO AGAIN PORT 1	;DO AGAIN PORT 1
 97)   0245 F3          		@BOOT: DI	;
 98)   0246 ED 56       		  IM 1 	;
 99)   0248 31 F0 FF    		 LD SP,STACKP 	;
100)   024B CD 17 04    		 CALL EPROMOFF	;
101)   024E CD 83 06    		 CALL KEYBDATON 	;
104)   0251 3E 0C       		  LD A,12    ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
105)   0253 CD E5 05    		 CALL RS_INI  ;RS232 INITIALIZE	;RS232 INITIALIZE
106)   0256 21 43 05    		 LD HL,STR00	;
107)   0259 CD 0D 06    		 CALL RS_TXT	;
110)   025C CD 6D 0B    		  CALL I2C_INIT     ;INITIALIZE I2C	;INITIALIZE I2C
111)   025F CD F9 0C    		  CALL DS1307_ADJUST_TEST   ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
112)   0262 CD CE 0D    		  CALL LCD16_INIT   ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
113)   0265 21 47 04    		  LD HL,SVER	;
114)   0268 CD 4F 0E    		  CALL LCD16_PRINT  ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
123)   026B CD E2 0E    		  CALL LCD_INIT	;
124)   026E 21 00 00    		  LD HL,COL_BLACK	;
125)   0271 22 03 83    		  LD (BCOLOR),HL	;
126)   0274 21 C0 FF    		  LD HL,COL_YELLOW	;
127)   0277 22 01 83    		  LD (FCOLOR),HL	;
128)   027A 21 30 05    		  LD HL,STRSCR 	;
129)   027D CD 0D 06    		  CALL RS_TXT	;
130)   0280 CD F0 16    		  CALL LCD_CLRSCR  	;
131)   0283 AF          		 XOR A	;
132)   0284 32 0F 83    		  LD (SCRLN),A   	;
133)   0287 3E 00       		  LD A,0	;
134)   0289 32 0D 83    		  LD (CURSORX),A	;
135)   028C 3E 00       		  LD A,0	;
136)   028E 32 0E 83    		  LD (CURSORY),A  	;
137)   0291 21 8C 04    		 LD HL,STR0    ;LCD INIT MSG ON 0,0	;LCD INIT MSG ON 0,0
138)   0294 CD 30 17    		 CALL LCD_MSG	;
139)   0297 3E 1E       		  LD A,30	;
140)   0299 32 0D 83    		  LD (CURSORX),A 	;
141)   029C 21 47 04    		  LD HL,SVER	;
142)   029F CD 30 17    		  CALL LCD_MSG  ;PRINT VERSION ON 30,0	;PRINT VERSION ON 30,0
150)   02A2 AF          		@MENU: XOR A	;
151)   02A3 32 0F 83    		  LD (SCRLN),A	;
152)   02A6 21 01 05    		 LD HL,STRMN	;
153)   02A9 CD 0D 06    		 CALL RS_TXT ;OUTPUT MENU COMMANDS AT RS232 	;OUTPUT MENU COMMANDS AT RS232
154)   02AC 21 59 05    		 LD HL,STR01	;
155)   02AF CD 0D 06    		 CALL RS_TXT ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
162)   02B2 21 57 04    		 LD HL,SMENU	;
163)   02B5 3E 05       		  LD A,5	;
164)   02B7 32 0D 83    		  LD (CURSORX),A	;
165)   02BA 3E 02       		  LD A,2	;
166)   02BC 32 0E 83    		  LD (CURSORY),A  	;
167)   02BF CD 30 17    		 CALL LCD_MSG	;
169)   02C2 CD 1D 03    		 CALL GET_CHAR ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
172)   02C5 FE 55       		 CP 'U' ;UPLOAD PROGRAM	;UPLOAD PROGRAM
173)   02C7 CC 4C 03    		 CALL Z, UPLOD	;
174)   02CA FE 58       		 CP 'X'	;
175)   02CC CA 3E 03    		 JP Z,EXEC	;
176)   02CF FE 54       		 CP 'T'	;
177)   02D1 CC C3 03    		 CALL Z,RSTST	;
178)   02D4 FE 53       		 CP 'S'	;
179)   02D6 CC F5 03    		 CALL Z,TXTSCR	;
180)   02D9 FE 49       		 CP 'I'	;
181)   02DB CC 83 03    		 CALL Z,UPLOD2	;
182)   02DE FE 59       		 CP 'Y'	;
183)   02E0 CC D9 03    		 CALL Z,RSTST2	;
184)   02E3 FE 48       		 CP 'H'	;
185)   02E5 CC E8 03    		 CALL Z,XMTST	;
186)   02E8 FE 4A       		 CP 'J'	;
187)   02EA CC A8 03    		 CALL Z,DNLOD	;
190)   02ED FE 43       		 CP 'C'	;
191)   02EF CC F0 16    		 CALL Z,LCD_CLRSCR	;
192)   02F2 FE 42       		 CP 'B'	;
193)   02F4 CA 00 40    		 JP Z,BBCBASIC	;
195)   02F7 C3 A2 02    		 JP MENU	;
202)   02FA CD 60 24    		@GET_CHARNW: CALL CHKCURS	;
203)   02FD AF          		 XOR A 	;
205)   02FE CD 40 06    		 CALL RS_KEYRD ;CHAR IN RS232?	;CHAR IN RS232?
206)   0301 28 04       		 JR Z,CNW_TST2 	;
207)   0303 CD 17 06    		 CALL RS_RX ; GET THAT CHAR	; GET THAT CHAR
208)   0306 C9          		 RET	;
211)   0307 CD 75 07    		 CALL READCHAR ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
212)   030A FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
213)   030C C8          		 RET Z        ;EXIT IF Z TODO LOOP THIS FOR 10MS THEN EXIT	;EXIT IF Z TODO LOOP THIS FOR 10MS THEN EXIT
216)   030D F5          		 PUSH AF	;
217)   030E CD FE 05    		 CALL RS_TX	;
218)   0311 3E 0A       		 LD A,10	;
219)   0313 CD FE 05    		 CALL RS_TX	;
220)   0316 3E 0D       		 LD A,13	;
221)   0318 CD FE 05    		 CALL RS_TX	;
222)   031B F1          		 POP AF	;
223)   031C C9          		 RET	;
228)   031D AF          		@GET_CHAR: XOR A	;
231)   031E CD 40 06    		 CALL RS_KEYRD ;CHAR IN RS232?	;CHAR IN RS232?
232)   0321 28 04       		 JR Z,CW_TST2	;
233)   0323 CD 17 06    		 CALL RS_RX ; GET THAT CHAR	; GET THAT CHAR
234)   0326 C9          		 RET	;
241)   0327 CD 75 07    		 CALL READCHAR ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
242)   032A FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
243)   032C 28 EF       		 JR Z,GET_CHAR	;
246)   032E F5          		 PUSH AF	;
247)   032F CD FE 05    		 CALL RS_TX	;
248)   0332 3E 0A       		 LD A,10	;
249)   0334 CD FE 05    		 CALL RS_TX	;
250)   0337 3E 0D       		 LD A,13	;
251)   0339 CD FE 05    		 CALL RS_TX	;
252)   033C F1          		 POP AF	;
253)   033D C9          		 RET	;
264)   033E 3E 05       		 LD A,5	;
265)   0340 CD B1 25    		 CALL SCPRN  	;
267)   0343 11 A4 83    		 LD DE,PRGEX	;
268)   0346 1A          		 LD A,(DE)	;
269)   0347 6F          		 LD L,A	;
270)   0348 13          		 INC DE	;
271)   0349 1A          		 LD A,(DE)	;
272)   034A 67          		 LD H,A	;
273)   034B E9          		 JP (HL)	;
280)   034C F3          		UPLOD: DI 	;
285)   034D CD 17 06    		 CALL RS_RX ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
286)   0350 6F          		 LD L,A	;
287)   0351 CD 17 06    		 CALL RS_RX	;
288)   0354 67          		 LD H,A	;
289)   0355 CD 17 06    		 CALL RS_RX ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
290)   0358 4F          		 LD C,A	;
291)   0359 CD 17 06    		 CALL RS_RX	;
292)   035C 47          		 LD B,A	;
294)   035D 11 A4 83    		 LD DE,PRGEX ;SAVE TO PRGEX THE PROG EXEC ADDR=HL	;SAVE TO PRGEX THE PROG EXEC ADDR=HL
295)   0360 7D          		 LD A,L	;
296)   0361 12          		 LD (DE),A	;
297)   0362 13          		 INC DE	;
298)   0363 7C          		 LD A,H	;
299)   0364 12          		 LD (DE),A	;
301)   0365 FE 80       		 CP $80	;
302)   0367 DC 21 04    		 CALL C,EPROMON ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
304)   036A E5          		NORWR: PUSH HL	;
305)   036B CD 17 06    		NXB: CALL RS_RX	;
306)   036E 77          		 LD (HL),A	;
307)   036F 23          		 INC HL	;
308)   0370 0B          		 DEC BC	;
309)   0371 78          		 LD A,B	;
310)   0372 B1          		 OR C	;
311)   0373 20 F6       		 JR NZ,NXB ;LOOP ALL BYTES 	;LOOP ALL BYTES
312)   0375 CD 17 04    		 CALL EPROMOFF	;
317)   0378 3E 05       		 LD A,5 	;
318)   037A CD B1 25    		 CALL SCPRN  	;
319)   037D CD BE 25    		 CALL DELAY	;
321)   0380 E1          		 POP HL	;
324)   0381 FB          		 EI	;
325)   0382 C9          		 RET	;
329)   0383 F3          		UPLOD2: DI	;
334)   0384 CD 17 06    		 CALL RS_RX ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
335)   0387 6F          		 LD L,A	;
336)   0388 CD 17 06    		 CALL RS_RX	;
337)   038B 67          		 LD H,A	;
338)   038C CD 17 06    		 CALL RS_RX ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
339)   038F 4F          		 LD C,A	;
340)   0390 CD 17 06    		 CALL RS_RX	;
341)   0393 47          		 LD B,A	;
343)   0394 11 A4 83    		 LD DE,PRGEX ;SAVE TO PRGEX THE PROG EXEC ADDR=HL	;SAVE TO PRGEX THE PROG EXEC ADDR=HL
344)   0397 7D          		 LD A,L	;
345)   0398 12          		 LD (DE),A	;
346)   0399 13          		 INC DE	;
347)   039A 7C          		 LD A,H	;
348)   039B 12          		 LD (DE),A	;
350)   039C CD 17 06    		NXB2: CALL RS_RX	;
351)   039F 77          		 LD (HL),A	;
352)   03A0 23          		 INC HL	;
353)   03A1 0B          		 DEC BC	;
354)   03A2 78          		 LD A,B	;
355)   03A3 B1          		 OR C	;
356)   03A4 20 F6       		 JR NZ,NXB2 ;LOOP ALL BYTES   	;LOOP ALL BYTES
358)   03A6 FB          		 EI	;
360)   03A7 C9          		 RET	;
371)   03A8 CD 17 06    		 CALL RS_RX ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
372)   03AB 6F          		 LD L,A	;
373)   03AC CD 17 06    		 CALL RS_RX	;
374)   03AF 67          		 LD H,A	;
375)   03B0 CD 17 06    		 CALL RS_RX ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
376)   03B3 4F          		 LD C,A	;
377)   03B4 CD 17 06    		 CALL RS_RX	;
378)   03B7 47          		 LD B,A	;
380)   03B8 7E          		NXB3: LD A,(HL)	;
381)   03B9 CD FE 05    		 CALL RS_TX ;SEND BYTE	;SEND BYTE
382)   03BC 23          		 INC HL	;
383)   03BD 0B          		 DEC BC	;
384)   03BE 78          		 LD A,B	;
385)   03BF B1          		 OR C	;
386)   03C0 20 F6       		 JR NZ,NXB3 ;LOOP ALL BYTES    	;LOOP ALL BYTES
387)   03C2 C9          		 RET	;
389)   03C3 00          		RSTST: NOP ;GET A KEY FROM RS232	;GET A KEY FROM RS232
390)   03C4 06 0A       		 LD B,10	;
391)   03C6 C5          		TEN: PUSH BC	;
392)   03C7 CD 17 06    		 CALL RS_RX	;
394)   03CA CD FE 05    		 CALL RS_TX ;SEND BACK THE CHAR	;SEND BACK THE CHAR
396)   03CD 3E 20       		 LD A,' '	;
398)   03CF 3E 52       		 LD A,'R'	;
401)   03D1 CD CB 25    		 CALL DEL2	;
403)   03D4 C1          		 POP BC	;
404)   03D5 10 EF       		 DJNZ TEN	;
406)   03D7 AF          		 XOR A	;
407)   03D8 C9          		 RET	;
409)   03D9 00          		RSTST2: NOP ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
410)   03DA 06 FF       		 LD B,255	;
411)   03DC C5          		TEN2: PUSH BC	;
412)   03DD CD 17 06    		 CALL RS_RX	;
414)   03E0 CD FE 05    		 CALL RS_TX ;SEND BACK THE CHAR 	;SEND BACK THE CHAR
416)   03E3 C1          		 POP BC	;
417)   03E4 10 F6       		 DJNZ TEN2	;
418)   03E6 AF          		 XOR A	;
419)   03E7 C9          		 RET	;
422)   03E8 00          		XMTST: NOP ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
423)   03E9 06 FF       		 LD B,255	;
424)   03EB C5          		TEN3: PUSH BC	;
425)   03EC 78          		 LD A,B	;
426)   03ED CD FE 05    		 CALL RS_TX ;SEND THE BYTE	;SEND THE BYTE
427)   03F0 C1          		 POP BC	;
428)   03F1 10 F8       		 DJNZ TEN3	;
429)   03F3 AF          		 XOR A	;
430)   03F4 C9          		 RET	;
432)   03F5 C9          		TXTSCR: RET	;
439)   03F6 04          		@FF_OFF: INC B  ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
440)   03F7 AF          		      XOR A	;
441)   03F8 37          		      SCF	;
442)   03F9 17          		SBAGN: RLA        ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
443)   03FA 10 FD       		      DJNZ SBAGN	;
444)   03FC 2F          		      CPL     ;INVERSE BITS ON A	;INVERSE BITS ON A
445)   03FD 47          		      LD B,A	;
446)   03FE 21 9D 83    		      LD HL,FFSTAT	;
447)   0401 7E          		      LD A,(HL)	;
448)   0402 A0          		      AND B        ;ZERO THE BIT	;ZERO THE BIT
449)   0403 77          		      LD (HL),A	;
450)   0404 D3 08       		      OUT (DEVFFS),A	;
451)   0406 C9          		      RET	;
454)   0407 04          		@FF_ON: INC B  ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
455)   0408 AF          		      XOR A	;
456)   0409 37          		      SCF	;
457)   040A 17          		SBAGN: RLA        ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
458)   040B 10 FD       		      DJNZ SBAGN	;
459)   040D 47          		      LD B,A	;
460)   040E 21 9D 83    		      LD HL,FFSTAT	;
461)   0411 7E          		      LD A,(HL)	;
462)   0412 B0          		      OR B        ;SET THE BIT	;SET THE BIT
463)   0413 77          		      LD (HL),A	;
464)   0414 D3 08       		      OUT (DEVFFS),A	;
465)   0416 C9          		      RET	;
467)   0417 E5          		@EPROMOFF: PUSH HL	;
468)   0418 C5          		      PUSH BC	;
469)   0419 06 00       		      LD B,0	;
470)   041B CD F6 03    		      CALL FF_OFF	;
471)   041E C1          		      POP BC	;
472)   041F E1          		      POP HL	;
473)   0420 C9          		      RET	;
475)   0421 E5          		@EPROMON: PUSH HL	;
476)   0422 C5          		         PUSH BC	;
477)   0423 06 00       		     LD B,0	;
478)   0425 CD 07 04    		     CALL FF_ON	;
479)   0428 C1          		     POP BC	;
480)   0429 E1          		     POP HL	;
481)   042A C9          		     RET	;
487)   042B F5          		SOUTAS: PUSH AF  ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
488)   042C 26 00       		 LD H,0	;
489)   042E 6F          		 LD L,A	;
490)   042F 11 AC 83    		 LD DE,MYNUM	;
491)   0432 CD E5 25    		 CALL OUTASC	;
493)   0435 3E 0A       		 LD A,10	;
494)   0437 12          		 LD (DE),A	;
495)   0438 13          		 INC DE	;
496)   0439 3E 0D       		 LD A,13	;
497)   043B 12          		 LD (DE),A	;
498)   043C 13          		 INC DE	;
499)   043D AF          		 XOR A	;
500)   043E 12          		 LD (DE),A	;
502)   043F 21 AC 83    		 LD HL,MYNUM	;
503)   0442 CD 0D 06    		 CALL RS_TXT	;
504)   0445 F1          		 POP AF	;
505)   0446 C9          		 RET	;
510)   0447 41 54 4C 41 		SVER DEFM 'ATLAS OS V 2.04'	;
510)   044B 53 20 4F 53 		SVER DEFM 'ATLAS OS V 2.04'	;
510)   044F 20 56 20 32 		SVER DEFM 'ATLAS OS V 2.04'	;
510)   0453 2E 30 34    		SVER DEFM 'ATLAS OS V 2.04'	;
511)   0456 00          		 DB 0	;
513)   0457 55 49 3A 55 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   045B 50 20 4A 3A 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   045F 44 4E 20 58 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0463 3A 52 55 4E 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0467 20 54 59 48 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   046B 3A 52 53 20 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   046F 53 3A 44 49 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0473 53 50 20 43 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0477 3A 43 4C 53 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   047B 20 4C 3A 4C 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   047F 43 44 53 54 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0483 20 42 3A 42 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0487 41 53 49 43 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
514)   048B 00          		 DB 0	;
516)   048C 4C 43 44 20 		STR0 DEFM "LCD INITIALIZED"	;
516)   0490 49 4E 49 54 		STR0 DEFM "LCD INITIALIZED"	;
516)   0494 49 41 4C 49 		STR0 DEFM "LCD INITIALIZED"	;
516)   0498 5A 45 44    		STR0 DEFM "LCD INITIALIZED"	;
517)   049B 00          		 DB 0	;
519)   049C 52 53 32 33 		STR1 DEFM "RS232 INIT"	;
519)   04A0 32 20 49 4E 		STR1 DEFM "RS232 INIT"	;
519)   04A4 49 54       		STR1 DEFM "RS232 INIT"	;
520)   04A6 00          		 DB 0	;
522)   04A7 50 52 4F 47 		STR2 DEFM "PROGRAM HALTED"	;
522)   04AB 52 41 4D 20 		STR2 DEFM "PROGRAM HALTED"	;
522)   04AF 48 41 4C 54 		STR2 DEFM "PROGRAM HALTED"	;
522)   04B3 45 44       		STR2 DEFM "PROGRAM HALTED"	;
523)   04B5 00          		 DB 0	;
525)   04B6 57 41 49 54 		STR02 DEFM "WAITING..."	;
525)   04BA 49 4E 47 2E 		STR02 DEFM "WAITING..."	;
525)   04BE 2E 2E       		STR02 DEFM "WAITING..."	;
526)   04C0 00          		 DB 0	;
528)   04C1 50 52 47 20 		DATTR DEFM "PRG TRANSFERED"	;
528)   04C5 54 52 41 4E 		DATTR DEFM "PRG TRANSFERED"	;
528)   04C9 53 46 45 52 		DATTR DEFM "PRG TRANSFERED"	;
528)   04CD 45 44       		DATTR DEFM "PRG TRANSFERED"	;
529)   04CF 00          		 DB 0	;
531)   04D0 52 45 43 45 		DATST DEFM "RECEIVING..."	;
531)   04D4 49 56 49 4E 		DATST DEFM "RECEIVING..."	;
531)   04D8 47 2E 2E 2E 		DATST DEFM "RECEIVING..."	;
532)   04DC 00          		 DB 0 	;
534)   04DD 50 52 47 20 		SPRGX DEFM "PRG EXECUTE"	;
534)   04E1 45 58 45 43 		SPRGX DEFM "PRG EXECUTE"	;
534)   04E5 55 54 45    		SPRGX DEFM "PRG EXECUTE"	;
535)   04E8 00          		 DB 0	;
537)   04E9 49 4D 41 47 		STIMG DEFM "IMAGE COPY"	;
537)   04ED 45 20 43 4F 		STIMG DEFM "IMAGE COPY"	;
537)   04F1 50 59       		STIMG DEFM "IMAGE COPY"	;
538)   04F3 00          		 DB 0	;
540)   04F4 53 43 52 45 		TXTMES DEFM "SCREEN READY"	;
540)   04F8 45 4E 20 52 		TXTMES DEFM "SCREEN READY"	;
540)   04FC 45 41 44 59 		TXTMES DEFM "SCREEN READY"	;
541)   0500 00          		 DB 0	;
543)   0501 55 49 3A 55 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0505 50 20 4A 3A 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0509 44 4E 20 58 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   050D 3A 52 55 4E 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0511 20 54 59 48 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0515 3A 52 53 20 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0519 53 3A 44 49 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   051D 53 50 20 43 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0521 3A 43 4C 53 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0525 20 42 3A 42 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0529 41 53 49 43 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
544)   052D 0A 0D 00    		 DB 10,13,0	;
546)   0530 43 4C 45 41 		STRSCR DEFM "CLEARING SCREEN."	;
546)   0534 52 49 4E 47 		STRSCR DEFM "CLEARING SCREEN."	;
546)   0538 20 53 43 52 		STRSCR DEFM "CLEARING SCREEN."	;
546)   053C 45 45 4E 2E 		STRSCR DEFM "CLEARING SCREEN."	;
547)   0540 0A 0D 00    		 DB 10,13,0	;
549)   0543 0A 0D       		STR00 DB 10,13	;
550)   0545 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
550)   0549 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
550)   054D 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
550)   0551 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
550)   0555 44          		 DEFM "RS232 INITIALIZED"	;
551)   0556 0A 0D 00    		 DB 10,13,0	;
553)   0559 0A 0D       		STR01 DB 10,13	;
554)   055B 57 41 49 54 		 DEFM "WAITING..."	;
554)   055F 49 4E 47 2E 		 DEFM "WAITING..."	;
554)   0563 2E 2E       		 DEFM "WAITING..."	;
555)   0565 0A 0D 00    		 DB 10,13,0	;
556)   0568 00          		 DB 0	;
558)   0569 0A 0D       		STR06 DB 10,13	;
559)   056B 4B 45 59 20 		 DEFM "KEY PRESSED"	;
559)   056F 50 52 45 53 		 DEFM "KEY PRESSED"	;
559)   0573 53 45 44    		 DEFM "KEY PRESSED"	;
560)   0576 0A 0D 00    		 DB 10,13,0	;
561)   0579 00          		 DB 0	;
  3)   057A F3          		@INTSER:  DI	;
  4)   057B E5          		          PUSH HL	;
  5)   057C F5          		          PUSH AF	;
  6)   057D C5          		          PUSH BC	;
  7)   057E DD E5       		          PUSH IX	;
 11)   0580 DB 18       		          IN A,(DEVINP)	;
 12)   0582 2F          		          CPL	;
 13)   0583 E6 07       		          AND 0X07 ;BITS 0-2  	;BITS 0-2
 14)   0585 3D          		          DEC A  ;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE	;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE
 15)   0586 DD 21 A3 05 		          LD IX,MYINTADDR                    	;
 16)   058A 06 00       		          LD B,0	;
 17)   058C 4F          		          LD C,A	;
 18)   058D CB 21       		          SLA C ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 19)   058F DD 09       		          ADD IX,BC	;
 20)   0591 DD 6E 00    		          LD L,(IX)	;
 21)   0594 DD 66 01    		          LD H,(IX+1)	;
 22)   0597 01 9C 05    		          LD BC,IS_EX	;
 23)   059A C5          		          PUSH BC ;RETURN ADDRESS	;RETURN ADDRESS
 24)   059B E9          		          JP (HL) ;JP TO HL	;JP TO HL
 26)   059C DD E1       		IS_EX:    POP IX	;
 27)   059E C1          		   POP BC	;
 28)   059F F1          		   POP AF	;
 29)   05A0 E1          		          POP HL	;
 30)   05A1 FB          		          EI	;
 31)   05A2 C9          		          RET 	;
 33)   05A3 BF 05       		MYINTADDR DEFW INT_TIMER	;
 34)   05A5 B3 05       		   DEFW SAVETE	;
 35)   05A7 BC 05       		   DEFW DOCLRINT	;
 36)   05A9 BC 05       		   DEFW DOCLRINT	;
 37)   05AB BC 05       		   DEFW DOCLRINT	;
 38)   05AD BC 05       		   DEFW DOCLRINT	;
 39)   05AF BC 05       		   DEFW DOCLRINT	;
 40)   05B1 BC 05       		   DEFW DOCLRINT                    	;
 42)   05B3 D3 40       		SAVETE   OUT (DEVINT),A  ;CLEAR THE INTERRUPT 	;CLEAR THE INTERRUPT
 43)   05B5 21 AB 83    		   LD HL,INT2TE    ;TEARING EFFECT	;TEARING EFFECT
 44)   05B8 3E 01       		   LD A,1	;
 45)   05BA 77          		   LD (HL),A;	;
 46)   05BB C9          		   RET	;
 49)   05BC D3 40       		DOCLRINT  OUT (DEVINT),A	;
 50)   05BE C9          		   RET	;
 52)   05BF D3 40       		INT_TIMER: OUT (DEVINT),A	;
 53)   05C1 21 A7 83    		          LD HL,TIMECTR	;
 54)   05C4 34          		          INC (HL)  	;
 55)   05C5 7E          		          LD A,(HL)	;
 56)   05C6 FE 00       		          CP 0	;
 57)   05C8 C0          		          RET NZ	;
 58)   05C9 23          		          INC HL	;
 59)   05CA 34          		          INC (HL)  	;
 60)   05CB 7E          		          LD A,(HL)	;
 61)   05CC FE 00       		          CP 0	;
 62)   05CE C0          		          RET NZ	;
 63)   05CF 23          		          INC HL	;
 64)   05D0 34          		          INC (HL)  	;
 65)   05D1 7E          		          LD A,(HL)	;
 66)   05D2 FE 00       		          CP 0	;
 67)   05D4 C0          		          RET NZ	;
 68)   05D5 23          		          INC HL	;
 69)   05D6 34          		          INC (HL)  	;
 70)   05D7 7E          		          LD A,(HL)	;
 71)   05D8 FE 00       		          CP 0	;
 72)   05DA C0          		          RET NZ  	;
 74)   05DB 21 00 00    		          LD HL,0	;
 75)   05DE 22 A7 83    		          LD (TIMECTR),HL	;
 76)   05E1 22 A9 83    		          LD (TIMECTR+2),HL	;
 77)   05E4 C9          		          RET	;
 15)   05E5 	            		 RBR EQU DEVSER+0 ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   05E5 	            		 THR EQU DEVSER+0 ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   05E5 	            		 IER EQU DEVSER+1 ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   05E5 	            		 IIR EQU DEVSER+2 ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   05E5 	            		 FCR EQU DEVSER+2 ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   05E5 	            		 LCR EQU DEVSER+3 ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   05E5 	            		 MCR EQU DEVSER+4 ;MODEM CONTROL REGISTER 	;MODEM CONTROL REGISTER
 44)   05E5 	            		 LSR EQU DEVSER+5 ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   05E5 	            		 MSR EQU DEVSER+6 ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   05E5 	            		 SCR EQU DEVSER+7 ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   05E5 	            		 DLL EQU DEVSER+0 ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   05E5 	            		 DLM EQU DEVSER+1 ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   05E5 F5          		RS_INI: PUSH AF	;
 63)   05E6 3E 80       		 LD     A,$80           ; Mask to set DLAB on	; Mask to set DLAB on
 64)   05E8 D3 23       		 OUT    (LCR),A         ; Send to LINe Control Register 	; Send to LINe Control Register
 73)   05EA F1          		  POP AF	;
 74)   05EB D3 20       		 OUT    (DLL),A         ; Set LSB of divisor	; Set LSB of divisor
 75)   05ED 3E 00       		 LD     A,00            ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   05EF D3 21       		 OUT    (DLM),A         ; Send to the MSB register	; Send to the MSB register
 77)   05F1 3E 03       		 LD     A,$03           ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   05F3 D3 23       		 OUT    (LCR),A         ; Write new value to LCR	; Write new value to LCR
 80)   05F5 3E 00       		 LD A, 0       	;
 81)   05F7 D3 22       		 OUT  (FCR),A      ;//was commented	;//was commented
 82)   05F9 3E 00       		 LD     A,$00           ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   05FB D3 21       		 OUT    (IER),A         ; Send to INterrupt Enable Register 	; Send to INterrupt Enable Register
 84)   05FD C9          		 RET	;
 87)   05FE CD 04 06    		RS_TX: CALL   RSTXRD	;
 88)   0601 D3 20       		       OUT     (THR),A	;
 90)   0603 C9          		       RET	;
 94)   0604 F5          		RSTXRD: PUSH   AF	;
 95)   0605 DB 25       		RSTXLP: IN     A,(LSR)         ; fetch the control register	; fetch the control register
 96)   0607 CB 6F       		       BIT     5,A             ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   0609 28 FA       		       JR      Z,RSTXLP	;
 98)   060B F1          		       POP     AF	;
 99)   060C C9          		       RET  	;
102)   060D 7E          		RS_TXT: LD A,(HL)	;
103)   060E 23          		 INC HL 	;
104)   060F FE 00       		 CP 0	;
105)   0611 C8          		 RET Z	;
106)   0612 CD FE 05    		       CALL RS_TX	;
107)   0615 18 F6       		 JR RS_TXT	;
114)   0617 F3          		RS_RX: DI	;
115)   0618 3E 01       		       LD A,1     ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   061A D3 24       		       OUT (MCR),A	;
117)   061C CD 35 06    		   CALL    RSRXRD              	;
118)   061F AF          		RS_GTCH: XOR A     ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   0620 D3 24       		       OUT (MCR),A        	;
121)   0622 DB 20       		      IN A,(RBR)	;
122)   0624 FB          		      EI	;
123)   0625 C9          		       RET	;
125)   0626 3E 01       		RS_RXNW:LD A,1    ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   0628 D3 24       		       OUT (MCR),A	;
127)   062A DB 25       		   IN      A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
128)   062C CB 47       		       BIT     0,A                    	;
129)   062E 28 03       		       JR Z,RS_NOCHAR	;
130)   0630 F3          		       DI	;
131)   0631 18 EC       		       JR RS_GTCH        	;
132)   0633 AF          		RS_NOCHAR: XOR A ;RETURN ZERO	;RETURN ZERO
133)   0634 C9          		       RET	;
140)   0635 F3          		RSRXRD: DI	;
141)   0636 F5          		       PUSH    AF	;
142)   0637 DB 25       		RSRXLP: IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
143)   0639 CB 47       		       BIT     0,A             ; bit will be set if UART has data	; bit will be set if UART has data
144)   063B 28 FA       		       JR      Z,RSRXLP	;
145)   063D F1          		       POP     AF	;
146)   063E FB          		       EI	;
147)   063F C9          		       RET  	;
151)   0640 DB 25       		RS_KEYRD:IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
152)   0642 CB 47       		        BIT     0,A             ; bit will be set if UART has data        	; bit will be set if UART has data
153)   0644 C9          		        RET 	;
155)   0645 F5          		SHLCD: PUSH AF	;
157)   0646 F1          		 POP AF	;
159)   0647 C9          		 RET	;
163)   0648 F5          		CHKERR: PUSH AF	;
164)   0649 E5          		 PUSH HL	;
165)   064A C5          		 PUSH BC	;
166)   064B DB 25       		 IN A,(LSR)  ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
167)   064D CB 67       		 BIT 4,A	;
168)   064F 28 04       		 JR Z,LBLPE	;
169)   0651 3E 42       		 LD A,'B' ;$20 ;BREAK	;$20 ;BREAK
170)   0653 18 1A       		 JR EXIT	;
171)   0655 CB 57       		LBLPE: BIT 2,A 	;
172)   0657 28 04       		 JR Z,LBLFE	;
173)   0659 3E 50       		 LD A,'P' ;$40 ;PARITY	;$40 ;PARITY
174)   065B 18 12       		 JR EXIT	;
175)   065D CB 5F       		LBLFE: BIT 3,A	;
176)   065F 28 04       		 JR Z,LBLOE	;
177)   0661 3E 46       		 LD A,'F' ;$60 ;FRAME 	;$60 ;FRAME
178)   0663 18 0A       		 JR EXIT	;
179)   0665 CB 4F       		LBLOE: BIT 1,A	;
180)   0667 28 04       		 JR Z,LBLNE	;
181)   0669 3E 4F       		 LD A,'O' ;$80  ;OVERRUN	;$80  ;OVERRUN
182)   066B 18 02       		 JR EXIT	;
183)   066D 3E 4E       		LBLNE: LD A,'N' ;NO ERROR	;NO ERROR
184)   066F 21 9F 83    		EXIT: LD HL,SERERR	;
185)   0672 77          		 LD (HL),A	;
187)   0673 C1          		 POP BC	;
188)   0674 E1          		 POP HL	;
189)   0675 F1          		 POP AF	;
190)   0676 C9          		 RET	;
 14)   0677 	            		DEVKBI EQU DEVINP; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP	; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP
 17)   0677 06 01       		@KEYBCLKON: LD B,UKB_OUT_CLK	;
 18)   0679 CD F6 03    		      CALL FF_OFF	;
 19)   067C C9          		      RET	;
 21)   067D 06 01       		@KEYBCLKOFF: LD B,UKB_OUT_CLK	;
 22)   067F CD 07 04    		     CALL FF_ON	;
 23)   0682 C9          		     RET	;
 25)   0683 06 02       		@KEYBDATON: LD B,UKB_OUT_DAT	;
 26)   0685 CD F6 03    		      CALL FF_OFF	;
 27)   0688 C9          		      RET	;
 29)   0689 06 02       		@KEYBDATOFF: LD B,UKB_OUT_DAT	;
 30)   068B CD 07 04    		     CALL FF_ON	;
 31)   068E C9          		     RET	;
 33)   068F CD 77 06    		PS2ISK:CALL KEYBCLKON ;KEYBOARD ENABLED	;KEYBOARD ENABLED
 34)   0692 06 1E       		   LD B,30 ;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)	;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)
 35)   0694 DB 18       		CHAG: IN A,(DEVKBI)	;
 36)   0696 57          		   LD D,A	;
 37)   0697 CB 77       		   BIT UKB_IN_CLK,A ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 38)   0699 28 08       		   JR Z,KEYOK	;
 39)   069B 10 F7       		   DJNZ CHAG	;
 41)   069D 3E 01       		PS2NTP: LD A,1 ;SET A TO 1 MEANS NO KEY AVAILABLE  	;SET A TO 1 MEANS NO KEY AVAILABLE
 42)   069F CD 7D 06    		   CALL KEYBCLKOFF	;
 43)   06A2 C9          		   RET	;
 44)   06A3 AF          		KEYOK: XOR A ;SET A TO 0 MEANS WE HAVE A KEY	;SET A TO 0 MEANS WE HAVE A KEY
 45)   06A4 C9          		   RET	;
 49)   06A5 06 32       		   LD B,50	;
 50)   06A7 B7          		   OR A   ;CLEAR CARRY	;CLEAR CARRY
 51)   06A8 DB 18       		WH1:IN A,(DEVKBI)	;
 52)   06AA 57          		   LD D,A    	;
 53)   06AB CB 77       		   BIT UKB_IN_CLK,A ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 54)   06AD C0          		   RET NZ	;
 55)   06AE 10 F8       		   DJNZ WH1	;
 56)   06B0 37          		   SCF	;
 57)   06B1 C9          		   RET	;
 60)   06B2 06 32       		  LD B,50	;
 61)   06B4 B7          		  OR A    ;CLEAR CARRY	;CLEAR CARRY
 62)   06B5 DB 18       		WL1:IN A,(DEVKBI)	;
 63)   06B7 57          		   LD D,A    	;
 64)   06B8 CB 77       		   BIT UKB_IN_CLK,A ;CHECK BIT 6=CLOCK    	;CHECK BIT 6=CLOCK
 65)   06BA C8          		   RET Z	;
 66)   06BB 10 F8       		   DJNZ WL1	;
 67)   06BD 37          		   SCF	;
 68)   06BE C9          		   RET	;
 70)   06BF CD B2 06    		WAITFORLOW:CALL WAITFORLOW1	;
 71)   06C2 D8          		          RET C	;
 72)   06C3 DB 18       		           IN A,(DEVKBI);SOME MORE TIMES TO BE SURE	;SOME MORE TIMES TO BE SURE
 73)   06C5 DB 18       		           IN A,(DEVKBI)	;
 74)   06C7 57          		           LD D,A	;
 75)   06C8 C9          		           RET	;
 78)   06C9 F3          		@NEWBYTE:DI	;
 79)   06CA 7A          		   LD A,D ;BIT 7 HAS THE DATA	;BIT 7 HAS THE DATA
 80)   06CB CB 7F       		   BIT UKB_IN_DAT,A	;
 81)   06CD 20 2D       		   JR NZ,ERROR0 ;ALWAYS START WITH 0	;ALWAYS START WITH 0
 82)   06CF 06 08       		   LD B,8	;
 83)   06D1 48          		NXTBIT: LD C,B ;SAVE B	;SAVE B
 84)   06D2 CD A5 06    		   CALL WAITFORHIGH 	;
 85)   06D5 D8          		   RET C	;
 86)   06D6 CD BF 06    		   CALL WAITFORLOW	;
 87)   06D9 D8          		   RET C	;
 88)   06DA CB 27       		   SLA A ;BIT 7=DATA IS ON C FLAG	;BIT 7=DATA IS ON C FLAG
 89)   06DC CB 1B       		   RR E ;CARRY GOES TO BIT 7 OF E  	;CARRY GOES TO BIT 7 OF E
 90)   06DE 41          		   LD B,C  ;RESTORE C	;RESTORE C
 91)   06DF 10 F0       		   DJNZ NXTBIT	;
 92)   06E1 CD A5 06    		   CALL WAITFORHIGH 	;
 93)   06E4 D8          		   RET C	;
 94)   06E5 CD BF 06    		   CALL WAITFORLOW     	;
 95)   06E8 D8          		   RET C	;
 97)   06E9 CD A5 06    		   CALL WAITFORHIGH 	;
 98)   06EC D8          		   RET C	;
 99)   06ED CD BF 06    		   CALL WAITFORLOW 	;
100)   06F0 D8          		   RET C	;
101)   06F1 CB 7F       		   BIT UKB_IN_DAT,A	;
102)   06F3 28 10       		   JR Z,ERROR1 ;ALWAYS ENDS WITH 1  	;ALWAYS ENDS WITH 1
103)   06F5 CD A5 06    		   CALL WAITFORHIGH    ;WAIT FOR END OF TRANSMITION	;WAIT FOR END OF TRANSMITION
104)   06F8 D8          		   RET C	;
106)   06F9 7B          		   LD A,E	;
107)   06FA FB          		   EI	;
108)   06FB C9          		   RET	;
109)   06FC 21 11 07    		ERROR0: LD HL,MSER4	;
110)   06FF CD 0D 06    		   CALL RS_TXT	;
111)   0702 37          		   SCF ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
112)   0703 FB          		   EI	;
113)   0704 C9          		   RET	;
114)   0705 D5          		ERROR1:PUSH DE	;
115)   0706 21 34 07    		   LD HL,MSER5	;
116)   0709 CD 0D 06    		   CALL RS_TXT	;
117)   070C 37          		   SCF ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
118)   070D D1          		   POP DE	;
119)   070E 7B          		   LD A,E ;MAYBE IGNORE THIS	;MAYBE IGNORE THIS
120)   070F FB          		   EI	;
121)   0710 C9          		   RET	;
122)   0711 45 52 52 4F 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0715 52 20 53 54 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0719 41 52 54 20 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   071D 42 49 54 2E 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0721 4E 4F 54 2E 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0725 41 53 20 45 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0729 58 50 45 43 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   072D 54 45 44 2E 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
123)   0731 0A 0D 00    		   DB 10,13,0	;
124)   0734 45 52 52 4F 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0738 52 20 53 54 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   073C 4F 50 20 42 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0740 49 54 2E 4E 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0744 4F 54 2E 41 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0748 53 20 45 58 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   074C 50 45 43 54 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0750 45 44 2E    		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
125)   0753 0A 0D 00    		   DB 10,13,0	;
127)   0756 01 0A 00    		PS2KEY: LD BC,10       	;
128)   0759 0B          		PS2AGN DEC BC	;
129)   075A 78          		       LD A,B	;
130)   075B B1          		       OR C	;
131)   075C 28 0F       		       JR Z,PS2TIMEOUT	;
132)   075E C5          		       PUSH BC	;
133)   075F CD 8F 06    		       CALL PS2ISK	;
134)   0762 B7          		       OR A	;
135)   0763 C1          		       POP BC	;
136)   0764 20 F3       		       JR NZ, PS2AGN ;NO KEY YET	;NO KEY YET
138)   0766 CD C9 06    		       CALL NEWBYTE 	;
139)   0769 38 02       		       JR C,PS2TIMEOUT ;ERROR SO INVALIDATE A	;ERROR SO INVALIDATE A
140)   076B 18 02       		       JR PS2EX	;
141)   076D AF          		PS2TIMEOUT:XOR A ;0 CODE IS INVALID	;0 CODE IS INVALID
142)   076E FB          		          EI	;
143)   076F F5          		PS2EX  PUSH AF       	;
144)   0770 CD 7D 06    		       CALL KEYBCLKOFF	;
145)   0773 F1          		       POP AF	;
146)   0774 C9          		       RET	;
149)   0775 CD 7C 07    		READCHAR:CALL GTKEY	;
150)   0778 CD 3B 08    		      CALL PS2LOK	;
151)   077B C9          		      RET	;
154)   077C CD 56 07    		@GTKEY: CALL PS2KEY ;GET A KEY FROM PS2	;GET A KEY FROM PS2
155)   077F FE E1       		 CP $E1 ;BREAK KEY	;BREAK KEY
156)   0781 CC A8 07    		 CALL Z,GTBRK	;
157)   0784 FE F0       		 CP $F0 ;240 KEY RELEASED	;240 KEY RELEASED
158)   0786 CC EC 07    		 CALL Z,GTREL	;
159)   0789 FE E0       		 CP $E0 ;224 EXTENDED KEYS	;224 EXTENDED KEYS
160)   078B CC B2 07    		 CALL Z,GTEXT	;
163)   078E FE 12       		 CP 18 ;LEFT SHIFT	;LEFT SHIFT
164)   0790 CC 17 08    		 CALL Z,SHFTOG	;
165)   0793 FE 59       		 CP 89 ;RIGHT SHIFT	;RIGHT SHIFT
166)   0795 CC 17 08    		 CALL Z,SHFTOG	;
167)   0798 FE 14       		 CP 20 ;RIGHT CONTROL	;RIGHT CONTROL
168)   079A CC 20 08    		 CALL Z,CTRTOG 	;
169)   079D FE 11       		 CP 17 ;LEFT ALT	;LEFT ALT
170)   079F CC 29 08    		 CALL Z,ALTTOG	;
171)   07A2 FE 58       		 CP $58 ;CAPS LOCK	;CAPS LOCK
172)   07A4 CC 32 08    		 CALL Z,CAPSTOG	;
175)   07A7 C9          		 RET	;
177)   07A8 CD 56 07    		GTBRK: CALL PS2KEY ;$14 OR $F0	;$14 OR $F0
178)   07AB FE F0       		 CP $F0	;
179)   07AD C8          		 RET Z	;
180)   07AE CD 56 07    		 CALL PS2KEY ;$77	;$77
181)   07B1 C9          		 RET	;
183)   07B2 CD 56 07    		GTEXT: CALL PS2KEY ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
184)   07B5 FE 6B       		 CP $6B ;LEFT	;LEFT
185)   07B7 C8          		 RET Z	;
186)   07B8 FE 72       		 CP $72 ;DOWN	;DOWN
187)   07BA C8          		 RET Z	;
188)   07BB FE 74       		 CP $74 ;RIGHT	;RIGHT
189)   07BD C8          		 RET Z	;
190)   07BE FE 75       		 CP $75 ;UP	;UP
191)   07C0 C8          		 RET Z	;
192)   07C1 FE 70       		 CP $70 ;INSERT	;INSERT
193)   07C3 C8          		 RET Z	;
194)   07C4 FE 6C       		 CP $6C ;HOME	;HOME
195)   07C6 C8          		 RET Z	;
196)   07C7 FE 7D       		 CP $7D ;PG UP	;PG UP
197)   07C9 C8          		 RET Z	;
198)   07CA FE 7A       		 CP $7A ;PG DN	;PG DN
199)   07CC C8          		 RET Z	;
200)   07CD FE 69       		 CP $69 ;END	;END
201)   07CF C8          		 RET Z	;
202)   07D0 FE 71       		 CP $71 ;DEL	;DEL
203)   07D2 C8          		 RET Z	;
204)   07D3 FE 66       		 CP $66  ;BACKSPACE	;BACKSPACE
205)   07D5 C8          		 RET Z	;
206)   07D6 FE 5A       		 CP $5A ;ENTER NUM	;ENTER NUM
207)   07D8 C8          		 RET Z	;
208)   07D9 FE 11       		 CP $11 ;RIGHT ALT	;RIGHT ALT
209)   07DB C8          		 RET Z	;
210)   07DC FE 14       		 CP $14 ;LEFT ALT	;LEFT ALT
211)   07DE C8          		 RET Z	;
212)   07DF FE 4A       		 CP $4A ;NUMLOCK /	;NUMLOCK /
213)   07E1 C8          		 RET Z	;
214)   07E2 FE F0       		 CP $F0	;
215)   07E4 C2 EA 07    		 JP NZ, EXGTEX ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
216)   07E7 CD 56 07    		 CALL PS2KEY ; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT	; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT
218)   07EA AF          		EXGTEX XOR A ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
219)   07EB C9          		 RET	;
222)   07EC CD 56 07    		GTREL: CALL PS2KEY ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
223)   07EF FE 12       		 CP 18 ; LSHIFT RELEASED	; LSHIFT RELEASED
224)   07F1 CC 05 08    		 CALL Z,SHFRES ; RESET SHIFT	; RESET SHIFT
225)   07F4 FE 14       		 CP 20 ; LCTRL RELEASED	; LCTRL RELEASED
226)   07F6 CC 0B 08    		 CALL Z,CTRRES ; RESET CONTROL	; RESET CONTROL
227)   07F9 FE 11       		 CP 17 ; LALT RELEASED	; LALT RELEASED
228)   07FB CC 11 08    		 CALL Z,ALTRES ; RESET ALT	; RESET ALT
229)   07FE FE 59       		 CP 89 ; RSHIFT RELEASED	; RSHIFT RELEASED
230)   0800 CC 05 08    		 CALL Z,SHFRES ; RESET SHIFT	; RESET SHIFT
231)   0803 AF          		 XOR A ; NO KEY	; NO KEY
232)   0804 C9          		 RET	;
234)   0805 21 9E 83    		SHFRES: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH 	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
235)   0808 CB B6       		 RES 6,(HL)  ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
236)   080A C9          		 RET	;
238)   080B 21 9E 83    		CTRRES: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
239)   080E CB BE       		 RES 7,(HL) ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
240)   0810 C9          		 RET	;
242)   0811 21 9E 83    		ALTRES: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
243)   0814 CB AE       		 RES 5,(HL) ; BIT 5 IS SHIFT $20=32 	; BIT 5 IS SHIFT $20=32
244)   0816 C9          		 RET	;
246)   0817 21 9E 83    		SHFTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH 	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
247)   081A 3E 40       		 LD A,$40 ; MASK	; MASK
248)   081C AE          		 XOR (HL)  ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
249)   081D 77          		 LD (HL),A ; SAVE	; SAVE
250)   081E AF          		 XOR A ; NO KEY	; NO KEY
251)   081F C9          		 RET	;
253)   0820 21 9E 83    		CTRTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
254)   0823 3E 80       		 LD A,$80 ; MASK	; MASK
255)   0825 AE          		 XOR (HL) ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
256)   0826 77          		 LD (HL),A ; SAVE	; SAVE
257)   0827 AF          		 XOR A ; NO KEY	; NO KEY
258)   0828 C9          		 RET	;
260)   0829 21 9E 83    		ALTTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
261)   082C 3E 20       		 LD A,$20	;
262)   082E AE          		 XOR (HL) ; BIT 5 IS ALT $20=32 	; BIT 5 IS ALT $20=32
263)   082F 77          		 LD (HL),A ; SAVE	; SAVE
264)   0830 AF          		 XOR A ; NO KEY	; NO KEY
265)   0831 C9          		 RET	;
267)   0832 21 9E 83    		CAPSTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
268)   0835 3E 10       		 LD A,$10	;
269)   0837 AE          		 XOR (HL) ; BIT 4 IS CAPS $10=16 	; BIT 4 IS CAPS $10=16
270)   0838 77          		 LD (HL),A ; SAVE	; SAVE
271)   0839 AF          		 XOR A ; NO KEY	; NO KEY
272)   083A C9          		 RET	;
276)   083B 21 9E 83    		 LD HL,KEYCTR	;
277)   083E 47          		 LD B,A  ; SAVE A	; SAVE A
278)   083F 7E          		 LD A,(HL); GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
279)   0840 4F          		 LD C,A  ;CAPS ON C	;CAPS ON C
280)   0841 CB 1F       		 RR A	;
281)   0843 CB 1F       		 RR A    ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
282)   0845 A9          		 XOR C   ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
283)   0846 CB 67       		 BIT 4,A ;CHECK IF BIT 4 IS 0 = UNSHIFTED	;CHECK IF BIT 4 IS 0 = UNSHIFTED
284)   0848 78          		 LD A,B  ;RESTORE A	;RESTORE A
289)   0849 21 57 08    		 LD HL,PS2TAB1 ;UNSHIFTED	;UNSHIFTED
290)   084C 28 03       		 JR Z,PLK1	;
291)   084E 21 01 09    		 LD HL,PS2TAB2 ;SHIFTED	;SHIFTED
292)   0851 06 00       		PLK1:  LD B,0	;
293)   0853 4F          		 LD C,A	;
294)   0854 09          		 ADD HL,BC       	;
295)   0855 7E          		 LD A,(HL) ;GET THE CHAR	;GET THE CHAR
296)   0856 C9          		 RET	;
300)   0857 00 00 00 00 		PS2TAB1 DB 0,0,0,0,0,0,0,0,0,0	;
300)   085B 00 00 00 00 		PS2TAB1 DB 0,0,0,0,0,0,0,0,0,0	;
300)   085F 00 00       		PS2TAB1 DB 0,0,0,0,0,0,0,0,0,0	;
301)   0861 00 00 00 00 		      DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0865 60 00 00 00 		      DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0869 00 00       		      DB 0,0,0,0,'`',0,0,0,0,0	;
302)   086B 00 71 31 00 		      DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   086F 00 00 7A 73 		      DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   0873 61 77       		      DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   0875 32 00 00 63 		      DB '2',0,0,'c','x','d','e','4','3',0	;
303)   0879 78 64 65 34 		      DB '2',0,0,'c','x','d','e','4','3',0	;
303)   087D 33 00       		      DB '2',0,0,'c','x','d','e','4','3',0	;
304)   087F 00 20 76 66 		      DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0883 74 72 35 00 		      DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0887 00 6E       		      DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   0889 62 68 67 6D 		      DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   088D 36 00 00 2C 		      DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   0891 6D 6A       		      DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   0893 75 37 38 00 		      DB 'u','7','8',0,0,',','k','i','o','0'   ;60-69	;60-69
306)   0897 00 2C 6B 69 		      DB 'u','7','8',0,0,',','k','i','o','0'   ;60-69	;60-69
306)   089B 6F 30       		      DB 'u','7','8',0,0,',','k','i','o','0'   ;60-69	;60-69
307)   089D 39 00 00 2E 		      DB '9',0,0,'.','/','l',59,'p','-',0       ;70-79	;70-79
307)   08A1 2F 6C 3B 70 		      DB '9',0,0,'.','/','l',59,'p','-',0       ;70-79	;70-79
307)   08A5 2D 00       		      DB '9',0,0,'.','/','l',59,'p','-',0       ;70-79	;70-79
308)   08A7 00 00 27 00 		      DB 0,0,39,0,'[','=',0,0,0,0               ;80-89	;80-89
308)   08AB 5B 3D 00 00 		      DB 0,0,39,0,'[','=',0,0,0,0               ;80-89	;80-89
308)   08AF 00 00       		      DB 0,0,39,0,'[','=',0,0,0,0               ;80-89	;80-89
309)   08B1 0D 5D 00 5C 		      DB 13,']',0,'\',0,0,0,0,0,0               ;90-99	;90-99
309)   08B5 00 00 00 00 		      DB 13,']',0,'\',0,0,0,0,0,0               ;90-99	;90-99
309)   08B9 00 00       		      DB 13,']',0,'\',0,0,0,0,0,0               ;90-99	;90-99
310)   08BB 00 00 06 00 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
310)   08BF 00 08 00 04 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
310)   08C3 09 00       		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
311)   08C5 00 00 01 07 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
311)   08C9 0A 00 03 0B 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
311)   08CD 1B 00       		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
312)   08CF 00 00 2B 2D 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
312)   08D3 2A 39 00 00 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
312)   08D7 00 00       		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
313)   08D9 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
313)   08DD 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
313)   08E1 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
314)   08E3 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
314)   08E7 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
314)   08EB 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
315)   08ED 00 00 00 00 		       DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
315)   08F1 00 00 00 00 		       DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
315)   08F5 00 00       		       DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
316)   08F7 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
316)   08FB 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
316)   08FF 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
319)   0901 00 00 00 00 		PS2TAB2 DB 0,0,0,0,0,0,0,0,0,0	;
319)   0905 00 00 00 00 		PS2TAB2 DB 0,0,0,0,0,0,0,0,0,0	;
319)   0909 00 00       		PS2TAB2 DB 0,0,0,0,0,0,0,0,0,0	;
320)   090B 00 00 00 00 		      DB 0,0,0,0,'~',0,0,0,0,0	;
320)   090F 7E 00 00 00 		      DB 0,0,0,0,'~',0,0,0,0,0	;
320)   0913 00 00       		      DB 0,0,0,0,'~',0,0,0,0,0	;
321)   0915 00 51 21 00 		      DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   0919 00 00 5A 53 		      DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   091D 41 57       		      DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   091F 40 00 00 43 		      DB '@',0,0,'C','X','D','E','$','#',0	;
322)   0923 58 44 45 24 		      DB '@',0,0,'C','X','D','E','$','#',0	;
322)   0927 23 00       		      DB '@',0,0,'C','X','D','E','$','#',0	;
323)   0929 00 20 56 46 		      DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   092D 54 52 25 00 		      DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   0931 00 4E       		      DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   0933 42 48 47 59 		      DB 'B','H','G','Y','^',0,0,'"','M','J'   ;50-59	;50-59
324)   0937 5E 00 00 22 		      DB 'B','H','G','Y','^',0,0,'"','M','J'   ;50-59	;50-59
324)   093B 4D 4A       		      DB 'B','H','G','Y','^',0,0,'"','M','J'   ;50-59	;50-59
325)   093D 55 5E 2A 00 		      DB 'U','^','*',0,0,'<','K','I','O',')'   ;60-69	;60-69
325)   0941 00 3C 4B 49 		      DB 'U','^','*',0,0,'<','K','I','O',')'   ;60-69	;60-69
325)   0945 4F 29       		      DB 'U','^','*',0,0,'<','K','I','O',')'   ;60-69	;60-69
326)   0947 28 00 00 3E 		      DB '(',0,0,'>','?','L',':','P','_',0      ;70-79	;70-79
326)   094B 3F 4C 3A 50 		      DB '(',0,0,'>','?','L',':','P','_',0      ;70-79	;70-79
326)   094F 5F 00       		      DB '(',0,0,'>','?','L',':','P','_',0      ;70-79	;70-79
327)   0951 00 00 22 00 		      DB 0,0,34,0,'{','+',0,0,0,0               ;80-89	;80-89
327)   0955 7B 2B 00 00 		      DB 0,0,34,0,'{','+',0,0,0,0               ;80-89	;80-89
327)   0959 00 00       		      DB 0,0,34,0,'{','+',0,0,0,0               ;80-89	;80-89
328)   095B 0D 7D 00 7C 		      DB 13,'}',0,'|',0,0,0,0,0,0               ;90-99	;90-99
328)   095F 00 00 00 00 		      DB 13,'}',0,'|',0,0,0,0,0,0               ;90-99	;90-99
328)   0963 00 00       		      DB 13,'}',0,'|',0,0,0,0,0,0               ;90-99	;90-99
329)   0965 00 00 06 00 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
329)   0969 00 08 00 04 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
329)   096D 09 00       		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
330)   096F 00 00 01 07 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
330)   0973 0A 00 03 0B 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
330)   0977 1B 00       		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
331)   0979 00 00 2B 2D 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
331)   097D 2A 39 00 00 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
331)   0981 00 00       		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
332)   0983 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
332)   0987 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
332)   098B 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
333)   098D 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
333)   0991 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
333)   0995 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
334)   0997 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
334)   099B 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
334)   099F 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
335)   09A1 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
335)   09A5 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
335)   09A9 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
 39)   09AB 3E 03       		STRG_INIT: LD A,3  ;38400 BPS	;38400 BPS
 40)   09AD CD D4 0A    		 CALL STOR_INI	;
 41)   09B0 C9          		 RET	;
 44)   09B1 21 E1 83    		NEWCMD: LD HL,STRGCMD 	;
 45)   09B4 77          		 LD (HL),A	;
 46)   09B5 23          		 INC HL	;
 47)   09B6 E5          		 PUSH HL	;
 48)   09B7 AF          		 XOR A	;
 49)   09B8 06 03       		 LD B,3	;
 50)   09BA 77          		CCAGN: LD (HL),A	;
 51)   09BB 23          		 INC HL	;
 52)   09BC 10 FC       		 DJNZ CCAGN	;
 53)   09BE E1          		 POP HL   ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 54)   09BF C9          		 RET	;
 57)   09C0 CD 35 0B    		SENDCMD: CALL FLUSHREC	;
 58)   09C3 21 E1 83    		 LD HL,STRGCMD	;
 59)   09C6 06 04       		 LD B,4 	;
 60)   09C8 7E          		NXTBT: LD A,(HL)	;
 61)   09C9 CD 04 0B    		 CALL STOR_TX	;
 62)   09CC 23          		 INC HL	;
 63)   09CD 10 F9       		 DJNZ NXTBT	;
 64)   09CF C9          		 RET	;
 66)   09D0 3E 01       		STRG_OPENCRD: LD A,OPENCARD	;
 67)   09D2 CD B1 09    		 CALL NEWCMD	;
 68)   09D5 CD C0 09    		 CALL SENDCMD	;
 69)   09D8 CD CB 25    		 CALL DEL2	;
 70)   09DB CD 17 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
 71)   09DE C9          		 RET	;
 75)   09DF 3E 0A       		STRG_DIRLIST: LD A,LISTDIR	;
 76)   09E1 CD B1 09    		 CALL NEWCMD	;
 77)   09E4 CD C0 09    		 CALL SENDCMD	;
 78)   09E7 CD CB 25    		 CALL DEL2	;
 80)   09EA 11 89 83    		 LD DE,BUFFER	;
 81)   09ED CD 17 0B    		NXTCHR CALL STOR_RX 	;
 82)   09F0 FE FF       		 CP 255	;
 83)   09F2 28 05       		 JR Z,DIROUT	;
 85)   09F4 CD 2B 15    		 CALL LCD_PRINTCHAR	;
 86)   09F7 18 F4       		 JR NXTCHR	;
 87)   09F9 CD CB 25    		DIROUT: CALL DEL2	;
 88)   09FC CD 17 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
 89)   09FF C9          		 RET	;
 93)   0A00 CD 0D 0B    		SENDFNAME: CALL STOR_TXT ;SEND FILENAME	;SEND FILENAME
 94)   0A03 AF          		 XOR A	;
 95)   0A04 CD 04 0B    		 CALL STOR_TX	;
 96)   0A07 C9          		 RET	;
 99)   0A08 3E 0B       		STRG_DIRCHG: LD A,CHANGEDIR	;
100)   0A0A CD B1 09    		 CALL NEWCMD	;
101)   0A0D CD C0 09    		 CALL SENDCMD	;
102)   0A10 21 B9 83    		 LD HL,STRGBUFF	;
103)   0A13 CD 00 0A    		        CALL SENDFNAME  	;
104)   0A16 CD CB 25    		 CALL DEL2	;
105)   0A19 CD 17 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
106)   0A1C C9          		 RET	;
109)   0A1D 3E 02       		STRG_OPNFILE: LD A,OPENFILE	;
110)   0A1F CD B1 09    		 CALL NEWCMD	;
111)   0A22 CD C0 09    		 CALL SENDCMD 	;
112)   0A25 21 B9 83    		 LD HL,STRGBUFF	;
113)   0A28 CD 00 0A    		 CALL SENDFNAME	;
114)   0A2B CD CB 25    		 CALL DEL2 	;
115)   0A2E CD 17 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
117)   0A31 32 E5 83    		 LD (FID),A	;
118)   0A34 FE C8       		 CP 200	;
119)   0A36 C9          		 RET ; IF CARRY ERROR OCCURED 	; IF CARRY ERROR OCCURED
122)   0A37 F5          		STRG_CLSFILE: PUSH AF	;
123)   0A38 3E 03       		 LD A,CLOSEFILE  	;
124)   0A3A CD B1 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN 	;HL POINTS ON FID IN COMMAND ON RETURN
125)   0A3D F1          		 POP AF	;
126)   0A3E 77          		 LD (HL),A ;FID	;FID
127)   0A3F CD C0 09    		 CALL SENDCMD	;
128)   0A42 CD 17 0B    		 CALL STOR_RX    ;GET RESULT	;GET RESULT
129)   0A45 C9          		 RET	;
136)   0A46 F5          		STRG_BLKREAD: PUSH AF	;
137)   0A47 3E 06       		 LD A,READBLOCK	;
138)   0A49 CD B1 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
139)   0A4C F1          		 POP AF	;
140)   0A4D 77          		 LD (HL),A ;FID	;FID
141)   0A4E 23          		 INC HL 	;
142)   0A4F 78          		 LD A,B  ;BYTES HI	;BYTES HI
143)   0A50 77          		 LD (HL),A	;
144)   0A51 23          		 INC HL 	;
145)   0A52 79          		 LD A,C  ;BYTES LOW	;BYTES LOW
146)   0A53 77          		 LD (HL),A	;
147)   0A54 CD C0 09    		 CALL SENDCMD  ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
148)   0A57 CD CB 25    		 CALL DEL2	;
149)   0A5A CD 17 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
150)   0A5D 47          		 LD B,A  	;
151)   0A5E CD 17 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
152)   0A61 4F          		 LD C,A	;
153)   0A62 78          		 LD A,B	;
154)   0A63 B1          		 OR C	;
155)   0A64 28 10       		 JR Z,EREXIT   ;SOME ERROR OCCURED	;SOME ERROR OCCURED
157)   0A66 C5          		 PUSH BC   ;SAVE BYTES TO RECEIVE  	;SAVE BYTES TO RECEIVE
158)   0A67 CD 17 0B    		OFNXCH: CALL STOR_RX	;
159)   0A6A 12          		 LD (DE),A	;
160)   0A6B 13          		 INC DE	;
161)   0A6C 0B          		 DEC BC	;
162)   0A6D 78          		 LD A,B	;
163)   0A6E B1          		 OR C	;
164)   0A6F 20 F6       		 JR NZ,OFNXCH	;
165)   0A71 CD 17 0B    		OFEXIT: CALL STOR_RX    ;GET RESULT	;GET RESULT
166)   0A74 C1          		 POP BC  ;TOTAL BYTES RECEIVED  	;TOTAL BYTES RECEIVED
167)   0A75 C9          		 RET  	;
168)   0A76 21 BF 0A    		EREXIT: LD HL,ERRMSG	;
169)   0A79 CD 30 17    		 CALL LCD_MSG  ;PRINT TO SCREEN	;PRINT TO SCREEN
170)   0A7C 18 F3       		 JR OFEXIT	;
174)   0A7E F5          		STRG_TPFILE: PUSH AF	;
175)   0A7F 3E 06       		 LD A,READBLOCK	;
176)   0A81 CD B1 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
177)   0A84 F1          		 POP AF	;
178)   0A85 77          		 LD (HL),A ;FID	;FID
179)   0A86 23          		 INC HL 	;
180)   0A87 78          		 LD A,B  ;BYTES HI	;BYTES HI
181)   0A88 77          		 LD (HL),A	;
182)   0A89 23          		 INC HL 	;
183)   0A8A 79          		 LD A,C  ;BYTES LOW	;BYTES LOW
184)   0A8B 77          		 LD (HL),A	;
185)   0A8C CD C0 09    		 CALL SENDCMD  ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
186)   0A8F CD CB 25    		 CALL DEL2	;
187)   0A92 CD 17 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
188)   0A95 47          		 LD B,A  	;
189)   0A96 CD 17 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
190)   0A99 4F          		 LD C,A	;
191)   0A9A 78          		 LD A,B	;
192)   0A9B B1          		 OR C	;
193)   0A9C CA 76 0A    		 JP Z,EREXIT   ;SOME ERROR OCCURED	;SOME ERROR OCCURED
195)   0A9F 3E 0D       		 LD A,13	;
196)   0AA1 C5          		 PUSH BC	;
197)   0AA2 CD 2B 15    		 CALL LCD_PRINTCHAR	;
198)   0AA5 C1          		 POP BC  	;
199)   0AA6 CD 17 0B    		TFOFNXCH: CALL STOR_RX ;GET THE CHAR	;GET THE CHAR
200)   0AA9 C5          		 PUSH BC	;
201)   0AAA CD 2B 15    		 CALL LCD_PRINTCHAR   ;PRINT TO SCREEN	;PRINT TO SCREEN
202)   0AAD C1          		 POP BC	;
203)   0AAE 0B          		 DEC BC	;
204)   0AAF 78          		 LD A,B	;
205)   0AB0 B1          		 OR C	;
206)   0AB1 20 F3       		 JR NZ,TFOFNXCH  	;
207)   0AB3 CD 17 0B    		TFOFEXIT: CALL STOR_RX  ;GET RESULT  	;GET RESULT
208)   0AB6 C9          		 RET 	;
209)   0AB7 21 BF 0A    		TFEREXIT: LD HL,ERRMSG	;
210)   0ABA CD 30 17    		 CALL LCD_MSG  ;PRINT TO SCREEN	;PRINT TO SCREEN
211)   0ABD 18 F4       		 JR TFOFEXIT	;
213)   0ABF 0D          		ERRMSG  DEFB 13	;
214)   0AC0 45 52 52 4F 		        DEFM "ERROR ON RET BYTES"	;
214)   0AC4 52 20 4F 4E 		        DEFM "ERROR ON RET BYTES"	;
214)   0AC8 20 52 45 54 		        DEFM "ERROR ON RET BYTES"	;
214)   0ACC 20 42 59 54 		        DEFM "ERROR ON RET BYTES"	;
214)   0AD0 45 53       		        DEFM "ERROR ON RET BYTES"	;
215)   0AD2 0D 00       		        DEFB 13,0	;
233)   0AD4 	            		 RBR EQU DEVSTOR+0 ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
234)   0AD4 	            		 THR EQU DEVSTOR+0 ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
235)   0AD4 	            		 IER EQU DEVSTOR+1 ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
240)   0AD4 	            		 IIR EQU DEVSTOR+2 ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
245)   0AD4 	            		 FCR EQU DEVSTOR+2 ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
253)   0AD4 	            		 LCR EQU DEVSTOR+3 ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
261)   0AD4 	            		 MCR EQU DEVSTOR+4 ;MODEM CONTROL REGISTER 	;MODEM CONTROL REGISTER
262)   0AD4 	            		 LSR EQU DEVSTOR+5 ;LINE STATUS REGISTER	;LINE STATUS REGISTER
271)   0AD4 	            		 MSR EQU DEVSTOR+6 ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
272)   0AD4 	            		 SCR EQU DEVSTOR+7 ;SCRATCH REGISTER	;SCRATCH REGISTER
273)   0AD4 	            		 DLL EQU DEVSTOR+0 ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
274)   0AD4 	            		 DLM EQU DEVSTOR+1 ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
278)   0AD4 F5          		STOR_INI: PUSH AF	;
279)   0AD5 3E 80       		 LD      A,$80           ; Mask to set DLAB on	; Mask to set DLAB on
280)   0AD7 D3 33       		 OUT     (LCR),A         ; Send to LINe Control Register 	; Send to LINe Control Register
288)   0AD9 F1          		   POP AF	;
289)   0ADA D3 30       		 OUT     (DLL),A         ; Set LSB of divisor	; Set LSB of divisor
290)   0ADC 3E 00       		 LD      A,00            ; This will be the MSB of the divisior	; This will be the MSB of the divisior
291)   0ADE D3 31       		 OUT     (DLM),A         ; Send to the MSB register	; Send to the MSB register
292)   0AE0 3E 03       		 LD      A,$03           ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
293)   0AE2 D3 33       		 OUT     (LCR),A         ; Write new value to LCR	; Write new value to LCR
295)   0AE4 3E 00       		   LD A, 0       	;
296)   0AE6 D3 32       		   OUT  (FCR),A      ;//was commented	;//was commented
297)   0AE8 3E 00       		 LD      A,$00           ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
298)   0AEA D3 31       		 OUT     (IER),A         ; Send to INterrupt Enable Register 	; Send to INterrupt Enable Register
299)   0AEC AF          		    XOR A     ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
300)   0AED D3 34       		       OUT (MCR),A    	;
301)   0AEF C9          		 RET	;
307)   0AF0 F5          		STORTXRD: PUSH    AF	;
308)   0AF1 DB 35       		STORTXLP: IN      A,(LSR)         ; fetch the control register	; fetch the control register
309)   0AF3 CB 6F       		        BIT     5,A             ; bit will be set if UART is ready	; bit will be set if UART is ready
310)   0AF5 28 FA       		        JR      Z,STORTXLP	;
311)   0AF7 F1          		        POP     AF	;
312)   0AF8 C9          		        RET  	;
315)   0AF9 F5          		WAITCTSLOW: PUSH AF	;
316)   0AFA DB 36       		TSTAGN: IN A,(MSR)	;
317)   0AFC CB 67       		  BIT 4,A     ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
318)   0AFE 20 02       		  JR NZ,WCLEX	;
319)   0B00 18 F8       		  JR TSTAGN	;
320)   0B02 F1          		WCLEX: POP AF	;
321)   0B03 C9          		  RET	;
327)   0B04 CD F9 0A    		  CALL WAITCTSLOW	;
332)   0B07 CD F0 0A    		  CALL    STORTXRD	;
337)   0B0A D3 30       		        OUT     (THR),A	;
338)   0B0C C9          		        RET	;
341)   0B0D 7E          		STOR_TXT: LD A,(HL)	;
342)   0B0E 23          		 INC HL 	;
343)   0B0F FE 00       		 CP 0	;
344)   0B11 C8          		 RET Z	;
345)   0B12 CD 04 0B    		        CALL STOR_TX	;
346)   0B15 18 F6       		 JR STOR_TXT	;
353)   0B17 F3          		STOR_RX:  DI	;
354)   0B18 3E 02       		        LD A,2 ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
355)   0B1A D3 34       		        OUT (MCR),A	;
356)   0B1C CD 40 0B    		  CALL    STORRXRD              	;
357)   0B1F AF          		STOR_GTCH: XOR A      ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
358)   0B20 D3 34       		        OUT (MCR),A        	;
359)   0B22 DB 30       		       IN A,(RBR)	;
360)   0B24 FB          		       EI	;
361)   0B25 C9          		        RET	;
363)   0B26 3E 02       		STOR_RXNW: LD A,2    ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
364)   0B28 D3 34       		        OUT (MCR),A	;
365)   0B2A DB 35       		  IN      A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
366)   0B2C CB 47       		        BIT     0,A                    	;
367)   0B2E 28 03       		        JR Z,STOR_NOCHAR	;
368)   0B30 F3          		        DI	;
369)   0B31 18 EC       		        JR STOR_GTCH        	;
370)   0B33 AF          		STOR_NOCHAR: XOR A  ;RETURN ZERO	;RETURN ZERO
371)   0B34 C9          		        RET	;
373)   0B35 06 0A       		FLUSHREC: LD B,10	;
374)   0B37 CD 26 0B    		FRAGN:     CALL  STOR_RXNW	;
375)   0B3A 10 FB       		  DJNZ FRAGN       	;
376)   0B3C AF          		  XOR A	;
377)   0B3D D3 34       		  OUT (MCR),A	;
378)   0B3F C9          		  RET	;
384)   0B40 F3          		STORRXRD: DI	;
385)   0B41 F5          		        PUSH    AF	;
386)   0B42 DB 35       		STORRXLP: IN      A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
387)   0B44 CB 47       		        BIT     0,A             ; bit will be set if UART has data	; bit will be set if UART has data
388)   0B46 28 FA       		        JR      Z,STORRXLP	;
389)   0B48 F1          		        POP     AF	;
390)   0B49 FB          		        EI	;
391)   0B4A C9          		        RET  	;
395)   0B4B DB 35       		STOR_KEYRD: IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
396)   0B4D CB 47       		         BIT     0,A             ; bit will be set if UART has data        	; bit will be set if UART has data
397)   0B4F C9          		         RET 	;
  8)   0B50 	            		DI2C_STA  EQU DEVI2C+0 ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  9)   0B50 	            		DI2C_INDPTR EQU DEVI2C+0 ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
 10)   0B50 	            		DI2C_DAT EQU DEVI2C+1 ;01 A0=HIGH A1=LOW R/W  DEF $00	;01 A0=HIGH A1=LOW R/W  DEF $00
 11)   0B50 	            		DI2C_CON EQU DEVI2C+3 ;11 A0=HIGH A1=HIGH R/W DEF $00	;11 A0=HIGH A1=HIGH R/W DEF $00
 12)   0B50 	            		DI2C_INDIR EQU DEVI2C+2 ;10 A0=LOW A1=HIGH R/W DEF $00	;10 A0=LOW A1=HIGH R/W DEF $00
 57)   0B50 C5          		I2C_RDSTAT_WT: PUSH BC	;
 58)   0B51 01 00 20    		 LD BC,$2000	;
 59)   0B54 DB 4B       		I2CRWT_AGN: IN A,(DI2C_CON) ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 60)   0B56 CB 5F       		 BIT 3,A   ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 61)   0B58 20 05       		 JR NZ,I2CRWT_OK  ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 62)   0B5A 0B          		 DEC BC	;
 63)   0B5B 78          		 LD A,B	;
 64)   0B5C B1          		 OR C	;
 65)   0B5D 20 F5       		 JR NZ,I2CRWT_AGN	;
 66)   0B5F C1          		I2CRWT_OK: POP BC	;
 67)   0B60 DB 48       		 IN A,(DI2C_STA)  ;VALID HERE	;VALID HERE
 68)   0B62 C9          		 RET	;
 70)   0B63 DB 4B       		I2C_RDSTAT_NW: IN A,(DI2C_CON) ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 71)   0B65 CB 5F       		 BIT 3,A   ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 72)   0B67 3E FF       		 LD A,$FF  ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 73)   0B69 C8          		 RET Z   ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 74)   0B6A DB 48       		 IN A,(DI2C_STA)  ;VALID HERE	;VALID HERE
 75)   0B6C C9          		 RET	;
 78)   0B6D 3E 01       		I2C_INIT: LD A,I2CADR	;
 79)   0B6F D3 48       		 OUT (DI2C_INDPTR),A	;
 80)   0B71 3E E0       		 LD A,$E0	;
 81)   0B73 D3 4A       		 OUT (DI2C_INDIR),A  ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 83)   0B75 3E 40       		 LD A,$40  ;INIT	;INIT
 84)   0B77 D3 4B       		 OUT (DI2C_CON),A ;	;
 85)   0B79 06 FA       		 LD B,250	;
 86)   0B7B CD B8 25    		 CALL DELAYMICRO	;
 87)   0B7E 06 FA       		 LD B,250	;
 88)   0B80 CD B8 25    		 CALL DELAYMICRO  ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 93)   0B83 3E 06       		 LD A,I2CMODE	;
 94)   0B85 D3 48       		 OUT (DI2C_INDPTR),A ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 95)   0B87 3E 00       		 LD A,0   ;SELECT MODE 0	;SELECT MODE 0
 96)   0B89 D3 4A       		 OUT (DI2C_INDIR),A	;
 97)   0B8B 3E 02       		 LD A,I2CSCLL	;
 98)   0B8D D3 48       		 OUT (DI2C_INDPTR),A ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 99)   0B8F 3E 9D       		 LD A,$9D  ;SELECT CLK L	;SELECT CLK L
100)   0B91 D3 4A       		 OUT (DI2C_INDIR),A	;
101)   0B93 3E 03       		 LD A,I2CSCLH	;
102)   0B95 D3 48       		 OUT (DI2C_INDPTR),A ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
103)   0B97 3E 86       		 LD A,$86  ;SELECT CLK H	;SELECT CLK H
104)   0B99 D3 4A       		 OUT (DI2C_INDIR),A	;
106)   0B9B C9          		 RET	;
113)   0B9C 3E 60       		I2C_WR_BYTE: LD A,$60  ;START	;START
114)   0B9E D3 4B       		   OUT (DI2C_CON),A	;
115)   0BA0 CD 50 0B    		WRB_LP1: CALL I2C_RDSTAT_WT ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
116)   0BA3 5F          		 LD E,A   ;SAVE STATUS	;SAVE STATUS
117)   0BA4 FE 08       		 CP MASTER_START_TXed ;A HAS THE STATUS	;A HAS THE STATUS
118)   0BA6 28 21       		 JR Z,WRB_S1	;
119)   0BA8 FE 10       		 CP MASTER_RESTART_TXed	;
120)   0BAA 28 1D       		 JR Z,WRB_S1	;
121)   0BAC FE 28       		 CP MASTER_DATA_W_ACK	;
122)   0BAE 28 26       		 JR Z,WRB_S2	;
123)   0BB0 FE 18       		 CP MASTER_SLA_W_ACK	;
124)   0BB2 28 23       		 JR Z,WRB_S3	;
125)   0BB4 FE 20       		 CP MASTER_SLA_W_NAK	;
126)   0BB6 28 2D       		 JR Z,WRB_EXIT	;
127)   0BB8 FE 30       		 CP MASTER_DATA_W_NAK	;
128)   0BBA 28 29       		 JR Z,WRB_EXIT	;
129)   0BBC FE 38       		 CP MASTER_ARB_LOST	;
130)   0BBE C8          		 RET Z	;
131)   0BBF FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
132)   0BC1 C8          		 RET Z	;
133)   0BC2 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
134)   0BC4 C8          		 RET Z	;
135)   0BC5 FE D8       		 CP SLAVE_GENERALCALL_AL 	;
136)   0BC7 C8          		 RET Z	;
137)   0BC8 C9          		 RET	;
139)   0BC9 7A          		WRB_S1: LD A,D    ;DEVICE ADDR	;DEVICE ADDR
140)   0BCA CB 27       		 SLA A	;
141)   0BCC E6 FE       		 AND $FE   ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
142)   0BCE D3 49       		 OUT (DI2C_DAT),A  	;
143)   0BD0 3E 40       		 LD A,$40	;
144)   0BD2 D3 4B       		   OUT (DI2C_CON),A  	;
145)   0BD4 18 CA       		 JR WRB_LP1	;
146)   0BD6 0B          		WRB_S2: DEC BC	;
147)   0BD7 78          		WRB_S3: LD A,B	;
148)   0BD8 B1          		 OR C	;
149)   0BD9 28 0A       		 JR Z,WRB_EXIT	;
150)   0BDB 7E          		 LD A,(HL)	;
151)   0BDC 23          		 INC HL	;
152)   0BDD D3 49       		 OUT (DI2C_DAT),A	;
153)   0BDF 3E 40       		 LD A,$40	;
154)   0BE1 D3 4B       		   OUT (DI2C_CON),A	;
155)   0BE3 18 BB       		 JR WRB_LP1 	;
157)   0BE5 3E 50       		WRB_EXIT: LD A,$50 ;STOP	;STOP
158)   0BE7 D3 4B       		   OUT (DI2C_CON),A	;
159)   0BE9 78          		 LD A,B	;
160)   0BEA B1          		 OR C	;
161)   0BEB C9          		 RET  ;IF A NOT ZERO THEN ERROR  	;IF A NOT ZERO THEN ERROR
167)   0BEC 78          		I2C_RD_BYTE: LD A,B	;
168)   0BED B1          		 OR C	;
169)   0BEE C8          		 RET Z ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
170)   0BEF 3E 60       		 LD A,$60	;
171)   0BF1 D3 4B       		   OUT (DI2C_CON),A	;
172)   0BF3 CD 50 0B    		RDB_LP1: CALL I2C_RDSTAT_WT ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
173)   0BF6 1E 00       		 LD E,0	;
174)   0BF8 FE 08       		 CP MASTER_START_TXed	;
175)   0BFA 28 1F       		 JR Z,RDB_S1	;
177)   0BFC 28 1D       		 JR Z,RDB_S1	;
178)   0BFE FE 58       		 CP MASTER_DATA_R_NAK	;
179)   0C00 28 26       		 JR Z,RDB_S2	;
180)   0C02 FE 50       		 CP MASTER_DATA_R_ACK	;
181)   0C04 28 24       		 JR Z,RDB_S3	;
182)   0C06 FE 40       		 CP MASTER_SLA_R_ACK	;
183)   0C08 28 25       		 JR Z,RDB_S4	;
184)   0C0A FE 48       		 CP MASTER_SLA_R_NAK	;
185)   0C0C 28 38       		 JR Z,RDB_EXIT	;
186)   0C0E FE 38       		 CP MASTER_ARB_LOST	;
187)   0C10 C8          		 RET Z	;
188)   0C11 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
189)   0C13 C8          		 RET Z	;
190)   0C14 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
191)   0C16 C8          		 RET Z	;
192)   0C17 FE D8       		 CP SLAVE_GENERALCALL_AL 	;
193)   0C19 C8          		 RET Z	;
194)   0C1A C9          		 RET  	;
197)   0C1B 7A          		RDB_S1: LD A,D    ;DEVICE ADDR	;DEVICE ADDR
198)   0C1C CB 27       		 SLA A	;
199)   0C1E F6 01       		 OR $01   ;ADDR + READ COMMAND	;ADDR + READ COMMAND
200)   0C20 D3 49       		 OUT (DI2C_DAT),A	;
201)   0C22 3E 40       		 LD A,$40	;
202)   0C24 D3 4B       		   OUT (DI2C_CON),A	;
203)   0C26 18 CB       		 JR RDB_LP1	;
204)   0C28 1E 01       		RDB_S2: LD E,1   ;MEANS WE EXIT	;MEANS WE EXIT
205)   0C2A DB 49       		RDB_S3: IN A,(DI2C_DAT)  ;READ DATA	;READ DATA
206)   0C2C 77          		 LD (HL),A	;
207)   0C2D 23          		 INC HL	;
208)   0C2E 0B          		 DEC BC   	;
209)   0C2F 78          		RDB_S4: LD A,B   ; IS LENGTH 0	; IS LENGTH 0
210)   0C30 B1          		 OR C	;
211)   0C31 28 13       		 JR Z,RDB_EXIT 	;
212)   0C33 7B          		 LD A,E	;
213)   0C34 FE 01       		 CP 1	;
214)   0C36 28 0E       		 JR Z,RDB_EXIT 	;
215)   0C38 78          		 LD A,B	;
216)   0C39 81          		 ADD C	;
217)   0C3A FE 01       		 CP 1	;
218)   0C3C 3E 40       		 LD A,$40 	;
219)   0C3E 28 02       		 JR Z,RDB_NXT1	;
220)   0C40 3E C0       		 LD A,$C0	;
221)   0C42 D3 4B       		RDB_NXT1: OUT (DI2C_CON),A  ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0 	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
222)   0C44 18 AD       		 JR RDB_LP1	;
224)   0C46 3E 50       		RDB_EXIT: LD A,$50	;
225)   0C48 D3 4B       		   OUT (DI2C_CON),A	;
226)   0C4A 78          		 LD A,B	;
227)   0C4B B1          		 OR C	;
228)   0C4C C9          		 RET  ;IF A NOT ZERO THEN ERROR 	;IF A NOT ZERO THEN ERROR
 26)   0C4D 53 75 6E 64 		SUN DEFM  "Sunday"	;
 26)   0C51 61 79       		SUN DEFM  "Sunday"	;
 27)   0C53 00          		 DB 0	;
 28)   0C54 4D 6F 6E 64 		MON    DEFM  "Monday"	;
 28)   0C58 61 79       		MON    DEFM  "Monday"	;
 29)   0C5A 00          		 DB 0	;
 30)   0C5B 54 75 65 73 		TUE    DEFM  "Tuesday"	;
 30)   0C5F 64 61 79    		TUE    DEFM  "Tuesday"	;
 31)   0C62 00          		 DB 0	;
 32)   0C63 57 65 64 6E 		WED DEFM  "Wednesday"	;
 32)   0C67 65 73 64 61 		WED DEFM  "Wednesday"	;
 32)   0C6B 79          		WED DEFM  "Wednesday"	;
 33)   0C6C 00          		 DB 0	;
 34)   0C6D 54 68 75 72 		THU DEFM "Thursday"	;
 34)   0C71 73 64 61 79 		THU DEFM "Thursday"	;
 35)   0C75 00          		 DB 0	;
 36)   0C76 46 72 69 64 		FRI DEFM "Friday"	;
 36)   0C7A 61 79       		FRI DEFM "Friday"	;
 37)   0C7C 00          		 DB 0	;
 38)   0C7D 53 61 74 75 		SAT DEFM "Saturday"	;
 38)   0C81 72 64 61 79 		SAT DEFM "Saturday"	;
 39)   0C85 00          		 DB 0	;
 41)   0C86 4D 0C       		DAYS DEFW SUN	;
 42)   0C88 54 0C       		 DEFW MON	;
 43)   0C8A 5B 0C       		 DEFW TUE	;
 44)   0C8C 63 0C       		 DEFW WED	;
 45)   0C8E 6D 0C       		 DEFW THU	;
 46)   0C90 76 0C       		 DEFW FRI	;
 47)   0C92 7D 0C       		 DEFW SAT	;
 49)   0C94 45 52 52 4F 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0C98 52 20 4F 4E 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0C9C 20 52 45 43 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CA0 45 49 56 49 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CA4 4E 47       		MESERR DEFM "ERROR ON RECEIVING"	;
 50)   0CA6 0A 0D 00    		    DEFB 10,13,0	;
 52)   0CA9 45 52 52 4F 		MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0CAD 52 20 4F 4E 		MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0CB1 20 53 45 4E 		MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0CB5 44 49 4E 47 		MESERR0 DEFM "ERROR ON SENDING"	;
 53)   0CB9 0A 0D 00    		    DEFB 10,13,0	;
 55)   0CBC 7B          		SHERR0: LD A,E	;
 56)   0CBD C5          		 PUSH BC	;
 57)   0CBE CD 2B 04    		 CALL SOUTAS	;
 58)   0CC1 C1          		 POP BC	;
 59)   0CC2 79          		 LD A,C	;
 60)   0CC3 CD 2B 04    		 CALL SOUTAS	;
 62)   0CC6 21 A9 0C    		 LD HL,MESERR0	;
 63)   0CC9 CD 0D 06    		 CALL RS_TXT	;
 64)   0CCC C9          		 RET	;
 67)   0CCD 79          		SHERR: LD A,C	;
 68)   0CCE CD 2B 04    		 CALL SOUTAS	;
 69)   0CD1 21 94 0C    		 LD HL,MESERR	;
 70)   0CD4 CD 0D 06    		 CALL RS_TXT	;
 71)   0CD7 37          		 SCF	;
 72)   0CD8 C9          		 RET	;
 75)   0CD9 21 89 83    		@DS1307_GETNOW: LD HL,BUFFER	;
 76)   0CDC AF          		 XOR A   ;SEND COMMAND 0	;SEND COMMAND 0
 77)   0CDD 77          		 LD (HL),A	;
 78)   0CDE 16 68       		 LD D,DS1307_ADDRESS	;
 79)   0CE0 01 01 00    		 LD BC,1	;
 80)   0CE3 CD 9C 0B    		 CALL I2C_WRITE	;
 81)   0CE6 C2 BC 0C    		 JP NZ,SHERR0	;
 83)   0CE9 21 89 83    		 LD HL,BUFFER	;
 84)   0CEC 16 68       		 LD D,DS1307_ADDRESS	;
 85)   0CEE 01 07 00    		 LD BC,7	;
 86)   0CF1 CD EC 0B    		 CALL I2C_READ	;
 87)   0CF4 C2 CD 0C    		 JP NZ,SHERR	;
 88)   0CF7 AF          		 XOR A	;
 89)   0CF8 C9          		 RET	;
 95)   0CF9 11 89 83    		 LD DE,BUFFER	;
 96)   0CFC AF          		 XOR A	;
 97)   0CFD 12          		 LD (DE),A	;
 98)   0CFE 13          		 INC DE	;
 99)   0CFF 3E 0A       		 LD A,10 ; 10 SECS	; 10 SECS
100)   0D01 CD FF 25    		 CALL BN2BCD	;
101)   0D04 7D          		 LD A,L	;
102)   0D05 12          		 LD (DE),A	;
103)   0D06 13          		 INC DE	;
104)   0D07 3E 22       		 LD A,34 ; 28 MINS	; 28 MINS
105)   0D09 CD FF 25    		 CALL BN2BCD	;
106)   0D0C 7D          		 LD A,L	;
107)   0D0D 12          		 LD (DE),A	;
108)   0D0E 13          		 INC DE	;
109)   0D0F 3E 12       		 LD A,18 ; 19 HOURS	; 19 HOURS
110)   0D11 CD FF 25    		 CALL BN2BCD	;
111)   0D14 7D          		 LD A,L	;
112)   0D15 12          		 LD (DE),A	;
113)   0D16 13          		 INC DE	;
114)   0D17 3E 05       		 LD A,5 ; DAY OF WEEK 	; DAY OF WEEK
115)   0D19 12          		 LD (DE),A	;
116)   0D1A 13          		 INC DE	;
117)   0D1B 3E 12       		 LD A,18 ; 8 DAY	; 8 DAY
118)   0D1D CD FF 25    		 CALL BN2BCD	;
119)   0D20 7D          		 LD A,L	;
120)   0D21 12          		 LD (DE),A	;
121)   0D22 13          		 INC DE	;
122)   0D23 3E 02       		 LD A,02 ; 10 MONTH	; 10 MONTH
123)   0D25 CD FF 25    		 CALL BN2BCD	;
124)   0D28 7D          		 LD A,L	;
125)   0D29 12          		 LD (DE),A	;
126)   0D2A 13          		 INC DE	;
127)   0D2B 3E 15       		 LD A,21 ; 21 YEAR (2020)	; 21 YEAR (2020)
128)   0D2D CD FF 25    		 CALL BN2BCD	;
129)   0D30 7D          		 LD A,L	;
130)   0D31 12          		 LD (DE),A	;
131)   0D32 13          		 INC DE	;
132)   0D33 AF          		 XOR A	;
133)   0D34 12          		 LD (DE),A	;
146)   0D35 21 89 83    		@DS1307_ADJUST: LD HL,BUFFER	;
147)   0D38 16 68       		 LD D,DS1307_ADDRESS	;
148)   0D3A 01 09 00    		 LD BC,9	;
149)   0D3D CD 9C 0B    		 CALL I2C_WRITE	;
150)   0D40 C2 BC 0C    		 JP NZ,SHERR0	;
151)   0D43 01 FF FF    		 LD BC,FFFFh ;8000H FOR 4MHZ	;8000H FOR 4MHZ
152)   0D46 CD 7C 26    		 CALL PAUSE_LOOP ; 0.5 second delay 	; 0.5 second delay
153)   0D49 01 FF FF    		 LD BC,FFFFh ;8000H FOR 4MHZ	;8000H FOR 4MHZ
154)   0D4C CD 7C 26    		 CALL PAUSE_LOOP ; 0.5 second delay 	; 0.5 second delay
155)   0D4F C9          		 RET	;
159)   0D50 21 89 83    		@DS1307_SETSQ: LD HL,BUFFER	;
160)   0D53 E5          		 PUSH HL	;
161)   0D54 3E 07       		 LD A,DS1307_CONTROL_REGISTER	;
162)   0D56 77          		 LD (HL),A	;
163)   0D57 23          		 INC HL	;
164)   0D58 7A          		 LD A,D	;
165)   0D59 77          		 LD (HL),A	;
166)   0D5A E1          		 POP HL	;
167)   0D5B 16 68       		 LD D,DS1307_ADDRESS	;
168)   0D5D 01 02 00    		 LD BC,2	;
169)   0D60 CD 9C 0B    		 CALL I2C_WRITE	;
170)   0D63 C2 BC 0C    		 JP NZ,SHERR0 	;
171)   0D66 C9          		 RET	;
105)   0D67 00          		LCD_DSPMODE DB 0	;
106)   0D68 00          		LCD_DSPCTRL DB 0	;
111)   0D69 16 00       		LCD16_WR4BITS: LD D,0 ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
113)   0D6B 0F          		 RRCA   ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
114)   0D6C 30 02       		 JR NC,LWNXT1   ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
115)   0D6E CB E2       		 SET D4,D	;
116)   0D70 0F          		LWNXT1: RRCA	;
117)   0D71 30 02       		 JR NC,LWNXT2   ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
118)   0D73 CB EA       		 SET D5,D	;
119)   0D75 0F          		LWNXT2: RRCA	;
120)   0D76 30 02       		 JR NC,LWNXT3   ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
121)   0D78 CB F2       		 SET D6,D	;
122)   0D7A 0F          		LWNXT3: RRCA	;
123)   0D7B 30 02       		 JR NC,LWNXT4   ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
124)   0D7D CB FA       		 SET D7,D	;
125)   0D7F 7B          		LWNXT4: LD A,E	;
126)   0D80 0F          		 RRCA	;
127)   0D81 30 02       		 JR NC,LWNXT5	;
128)   0D83 CB C2       		 SET RS,D	;
131)   0D85 CB D2       		 SET EN,D  ;EN=HIGH	;EN=HIGH
132)   0D87 7A          		 LD A,D	;
133)   0D88 CD 92 0D    		 CALL LCD16_I2CSEND	;
134)   0D8B CB 92       		 RES EN,D  ;EN=LOW	;EN=LOW
135)   0D8D 7A          		 LD A,D	;
136)   0D8E CD 92 0D    		 CALL LCD16_I2CSEND	;
137)   0D91 C9          		 RET	;
141)   0D92 D5          		LCD16_I2CSEND: PUSH DE	;
142)   0D93 E5          		 PUSH HL	;
143)   0D94 21 89 83    		 LD HL,BUFFER	;
144)   0D97 77          		 LD (HL),A	;
145)   0D98 16 27       		 LD D,LCDADDR	;
146)   0D9A 01 01 00    		 LD BC,1	;
147)   0D9D CD 9C 0B    		 CALL I2C_WRITE	;
148)   0DA0 E1          		 POP HL	;
149)   0DA1 D1          		 POP DE	;
150)   0DA2 C9          		 RET	;
154)   0DA3 57          		LCD16_SEND: LD D,A ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
155)   0DA4 7B          		 LD A,E	;
156)   0DA5 0F          		 RRCA	;
157)   0DA6 38 07       		 JR C,ISCMDDATA	;
158)   0DA8 0F          		 RRCA	;
159)   0DA9 30 04       		 JR NC,ISCMDDATA	;
161)   0DAB 1E 00       		 LD E,COMMAND   ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
162)   0DAD 18 0E       		 JR LCSD_4BIT  	;
163)   0DAF 7A          		ISCMDDATA: LD A,D	;
164)   0DB0 CB 3F       		 SRL A	;
165)   0DB2 CB 3F       		 SRL A	;
166)   0DB4 CB 3F       		 SRL A	;
167)   0DB6 CB 3F       		 SRL A	;
168)   0DB8 D5          		 PUSH DE	;
169)   0DB9 CD 69 0D    		 CALL LCD16_WR4BITS ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
170)   0DBC D1          		 POP DE	;
171)   0DBD 7A          		LCSD_4BIT: LD A,D	;
172)   0DBE E6 0F       		 AND $0F	;
173)   0DC0 CD 69 0D    		 CALL LCD16_WR4BITS ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
174)   0DC3 C9          		 RET	;
179)   0DC4 1E 00       		LCD16_COMMD:   LD E,COMMAND	;
180)   0DC6 C3 A3 0D    		 JP LCD16_SEND	;
183)   0DC9 1E 01       		LCD16_DATA: LD E,LCD_DATA	;
184)   0DCB C3 A3 0D    		 JP LCD16_SEND	;
188)   0DCE 3E 03       		@LCD16_INIT: LD A,3     ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
189)   0DD0 1E 02       		 LD E,FOUR_BITS	;
190)   0DD2 CD A3 0D    		 CALL LCD16_SEND	;
191)   0DD5 01 00 30    		 LD BC,$3000	;
192)   0DD8 CD 7C 26    		 CALL PAUSE_LOOP  ;DELAY 4,5ms	;DELAY 4,5ms
193)   0DDB 3E 03       		 LD A,3	;
194)   0DDD 1E 02       		 LD E,FOUR_BITS	;
195)   0DDF CD A3 0D    		 CALL LCD16_SEND	;
196)   0DE2 01 00 30    		 LD BC,$3000	;
197)   0DE5 CD 7C 26    		 CALL PAUSE_LOOP  ;DELAY 4,5ms  	;DELAY 4,5ms
198)   0DE8 3E 03       		 LD A,3	;
199)   0DEA 1E 02       		 LD E,FOUR_BITS	;
200)   0DEC CD A3 0D    		 CALL LCD16_SEND	;
201)   0DEF 01 00 30    		 LD BC,$3000	;
202)   0DF2 CD 7C 26    		 CALL PAUSE_LOOP  ;DELAY 4,5ms	;DELAY 4,5ms
203)   0DF5 3E 02       		 LD A,2   ;PUT 4 BIT MODE	;PUT 4 BIT MODE
204)   0DF7 1E 02       		 LD E,FOUR_BITS	;
205)   0DF9 CD A3 0D    		 CALL LCD16_SEND	;
206)   0DFC 01 00 30    		 LD BC,$3000	;
207)   0DFF CD 7C 26    		 CALL PAUSE_LOOP  ;DELAY 4,5ms	;DELAY 4,5ms
209)   0E02 3E 28       		    LD A,LCD_FUNCTIONSET OR LCD_2LINE	;
210)   0E04 CD C4 0D    		 CALL LCD16_COMMD	;
211)   0E07 3E 04       		 LD A,LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF  	;
212)   0E09 32 68 0D    		 LD (LCD_DSPCTRL),A   	;
213)   0E0C CD 2B 0E    		 CALL LCD16_DISP	;
214)   0E0F CD 46 0E    		    CALL LCD16_CLR	;
215)   0E12 3E 02       		    LD A,LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
216)   0E14 32 67 0D    		    LD (LCD_DSPMODE),A	;
217)   0E17 F6 04       		    OR LCD_ENTRYMODESET	;
218)   0E19 CD C4 0D    		    CALL LCD16_COMMD	;
219)   0E1C C9          		 RET	;
221)   0E1D 3A 68 0D    		@LCD16_NODISP: LD A,(LCD_DSPCTRL)	;
222)   0E20 CB A7       		    RES LCD_DISPLAYON,A	;
223)   0E22 32 68 0D    		    LD (LCD_DSPCTRL),A	;
224)   0E25 F6 08       		    OR LCD_DISPLAYCONTROL	;
225)   0E27 CD C4 0D    		    CALL LCD16_COMMD	;
226)   0E2A C9          		 RET	;
227)   0E2B 3A 68 0D    		@LCD16_DISP: LD A,(LCD_DSPCTRL)	;
228)   0E2E F6 04       		    OR LCD_DISPLAYON	;
229)   0E30 32 68 0D    		    LD (LCD_DSPCTRL),A	;
230)   0E33 F6 08       		    OR LCD_DISPLAYCONTROL	;
231)   0E35 CD C4 0D    		    CALL LCD16_COMMD	;
232)   0E38 C9          		 RET	;
234)   0E39 01 D0 07    		LCDDELAY: LD BC,HOME_CLEAR_EXEC	;
235)   0E3C C5          		LCLR_AGN1: PUSH BC 	;
236)   0E3D CD B8 25    		 CALL DELAYMICRO	;
237)   0E40 C1          		 POP BC	;
238)   0E41 0D          		 DEC C  	;
239)   0E42 E2 3C 0E    		 JP PO,LCLR_AGN1	;
240)   0E45 C9          		 RET	;
242)   0E46 3E 01       		@LCD16_CLR: LD A,LCD_CLEARDISPLAY ;clear display, set cursor position to zero	;clear display, set cursor position to zero
243)   0E48 CD C4 0D    		 CALL LCD16_COMMD	;
244)   0E4B CD 39 0E    		 CALL LCDDELAY	;
245)   0E4E C9          		 RET 	;
248)   0E4F 7E          		@LCD16_PRINT: LD A,(HL)	;
249)   0E50 FE 00       		 CP 0	;
250)   0E52 C8          		 RET Z	;
251)   0E53 CD C9 0D    		 CALL LCD16_DATA	;
252)   0E56 23          		 INC HL	;
253)   0E57 18 F6       		 JR LCD16_PRINT	;
256)   0E59 CD C9 0D    		@LCD16_PRCHR: CALL LCD16_DATA	;
257)   0E5C C9          		 RET	;
259)   0E5D 3E 02       		@LCD16_HOME: LD A,LCD_RETURNHOME	;
260)   0E5F CD C4 0D    		 CALL LCD16_COMMD 	;
261)   0E62 CD 39 0E    		 CALL LCDDELAY     	;
262)   0E65 C9          		 RET	;
265)   0E66 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54 	;
266)   0E6A 06 00       		@LCD16_SETCURS: LD B,0	;
267)   0E6C 4B          		 LD C,E	;
268)   0E6D 21 66 0E    		 LD HL,ROWOFFSET	;
269)   0E70 09          		 ADD HL,BC	;
270)   0E71 7E          		 LD A,(HL)	;
271)   0E72 82          		 ADD D	;
272)   0E73 F6 80       		 OR LCD_SETDDRAMADDR	;
273)   0E75 CD C4 0D    		 CALL LCD16_COMMD	;
274)   0E78 C9          		 RET	;
276)   0E79 3A 68 0D    		@LCD16_CURSOFF: LD A,(LCD_DSPCTRL)	;
277)   0E7C CB 97       		    RES LCD_CURSORON,A	;
278)   0E7E 32 68 0D    		    LD (LCD_DSPCTRL),A	;
279)   0E81 F6 08       		    OR LCD_DISPLAYCONTROL	;
280)   0E83 CD C4 0D    		    CALL LCD16_COMMD	;
281)   0E86 C9          		 RET	;
284)   0E87 3A 68 0D    		@LCD16_CURSON: LD A,(LCD_DSPCTRL)	;
285)   0E8A F6 02       		    OR LCD_CURSORON	;
286)   0E8C 32 68 0D    		    LD (LCD_DSPCTRL),A	;
287)   0E8F F6 08       		    OR LCD_DISPLAYCONTROL	;
288)   0E91 CD C4 0D    		    CALL LCD16_COMMD	;
289)   0E94 C9          		    RET  	;
291)   0E95 3A 68 0D    		@LCD16_BLINKOFF: LD A,(LCD_DSPCTRL)	;
292)   0E98 CB 8F       		    RES LCD_BLINKON,A	;
293)   0E9A 32 68 0D    		    LD (LCD_DSPCTRL),A	;
294)   0E9D F6 08       		    OR LCD_DISPLAYCONTROL	;
295)   0E9F CD C4 0D    		    CALL LCD16_COMMD	;
296)   0EA2 C9          		 RET	;
299)   0EA3 3A 68 0D    		@LCD16_BLINKON: LD A,(LCD_DSPCTRL)	;
300)   0EA6 F6 01       		    OR LCD_BLINKON	;
301)   0EA8 32 68 0D    		    LD (LCD_DSPCTRL),A	;
302)   0EAB F6 08       		    OR LCD_DISPLAYCONTROL	;
303)   0EAD CD C4 0D    		    CALL LCD16_COMMD	;
304)   0EB0 C9          		    RET  	;
306)   0EB1 3E 18       		@LCD16_SCRLEFT: LD A,LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
307)   0EB3 CD C4 0D    		 CALL LCD16_COMMD	;
308)   0EB6 C9          		 RET	;
310)   0EB7 3E 1C       		@LCD16_SCRRIGHT: LD A,LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
311)   0EB9 CD C4 0D    		 CALL LCD16_COMMD	;
312)   0EBC C9          		 RET	;
314)   0EBD 3E 10       		@LCD16_MOVLEFT: LD A,LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
315)   0EBF CD C4 0D    		 CALL LCD16_COMMD	;
316)   0EC2 C9          		 RET	;
318)   0EC3 3E 14       		@LCD16_MOVRIGHT: LD A,LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
319)   0EC5 CD C4 0D    		 CALL LCD16_COMMD	;
320)   0EC8 C9          		 RET	;
 16)   0EC9 	            		      LCD_RS EQU DEVTFT;  ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;  ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   0EC9 	            		      LCD_CS EQU DEVTFT+1;  ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;  ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   0EC9 7B          		   LD A,E	;
 32)   0ECA D3 11       		   OUT (LCD_CS),A	;
 37)   0ECC DB 11       		   IN A,(LCD_CS)	;
 38)   0ECE C9          		   RET	;
 45)   0ECF 7A          		   LD A,D  	;
 46)   0ED0 D3 11       		   OUT (LCD_CS),A	;
 47)   0ED2 C9          		   RET	;
 53)   0ED3 7A          		   LD A,D  	;
 54)   0ED4 D3 10       		   OUT (LCD_RS),A	;
 55)   0ED6 C9          		   RET	;
 62)   0ED7 AF          		   XOR A	;
 63)   0ED8 D3 10       		   OUT (LCD_RS),A  ;RS LOW = COMMAND BYTE      	;RS LOW = COMMAND BYTE
 64)   0EDA CD CF 0E    		   CALL LCD_WR_BUS	;
 65)   0EDD 3E 01       		   LD A,1	;
 66)   0EDF D3 10       		   OUT (LCD_RS),A  ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   0EE1 C9          		   RET	;
 71)   0EE2 16 E2       		   LD D,0xE2         ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   0EE4 CD D3 0E    		   CALL LCD_WR_COM   ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   0EE7 16 23       		   LD D,0x23 ;1E	;1E
 74)   0EE9 CD CF 0E    		   CALL LCD_WR_DAT	;
 75)   0EEC 16 02       		   LD D,0x02	;
 76)   0EEE CD CF 0E    		   CALL LCD_WR_DAT	;
 77)   0EF1 16 54       		   LD D,0x54	;
 78)   0EF3 CD CF 0E    		   CALL LCD_WR_DAT	;
 79)   0EF6 16 E0       		   LD D,0xE0         ; PLL enable    	; PLL enable
 80)   0EF8 CD D3 0E    		   CALL LCD_WR_COM	;
 81)   0EFB 16 01       		   LD D,0x01	;
 82)   0EFD CD CF 0E    		   CALL LCD_WR_DAT	;
 83)   0F00 06 0A       		   LD B,10        ;delay(10);	;delay(10);
 84)   0F02 CD B8 25    		   CALL DELAYMICRO	;
 85)   0F05 16 E0       		   LD D,0xE0         ; PLL enable    	; PLL enable
 86)   0F07 CD D3 0E    		   CALL LCD_WR_COM   	;
 87)   0F0A 16 03       		   LD D,0x03	;
 88)   0F0C CD CF 0E    		   CALL LCD_WR_DAT	;
 89)   0F0F 06 0A       		   LD B,10        ;delay(10);	;delay(10);
 90)   0F11 CD B8 25    		   CALL DELAYMICRO    	;
 92)   0F14 16 01       		   LD D,0x01         ; software reset  	; software reset
 93)   0F16 CD D3 0E    		   CALL LCD_WR_COM   	;
 94)   0F19 06 14       		   LD B,20       ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   0F1B CD B8 25    		   CALL DELAYMICRO        	;
 96)   0F1E 16 E6       		   LD D,0xE6         ;PLL setting for PCLK, depends on resolution  	;PLL setting for PCLK, depends on resolution
 97)   0F20 CD D3 0E    		   CALL LCD_WR_COM           	;
 98)   0F23 16 03       		   LD D,0x03	;
 99)   0F25 CD CF 0E    		   CALL LCD_WR_DAT   	;
100)   0F28 16 33       		   LD D,0x33 ;FF	;FF
101)   0F2A CD CF 0E    		   CALL LCD_WR_DAT       	;
102)   0F2D 16 33       		   LD D,0x33 ;FF	;FF
103)   0F2F CD CF 0E    		   CALL LCD_WR_DAT   	;
105)   0F32 16 B0       		   LD D,0xB0         ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   0F34 CD D3 0E    		   CALL LCD_WR_COM       	;
107)   0F37 16 20       		   LD D,0x20	;
108)   0F39 CD CF 0E    		   CALL LCD_WR_DAT   	;
109)   0F3C 16 00       		   LD D,0x00	;
110)   0F3E CD CF 0E    		   CALL LCD_WR_DAT       	;
111)   0F41 16 03       		   LD D,0x03         ;Set HDP  799	;Set HDP  799
112)   0F43 CD CF 0E    		   CALL LCD_WR_DAT   	;
113)   0F46 16 1F       		   LD D,0x1F	;
114)   0F48 CD CF 0E    		   CALL LCD_WR_DAT   	;
115)   0F4B 16 01       		   LD D,0x01         ;Set VDP  479	;Set VDP  479
116)   0F4D CD CF 0E    		   CALL LCD_WR_DAT   	;
117)   0F50 16 DF       		   LD D,0xDF	;
118)   0F52 CD CF 0E    		   CALL LCD_WR_DAT 	;
119)   0F55 16 00       		   LD D,0x00	;
120)   0F57 CD CF 0E    		   CALL LCD_WR_DAT     	;
123)   0F5A 16 B4       		   LD D,0xB4         ;HSYNC	;HSYNC
124)   0F5C CD D3 0E    		   CALL LCD_WR_COM       	;
125)   0F5F 16 04       		   LD D,0x04 ;03         ;Set HT 928	;03         ;Set HT 928
126)   0F61 CD CF 0E    		   CALL LCD_WR_DAT   	;
127)   0F64 16 1F       		   LD D,0x1F ;A0	;A0
128)   0F66 CD CF 0E    		   CALL LCD_WR_DAT       	;
129)   0F69 16 00       		   LD D,0x00         ;Set HPS  46	;Set HPS  46
130)   0F6B CD CF 0E    		   CALL LCD_WR_DAT   	;
131)   0F6E 16 D2       		   LD D,0xD2 ;2E	;2E
132)   0F70 CD CF 0E    		   CALL LCD_WR_DAT   	;
133)   0F73 16 00       		   LD D,0x00 ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   0F75 CD CF 0E    		   CALL LCD_WR_DAT   	;
135)   0F78 16 00       		   LD D,0x00         ;Set LPS  15	;Set LPS  15
136)   0F7A CD CF 0E    		   CALL LCD_WR_DAT 	;
137)   0F7D 16 00       		   LD D,0x00 ;0F	;0F
138)   0F7F CD CF 0E    		   CALL LCD_WR_DAT   	;
139)   0F82 16 00       		   LD D,0x00	;
140)   0F84 CD CF 0E    		   CALL LCD_WR_DAT     	;
142)   0F87 16 B6       		   LD D,0xB6         ;VSYNC	;VSYNC
143)   0F89 CD D3 0E    		   CALL LCD_WR_COM       	;
144)   0F8C 16 02       		   LD D,0x02         ;Set VT 525	;Set VT 525
145)   0F8E CD CF 0E    		   CALL LCD_WR_DAT   	;
146)   0F91 16 0C       		   LD D,0x0C ;0D	;0D
147)   0F93 CD CF 0E    		   CALL LCD_WR_DAT       	;
148)   0F96 16 00       		   LD D,0x00         ;Set VPS  16	;Set VPS  16
149)   0F98 CD CF 0E    		   CALL LCD_WR_DAT   	;
150)   0F9B 16 22       		   LD D,0x22 ;10	;10
151)   0F9D CD CF 0E    		   CALL LCD_WR_DAT   	;
152)   0FA0 16 00       		   LD D,0x00 ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   0FA2 CD CF 0E    		   CALL LCD_WR_DAT   	;
154)   0FA5 16 00       		   LD D,0x00         ;Set FPS  8	;Set FPS  8
155)   0FA7 CD CF 0E    		   CALL LCD_WR_DAT 	;
156)   0FAA 16 00       		   LD D,0x00 ; 08	; 08
157)   0FAC CD CF 0E    		   CALL LCD_WR_DAT   	;
159)   0FAF 16 B8       		   LD D,0xB8         	;
160)   0FB1 CD D3 0E    		   CALL LCD_WR_COM           	;
161)   0FB4 16 0F       		   LD D,0x0F ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   0FB6 CD CF 0E    		   CALL LCD_WR_DAT         	;
163)   0FB9 16 01       		   LD D,0x01         ;GPIO0 normal	;GPIO0 normal
164)   0FBB CD CF 0E    		   CALL LCD_WR_DAT 	;
166)   0FBE 16 BA       		   LD D,0xBA         	;
167)   0FC0 CD D3 0E    		   CALL LCD_WR_COM           	;
168)   0FC3 16 01       		   LD D,0x01 ;0F	;0F
169)   0FC5 CD CF 0E    		   CALL LCD_WR_DAT   ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   0FC8 16 36       		   LD D,0x36         ;rotation	;rotation
172)   0FCA CD D3 0E    		   CALL LCD_WR_COM           	;
173)   0FCD 16 08       		   LD D,0x08 ;2A         	;2A
174)   0FCF CD CF 0E    		   CALL LCD_WR_DAT         	;
176)   0FD2 16 F0       		   LD D,0xF0         ;pixel data interface	;pixel data interface
177)   0FD4 CD D3 0E    		   CALL LCD_WR_COM           	;
178)   0FD7 16 06       		   LD D,0x06         ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES 	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   0FD9 CD CF 0E    		   CALL LCD_WR_DAT     	;
181)   0FDC 06 05       		   LD B,5       ;delay(5);	;delay(5);
182)   0FDE CD B8 25    		   CALL DELAYMICRO        	;
184)   0FE1 16 BC       		   LD D,0xBC          ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   0FE3 CD D3 0E    		   CALL LCD_WR_COM           	;
186)   0FE6 16 40       		   LD D,0x40	;
187)   0FE8 CD CF 0E    		   CALL LCD_WR_DAT   	;
188)   0FEB 16 80       		   LD D,0x80	;
189)   0FED CD CF 0E    		   CALL LCD_WR_DAT   	;
190)   0FF0 16 40       		   LD D,0x40	;
191)   0FF2 CD CF 0E    		   CALL LCD_WR_DAT   	;
192)   0FF5 16 01       		   LD D,0x01	;
193)   0FF7 CD CF 0E    		   CALL LCD_WR_DAT       	;
194)   0FFA 06 05       		   LD B,5       ;delay(5);	;delay(5);
195)   0FFC CD B8 25    		   CALL DELAYMICRO  	;
197)   0FFF 16 35       		   LD D,0x35         ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   1001 CD D3 0E    		   CALL LCD_WR_COM     	;
199)   1004 16 00       		   LD D,0x00         ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   1006 CD CF 0E    		   CALL LCD_WR_DAT     	;
202)   1009 16 29       		   LD D,0x29         ;display on 	;display on
203)   100B CD D3 0E    		   CALL LCD_WR_COM       	;
204)   100E 16 BE       		   LD D,0xBE         ;set PWM for B/L	;set PWM for B/L
205)   1010 CD D3 0E    		   CALL LCD_WR_COM                 	;
206)   1013 16 06       		   LD D,0x06	;
207)   1015 CD CF 0E    		   CALL LCD_WR_DAT                 	;
208)   1018 16 F0       		   LD D,0xF0         	;
209)   101A CD CF 0E    		   CALL LCD_WR_DAT   	;
210)   101D 16 01       		   LD D,0x01         	;
211)   101F CD CF 0E    		   CALL LCD_WR_DAT   	;
212)   1022 16 F0       		   LD D,0xF0         	;
213)   1024 CD CF 0E    		   CALL LCD_WR_DAT   	;
214)   1027 16 00       		   LD D,0x00         	;
215)   1029 CD CF 0E    		   CALL LCD_WR_DAT   	;
216)   102C 16 00       		   LD D,0x00         	;
217)   102E CD CF 0E    		   CALL LCD_WR_DAT                   	;
219)   1031 16 D0       		   LD D,0xD0         	;
220)   1033 CD D3 0E    		   CALL LCD_WR_COM                 	;
221)   1036 16 0D       		   LD D,0x0D         	;
222)   1038 CD CF 0E    		   CALL LCD_WR_DAT         	;
225)   103B 21 00 00    		   LD HL,0	;
226)   103E E5          		   PUSH HL	;
227)   103F E5          		   PUSH HL	;
228)   1040 21 1F 03    		   LD HL,799	;
229)   1043 E5          		   PUSH HL	;
230)   1044 21 DF 01    		   LD HL,479	;
231)   1047 E5          		   PUSH HL	;
232)   1048 CD 4C 10    		   CALL LCD_SETXY	;
233)   104B C9          		   RET	;
250)   104C DD 21 02 00 		   LD IX,2	;
251)   1050 DD 39       		   ADD IX,SP         	;
252)   1052 16 2A       		   LD D,0x2A         ;SEND IX PARAMS	;SEND IX PARAMS
253)   1054 CD D3 0E    		   CALL LCD_WR_COM    	;
254)   1057 DD 56 07    		   LD D,(IX+7)	;
255)   105A CD CF 0E    		   CALL LCD_WR_DAT	;
256)   105D DD 56 06    		   LD D,(IX+6)	;
257)   1060 CD CF 0E    		   CALL LCD_WR_DAT	;
258)   1063 DD 56 03    		   LD D,(IX+3)	;
259)   1066 CD CF 0E    		   CALL LCD_WR_DAT	;
260)   1069 DD 56 02    		   LD D,(IX+2)	;
261)   106C CD CF 0E    		   CALL LCD_WR_DAT       	;
262)   106F 16 2B       		   LD D,0x2B         ;SEND Y PARAMS	;SEND Y PARAMS
263)   1071 CD D3 0E    		   CALL LCD_WR_COM   	;
264)   1074 DD 56 05    		   LD D,(IX+5)	;
265)   1077 CD CF 0E    		   CALL LCD_WR_DAT	;
266)   107A DD 56 04    		   LD D,(IX+4)	;
267)   107D CD CF 0E    		   CALL LCD_WR_DAT	;
268)   1080 DD 56 01    		   LD D,(IX+1)	;
269)   1083 CD CF 0E    		   CALL LCD_WR_DAT	;
270)   1086 DD 56 00    		   LD D,(IX)	;
271)   1089 CD CF 0E    		   CALL LCD_WR_DAT       	;
272)   108C 16 2C       		   LD D,0x2C         ;SEND DATA	;SEND DATA
273)   108E CD D3 0E    		   CALL LCD_WR_COM   	;
274)   1091 D1          		   POP DE	;
275)   1092 21 08 00    		   LD HL,4*2       ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   1095 39          		   ADD HL,SP	;
277)   1096 F9          		   LD SP,HL	;
278)   1097 EB          		   EX DE,HL	;
279)   1098 E9          		   JP (HL)        	;
285)   1099 54          		   LD D,H        	;
286)   109A CD CF 0E    		   CALL LCD_WR_DAT 	;
287)   109D 55          		   LD D,L	;
288)   109E CD CF 0E    		   CALL LCD_WR_DAT 	;
289)   10A1 C9          		   RET	;
294)   10A2 16 2E       		   LD D,0x2E         ;READ DATA	;READ DATA
295)   10A4 CD D3 0E    		   CALL LCD_WR_COM           	;
296)   10A7 CD CC 0E    		@LCD_GTPXL:   CALL LCD_RD_DAT 	;
297)   10AA 67          		   LD H,A	;
298)   10AB CD CC 0E    		   CALL LCD_RD_DAT 	;
299)   10AE 6F          		   LD L,A	;
300)   10AF C9          		   RET    	;
306)   10B0 DD E5       		@LCD_READPIXEL: PUSH IX ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   10B2 DD 21 04 00 		   LD IX,4    ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   10B6 DD 39       		   ADD IX,SP    	;
309)   10B8 DD 66 03    		   LD H,(IX+3)   ;X	;X
310)   10BB DD 6E 02    		   LD L,(IX+2)   ;X	;X
311)   10BE DD 56 01    		   LD D,(IX+1) ;Y	;Y
312)   10C1 DD 5E 00    		   LD E,(IX) ;Y	;Y
313)   10C4 E5          		   PUSH HL	;
314)   10C5 D5          		   PUSH DE	;
315)   10C6 E5          		   PUSH HL	;
316)   10C7 D5          		   PUSH DE	;
317)   10C8 CD 4C 10    		   CALL LCD_SETXY	;
318)   10CB CD A2 10    		   CALL LCD_GETPIXEL	;
319)   10CE E5          		   PUSH HL    	;
320)   10CF CD 01 11    		   CALL LCD_CLRXY	;
321)   10D2 D1          		   POP DE  ;RESULT COLOR	;RESULT COLOR
322)   10D3 DD E1       		   POP IX	;
323)   10D5 C1          		   POP BC  ;RET ADDR	;RET ADDR
324)   10D6 21 04 00    		   LD HL,2*2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   10D9 39          		   ADD HL,SP	;
326)   10DA F9          		   LD SP,HL	;
327)   10DB EB          		   EX DE,HL ;HL RESULT	;HL RESULT
328)   10DC C5          		   PUSH BC  ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   10DD C9          		   RET	;
333)   10DE DD 21 02 00 		   LD IX,2     ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   10E2 DD 39       		   ADD IX,SP	;
335)   10E4 DD 66 03    		   LD H,(IX+3)   ;X	;X
336)   10E7 DD 6E 02    		   LD L,(IX+2)   ;X	;X
337)   10EA DD 56 01    		   LD D,(IX+1) ;Y	;Y
338)   10ED DD 5E 00    		   LD E,(IX) ;Y	;Y
339)   10F0 E5          		   PUSH HL	;
340)   10F1 D5          		   PUSH DE	;
341)   10F2 E5          		   PUSH HL	;
342)   10F3 D5          		   PUSH DE	;
343)   10F4 CD 4C 10    		   CALL LCD_SETXY	;
344)   10F7 2A 01 83    		   LD HL,(FCOLOR)	;
345)   10FA CD 99 10    		   CALL LCD_SETPIXEL	;
346)   10FD CD 01 11    		   CALL LCD_CLRXY	;
347)   1100 C9          		   RET	;
350)   1101 21 00 00    		    LD HL,0	;
351)   1104 E5          		    PUSH HL	;
352)   1105 E5          		    PUSH HL	;
353)   1106 21 1F 03    		    LD HL,LCD_WIDTH	;
354)   1109 E5          		    PUSH HL	;
355)   110A 21 DF 01    		    LD HL,LCD_HEIGHT	;
356)   110D E5          		    PUSH HL	;
357)   110E CD 4C 10    		    CALL LCD_SETXY	;
358)   1111 C9          		    RET	;
362)   1112 DD 21 02 00 		     LD IX,2	;
363)   1116 DD 39       		     ADD IX,SP	;
364)   1118 DD 66 05    		     LD H,(IX+5)   ;X  	;X
365)   111B DD 6E 04    		     LD L,(IX+4)   ;X	;X
366)   111E DD 56 03    		     LD D,(IX+3)   ;Y	;Y
367)   1121 DD 5E 02    		     LD E,(IX+2)   ;Y	;Y
368)   1124 DD 46 01    		     LD B,(IX+1)   ;LENGTH	;LENGTH
369)   1127 DD 4E 00    		     LD C,(IX)     ;LENGTH	;LENGTH
372)   112A E5          		     PUSH HL	;
373)   112B 21 00 00    		     LD HL,0	;
374)   112E B7          		     OR A           ;CLEAR CARRY	;CLEAR CARRY
375)   112F ED 42       		     SBC HL,BC      ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
376)   1131 38 0A       		     JR C,POSH1	;
377)   1133 AF          		     XOR A          ;l=-l	;l=-l
378)   1134 91          		  SUB C	;
379)   1135 4F          		  LD C,A	;
380)   1136 9F          		  SBC A,A	;
381)   1137 90          		  SUB B	;
382)   1138 47          		  LD B,A	;
383)   1139 E1          		  POP HL	;
384)   113A ED 42       		     SBC HL,BC       ;x -= l;	;x -= l;
385)   113C E5          		     PUSH HL                    	;
386)   113D E1          		POSH1: POP HL	;
387)   113E E5          		  PUSH HL	;
388)   113F D5          		     PUSH DE	;
389)   1140 09          		     ADD HL,BC	;
390)   1141 E5          		     PUSH HL	;
391)   1142 D5          		     PUSH DE	;
392)   1143 CD 4C 10    		     CALL LCD_SETXY   ;setXY(x, y, x+l, y);	;setXY(x, y, x+l, y);
393)   1146 2A 01 83    		     LD HL,(FCOLOR)    	;
394)   1149 CD 99 10    		NXTH1: CALL LCD_SETPIXEL	;
395)   114C 0B          		     DEC BC	;
396)   114D 79          		     LD A,C	;
397)   114E B0          		     OR B	;
398)   114F 20 F8       		     JR NZ, NXTH1     	;
399)   1151 CD 01 11    		     CALL LCD_CLRXY	;
400)   1154 D1          		     POP DE	;
401)   1155 21 06 00    		     LD HL,6       ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
402)   1158 39          		     ADD HL,SP	;
403)   1159 F9          		     LD SP,HL      	;
404)   115A EB          		     EX DE,HL	;
405)   115B E9          		     JP (HL)	;
411)   115C DD 21 02 00 		     LD IX,2	;
412)   1160 DD 39       		     ADD IX,SP	;
413)   1162 DD 56 05    		     LD D,(IX+5)   ;X  	;X
414)   1165 DD 5E 04    		     LD E,(IX+4)   ;X	;X
415)   1168 DD 66 03    		     LD H,(IX+3)   ;Y	;Y
416)   116B DD 6E 02    		     LD L,(IX+2)   ;Y	;Y
417)   116E DD 46 01    		     LD B,(IX+1)   ;LENGTH	;LENGTH
418)   1171 DD 4E 00    		     LD C,(IX)     ;LENGTH     	;LENGTH
419)   1174 E5          		     PUSH HL	;
420)   1175 21 00 00    		     LD HL,0	;
421)   1178 B7          		     OR A           ;CLEAR CARRY	;CLEAR CARRY
422)   1179 ED 42       		     SBC HL,BC      ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
423)   117B 38 0A       		     JR C,POSV1	;
424)   117D AF          		     XOR A          ;l=-l	;l=-l
425)   117E 91          		  SUB C	;
426)   117F 4F          		  LD C,A	;
427)   1180 9F          		  SBC A,A	;
428)   1181 90          		  SUB B	;
429)   1182 47          		  LD B,A	;
430)   1183 E1          		  POP HL	;
431)   1184 ED 42       		     SBC HL,BC       ;Y -= l;	;Y -= l;
432)   1186 E5          		     PUSH HL                   	;
433)   1187 E1          		POSV1: POP HL	;
434)   1188 D5          		  PUSH DE	;
435)   1189 E5          		     PUSH HL	;
436)   118A D5          		     PUSH DE	;
437)   118B 09          		     ADD HL,BC	;
438)   118C E5          		     PUSH HL	;
439)   118D CD 4C 10    		     CALL LCD_SETXY   ;setXY(x, y, x, y+l);	;setXY(x, y, x, y+l);
440)   1190 2A 01 83    		     LD HL,(FCOLOR)    	;
441)   1193 CD 99 10    		NXTV1: CALL LCD_SETPIXEL	;
442)   1196 0B          		     DEC BC	;
443)   1197 79          		     LD A,C	;
444)   1198 B0          		     OR B	;
445)   1199 20 F8       		     JR NZ, NXTV1     	;
446)   119B CD 01 11    		     CALL LCD_CLRXY	;
447)   119E D1          		     POP DE	;
448)   119F 21 06 00    		     LD HL,6       ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
449)   11A2 39          		     ADD HL,SP	;
450)   11A3 F9          		     LD SP,HL	;
451)   11A4 EB          		     EX DE,HL	;
452)   11A5 E9          		     JP (HL)	;
456)   11A6 DD 21 02 00 		     LD IX,2	;
457)   11AA DD 39       		     ADD IX,SP	;
467)   11AC DD 66 05    		     LD H,(IX+5)   ;Y1	;Y1
468)   11AF DD 6E 04    		     LD L,(IX+4)   ;Y1	;Y1
469)   11B2 DD 56 01    		     LD D,(IX+1)   ;Y2	;Y2
470)   11B5 DD 5E 00    		     LD E,(IX)     ;Y2	;Y2
471)   11B8 B7          		     OR A	;
472)   11B9 ED 52       		     SBC HL,DE	;
473)   11BB 20 17       		     JR NZ,YNOTEQ	;
475)   11BD DD 46 07    		     LD B,(IX+7)   ;X1	;X1
476)   11C0 DD 4E 06    		     LD C,(IX+6)   ;X1	;X1
477)   11C3 C5          		     PUSH BC       ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
478)   11C4 D5          		     PUSH DE    ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
479)   11C5 DD 66 03    		     LD H,(IX+3)   ;X2	;X2
480)   11C8 DD 6E 02    		     LD L,(IX+2)   ;X2       	;X2
481)   11CB ED 42       		     SBC HL,BC     ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
482)   11CD E5          		     PUSH HL       ;LENGTH 3RD PARAM ON STACK 	;LENGTH 3RD PARAM ON STACK
483)   11CE CD 12 11    		     CALL LCD_DRAWHLINE	;
484)   11D1 C3 81 13    		     JP DLNEX	;
486)   11D4 DD 66 07    		     LD H,(IX+7)   ;X1	;X1
487)   11D7 DD 6E 06    		     LD L,(IX+6)   ;X1	;X1
488)   11DA DD 56 03    		     LD D,(IX+3)   ;X2	;X2
489)   11DD DD 5E 02    		     LD E,(IX+2)   ;X2 	;X2
490)   11E0 B7          		     OR A	;
491)   11E1 ED 52       		     SBC HL,DE	;
492)   11E3 20 17       		     JR NZ,XNOTEQ	;
494)   11E5 D5          		     PUSH DE       ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
495)   11E6 DD 46 05    		     LD B,(IX+5)   ;Y1	;Y1
496)   11E9 DD 4E 04    		     LD C,(IX+4)   ;Y1	;Y1
497)   11EC C5          		     PUSH BC       ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
498)   11ED DD 66 01    		     LD H,(IX+1)   ;Y2	;Y2
499)   11F0 DD 6E 00    		     LD L,(IX)   ;Y2       	;Y2
500)   11F3 ED 42       		     SBC HL,BC     ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
501)   11F5 E5          		     PUSH HL       ;LENGTH 3RD PARAM ON STACK 	;LENGTH 3RD PARAM ON STACK
502)   11F6 CD 5C 11    		     CALL LCD_DRAWVLINE	;
503)   11F9 C3 81 13    		     JP DLNEX	;
506)   11FC 38 04       		     JR C,X2GTX1	;
508)   11FE AF          		     XOR A  	;
509)   11FF 3D          		     DEC A  ;XSTEP=-1	;XSTEP=-1
510)   1200 18 0D       		     JR DLNXT1	;
513)   1202 D5          		     PUSH DE	;
514)   1203 E1          		     POP HL	;
515)   1204 DD 56 07    		     LD D,(IX+7)   ;X1	;X1
516)   1207 DD 5E 06    		     LD E,(IX+6)   ;X1 	;X1
517)   120A B7          		     OR A     	;
518)   120B ED 52       		     SBC HL,DE     ;X2-X1 ON HL	;X2-X1 ON HL
520)   120D 3E 01       		     LD A,1        ;XSTEP=1	;XSTEP=1
522)   120F 06 00       		     LD B,0	;
523)   1211 0E 00       		     LD C,0	;
524)   1213 C5          		     PUSH BC       ;T	;T
525)   1214 E5          		     PUSH HL       ;DX	;DX
526)   1215 FE 01       		     CP 1	;
527)   1217 28 02       		     JR Z,DLXMINUS1	;
528)   1219 06 FF       		     LD B,0XFF	;
529)   121B 4F          		DLXMINUS1:LD C,A     	;
530)   121C C5          		     PUSH BC       ;XSTEP	;XSTEP
531)   121D DD 66 05    		     LD H,(IX+5)   ;Y1	;Y1
532)   1220 DD 6E 04    		     LD L,(IX+4)   ;Y1	;Y1
533)   1223 DD 56 01    		     LD D,(IX+1)   ;Y2	;Y2
534)   1226 DD 5E 00    		     LD E,(IX)     ;Y2      	;Y2
535)   1229 B7          		     OR A	;
536)   122A ED 52       		     SBC HL,DE	;
537)   122C 38 04       		     JR C,Y2GTY1  ;HL=Y1-Y2	;HL=Y1-Y2
538)   122E AF          		     XOR A	;
539)   122F 3D          		     DEC A         ;YSTEP=-1	;YSTEP=-1
540)   1230 18 0F       		     JR DLNXT2	;
543)   1232 D5          		     PUSH DE	;
544)   1233 E1          		     POP HL	;
545)   1234 DD 56 05    		     LD D,(IX+5)   ;Y1	;Y1
546)   1237 DD 5E 04    		     LD E,(IX+4)   ;Y1  	;Y1
547)   123A B7          		     OR A	;
548)   123B ED 52       		     SBC HL,DE  ;HL=Y2-Y1    HL=DY      	;HL=Y2-Y1    HL=DY
549)   123D 06 00       		     LD B,0	;
550)   123F 3E 01       		     LD A,1        ;YSTEP=1	;YSTEP=1
552)   1241 FE 01       		     CP 1	;
553)   1243 28 02       		     JR Z,DLYMINUS1	;
554)   1245 06 FF       		     LD B,0XFF	;
556)   1247 4F          		     LD C,A      	;
557)   1248 E5          		     PUSH HL       ;DY	;DY
558)   1249 C5          		     PUSH BC       ;YSTEP   	;YSTEP
559)   124A FD 21 00 00 		     LD IY,0	;
560)   124E FD 39       		     ADD IY,SP	;
575)   1250 FD 56 07    		     LD D,(IY+7)    ;DX	;DX
576)   1253 FD 5E 06    		     LD E,(IY+6)    ;DX	;DX
577)   1256 B7          		     OR A	;
578)   1257 ED 52       		     SBC HL,DE      ;DY-DX	;DY-DX
579)   1259 DA EE 12    		     JP C,DXGTDY	;
580)   125C CA EE 12    		     JP Z,DXGTDY	;
582)   125F 19          		     ADD HL,DE      ;HL=DY	;HL=DY
583)   1260 44          		     LD B,H	;
584)   1261 4D          		     LD C,L	;
585)   1262 CB 38       		     SRL B	;
586)   1264 CB 19       		     RR C           ;(dy >> 1)	;(dy >> 1)
587)   1266 21 00 00    		     LD HL,0	;
588)   1269 ED 42       		     SBC HL,BC      ;t = - (dy >> 1);	;t = - (dy >> 1);
589)   126B FD 74 09    		     LD (IY+9),H    ;SAVE T	;SAVE T
590)   126E FD 75 08    		     LD (IY+8),L    ;SAVE T	;SAVE T
592)   1271 DD 56 05    		     LD D,(IX+5)   ;ROW	;ROW
593)   1274 DD 5E 04    		     LD E,(IX+4)   ;ROW=Y1	;ROW=Y1
594)   1277 DD 66 07    		     LD H,(IX+7)   ;COL	;COL
595)   127A DD 6E 06    		     LD L,(IX+6)   ;COL=X1	;COL=X1
596)   127D D5          		     PUSH DE	;
597)   127E DD E5       		     PUSH IX	;
598)   1280 E5          		     PUSH HL	;
599)   1281 D5          		     PUSH DE	;
600)   1282 E5          		     PUSH HL	;
601)   1283 D5          		     PUSH DE	;
602)   1284 CD 4C 10    		     CALL LCD_SETXY	;
603)   1287 2A 01 83    		     LD HL,(FCOLOR)    	;
604)   128A CD 99 10    		     CALL LCD_SETPIXEL	;
605)   128D DD E1       		     POP IX	;
606)   128F D1          		     POP DE	;
607)   1290 DD 66 01    		     LD H,(IX+1)   ;Y2	;Y2
608)   1293 DD 6E 00    		     LD L,(IX)     ;Y2 	;Y2
609)   1296 ED 52       		     SBC HL,DE     ; ROW=Y2	; ROW=Y2
610)   1298 CA 7C 13    		     JP Z,DLEXIT	;
611)   129B FD 46 01    		     LD B,(IY+1)   ;YSTEP HI	;YSTEP HI
612)   129E FD 4E 00    		     LD C,(IY)     ;YSTEP LO	;YSTEP LO
613)   12A1 EB          		     EX DE,HL	;
614)   12A2 09          		     ADD HL,BC     ;row += ystep;	;row += ystep;
615)   12A3 DD 74 05    		     LD (IX+5),H   ;SAVE ROW	;SAVE ROW
616)   12A6 DD 75 04    		     LD (IX+4),L   ;   	;
618)   12A9 FD 56 09    		     LD D,(IY+9)   ; T	; T
619)   12AC FD 5E 08    		     LD E,(IY+8)   ; T      	; T
620)   12AF FD 66 07    		     LD H,(IY+7)   ;DX	;DX
621)   12B2 FD 6E 06    		     LD L,(IY+6)   ;DX	;DX
622)   12B5 19          		     ADD HL,DE	;
623)   12B6 FD 74 09    		     LD (IY+9),H   ;t += dx;	;t += dx;
624)   12B9 FD 75 08    		     LD (IY+8),L	;
625)   12BC EB          		     EX DE,HL	;
626)   12BD 21 00 80    		     LD HL,$8000	;
627)   12C0 ED 52       		     SBC HL,DE     ;CHECK IF T<0	;CHECK IF T<0
628)   12C2 38 AD       		     JR C,DLAGN1   ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
629)   12C4 FD 46 05    		     LD B,(IY+5)   ;XSTEP HI	;XSTEP HI
630)   12C7 FD 4E 04    		     LD C,(IY+4)   ;XSTEP LO	;XSTEP LO
631)   12CA DD 66 07    		     LD H,(IX+7)   ;COL HI	;COL HI
632)   12CD DD 6E 06    		     LD L,(IX+6)   ;COL LO	;COL LO
633)   12D0 09          		     ADD HL,BC     ;col += xstep;	;col += xstep;
634)   12D1 DD 74 07    		     LD (IX+7),H   ;SAVE COL	;SAVE COL
635)   12D4 DD 75 06    		     LD (IX+6),L   ;         	;
637)   12D7 FD 66 09    		     LD H,(IY+9)   ; T	; T
638)   12DA FD 6E 08    		     LD L,(IY+8)   ; T      	; T
639)   12DD FD 46 03    		     LD B,(IY+3)   ;DY	;DY
640)   12E0 FD 4E 02    		     LD C,(IY+2)   ;DY	;DY
641)   12E3 ED 42       		     SBC HL,BC	;
642)   12E5 FD 74 09    		     LD (IY+9),H   ;t -= dY;	;t -= dY;
643)   12E8 FD 75 08    		     LD (IY+8),L       	;
644)   12EB C3 71 12    		     JP DLAGN1	;
646)   12EE 19          		     ADD HL,DE      ;HL=DY DE=DX	;HL=DY DE=DX
647)   12EF 42          		     LD B,D	;
648)   12F0 4B          		     LD C,E	;
649)   12F1 CB 38       		     SRL B	;
650)   12F3 CB 19       		     RR C           ;(dX >> 1)	;(dX >> 1)
651)   12F5 21 00 00    		     LD HL,0	;
652)   12F8 ED 42       		     SBC HL,BC      ;t = - (dX >> 1);	;t = - (dX >> 1);
653)   12FA FD 74 09    		     LD (IY+9),H    ;SAVE T	;SAVE T
654)   12FD FD 75 08    		     LD (IY+8),L    ;SAVE T	;SAVE T
656)   1300 DD 56 05    		     LD D,(IX+5)   ;ROW	;ROW
657)   1303 DD 5E 04    		     LD E,(IX+4)   ;ROW=Y1	;ROW=Y1
658)   1306 DD 66 07    		     LD H,(IX+7)   ;COL	;COL
659)   1309 DD 6E 06    		     LD L,(IX+6)   ;COL=X1	;COL=X1
660)   130C E5          		     PUSH HL       ;SAVE COL	;SAVE COL
661)   130D DD E5       		     PUSH IX	;
662)   130F E5          		     PUSH HL	;
663)   1310 D5          		     PUSH DE	;
664)   1311 E5          		     PUSH HL	;
665)   1312 D5          		     PUSH DE	;
666)   1313 CD 4C 10    		     CALL LCD_SETXY	;
667)   1316 2A 01 83    		     LD HL,(FCOLOR)    	;
668)   1319 CD 99 10    		     CALL LCD_SETPIXEL	;
669)   131C DD E1       		     POP IX	;
670)   131E D1          		     POP DE        ;RETRIEVE COL	;RETRIEVE COL
671)   131F DD 66 03    		     LD H,(IX+3)   ;X2	;X2
672)   1322 DD 6E 02    		     LD L,(IX+2)   ;X2 	;X2
673)   1325 ED 52       		     SBC HL,DE     ; COL=X2?	; COL=X2?
674)   1327 28 53       		     JR Z,DLEXIT	;
675)   1329 EB          		     EX DE,HL      ;HL=COL	;HL=COL
676)   132A FD 46 05    		     LD B,(IY+5)   ;XSTEP HI	;XSTEP HI
677)   132D FD 4E 04    		     LD C,(IY+4)   ;XSTEP LO	;XSTEP LO
678)   1330 09          		     ADD HL,BC     ;col += xstep;	;col += xstep;
679)   1331 DD 74 07    		     LD (IX+7),H   ;SAVE COL	;SAVE COL
680)   1334 DD 75 06    		     LD (IX+6),L   ;   	;
681)   1337 FD 56 09    		     LD D,(IY+9)   ; T	; T
682)   133A FD 5E 08    		     LD E,(IY+8)   ; T      	; T
683)   133D FD 66 03    		     LD H,(IY+3)   ;DY	;DY
684)   1340 FD 6E 02    		     LD L,(IY+2)   ;DY	;DY
685)   1343 19          		     ADD HL,DE	;
686)   1344 FD 74 09    		     LD (IY+9),H   ;t += dY;	;t += dY;
687)   1347 FD 75 08    		     LD (IY+8),L	;
688)   134A EB          		     EX DE,HL      ;T=DE	;T=DE
689)   134B 21 00 80    		     LD HL,$8000  	;
690)   134E ED 52       		     SBC HL,DE    ;CHECK IF T<0	;CHECK IF T<0
691)   1350 38 AE       		     JR C,DLAGN2  ;CARRY SET IF NEGATIVE    	;CARRY SET IF NEGATIVE
692)   1352 FD 46 01    		     LD B,(IY+1)   ;YSTEP HI	;YSTEP HI
693)   1355 FD 4E 00    		     LD C,(IY)     ;YSTEP LO	;YSTEP LO
694)   1358 DD 66 05    		     LD H,(IX+5)   ;ROW HI	;ROW HI
695)   135B DD 6E 04    		     LD L,(IX+4)   ;ROW LO	;ROW LO
696)   135E 09          		     ADD HL,BC     ;ROW += Ystep;	;ROW += Ystep;
697)   135F DD 74 05    		     LD (IX+5),H   ;SAVE COL	;SAVE COL
698)   1362 DD 75 04    		     LD (IX+4),L   ;         	;
700)   1365 FD 66 09    		     LD H,(IY+9)   ; T	; T
701)   1368 FD 6E 08    		     LD L,(IY+8)   ; T      	; T
702)   136B FD 46 07    		     LD B,(IY+7)   ;DX	;DX
703)   136E FD 4E 06    		     LD C,(IY+6)   ;DX	;DX
704)   1371 ED 42       		     SBC HL,BC	;
705)   1373 FD 74 09    		     LD (IY+9),H   ;t -= dX;	;t -= dX;
706)   1376 FD 75 08    		     LD (IY+8),L       	;
707)   1379 C3 00 13    		     JP DLAGN2	;
710)   137C 21 0A 00    		     LD HL,5*2     ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
711)   137F 39          		     ADD HL,SP     ;	;
712)   1380 F9          		     LD SP,HL           	;
713)   1381 D1          		DLNEX:POP DE       ;RET ADDR	;RET ADDR
714)   1382 21 08 00    		     LD HL,4*2       ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
715)   1385 39          		     ADD HL,SP	;
716)   1386 F9          		     LD SP,HL     	;
717)   1387 EB          		     EX DE,HL	;
718)   1388 E9          		     JP (HL)	;
723)   1389 C5          		@PLOTP:PUSH BC      ;SAVE BC	;SAVE BC
724)   138A DD E5       		     PUSH IX	;
726)   138C D5          		     PUSH DE	;
727)   138D E5          		     PUSH HL	;
728)   138E D5          		     PUSH DE	;
729)   138F E5          		     PUSH HL	;
730)   1390 CD 4C 10    		     CALL LCD_SETXY      	;
731)   1393 2A 01 83    		     LD HL,(FCOLOR)	;
732)   1396 CD 99 10    		     CALL LCD_SETPIXEL  	;
734)   1399 DD E1       		     POP IX	;
735)   139B C1          		     POP BC        ;RESTORE BC	;RESTORE BC
736)   139C C9          		     RET   	;
741)   139D E1          		     POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
742)   139E D5          		     PUSH DE        ;F VAR 	;F VAR
743)   139F D5          		     PUSH DE        ;DDF_X 	;DDF_X
744)   13A0 D5          		     PUSH DE        ;DDF_Y	;DDF_Y
745)   13A1 D5          		     PUSH DE        ;X1	;X1
746)   13A2 D5          		     PUSH DE        ;Y1	;Y1
747)   13A3 E5          		     PUSH HL        ;RET ADDR	;RET ADDR
748)   13A4 DD 21 02 00 		     LD IX,2	;
749)   13A8 DD 39       		     ADD IX,SP	;
767)   13AA AF          		     XOR A	;
768)   13AB DD 56 0B    		     LD D,(IX+11)    ;R	;R
769)   13AE DD 5E 0A    		     LD E,(IX+10)    ;R	;R
770)   13B1 DD 72 01    		     LD (IX+1),D     ;Y1=R	;Y1=R
771)   13B4 DD 73 00    		     LD (IX+0),E	;
772)   13B7 21 01 00    		     LD HL,1	;
773)   13BA DD 74 07    		     LD (IX+7),H     ;DDF_X=1	;DDF_X=1
774)   13BD DD 75 06    		     LD (IX+6),L	;
775)   13C0 DD 74 03    		     LD (IX+3),H     ;X1=0	;X1=0
776)   13C3 DD 74 02    		     LD (IX+2),H      	;
777)   13C6 ED 52       		     SBC HL,DE	;
778)   13C8 DD 74 09    		     LD (IX+9),H     ;F	;F
779)   13CB DD 75 08    		     LD (IX+8),L     ;F	;F
781)   13CE EB          		     EX DE,HL        ;HL=RADIUS	;HL=RADIUS
782)   13CF 29          		     ADD HL,HL       ;2*R	;2*R
783)   13D0 EB          		     EX DE,HL	;
784)   13D1 21 00 00    		     LD HL,0	;
785)   13D4 ED 52       		     SBC HL,DE          ;-2*R	;-2*R
786)   13D6 DD 74 05    		     LD (IX+5),H	;
787)   13D9 DD 75 04    		     LD (IX+4),L     ;DDF_Y	;DDF_Y
789)   13DC DD 66 0D    		     LD H,(IX+13)    ;Y	;Y
790)   13DF DD 6E 0C    		     LD L,(IX+12)	;
791)   13E2 E5          		     PUSH HL         ;SAVE Y	;SAVE Y
792)   13E3 DD 56 0B    		     LD D,(IX+11)    ;R	;R
793)   13E6 DD 5E 0A    		     LD E,(IX+10)	;
794)   13E9 D5          		     PUSH DE         ;SAVE R	;SAVE R
795)   13EA 19          		     ADD HL,DE       ;Y+R      	;Y+R
796)   13EB DD 56 0F    		     LD D,(IX+15)    ;X	;X
797)   13EE DD 5E 0E    		     LD E,(IX+14)	;
798)   13F1 D5          		     PUSH DE         ;SAVE X	;SAVE X
800)   13F2 CD 89 13    		     CALL PLOTP      	;
802)   13F5 D1          		     POP DE        ;GET X	;GET X
803)   13F6 C1          		     POP BC        ;GET R	;GET R
804)   13F7 E1          		     POP HL        ;GET Y	;GET Y
805)   13F8 E5          		     PUSH HL       ;SAVE VARS	;SAVE VARS
806)   13F9 C5          		     PUSH BC	;
807)   13FA D5          		     PUSH DE	;
808)   13FB AF          		     XOR A	;
809)   13FC ED 42       		     SBC HL,BC     ;	;
811)   13FE CD 89 13    		     CALL PLOTP      	;
813)   1401 E1          		    POP HL        ;GET X	;GET X
814)   1402 C1          		    POP BC        ;GET R	;GET R
815)   1403 D1          		    POP DE        ;GET Y	;GET Y
816)   1404 D5          		    PUSH DE       ;SAVE VARS	;SAVE VARS
817)   1405 C5          		    PUSH BC	;
818)   1406 E5          		    PUSH HL	;
819)   1407 AF          		    XOR A	;
820)   1408 ED 4A       		    ADC HL,BC	;
821)   140A EB          		    EX DE,HL	;
823)   140B CD 89 13    		     CALL PLOTP      	;
825)   140E E1          		    POP HL        ;GET X	;GET X
826)   140F C1          		    POP BC        ;GET R	;GET R
827)   1410 D1          		    POP DE        ;GET Y	;GET Y
828)   1411 AF          		    XOR A	;
829)   1412 ED 42       		    SBC HL,BC	;
830)   1414 EB          		    EX DE,HL	;
832)   1415 CD 89 13    		     CALL PLOTP      	;
835)   1418 DD 66 03    		CIRC_AGN:LD H,(IX+3)   ;X1	;X1
836)   141B DD 6E 02    		     LD L,(IX+2)    ;X1	;X1
837)   141E DD 56 01    		     LD D,(IX+1)    ;Y1	;Y1
838)   1421 DD 5E 00    		     LD E,(IX+0)    ;Y1	;Y1
839)   1424 AF          		     XOR A	;
840)   1425 ED 52       		     SBC HL,DE	;
841)   1427 D2 16 15    		     JP NC,CIRC_EXIT	;
843)   142A 19          		    ADD HL,DE	;
844)   142B E5          		    PUSH HL        ;SAVE X1	;SAVE X1
845)   142C D5          		    PUSH DE        ;SAVE Y1	;SAVE Y1
846)   142D 21 00 00    		    LD HL,0	;
847)   1430 AF          		    XOR A	;
850)   1431 DD 7E 09    		    LD A,(IX+9)     ;F HI BYTE	;F HI BYTE
851)   1434 FE 50       		    CP 80	;
852)   1436 30 26       		    JR NC,CIRC_SKIP	;
853)   1438 28 24       		    JR Z,CIRC_SKIP	;
857)   143A D1          		    POP DE        ;Y1	;Y1
858)   143B 1B          		    DEC DE	;
859)   143C DD 72 01    		    LD (IX+1),D   ;SAVE Y1	;SAVE Y1
860)   143F DD 73 00    		    LD (IX+0),E	;
861)   1442 D5          		    PUSH DE       ;Y1	;Y1
862)   1443 DD 66 05    		    LD H,(IX+5)   ;DDF_Y	;DDF_Y
863)   1446 DD 6E 04    		    LD L,(IX+4)   	;
864)   1449 23          		    INC HL	;
865)   144A 23          		    INC HL	;
866)   144B DD 74 05    		    LD (IX+5),H   ;SAVE DDF_Y	;SAVE DDF_Y
867)   144E DD 75 04    		    LD (IX+4),L	;
868)   1451 DD 56 09    		    LD D,(IX+9)   ;F	;F
869)   1454 DD 5E 08    		    LD E,(IX+8)	;
870)   1457 19          		    ADD HL,DE	;
871)   1458 DD 74 09    		    LD (IX+9),H    ;SAVE F	;SAVE F
872)   145B DD 75 08    		    LD (IX+8),L          	;
876)   145E C1          		   POP BC       ;Y1	;Y1
877)   145F E1          		   POP HL       ;X1	;X1
878)   1460 23          		   INC HL	;
879)   1461 DD 74 03    		   LD (IX+3),H  ;SAVE X1	;SAVE X1
880)   1464 DD 75 02    		   LD (IX+2),L	;
881)   1467 E5          		   PUSH HL      ;X1	;X1
882)   1468 DD 66 07    		    LD H,(IX+7)   ;DDF_X	;DDF_X
883)   146B DD 6E 06    		    LD L,(IX+6)   	;
884)   146E 23          		    INC HL	;
885)   146F 23          		    INC HL	;
886)   1470 DD 74 07    		    LD (IX+7),H   ;SAVE DDF_X	;SAVE DDF_X
887)   1473 DD 75 06    		    LD (IX+6),L	;
888)   1476 DD 56 09    		    LD D,(IX+9)   ;F	;F
889)   1479 DD 5E 08    		    LD E,(IX+8)	;
890)   147C 19          		    ADD HL,DE	;
891)   147D DD 74 09    		    LD (IX+9),H    ;SAVE F	;SAVE F
892)   1480 DD 75 08    		    LD (IX+8),L      	;
895)   1483 E1          		     POP HL        ;X1	;X1
896)   1484 E5          		     PUSH HL	;
897)   1485 DD 56 0F    		     LD D,(IX+15)  ;X	;X
898)   1488 DD 5E 0E    		     LD E,(IX+14)	;
899)   148B D5          		     PUSH DE	;
900)   148C 19          		     ADD HL,DE	;
901)   148D EB          		     EX DE,HL      ;DE=X+X1	;DE=X+X1
902)   148E DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
903)   1491 DD 6E 0C    		     LD L,(IX+12)	;
904)   1494 09          		     ADD HL,BC     ;HL=Y+Y1	;HL=Y+Y1
906)   1495 CD 89 13    		     CALL PLOTP	;
908)   1498 E1          		   POP HL        ;X	;X
909)   1499 D1          		   POP DE        ;X1	;X1
910)   149A D5          		   PUSH DE	;
911)   149B E5          		   PUSH HL	;
912)   149C AF          		   XOR A	;
913)   149D ED 52       		   SBC HL,DE	;
914)   149F EB          		   EX DE,HL      ;DE=X-X1	;DE=X-X1
915)   14A0 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
916)   14A3 DD 6E 0C    		     LD L,(IX+12)	;
917)   14A6 09          		     ADD HL,BC     ;HL=Y+Y1	;HL=Y+Y1
919)   14A7 CD 89 13    		     CALL PLOTP	;
921)   14AA E1          		   POP HL        ;X	;X
922)   14AB D1          		   POP DE        ;X1 	;X1
923)   14AC D5          		   PUSH DE	;
924)   14AD E5          		   PUSH HL	;
925)   14AE 19          		   ADD HL,DE	;
926)   14AF EB          		   EX DE,HL      ;DE=X+X1	;DE=X+X1
927)   14B0 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
928)   14B3 DD 6E 0C    		     LD L,(IX+12)	;
929)   14B6 AF          		     XOR A	;
930)   14B7 ED 42       		     SBC HL,BC     ;HL=Y+Y1	;HL=Y+Y1
932)   14B9 CD 89 13    		     CALL PLOTP	;
934)   14BC E1          		   POP HL        ;X	;X
935)   14BD D1          		   POP DE        ;X1  	;X1
936)   14BE D5          		   PUSH DE	;
937)   14BF E5          		   PUSH HL	;
938)   14C0 AF          		   XOR A	;
939)   14C1 ED 52       		   SBC HL,DE	;
940)   14C3 EB          		   EX DE,HL      ;DE=X-X1	;DE=X-X1
941)   14C4 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
942)   14C7 DD 6E 0C    		     LD L,(IX+12)	;
943)   14CA AF          		     XOR A	;
944)   14CB ED 42       		     SBC HL,BC     ;HL=Y-Y1	;HL=Y-Y1
946)   14CD CD 89 13    		     CALL PLOTP	;
948)   14D0 E1          		     POP HL         ;X	;X
949)   14D1 D1          		     POP DE         ;X1	;X1
950)   14D2 C5          		     PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
951)   14D3 E5          		     PUSH HL        ;SAVE X      	;SAVE X
952)   14D4 D5          		     PUSH DE        ;SAVE X1      	;SAVE X1
953)   14D5 09          		     ADD HL,BC      ;	;
954)   14D6 C1          		     POP BC         ;BC=X1	;BC=X1
955)   14D7 EB          		     EX DE,HL       ;DE=X+Y1	;DE=X+Y1
956)   14D8 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
957)   14DB DD 6E 0C    		     LD L,(IX+12)	;
958)   14DE 09          		     ADD HL,BC     ;HL=Y+X1	;HL=Y+X1
960)   14DF CD 89 13    		     CALL PLOTP	;
962)   14E2 E1          		   POP HL        ;X	;X
963)   14E3 D1          		   POP DE        ;Y1	;Y1
964)   14E4 D5          		   PUSH DE	;
965)   14E5 E5          		   PUSH HL	;
966)   14E6 AF          		   XOR A	;
967)   14E7 ED 52       		   SBC HL,DE	;
968)   14E9 EB          		   EX DE,HL      ;DE=X-Y1	;DE=X-Y1
969)   14EA DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
970)   14ED DD 6E 0C    		     LD L,(IX+12)	;
971)   14F0 09          		     ADD HL,BC     ;HL=Y+X1	;HL=Y+X1
973)   14F1 CD 89 13    		     CALL PLOTP	;
975)   14F4 E1          		   POP HL        ;X	;X
976)   14F5 D1          		   POP DE        ;Y1	;Y1
977)   14F6 D5          		   PUSH DE	;
978)   14F7 E5          		   PUSH HL	;
979)   14F8 19          		     ADD HL,DE	;
980)   14F9 EB          		     EX DE,HL      ;DE=X+Y1	;DE=X+Y1
981)   14FA DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
982)   14FD DD 6E 0C    		     LD L,(IX+12)	;
983)   1500 AF          		     XOR A	;
984)   1501 ED 42       		     SBC HL,BC     ;HL=Y-X1	;HL=Y-X1
985)   1503 E5          		     PUSH HL	;
987)   1504 CD 89 13    		     CALL PLOTP	;
989)   1507 C1          		     POP BC        ;Y-X1	;Y-X1
990)   1508 E1          		     POP HL        ;X	;X
991)   1509 D1          		     POP DE        ;Y1 	;Y1
992)   150A AF          		     XOR A	;
993)   150B ED 52       		     SBC HL,DE	;
994)   150D EB          		     EX DE,HL      ;DE=X-Y1	;DE=X-Y1
995)   150E C5          		     PUSH BC	;
996)   150F E1          		     POP HL        ;HL=Y-X1	;HL=Y-X1
998)   1510 CD 89 13    		     CALL PLOTP        	;
999)   1513 C3 18 14    		    JP CIRC_AGN	;
1000)   1516 CD 01 11    		CIRC_EXIT: CALL LCD_CLRXY	;
1001)   1519 D1          		     POP DE ;GET RET ADDR	;GET RET ADDR
1002)   151A 21 10 00    		     LD HL,8*2       ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
1003)   151D 39          		     ADD HL,SP     ;	;
1004)   151E F9          		     LD SP,HL 	;
1005)   151F EB          		     EX DE,HL     	;
1006)   1520 E9          		     JP (HL)	;
1013)   1521 D9          		   EXX	;
1014)   1522 D1          		   POP DE  ;save return addr to de'	;save return addr to de'
1015)   1523 D9          		   EXX  	;
1016)   1524 CD C2 17    		   CALL _FILL         	;
1017)   1527 D9          		   EXX	;
1018)   1528 D5          		   PUSH DE ;restore return addr from de'	;restore return addr from de'
1019)   1529 D9          		   EXX	;
1020)   152A C9          		   RET	;
1027)   152B FE 08       		     CP 0X08   ;BACKSPACE	;BACKSPACE
1028)   152D CA 3D 15    		     JP Z,PRCH_DOBCKSPC	;
1029)   1530 FE 0A       		     CP 0X0A   ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
1030)   1532 C8          		     RET Z	;
1031)   1533 FE 0D       		     CP 0X0D   ;CHECK FOR ENTER	;CHECK FOR ENTER
1032)   1535 20 3A       		     JR NZ,PRCH_DOPRN	;
1033)   1537 21 0D 83    		     LD HL,CURSORX	;
1034)   153A C3 8A 16    		     JP PRCH_NEWLN 	;
1036)   153D 21 0D 83    		     LD HL,CURSORX      	;
1037)   1540 7E          		     LD A,(HL)	;
1038)   1541 38 05       		     JR C,DOREALBCKSPC	;
1040)   1543 FE 01       		     CP 1      ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1041)   1545 C8          		     RET Z	;
1042)   1546 35          		     DEC (HL)	;
1043)   1547 C9          		     RET      	;
1045)   1548 FE 01       		     CP 1      ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1046)   154A 28 0A       		     JR Z,PRCH_DOBCKSPC2     ;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER	;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER
1047)   154C 35          		     DEC (HL)  ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1048)   154D E5          		     PUSH HL	;
1049)   154E 3E 20       		     LD A,32   ;PRINT SPACE	;PRINT SPACE
1050)   1550 CD 71 15    		     CALL PRCH_DOPRN ;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN	;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN
1051)   1553 E1          		     POP HL	;
1052)   1554 35          		     DEC (HL)  ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1053)   1555 B7          		     OR A      	;
1057)   1556 DD 21 02 00 		     LD IX,2	;
1058)   155A DD 39       		     ADD IX,SP	;
1059)   155C DD 66 01    		     LD H,(IX+1);POSITION IN ACCS FOR THE NEW CHARACTER      	;POSITION IN ACCS FOR THE NEW CHARACTER
1060)   155F DD 6E 00    		     LD L,(IX) ;POSITION IN ACCS FOR THE NEW CHARACTER  	;POSITION IN ACCS FOR THE NEW CHARACTER
1061)   1562 3E 00       		     LD A,0    ;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG	;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG
1062)   1564 28 02       		     JR Z,PRCH_SKIP1  ;WE ARE ON COLUMN 1	;WE ARE ON COLUMN 1
1063)   1566 2B          		     DEC HL     ;PREVIOUS POSITION DELETE BACKSPACE	;PREVIOUS POSITION DELETE BACKSPACE
1064)   1567 77          		     LD (HL),A  ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1066)   1568 2B          		     DEC HL     ;PREVIOUS POSITION DELETE PREVIOUS CHAR	;PREVIOUS POSITION DELETE PREVIOUS CHAR
1067)   1569 77          		     LD (HL),A  ;PUT 0 ON LAST POSITION      	;PUT 0 ON LAST POSITION
1068)   156A DD 74 01    		     LD (IX+1),H ;PUT POSITION BACK ON STACK IT WILL POPED	;PUT POSITION BACK ON STACK IT WILL POPED
1069)   156D DD 75 00    		     LD (IX),L	;
1070)   1570 C9          		     RET	;
1073)   1571 F5          		     PUSH AF  ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
1074)   1572 32 10 83    		     LD (LASTCHAR),A ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
1078)   1575 3A 16 83    		     LD A,(VDUMODE)	;
1079)   1578 FE 05       		     CP 5	;
1080)   157A 20 19       		     JR NZ,VDU4	;
1081)   157C 2A 5F 83    		     LD HL,(GR_LASTX)	;
1082)   157F E5          		     PUSH HL	;
1083)   1580 ED 5B 61 83 		     LD DE,(GR_LASTY)	;
1084)   1584 D5          		     PUSH DE	;
1085)   1585 01 07 00    		     LD BC,FONT_WIDTH-1	;
1086)   1588 09          		     ADD HL,BC	;
1087)   1589 E5          		     PUSH HL	;
1088)   158A 01 09 00    		     LD BC,FONT_HEIGHT-1	;
1089)   158D EB          		     EX DE,HL	;
1090)   158E 09          		     ADD HL,BC	;
1091)   158F E5          		     PUSH HL	;
1092)   1590 CD 4C 10    		     CALL LCD_SETXY	;
1093)   1593 18 34       		     JR PRCHDO	;
1094)   1595 3A 0D 83    		VDU4: LD A,(CURSORX)	;
1095)   1598 06 08       		     LD B,FONT_WIDTH	;
1096)   159A 16 00       		     LD D,0	;
1097)   159C 5F          		     LD E,A	;
1098)   159D 21 00 00    		     LD HL,0	;
1099)   15A0 B7          		     OR A          ; CLEAR CARRY	; CLEAR CARRY
1101)   15A1 ED 5A       		     ADC HL,DE	;
1102)   15A3 10 FC       		     DJNZ PRCH_AGN1 ;HL=DE*B	;HL=DE*B
1103)   15A5 E5          		     PUSH HL       ;1ST PARAM X1	;1ST PARAM X1
1104)   15A6 11 08 00    		     LD DE,FONT_WIDTH 	;
1105)   15A9 ED 5A       		     ADC HL,DE      	;
1106)   15AB 2B          		     DEC HL	;
1107)   15AC E5          		     PUSH HL       ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1109)   15AD CD FF 15    		     CALL LCD_CALCLINE ;SCROLL CALC	;SCROLL CALC
1110)   15B0 06 0A       		     LD B,FONT_HEIGHT 	;
1111)   15B2 16 00       		     LD D,0	;
1112)   15B4 5F          		     LD E,A	;
1113)   15B5 21 00 00    		     LD HL,0	;
1115)   15B8 ED 5A       		     ADC HL,DE	;
1116)   15BA 10 FC       		     DJNZ PRCH_AGN2      	;
1117)   15BC D1          		     POP DE        ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
1118)   15BD E5          		     PUSH HL       ;2ND PARAM Y1	;2ND PARAM Y1
1119)   15BE D5          		     PUSH DE       ;3RD PARAM X2	;3RD PARAM X2
1120)   15BF 11 0A 00    		     LD DE,FONT_HEIGHT	;
1121)   15C2 ED 5A       		     ADC HL,DE     ;CALC 4TH PARAM      	;CALC 4TH PARAM
1122)   15C4 2B          		     DEC HL        ;4TH PARAM -1  	;4TH PARAM -1
1123)   15C5 E5          		     PUSH HL    ;4TH PARAM Y2	;4TH PARAM Y2
1124)   15C6 CD 4C 10    		     CALL LCD_SETXY	;
1125)   15C9 F1          		PRCHDO: POP AF       ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
1126)   15CA B7          		     OR A	;
1127)   15CB 21 00 75    		     LD HL,FONT_ADDR	;
1128)   15CE 16 00       		     LD D,0	;
1129)   15D0 5F          		     LD E,A	;
1130)   15D1 ED 5A       		     ADC HL,DE     ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
1131)   15D3 E5          		     PUSH HL	;
1132)   15D4 D1          		     POP DE        ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
1133)   15D5 0E 0A       		     LD C,FONT_HEIGHT   ; TOTAL FONT LINES	; TOTAL FONT LINES
1135)   15D7 1A          		     LD A,(DE)           ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1136)   15D8 06 08       		     LD B,FONT_WIDTH      	;
1138)   15DA CB 27       		     SLA A               ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1139)   15DC 38 05       		     JR C,FORECOLOR	;
1140)   15DE 2A 03 83    		     LD HL,(BCOLOR)	;
1141)   15E1 18 03       		     JR PRCH_CONT	;
1143)   15E3 2A 01 83    		     LD HL,(FCOLOR)      	;
1145)   15E6 F5          		     PUSH AF	;
1146)   15E7 D5          		     PUSH DE             ;TODO:PROBABLY NOT NEEDED HERE 	;TODO:PROBABLY NOT NEEDED HERE
1147)   15E8 CD 99 10    		     CALL LCD_SETPIXEL	;
1148)   15EB D1          		     POP DE	;
1149)   15EC F1          		     POP AF      	;
1150)   15ED 10 EB       		     DJNZ PRCH_AGN4	;
1151)   15EF 14          		     INC D             ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1152)   15F0 0D          		     DEC C	;
1153)   15F1 20 E4       		     JR NZ,PRCH_AGN3	;
1155)   15F3 21 0D 83    		     LD HL,CURSORX	;
1156)   15F6 7E          		     LD A,(HL)	;
1157)   15F7 3C          		     INC A	;
1158)   15F8 FE 50       		     CP 80	;
1159)   15FA CA 8A 16    		     JP Z,PRCH_NEWLN  ;NEW LINE	;NEW LINE
1160)   15FD 77          		     LD (HL),A	;
1161)   15FE C9          		     RET	;
1164)   15FF 3A 0F 83    		@LCD_CALCLINE: LD A,(SCRLN)	;
1165)   1602 57          		               LD D,A 	;
1166)   1603 3A 0E 83    		               LD A,(CURSORY)  ;480/10 MAKES 48 LINES                	;480/10 MAKES 48 LINES
1167)   1606 82          		               ADD A,D	;
1168)   1607 FE 30       		               CP TOTLINES	;
1169)   1609 D8          		               RET C	;
1171)   160A D6 30       		               SUB TOTLINES	;
1172)   160C C9          		               RET             	;
1177)   160D 16 33       		LCD_SETSCROLL: LD D,0x33	;
1178)   160F CD D3 0E    		               CALL LCD_WR_COM	;
1179)   1612 16 00       		 LD D,0X00 ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
1180)   1614 CD CF 0E    		               CALL LCD_WR_DAT	;
1181)   1617 16 00       		 LD D,0X00 ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
1182)   1619 CD CF 0E    		               CALL LCD_WR_DAT	;
1183)   161C 16 01       		 LD D,0X01 ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
1184)   161E CD CF 0E    		               CALL LCD_WR_DAT	;
1185)   1621 16 E0       		 LD D,0XE0 ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
1186)   1623 CD CF 0E    		               CALL LCD_WR_DAT	;
1187)   1626 16 00       		 LD D,0X00 ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
1188)   1628 CD CF 0E    		               CALL LCD_WR_DAT	;
1189)   162B 16 00       		 LD D,0X00 ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
1190)   162D CD CF 0E    		               CALL LCD_WR_DAT	;
1191)   1630 AF          		               XOR A	;
1192)   1631 32 0F 83    		               LD (SCRLN),A	;
1193)   1634 C9          		 RET	;
1196)   1635 3A 0F 83    		@LCD_DOSCROLL:  LD A,(SCRLN)	;
1197)   1638 3C          		               INC A	;
1198)   1639 FE 30       		               CP TOTLINES	;
1199)   163B 38 02       		               JR C, DS_NXT	;
1200)   163D D6 30       		               SUB TOTLINES	;
1201)   163F 32 0F 83    		DS_NXT:        LD (SCRLN),A	;
1202)   1642 6F          		               LD L,A	;
1203)   1643 26 00       		               LD H,0	;
1204)   1645 29          		               ADD HL,HL ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1205)   1646 29          		               ADD HL,HL	;
1206)   1647 29          		               ADD HL,HL  	;
1207)   1648 5F          		               LD E,A	;
1208)   1649 16 00       		               LD D,0	;
1209)   164B 19          		               ADD HL,DE	;
1210)   164C 19          		               ADD HL,DE	;
1211)   164D 16 37       		               LD D,0x37	;
1212)   164F CD D3 0E    		               CALL LCD_WR_COM	;
1213)   1652 54          		 LD D,H ;NEW TOP SCROLL LINE BYTES HIGH (1-480) 	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
1214)   1653 CD CF 0E    		               CALL LCD_WR_DAT	;
1215)   1656 55          		 LD D,L ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
1216)   1657 CD CF 0E    		               CALL LCD_WR_DAT	;
1217)   165A C9          		               RET	;
1220)   165B 11 00 00    		@LCD_CLRTXTLN: LD DE,0	;
1222)   165E D5          		               PUSH DE	;
1223)   165F 6F          		               LD L,A	;
1224)   1660 26 00       		               LD H,0	;
1225)   1662 29          		               ADD HL,HL ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1226)   1663 29          		               ADD HL,HL	;
1227)   1664 29          		               ADD HL,HL  	;
1228)   1665 5F          		               LD E,A	;
1229)   1666 16 00       		               LD D,0	;
1230)   1668 19          		               ADD HL,DE	;
1231)   1669 19          		               ADD HL,DE	;
1233)   166A E5          		               PUSH HL  	;
1234)   166B 11 0A 00    		               LD DE,FONT_HEIGHT	;
1235)   166E 19          		               ADD HL,DE	;
1237)   166F EB          		               EX DE,HL                	;
1238)   1670 21 1F 03    		               LD HL,LCD_WIDTH	;
1240)   1673 E5          		               PUSH HL	;
1241)   1674 D5          		               PUSH DE ;PARAM4	;PARAM4
1242)   1675 CD 4C 10    		               CALL LCD_SETXY	;
1243)   1678 01 40 1F    		               LD BC, 8000; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
1244)   167B 2A 03 83    		               LD HL,(BCOLOR)     	;
1245)   167E CD 99 10    		CTL_AGN:       CALL LCD_SETPIXEL ;DESTROYS D,A	;DESTROYS D,A
1246)   1681 0B          		               DEC BC	;
1247)   1682 78          		               LD A,B	;
1248)   1683 B1          		               OR C	;
1249)   1684 20 F8       		               JR NZ,CTL_AGN	;
1250)   1686 CD 01 11    		       CALL LCD_CLRXY 	;
1251)   1689 C9          		       RET                	;
1255)   168A AF          		     XOR A  	;
1256)   168B 77          		     LD (HL),A   	;
1257)   168C 23          		     INC HL	;
1258)   168D 7E          		     LD A,(HL)	;
1259)   168E 3C          		     INC A       	;
1261)   168F FE 30       		     CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
1262)   1691 28 02       		     JR Z,PRCH_SCROLL	;
1263)   1693 77          		     LD (HL),A                             	;
1264)   1694 C9          		     RET	;
1266)   1695 F5          		PRCH_SCROLL: PUSH AF	;
1267)   1696 E5          		     PUSH HL	;
1269)   1697 3A 0F 83    		     LD A,(SCRLN)	;
1270)   169A CD 5B 16    		     CALL LCD_CLRTXTLN	;
1272)   169D CD 35 16    		     CALL LCD_DOSCROLL	;
1273)   16A0 E1          		     POP HL	;
1274)   16A1 F1          		     POP AF	;
1276)   16A2 3D          		     DEC A	;
1277)   16A3 77          		     LD (HL),A ;CURSORY                            	;CURSORY
1278)   16A4 AF          		     XOR A	;
1279)   16A5 32 0D 83    		     LD (CURSORX),A	;
1280)   16A8 C9          		     RET	;
1295)   16A9 2A 03 83    		     LD HL,(BCOLOR);      	;
1296)   16AC 18 03       		     JR LCD_SETCURS	;
1307)   16AE 2A 01 83    		     LD HL,(FCOLOR)      ;COLOR PARAM      	;COLOR PARAM
1310)   16B1 E5          		     PUSH HL             ;COLOR PARAM	;COLOR PARAM
1311)   16B2 3A 0D 83    		     LD A,(CURSORX)	;
1312)   16B5 06 08       		     LD B,FONT_WIDTH	;
1313)   16B7 16 00       		     LD D,0	;
1314)   16B9 5F          		     LD E,A	;
1315)   16BA 21 00 00    		     LD HL,0	;
1316)   16BD B7          		     OR A                ;CLEAR CARRY	;CLEAR CARRY
1318)   16BE ED 5A       		     ADC HL,DE	;
1319)   16C0 10 FC       		     DJNZ SCUR_AGN1      ;HL = DE * B 	;HL = DE * B
1320)   16C2 E5          		     PUSH HL             ;1ST PARAM X1	;1ST PARAM X1
1321)   16C3 01 08 00    		     LD BC,FONT_WIDTH	;
1322)   16C6 ED 4A       		     ADC HL,BC           ;NEXT CHAR	;NEXT CHAR
1323)   16C8 2B          		     DEC HL              ;MINUS 1	;MINUS 1
1324)   16C9 E5          		     PUSH HL             ;SAVE 3RD PARAM X2      	;SAVE 3RD PARAM X2
1326)   16CA CD FF 15    		     CALL LCD_CALCLINE	;
1327)   16CD 06 0A       		     LD B,FONT_HEIGHT 	;
1328)   16CF 16 00       		     LD D,0	;
1329)   16D1 5F          		     LD E,A	;
1330)   16D2 21 00 00    		     LD HL,0	;
1332)   16D5 ED 5A       		     ADC HL,DE	;
1333)   16D7 10 FC       		     DJNZ SCUR_AGN2      ;HL=B*DE	;HL=B*DE
1334)   16D9 0E 08       		     LD C,FONT_HEIGHT-2  ;2 PIXEL HEIGTH CURSOR       	;2 PIXEL HEIGTH CURSOR
1335)   16DB 06 00       		     LD B,0	;
1336)   16DD ED 4A       		     ADC HL,BC           ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
1337)   16DF D1          		     POP DE              ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
1338)   16E0 E5          		     PUSH HL             ;2ND PARAM Y1	;2ND PARAM Y1
1339)   16E1 D5          		     PUSH DE             ;3RD PARAM X2	;3RD PARAM X2
1341)   16E2 23          		     INC HL              ; Y2 ADD THE LAST +2 PIXELS  	; Y2 ADD THE LAST +2 PIXELS
1342)   16E3 E5          		     PUSH HL             ;4TH PARAM Y2	;4TH PARAM Y2
1343)   16E4 CD 4C 10    		     CALL LCD_SETXY	;
1345)   16E7 E1          		     POP HL              ;GET THE COLOR	;GET THE COLOR
1346)   16E8 06 10       		     LD B,2*FONT_WIDTH   ;2*8=16	;2*8=16
1348)   16EA CD 99 10    		     CALL LCD_SETPIXEL   ;DESTROYS D,A	;DESTROYS D,A
1349)   16ED 10 FB       		     DJNZ SCUR_AGN3                            	;
1354)   16EF C9          		     RET	;
1357)   16F0 CD 01 11    		    CALL LCD_CLRXY;	;
1358)   16F3 2A 03 83    		    LD HL,(BCOLOR)     	;
1360)   16F6 01 E0 01    		    LD BC,LCD_HEIGHT+1	;
1361)   16F9 C5          		CS_AGNA2: PUSH BC	;
1362)   16FA 01 20 03    		    LD BC,LCD_WIDTH+1	;
1363)   16FD CD 99 10    		CS_AGNA1: CALL LCD_SETPIXEL         ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1364)   1700 0B          		    DEC BC	;
1365)   1701 78          		    LD A,B	;
1366)   1702 B1          		    OR C	;
1367)   1703 20 F8       		    JR NZ,CS_AGNA1	;
1368)   1705 C1          		    POP BC	;
1369)   1706 0B          		    DEC BC	;
1370)   1707 78          		    LD A,B	;
1371)   1708 B1          		    OR C     	;
1372)   1709 20 EE       		    JR NZ,CS_AGNA2	;
1373)   170B 21 00 00    		    LD HL,0                   ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1374)   170E 22 0D 83    		    LD (CURSORX),HL       	;
1375)   1711 C9          		  RET	;
1380)   1712 06 DF       		    LD B,LCD_HEIGHT.AND.0xFF   ;lsb	;lsb
1381)   1714 0E 02       		    LD C,LCD_HEIGHT.SHR.8+1      ;MSB+1	;MSB+1
1383)   1716 C5          		    PUSH BC          	;
1385)   1717 06 1F       		    LD B,LCD_WIDTH.AND.0xFF   ;lsb	;lsb
1386)   1719 0E 04       		    LD C,LCD_WIDTH.SHR.8+1      ;MSV+1          	;MSV+1
1388)   171B CD 99 10    		    CALL LCD_SETPIXEL         ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1389)   171E 10 FB       		    DJNZ CS_AGN1	;
1390)   1720 0D          		    DEC C	;
1391)   1721 20 F8       		    JR NZ,CS_AGN1     	;
1392)   1723 C1          		    POP BC	;
1393)   1724 10 F0       		    DJNZ CS_AGN2	;
1394)   1726 0D          		    DEC C	;
1395)   1727 20 ED       		    JR NZ,CS_AGN2 	;
1396)   1729 21 00 00    		    LD HL,0                   ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1397)   172C 22 0D 83    		    LD (CURSORX),HL       	;
1398)   172F C9          		    RET	;
1404)   1730 7E          		    LD A,(HL)	;
1405)   1731 FE 00       		    CP 0	;
1406)   1733 C8          		    RET Z	;
1407)   1734 E5          		    PUSH HL	;
1408)   1735 CD 2B 15    		    CALL LCD_PRINTCHAR     	;
1409)   1738 E1          		    POP HL	;
1410)   1739 23          		    INC HL	;
1411)   173A 18 F4       		    JR LCD_MSG	;
  4)   173C AF          		NEGHL:xor a	;
  5)   173D 95          		     sub l	;
  6)   173E 6F          		     ld l,a	;
  7)   173F 9F          		     sbc a,a	;
  8)   1740 94          		     sub h	;
  9)   1741 67          		     ld h,a	;
 10)   1742 C9          		     RET	;
 14)   1743 2A 79 83    		     LD HL,(FILL_IDX)	;
 15)   1746 01 58 02    		     LD BC,MAXQ	;
 16)   1749 A7          		     AND A	;
 17)   174A ED 42       		     SBC HL,BC	;
 18)   174C D0          		     RET NC ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 19)   174D 2A 7B 83    		     LD HL,(FILL_PY)	;
 20)   1750 ED 5B 81 83 		     LD DE,(FILL_PDY)	;
 21)   1754 19          		     ADD HL,DE	;
 22)   1755 7C          		     LD A,H	;
 23)   1756 FE 80       		     CP 80H	;
 24)   1758 D0          		     RET NC ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 25)   1759 11 1F 03    		     LD DE,LCD_WIDTH	;
 26)   175C ED 52       		     SBC HL,DE	;
 27)   175E D0          		     RET NC  ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 29)   175F 2A 77 83    		     LD HL,(FILL_Q)	;
 30)   1762 ED 4B 79 83 		     LD BC,(FILL_IDX)	;
 31)   1766 78          		     LD A,B	;
 32)   1767 B1          		     OR C         ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 33)   1768 28 08       		     JR Z,QPS_NXT1 	;
 34)   176A EB          		     EX DE,HL	;
 35)   176B C5          		     PUSH BC	;
 36)   176C E1          		     POP HL      	;
 37)   176D 29          		     ADD HL, HL	;
 38)   176E 29          		     ADD HL, HL	;
 39)   176F 29          		     ADD HL, HL        ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 40)   1770 EB          		     EX DE,HL	;
 41)   1771 19          		     ADD HL,DE      	;
 43)   1772 11 7B 83    		     LD DE,FILL_PY	;
 44)   1775 EB          		     EX DE,HL  ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 45)   1776 01 08 00    		     LD BC,8   ;8 BYTES	;8 BYTES
 46)   1779 ED B0       		     LDIR      ;COPY	;COPY
 47)   177B 2A 79 83    		     LD HL,(FILL_IDX)      	;
 48)   177E 23          		     INC HL	;
 49)   177F 22 79 83    		     LD (FILL_IDX),HL	;
 50)   1782 C9          		QPS_EXT: RET   	;
 52)   1783 2A 77 83    		QPOP: LD HL,(FILL_Q)	;
 53)   1786 ED 4B 79 83 		     LD BC,(FILL_IDX)	;
 54)   178A 0B          		     DEC BC      	;
 55)   178B C5          		     PUSH BC	;
 56)   178C 78          		     LD A,B	;
 57)   178D B1          		     OR C         ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 58)   178E 28 08       		     JR Z,QPP_NXT1                        	;
 59)   1790 EB          		     EX DE,HL	;
 60)   1791 C5          		     PUSH BC	;
 61)   1792 E1          		     POP HL      	;
 62)   1793 29          		     ADD HL, HL	;
 63)   1794 29          		     ADD HL, HL	;
 64)   1795 29          		     ADD HL, HL        ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 65)   1796 EB          		     EX DE,HL	;
 66)   1797 19          		     ADD HL,DE      	;
 67)   1798 C1          		QPP_NXT1: POP BC 	;
 68)   1799 ED 43 79 83 		     LD (FILL_IDX),BC	;
 70)   179D 11 7B 83    		     LD DE,FILL_PY  ;ORIGIN=QUEUE DEST=FILL_PY               	;ORIGIN=QUEUE DEST=FILL_PY
 71)   17A0 01 08 00    		     LD BC,8   ;8 BYTES	;8 BYTES
 72)   17A3 ED B0       		     LDIR      ;COPY	;COPY
 73)   17A5 2A 7D 83    		     LD HL,(FILL_PXL)	;
 74)   17A8 22 71 83    		     LD (FILL_X1),HL	;
 75)   17AB 2A 7F 83    		     LD HL,(FILL_PXR)	;
 76)   17AE 22 73 83    		     LD (FILL_X2),HL	;
 77)   17B1 ED 5B 81 83 		     LD DE,(FILL_PDY)	;
 78)   17B5 ED 53 75 83 		     LD (FILL_DY),DE      	;
 79)   17B9 2A 7B 83    		     LD HL,(FILL_PY)	;
 80)   17BC A7          		     AND A	;
 81)   17BD 19          		     ADD HL,DE	;
 82)   17BE 22 6D 83    		     LD (FILL_Y),HL 	;
 90)   17C1 C9          		     RET	;
 92)   17C2 E1          		@_FILL: POP HL        ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 93)   17C3 D1          		     POP DE          ;Y	;Y
 94)   17C4 C1          		     POP BC          ;X      	;X
 95)   17C5 E5          		     PUSH HL         ;RET ADDR TO SP	;RET ADDR TO SP
 96)   17C6 ED 43 6B 83 		     LD (FILL_X),BC	;
 97)   17CA ED 53 6D 83 		     LD (FILL_Y),DE   	;
 98)   17CE ED 73 85 83 		     LD (FILL_OLDSP),SP   	;
 99)   17D2 21 3E ED    		     LD HL,-((MAXQ*8)+2) ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
100)   17D5 39          		     ADD HL,SP	;
101)   17D6 F9          		     LD SP,HL        ;NEW SP	;NEW SP
104)   17D7 22 77 83    		     LD (FILL_Q),HL  ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
105)   17DA 21 00 00    		     LD HL,0	;
106)   17DD 22 79 83    		     LD (FILL_IDX),HL ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
110)   17E0 2A 6B 83    		     LD HL,(FILL_X);	;
111)   17E3 E5          		     PUSH HL	;
112)   17E4 2A 6D 83    		     LD HL,(FILL_y);	;
113)   17E7 E5          		     PUSH HL	;
114)   17E8 CD B0 10    		     CALL LCD_READPIXEL	;
115)   17EB 22 83 83    		     LD (FILL_OV),HL	;
117)   17EE ED 5B 01 83 		     LD DE,(FCOLOR)	;
118)   17F2 A7          		     AND A	;
119)   17F3 ED 52       		     SBC HL,DE      ;CHK OV=NV	;CHK OV=NV
120)   17F5 CA 7A 19    		     JP Z,FL_EXIT	;
121)   17F8 2A 6B 83    		     LD HL,(FILL_X)	;
122)   17FB 7C          		     LD A,H	;
123)   17FC FE 80       		     CP 0x80         ;CHK <0	;CHK <0
124)   17FE D2 7A 19    		     JP NC,FL_EXIT	;
125)   1801 11 1F 03    		     LD DE,LCD_WIDTH 	;
126)   1804 A7          		     AND A	;
127)   1805 ED 52       		     SBC HL,DE       ;CHK>799	;CHK>799
128)   1807 D2 7A 19    		     JP NC,FL_EXIT	;
129)   180A 2A 6D 83    		     LD HL,(FILL_Y)	;
130)   180D 7C          		     LD A,H	;
131)   180E FE 80       		     CP 0x80         ;CHK <0	;CHK <0
132)   1810 D2 7A 19    		     JP NC,FL_EXIT	;
133)   1813 11 DF 01    		     LD DE,LCD_HEIGHT 	;
134)   1816 A7          		     AND A	;
135)   1817 ED 52       		     SBC HL,DE       ;CHK>480	;CHK>480
136)   1819 D2 7A 19    		     JP NC,FL_EXIT           	;
138)   181C 2A 6D 83    		     LD HL,(FILL_Y)	;
139)   181F 22 7B 83    		     LD (FILL_PY),HL	;
140)   1822 2A 6B 83    		     LD HL,(FILL_X)	;
141)   1825 22 7D 83    		     LD (FILL_PXL),HL	;
142)   1828 22 7F 83    		     LD (FILL_PXR),HL	;
143)   182B 21 01 00    		     LD HL,1	;
144)   182E 22 81 83    		     LD (FILL_PDY),HL	;
145)   1831 CD 43 17    		     CALL QPUSH         ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
147)   1834 2A 6D 83    		     LD HL,(FILL_Y)	;
148)   1837 23          		     INC HL	;
149)   1838 22 7B 83    		     LD (FILL_PY),HL	;
150)   183B 21 FF FF    		     LD HL,-1	;
151)   183E 22 81 83    		     LD (FILL_PDY),HL	;
152)   1841 CD 43 17    		     CALL QPUSH	;
154)   1844 ED 5B 79 83 		    LD DE,(FILL_IDX)	;
155)   1848 7A          		    LD A,D	;
156)   1849 B3          		    OR E	;
157)   184A CA 7A 19    		    JP Z,FL_EXIT    ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT 	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
161)   184D CD 83 17    		     CALL QPOP            ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
164)   1850 2A 71 83    		      LD HL,(FILL_X1)	;
165)   1853 22 6B 83    		     LD (FILL_X),HL	;
166)   1856 7C          		FL_LP1: LD A,H	;
167)   1857 FE 80       		     CP 0x80          ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
168)   1859 D2 81 18    		     JP NC,FL_NXT1	;
169)   185C ED 5B 6D 83 		     LD DE,(FILL_Y)	;
170)   1860 E5          		     PUSH HL	;
171)   1861 D5          		     PUSH DE	;
172)   1862 CD B0 10    		     CALL LCD_READPIXEL	;
173)   1865 ED 5B 83 83 		     LD DE,(FILL_OV)	;
174)   1869 A7          		     AND A	;
175)   186A ED 52       		     SBC HL,DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
176)   186C C2 81 18    		     JP NZ,FL_NXT1	;
177)   186F ED 5B 6B 83 		     LD DE,(FILL_X)	;
178)   1873 2A 6D 83    		     LD HL,(FILL_Y)	;
179)   1876 D5          		     PUSH DE	;
180)   1877 CD 89 13    		     CALL PLOTP	;
181)   187A E1          		     POP HL	;
182)   187B 2B          		     DEC HL	;
183)   187C 22 6B 83    		     LD (FILL_X),HL	;
184)   187F 18 D5       		     JR FL_LP1     	;
188)   1881 2A 6B 83    		     LD HL,(FILL_X)	;
189)   1884 ED 5B 71 83 		     LD DE,(FILL_X1)	;
190)   1888 7C          		     LD A,H	;
191)   1889 FE 80       		     CP 80H	;
192)   188B 30 08       		     JR NC,FL_NXT1A   ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP      	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
193)   188D A7          		     AND A	;
194)   188E ED 52       		     SBC HL,DE       ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
195)   1890 D2 38 19    		     JP NC,FL_SKIP   ;C IF DE>HL X1>X, NC IF X>=X1    	;C IF DE>HL X1>X, NC IF X>=X1
196)   1893 ED 5A       		     ADC HL,DE	;
199)   1895 23          		    INC HL	;
200)   1896 22 6F 83    		    LD (FILL_L),HL	;
203)   1899 A7          		    AND A     	;
204)   189A ED 52       		    SBC HL,DE   ;CHK L-X1	;CHK L-X1
205)   189C 30 1E       		    JR NC,FL_NXT2   ;C IF DE>HL X1>L	;C IF DE>HL X1>L
206)   189E 28 1C       		    JR Z,FL_NXT2	;
207)   18A0 ED 5A       		    ADC HL,DE	;
208)   18A2 22 7D 83    		    LD (FILL_PXL),HL ;L	;L
209)   18A5 2A 6D 83    		    LD HL,(FILL_Y)	;
210)   18A8 22 7B 83    		    LD (FILL_PY),HL	;
211)   18AB 1B          		    DEC DE	;
212)   18AC ED 53 7F 83 		    LD (FILL_PXR),DE	;
213)   18B0 2A 75 83    		    LD HL,(FILL_DY) 	;
214)   18B3 CD 3C 17    		    CALL NEGHL	;
215)   18B6 22 81 83    		    LD (FILL_PDY),HL     	;
216)   18B9 CD 43 17    		    CALL QPUSH     	;
220)   18BC 2A 71 83    		     LD HL,(FILL_X1)  ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
221)   18BF 23          		     INC HL	;
222)   18C0 22 6B 83    		     LD (FILL_X),HL	;
226)   18C3 11 1F 03    		   LD DE,LCD_WIDTH	;
227)   18C6 A7          		   AND A	;
228)   18C7 EB          		   EX DE,HL	;
229)   18C8 ED 52       		   SBC HL,DE    ;800-(X=DE)	;800-(X=DE)
230)   18CA 38 24       		   JR C,FL_NXT3   ;C IF X>800	;C IF X>800
231)   18CC EB          		   EX DE,HL      ;HL=X	;HL=X
232)   18CD E5          		   PUSH HL	;
233)   18CE 2A 6D 83    		   LD HL,(FILL_Y)	;
234)   18D1 E5          		   PUSH HL	;
235)   18D2 CD B0 10    		   CALL LCD_READPIXEL	;
236)   18D5 ED 5B 83 83 		   LD DE,(FILL_OV)	;
237)   18D9 A7          		   AND A	;
238)   18DA ED 52       		   SBC HL,DE       ;PIXELREAD=OV	;PIXELREAD=OV
239)   18DC 20 12       		   JR NZ,FL_NXT3	;
240)   18DE ED 5B 6B 83 		   LD DE,(FILL_X)	;
241)   18E2 2A 6D 83    		   LD HL,(FILL_Y)	;
242)   18E5 D5          		   PUSH DE	;
243)   18E6 CD 89 13    		   CALL PLOTP	;
244)   18E9 E1          		   POP HL	;
245)   18EA 23          		   INC HL	;
246)   18EB 22 6B 83    		   LD (FILL_X),HL	;
247)   18EE 18 D3       		   JR FL_LP2	;
250)   18F0 2A 6D 83    		    LD HL,(FILL_Y)	;
251)   18F3 22 7B 83    		    LD (FILL_PY),HL	;
252)   18F6 2A 6F 83    		    LD HL,(FILL_L)	;
253)   18F9 22 7D 83    		    LD (FILL_PXL),HL	;
254)   18FC 2A 6B 83    		    LD HL,(FILL_X)	;
255)   18FF 2B          		    DEC HL	;
256)   1900 22 7F 83    		    LD (FILL_PXR),HL	;
257)   1903 2A 75 83    		    LD HL,(FILL_DY)	;
258)   1906 22 81 83    		    LD (FILL_PDY),HL	;
259)   1909 CD 43 17    		    CALL QPUSH         	;
261)   190C 2A 6B 83    		    LD HL,(FILL_X)	;
262)   190F ED 5B 73 83 		    LD DE,(FILL_X2)	;
263)   1913 13          		    INC DE	;
264)   1914 A7          		    AND A	;
265)   1915 ED 52       		    SBC HL,DE    ;X-(X2+1) C IF X2+1>X 	;X-(X2+1) C IF X2+1>X
266)   1917 38 1F       		    JR C,FL_NXT4	;
267)   1919 28 1D       		    JR Z,FL_NXT4	;
268)   191B 2A 6D 83    		    LD HL,(FILL_Y)	;
269)   191E 22 7B 83    		    LD (FILL_PY),HL	;
270)   1921 ED 53 7D 83 		    LD (FILL_PXL),DE	;
271)   1925 2A 6B 83    		    LD HL,(FILL_X);	;
272)   1928 2B          		    DEC HL	;
273)   1929 22 7F 83    		    LD (FILL_PXR),HL	;
274)   192C 2A 75 83    		    LD HL,(FILL_DY)	;
275)   192F CD 3C 17    		    CALL NEGHL	;
276)   1932 22 81 83    		    LD (FILL_PDY),HL  	;
277)   1935 CD 43 17    		    CALL QPUSH         	;
280)   1938 2A 6B 83    		       LD HL,(FILL_X)	;
281)   193B 23          		       INC HL	;
282)   193C 22 6B 83    		       LD (FILL_X),HL	;
283)   193F ED 5B 73 83 		FL_LP3: LD DE,(FILL_X2)	;
284)   1943 A7          		       AND A	;
285)   1944 EB          		       EX DE,HL         ;X2=HL X=DE	;X2=HL X=DE
286)   1945 ED 52       		       SBC HL,DE        ;C IF DE>HL X>X2       	;C IF DE>HL X>X2
287)   1947 38 1C       		       JR C,FL_NXT5	;
288)   1949 19          		       ADD HL,DE        ;	;
289)   194A EB          		       EX DE,HL         ;X=HL X2=DE	;X=HL X2=DE
290)   194B E5          		       PUSH HL	;
291)   194C 2A 6D 83    		       LD HL,(FILL_Y)	;
292)   194F E5          		       PUSH HL	;
293)   1950 CD B0 10    		       CALL LCD_READPIXEL	;
294)   1953 ED 5B 83 83 		       LD DE,(FILL_OV)	;
295)   1957 A7          		       AND A	;
296)   1958 ED 52       		       SBC HL,DE     ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
297)   195A 28 09       		       JR Z,FL_NXT5	;
298)   195C 2A 6B 83    		       LD HL,(FILL_X)	;
299)   195F 23          		       INC HL	;
300)   1960 22 6B 83    		       LD (FILL_X),HL	;
301)   1963 18 DA       		       JR FL_LP3	;
304)   1965 2A 6B 83    		       LD HL,(FILL_X)	;
305)   1968 22 6F 83    		       LD (FILL_L),HL	;
307)   196B ED 5B 73 83 		      LD DE,(FILL_X2)	;
308)   196F A7          		      AND A	;
309)   1970 EB          		      EX DE,HL    ;X2=HL X=DE	;X2=HL X=DE
310)   1971 ED 52       		      SBC HL,DE   ;X2-X C IF X>X2	;X2-X C IF X>X2
311)   1973 EB          		      EX DE,HL    ;X=HL X2-X=DE	;X=HL X2-X=DE
312)   1974 DA 44 18    		      JP C,FL_LP0 ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
313)   1977 C3 C3 18    		      JP FL_LP2   ;GOTO DO WHILE	;GOTO DO WHILE
316)   197A 21 C2 12    		FL_EXIT: LD HL,(MAXQ*8)+2 ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
317)   197D 39          		        ADD HL,SP	;
318)   197E F9          		        LD SP,HL        ;NEW SP	;NEW SP
319)   197F C9          		        RET	;
  9)   1980 FE 01       		    CP 1          ;IS IT FOR GRAPHICS?	;IS IT FOR GRAPHICS?
 10)   1982 28 0E       		    JR Z,GRCOLS	;
 11)   1984 21 03 83    		    LD HL,BCOLOR	;
 12)   1987 22 69 83    		    LD (GR_PARAM4),HL	;
 13)   198A 21 01 83    		    LD HL,FCOLOR	;
 14)   198D 22 67 83    		    LD (GR_PARAM3),HL	;
 15)   1990 18 0C       		    JR BS_DOCOL	;
 16)   1992 21 07 83    		GRCOLS: LD HL,BGRCOL	;
 17)   1995 22 69 83    		    LD (GR_PARAM4),HL	;
 18)   1998 21 05 83    		    LD HL,FGRCOL	;
 19)   199B 22 67 83    		    LD (GR_PARAM3),HL         	;
 20)   199E CD 94 5E    		BS_DOCOL: CALL EXPRI   ;GET 1ST PARAM	;GET 1ST PARAM
 21)   19A1 D9          		    EXX	;
 22)   19A2 FD 7E 00    		    LD A,(IY)	;
 23)   19A5 FE 0D       		    CP 0x0D       ;FINISHED COMD LINE	;FINISHED COMD LINE
 24)   19A7 28 32       		    JR Z,COLSEL	;
 25)   19A9 FE 3A       		    CP ':'	;
 26)   19AB 28 2E       		    JR Z,COLSEL	;
 27)   19AD FE 2C       		    CP ','        ;CHECK FOR ','	;CHECK FOR ','
 28)   19AF C2 4E 1D    		    JP NZ,GRPHERR	;
 30)   19B2 E5          		    PUSH HL       ;SAVE 1ST PARAM	;SAVE 1ST PARAM
 31)   19B3 FD 23       		    INC IY        ;NEXT PARAM	;NEXT PARAM
 32)   19B5 CD 94 5E    		    CALL EXPRI    ;GET 2ND PARAM	;GET 2ND PARAM
 33)   19B8 D9          		    EXX	;
 34)   19B9 D1          		    POP DE        ;RESTORE 1ST PARAM ON DE HL HAS THE 2ND	;RESTORE 1ST PARAM ON DE HL HAS THE 2ND
 35)   19BA 7B          		    LD A,E	;
 36)   19BB D6 80       		    SUB 128	;
 37)   19BD 38 07       		    JR C,COLFC	;
 38)   19BF 5F          		    LD E,A	;
 39)   19C0 DD 21 37 83 		    LD IX,BCOLPAL	;
 40)   19C4 18 04       		    JR DOPALCOL	;
 41)   19C6 DD 21 17 83 		COLFC: LD IX,FCOLPAL	;
 43)   19CA 7B          		    LD A,E	;
 44)   19CB FE 0F       		    CP 15     ;MAX 16 COLORS	;MAX 16 COLORS
 45)   19CD D2 4E 1D    		    JP NC,GRPHERR	;
 46)   19D0 DD 19       		    ADD IX,DE     	;
 47)   19D2 DD 19       		    ADD IX,DE     ;2*DE CAUSE ITS A 2 BYTE ARRAY	;2*DE CAUSE ITS A 2 BYTE ARRAY
 48)   19D4 DD 75 00    		    LD (IX),L    ;SAVE THE NEW COLOR 	;SAVE THE NEW COLOR
 49)   19D7 DD 74 01    		    LD (IX+1),H  	;
 50)   19DA C9          		    RET  	;
 53)   19DB E5          		    PUSH HL	;
 54)   19DC D1          		    POP DE     	;
 55)   19DD 7B          		    LD A,E	;
 56)   19DE D6 80       		    SUB 128        ;CHECK MSB	;CHECK MSB
 57)   19E0 38 11       		    JR C,CFC	;
 58)   19E2 5F          		    LD E,A	;
 59)   19E3 DD 21 69 83 		    LD IX,GR_PARAM4	;
 60)   19E7 DD 6E 00    		    LD L,(IX)	;
 61)   19EA DD 66 01    		    LD H,(IX+1)     	;
 62)   19ED DD 21 37 83 		    LD IX,BCOLPAL  ;BACKCOLOR	;BACKCOLOR
 63)   19F1 18 0E       		    JR SFC	;
 64)   19F3 DD 21 67 83 		CFC: LD IX,GR_PARAM3	;
 65)   19F7 DD 6E 00    		    LD L,(IX)	;
 66)   19FA DD 66 01    		    LD H,(IX+1)     	;
 67)   19FD DD 21 17 83 		    LD IX,FCOLPAL  ;FRONTCOLOR	;FRONTCOLOR
 68)   1A01 7B          		SFC: LD A,E	;
 69)   1A02 FE 10       		    CP 16     ;MAX 16 COLORS	;MAX 16 COLORS
 70)   1A04 D2 4E 1D    		    JP NC,GRPHERR	;
 71)   1A07 DD 19       		    ADD IX,DE	;
 72)   1A09 DD 19       		    ADD IX,DE	;
 73)   1A0B DD 56 00    		    LD D,(IX)	;
 74)   1A0E DD 5E 01    		    LD E,(IX+1)     	;
 75)   1A11 72          		    LD (HL),D  ;SAVE AGAIN 	;SAVE AGAIN
 76)   1A12 23          		    INC HL     	;
 77)   1A13 73          		    LD (HL),E       	;
 78)   1A14 C9          		    RET          	;
 84)   1A15 AF          		    XOR A	;
 85)   1A16 21 63 83    		    LD HL,GR_PARAM1	;
 87)   1A19 F5          		    PUSH AF	;
 88)   1A1A E5          		    PUSH HL	;
 89)   1A1B CD 94 5E    		    CALL EXPRI    ;GET 1ST PARAM	;GET 1ST PARAM
 90)   1A1E D9          		    EXX           ;HL HAS THE PARAM     	;HL HAS THE PARAM
 91)   1A1F D1          		    POP DE        ;GET PARAM ADDRESS	;GET PARAM ADDRESS
 92)   1A20 EB          		    EX DE,HL	;
 93)   1A21 73          		    LD (HL),E	;
 94)   1A22 23          		    INC HL	;
 95)   1A23 72          		    LD (HL),D	;
 96)   1A24 23          		    INC HL        ;PARAM SAVED     	;PARAM SAVED
 97)   1A25 F1          		    POP AF	;
 98)   1A26 3C          		    INC A          	;
 99)   1A27 FE 04       		    CP 4	;
100)   1A29 C8          		    RET Z     	;
101)   1A2A F5          		    PUSH AF	;
102)   1A2B FD 7E 00    		    LD A,(IY)     	;
103)   1A2E FE 0D       		    CP 0x0D       ;FINISHED COMD LINE	;FINISHED COMD LINE
104)   1A30 28 0D       		    JR Z,NOMORE 	;
105)   1A32 FE 3A       		    CP ':'       ;FINISHED COMD LINE	;FINISHED COMD LINE
106)   1A34 28 09       		    JR Z,NOMORE      	;
107)   1A36 FE 2C       		    CP ','        ;CHECK FOR ','	;CHECK FOR ','
108)   1A38 20 05       		    JR NZ,NOMORE     	;
109)   1A3A FD 23       		    INC IY        ;NEXT PARAM	;NEXT PARAM
110)   1A3C F1          		    POP AF    	;
111)   1A3D 18 DA       		    JR GBP_NXT     	;
112)   1A3F F1          		NOMORE:POP AF    	;
113)   1A40 C9          		    RET	;
118)   1A41 01 08 00    		    LD BC,8     ;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD	;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD
119)   1A44 11 57 83    		    LD DE,GR_LASTX3	;
120)   1A47 21 5B 83    		    LD HL,GR_LASTX2	;
121)   1A4A ED B0       		    LDIR     	;
122)   1A4C 2A 63 83    		    LD HL,(GR_PARAM1)	;
123)   1A4F 22 5F 83    		    LD (GR_LASTX),HL  ;SAVE TO LAST              	;SAVE TO LAST
124)   1A52 2A 65 83    		    LD HL,(GR_PARAM2)	;
125)   1A55 22 61 83    		    LD (GR_LASTY),HL  ;SAVE TO LAST     	;SAVE TO LAST
126)   1A58 C9          		  RET	;
130)   1A59 CD 15 1A    		    CALL GETBASICPARAMS	;
131)   1A5C FE 02       		    CP 2	;
132)   1A5E C2 4E 1D    		    JP NZ,GRPHERR          	;
133)   1A61 CD 7B 1B    		BAS_DODRAW: CALL GRPH_SAVECOLORS	;
134)   1A64 FD E5       		    PUSH IY	;
137)   1A66 2A 5F 83    		    LD HL,(GR_LASTX)	;
138)   1A69 E5          		    PUSH HL	;
139)   1A6A 2A 61 83    		    LD HL,(GR_LASTY)	;
140)   1A6D E5          		    PUSH HL	;
141)   1A6E CD 41 1A    		    CALL GRPH_SAVELASTPOS	;
142)   1A71 2A 63 83    		    LD HL,(GR_PARAM1)	;
143)   1A74 E5          		    PUSH HL	;
144)   1A75 2A 65 83    		    LD HL,(GR_PARAM2)	;
145)   1A78 E5          		    PUSH HL 	;
146)   1A79 CD A6 11    		    CALL LCD_DRAWLINE 	;
148)   1A7C FD E1       		    POP IY	;
149)   1A7E CD 92 1B    		    CALL GRPH_RESTORECOLORS	;
150)   1A81 C9          		    RET           ;RETURN TO BASIC  	;RETURN TO BASIC
154)   1A82 CD 15 1A    		@BAS_MOVE: CALL GETBASICPARAMS	;
155)   1A85 FE 02       		         CP 2	;
156)   1A87 C2 4E 1D    		         JP NZ,GRPHERR   	;
158)   1A8A CD 41 1A    		         CALL GRPH_SAVELASTPOS	;
159)   1A8D C9          		         RET	;
165)   1A8E CD 15 1A    		@BAS_POINT:CALL GETBASICPARAMS	;
166)   1A91 FE 02       		          CP 2	;
167)   1A93 C2 4E 1D    		          JP NZ,GRPHERR   	;
170)   1A96 2A 63 83    		          LD HL,(GR_PARAM1)	;
171)   1A99 E5          		          PUSH HL	;
172)   1A9A 2A 65 83    		          LD HL,(GR_PARAM2)	;
173)   1A9D E5          		          PUSH HL           	;
174)   1A9E CD B0 10    		          CALL LCD_READPIXEL	;
178)   1AA1 FD 7E 00    		          LD A,(IY)  	;
179)   1AA4 FE 29       		          CP ')'	;
180)   1AA6 C2 4E 1D    		          JP NZ,GRPHERR 	;
181)   1AA9 FD 23       		          INC IY 	;
184)   1AAB 01 00 00    		          LD BC,0	;
185)   1AAE F3          		          DI	;
186)   1AAF E5          		          PUSH HL	;
187)   1AB0 D9          		          EXX	;
188)   1AB1 E1          		          POP HL	;
189)   1AB2 D9          		          EXX           	;
190)   1AB3 21 00 00    		          LD HL,0	;
191)   1AB6 FB          		          EI	;
192)   1AB7 C9          		          RET	;
198)   1AB8 FE 00       		GRPH_GETGROUP: CP 0	;
200)   1ABA 21 BE 1C    		    LD HL,PLOT00	;
201)   1ABD C8          		    RET Z	;
202)   1ABE FE 0A       		         CP 80.SHR.3	;
203)   1AC0 21 CE 1C    		    LD HL,PLOT80	;
204)   1AC3 C8          		    RET Z	;
205)   1AC4 FE 0C       		         CP 96.SHR.3	;
206)   1AC6 21 DE 1C    		    LD HL,PLOT96	;
207)   1AC9 C8          		    RET Z       	;
208)   1ACA FE 10       		         CP 128.SHR.3	;
209)   1ACC 21 EE 1C    		    LD HL,PLOT128	;
210)   1ACF C8          		    RET Z                   	;
211)   1AD0 FE 12       		        CP 144.SHR.3	;
212)   1AD2 21 FE 1C    		    LD HL,PLOT144	;
213)   1AD5 C8          		    RET Z                   	;
214)   1AD6 FE 13       		         CP 152.SHR.3	;
215)   1AD8 21 0E 1D    		    LD HL,PLOT152	;
216)   1ADB C8          		    RET Z                   	;
217)   1ADC FE 14       		         CP 160.SHR.3	;
218)   1ADE 21 1E 1D    		    LD HL,PLOT160	;
219)   1AE1 C8          		    RET Z                   	;
220)   1AE2 FE 18       		         CP 192.SHR.3	;
221)   1AE4 21 2E 1D    		    LD HL,PLOT192	;
222)   1AE7 C8          		    RET Z                   	;
223)   1AE8 FE 19       		         CP 200.SHR.3	;
224)   1AEA 21 3E 1D    		         LD HL,PLOT200	;
225)   1AED C8          		         RET Z 	;
226)   1AEE 21 00 00    		    LD HL,0	;
227)   1AF1 C9          		    RET                                  	;
230)   1AF2 CD 15 1A    		@BAS_PLOT:CALL GETBASICPARAMS	;
231)   1AF5 FE 03       		         CP 3	;
232)   1AF7 C2 4E 1D    		         JP NZ,GRPHERR   	;
233)   1AFA 3A 63 83    		         LD A,(GR_PARAM1)	;
235)   1AFD 01 04 00    		         LD BC,4	;
236)   1B00 21 65 83    		         LD HL,GR_PARAM2	;
237)   1B03 11 63 83    		         LD DE,GR_PARAM1	;
238)   1B06 ED B0       		         LDIR                    	;
239)   1B08 47          		         LD B,A  ;COMMAND GROUP 5 BITS	;COMMAND GROUP 5 BITS
240)   1B09 CB 38       		         SRL B	;
241)   1B0B CB 38       		         SRL B	;
242)   1B0D CB 38       		         SRL B          	;
243)   1B0F E6 07       		         AND 7  	;
244)   1B11 4F          		         LD C,A  ;SPECIFIC COMMAND IN GROUP	;SPECIFIC COMMAND IN GROUP
245)   1B12 78          		         LD A,B	;
246)   1B13 CD B8 1A    		         CALL GRPH_GETGROUP	;
247)   1B16 7C          		         LD A,H	;
248)   1B17 FE 00       		         CP 0	;
249)   1B19 C8          		         RET Z ;RET IF HL=0 GROUP NOT IMPLEMENTED	;RET IF HL=0 GROUP NOT IMPLEMENTED
250)   1B1A 06 00       		         LD B,0	;
251)   1B1C CB 21       		         SLA C      ;C=C*2 2BYTE ADDRESSES	;C=C*2 2BYTE ADDRESSES
252)   1B1E 09          		         ADD HL,BC  ;C IS 0-7 SPECIFIC COMMD	;C IS 0-7 SPECIFIC COMMD
253)   1B1F 5E          		         LD E,(HL)	;
254)   1B20 23          		         INC HL	;
255)   1B21 56          		         LD D,(HL)	;
256)   1B22 EB          		         EX DE,HL	;
257)   1B23 E9          		         JP (HL)	;
259)   1B24 AF          		GRPH_NOTIMPL:  XOR     A	;
260)   1B25 CD F0 46    		  CALL    EXTERR	;
261)   1B28 4E 4F 54 20 		  DEFM    'NOT IMPLEMENTED'	;
261)   1B2C 49 4D 50 4C 		  DEFM    'NOT IMPLEMENTED'	;
261)   1B30 45 4D 45 4E 		  DEFM    'NOT IMPLEMENTED'	;
261)   1B34 54 45 44    		  DEFM    'NOT IMPLEMENTED'	;
262)   1B37 00          		  DEFB    0     	;
266)   1B38 2A 63 83    		GRPH_CALCREL: LD HL,(GR_PARAM1)	;
267)   1B3B ED 5B 5F 83 		        LD DE,(GR_LASTX)	;
268)   1B3F 19          		        ADD HL,DE	;
269)   1B40 22 63 83    		        LD (GR_PARAM1),HL	;
270)   1B43 2A 65 83    		        LD HL,(GR_PARAM2)	;
271)   1B46 ED 5B 61 83 		        LD DE,(GR_LASTY)	;
272)   1B4A 19          		        ADD HL,DE	;
273)   1B4B 22 65 83    		        LD (GR_PARAM2),HL	;
274)   1B4E C9          		    RET	;
277)   1B4F CD 38 1B    		        CALL GRPH_CALCREL	;
278)   1B52 CD 41 1A    		        CALL GRPH_SAVELASTPOS         	;
279)   1B55 C9          		        RET	;
282)   1B56 CD 38 1B    		        CALL GRPH_CALCREL	;
283)   1B59 CD 61 1A    		        CALL BAS_DODRAW	;
284)   1B5C C9          		        RET	;
287)   1B5D 2A 01 83    		        LD HL,(FCOLOR)	;
288)   1B60 E5          		        PUSH HL	;
289)   1B61 2A 03 83    		        LD HL,(BCOLOR)	;
290)   1B64 22 01 83    		        LD (FCOLOR),HL	;
291)   1B67 E1          		        POP HL	;
292)   1B68 22 03 83    		        LD (BCOLOR),HL	;
293)   1B6B C9          		        RET	;
296)   1B6C 2A 05 83    		        LD HL,(FGRCOL)	;
297)   1B6F E5          		        PUSH HL	;
298)   1B70 2A 07 83    		        LD HL,(BGRCOL)	;
299)   1B73 22 05 83    		        LD (FGRCOL),HL	;
300)   1B76 E1          		        POP HL	;
301)   1B77 22 07 83    		        LD (BGRCOL),HL	;
302)   1B7A C9          		        RET	;
306)   1B7B 01 04 00    		        LD BC,4 ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
307)   1B7E 21 01 83    		        LD HL,FCOLOR	;
308)   1B81 11 09 83    		        LD DE,FCOLTM 	;
309)   1B84 ED B0       		        LDIR	;
310)   1B86 01 04 00    		        LD BC,4 ;2 FGRCOL + 2 BGRCOL	;2 FGRCOL + 2 BGRCOL
311)   1B89 21 05 83    		        LD HL,FGRCOL	;
312)   1B8C 11 01 83    		        LD DE,FCOLOR	;
313)   1B8F ED B0       		        LDIR         	;
314)   1B91 C9          		    RET	;
318)   1B92 01 04 00    		        LD BC,4 ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
319)   1B95 21 09 83    		        LD HL,FCOLTM	;
320)   1B98 11 01 83    		        LD DE,FCOLOR 	;
321)   1B9B ED B0       		        LDIR	;
322)   1B9D C9          		    RET	;
326)   1B9E CD 6C 1B    		        CALL GRPH_SWAPGRCOLS	;
327)   1BA1 CD 38 1B    		        CALL GRPH_CALCREL	;
328)   1BA4 CD 61 1A    		        CALL BAS_DODRAW	;
329)   1BA7 CD 6C 1B    		        CALL GRPH_SWAPGRCOLS	;
330)   1BAA C9          		        RET	;
333)   1BAB CD 6C 1B    		        CALL GRPH_SWAPGRCOLS	;
334)   1BAE CD 61 1A    		        CALL BAS_DODRAW	;
335)   1BB1 CD 6C 1B    		        CALL GRPH_SWAPGRCOLS	;
336)   1BB4 C9          		        RET	;
339)   1BB5 CD 61 1A    		        CALL BAS_DODRAW  ;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT	;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT
340)   1BB8 2A 57 83    		        LD HL,(GR_LASTX3)	;
341)   1BBB 22 63 83    		        LD (GR_PARAM1),HL	;
342)   1BBE 2A 59 83    		        LD HL,(GR_LASTY3)	;
343)   1BC1 22 65 83    		        LD (GR_PARAM2),HL	;
344)   1BC4 CD 61 1A    		        CALL BAS_DODRAW  ;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT	;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT
345)   1BC7 2A 57 83    		        LD HL,(GR_LASTX3)	;
346)   1BCA 22 63 83    		        LD (GR_PARAM1),HL	;
347)   1BCD 2A 59 83    		        LD HL,(GR_LASTY3)	;
348)   1BD0 22 65 83    		        LD (GR_PARAM2),HL	;
349)   1BD3 CD 61 1A    		        CALL BAS_DODRAW  ;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT	;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT
350)   1BD6 01 04 00    		        LD BC,4	;
351)   1BD9 21 57 83    		        LD HL,GR_LASTX3	;
352)   1BDC 11 5F 83    		        LD DE,GR_LASTX	;
353)   1BDF ED B0       		        LDIR               ;SET LASTX,LASTY         	;SET LASTX,LASTY
354)   1BE1 C9          		    RET	;
356)   1BE2 CD 6C 1B    		GRPH_TRIANGLEBC:CALL GRPH_SWAPGRCOLS	;
357)   1BE5 CD B5 1B    		        CALL GRPH_TRIANGLE	;
358)   1BE8 CD 6C 1B    		        CALL GRPH_SWAPGRCOLS	;
359)   1BEB C9          		    RET	;
362)   1BEC 21 63 83    		GRPH_RECT:LD HL,GR_PARAM1	;
363)   1BEF 11 67 83    		        LD DE,GR_PARAM3	;
364)   1BF2 01 04 00    		        LD BC,4	;
365)   1BF5 ED B0       		        LDIR               ;COPY PARAM1,2 TO 3,4         	;COPY PARAM1,2 TO 3,4
366)   1BF7 2A 61 83    		        LD HL,(GR_LASTY)	;
367)   1BFA E5          		        PUSH HL            ;PT1_Y	;PT1_Y
368)   1BFB 2A 5F 83    		        LD HL,(GR_LASTX)	;
369)   1BFE E5          		        PUSH HL            ;PT1_X         	;PT1_X
370)   1BFF 2A 61 83    		        LD HL,(GR_LASTY)         	;
371)   1C02 22 65 83    		        LD (GR_PARAM2),HL         	;
372)   1C05 CD 61 1A    		        CALL BAS_DODRAW    ;PT1_X,PT1_Y TO PT2_X,PT1_Y	;PT1_X,PT1_Y TO PT2_X,PT1_Y
373)   1C08 2A 69 83    		        LD HL,(GR_PARAM4)	;
374)   1C0B 22 65 83    		        LD (GR_PARAM2),HL	;
375)   1C0E CD 61 1A    		        CALL BAS_DODRAW    ;PT2_X,PT1_Y TO PT2_X,PT2_Y	;PT2_X,PT1_Y TO PT2_X,PT2_Y
376)   1C11 E1          		        POP HL             ;PT1_X	;PT1_X
377)   1C12 22 63 83    		        LD (GR_PARAM1),HL         	;
378)   1C15 CD 61 1A    		        CALL BAS_DODRAW    ;PT2_X,PT2_Y TO PT1_X,PT2_Y	;PT2_X,PT2_Y TO PT1_X,PT2_Y
379)   1C18 E1          		        POP HL             ;PT1_Y	;PT1_Y
380)   1C19 22 65 83    		        LD (GR_PARAM2),HL	;
381)   1C1C CD 61 1A    		        CALL BAS_DODRAW    ;PT1_X,PT2_Y TO PT1_X,PT1_Y	;PT1_X,PT2_Y TO PT1_X,PT1_Y
382)   1C1F 01 04 00    		        LD BC,4	;
383)   1C22 21 67 83    		        LD HL,GR_PARAM3	;
384)   1C25 11 5F 83    		        LD DE,GR_LASTX	;
385)   1C28 ED B0       		        LDIR               ;SET LASTX,LASTY	;SET LASTX,LASTY
386)   1C2A C9          		        RET	;
388)   1C2B CD 6C 1B    		GRPH_RECTBC:CALL GRPH_SWAPGRCOLS	;
389)   1C2E CD EC 1B    		        CALL GRPH_RECT	;
390)   1C31 CD 6C 1B    		        CALL GRPH_SWAPGRCOLS	;
391)   1C34 C9          		    RET	;
394)   1C35 CD 7B 1B    		GRPH_CIRCREL: CALL GRPH_SAVECOLORS	;
395)   1C38 2A 63 83    		        LD HL,(GR_PARAM1)	;
396)   1C3B 7C          		        LD A,H	;
397)   1C3C B5          		        OR L	;
398)   1C3D 20 06       		        JR NZ,CIRE_DOIT 	;
399)   1C3F 2A 65 83    		        LD HL,(GR_PARAM2)	;
400)   1C42 7C          		        LD A,H	;
401)   1C43 B5          		        OR L	;
402)   1C44 C8          		        RET Z              ; RETURN IF BOTH PARAMS ARE ZERO         	; RETURN IF BOTH PARAMS ARE ZERO
403)   1C45 ED 5B 5F 83 		CIRE_DOIT:LD DE,(GR_LASTX)	;
404)   1C49 D5          		        PUSH DE	;
405)   1C4A ED 5B 61 83 		        LD DE,(GR_LASTY)	;
406)   1C4E D5          		        PUSH DE 	;
407)   1C4F E5          		        PUSH HL	;
408)   1C50 CD 9D 13    		        CALL LCD_CIRCLE	;
409)   1C53 CD 92 1B    		        CALL GRPH_RESTORECOLORS	;
410)   1C56 C9          		        RET  	;
412)   1C57 CD 6C 1B    		GRPH_CIRCRELBC:CALL GRPH_SWAPGRCOLS	;
413)   1C5A CD 35 1C    		        CALL GRPH_CIRCREL	;
414)   1C5D CD 6C 1B    		        CALL GRPH_SWAPGRCOLS	;
415)   1C60 C9          		        RET	;
421)   1C61 C9          		GRPH_CIRCLE:RET	;
422)   1C62 2A 5F 83    		        LD HL,(GR_LASTX)	;
423)   1C65 ED 5B 63 83 		        LD DE,(GR_PARAM1)	;
424)   1C69 AF          		        XOR A	;
425)   1C6A ED 42       		        SBC HL,BC	;
426)   1C6C 22 67 83    		        LD (GR_PARAM3),HL    ;X2-X1	;X2-X1
427)   1C6F 2A 61 83    		        LD HL,(GR_LASTY)	;
428)   1C72 ED 5B 65 83 		        LD DE,(GR_PARAM2)	;
429)   1C76 AF          		        XOR A	;
430)   1C77 ED 42       		        SBC HL,BC	;
431)   1C79 22 69 83    		        LD (GR_PARAM4),HL    ;Y2-Y1         	;Y2-Y1
433)   1C7C ED 4B 67 83 		        LD BC,(GR_PARAM3)	;
434)   1C80 C5          		        PUSH BC	;
435)   1C81 D1          		        POP DE	;
436)   1C82 CD 9D 26    		        CALL MULT32   ;BCHL RESULT	;BCHL RESULT
437)   1C85 D9          		        EXX	;
438)   1C86 C5          		        PUSH BC	;
439)   1C87 D1          		        POP DE	;
440)   1C88 D9          		        EXX	;
441)   1C89 E5          		        PUSH HL       ;DE LOW         	;DE LOW
442)   1C8A ED 4B 69 83 		        LD BC,(GR_PARAM4)	;
443)   1C8E C5          		        PUSH BC	;
444)   1C8F D1          		        POP DE	;
445)   1C90 CD 9D 26    		        CALL MULT32   ;BCHL RESULT	;BCHL RESULT
446)   1C93 D9          		        EXX         	;
447)   1C94 C5          		        PUSH BC	;
448)   1C95 E1          		        POP HL	;
449)   1C96 D9          		        EXX	;
450)   1C97 D1          		        POP DE	;
452)   1C98 CD B8 26    		        CALL ADD32	;
456)   1C9B C9          		        RET	;
458)   1C9C CD 6C 1B    		GRPH_CIRCLEBC:CALL GRPH_SWAPGRCOLS	;
459)   1C9F CD 61 1C    		        CALL GRPH_CIRCLE	;
460)   1CA2 CD 6C 1B    		        CALL GRPH_SWAPGRCOLS	;
461)   1CA5 C9          		        RET  	;
465)   1CA6 CD 6C 1B    		GRPH_FILL: CALL GRPH_SWAPGRCOLS 	;
466)   1CA9 CD 7B 1B    		        CALL GRPH_SAVECOLORS	;
467)   1CAC 2A 63 83    		        LD HL,(GR_PARAM1)	;
468)   1CAF E5          		        PUSH HL	;
469)   1CB0 2A 65 83    		        LD HL,(GR_PARAM2)	;
470)   1CB3 E5          		        PUSH HL	;
471)   1CB4 CD 21 15    		        CALL LCD_FILL	;
472)   1CB7 CD 92 1B    		        CALL GRPH_RESTORECOLORS	;
473)   1CBA CD 6C 1B    		        CALL GRPH_SWAPGRCOLS	;
474)   1CBD C9          		        RET         	;
476)   1CBE 4F 1B       		PLOT00: DW GRPH_MOVEREL	;
477)   1CC0 56 1B       		    DW GRPH_LINEREL	;
478)   1CC2 24 1B       		    DW GRPH_NOTIMPL	;
479)   1CC4 9E 1B       		    DW GRPH_LINERELBC	;
480)   1CC6 41 1A       		    DW GRPH_SAVELASTPOS	;
481)   1CC8 61 1A       		    DW BAS_DODRAW	;
482)   1CCA 24 1B       		    DW GRPH_NOTIMPL     	;
483)   1CCC AB 1B       		    DW GRPH_DRAWBC	;
485)   1CCE 24 1B       		PLOT80: DW GRPH_NOTIMPL	;
486)   1CD0 B5 1B       		    DW GRPH_TRIANGLE	;
487)   1CD2 24 1B       		    DW GRPH_NOTIMPL	;
488)   1CD4 E2 1B       		    DW GRPH_TRIANGLEBC	;
489)   1CD6 24 1B       		    DW GRPH_NOTIMPL	;
490)   1CD8 B5 1B       		    DW GRPH_TRIANGLE	;
491)   1CDA 24 1B       		    DW GRPH_NOTIMPL     	;
492)   1CDC E2 1B       		    DW GRPH_TRIANGLEBC	;
494)   1CDE 24 1B       		PLOT96: DW GRPH_NOTIMPL	;
495)   1CE0 EC 1B       		    DW GRPH_RECT	;
496)   1CE2 24 1B       		    DW GRPH_NOTIMPL	;
497)   1CE4 2B 1C       		    DW GRPH_RECTBC	;
498)   1CE6 24 1B       		    DW GRPH_NOTIMPL	;
499)   1CE8 EC 1B       		    DW GRPH_RECT	;
500)   1CEA 24 1B       		    DW GRPH_NOTIMPL     	;
501)   1CEC 2B 1C       		    DW GRPH_RECTBC	;
503)   1CEE 24 1B       		PLOT128: DW GRPH_NOTIMPL	;
504)   1CF0 A6 1C       		    DW GRPH_FILL	;
505)   1CF2 24 1B       		    DW GRPH_NOTIMPL	;
506)   1CF4 24 1B       		    DW GRPH_NOTIMPL	;
507)   1CF6 24 1B       		    DW GRPH_NOTIMPL	;
508)   1CF8 24 1B       		    DW GRPH_NOTIMPL	;
509)   1CFA 24 1B       		    DW GRPH_NOTIMPL     	;
510)   1CFC 24 1B       		    DW GRPH_NOTIMPL	;
512)   1CFE 35 1C       		PLOT144: DW GRPH_CIRCREL	;
513)   1D00 35 1C       		    DW GRPH_CIRCREL	;
514)   1D02 24 1B       		    DW GRPH_NOTIMPL	;
515)   1D04 57 1C       		    DW GRPH_CIRCRELBC	;
516)   1D06 61 1C       		    DW GRPH_CIRCLE	;
517)   1D08 61 1C       		    DW GRPH_CIRCLE	;
518)   1D0A 24 1B       		    DW GRPH_NOTIMPL     	;
519)   1D0C 9C 1C       		    DW GRPH_CIRCLEBC	;
521)   1D0E 24 1B       		PLOT152: DW GRPH_NOTIMPL	;
522)   1D10 24 1B       		    DW GRPH_NOTIMPL	;
523)   1D12 24 1B       		    DW GRPH_NOTIMPL	;
524)   1D14 24 1B       		    DW GRPH_NOTIMPL	;
525)   1D16 24 1B       		    DW GRPH_NOTIMPL	;
526)   1D18 24 1B       		    DW GRPH_NOTIMPL	;
527)   1D1A 24 1B       		    DW GRPH_NOTIMPL     	;
528)   1D1C 24 1B       		    DW GRPH_NOTIMPL	;
530)   1D1E 24 1B       		PLOT160: DW GRPH_NOTIMPL	;
531)   1D20 24 1B       		    DW GRPH_NOTIMPL	;
532)   1D22 24 1B       		    DW GRPH_NOTIMPL	;
533)   1D24 24 1B       		    DW GRPH_NOTIMPL	;
534)   1D26 24 1B       		    DW GRPH_NOTIMPL	;
535)   1D28 24 1B       		    DW GRPH_NOTIMPL	;
536)   1D2A 24 1B       		    DW GRPH_NOTIMPL     	;
537)   1D2C 24 1B       		    DW GRPH_NOTIMPL	;
539)   1D2E 24 1B       		PLOT192: DW GRPH_NOTIMPL	;
540)   1D30 24 1B       		    DW GRPH_NOTIMPL	;
541)   1D32 24 1B       		    DW GRPH_NOTIMPL	;
542)   1D34 24 1B       		    DW GRPH_NOTIMPL	;
543)   1D36 24 1B       		    DW GRPH_NOTIMPL	;
544)   1D38 24 1B       		    DW GRPH_NOTIMPL	;
545)   1D3A 24 1B       		    DW GRPH_NOTIMPL     	;
546)   1D3C 24 1B       		    DW GRPH_NOTIMPL	;
548)   1D3E 24 1B       		PLOT200: DW GRPH_NOTIMPL	;
549)   1D40 24 1B       		    DW GRPH_NOTIMPL	;
550)   1D42 24 1B       		    DW GRPH_NOTIMPL	;
551)   1D44 24 1B       		    DW GRPH_NOTIMPL	;
552)   1D46 24 1B       		    DW GRPH_NOTIMPL	;
553)   1D48 24 1B       		    DW GRPH_NOTIMPL	;
554)   1D4A 24 1B       		    DW GRPH_NOTIMPL     	;
555)   1D4C 24 1B       		    DW GRPH_NOTIMPL	;
558)   1D4E AF          		  XOR     A	;
559)   1D4F CD F0 46    		  CALL    EXTERR	;
560)   1D52 70 61 72 61 		  DEFM    'param error'	;
560)   1D56 6D 20 65 72 		  DEFM    'param error'	;
560)   1D5A 72 6F 72    		  DEFM    'param error'	;
561)   1D5D 00          		  DEFB    0     	;
  4)   1D5E 	            		PORT_TAPE      EQU DEVTAP      ; SAVE/LOAD PORT 1 BYTE=0xDD 2ND BYTE=COMMAND 	; SAVE/LOAD PORT 1 BYTE=0xDD 2ND BYTE=COMMAND
 17)   1D5E 3E DD       		           LD A,0xDD	;
 18)   1D60 CD FE 05    		           CALL RS_TX	;
 19)   1D63 3E 0A       		           LD A,COMMD_SAVE	;
 20)   1D65 CD FE 05    		           CALL RS_TX	;
 22)   1D68 7E          		OSSV_NXT:  LD A,(HL)	;
 23)   1D69 CD FE 05    		           CALL RS_TX	;
 24)   1D6C 23          		           INC HL	;
 25)   1D6D FE 0D       		           CP 0x0D	;
 26)   1D6F 20 F7       		           JR NZ,OSSV_NXT	;
 28)   1D71 79          		           LD A,C	;
 29)   1D72 CD FE 05    		           CALL RS_TX	;
 30)   1D75 78          		           LD A,B	;
 31)   1D76 CD FE 05    		           CALL RS_TX	;
 33)   1D79 2A DC 82    		           LD HL,(PAGE)	;
 34)   1D7C 7E          		OSSV_NXT2: LD A,(HL)	;
 35)   1D7D CD FE 05    		           CALL RS_TX	;
 36)   1D80 23          		           INC HL	;
 37)   1D81 0B          		           DEC BC	;
 38)   1D82 78          		           LD A,B	;
 39)   1D83 B1          		           OR C	;
 40)   1D84 20 F6       		           JR NZ,OSSV_NXT2                        	;
 41)   1D86 C9          		           RET          	;
 44)   1D87 11 B9 83    		@MYOS_OSLOAD:LD DE,STRGBUFF	;
 45)   1D8A 7E          		OLNXT:      LD A,(HL)	;
 46)   1D8B FE 0D       		            CP 13      ;	;
 47)   1D8D 20 01       		            JR NZ,OLCONT	;
 48)   1D8F AF          		            XOR A	;
 49)   1D90 12          		OLCONT:     LD (DE),a	;
 50)   1D91 23          		            INC HL	;
 51)   1D92 13          		            INC DE	;
 52)   1D93 FE 00       		            CP 0 	;
 53)   1D95 20 F3       		            JR NZ,OLNXT	;
 54)   1D97 CD 1D 0A    		            CALL STRG_OPNFILE ;FID HAS THE FILE ID ALSO ON A             	;FID HAS THE FILE ID ALSO ON A
 55)   1D9A 2A DC 82    		            LD HL,(PAGE)	;
 56)   1D9D EB          		            EX DE,HL	;
 57)   1D9E 01 00 00    		            LD BC,0           ;ZERO MEANS LOAD ALL	;ZERO MEANS LOAD ALL
 58)   1DA1 CD 46 0A    		            CALL STRG_BLKREAD ;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED	;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED
 59)   1DA4 FE C8       		            CP FCMDOK	;
 60)   1DA6 20 0E       		            JR NZ,LDERR	;
 61)   1DA8 3A E5 83    		            LD A,(FID)	;
 62)   1DAB CD 37 0A    		            CALL STRG_CLSFILE	;
 63)   1DAE 21 DE 82    		            LD HL,TOP ;SAVE TOP OF BASIC 	;SAVE TOP OF BASIC
 64)   1DB1 73          		            LD (HL),E	;
 65)   1DB2 23          		            INC HL	;
 66)   1DB3 72          		            LD (HL),D            	;
 67)   1DB4 37          		            SCF       ;SET C = NO ERROR            	;SET C = NO ERROR
 68)   1DB5 C9          		            RET                           	;
 69)   1DB6 FE CA       		LDERR:     CP FNOTFND	;
 70)   1DB8 28 11       		            JR Z,FLNOTF	;
 71)   1DBA CD F0 46    		            CALL    EXTERR	;
 72)   1DBD 45 72 72 6F 		          DEFM    'Error Loading'	;
 72)   1DC1 72 20 4C 6F 		          DEFM    'Error Loading'	;
 72)   1DC5 61 64 69 6E 		          DEFM    'Error Loading'	;
 72)   1DC9 67          		          DEFM    'Error Loading'	;
 73)   1DCA 00          		          DEFB    0   	;
 74)   1DCB CD F0 46    		FLNOTF:     CALL    EXTERR	;
 75)   1DCE 57 72 6F 6E 		          DEFM    'Wrong Filename'	;
 75)   1DD2 67 20 46 69 		          DEFM    'Wrong Filename'	;
 75)   1DD6 6C 65 6E 61 		          DEFM    'Wrong Filename'	;
 75)   1DDA 6D 65       		          DEFM    'Wrong Filename'	;
 76)   1DDC 00          		          DEFB    0   	;
 41)   1DDD C3 F0 16    		@MYOS_CLRSCN:          JP LCD_CLRSCR        ; CLRSCN: clears the screen.	; CLRSCN: clears the screen.
 44)   1DE0 7D          		                LD A,L	;
 45)   1DE1 32 A7 83    		                LD (TIMECTR),A	;
 46)   1DE4 7C          		     LD A,H	;
 47)   1DE5 32 A8 83    		        LD (TIMECTR+1),A	;
 48)   1DE8 7B          		        LD A,E	;
 49)   1DE9 32 A9 83    		        LD (TIMECTR+2),A	;
 50)   1DEC 7A          		        LD A,D	;
 51)   1DED 32 AA 83    		        LD (TIMECTR+3),A         	;
 52)   1DF0 C9          		        RET	;
 56)   1DF1 3A A7 83    		         LD A,(TIMECTR)	;
 57)   1DF4 6F          		         LD L,A	;
 58)   1DF5 3A A8 83    		        LD A,(TIMECTR+1)	;
 59)   1DF8 67          		        LD H,A	;
 60)   1DF9 3A A9 83    		        LD A,(TIMECTR+2)	;
 61)   1DFC 5F          		        LD E,A	;
 62)   1DFD 3A AA 83    		        LD A,(TIMECTR+3)	;
 63)   1E00 57          		        LD D,A	;
 64)   1E01 C9          		       RET         	;
 66)   1E02 63          		          LD H,E	;
 67)   1E03 E5          		          PUSH HL	;
 68)   1E04 CD A9 16    		          CALL LCD_RMVCURS	;
 69)   1E07 E1          		          POP HL	;
 70)   1E08 7C          		          LD A,H	;
 71)   1E09 32 0D 83    		          LD (CURSORX),A	;
 72)   1E0C 7D          		          LD A,L	;
 73)   1E0D 32 0E 83    		          LD (CURSORY),A	;
 74)   1E10 CD AE 16    		          CALL LCD_PRNCURS                      	;
 75)   1E13 C9          		          RET	;
 77)   1E14 16 00       		          LD D,0	;
 78)   1E16 3A 0D 83    		          LD A,(CURSORX)	;
 79)   1E19 5F          		          LD E,A	;
 80)   1E1A 26 00       		          LD H,0	;
 82)   1E1C CD FF 15    		          CALL LCD_CALCLINE ;GETS CURSORY WITH SCROLL	;GETS CURSORY WITH SCROLL
 83)   1E1F 6F          		       LD L,A	;
 84)   1E20 C9          		       RET	;
 85)   1E21 06 50       		KEYGET: LD      B,80 ;SCREEN WIDTH IN CHARS      	;SCREEN WIDTH IN CHARS
 87)   1E23 E5          		         PUSH    HL	;
 88)   1E24 ED 62       		          SBC     HL,HL           ;HL=0	;HL=0
 89)   1E26 CD 0E 20    		          CALL    MYOS_OSKEY	;
 90)   1E29 E1          		          POP     HL	;
 91)   1E2A D8          		          RET     C	;
 92)   1E2B 18 F6       		          JR      MYOS_OSRDCH           	;
 93)   1E2D C9          		       RET  	;
 95)   1E2E F5          		       PUSH    AF	;
 96)   1E2F D5          		          PUSH    DE	;
 97)   1E30 E5          		          PUSH    HL	;
 98)   1E31 DD E5       		          PUSH    IX                      	;
 99)   1E33 5F          		          LD      E,A	;
100)   1E34 CD 2D 20    		          CALL    ESCTEST	;
103)   1E37 7B          		          LD A,E	;
104)   1E38 FE 20       		          CP 32	;
105)   1E3A 38 0D       		          JR C,CTRCODE	;
106)   1E3C FE 7F       		          CP 127   ;BACKSPACE 	;BACKSPACE
107)   1E3E C2 C2 1F    		          JP NZ,PRINTIT	;
108)   1E41 3E 08       		          LD A,8            ;DO A BACKSPACE	;DO A BACKSPACE
109)   1E43 CD 2B 15    		          CALL LCD_PRINTCHAR	;
110)   1E46 C3 C5 1F    		          JP OSWREXIT	;
111)   1E49 FE 04       		CTRCODE:  CP 4 ;WRITE TEXT AT TEXT POS	;WRITE TEXT AT TEXT POS
112)   1E4B 20 06       		          JR NZ,CC1	;
113)   1E4D 32 16 83    		          LD (VDUMODE),A           	;
114)   1E50 C3 C5 1F    		          JP OSWREXIT	;
115)   1E53 FE 05       		CC1:      CP 5 ;WRITE TEXT AT GRAPH POS    	;WRITE TEXT AT GRAPH POS
116)   1E55 20 06       		          JR NZ,CC2	;
117)   1E57 32 16 83    		          LD (VDUMODE),A	;
118)   1E5A C3 C5 1F    		          JP OSWREXIT	;
119)   1E5D FE 06       		CC2:      CP 6 ;ENABLE OUTPUT TO SCREEN	;ENABLE OUTPUT TO SCREEN
120)   1E5F 20 03       		          JR NZ,CC3	;
121)   1E61 C3 C5 1F    		          JP OSWREXIT	;
122)   1E64 FE 07       		CC3:      CP 7 ;BEEP	;BEEP
123)   1E66 20 03       		          JR NZ,CC4	;
124)   1E68 C3 C5 1F    		          JP OSWREXIT	;
125)   1E6B FE 08       		CC4:      CP 8 ;MOVE TEXT CURSOR BACK A CHAR	;MOVE TEXT CURSOR BACK A CHAR
126)   1E6D 20 03       		          JR NZ,CC5	;
127)   1E6F C3 C2 1F    		          JP PRINTIT	;
134)   1E72 FE 09       		CC5:      CP 9 ;MOVE TEXT CURSOR FORWARD A CHAR	;MOVE TEXT CURSOR FORWARD A CHAR
135)   1E74 20 0F       		          JR NZ,CC6	;
136)   1E76 3A 0D 83    		          LD A,(CURSORX)	;
137)   1E79 3C          		          INC A	;
138)   1E7A FE 50       		          CP 80	;
139)   1E7C D2 C5 1F    		          JP NC,OSWREXIT	;
140)   1E7F 32 0D 83    		          LD (CURSORX),A         	;
141)   1E82 C3 C5 1F    		          JP OSWREXIT   	;
142)   1E85 FE 0A       		CC6:      CP 10 ;MOVE TEXT DOWN LF	;MOVE TEXT DOWN LF
143)   1E87 CA C2 1F    		          JP Z,PRINTIT	;
144)   1E8A FE 0B       		CC7:      CP 11 ;MOVE TEXT UP	;MOVE TEXT UP
145)   1E8C 20 0F       		          JR NZ,CC8	;
146)   1E8E 3A 0E 83    		          LD A,(CURSORY)	;
147)   1E91 3D          		          DEC A	;
148)   1E92 FE FF       		          CP 0XFF	;
149)   1E94 CA C5 1F    		          JP Z,OSWREXIT	;
150)   1E97 32 0E 83    		          LD (CURSORY),A           	;
151)   1E9A C3 C5 1F    		          JP OSWREXIT   	;
152)   1E9D FE 0C       		CC8:      CP 12 ; CLS	; CLS
153)   1E9F 20 06       		          JR NZ,CC9	;
154)   1EA1 CD F0 16    		          CALL LCD_CLRSCR	;
155)   1EA4 C3 C5 1F    		          JP OSWREXIT   	;
156)   1EA7 FE 0D       		CC9:      CP 13 ;GOTO START OF LINE CR	;GOTO START OF LINE CR
157)   1EA9 CA C2 1F    		          JP Z,PRINTIT	;
158)   1EAC FE 0E       		CC10:     CP 14 ;ENABLE THE AUTOPAGING MODE	;ENABLE THE AUTOPAGING MODE
159)   1EAE 20 03       		          JR NZ,CC11	;
160)   1EB0 C3 C5 1F    		          JP OSWREXIT   	;
161)   1EB3 FE 0F       		CC11:     CP 15 ;DISABLE THE AUTOPAGING MODE	;DISABLE THE AUTOPAGING MODE
162)   1EB5 20 03       		          JR NZ,CC12	;
163)   1EB7 C3 C5 1F    		          JP OSWREXIT   	;
164)   1EBA FE 10       		CC12:     CP 16 ;CLG	;CLG
165)   1EBC 20 06       		          JR NZ,CC13	;
166)   1EBE CD ED 23    		          CALL MYOS_CLG       	;
167)   1EC1 C3 C5 1F    		          JP OSWREXIT   	;
168)   1EC4 FE 11       		CC13:     CP 17 ; SAME AS COLOUR	; SAME AS COLOUR
169)   1EC6 20 09       		          JR NZ,CC14	;
171)   1EC8 FD 23       		          INC IY ;SKIP ','	;SKIP ','
172)   1ECA CD 94 5E    		          CALL    EXPRI	;
173)   1ECD D9          		          EXX ;l has the param  color	;l has the param  color
174)   1ECE C3 C5 1F    		          JP OSWREXIT   	;
175)   1ED1 FE 12       		CC14:     CP 18 ;SAME AS GCOL	;SAME AS GCOL
176)   1ED3 20 0F       		          JR NZ,CC15	;
177)   1ED5 FD 23       		          INC IY ;SKIP ','	;SKIP ','
178)   1ED7 CD 94 5E    		          CALL    EXPRI	;
179)   1EDA D9          		          EXX ;l has the param  mode	;l has the param  mode
180)   1EDB FD 23       		          INC IY ;SKIP ','	;SKIP ','
181)   1EDD CD 94 5E    		          CALL    EXPRI	;
182)   1EE0 D9          		          EXX ;l has the param  color                                        	;l has the param  color
184)   1EE1 C3 C5 1F    		          JP OSWREXIT   	;
185)   1EE4 FE 13       		CC15:     CP 19 ;SELECT A COLOR PALLETTE???	;SELECT A COLOR PALLETTE???
186)   1EE6 20 0F       		          JR NZ,CC16	;
188)   1EE8 06 05       		          LD B,5	;
189)   1EEA C5          		CC15AGN:  PUSH BC	;
190)   1EEB FD 23       		          INC IY ;SKIP ','	;SKIP ','
191)   1EED CD 94 5E    		          CALL    EXPRI	;
192)   1EF0 D9          		          EXX ;l has the param	;l has the param
193)   1EF1 C1          		          POP BC	;
194)   1EF2 10 F6       		          DJNZ CC15AGN           	;
195)   1EF4 C3 C5 1F    		          JP OSWREXIT   	;
196)   1EF7 FE 14       		CC16:     CP 20 ;RESTORE THE DEFAULT LOGICAL COLORS	;RESTORE THE DEFAULT LOGICAL COLORS
197)   1EF9 20 03       		          JR NZ,CC17           	;
199)   1EFB C3 C5 1F    		          JP OSWREXIT   	;
200)   1EFE FE 15       		CC17:     CP 21 ;NO OUTPUT TO SCREEN	;NO OUTPUT TO SCREEN
201)   1F00 20 03       		          JR NZ,CC18	;
203)   1F02 C3 C5 1F    		          JP OSWREXIT   	;
204)   1F05 FE 16       		CC18:     CP 22 ;LIKE MODE	;LIKE MODE
205)   1F07 20 09       		          JR NZ,CC19	;
206)   1F09 FD 23       		          INC IY ;SKIP ','	;SKIP ','
207)   1F0B CD 94 5E    		          CALL    EXPRI	;
208)   1F0E D9          		          EXX ;l has the param           	;l has the param
209)   1F0F C3 C5 1F    		          JP OSWREXIT   	;
210)   1F12 FE 17       		CC19:     CP 23 ;Program characters and control the cursor.???	;Program characters and control the cursor.???
211)   1F14 20 27       		          JR NZ,CC20	;
212)   1F16 06 09       		          LD B,9   ;9 PARAMS CHAR_NO +8 ROWS OF A CHAR	;9 PARAMS CHAR_NO +8 ROWS OF A CHAR
213)   1F18 FD 7E 00    		          LD A,(IY)	;
214)   1F1B FD 23       		          INC IY ;SKIP ',' OR ';'	;SKIP ',' OR ';'
215)   1F1D FE 3B       		          CP ';'	;
216)   1F1F 20 01       		          JR NZ,CC19AGN	;
217)   1F21 05          		          DEC B ; IF ; THE DELIMETER THEN 2 BYTES AT START   	; IF ; THE DELIMETER THEN 2 BYTES AT START
218)   1F22 C5          		CC19AGN:  PUSH BC	;
219)   1F23 CD 94 5E    		          CALL    EXPRI	;
220)   1F26 D9          		          EXX ;l has the param           	;l has the param
221)   1F27 FD 7E 00    		     LD A,(IY)	;
222)   1F2A FE 2C       		     CP ','	;
223)   1F2C 28 07       		     JR Z,CC19NXT0              	;
224)   1F2E FE 3B       		          CP ';'           	;
225)   1F30 20 05       		          JR NZ,CC19NXT	;
226)   1F32 C1          		          POP BC	;
227)   1F33 05          		          DEC B	;
228)   1F34 C5          		          PUSH BC	;
229)   1F35 FD 23       		CC19NXT0: INC IY ;SKIP ','           	;SKIP ','
230)   1F37 C1          		CC19NXT:  POP BC	;
231)   1F38 10 E8       		          DJNZ CC19AGN                     	;
232)   1F3A C3 C5 1F    		          JP OSWREXIT   	;
233)   1F3D FE 18       		CC20:     CP 24 ;Define a graphics window	;Define a graphics window
234)   1F3F 20 11       		          JR NZ,CC21	;
235)   1F41 FD 23       		          INC IY ;SKIP ','	;SKIP ','
236)   1F43 06 04       		          LD B,4   ;4 PARAMS TWO CORNERS OF A RECT	;4 PARAMS TWO CORNERS OF A RECT
237)   1F45 C5          		CC20AGN:  PUSH BC           	;
238)   1F46 CD 94 5E    		          CALL    EXPRI	;
239)   1F49 D9          		          EXX ;HL has the param	;HL has the param
240)   1F4A FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
241)   1F4C C1          		          POP BC	;
242)   1F4D 10 F6       		          DJNZ CC20AGN                                	;
243)   1F4F C3 C5 1F    		          JP OSWREXIT   	;
244)   1F52 FE 19       		CC21:     CP 25 ;Identical to PLOT.	;Identical to PLOT.
245)   1F54 20 17       		          JR NZ,CC22	;
246)   1F56 FD 23       		          INC IY ;SKIP ','	;SKIP ','
247)   1F58 CD 94 5E    		          CALL    EXPRI	;
248)   1F5B D9          		          EXX ;L has the param PLOTMODE	;L has the param PLOTMODE
249)   1F5C FD 23       		          INC IY ;SKIP ','	;SKIP ','
250)   1F5E CD 94 5E    		          CALL    EXPRI	;
251)   1F61 D9          		          EXX ;HL has the param X	;HL has the param X
252)   1F62 FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
253)   1F64 CD 94 5E    		          CALL    EXPRI	;
254)   1F67 D9          		          EXX ;HL has the param Y	;HL has the param Y
255)   1F68 FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
258)   1F6A C3 C5 1F    		          JP OSWREXIT   	;
259)   1F6D FE 1A       		CC22:     CP 26 ;Restore the default text and graphics windows.	;Restore the default text and graphics windows.
260)   1F6F 20 02       		          JR NZ,CC23	;
261)   1F71 18 52       		          JR OSWREXIT   	;
262)   1F73 FE 1B       		CC23:     CP 27 ;Send the next character to the screen.	;Send the next character to the screen.
263)   1F75 20 07       		          JR NZ,CC24	;
264)   1F77 CD 94 5E    		          CALL    EXPRI	;
265)   1F7A D9          		          EXX ;	;
266)   1F7B 7D          		          LD A,L	;
267)   1F7C 18 44       		          JR PRINTIT           	;
268)   1F7E FE 1C       		CC24:     CP 28 ;Define a text window.	;Define a text window.
269)   1F80 20 0E       		          JR NZ,CC25	;
270)   1F82 06 04       		          LD B,4   ;4 PARAMS UPPERLEFT AND LOWERRIGHT	;4 PARAMS UPPERLEFT AND LOWERRIGHT
271)   1F84 C5          		CC24AGN:  PUSH BC	;
272)   1F85 FD 23       		     INC IY ;SKIP ','	;SKIP ','
273)   1F87 CD 94 5E    		          CALL    EXPRI	;
274)   1F8A D9          		          EXX ;l has the param	;l has the param
275)   1F8B C1          		          POP BC           	;
276)   1F8C 10 F6       		          DJNZ CC24AGN                                	;
277)   1F8E 18 35       		          JR OSWREXIT   	;
278)   1F90 FE 1D       		CC25:     CP 29 ;Set the graphics origin.	;Set the graphics origin.
279)   1F92 20 10       		          JR NZ,CC26	;
280)   1F94 FD 23       		          INC IY ;SKIP ','	;SKIP ','
281)   1F96 CD 94 5E    		          CALL    EXPRI	;
282)   1F99 D9          		          EXX ;HL has the param X	;HL has the param X
283)   1F9A FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
284)   1F9C CD 94 5E    		          CALL    EXPRI	;
285)   1F9F D9          		          EXX ;HL has the param Y	;HL has the param Y
286)   1FA0 FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
288)   1FA2 18 21       		          JR OSWREXIT   	;
289)   1FA4 FE 1E       		CC26:     CP 30 ;Home the text cursor to the top left of the screen.	;Home the text cursor to the top left of the screen.
290)   1FA6 20 08       		          JR NZ,CC27	;
291)   1FA8 21 00 00    		          LD HL,0	;
292)   1FAB 22 0D 83    		          LD (CURSORX),HL	;
293)   1FAE 18 15       		          JR OSWREXIT   	;
294)   1FB0 FE 1F       		CC27:     CP 31 ;Move the text cursor - identical to TAB(x,y).	;Move the text cursor - identical to TAB(x,y).
295)   1FB2 20 11       		          JR NZ,OSWREXIT   	;
296)   1FB4 FD 23       		          INC IY ;SKIP ','	;SKIP ','
297)   1FB6 CD 94 5E    		          CALL    EXPRI	;
298)   1FB9 D9          		          EXX ;l has the param X	;l has the param X
299)   1FBA FD 23       		          INC IY ;SKIP ','	;SKIP ','
300)   1FBC CD 94 5E    		          CALL    EXPRI	;
301)   1FBF D9          		          EXX ;l has the param Y	;l has the param Y
303)   1FC0 18 03       		          JR OSWREXIT   	;
306)   1FC2 CD CB 1F    		PRINTIT:  CALL    EDPUT	;
307)   1FC5 DD E1       		OSWREXIT: POP     IX	;
308)   1FC7 E1          		          POP     HL	;
309)   1FC8 D1          		          POP     DE	;
310)   1FC9 F1          		          POP     AF	;
311)   1FCA C9          		          RET	;
316)   1FCB 3A 00 83    		EDPUT: LD      A,(FLAGS)	;
317)   1FCE CB 5F       		       BIT     3,A	;
318)   1FD0 28 10       		       JR      Z,WRCH	;
319)   1FD2 7B          		       LD      A,E	;
320)   1FD3 FE 20       		       CP      ' '	;
321)   1FD5 D8          		       RET     C	;
322)   1FD6 2A 12 83    		       LD      HL,(EDPTR)	;
323)   1FD9 73          		       LD      (HL),E	;
324)   1FDA 2C          		       INC     L	;
325)   1FDB C8          		       RET     Z	;
326)   1FDC 22 12 83    		       LD      (EDPTR),HL	;
327)   1FDF C9          		       RET           	;
330)   1FE0 1E 3E       		          LD E,'>'        	;
331)   1FE2 7B          		WRCH:     LD A,E	;
333)   1FE3 F5          		          PUSH AF	;
334)   1FE4 C5          		          PUSH BC	;
335)   1FE5 D5          		          PUSH DE	;
336)   1FE6 E5          		 PUSH HL	;
337)   1FE7 DD E5       		 PUSH IX	;
338)   1FE9 FD E5       		 PUSH IY     	;
339)   1FEB F5          		          PUSH AF	;
340)   1FEC C5          		          PUSH BC	;
341)   1FED D5          		          PUSH DE	;
342)   1FEE E5          		     PUSH HL	;
343)   1FEF CD A9 16    		     CALL LCD_RMVCURS	;
344)   1FF2 E1          		          POP HL	;
345)   1FF3 D1          		          POP DE	;
346)   1FF4 C1          		          POP BC	;
347)   1FF5 F1          		          POP AF	;
348)   1FF6 CD 2B 15    		          CALL LCD_PRINTCHAR	;
349)   1FF9 CD AE 16    		          CALL LCD_PRNCURS	;
351)   1FFC FD E1       		          POP IY	;
352)   1FFE DD E1       		          POP IX	;
353)   2000 E1          		          POP HL	;
354)   2001 D1          		          POP DE	;
355)   2002 C1          		          POP BC	;
356)   2003 F1          		          POP AF	;
357)   2004 C9          		       RET 	;
359)   2005 3A 00 83    		TOGGLE: LD     A,(FLAGS)	;
360)   2008 EE 04       		       XOR     00000100B	;
361)   200A 32 00 83    		       LD      (FLAGS),A	;
362)   200D C9          		       RET	;
371)   200E E5          		@MYOS_OSKEY: PUSH   HL	;
372)   200F 21 15 83    		           LD      HL,INKEY	;
373)   2012 7E          		           LD      A,(HL)	;
374)   2013 36 00       		           LD      (HL),0	;
375)   2015 E1          		           POP     HL	;
376)   2016 B7          		           OR      A	;
377)   2017 37          		           SCF	;
378)   2018 C0          		           RET     NZ  	;
380)   2019 CD 54 24    		           CALL    GETKEYNW	;
382)   201C D0          		           RET     NC	;
383)   201D FE 1B       		           CP      ESC	;
384)   201F 37          		           SCF	;
385)   2020 C0          		           RET     NZ                        	;
386)   2021 E5          		ESCSET:  PUSH    HL	;
387)   2022 21 00 83    		         LD      HL,FLAGS	;
388)   2025 CB 76       		         BIT     6,(HL)          ; ESC DISABLED?	; ESC DISABLED?
389)   2027 20 02       		         JR      NZ,ESCDIS	;
390)   2029 CB FE       		         SET     7,(HL)          ; SET ESCAPE FLAG	; SET ESCAPE FLAG
391)   202B E1          		ESCDIS:  POP     HL	;
392)   202C C9          		         RET 	;
393)   202D CD 26 06    		ESCTEST: CALL RS_RXNW	;
394)   2030 B7          		        OR A	;
395)   2031 C8          		        RET Z	;
396)   2032 FE 1B       		        CP 0x1B   ; ESC 	; ESC
397)   2034 28 EB       		        JR Z,ESCSET	;
398)   2036 32 15 83    		        LD (INKEY),A	;
399)   2039 C9          		         RET	;
401)   203A CD 2D 20    		@MYOS_TRAP:  CALL ESCTEST	;
402)   203D 3A 00 83    		@MYOS_LTRAP: LD A,(FLAGS)	;
403)   2040 B7          		            OR A	;
404)   2041 F0          		             RET P	;
405)   2042 21 00 83    		ABORT:        LD HL,FLAGS 	;
406)   2045 CB BE       		            RES 7,(HL)	;
407)   2047 C3 C2 4D    		            JP ESCAPE          	;
416)   204A F3          		           DI	;
417)   204B 21 F6 82    		           LD HL,RANDOM    ; SET RANDOM SEED TO NON 0	; SET RANDOM SEED TO NON 0
418)   204E 3E 06       		           LD A,0x06	;
419)   2050 77          		           LD (HL),A	;
420)   2051 3E BB       		           LD A,0xBB	;
421)   2053 77          		           LD (HL),A	;
422)   2054 21 00 00    		           LD HL,0	;
423)   2057 22 0D 83    		           LD (CURSORX),HL  ; CURSOR X 7 Y ZEROED            	; CURSOR X 7 Y ZEROED
424)   205A 11 FF FF    		           LD DE,COL_WHITE   ; SET FCOLOR AND BCOLOR DEFAULT VALUES	; SET FCOLOR AND BCOLOR DEFAULT VALUES
425)   205D 21 01 83    		           LD HL,FCOLOR	;
426)   2060 73          		           LD (HL),E	;
427)   2061 23          		           INC HL	;
428)   2062 72          		           LD (HL),D	;
429)   2063 23          		           INC HL	;
430)   2064 11 00 00    		           LD DE,COL_BLACK	;
431)   2067 73          		           LD (HL),E	;
432)   2068 23          		           INC HL	;
433)   2069 72          		           LD (HL),D     	;
434)   206A 01 04 00    		           LD BC,4     ; COPY SAME COLORS TO GRAPHICS	; COPY SAME COLORS TO GRAPHICS
435)   206D 11 05 83    		           LD DE,FGRCOL	;
436)   2070 21 01 83    		           LD HL,FCOLOR	;
437)   2073 ED B0       		           LDIR                                          	;
438)   2075 11 17 83    		           LD DE,FCOLPAL	;
439)   2078 CD 83 20    		           CALL COPYPAL	;
440)   207B 11 37 83    		           LD DE,BCOLPAL            	;
441)   207E CD 83 20    		           CALL COPYPAL	;
442)   2081 18 16       		           JR OSFINSH;	;
443)   2083 21 F4 20    		COPYPAL:   LD HL,COL_PALET   	;
444)   2086 01 20 00    		           LD BC,16*2         ;SHOULD ADD 8 MORE COLORS 	;SHOULD ADD 8 MORE COLORS
445)   2089 ED B0       		           LDIR	;
446)   208B AF          		           XOR A	;
447)   208C 32 0F 83    		           LD (SCRLN),A	;
448)   208F 21 00 00    		           LD HL,0	;
449)   2092 22 A7 83    		           LD (TIMECTR),HL	;
450)   2095 22 A9 83    		           LD (TIMECTR+2),HL            	;
451)   2098 C9          		           RET	;
453)   2099 CD F0 16    		OSFINSH:   CALL LCD_CLRSCR	;
454)   209C CD 2B 4C    		           CALL    TELL	;
455)   209F 43 44 65 73 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20A3 70 20 4D 6F 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20A7 64 75 6C 61 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20AB 72 20 5A 38 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20AF 30 20 43 6F 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20B3 6D 70 75 74 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20B7 65 72 20 32 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20BB 30 32 30 2D 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20BF 32 31       		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
456)   20C1 0A 0D       		     DEFB 0AH,0DH	;
457)   20C3 41 54 4C 41 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   20C7 53 20 4F 70 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   20CB 65 72 61 74 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   20CF 69 6E 67 20 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   20D3 53 79 73 74 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   20D7 65 6D 20 56 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   20DB 65 72 73 69 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   20DF 6F 6E 20 32 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   20E3 2E 35       		     DEFM "ATLAS Operating System Version 2.5"      	;
458)   20E5 0A 0D 0A 0D 		     DEFB 0AH,0DH,0AH,0DH      	;
459)   20E9 00          		     DEFB 00H	;
460)   20EA AF          		           XOR A	;
461)   20EB 11 FF FF    		          LD DE,0xFFFF  ;DE = HIMEM	;DE = HIMEM
462)   20EE 5F          		          LD E,A              ;PAGE BOUNDARY	;PAGE BOUNDARY
463)   20EF 21 E7 83    		          LD HL,@USER      	;
464)   20F2 FB          		          EI     	;
465)   20F3 C9          		          RET 	;
466)   20F4 00 00       		COL_PALET: DW COL_BLACK	;
467)   20F6 00 F8       		           DW COL_RED	;
468)   20F8 C0 07       		           DW COL_GREEN	;
469)   20FA C0 FF       		           DW COL_YELLOW	;
470)   20FC 3F 00       		           DW COL_BLUE	;
471)   20FE 3F F8       		           DW COL_MAGENTA	;
472)   2100 FF 07       		           DW COL_CYAN	;
473)   2102 FF FF       		           DW COL_WHITE            	;
474)   2104 00 00       		          DW COL_BLACK ;TODO PICK 8 MORE COLORS	;TODO PICK 8 MORE COLORS
475)   2106 00 F8       		           DW COL_RED	;
476)   2108 C0 07       		           DW COL_GREEN	;
477)   210A C0 FF       		           DW COL_YELLOW	;
478)   210C 3F 00       		           DW COL_BLUE	;
479)   210E 3F F8       		           DW COL_MAGENTA	;
480)   2110 FF 07       		           DW COL_CYAN	;
481)   2112 FF FF       		           DW COL_WHITE            	;
487)   2114 CD 71 21    		        CALL    SKIPSP	;
488)   2117 FE 0D       		  CP      CR	;
489)   2119 C8          		  RET     Z	;
490)   211A FE 7C       		  CP      '|'	;
491)   211C C8          		  RET     Z	;
492)   211D FE 2E       		  CP      '.'	;
493)   211F CA 64 22    		  JP      Z,DOT           ;*.	;*.
494)   2122 EB          		  EX      DE,HL	;
495)   2123 21 80 21    		  LD      HL,COMDS	;
496)   2126 1A          		OSCLI0:  LD      A,(DE)	;
497)   2127 CD 78 21    		  CALL    UPPRC	;
498)   212A BE          		  CP      (HL)	;
499)   212B 28 0B       		  JR      Z,OSCLI2	;
500)   212D 38 31       		  JR      C,HUH	;
501)   212F CB 7E       		OSCLI1:  BIT     7,(HL)	;
502)   2131 23          		  INC     HL	;
503)   2132 28 FB       		  JR      Z,OSCLI1	;
504)   2134 23          		  INC     HL	;
505)   2135 23          		  INC     HL	;
506)   2136 18 EE       		  JR      OSCLI0	;
508)   2138 D5          		OSCLI2:  PUSH    DE	;
509)   2139 13          		OSCLI3:  INC     DE	;
510)   213A 23          		  INC     HL	;
511)   213B 1A          		  LD      A,(DE)	;
512)   213C CD 78 21    		  CALL    UPPRC	;
513)   213F FE 2E       		  CP      '.'             ;ABBREVIATED?	;ABBREVIATED?
514)   2141 28 0A       		  JR      Z,OSCLI4	;
515)   2143 AE          		  XOR     (HL)	;
516)   2144 28 F3       		  JR      Z,OSCLI3	;
517)   2146 FE 80       		  CP      80H	;
518)   2148 28 03       		  JR      Z,OSCLI4	;
519)   214A D1          		  POP     DE	;
520)   214B 18 E2       		  JR      OSCLI1	;
522)   214D F1          		OSCLI4:  POP     AF	;
523)   214E 13          		         INC     DE	;
524)   214F CB 7E       		OSCLI5:  BIT     7,(HL)	;
525)   2151 23          		  INC     HL	;
526)   2152 28 FB       		  JR      Z,OSCLI5	;
527)   2154 7E          		  LD      A,(HL)	;
528)   2155 23          		  INC     HL	;
529)   2156 66          		  LD      H,(HL)	;
530)   2157 6F          		  LD      L,A	;
531)   2158 E5          		  PUSH    HL ;CALL COMMAND	;CALL COMMAND
532)   2159 EB          		  EX      DE,HL	;
533)   215A E5          		  PUSH HL	;
534)   215B FD E1       		  POP IY	;
535)   215D C3 71 21    		  JP      SKIPSP	;
537)   2160 3E FE       		HUH:     LD      A,254  ;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY	;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY
538)   2162 CD F0 46    		         CALL    EXTERR	;
539)   2165 42 61 64 20 		         DEFM    'Bad command'	;
539)   2169 63 6F 6D 6D 		         DEFM    'Bad command'	;
539)   216D 61 6E 64    		         DEFM    'Bad command'	;
540)   2170 00          		         DEFB    0   	;
542)   2171 7E          		SKIPSP:  LD      A,(HL)	;
543)   2172 FE 20       		         CP      ' '	;
544)   2174 C0          		         RET     NZ	;
545)   2175 23          		         INC     HL	;
546)   2176 18 F9       		         JR      SKIPSP 	;
548)   2178 E6 7F       		UPPRC:   AND     7FH	;
549)   217A FE 60       		  CP      '`'	;
550)   217C D8          		  RET     C	;
551)   217D E6 5F       		  AND     5FH             ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
552)   217F C9          		  RET     	;
556)   2180 42 59       		COMDS:DEFM   'BY'	;
557)   2182 C5          		  DEFB    'E'+80H	;
558)   2183 67 22       		  DEFW    BYE	;
559)   2185 43          		     DEFM    'C'	;
560)   2186 C4          		  DEFB    'D'+80H	;
561)   2187 88 22       		  DEFW    DRV_CD   	;
562)   2189 44 49       		     DEFM    'DI'	;
563)   218B D2          		  DEFB    'R'+80H	;
564)   218C 70 22       		  DEFW    DRV_DIR      	;
565)   218E 46          		     DEFM    'F'	;
566)   218F D8          		  DEFB    'X'+80H	;
567)   2190 6A 22       		  DEFW    FX 	;
568)   2192 4C 43 44 5F 		     DEFM    'LCD_BLINKOF' 	;
568)   2196 42 4C 49 4E 		     DEFM    'LCD_BLINKOF' 	;
568)   219A 4B 4F 46    		     DEFM    'LCD_BLINKOF' 	;
569)   219D C6          		        DEFB 'F'+80H	;
570)   219E 08 23       		        DEFW    LCD_BLINKOF	;
571)   21A0 4C 43 44 5F 		     DEFM    'LCD_BLINKO' 	;
571)   21A4 42 4C 49 4E 		     DEFM    'LCD_BLINKO' 	;
571)   21A8 4B 4F       		     DEFM    'LCD_BLINKO' 	;
572)   21AA CE          		        DEFB 'N'+80H	;
573)   21AB 0E 23       		        DEFW    LCD_BLINKON	;
574)   21AD 4C 43 44 5F 		     DEFM    'LCD_CLEA' 	;
574)   21B1 43 4C 45 41 		     DEFM    'LCD_CLEA' 	;
575)   21B5 D2          		        DEFB 'R'+80H	;
576)   21B6 14 23       		        DEFW    LCD_CLR              	;
577)   21B8 4C 43 44 5F 		     DEFM    'LCD_CURSORA' 	;
577)   21BC 43 55 52 53 		     DEFM    'LCD_CURSORA' 	;
577)   21C0 4F 52 41    		     DEFM    'LCD_CURSORA' 	;
578)   21C3 D4          		        DEFB 'T'+80H	;
579)   21C4 1A 23       		        DEFW    LCD_CURSAT	;
580)   21C6 4C 43 44 5F 		     DEFM    'LCD_CURSOF' 	;
580)   21CA 43 55 52 53 		     DEFM    'LCD_CURSOF' 	;
580)   21CE 4F 46       		     DEFM    'LCD_CURSOF' 	;
581)   21D0 C6          		        DEFB 'F'+80H	;
582)   21D1 39 23       		        DEFW    LCD_CURSOF              	;
583)   21D3 4C 43 44 5F 		     DEFM    'LCD_CURSO' 	;
583)   21D7 43 55 52 53 		     DEFM    'LCD_CURSO' 	;
583)   21DB 4F          		     DEFM    'LCD_CURSO' 	;
584)   21DC CE          		        DEFB 'N'+80H	;
585)   21DD 3F 23       		        DEFW    LCD_CURSON              	;
586)   21DF 4C 43 44 5F 		     DEFM    'LCD_DISPOF' 	;
586)   21E3 44 49 53 50 		     DEFM    'LCD_DISPOF' 	;
586)   21E7 4F 46       		     DEFM    'LCD_DISPOF' 	;
587)   21E9 C6          		        DEFB 'F'+80H	;
588)   21EA 45 23       		        DEFW    LCD_DISPOF              	;
589)   21EC 4C 43 44 5F 		     DEFM    'LCD_DISPO' 	;
589)   21F0 44 49 53 50 		     DEFM    'LCD_DISPO' 	;
589)   21F4 4F          		     DEFM    'LCD_DISPO' 	;
590)   21F5 CE          		        DEFB 'N'+80H	;
591)   21F6 4B 23       		        DEFW    LCD_DISPON	;
592)   21F8 4C 43 44 5F 		     DEFM    'LCD_HOM' 	;
592)   21FC 48 4F 4D    		     DEFM    'LCD_HOM' 	;
593)   21FF C5          		        DEFB 'E'+80H	;
594)   2200 5D 0E       		        DEFW    LCD16_HOME                      	;
595)   2202 4C 43 44 5F 		     DEFM    'LCD_MOVLEF' 	;
595)   2206 4D 4F 56 4C 		     DEFM    'LCD_MOVLEF' 	;
595)   220A 45 46       		     DEFM    'LCD_MOVLEF' 	;
596)   220C D4          		        DEFB 'T'+80H	;
597)   220D 57 23       		        DEFW    LCD_MOVLFT                      	;
598)   220F 4C 43 44 5F 		     DEFM    'LCD_MOVRIGH' 	;
598)   2213 4D 4F 56 52 		     DEFM    'LCD_MOVRIGH' 	;
598)   2217 49 47 48    		     DEFM    'LCD_MOVRIGH' 	;
599)   221A D4          		        DEFB 'T'+80H	;
600)   221B 5D 23       		        DEFW    LCD_MOVRGT                      	;
601)   221D 4C 43 44 5F 		     DEFM    'LCD_PRIN' 	;
601)   2221 50 52 49 4E 		     DEFM    'LCD_PRIN' 	;
602)   2225 D4          		        DEFB 'T'+80H	;
603)   2226 63 23       		        DEFW    LCD_PRN 	;
604)   2228 4C 43 44 5F 		     DEFM    'LCD_SCRLEF' 	;
604)   222C 53 43 52 4C 		     DEFM    'LCD_SCRLEF' 	;
604)   2230 45 46       		     DEFM    'LCD_SCRLEF' 	;
605)   2232 D4          		        DEFB 'T'+80H	;
606)   2233 D4 23       		        DEFW    LCD_SCRLFT                      	;
607)   2235 4C 43 44 5F 		     DEFM    'LCD_SCRRIGH' 	;
607)   2239 53 43 52 52 		     DEFM    'LCD_SCRRIGH' 	;
607)   223D 49 47 48    		     DEFM    'LCD_SCRRIGH' 	;
608)   2240 D4          		        DEFB 'T'+80H	;
609)   2241 DA 23       		        DEFW    LCD_SCRRGT       	;
610)   2243 50 57       		     DEFM    'PW'	;
611)   2245 C4          		  DEFB    'D'+80H	;
612)   2246 6D 22       		  DEFW    NIMP 	;
613)   2248 52 54 43 5F 		     DEFM    'RTC_ADJUS'	;
613)   224C 41 44 4A 55 		     DEFM    'RTC_ADJUS'	;
613)   2250 53          		     DEFM    'RTC_ADJUS'	;
614)   2251 D4          		  DEFB    'T'+80H	;
615)   2252 B4 22       		  DEFW    RTC_ADJUST 	;
616)   2254 52 54 43 5F 		     DEFM    'RTC_GE'	;
616)   2258 47 45       		     DEFM    'RTC_GE'	;
617)   225A D4          		  DEFB    'T'+80H	;
618)   225B E2 22       		  DEFW    RTC_GET   	;
619)   225D 54 59 50    		     DEFM    'TYP'	;
620)   2260 C5          		  DEFB    'E'+80H	;
621)   2261 91 22       		  DEFW    DRV_TYPFILE      	;
623)   2263 FF          		  DEFB 0FFH	;
626)   2264 C3 E0 23    		DOT:  JP      EXTCMDRET	;
631)   2267 C3 00 00    		BYE:  JP 0	;
634)   226A C3 E0 23    		FX: JP     EXTCMDRET   	;
637)   226D C3 E0 23    		NIMP: JP     EXTCMDRET   ;NOT IMPLEMENTED YET	;NOT IMPLEMENTED YET
643)   2270 CD DF 09    		DRV_DIR:               CALL STRG_DIRLIST       ;DIRECTLY TYPES THE DIRECTORY ON SCREEN	;DIRECTLY TYPES THE DIRECTORY ON SCREEN
644)   2273 C3 E0 23    		                       JP EXTCMDRET	;
646)   2276 CD 84 5D    		DRV_GETFNPRM:          CALL    EXPR            ;VARIABLE TYPE	;VARIABLE TYPE
647)   2279 08          		  EX      AF,AF'          ;E NO OF BYTES ACCS THE PARAM	;E NO OF BYTES ACCS THE PARAM
648)   227A 21 00 80    		                       LD HL,ACCS	;
649)   227D 06 00       		                       LD B,0	;
650)   227F 4B          		                       LD C,E                        	;
651)   2280 11 B9 83    		                       LD DE,STRGBUFF	;
652)   2283 ED B0       		                       LDIR	;
653)   2285 AF          		                       XOR A	;
654)   2286 12          		                       LD (DE),A	;
655)   2287 C9          		                       RET	;
658)   2288 CD 76 22    		DRV_CD:                CALL DRV_GETFNPRM	;
659)   228B CD 08 0A    		                       CALL STRG_DIRCHG	;
660)   228E C3 E0 23    		                       JP EXTCMDRET	;
663)   2291 CD 76 22    		DRV_TYPFILE:           CALL DRV_GETFNPRM	;
664)   2294 CD 1D 0A    		                       CALL STRG_OPNFILE	;
665)   2297 CD 7E 0A    		                       CALL STRG_TPFILE        ;DIRECTLY TYPES THE FILE ON SCREEN NO BUFFER	;DIRECTLY TYPES THE FILE ON SCREEN NO BUFFER
666)   229A 3A E5 83    		                       LD A,(FID)	;
667)   229D CD 37 0A    		                       CALL STRG_CLSFILE  	;
668)   22A0 C3 E0 23    		                       JP EXTCMDRET              	;
675)   22A3 CD 94 5E    		RTC_GETBASPAR: CALL EXPRI	;
676)   22A6 D9          		 EXX	;
677)   22A7 7D          		 LD A,L ;A HAS THE NUMBER	;A HAS THE NUMBER
678)   22A8 CD FF 25    		 CALL BN2BCD ;CONVERT IT IN BCD RESULT ON L  	;CONVERT IT IN BCD RESULT ON L
679)   22AB FD 7E 00    		 LD A,(IY)	;
680)   22AE FE 2C       		 CP ','	;
681)   22B0 FD 23       		 INC IY	;
682)   22B2 7D          		 LD A,L	;
683)   22B3 C9          		 RET	;
688)   22B4 0E 00       		RTC_ADJUST: LD C,0	;
689)   22B6 11 89 83    		 LD DE,BUFFER	;
690)   22B9 AF          		 XOR A  ;CMD ADJUST TIME	;CMD ADJUST TIME
691)   22BA 32 89 83    		 LD (BUFFER),A	;
692)   22BD 13          		 INC DE	;
693)   22BE C5          		RTCADJ_NXT: PUSH BC	;
694)   22BF D5          		 PUSH DE	;
695)   22C0 CD A3 22    		 CALL RTC_GETBASPAR	;
696)   22C3 D1          		 POP DE	;
697)   22C4 C1          		 POP BC  	;
698)   22C5 28 0B       		 JR Z,RTCADJ_PAROK	;
700)   22C7 FD 2B       		 DEC IY	;
701)   22C9 47          		 LD B,A ;SAVE A	;SAVE A
702)   22CA 79          		 LD A,C	;
703)   22CB FE 06       		 CP 6	;
704)   22CD 28 08       		 JR Z,RTCADJ_EXEC	;
706)   22CF C3 3F 24    		 JP SNTX_ERROR	;
707)   22D2 0C          		RTCADJ_PAROK: INC C	;
708)   22D3 12          		 LD (DE),A	;
709)   22D4 13          		 INC DE  	;
710)   22D5 18 E7       		 JR RTCADJ_NXT  	;
711)   22D7 78          		RTCADJ_EXEC: LD A,B	;
712)   22D8 12          		 LD (DE),A ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
713)   22D9 13          		 INC DE	;
714)   22DA AF          		 XOR A	;
715)   22DB 12          		 LD (DE),A ;YEAR HI DEFAULT	;YEAR HI DEFAULT
716)   22DC CD 35 0D    		 CALL DS1307_ADJUST	;
717)   22DF C3 E0 23    		 JP EXTCMDRET	;
719)   22E2 CD D9 0C    		RTC_GET: CALL DS1307_GETNOW	;
721)   22E5 21 F3 22    		 LD HL,TSTSTR	;
722)   22E8 11 00 80    		 LD DE,$8000  	;
723)   22EB 01 14 00    		 LD BC,20	;
724)   22EE C5          		 PUSH BC	;
725)   22EF ED B0       		 LDIR	;
726)   22F1 C1          		 POP BC	;
727)   22F2 C9          		 RET	;
729)   22F3 31 37 2F 30 		TSTSTR DEFM '17/03/2021 17:52:03'	;
729)   22F7 33 2F 32 30 		TSTSTR DEFM '17/03/2021 17:52:03'	;
729)   22FB 32 31 20 31 		TSTSTR DEFM '17/03/2021 17:52:03'	;
729)   22FF 37 3A 35 32 		TSTSTR DEFM '17/03/2021 17:52:03'	;
729)   2303 3A 30 33    		TSTSTR DEFM '17/03/2021 17:52:03'	;
730)   2306 00 0D       		    DEFB 0,0x0D	;
733)   2308 CD 95 0E    		LCD_BLINKOF: CALL LCD16_BLINKOFF 	;
734)   230B C3 E0 23    		 JP EXTCMDRET	;
736)   230E CD A3 0E    		LCD_BLINKON: CALL LCD16_BLINKON 	;
737)   2311 C3 E0 23    		 JP EXTCMDRET	;
739)   2314 CD 46 0E    		LCD_CLR: CALL LCD16_CLR	;
740)   2317 C3 E0 23    		 JP EXTCMDRET	;
743)   231A CD 94 5E    		 CALL EXPRI	;
744)   231D D9          		 EXX	;
745)   231E 55          		 LD D,L	;
746)   231F D5          		 PUSH DE	;
747)   2320 FD 7E 00    		 LD A,(IY)	;
748)   2323 FE 2C       		 CP ','	;
749)   2325 28 04       		 JR Z,LCDCA_OK	;
750)   2327 D1          		 POP DE	;
751)   2328 C3 3F 24    		 JP SNTX_ERROR	;
752)   232B FD 23       		LCDCA_OK: INC IY	;
753)   232D CD 94 5E    		 CALL EXPRI	;
754)   2330 D9          		 EXX	;
755)   2331 D1          		 POP DE	;
756)   2332 5D          		 LD E,L    	;
757)   2333 CD 6A 0E    		 CALL LCD16_SETCURS  	;
758)   2336 C3 E0 23    		 JP EXTCMDRET	;
760)   2339 CD 79 0E    		LCD_CURSOF: CALL LCD16_CURSOFF 	;
761)   233C C3 E0 23    		 JP EXTCMDRET	;
763)   233F CD 87 0E    		LCD_CURSON: CALL LCD16_CURSON 	;
764)   2342 C3 E0 23    		 JP EXTCMDRET	;
766)   2345 CD 1D 0E    		LCD_DISPOF: CALL LCD16_NODISP	;
767)   2348 C3 E0 23    		 JP EXTCMDRET	;
769)   234B CD 2B 0E    		LCD_DISPON: CALL LCD16_DISP 	;
770)   234E C3 E0 23    		 JP EXTCMDRET	;
772)   2351 CD 5D 0E    		LCD_HOME: CALL LCD16_HOME   	;
773)   2354 C3 E0 23    		 JP EXTCMDRET   	;
775)   2357 CD BD 0E    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
776)   235A C3 E0 23    		 JP EXTCMDRET  	;
778)   235D CD C3 0E    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
779)   2360 C3 E0 23    		 JP EXTCMDRET  	;
781)   2363 18 20       		LCD_PRN: JR PRINT0	;
782)   2365 06 02       		PRINT6:  LD      B,2	;
783)   2367 18 22       		  JR      PRINTC	;
784)   2369 01 00 01    		PRINT8:  LD      BC,100H	;
785)   236C 18 1D       		  JR      PRINTC	;
786)   236E 21 00 82    		PRINT9:  LD      HL,STAVAR	;
787)   2371 AF          		  XOR     A	;
788)   2372 BE          		  CP      (HL)	;
789)   2373 28 10       		  JR      Z,PRINT0	;
790)   2375 3A FB 82    		  LD      A,(COUNT)	;
791)   2378 B7          		  OR      A	;
792)   2379 28 0A       		  JR      Z,PRINT0	;
793)   237B 96          		PRINTA:  SUB     (HL)	;
794)   237C 28 07       		  JR      Z,PRINT0	;
795)   237E 30 FB       		  JR      NC,PRINTA	;
796)   2380 ED 44       		  NEG	;
797)   2382 CD 2A 57    		  CALL    FILL                	;
798)   2385 3A 00 82    		PRINT0:  LD      A,(STAVAR)	;
799)   2388 4F          		  LD      C,A             ;PRINTS	;PRINTS
800)   2389 06 00       		  LD      B,0             ;PRINTF	;PRINTF
801)   238B CD C2 56    		PRINTC:  CALL    TERM?	;
802)   238E 28 41       		  JR      Z,PRINT4	;
803)   2390 CB 80       		  RES     0,B	;
804)   2392 FD 23       		  INC     IY	;
805)   2394 FE 7E       		  CP      '~'	;
806)   2396 28 CD       		  JR      Z,PRINT6	;
807)   2398 FE 3B       		  CP      ';'	;
808)   239A 28 CD       		  JR      Z,PRINT8	;
809)   239C FE 2C       		  CP      ','	;
810)   239E 28 CE       		  JR      Z,PRINT9	;
811)   23A0 CD E3 56    		  CALL    FORMAT          ;SPC, TAB, '	;SPC, TAB, '
812)   23A3 28 E6       		  JR      Z,PRINTC	;
813)   23A5 FD 2B       		  DEC     IY	;
814)   23A7 C5          		  PUSH    BC	;
815)   23A8 CD 84 5D    		  CALL    EXPR            ;VARIABLE TYPE	;VARIABLE TYPE
816)   23AB 08          		  EX      AF,AF'	;
817)   23AC FA C2 23    		  JP      M,PRINT3        ;STRING	;STRING
818)   23AF D1          		  POP     DE	;
819)   23B0 D5          		  PUSH    DE	;
820)   23B1 CB 4A       		  BIT     1,D	;
821)   23B3 F5          		  PUSH    AF	;
822)   23B4 CC 96 63    		  CALL    Z,STR           ;DECIMAL	;DECIMAL
823)   23B7 F1          		  POP     AF	;
824)   23B8 C4 53 63    		  CALL    NZ,HEXSTR       ;HEX	;HEX
825)   23BB C1          		  POP     BC	;
826)   23BC C5          		  PUSH    BC	;
827)   23BD 79          		  LD      A,C	;
828)   23BE 93          		  SUB     E	;
829)   23BF D4 2A 57    		  CALL    NC,FILL         ;RIGHT JUSTIFY	;RIGHT JUSTIFY
830)   23C2 C1          		PRINT3:  POP     BC	;
833)   23C3 21 00 80    		  LD HL,ACCS ; L IS 00	; L IS 00
834)   23C6 7D          		  LD A,L	;
835)   23C7 83          		  ADD E	;
836)   23C8 6F          		  LD L,A	;
837)   23C9 AF          		  XOR A	;
838)   23CA 77          		  LD (HL),A	;
839)   23CB 6F          		  LD L,A	;
840)   23CC CD 4F 0E    		  CALL LCD16_PRINT           ;PRINT	;PRINT
841)   23CF 18 BA       		  JR      PRINTC	;
842)   23D1 C3 E0 23    		PRINT4:  JP      EXTCMDRET            	;
845)   23D4 CD B1 0E    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
846)   23D7 C3 E0 23    		 JP      EXTCMDRET  	;
848)   23DA CD B7 0E    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
849)   23DD C3 E0 23    		 JP      EXTCMDRET  	;
853)   23E0 AF          		 XOR A	;
856)   23E1 C9          		 RET	;
868)   23E2 3E 01       		@MYOS_GETEXT: LD A,1	;
869)   23E4 C9          		             RET 	;
871)   23E5 C9          		@MYOS_RESET: RET	;
873)   23E6 CD 94 5E    		@MYOS_MODE:CALL EXPRI   ;GET PARAM	;GET PARAM
874)   23E9 D9          		          EXX           ;HL HAS THE PARAM      	;HL HAS THE PARAM
875)   23EA C3 E8 4C    		          JP XEQ	;
877)   23ED CD 7B 1B    		@MYOS_CLG: CALL GRPH_SAVECOLORS	;
878)   23F0 CD F0 16    		          CALL LCD_CLRSCR	;
879)   23F3 CD 92 1B    		          CALL GRPH_RESTORECOLORS	;
880)   23F6 C3 E8 4C    		          JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
883)   23F9 DD E5       		@MYOS_GCOL:  PUSH IX	;
884)   23FB 3E 01       		             LD A,1	;
885)   23FD CD 80 19    		             CALL BAS_COLOUR     	;
886)   2400 DD E1       		             POP IX	;
887)   2402 C3 E8 4C    		             JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
889)   2405 DD E5       		@MYOS_COLOUR: PUSH IX	;
890)   2407 AF          		             XOR A   	;
891)   2408 CD 80 19    		             CALL BAS_COLOUR     	;
892)   240B DD E1       		             POP IX	;
893)   240D C3 E8 4C    		             JP XEQ           ;RETURN TO BASIC              	;RETURN TO BASIC
895)   2410 DD E5       		@MYOS_DRAW: PUSH IX 	;
896)   2412 CD 59 1A    		           CALL BAS_DRAW	;
897)   2415 DD E1       		           POP IX	;
898)   2417 C3 E8 4C    		           JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
900)   241A DD E5       		@MYOS_MOVE:PUSH IX	;
901)   241C CD 82 1A    		          CALL BAS_MOVE	;
902)   241F DD E1       		          POP IX	;
903)   2421 C3 E8 4C    		          JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
905)   2424 DD E5       		@MYOS_PLOT:PUSH IX	;
906)   2426 CD F2 1A    		          CALL BAS_PLOT	;
907)   2429 DD E1       		          POP IX	;
908)   242B C3 E8 4C    		          JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
910)   242E DD E5       		@MYOS_POINT:PUSH IX	;
911)   2430 CD 8E 1A    		          CALL BAS_POINT ;RETURNS A VALUE TO BASIC	;RETURNS A VALUE TO BASIC
912)   2433 DD E1       		          POP IX	;
913)   2435 C9          		          RET	;
922)   2436 CD 15 1A    		@MYOS_PUTIMS:CALL GETBASICPARAMS;            	;
923)   2439 C3 E8 4C    		            JP XEQ	;
925)   243C C3 E2 22    		@MYOS_GETIMS: JP RTC_GET             	;
927)   243F CD F0 46    		SNTX_ERROR: CALL    EXTERR	;
928)   2442 53 79 6E 74 		  DEFM    'Syntax error'	;
928)   2446 61 78 20 65 		  DEFM    'Syntax error'	;
928)   244A 72 72 6F 72 		  DEFM    'Syntax error'	;
929)   244E 00          		  DEFB    0            	;
936)   244F CD 1D 03    		GETKEY:   CALL GET_CHAR	;
937)   2452 37          		           SCF	;
938)   2453 C9          		        RET       	;
943)   2454 CD 60 24    		GETKEYNW: CALL CHKCURS	;
944)   2457 CD FA 02    		           CALL GET_CHARNW	;
945)   245A 3F          		           CCF	;
946)   245B FE 00       		           CP 0	;
947)   245D C8          		           RET Z	;
948)   245E 37          		           SCF	;
949)   245F C9          		        RET       	;
951)   2460 F5          		@CHKCURS:   PUSH AF	;
952)   2461 3A A7 83    		           LD A,(TIMECTR)	;
953)   2464 CB 67       		           BIT 4,A	;
954)   2466 28 11       		           JR Z,CCSHOW      ;IF SET SHOW       	;IF SET SHOW
955)   2468 3A 11 83    		CCHIDE:    LD A,(CURSSTAT)	;
956)   246B CB 4F       		           BIT 1,A	;
957)   246D 20 19       		           JR NZ,CCEX      ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
958)   246F CB CF       		           SET 1,A	;
959)   2471 32 11 83    		           LD (CURSSTAT),A	;
960)   2474 CD A9 16    		           CALL LCD_RMVCURS	;
961)   2477 18 0F       		           JR CCEX                                               	;
962)   2479 3A 11 83    		CCSHOW:    LD A,(CURSSTAT)	;
963)   247C CB 4F       		           BIT 1,A	;
964)   247E 28 08       		           JR Z,CCEX      ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
965)   2480 CB 8F       		           RES 1,A	;
966)   2482 32 11 83    		           LD (CURSSTAT),A	;
967)   2485 CD AE 16    		           CALL LCD_PRNCURS	;
969)   2488 F1          		CCEX:      POP AF	;
970)   2489 C9          		     RET          	;
981)   248A 3A 00 83    		       LD      A,(FLAGS)	;
982)   248D CB 5F       		       BIT     3,A             ;EDIT MODE?	;EDIT MODE?
983)   248F 28 09       		       JR      Z,OSLIN1	;
984)   2491 CB 9F       		       RES     3,A	;
985)   2493 32 00 83    		       LD      (FLAGS),A	;
986)   2496 2A 12 83    		       LD      HL,(EDPTR)	;
987)   2499 BD          		       CP      L	;
988)   249A 3E 0D       		OSLIN1: LD     A,CR	;
989)   249C 77          		       LD      (HL),A	;
990)   249D C4 2E 1E    		       CALL    NZ,MYOS_OSWRCH	;
991)   24A0 2E 00       		       LD      L,0	;
992)   24A2 4D          		       LD      C,L             ;REPEAT FLAG	;REPEAT FLAG
993)   24A3 28 20       		       JR      Z,OSWAIT        ;SUPPRESS UNWANTED SPACE	;SUPPRESS UNWANTED SPACE
994)   24A5 06 00       		UPDATE: LD     B,0	;
995)   24A7 7E          		UPD1:  LD      A,(HL)	;
996)   24A8 04          		       INC     B	;
997)   24A9 23          		       INC     HL	;
998)   24AA FE 0D       		       CP      CR	;
999)   24AC F5          		       PUSH    AF	;
1000)   24AD E5          		       PUSH    HL	;
1001)   24AE 5F          		       LD      E,A	;
1002)   24AF C4 E2 1F    		       CALL    NZ,WRCH         ;FAST WRCH	;FAST WRCH
1003)   24B2 E1          		       POP     HL	;
1004)   24B3 F1          		       POP     AF	;
1005)   24B4 20 F1       		       JR      NZ,UPD1	;
1006)   24B6 3E 20       		       LD      A,' '	;
1007)   24B8 CD 2E 1E    		       CALL    MYOS_OSWRCH	;
1008)   24BB 1E 08       		       LD      E,BS	;
1009)   24BD E5          		UPD2:  PUSH    HL	;
1010)   24BE CD E2 1F    		       CALL    WRCH            ;FAST WRCH	;FAST WRCH
1011)   24C1 E1          		       POP     HL	;
1012)   24C2 2B          		       DEC     HL	;
1013)   24C3 10 F8       		       DJNZ    UPD2	;
1014)   24C5 79          		OSWAIT: LD     A,C	;
1015)   24C6 05          		       DEC     B	;
1016)   24C7 28 01       		       JR      Z,LIMIT	;
1017)   24C9 B7          		       OR      A               ;REPEAT COMMAND?	;REPEAT COMMAND?
1018)   24CA CC 21 1E    		LIMIT: CALL    Z,KEYGET        ;READ KEYBOARD	;READ KEYBOARD
1019)   24CD 4F          		       LD      C,A             ;SAVE FOR REPEAT	;SAVE FOR REPEAT
1020)   24CE 11 C5 24    		       LD      DE,OSWAIT       ;RETURN ADDRESS	;RETURN ADDRESS
1021)   24D1 D5          		       PUSH    DE	;
1022)   24D2 3A 00 83    		       LD      A,(FLAGS)	;
1023)   24D5 B7          		       OR      A               ;TEST FOR ESCAPE	;TEST FOR ESCAPE
1024)   24D6 79          		       LD      A,C	;
1025)   24D7 FA 19 25    		       JP      M,OSEXIT	;
1026)   24DA FE 0B       		       CP      11         ;CURSOR UP     (IX-11)	;CURSOR UP     (IX-11)
1027)   24DC CA 5D 25    		       JP      Z,LEFT	;
1028)   24DF FE 0A       		       CP      10         ;CURSOR DOWN   (IX-10)	;CURSOR DOWN   (IX-10)
1029)   24E1 CA 90 25    		       JP      Z,RIGHT	;
1030)   24E4 06 00       		       LD      B,0	;
1031)   24E6 FE 05       		       CP      5          ;CLEAR LEFT    (IX-5)	;CLEAR LEFT    (IX-5)
1032)   24E8 28 72       		       JR      Z,BACK	;
1033)   24EA FE 09       		       CP      9          ;START OF LINE (IX-9)	;START OF LINE (IX-9)
1034)   24EC 28 6F       		       JR      Z,LEFT	;
1035)   24EE FE 07       		       CP      7          ;CLEAR RIGHT   (IX-7)	;CLEAR RIGHT   (IX-7)
1036)   24F0 28 76       		       JR      Z,DELETE	;
1037)   24F2 FE 08       		       CP      8          ;END OF LINE   (IX-8)	;END OF LINE   (IX-8)
1038)   24F4 CA 90 25    		       JP      Z,RIGHT	;
1039)   24F7 0E 00       		       LD      C,0             ;INHIBIT REPEAT	;INHIBIT REPEAT
1040)   24F9 FE 10       		       CP      'P' AND 1FH	;
1041)   24FB CA 05 20    		       JP      Z,TOGGLE	;
1042)   24FE FE 06       		       CP      6          ;DELETE LEFT   (IX-6)	;DELETE LEFT   (IX-6)
1043)   2500 28 5A       		       JR      Z,BACK	;
1044)   2502 FE 04       		       CP      4          ;CURSOR LEFT   (IX-4)	;CURSOR LEFT   (IX-4)
1045)   2504 28 57       		       JR      Z,LEFT	;
1046)   2506 FE 02       		       CP      2          ;DELETE RIGHT  (IX-2)	;DELETE RIGHT  (IX-2)
1047)   2508 28 5E       		       JR      Z,DELETE	;
1048)   250A FE 01       		       CP      1          ;INSERT SPACE  (IX-1)	;INSERT SPACE  (IX-1)
1049)   250C 28 6E       		       JR      Z,INSERT	;
1050)   250E FE 03       		       CP      3          ;CURSOR RIGHT  (IX-3)	;CURSOR RIGHT  (IX-3)
1051)   2510 28 7E       		       JR      Z,RIGHT	;
1052)   2512 FE 20       		       CP      ' '             ;PRINTING CHARACTER	;PRINTING CHARACTER
1053)   2514 30 7F       		       JR      NC,SAVECH	;
1054)   2516 FE 0D       		       CP      CR              ;ENTER LINE	;ENTER LINE
1055)   2518 C0          		       RET     NZ	;
1056)   2519 7E          		OSEXIT: LD     A,(HL)	;
1057)   251A CD 2E 1E    		       CALL    MYOS_OSWRCH          ;WRITE REST OF LINE	;WRITE REST OF LINE
1058)   251D 23          		       INC     HL	;
1059)   251E D6 0D       		       SUB     CR	;
1060)   2520 20 F7       		       JR      NZ,OSEXIT	;
1061)   2522 D1          		       POP     DE              ;DITCH RETURN ADDRESS	;DITCH RETURN ADDRESS
1062)   2523 B9          		       CP      C	;
1063)   2524 C2 42 20    		       JP      NZ,ABORT        ;ESCAPE	;ESCAPE
1064)   2527 3E 0A       		       LD      A,LF	;
1065)   2529 CD 2E 1E    		       CALL    MYOS_OSWRCH	;
1066)   252C ED 5B F4 82 		       LD      DE,(ERRLIN)	;
1067)   2530 AF          		       XOR     A	;
1068)   2531 6F          		       LD      L,A	;
1069)   2532 22 12 83    		       LD      (EDPTR),HL	;
1070)   2535 BA          		       CP      D	;
1071)   2536 C0          		       RET     NZ	;
1072)   2537 BB          		       CP      E	;
1073)   2538 C0          		       RET     NZ	;
1074)   2539 11 A9 25    		       LD      DE,EDITST	;
1075)   253C 06 04       		       LD      B,4	;
1076)   253E 1A          		CMPARE: LD     A,(DE)	;
1077)   253F BE          		       CP      (HL)	;
1078)   2540 3E 00       		       LD      A,0	;
1079)   2542 C0          		       RET     NZ	;
1080)   2543 23          		       INC     HL	;
1081)   2544 13          		       INC     DE	;
1082)   2545 7E          		       LD      A,(HL)	;
1083)   2546 FE 2E       		       CP      '.'	;
1084)   2548 28 02       		       JR      Z,ABBR	;
1085)   254A 10 F2       		       DJNZ    CMPARE	;
1086)   254C AF          		ABBR:  XOR     A	;
1087)   254D 47          		       LD      B,A	;
1088)   254E 4D          		       LD      C,L	;
1089)   254F 6F          		       LD      L,A	;
1090)   2550 11 AD 25    		       LD      DE,LISTST	;
1091)   2553 EB          		       EX      DE,HL	;
1092)   2554 ED B0       		       LDIR	;
1093)   2556 21 00 83    		       LD      HL,FLAGS	;
1094)   2559 CB DE       		       SET     3,(HL)	;
1095)   255B C9          		       RET	;
1097)   255C 37          		BACK:  SCF                     ;DELETE LEFT	;DELETE LEFT
1098)   255D 2C          		LEFT:  INC     L               ;CURSOR LEFT	;CURSOR LEFT
1099)   255E 2D          		       DEC     L	;
1100)   255F 28 45       		       JR      Z,STOP	;
1101)   2561 3E 08       		       LD      A,BS	;
1102)   2563 CD 2E 1E    		       CALL    MYOS_OSWRCH	;
1103)   2566 2D          		       DEC     L	;
1104)   2567 D0          		       RET     NC	;
1105)   2568 7E          		DELETE: LD     A,(HL)          ;DELETE RIGHT	;DELETE RIGHT
1106)   2569 FE 0D       		       CP      CR	;
1107)   256B 28 39       		       JR      Z,STOP	;
1108)   256D 54          		       LD      D,H	;
1109)   256E 5D          		       LD      E,L	;
1110)   256F 13          		DEL1:  INC     DE	;
1111)   2570 1A          		       LD      A,(DE)	;
1112)   2571 1B          		       DEC     DE	;
1113)   2572 12          		       LD      (DE),A	;
1114)   2573 13          		       INC     DE	;
1115)   2574 FE 0D       		       CP      CR	;
1116)   2576 20 F7       		       JR      NZ,DEL1	;
1117)   2578 D1          		DEL2:  POP     DE              ;DITCH	;DITCH
1118)   2579 C3 A5 24    		       JP      UPDATE	;
1120)   257C 3E 0D       		INSERT: LD     A,CR            ;INSERT SPACE	;INSERT SPACE
1121)   257E BE          		       CP      (HL)	;
1122)   257F C8          		       RET     Z	;
1123)   2580 54          		       LD      D,H	;
1124)   2581 1E FE       		       LD      E,254	;
1125)   2583 13          		INS1:  INC     DE	;
1126)   2584 12          		       LD      (DE),A	;
1127)   2585 1B          		       DEC     DE	;
1128)   2586 7B          		       LD      A,E	;
1129)   2587 BD          		       CP      L	;
1130)   2588 1B          		       DEC     DE	;
1131)   2589 1A          		       LD      A,(DE)	;
1132)   258A 20 F7       		       JR      NZ,INS1	;
1133)   258C 36 20       		       LD      (HL),' '	;
1134)   258E 18 E8       		       JR      DEL2	;
1136)   2590 7E          		RIGHT: LD      A,(HL)          ;CURSOR RIGHT	;CURSOR RIGHT
1137)   2591 FE 0D       		       CP      CR	;
1138)   2593 28 11       		       JR      Z,STOP	;
1139)   2595 56          		SAVECH: LD     D,(HL)          ;PRINTING CHARACTER	;PRINTING CHARACTER
1140)   2596 77          		       LD      (HL),A	;
1141)   2597 2C          		       INC     L	;
1142)   2598 28 09       		       JR      Z,WONTGO        ;LINE TOO LONG	;LINE TOO LONG
1143)   259A CD 2E 1E    		       CALL    MYOS_OSWRCH	;
1144)   259D 3E 0D       		       LD      A,CR	;
1145)   259F BA          		       CP      D	;
1146)   25A0 C0          		       RET     NZ	;
1147)   25A1 77          		       LD      (HL),A	;
1148)   25A2 C9          		       RET	;
1150)   25A3 2D          		WONTGO: DEC    L	;
1151)   25A4 36 0D       		       LD      (HL),CR	;
1154)   25A6 0E 00       		STOP:  LD      C,0             ;STOP REPEAT	;STOP REPEAT
1155)   25A8 C9          		       RET	;
1158)   25A9 45 44 49 54 		EDITST: DEFM   'EDIT'	;
1159)   25AD 4C 49 53 54 		LISTST: DEFM   'LIST'	;
 18)   25B1 C9          		     RET 	;
 21)   25B2 F5          		DELAYMICROSEC: PUSH AF	;
 22)   25B3 D5          		 PUSH DE	;
 23)   25B4 1B          		 DEC DE	;
 24)   25B5 D1          		 POP DE	;
 25)   25B6 F1          		 POP AF	;
 26)   25B7 C9          		 RET	;
 29)   25B8 CD B2 25    		S21: CALL DELAYMICROSEC	;
 30)   25BB 10 FB       		 DJNZ S21 	;
 31)   25BD C9          		 RET	;
 35)   25BE F5          		DELAYMILISEC: PUSH AF	;
 36)   25BF D5          		 PUSH DE	;
 37)   25C0 11 2C 01    		 LD DE,300 ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 38)   25C3 1B          		DEL1: DEC DE	;
 39)   25C4 7A          		 LD A,D           ;TEST FOR DE=00	;TEST FOR DE=00
 40)   25C5 B3          		 OR E	;
 41)   25C6 20 FB       		 JR NZ,DEL1 	;
 42)   25C8 D1          		 POP DE	;
 43)   25C9 F1          		 POP AF	;
 44)   25CA C9          		 RET	;
 46)   25CB 06 50       		DEL2:LD B,80	;
 48)   25CD CD BE 25    		S1: CALL DELAYMILISEC	;
 49)   25D0 10 FB       		 DJNZ S1 	;
 50)   25D2 C9          		 RET	;
 55)   25D3 C5          		@DELAYSEC:PUSH BC 	;
 56)   25D4 01 E8 03    		        LD BC,1000 	;
 57)   25D7 C5          		MYDLAGN: PUSH BC	;
 58)   25D8 CD BE 25    		        CALL DELAY  ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 59)   25DB C1          		       POP BC	;
 60)   25DC 0B          		       DEC BC	;
 61)   25DD 78          		        LD A,B	;
 62)   25DE B1          		        OR C	;
 63)   25DF 20 F6       		        JR NZ,MYDLAGN	;
 64)   25E1 C1          		        POP BC	;
 65)   25E2 10 EF       		        DJNZ DELAYSEC	;
 66)   25E4 C9          		        RET	;
 71)   25E5 F5          		OUTASC PUSH AF	;
 72)   25E6 D5          		 PUSH DE	;
 73)   25E7 CD 1A 26    		 CALL B2Bcd	;
 74)   25EA D1          		 POP DE	;
 75)   25EB CD 40 26    		 CALL BCD2HA	;
 76)   25EE F1          		 POP AF	;
 77)   25EF C9          		 RET	;
 91)   25F0 B7          		BCD2BN: OR A	;
 92)   25F1 47          		       LD B,A	;
 93)   25F2 E6 F0       		 AND $F0	;
 94)   25F4 0F          		 RRCA	;
 95)   25F5 4F          		 LD C,A	;
 96)   25F6 0F          		 RRCA	;
 97)   25F7 0F          		 RRCA	;
 98)   25F8 81          		 ADD A,C	;
 99)   25F9 4F          		 LD C,A	;
100)   25FA 78          		 LD A,B	;
101)   25FB E6 0F       		 AND $0F	;
102)   25FD 81          		 ADD A,C	;
103)   25FE C9          		 RET 	;
118)   25FF 26 FF       		BN2BCD: LD H,$FF	;
119)   2601 24          		D100LP: INC H	;
120)   2602 D6 64       		 SUB 100	;
121)   2604 30 FB       		 JR NC,D100LP	;
122)   2606 C6 64       		 ADD A,100	;
123)   2608 2E FF       		 LD L,$FF	;
124)   260A 2C          		D10LP: INC L	;
125)   260B D6 0A       		       SUB 10	;
126)   260D 30 FB       		       JR NC, D10LP	;
127)   260F C6 0A       		       ADD A,10	;
128)   2611 4F          		       LD C,A	;
129)   2612 7D          		       LD A,L	;
130)   2613 07          		       RLCA	;
131)   2614 07          		       RLCA        	;
132)   2615 07          		 RLCA	;
133)   2616 07          		       RLCA	;
134)   2617 B1          		 OR C	;
135)   2618 6F          		 LD L,A	;
136)   2619 C9          		 RET	;
150)   261A 01 00 10    		LD BC, 16*256+0 ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
151)   261D 11 00 00    		LD DE, 0	;
153)   2620 29          		ADD HL, HL	;
154)   2621 7B          		LD A, E	;
155)   2622 8F          		ADC A, A	;
156)   2623 27          		DAA	;
157)   2624 5F          		LD E, A	;
158)   2625 7A          		LD A, D	;
159)   2626 8F          		ADC A, A	;
160)   2627 27          		DAA	;
161)   2628 57          		LD D, A	;
162)   2629 79          		LD A, C	;
163)   262A 8F          		ADC A, A	;
164)   262B 27          		DAA	;
165)   262C 4F          		LD C, A	;
166)   262D 10 F1       		DJNZ cvtLp	;
167)   262F EB          		EX DE,HL	;
168)   2630 C9          		RET	;
182)   2631 B7          		BCD2BN: OR A	;
183)   2632 47          		       LD B,A	;
184)   2633 E6 F0       		 AND $F0	;
185)   2635 0F          		 RRCA	;
186)   2636 4F          		 LD C,A	;
187)   2637 0F          		 RRCA	;
188)   2638 0F          		 RRCA	;
189)   2639 81          		 ADD A,C	;
190)   263A 4F          		 LD C,A	;
191)   263B 78          		 LD A,B	;
192)   263C E6 0F       		 AND $0F	;
193)   263E 81          		 ADD A,C	;
194)   263F C9          		 RET	;
206)   2640 79          		LD A, C	;
207)   2641 CD 6D 26    		CALL cvtUN	;
208)   2644 79          		LD A, C	;
209)   2645 CD 71 26    		CALL cvtLN	;
210)   2648 7C          		LD A, H	;
211)   2649 CD 6D 26    		CALL cvtUN	;
212)   264C 7C          		LD A, H	;
213)   264D CD 71 26    		CALL cvtLN	;
214)   2650 7D          		LD A, L	;
215)   2651 CD 6D 26    		CALL cvtUN	;
216)   2654 7D          		LD A, L	;
217)   2655 18 1A       		JR cvtLN	;
219)   2657 1F          		RRA ; move upper nibble into lower nibble	; move upper nibble into lower nibble
220)   2658 1F          		RRA	;
221)   2659 1F          		RRA	;
222)   265A 1F          		RRA	;
224)   265B E6 0F       		AND 0Fh ; isolate lower nibble	; isolate lower nibble
225)   265D C6 90       		ADD A, 90h ; old trick	; old trick
226)   265F 27          		DAA ; for converting	; for converting
227)   2660 CE 40       		ADC A, 40h ; one nibble	; one nibble
228)   2662 27          		DAA ; to hex ASCII	; to hex ASCII
229)   2663 12          		LD (DE), A	;
230)   2664 13          		INC DE	;
231)   2665 C9          		RET	;
243)   2666 7D          		LD A, L	;
244)   2667 CD 57 26    		CALL cvtUN	;
245)   266A 7D          		LD A, L	;
246)   266B 18 EE       		JR cvtLN	;
248)   266D 1F          		RRA ; move upper nibble into lower nibble	; move upper nibble into lower nibble
249)   266E 1F          		RRA	;
250)   266F 1F          		RRA	;
251)   2670 1F          		RRA	;
253)   2671 E6 0F       		AND 0Fh ; isolate lower nibble	; isolate lower nibble
254)   2673 C6 90       		ADD A, 90h ; old trick	; old trick
255)   2675 27          		DAA ; for converting	; for converting
256)   2676 CE 40       		ADC A, 40h ; one nibble	; one nibble
257)   2678 27          		DAA ; to hex ASCII	; to hex ASCII
258)   2679 12          		LD (DE), A	;
259)   267A 13          		INC DE	;
260)   267B C9          		RET	;
277)   267C F5          		 PUSH AF      ; 11 T-states	; 11 T-states
279)   267D ED 44       		 NEG        ; 8 T-states	; 8 T-states
280)   267F ED 44       		 NEG        ; 8 T-states	; 8 T-states
281)   2681 ED 44       		 NEG        ; 8 T-states	; 8 T-states
282)   2683 ED 44       		 NEG        ; 8 T-states	; 8 T-states
283)   2685 0B          		 DEC BC       ; 6 T-states	; 6 T-states
284)   2686 79          		 LD A,C       ; 9 T-states	; 9 T-states
285)   2687 B0          		 OR B       ; 4 T-states	; 4 T-states
286)   2688 C2 7D 26    		 JP NZ,pau_lp     ; 10 T-states	; 10 T-states
287)   268B F1          		 POP AF       ; 10 T-states	; 10 T-states
288)   268C C9          		 RET        ; Pause complete, RETurn	; Pause complete, RETurn
  8)   268D 21 00 00    		@Mult16:ld hl,0	;
  9)   2690 78          		   ld a,b	;
 10)   2691 06 10       		   ld b,16	;
 12)   2693 29          		   add hl,hl	;
 13)   2694 CB 21       		   sla c	;
 14)   2696 17          		   rla	;
 15)   2697 30 01       		   jr nc,Mult16_NoAdd	;
 16)   2699 19          		   add hl,de	;
 18)   269A 10 F7       		   djnz Mult16_Loop	;
 19)   269C C9          		   ret	;
 25)   269D D5          		@Mult32:PUSH DE	;
 26)   269E 79          		   ld a,c	;
 27)   269F 48          		   ld c,b	;
 28)   26A0 21 00 00    		   ld hl,0	;
 29)   26A3 06 10       		   ld b,16	;
 31)   26A5 29          		   add hl,hl	;
 32)   26A6 17          		   rla	;
 33)   26A7 CB 11       		   rl c	;
 34)   26A9 30 07       		   jr nc,Mult32_NoAdd	;
 35)   26AB 19          		   add hl,de	;
 36)   26AC CE 00       		   adc a,0	;
 37)   26AE D2 B2 26    		   jp nc,Mult32_NoAdd	;
 38)   26B1 0C          		   inc c	;
 40)   26B2 10 F1       		   djnz Mult32_Loop	;
 41)   26B4 41          		   ld b,c	;
 42)   26B5 4F          		   ld c,a	;
 43)   26B6 D1          		   POP DE	;
 44)   26B7 C9          		   ret	;
 52)   26B8 19          		       ADD     HL,DE   ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
 53)   26B9 D9          		       EXX	;
 54)   26BA ED 5A       		       ADC     HL,DE   ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
 55)   26BC D9          		       EXX	;
 58)   26BD C9          		       RET	;
 68)   26BE 11 40 00    		   ld de,$0040	;
 69)   26C1 7D          		   ld a,l	;
 70)   26C2 6C          		   ld l,h	;
 71)   26C3 62          		   ld h,d	;
 72)   26C4 B7          		   or a	;
 73)   26C5 06 08       		   ld b,8	;
 75)   26C7 ED 52       		   sbc hl,de	;
 76)   26C9 30 01       		   jr nc,Sqr16_Skip	;
 77)   26CB 19          		   add hl,de	;
 79)   26CC 3F          		   ccf	;
 80)   26CD CB 12       		   rl d	;
 81)   26CF 87          		   add a,a	;
 82)   26D0 ED 6A       		   adc hl,hl	;
 83)   26D2 87          		   add a,a	;
 84)   26D3 ED 6A       		   adc hl,hl	;
 85)   26D5 10 F0       		   djnz Sqr16_Loop	;
 86)   26D7 C9          		   ret        	;
  9)   8300 00          		   @FLAGS   DEFS 1  ; Flags: B7=ESC PRESSED, B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 10)   8301 00 00       		   @FCOLOR   DEFS 2 ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 11)   8303 00 00       		   @BCOLOR   DEFS 2 ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 12)   8305 00 00       		   @FGRCOL   DEFS 2 ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 13)   8307 00 00       		   @BGRCOL   DEFS 2 ;BACKGROUND COLOR FOR GRAPHICS 	;BACKGROUND COLOR FOR GRAPHICS
 14)   8309 00 00       		   @FCOLTM   DEFS 2 ;TEMP FOREGROUND COLOR 	;TEMP FOREGROUND COLOR
 15)   830B 00 00       		   @BCOLTM   DEFS 2 ;TEMP BACKGROUND COLOR 	;TEMP BACKGROUND COLOR
 16)   830D 00          		   @CURSORX  DEFS 1    ;0-79	;0-79
 17)   830E 00          		   @CURSORY  DEFS 1    ;0-47	;0-47
 18)   830F 00          		   @SCRLN    DEFS 1    ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 19)   8310 00          		   @LASTCHAR DEFS 1; 	;
 20)   8311 00          		   @CURSSTAT DEFS 1;  ;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN	;  ;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN
 21)   8312 00 00       		   @EDPTR    DEFS 2	;
 22)   8314 00          		   @OPTVAL   DEFS 1	;
 23)   8315 00          		   @INKEY    DEFS 1	;
 24)   8316 00          		   @VDUMODE  DEFS 1    ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 25)   8317 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   831B 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   831F 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   8323 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   8327 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   832B 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   832F 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   8333 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 26)   8337 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   833B 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   833F 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   8343 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   8347 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   834B 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   834F 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   8353 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 27)   8357 00 00       		   @GR_LASTX3 DEFS 2	;
 28)   8359 00 00       		   @GR_LASTY3 DEFS 2	;
 29)   835B 00 00       		   @GR_LASTX2 DEFS 2	;
 30)   835D 00 00       		   @GR_LASTY2 DEFS 2    	;
 31)   835F 00 00       		   @GR_LASTX DEFS 2	;
 32)   8361 00 00       		   @GR_LASTY DEFS 2	;
 33)   8363 00 00       		   @GR_PARAM1 DEFS 2	;
 34)   8365 00 00       		   @GR_PARAM2 DEFS 2	;
 35)   8367 00 00       		   @GR_PARAM3 DEFS 2	;
 36)   8369 00 00       		   @GR_PARAM4 DEFS 2	;
 38)   836B 00 00       		   @FILL_X   DEFS 2	;
 39)   836D 00 00       		   @FILL_Y   DEFS 2 	;
 40)   836F 00 00       		   @FILL_L   DEFS 2	;
 41)   8371 00 00       		   @FILL_X1  DEFS 2	;
 42)   8373 00 00       		   @FILL_X2  DEFS 2	;
 43)   8375 00 00       		   @FILL_DY  DEFS 2	;
 44)   8377 00 00       		   @FILL_Q   DEFS 2  ;START OF QUEUE	;START OF QUEUE
 45)   8379 00 00       		   @FILL_IDX DEFS 2  ;INDEX OF QUEUE	;INDEX OF QUEUE
 46)   837B 00 00       		   @FILL_PY  DEFS 2  ;FOR PUSH/POP	;FOR PUSH/POP
 47)   837D 00 00       		   @FILL_PXL DEFS 2	;
 48)   837F 00 00       		   @FILL_PXR DEFS 2	;
 49)   8381 00 00       		   @FILL_PDY DEFS 2    	;
 50)   8383 00 00       		   @FILL_OV  DEFS 2  ;OLD COLOR	;OLD COLOR
 51)   8385 00 00       		   @FILL_OLDSP DEFS 2; OLD SP	; OLD SP
 52)   8387 00          		   @LCD_DSPCTRL DEFS 1	;
 53)   8388 00          		   @LCD_DSPMODE DEFS 1	;
 54)   8389 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   838D 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   8391 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   8395 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   8399 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 55)   839D 00          		   @FFSTAT   DEFS 1  ;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 56)   839E 00          		  @KEYCTR   DEFS 1  ;FOR USB KEYBOARD 	;FOR USB KEYBOARD
 57)   839F 00          		  @SERERR  DEFS 1;	;
 58)   83A0 00          		  @SERER2  DEFS 1  ;AT RAM ADDRESS	;AT RAM ADDRESS
 59)   83A1 00          		  @DISPCT   DEFS 1  ;	;
 60)   83A2 00          		  @LCDCX    DEFS 1  ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 61)   83A3 00          		  @LCDCY    DEFS 1  ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 62)   83A4 00 00       		  @PRGEX   DEFS 2  ;2 BYTES	;2 BYTES
 63)   83A6 00          		  @TVSTAT   DEFS 1  ;1 BYTE	;1 BYTE
 64)   83A7 00 00 00 00 		  @TIMECTR  DEFS 4	;
 65)   83AB 00          		  @INT2TE DEFB 0	;
 66)   83AC 00 00 00 00 		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   83B0 00 00 00 00 		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   83B4 00 00 00 00 		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   83B8 00          		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 67)   83B9 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83BD 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83C1 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83C5 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83C9 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83CD 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83D1 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83D5 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83D9 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83DD 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 68)   83E1 00 00 00 00 		   @STRGCMD      DEFS 4	;
 69)   83E5 00          		   @FID          DEFS 1	;
 70)   83E6 00          		   @SPC        DEFS 1	;
