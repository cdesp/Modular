  3)   0000 00          		 NOP	;
  4)   0001 C3 00 01    		 JP START	;
  5)   0004 C3 A3 02    		 JP MENU	;
  6)   0007 32          		 VERSION DEFB $32    ; AT ADDR=7 VER 0.32	; AT ADDR=7 VER 0.32
  7)   0008 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   000C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0010 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0014 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0018 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   001C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0020 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0024 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0028 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   002C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0030 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0034 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
 10)   0038 C3 F3 0B    		 JP INTSER	;
 13)   003B 00 00 00 00 		 ALIGN 256	;
 13)   003F 00 00 00 00 		 ALIGN 256	;
 13)   0043 00 00 00 00 		 ALIGN 256	;
 13)   0047 00 00 00 00 		 ALIGN 256	;
 13)   004B 00 00 00 00 		 ALIGN 256	;
 13)   004F 00 00 00 00 		 ALIGN 256	;
 13)   0053 00 00 00 00 		 ALIGN 256	;
 13)   0057 00 00 00 00 		 ALIGN 256	;
 13)   005B 00 00 00 00 		 ALIGN 256	;
 13)   005F 00 00 00 00 		 ALIGN 256	;
 13)   0063 00 00 00 00 		 ALIGN 256	;
 13)   0067 00 00 00 00 		 ALIGN 256	;
 13)   006B 00 00 00 00 		 ALIGN 256	;
 13)   006F 00 00 00 00 		 ALIGN 256	;
 13)   0073 00 00 00 00 		 ALIGN 256	;
 13)   0077 00 00 00 00 		 ALIGN 256	;
 13)   007B 00 00 00 00 		 ALIGN 256	;
 13)   007F 00 00 00 00 		 ALIGN 256	;
 13)   0083 00 00 00 00 		 ALIGN 256	;
 13)   0087 00 00 00 00 		 ALIGN 256	;
 13)   008B 00 00 00 00 		 ALIGN 256	;
 13)   008F 00 00 00 00 		 ALIGN 256	;
 13)   0093 00 00 00 00 		 ALIGN 256	;
 13)   0097 00 00 00 00 		 ALIGN 256	;
 13)   009B 00 00 00 00 		 ALIGN 256	;
 13)   009F 00 00 00 00 		 ALIGN 256	;
 13)   00A3 00 00 00 00 		 ALIGN 256	;
 13)   00A7 00 00 00 00 		 ALIGN 256	;
 13)   00AB 00 00 00 00 		 ALIGN 256	;
 13)   00AF 00 00 00 00 		 ALIGN 256	;
 13)   00B3 00 00 00 00 		 ALIGN 256	;
 13)   00B7 00 00 00 00 		 ALIGN 256	;
 13)   00BB 00 00 00 00 		 ALIGN 256	;
 13)   00BF 00 00 00 00 		 ALIGN 256	;
 13)   00C3 00 00 00 00 		 ALIGN 256	;
 13)   00C7 00 00 00 00 		 ALIGN 256	;
 13)   00CB 00 00 00 00 		 ALIGN 256	;
 13)   00CF 00 00 00 00 		 ALIGN 256	;
 13)   00D3 00 00 00 00 		 ALIGN 256	;
 13)   00D7 00 00 00 00 		 ALIGN 256	;
 13)   00DB 00 00 00 00 		 ALIGN 256	;
 13)   00DF 00 00 00 00 		 ALIGN 256	;
 13)   00E3 00 00 00 00 		 ALIGN 256	;
 13)   00E7 00 00 00 00 		 ALIGN 256	;
 13)   00EB 00 00 00 00 		 ALIGN 256	;
 13)   00EF 00 00 00 00 		 ALIGN 256	;
 13)   00F3 00 00 00 00 		 ALIGN 256	;
 13)   00F7 00 00 00 00 		 ALIGN 256	;
 13)   00FB 00 00 00 00 		 ALIGN 256	;
 13)   00FF 00          		 ALIGN 256	;
 42)   0100 F3          		@START: DI	;
 43)   0101 C3 DA 01    		 JP BOOT        ;SKIP TESTING	;SKIP TESTING
 45)   0104 C3 E0 04    		@IOS_CLRSCR: JP OS_CLRSCR	;
 46)   0107 C3 8D 04    		@IOS_RMVCURS: JP OS_RMVCURS	;
 47)   010A C3 79 04    		@IOS_PRNCURS: JP OS_PRNCURS	;
 48)   010D C3 06 20    		@IOS_CALCLINE: JP LCD_CALCLINE      ;TODO: VGA???	;TODO: VGA???
 49)   0110 C3 42 04    		@IOS_PRINTCHAR: JP OS_PRINTCHAR	;
 50)   0113 C3 D6 03    		@IOS_GETCHAR: JP GET_CHAR	;
 51)   0116 C3 A7 03    		@IOS_GETCHARNW: JP GET_CHARNW	;
 52)   0119 C3 70 10    		@IOS_DIRLIST: JP STRG_DIRLIST	;
 53)   011C C3 9C 10    		@IOS_DIRCHG: JP STRG_DIRCHG	;
 54)   011F C3 B4 10    		@IOS_OPNFILE: JP STRG_OPNFILE	;
 55)   0122 C3 3D 11    		@IOS_TPFILE: JP STRG_TPFILE	;
 56)   0125 C3 D3 10    		@IOS_CLSFILE: JP STRG_CLSFILE	;
 57)   0128 C3 E5 10    		@IOS_BLKWRITE: JP STRG_BLKWRITE	;
 58)   012B C3 08 11    		@IOS_BLKREAD: JP STRG_BLKREAD	;
 59)   012E C3 3C 10    		@IOS_GETPOS: JP STRG_GETPOS	;
 60)   0131 C3 56 10    		@IOS_SETPOS: JP STRG_SETPOS	;
 61)   0134 C3 37 10    		@IOS_GETSIZE: JP STRG_GETSIZE	;
 62)   0137 C3 25 10    		@IOS_GETEOF: JP STRG_GETEOF	;
 63)   013A C3 26 29    		@IOS_BN2BCD: JP BN2BCD	;
 64)   013D C3 01 08    		@IOS_DOCMD: JP CGDOCMD	;
 65)   0140 C3 E9 13    		@IOS_DSADJUST: JP DS1307_ADJUST	;
 66)   0143 C3 8C 13    		@IOS_DSGETNOW: JP DS1307_GETNOW	;
 67)   0146 C3 B8 15    		@IOS_L16BLOFF: JP LCD16_BLINKOFF	;
 68)   0149 C3 C6 15    		@IOS_L16BLON: JP LCD16_BLINKON	;
 69)   014C C3 69 15    		@IOS_L16CLR: JP LCD16_CLR	;
 70)   014F C3 8D 15    		@IOS_L16SETCRS: JP LCD16_SETCURS	;
 71)   0152 C3 9C 15    		@IOS_L16CRSOFF: JP LCD16_CURSOFF	;
 72)   0155 C3 AA 15    		@IOS_L16CRSON: JP LCD16_CURSON	;
 73)   0158 C3 40 15    		@IOS_L16NODISP: JP LCD16_NODISP	;
 74)   015B C3 4E 15    		@IOS_L16DISP: JP LCD16_DISP	;
 75)   015E C3 80 15    		@IOS_L16HOME: JP LCD16_HOME	;
 76)   0161 C3 E0 15    		@IOS_L16MVLEFT: JP LCD16_MOVLEFT	;
 77)   0164 C3 E6 15    		@IOS_L16MVRGHT: JP LCD16_MOVRIGHT	;
 78)   0167 C3 72 15    		@IOS_L16PRINT: JP LCD16_PRINT	;
 79)   016A C3 D4 15    		@IOS_L16SCLEFT: JP LCD16_SCRLEFT	;
 80)   016D C3 DA 15    		@IOS_L16SCRGHT: JP LCD16_SCRRIGHT	;
 81)   0170 C3 A7 23    		@IOS_CLRGRAPH: JP CLEARGRAPH	;
 82)   0173 C3 36 24    		@IOS_GRDRAWLNE: JP GR_DRAWLINE	;
 83)   0176 C3 D4 1E    		@IOS_GRREADPXL: JP LCD_READPIXEL ;TODO: CHANGE TO GRAPH READ PIXEL	;TODO: CHANGE TO GRAPH READ PIXEL
 84)   0179 C3 0D 26    		@IOS_GRCIRCLE: JP GR_CIRCLE	;
 85)   017C C3 36 1F    		@IOS_GRFILL: JP LCD_FILL  ;TODO: CHANGE TO GRAPH	;TODO: CHANGE TO GRAPH
 86)   017F C3 89 23    		@IOS_GRPLTPXL: JP PLOTP	;
 87)   0182 C3 91 2B    		@IOS_ADD32: JP ADD32	;
 88)   0185 C3 22 2B    		@IOS_MULT32: JP MULT32	;
 89)   0188 C3 00 00    		@IOS_SQRT32: JP 0000  ;TODO: MAKE ONE	;TODO: MAKE ONE
 96)   018B 06 05       		CN1: LD B, 5	;
 97)   018D 0E 00       		AGN1: LD C, 0	;
 98)   018F 3E 00       		 LD A, 0	;
 99)   0191 ED 79       		 OUT (C), A	;
100)   0193 0E 00       		 LD C, 0	;
101)   0195 3E FF       		 LD A, 255	;
102)   0197 ED 79       		 OUT (C), A	;
103)   0199 10 F2       		 DJNZ AGN1	;
108)   019B 11 01 00    		 LD DE, 1	;
109)   019E 3E 00       		 LD A, 0        ;WRITE 0	;WRITE 0
110)   01A0 4F          		 LD C, A	;
111)   01A1 21 00 40    		 LD HL, RAMAD	;
112)   01A4 06 08       		 LD B, 8	;
113)   01A6 77          		AGN2: LD (HL), A	;
114)   01A7 4E          		 LD C, (HL)	;
115)   01A8 B9          		 CP C	;
116)   01A9 C2 C3 01    		 JP NZ, ERR	;
117)   01AC 19          		 ADD HL, DE	;
118)   01AD C6 20       		 ADD A, 32       ;WRITE +32	;WRITE +32
119)   01AF 4F          		 LD C, A	;
120)   01B0 10 F4       		 DJNZ AGN2	;
122)   01B2 06 05       		 LD B, 5	;
123)   01B4 0E 08       		AGN3: LD C, 00001000B       ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
124)   01B6 3E 40       		 LD A, 64	;
125)   01B8 ED 79       		 OUT (C), A	;
126)   01BA C6 80       		 ADD A, 128	;
127)   01BC ED 79       		 OUT (C), A	;
128)   01BE 10 F4       		 DJNZ AGN3        ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
129)   01C0 C3 DA 01    		 JP BOOT	;
132)   01C3 0E 38       		ERR: LD C, 00111000B       ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
133)   01C5 3E 40       		 LD A, 64	;
134)   01C7 ED 79       		 OUT (C), A	;
136)   01C9 C3 C3 01    		 JP ERR         ;DO AGAIN PORT 1	;DO AGAIN PORT 1
141)   01CC 3E 01       		SETHISPEED: LD A, 1       ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
142)   01CE CD B0 0C    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
143)   01D1 C9          		 RET	;
145)   01D2 00 01 0A 0B 		MYMMUBANK:     DB 0,1,10,11,4,5,6,7	;
145)   01D6 04 05 06 07 		MYMMUBANK:     DB 0,1,10,11,4,5,6,7	;
149)   01DA F3          		@BOOT: DI	;
150)   01DB ED 56       		 IM 1	;
153)   01DD 0E 00       		MMUSETUP:   LD C,DEVMMU	;
154)   01DF AF          		  XOR A	;
155)   01E0 06 00       		 LD B,0.SHL.5	;
156)   01E2 ED 79       		 OUT (C),A	;
157)   01E4 3C          		 INC A	;
158)   01E5 06 20       		 LD B,1.SHL.5	;
159)   01E7 ED 79       		 OUT (C),A  	;
161)   01E9 3E 0A       		 LD A,10   ;VID MEM RAM	;VID MEM RAM
162)   01EB 06 40       		 LD B,2.SHL.5  	;
163)   01ED ED 79       		 OUT (C),A  	;
165)   01EF 3E 0B       		 LD A,11   ;VID MEM RAM	;VID MEM RAM
166)   01F1 06 60       		 LD B,3.SHL.5  	;
167)   01F3 ED 79       		 OUT (C),A  	;
169)   01F5 3E 04       		 LD A,4	;
170)   01F7 06 80       		 LD B,4.SHL.5	;
171)   01F9 ED 79       		 OUT (C),A  	;
172)   01FB 3C          		 INC A	;
173)   01FC 06 A0       		 LD B,5.SHL.5	;
174)   01FE ED 79       		 OUT (C),A  	;
175)   0200 3C          		 INC A	;
176)   0201 06 C0       		 LD B,6.SHL.5	;
177)   0203 ED 79       		 OUT (C),A  	;
178)   0205 3C          		 INC A	;
179)   0206 06 E0       		 LD B,7.SHL.5	;
180)   0208 ED 79       		 OUT (C),A 	;
183)   020A 3E 07       		INTFFPS: LD A,7	;
184)   020C D3 68       		IFFAGN: OUT (DEVINT), A	;
185)   020E 3D          		 DEC A	;
186)   020F C2 0C 02    		 JP NZ, IFFAGN    	;
188)   0212 31 FF FA    		 LD SP, STACKP	;
189)   0215 21 00 FE    		 LD HL,OSVARS       ;ZERO OS VARIABLES	;ZERO OS VARIABLES
190)   0218 AF          		SI_AGN: XOR A	;
191)   0219 77          		 LD (HL),A	;
192)   021A 23          		 INC HL	;
193)   021B 7C          		 LD A,H	;
194)   021C B5          		 OR L	;
195)   021D 20 F9       		 JR NZ,SI_AGN       ;HL=0000 WHEN OVERFLOW FROM FFFF  	;HL=0000 WHEN OVERFLOW FROM FFFF
197)   021F CD 79 0C    		 CALL INITMMU       ;PUT PAGES 0..7 IN RAM BANKS 0..7	;PUT PAGES 0..7 IN RAM BANKS 0..7
198)   0222 21 D2 01    		 LD HL,MYMMUBANK	;
199)   0225 11 FD FE    		 LD DE,BANKS	;
200)   0228 01 08 00    		 LD BC,8	;
201)   022B ED B0       		 LDIR        ;TO RAM PAGE 7 OS VARS	;TO RAM PAGE 7 OS VARS
203)   022D 3E 24       		 LD A,36        ;RANDOM SEED	;RANDOM SEED
204)   022F 32 6F FF    		 LD (RNDseed),A	;
206)   0232 CD 7E 05    		 CALL FF_CLR	;
207)   0235 CD A6 05    		 CALL EPROMOFF	;
211)   0238 CD C5 27    		 CALL SND_INIT  	;
214)   023B 3E 01       		 LD A, 1 ;12        ;12=9600 BPS, 1=115200BPS	;12        ;12=9600 BPS, 1=115200BPS
215)   023D CD B0 0C    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
216)   0240 21 D1 06    		 LD HL, STR00	;
217)   0243 CD D8 0C    		 CALL RS_TXT	;
220)   0246 CD 14 12    		 CALL I2C_INIT        ;INITIALIZE I2C	;INITIALIZE I2C
221)   0249 CD 8B 13    		 CALL DS1307_INIT      ;	;
222)   024C CD AD 13    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
223)   024F CD E8 14    		 CALL LCD16_INIT       ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
224)   0252 21 20 07    		 LD HL, SVER	;
225)   0255 CD 72 15    		 CALL LCD16_PRINT       ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
228)   0258 CD EE 0F    		 CALL STRG_INIT	;
229)   025B 21 08 07    		 LD HL, STR001	;
230)   025E CD D8 0C    		 CALL RS_TXT	;
238)   0261 21 B7 FE    		 LD HL,SCRNST	;
239)   0264 CB C6       		 SET 0,(HL) ;ENABLE LCD	;ENABLE LCD
240)   0266 CB CE       		 SET 1,(HL) ;ENABLE VGA	;ENABLE VGA
243)   0268 CD 06 1D    		 CALL LCD_INIT	;
244)   026B 21 00 00    		 LD HL, COL_BLACK	;
245)   026E 22 03 FE    		 LD (BCOLOR), HL	;
246)   0271 21 FF FF    		 LD HL, COL_WHITE	;
247)   0274 22 01 FE    		 LD (FCOLOR), HL	;
248)   0277 21 BE 06    		 LD HL, STRSCR	;
249)   027A CD D8 0C    		 CALL RS_TXT	;
250)   027D CD F7 20    		 CALL LCD_CLRSCR	;
251)   0280 AF          		 XOR A	;
252)   0281 32 0F FE    		 LD (SCRLN), A	;
253)   0284 3E 00       		 LD A, 0	;
254)   0286 32 0D FE    		 LD (CURSORX), A	;
255)   0289 3E 00       		 LD A, 0	;
256)   028B 32 0E FE    		 LD (CURSORY), A	;
259)   028E CD FE 15    		 CALL VGA_INIT	;
260)   0291 21 B1 06    		 LD HL, TXTMES	;
261)   0294 CD D8 0C    		 CALL RS_TXT	;
264)   0297 CD 68 0D    		 CALL PS2KBINIT	;
269)   029A CD 1A 0C    		 CALL COPYINTTAB	;
272)   029D 21 31 07    		 LD HL,OSVERMES	;
273)   02A0 CD E7 04    		 CALL OS_PRINTTEXT	;
278)   02A3 AF          		@MENU: XOR A	;
279)   02A4 32 0F FE    		 LD (SCRLN), A	;
280)   02A7 21 01 06    		 LD HL, STRMN	;
281)   02AA CD D8 0C    		 CALL RS_TXT       ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
282)   02AD 21 E7 06    		 LD HL, STR01	;
283)   02B0 CD D8 0C    		 CALL RS_TXT       ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
290)   02B3 3E 00       		 LD A, 0	;
291)   02B5 32 0D FE    		 LD (CURSORX), A	;
292)   02B8 32 0F FF    		 LD (VGATX_X), A	;
293)   02BB 3E 06       		 LD A, 6	;
294)   02BD 32 0E FE    		 LD (CURSORY), A	;
295)   02C0 32 10 FF    		 LD (VGATX_Y), A	;
296)   02C3 21 D2 05    		 LD HL, SMENU	;
297)   02C6 CD E7 04    		 CALL OS_PRINTTEXT	;
299)   02C9 CD D6 03    		 CALL GET_CHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
300)   02CC F5          		 PUSH AF	;
301)   02CD CD 8D 04    		 CALL OS_RMVCURS	;
302)   02D0 F1          		 POP AF	;
305)   02D1 FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
306)   02D3 CC FC 04    		 CALL Z, UPLOD	;
307)   02D6 FE 58       		 CP 'X'	;
308)   02D8 CA F3 04    		 JP Z, EXEC	;
309)   02DB FE 53       		 CP 'S'	;
310)   02DD CC CC 01    		 CALL Z,SETHISPEED	;
311)   02E0 FE 54       		 CP 'T'	;
312)   02E2 CC 4C 05    		 CALL Z, RSTST	;
313)   02E5 FE 59       		 CP 'Y'	;
314)   02E7 CC 62 05    		 CALL Z, RSTST2	;
315)   02EA FE 48       		 CP 'H'	;
316)   02EC CC 71 05    		 CALL Z, XMTST	;
317)   02EF FE 4A       		 CP 'J'	;
318)   02F1 CC 31 05    		 CALL Z, DNLOD	;
319)   02F4 FE 4B       		 CP 'K'	;
320)   02F6 CC 93 07    		 CALL Z,OS_COMMAND	;
321)   02F9 FE 43       		 CP 'C'	;
322)   02FB CC E0 04    		 CALL Z, OS_CLRSCR	;
323)   02FE FE 42       		 CP 'B'	;
324)   0300 CA 0E 03    		 JP Z, GOTOBBCBASIC	;
325)   0303 FE 4D       		 CP 'M'	;
326)   0305 CA 6B 03    		 JP Z,DOMAINMENU	;
327)   0308 CD 07 28    		 CALL SND_BEEP	;
328)   030B C3 A3 02    		 JP MENU	;
332)   030E 06 02       		@GOTOBBCBASIC: LD B,2	;
333)   0310 3E 02       		 LD A,2	;
334)   0312 CD 85 0C    		 CALL PUTPGINBANK	;
335)   0315 06 03       		 LD B,3	;
336)   0317 3E 03       		 LD A,3	;
337)   0319 CD 85 0C    		 CALL PUTPGINBANK	;
338)   031C C3 00 40    		 JP BBCBASIC	;
341)   031F 43 4C 45 41 		MAINMENU DEFM "CLEAR SCREEN"	;
341)   0323 52 20 53 43 		MAINMENU DEFM "CLEAR SCREEN"	;
341)   0327 52 45 45 4E 		MAINMENU DEFM "CLEAR SCREEN"	;
342)   032B 00          		 DB 0	;
343)   032C 42 42 43 20 		 DEFM "BBC BASIC"	;
343)   0330 42 41 53 49 		 DEFM "BBC BASIC"	;
343)   0334 43          		 DEFM "BBC BASIC"	;
344)   0335 00          		 DB 0	;
345)   0336 43 4F 4D 4D 		 DEFM "COMMAND PROMPT"	;
345)   033A 41 4E 44 20 		 DEFM "COMMAND PROMPT"	;
345)   033E 50 52 4F 4D 		 DEFM "COMMAND PROMPT"	;
345)   0342 50 54       		 DEFM "COMMAND PROMPT"	;
346)   0344 00          		 DB 0	;
347)   0345 53 45 54 20 		 DEFM "SET SERIAL TO 115KBPS"	;
347)   0349 53 45 52 49 		 DEFM "SET SERIAL TO 115KBPS"	;
347)   034D 41 4C 20 54 		 DEFM "SET SERIAL TO 115KBPS"	;
347)   0351 4F 20 31 31 		 DEFM "SET SERIAL TO 115KBPS"	;
347)   0355 35 4B 42 50 		 DEFM "SET SERIAL TO 115KBPS"	;
347)   0359 53          		 DEFM "SET SERIAL TO 115KBPS"	;
348)   035A 00          		 DB 0	;
349)   035B 52 45 54 55 		 DEFM "RETURN TO MENU"	;
349)   035F 52 4E 20 54 		 DEFM "RETURN TO MENU"	;
349)   0363 4F 20 4D 45 		 DEFM "RETURN TO MENU"	;
349)   0367 4E 55       		 DEFM "RETURN TO MENU"	;
350)   0369 00 00       		 DB 0,0	;
353)   036B 3E 02       		 LD A,VGA_GREEN	;
354)   036D 06 0B       		 LD B,VGA_YELLOW	;
355)   036F CD 78 18    		 CALL VGA_MIXCOLOR	;
356)   0372 32 72 FF    		 LD (MENUVCLR),A	;
357)   0375 21 3F 00    		 LD HL,COL_BLUE	;
358)   0378 22 73 FF    		 LD (MENULFORE),HL	;
359)   037B 21 FF FF    		 LD HL,COL_WHITE	;
360)   037E 22 75 FF    		 LD (MENULBACK),HL	;
362)   0381 21 1F 03    		 LD HL,MAINMENU	;
363)   0384 11 08 08    		 LD DE,8.SHL.8+8  ;PRINT AT 8,8	;PRINT AT 8,8
364)   0387 3E 01       		 LD A,1   ;SELECT ITEM 1	;SELECT ITEM 1
365)   0389 CD 17 2D    		 CALL CREATEMENU	;
366)   038C FE 01       		 CP 1    ;A THE MENU ITEM SELECTED	;A THE MENU ITEM SELECTED
367)   038E CC E0 04    		 CALL Z, OS_CLRSCR	;
368)   0391 FE 02       		 CP 2	;
369)   0393 CA 0E 03    		 JP Z, GOTOBBCBASIC	;
370)   0396 FE 03       		 CP 3	;
371)   0398 CC 93 07    		 CALL Z,OS_COMMAND	;
372)   039B FE 04       		 CP 4	;
373)   039D CC CC 01    		 CALL Z,SETHISPEED	;
374)   03A0 FE 05       		 CP 5	;
375)   03A2 CA A3 02    		 JP Z,MENU	;
376)   03A5 18 C4       		 JR DOMAINMENU	;
385)   03A7 D5          		@GET_CHARNW: PUSH DE	;
386)   03A8 CD A1 04    		 CALL OS_CHKCURS	;
387)   03AB AF          		 XOR A	;
389)   03AC CD 09 0D    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
390)   03AF 28 10       		 JR Z, CNW_TST2	;
391)   03B1 CD E2 0C    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
392)   03B4 CD 02 04    		 CALL CHKFKEYS	;
393)   03B7 FE 0D       		 CP 13        ;BEEP ON ENTER	;BEEP ON ENTER
394)   03B9 20 03       		 JR NZ,CNW_EX1	;
395)   03BB CD 07 28    		 CALL SND_BEEP	;
396)   03BE D1          		CNW_EX1: POP DE 	;
397)   03BF 37          		 SCF	;
398)   03C0 C9          		 RET	;
400)   03C1 CD 5A 0D    		CNW_TST2: CALL PS2ISK	;
401)   03C4 28 0E       		 JR Z, CNW_EXIT	;
402)   03C6 CD 4E 0D    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)  	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
403)   03C9 CD 02 04    		 CALL CHKFKEYS	;
404)   03CC FE 0D       		 CP 13        ;BEEP ON ENTER	;BEEP ON ENTER
405)   03CE 20 03       		 JR NZ,CNW_EX2	;
406)   03D0 CD 07 28    		 CALL SND_BEEP  	;
407)   03D3 37          		CNW_EX2: SCF	;
408)   03D4 D1          		CNW_EXIT: POP DE 	;
409)   03D5 C9          		 RET	;
416)   03D6 CD A1 04    		@GET_CHAR: CALL OS_CHKCURS	;
417)   03D9 AF          		 XOR A	;
419)   03DA CD 09 0D    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
420)   03DD 28 0F       		 JR Z, CW_TST2	;
421)   03DF CD E2 0C    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
422)   03E2 CD 02 04    		 CALL CHKFKEYS	;
423)   03E5 FE 0D       		 CP 13        ;BEEP ON ENTER	;BEEP ON ENTER
424)   03E7 20 03       		 JR NZ,CW_EX1	;
425)   03E9 CD 07 28    		 CALL SND_BEEP	;
426)   03EC 37          		CW_EX1: SCF	;
427)   03ED C9          		 RET	;
429)   03EE CD 5A 0D    		CW_TST2: CALL PS2ISK      ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
431)   03F1 28 E3       		 JR Z, GET_CHAR	;
432)   03F3 CD 4E 0D    		 CALL READCHAR	;
433)   03F6 CD 02 04    		 CALL CHKFKEYS	;
434)   03F9 FE 0D       		 CP 13	;
435)   03FB 20 03       		 JR NZ,CW_EX2	;
436)   03FD CD 07 28    		 CALL SND_BEEP	;
437)   0400 37          		CW_EX2: SCF	;
438)   0401 C9          		 RET	;
440)   0402 FE A5       		CHKFKEYS: CP 165	;
441)   0404 CC 17 04    		 CALL Z,DOF5	;
442)   0407 FE A6       		 CP 166	;
443)   0409 CC 1E 04    		 CALL Z,DOF6	;
444)   040C FE A7       		 CP 167	;
445)   040E CC 25 04    		 CALL Z,DOF7	;
446)   0411 FE A8       		 CP 168	;
447)   0413 CC 2C 04    		 CALL Z,DOF8	;
448)   0416 C9          		 RET	;
451)   0417 CD 0E 28    		DOF5: CALL SND_BEEP2	;
452)   041A AF          		 XOR A	;
453)   041B C3 12 16    		 JP VGA_SETLOWGR	;
455)   041E CD 0E 28    		DOF6: CALL SND_BEEP2	;
456)   0421 AF          		 XOR A	;
457)   0422 C3 1D 16    		 JP VGA_SETLOWTX	;
459)   0425 CD 0E 28    		DOF7: CALL SND_BEEP2	;
460)   0428 AF          		 XOR A	;
461)   0429 C3 28 16    		 JP VGA_SETHIGR	;
463)   042C CD 0E 28    		DOF8: CALL SND_BEEP2	;
464)   042F AF          		 XOR A	;
465)   0430 C3 33 16    		 JP VGA_SETHITX	;
470)   0433 7A          		@OS_GOTOXY: LD A, D	;
471)   0434 32 0D FE    		 LD (CURSORX), A	;
472)   0437 32 0F FF    		 LD (VGATX_X), A	;
473)   043A 7B          		 LD A, E	;
474)   043B 32 0E FE    		 LD (CURSORY), A	;
475)   043E 32 10 FF    		 LD (VGATX_Y), A	;
476)   0441 C9          		 RET	;
481)   0442 F5          		@OS_PRINTCHAR: PUSH AF	;
482)   0443 3A B7 FE    		 LD A,(SCRNST)	;
483)   0446 E6 01       		 AND 1	;
484)   0448 28 05       		 JR Z, OSPCNX	;
485)   044A F1          		 POP AF	;
486)   044B F5          		 PUSH AF	;
487)   044C CD 4C 1F    		 CALL LCD_PRCH	;
488)   044F D1          		OSPCNX: POP DE	;
489)   0450 3A B7 FE    		 LD A,(SCRNST)	;
490)   0453 E6 02       		 AND 2	;
491)   0455 C8          		 RET Z	;
492)   0456 D5          		 PUSH DE	;
493)   0457 F1          		 POP AF    ;GET THE FLAGS BACK AND THE CHAR	;GET THE FLAGS BACK AND THE CHAR
494)   0458 CD 00 17    		 CALL VGA_PRCH	;
495)   045B C9          		 RET	;
499)   045C E5          		@OS_MSG: PUSH HL	;
500)   045D 3A B7 FE    		 LD A,(SCRNST)	;
501)   0460 E6 01       		 AND 1	;
502)   0462 28 03       		 JR Z, OSMSNX	;
503)   0464 CD 37 21    		 CALL LCD_MSG	;
504)   0467 E1          		OSMSNX: POP HL	;
505)   0468 3A B7 FE    		 LD A,(SCRNST)	;
506)   046B E6 01       		 AND 1	;
507)   046D 28 F8       		 JR Z, OSMSNX	;
508)   046F 3A B7 FE    		 LD A,(SCRNST)	;
509)   0472 E6 02       		 AND 2	;
510)   0474 C8          		 RET Z	;
511)   0475 CD 5A 17    		 CALL VGA_PRINT	;
512)   0478 C9          		 RET	;
514)   0479 3A B7 FE    		@OS_PRNCURS: LD A,(SCRNST)	;
515)   047C E6 01       		 AND 1	;
516)   047E 28 03       		 JR Z, OSPSNX	;
517)   0480 CD B5 20    		 CALL LCD_PRNCURS	;
518)   0483 3A B7 FE    		OSPSNX: LD A,(SCRNST)	;
519)   0486 E6 02       		 AND 2	;
520)   0488 C8          		 RET Z	;
521)   0489 CD 47 19    		 CALL VGA_PRNCURS	;
522)   048C C9          		 RET	;
524)   048D 3A B7 FE    		@OS_RMVCURS: LD A,(SCRNST)	;
525)   0490 E6 01       		 AND 1	;
526)   0492 28 03       		 JR Z, OSRCNX	;
527)   0494 CD B0 20    		 CALL LCD_RMVCURS	;
528)   0497 3A B7 FE    		OSRCNX: LD A,(SCRNST)	;
529)   049A E6 02       		 AND 2	;
530)   049C C8          		 RET Z	;
531)   049D CD 29 19    		 CALL VGA_RMVCURS	;
532)   04A0 C9          		 RET	;
535)   04A1 F5          		@OS_CHKCURS: PUSH AF	;
536)   04A2 3A BD FE    		 LD A, (TIMECTR)	;
537)   04A5 CB 67       		 BIT 4, A	;
538)   04A7 28 11       		 JR Z, CCSHOW        ;IF SET SHOW	;IF SET SHOW
539)   04A9 3A 11 FE    		CCHIDE: LD A, (CURSSTAT)	;
540)   04AC CB 4F       		 BIT 1, A	;
541)   04AE 20 1C       		 JR NZ, CCEX        ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
542)   04B0 CB CF       		 SET 1, A	;
543)   04B2 32 11 FE    		 LD (CURSSTAT), A	;
544)   04B5 CD 8D 04    		 CALL OS_RMVCURS	;
545)   04B8 18 12       		 JR CCEX	;
546)   04BA 3A 11 FE    		CCSHOW: LD A, (CURSSTAT)	;
547)   04BD CB 4F       		 BIT 1, A	;
548)   04BF 28 0B       		 JR Z, CCEX        ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
549)   04C1 CB 8F       		 RES 1, A	;
550)   04C3 32 11 FE    		 LD (CURSSTAT), A	;
551)   04C6 CD 79 04    		 CALL OS_PRNCURS	;
552)   04C9 CD CE 04    		 CALL OS_SHOWTIME	;
553)   04CC F1          		CCEX: POP AF	;
554)   04CD C9          		 RET	;
557)   04CE CD 32 14    		@OS_SHOWTIME: CALL DS1307_GETTIME	;
558)   04D1 D8          		 RET C       ;ERROR RET  	;ERROR RET
560)   04D2 16 00       		 LD D,0 ;COL	;COL
561)   04D4 1E 01       		 LD E,1 ;ROW	;ROW
562)   04D6 CD 8D 15    		 CALL LCD16_SETCURS	;
563)   04D9 21 9F FE    		 LD HL,TIMMSG+1      ;WE NEED 17 CHARS SO OMIT THE FIRST 	;WE NEED 17 CHARS SO OMIT THE FIRST
564)   04DC CD 72 15    		 CALL LCD16_PRINT	;
565)   04DF C9          		 RET	;
567)   04E0 CD F7 20    		@OS_CLRSCR: CALL LCD_CLRSCR	;
568)   04E3 CD F5 16    		 CALL VGA_CLRSCR	;
569)   04E6 C9          		 RET	;
573)   04E7 7E          		@OS_PRINTTEXT: LD A,(HL)	;
574)   04E8 FE 00       		 CP 0	;
575)   04EA C8          		 RET Z	;
576)   04EB E5          		 PUSH HL	;
577)   04EC CD 42 04    		 CALL OS_PRINTCHAR	;
578)   04EF E1          		 POP HL	;
579)   04F0 23          		 INC HL	;
580)   04F1 18 F4       		 JR OS_PRINTTEXT 	;
591)   04F3 3E 05       		 LD A, 5	;
592)   04F5 CD D8 28    		 CALL SCPRN	;
594)   04F8 2A BA FE    		 LD HL, (PRGEX)	;
601)   04FB E9          		 JP (HL)	;
608)   04FC F3          		UPLOD: DI	;
613)   04FD CD E2 0C    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
614)   0500 6F          		 LD L, A	;
615)   0501 CD E2 0C    		 CALL RS_RX	;
616)   0504 67          		 LD H, A	;
617)   0505 CD E2 0C    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
618)   0508 4F          		 LD C, A	;
619)   0509 CD E2 0C    		 CALL RS_RX	;
620)   050C 47          		 LD B, A	;
622)   050D 22 BA FE    		 LD (PRGEX), HL	;
623)   0510 3A BB FE    		 LD A, (PRGEX + 1)	;
631)   0513 FE 80       		 CP $80	;
632)   0515 DC AE 05    		 CALL C, EPROMON       ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
634)   0518 E5          		NORWR: PUSH HL	;
635)   0519 CD E2 0C    		NXB: CALL RS_RX	;
636)   051C 77          		 LD (HL), A	;
637)   051D 23          		 INC HL	;
638)   051E 0B          		 DEC BC	;
639)   051F 78          		 LD A, B	;
640)   0520 B1          		 OR C	;
641)   0521 20 F6       		 JR NZ, NXB       ;LOOP ALL BYTES	;LOOP ALL BYTES
642)   0523 CD A6 05    		 CALL EPROMOFF	;
647)   0526 3E 05       		 LD A, 5	;
648)   0528 CD D8 28    		 CALL SCPRN	;
649)   052B CD E5 28    		 CALL DELAY	;
651)   052E E1          		 POP HL	;
654)   052F FB          		 EI	;
655)   0530 C9          		 RET	;
666)   0531 CD E2 0C    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
667)   0534 6F          		 LD L, A	;
668)   0535 CD E2 0C    		 CALL RS_RX	;
669)   0538 67          		 LD H, A	;
670)   0539 CD E2 0C    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
671)   053C 4F          		 LD C, A	;
672)   053D CD E2 0C    		 CALL RS_RX	;
673)   0540 47          		 LD B, A	;
675)   0541 7E          		NXB3: LD A, (HL)	;
676)   0542 CD C9 0C    		 CALL RS_TX       ;SEND BYTE	;SEND BYTE
677)   0545 23          		 INC HL	;
678)   0546 0B          		 DEC BC	;
679)   0547 78          		 LD A, B	;
680)   0548 B1          		 OR C	;
681)   0549 20 F6       		 JR NZ, NXB3       ;LOOP ALL BYTES	;LOOP ALL BYTES
682)   054B C9          		 RET	;
684)   054C 00          		RSTST: NOP        ;GET A KEY FROM RS232	;GET A KEY FROM RS232
685)   054D 06 0A       		 LD B, 10	;
686)   054F C5          		TEN: PUSH BC	;
687)   0550 CD E2 0C    		 CALL RS_RX	;
689)   0553 CD C9 0C    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
691)   0556 3E 20       		 LD A, ' '	;
693)   0558 3E 52       		 LD A, 'R'	;
696)   055A CD F2 28    		 CALL DEL2	;
698)   055D C1          		 POP BC	;
699)   055E 10 EF       		 DJNZ TEN	;
701)   0560 AF          		 XOR A	;
702)   0561 C9          		 RET	;
704)   0562 00          		RSTST2: NOP        ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
705)   0563 06 FF       		 LD B, 255	;
706)   0565 C5          		TEN2: PUSH BC	;
707)   0566 CD E2 0C    		 CALL RS_RX	;
709)   0569 CD C9 0C    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
711)   056C C1          		 POP BC	;
712)   056D 10 F6       		 DJNZ TEN2	;
713)   056F AF          		 XOR A	;
714)   0570 C9          		 RET	;
717)   0571 00          		XMTST: NOP        ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
718)   0572 06 FF       		 LD B, 255	;
719)   0574 C5          		TEN3: PUSH BC	;
720)   0575 78          		 LD A, B	;
721)   0576 CD C9 0C    		 CALL RS_TX       ;SEND  THE BYTE	;SEND  THE BYTE
722)   0579 C1          		 POP BC	;
723)   057A 10 F8       		 DJNZ TEN3	;
724)   057C AF          		 XOR A	;
725)   057D C9          		 RET	;
731)   057E AF          		 XOR A	;
732)   057F 32 B2 FE    		 LD (FFSTAT), A	;
733)   0582 C9          		 RET	;
736)   0583 04          		@FF_OFF: INC B        ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
737)   0584 AF          		 XOR A	;
738)   0585 37          		 SCF	;
739)   0586 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
740)   0587 10 FD       		 DJNZ SBAGN	;
741)   0589 2F          		 CPL         ;INVERSE BITS ON A	;INVERSE BITS ON A
742)   058A 47          		 LD B, A	;
743)   058B 3A B2 FE    		 LD A, (FFSTAT)	;
744)   058E A0          		 AND B         ;ZERO THE BIT	;ZERO THE BIT
745)   058F 32 B2 FE    		 LD (FFSTAT), A	;
746)   0592 D3 08       		 OUT (DEVFFS), A	;
747)   0594 C9          		 RET	;
750)   0595 04          		@FF_ON: INC B         ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
751)   0596 AF          		 XOR A	;
752)   0597 37          		 SCF	;
753)   0598 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
754)   0599 10 FD       		 DJNZ SBAGN	;
755)   059B 47          		 LD B, A	;
756)   059C 3A B2 FE    		 LD A, (FFSTAT)	;
757)   059F B0          		 OR B         ;SET THE BIT	;SET THE BIT
758)   05A0 32 B2 FE    		 LD (FFSTAT), A	;
759)   05A3 D3 08       		 OUT (DEVFFS), A	;
760)   05A5 C9          		 RET	;
762)   05A6 C5          		@EPROMOFF: PUSH BC	;
763)   05A7 06 00       		 LD B, 0	;
764)   05A9 CD 83 05    		 CALL FF_OFF	;
765)   05AC C1          		 POP BC	;
766)   05AD C9          		 RET	;
768)   05AE C5          		@EPROMON: PUSH BC	;
769)   05AF 06 00       		 LD B, 0	;
770)   05B1 CD 95 05    		 CALL FF_ON	;
771)   05B4 C1          		 POP BC	;
772)   05B5 C9          		 RET	;
778)   05B6 F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
779)   05B7 26 00       		 LD H, 0	;
780)   05B9 6F          		 LD L, A	;
781)   05BA 11 C2 FE    		 LD DE, MYNUM	;
782)   05BD CD 0C 29    		 CALL OUTASC	;
784)   05C0 3E 0A       		 LD A, 10	;
785)   05C2 12          		 LD (DE), A	;
786)   05C3 13          		 INC DE	;
787)   05C4 3E 0D       		 LD A, 13	;
788)   05C6 12          		 LD (DE), A	;
789)   05C7 13          		 INC DE	;
790)   05C8 AF          		 XOR A	;
791)   05C9 12          		 LD (DE), A	;
793)   05CA 21 C2 FE    		 LD HL, MYNUM	;
794)   05CD CD D8 0C    		 CALL RS_TXT	;
795)   05D0 F1          		 POP AF	;
796)   05D1 C9          		 RET	;
803)   05D2 55 3A 55 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05D6 20 4A 3A 44 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05DA 4E 20 58 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05DE 52 55 4E 20 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05E2 43 3A 43 4C 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05E6 53 20 42 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05EA 42 41 53 49 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05EE 43 20 4B 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05F2 43 4D 44 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05F6 52 4D 54 20 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05FA 4D 3A 4D 45 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
803)   05FE 4E 55       		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
804)   0600 00          		 DB 0	;
806)   0601 0A 0D       		STRMN: DB 10,13	;
808)   0603 55 3A 55 50 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   0607 4C 4F 41 44 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   060B 20 4A 3A 44 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   060F 4F 57 4E 4C 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   0613 44 20 53 3A 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   0617 31 31 35 4B 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   061B 42 50 53 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   061F 58 3A 52 55 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   0623 4E 20 43 3A 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   0627 43 4C 53 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   062B 42 3A 42 41 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   062F 53 49 43 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   0633 4B 3A 43 4D 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   0637 44 20 50 52 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   063B 4F 4D 50 54 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   063F 20 4D 3A 4D 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
808)   0643 45 4E 55    		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
809)   0646 0A 0D 00    		 DB 10,13,0	;
812)   0649 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
812)   064D 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
812)   0651 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
812)   0655 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
813)   0658 00          		 DB 0	;
815)   0659 52 53 32 33 		STR1: DEFM "RS232 INIT"	;
815)   065D 32 20 49 4E 		STR1: DEFM "RS232 INIT"	;
815)   0661 49 54       		STR1: DEFM "RS232 INIT"	;
816)   0663 00          		 DB 0	;
818)   0664 50 52 4F 47 		STR2: DEFM "PROGRAM HALTED"	;
818)   0668 52 41 4D 20 		STR2: DEFM "PROGRAM HALTED"	;
818)   066C 48 41 4C 54 		STR2: DEFM "PROGRAM HALTED"	;
818)   0670 45 44       		STR2: DEFM "PROGRAM HALTED"	;
819)   0672 00          		 DB 0	;
821)   0673 57 41 49 54 		STR02: DEFM "WAITING..."	;
821)   0677 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
821)   067B 2E 2E       		STR02: DEFM "WAITING..."	;
822)   067D 00          		 DB 0	;
824)   067E 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
824)   0682 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
824)   0686 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
824)   068A 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
825)   068C 00          		 DB 0	;
827)   068D 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
827)   0691 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
827)   0695 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
828)   0699 00          		 DB 0	;
830)   069A 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
830)   069E 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
830)   06A2 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
831)   06A5 00          		 DB 0	;
833)   06A6 49 4D 41 47 		STIMG: DEFM "IMAGE COPY"	;
833)   06AA 45 20 43 4F 		STIMG: DEFM "IMAGE COPY"	;
833)   06AE 50 59       		STIMG: DEFM "IMAGE COPY"	;
834)   06B0 00          		 DB 0	;
836)   06B1 53 43 52 45 		TXTMES: DEFM "SCREEN READY"	;
836)   06B5 45 4E 20 52 		TXTMES: DEFM "SCREEN READY"	;
836)   06B9 45 41 44 59 		TXTMES: DEFM "SCREEN READY"	;
837)   06BD 00          		 DB 0	;
839)   06BE 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
839)   06C2 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
839)   06C6 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
839)   06CA 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
840)   06CE 0A 0D 00    		 DB 10,13,0	;
842)   06D1 0A 0D       		STR00: DB 10,13	;
843)   06D3 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
843)   06D7 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
843)   06DB 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
843)   06DF 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
843)   06E3 44          		 DEFM "RS232 INITIALIZED"	;
844)   06E4 0A 0D 00    		 DB 10,13,0	;
846)   06E7 0A 0D       		STR01: DB 10,13	;
847)   06E9 57 41 49 54 		 DEFM "WAITING..."	;
847)   06ED 49 4E 47 2E 		 DEFM "WAITING..."	;
847)   06F1 2E 2E       		 DEFM "WAITING..."	;
848)   06F3 0A 0D 00    		 DB 10,13,0	;
849)   06F6 00          		 DB 0	;
851)   06F7 0A 0D       		STR06: DB 10,13	;
852)   06F9 4B 45 59 20 		 DEFM "KEY PRESSED"	;
852)   06FD 50 52 45 53 		 DEFM "KEY PRESSED"	;
852)   0701 53 45 44    		 DEFM "KEY PRESSED"	;
853)   0704 0A 0D 00    		 DB 10,13,0	;
854)   0707 00          		 DB 0	;
856)   0708 0A 0D       		STR001: DB 10,13	;
857)   070A 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
857)   070E 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
857)   0712 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
857)   0716 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
857)   071A 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
858)   071D 0A 0D 00    		 DB 10,13,0	;
860)   0720 41 54 4C 41 		SVER: DEFM "ATLAS OS VER"	;
860)   0724 53 20 4F 53 		SVER: DEFM "ATLAS OS VER"	;
860)   0728 20 56 45 52 		SVER: DEFM "ATLAS OS VER"	;
861)   072C 30          		 DEFB MJVER	;
862)   072D 2E          		 DEFB '.'	;
863)   072E 34 38       		 DEFB MNVER1,MNVER2	;
864)   0730 00          		 DEFB 0	;
866)   0731 41 54 4C 41 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
866)   0735 53 20 4D 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
866)   0739 64 75 6C 61 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
866)   073D 72 20 5A 38 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
866)   0741 30 20 43 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
866)   0745 6D 70 75 74 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
866)   0749 65 72       		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
867)   074B 0A 0D       		 DEFB 0AH,0DH	;
868)   074D 4F 70 65 72 		 DEFM "Operating System Version "  	;
868)   0751 61 74 69 6E 		 DEFM "Operating System Version "  	;
868)   0755 67 20 53 79 		 DEFM "Operating System Version "  	;
868)   0759 73 74 65 6D 		 DEFM "Operating System Version "  	;
868)   075D 20 56 65 72 		 DEFM "Operating System Version "  	;
868)   0761 73 69 6F 6E 		 DEFM "Operating System Version "  	;
868)   0765 20          		 DEFM "Operating System Version "  	;
869)   0766 30          		 DEFB MJVER	;
870)   0767 2E          		 DEFB '.'	;
871)   0768 34 38       		 DEFB MNVER1,MNVER2	;
872)   076A 0A 0D       		 DEFB 0AH,0DH	;
873)   076C 43 44 65 73 		 DEFM "CDesp 2020-22"	;
873)   0770 70 20 32 30 		 DEFM "CDesp 2020-22"	;
873)   0774 32 30 2D 32 		 DEFM "CDesp 2020-22"	;
873)   0778 32          		 DEFM "CDesp 2020-22"	;
874)   0779 0A 0D       		 DEFB 0AH,0DH    	;
875)   077B 52 41 4D 3A 		 DEFM "RAM: 4000h,TOP: FA00h"	;
875)   077F 20 34 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
875)   0783 30 68 2C 54 		 DEFM "RAM: 4000h,TOP: FA00h"	;
875)   0787 4F 50 3A 20 		 DEFM "RAM: 4000h,TOP: FA00h"	;
875)   078B 46 41 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
875)   078F 68          		 DEFM "RAM: 4000h,TOP: FA00h"	;
876)   0790 0A 0D       		 DEFB 0AH,0DH	;
877)   0792 00          		 DEFB 00H	;
 11)   0793 3E 0F       		@OS_COMMAND:   LD A, VGA_WHITE	;
 12)   0795 32 0D FF    		 LD (VGAFCOL), A	;
 13)   0798 3E 04       		 LD A, VGA_NAVY	;
 14)   079A 32 0E FF    		 LD (VGABCOL), A	;
 15)   079D 21 A3 07    		 LD HL,OS_CMDGET	;
 16)   07A0 22 3F FF    		 LD (COMDGET),HL	;
 19)   07A3 3A 0D FE    		OS_CMDGET:     LD A,(CURSORX)	;
 20)   07A6 67          		               LD H,A	;
 21)   07A7 3A 0E FE    		               LD A,(CURSORY)	;
 22)   07AA 84          		               ADD H	;
 23)   07AB FE 00       		               CP 0	;
 24)   07AD 28 0C       		               JR Z,CGSKP	;
 25)   07AF 3E 0D       		               LD A,CR	;
 26)   07B1 CD 42 04    		               CALL OS_PRINTCHAR	;
 27)   07B4 AF          		               XOR A	;
 28)   07B5 32 0D FE    		 LD (CURSORX), A	;
 29)   07B8 32 0F FF    		 LD (VGATX_X), A	;
 30)   07BB 3E 23       		CGSKP:         LD A,'#'        ;PROMPT	;PROMPT
 31)   07BD CD 42 04    		               CALL OS_PRINTCHAR	;
 32)   07C0 21 17 FF    		               LD HL,COMDBUF	;
 33)   07C3 E5          		CGNXCHAR:      PUSH HL	;
 34)   07C4 CD D6 03    		               CALL GET_CHAR	;
 35)   07C7 E1          		               POP HL	;
 36)   07C8 FE 00       		               CP 0	;
 37)   07CA 28 F7       		               JR Z,CGNXCHAR 	;
 38)   07CC FE 20       		               CP 32	;
 39)   07CE 30 21       		               JR NC,CGSVCHAR	;
 41)   07D0 FE 06       		               CP 6                    ;BACKSPACE	;BACKSPACE
 42)   07D2 20 17       		               JR NZ,CGTSTCH1                	;
 44)   07D4 2B          		               DEC HL                	;
 45)   07D5 3A 0F FF    		               LD A,(VGATX_X)	;
 46)   07D8 FE 01       		               CP 1                  ;CHECK START OF LINE  	;CHECK START OF LINE
 47)   07DA 20 05       		               JR NZ,CGBS	;
 48)   07DC 21 17 FF    		               LD HL,COMDBUF           ;WE AR AT START	;WE AR AT START
 49)   07DF 18 E2       		               JR CGNXCHAR	;
 51)   07E1 3E 08       		CGBS:          LD A,8	;
 52)   07E3 CD F8 07    		               CALL CGDOPRNCH	;
 53)   07E6 3E 00       		               LD A,0	;
 54)   07E8 77          		               LD (HL),A	;
 55)   07E9 18 D8       		               JR CGNXCHAR	;
 56)   07EB FE 0D       		CGTSTCH1:      CP CR                   ;ENTER	;ENTER
 57)   07ED 28 12       		               JR Z,CGDOCMD            ;EXECUTE THE COMMAND	;EXECUTE THE COMMAND
 58)   07EF 18 D2       		               JR CGNXCHAR             ;NO MORE TESTING NO PRINATBLE CHARS	;NO MORE TESTING NO PRINATBLE CHARS
 59)   07F1 CD F8 07    		CGSVCHAR:      CALL CGDOPRNCH          ;SAVE CHAR TO BUFFER	;SAVE CHAR TO BUFFER
 60)   07F4 77          		               LD (HL),A	;
 61)   07F5 23          		               INC HL	;
 62)   07F6 18 CB       		               JR CGNXCHAR	;
 63)   07F8 E5          		CGDOPRNCH:     PUSH HL	;
 64)   07F9 F5          		               PUSH AF	;
 65)   07FA 37          		 SCF	;
 66)   07FB CD 42 04    		               CALL OS_PRINTCHAR	;
 67)   07FE F1          		               POP AF	;
 68)   07FF E1          		               POP HL	;
 69)   0800 C9          		               RET	;
 70)   0801 E5          		@CGDOCMD:      PUSH HL	;
 71)   0802 F5          		               PUSH AF	;
 72)   0803 CD 8D 04    		               CALL OS_RMVCURS         ;REMOVE CURSOR	;REMOVE CURSOR
 73)   0806 F1          		               POP AF	;
 74)   0807 E1          		               POP HL	;
 75)   0808 CD F8 07    		 CALL CGDOPRNCH	;
 76)   080B AF          		               XOR A	;
 77)   080C 77          		               LD (HL),A	;
 78)   080D 21 17 FF    		               LD HL,COMDBUF	;
 85)   0810 CD 6C 08    		 CALL SKIPSP	;
 86)   0813 FE 0D       		 CP CR	;
 87)   0815 C8          		 RET Z	;
 88)   0816 FE 7C       		 CP '|'	;
 89)   0818 C8          		 RET Z	;
 92)   0819 EB          		 EX DE, HL	;
 93)   081A 21 7B 08    		 LD HL, COMDS	;
 94)   081D 1A          		OSCLI0: LD A, (DE)	;
 95)   081E CD 73 08    		 CALL UPPRC	;
 96)   0821 BE          		 CP (HL)	;
 97)   0822 28 0B       		 JR Z, OSCLI2	;
 98)   0824 38 31       		 JR C, HUH	;
 99)   0826 CB 7E       		OSCLI1: BIT 7, (HL)	;
100)   0828 23          		 INC HL	;
101)   0829 28 FB       		 JR Z, OSCLI1	;
102)   082B 23          		 INC HL	;
103)   082C 23          		 INC HL	;
104)   082D 18 EE       		 JR OSCLI0	;
106)   082F D5          		OSCLI2: PUSH DE	;
107)   0830 13          		OSCLI3: INC DE	;
108)   0831 23          		 INC HL	;
109)   0832 1A          		 LD A, (DE)	;
110)   0833 CD 73 08    		 CALL UPPRC	;
111)   0836 FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
112)   0838 28 0A       		 JR Z, OSCLI4	;
113)   083A AE          		 XOR (HL)	;
114)   083B 28 F3       		 JR Z, OSCLI3	;
115)   083D FE 80       		 CP 80H	;
116)   083F 28 03       		 JR Z, OSCLI4	;
117)   0841 D1          		 POP DE	;
118)   0842 18 E2       		 JR OSCLI1	;
120)   0844 F1          		OSCLI4: POP AF	;
121)   0845 13          		 INC DE	;
122)   0846 CB 7E       		OSCLI5: BIT 7, (HL)	;
123)   0848 23          		 INC HL	;
124)   0849 28 FB       		 JR Z, OSCLI5	;
125)   084B 7E          		 LD A, (HL)	;
126)   084C 23          		 INC HL	;
127)   084D 66          		 LD H, (HL)	;
128)   084E 6F          		 LD L, A	;
129)   084F E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
130)   0850 EB          		 EX DE, HL	;
131)   0851 E5          		 PUSH HL	;
132)   0852 FD E1       		 POP IY	;
133)   0854 C3 6C 08    		 JP SKIPSP	;
135)   0857 3E FE       		HUH: LD A, 254        	;
136)   0859 CD 9D 09    		 CALL OSERROR	;
137)   085C 4F 53 20 42 		 DEFM 'OS Bad command'	;
137)   0860 61 64 20 63 		 DEFM 'OS Bad command'	;
137)   0864 6F 6D 6D 61 		 DEFM 'OS Bad command'	;
137)   0868 6E 64       		 DEFM 'OS Bad command'	;
138)   086A 0D 00       		 DEFB    13,0	;
140)   086C 7E          		SKIPSP: LD A, (HL)	;
141)   086D FE 20       		 CP ' '	;
142)   086F C0          		 RET NZ	;
143)   0870 23          		 INC HL	;
144)   0871 18 F9       		 JR SKIPSP	;
146)   0873 E6 7F       		UPPRC: AND 7FH	;
147)   0875 FE 60       		 CP '`'	;
148)   0877 D8          		 RET C	;
149)   0878 E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
150)   087A C9          		 RET	;
154)   087B 42 59       		COMDS: DEFM  "BY"	;
155)   087D C5          		 DEFB    'E'+80H	;
156)   087E BE 09       		 DEFW BYE	;
157)   0880 43          		 DEFM  "C"	;
158)   0881 C4          		 DEFB    'D'+80H	;
159)   0882 7F 0A       		 DEFW DRV_CD	;
160)   0884 43 4C       		               DEFM "CL"	;
161)   0886 D3          		               DEFB 'S'+80H	;
162)   0887 C1 09       		               DEFW DOCLS	;
163)   0889 44 49       		 DEFM "DI"	;
164)   088B D2          		 DEFB 'R'+80H	;
165)   088C 69 0A       		 DEFW DRV_DIR	;
166)   088E 45 58 45    		               DEFM "EXE"	;
167)   0891 C3          		               DEFB 'C'+80H	;
168)   0892 00 0A       		               DEFW DOEXEC	;
169)   0894 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
169)   0898 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
169)   089C 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
170)   089F C6          		 DEFB 'F'+80H	;
171)   08A0 1F 0B       		 DEFW LCD_BLINKOF	;
172)   08A2 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
172)   08A6 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
172)   08AA 4B 4F       		 DEFM  "LCD_BLINKO"	;
173)   08AC CE          		 DEFB 'N'+80H	;
174)   08AD 25 0B       		 DEFW LCD_BLINKON	;
175)   08AF 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
175)   08B3 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
176)   08B7 D2          		 DEFB 'R'+80H	;
177)   08B8 2B 0B       		 DEFW LCD_CLR	;
178)   08BA 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
178)   08BE 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
178)   08C2 4F 52 41    		 DEFM  "LCD_CURSORA"	;
179)   08C5 D4          		 DEFB 'T'+80H	;
180)   08C6 31 0B       		 DEFW LCD_CURSAT	;
181)   08C8 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
181)   08CC 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
181)   08D0 4F 46       		 DEFM  "LCD_CURSOF"	;
182)   08D2 C6          		 DEFB 'F'+80H	;
183)   08D3 4E 0B       		 DEFW LCD_CURSOF	;
184)   08D5 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
184)   08D9 43 55 52 53 		 DEFM  "LCD_CURSO"	;
184)   08DD 4F          		 DEFM  "LCD_CURSO"	;
185)   08DE CE          		 DEFB 'N'+80H	;
186)   08DF 54 0B       		 DEFW LCD_CURSON	;
187)   08E1 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
187)   08E5 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
187)   08E9 4F 46       		 DEFM  "LCD_DISPOF"	;
188)   08EB C6          		 DEFB 'F'+80H	;
189)   08EC 5A 0B       		 DEFW LCD_DISPOF	;
190)   08EE 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
190)   08F2 44 49 53 50 		 DEFM  "LCD_DISPO"	;
190)   08F6 4F          		 DEFM  "LCD_DISPO"	;
191)   08F7 CE          		 DEFB 'N'+80H	;
192)   08F8 60 0B       		 DEFW LCD_DISPON	;
193)   08FA 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
193)   08FE 48 4F 4D    		 DEFM  "LCD_HOM"	;
194)   0901 C5          		 DEFB 'E'+80H	;
195)   0902 80 15       		 DEFW LCD16_HOME	;
196)   0904 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
196)   0908 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
196)   090C 45 46       		 DEFM  "LCD_MOVLEF"	;
197)   090E D4          		 DEFB 'T'+80H	;
198)   090F 6C 0B       		 DEFW LCD_MOVLFT	;
199)   0911 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
199)   0915 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
199)   0919 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
200)   091C D4          		 DEFB 'T'+80H	;
201)   091D 72 0B       		 DEFW LCD_MOVRGT	;
202)   091F 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
202)   0923 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
203)   0927 D4          		 DEFB 'T'+80H	;
204)   0928 78 0B       		 DEFW LCD_PRN	;
205)   092A 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
205)   092E 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
205)   0932 45 46       		 DEFM  "LCD_SCRLEF"	;
206)   0934 D4          		 DEFB 'T'+80H	;
207)   0935 81 0B       		 DEFW LCD_SCRLFT	;
208)   0937 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
208)   093B 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
208)   093F 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
209)   0942 D4          		 DEFB 'T'+80H	;
210)   0943 87 0B       		 DEFW LCD_SCRRGT	;
211)   0945 50 57       		 DEFM  "PW"	;
212)   0947 C4          		 DEFB    'D'+80H	;
213)   0948 BB 09       		 DEFW NIMP	;
214)   094A 52 45 53 45 		 DEFM  "RESE"	;
215)   094E D4          		 DEFB    'T'+80H	;
216)   094F C7 09       		 DEFW DORESET	;
217)   0951 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
217)   0955 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
217)   0959 53          		 DEFM  "RTC_ADJUS"	;
218)   095A D4          		 DEFB    'T'+80H                	;
219)   095B AD 0A       		 DEFW RTC_ADJUST	;
220)   095D 52 54 43 5F 		 DEFM  "RTC_GE"	;
220)   0961 47 45       		 DEFM  "RTC_GE"	;
221)   0963 D4          		 DEFB    'T'+80H	;
222)   0964 DB 0A       		 DEFW RTC_GET	;
223)   0966 53 45 54 44 		 DEFM "SETDAT"	;
223)   096A 41 54       		 DEFM "SETDAT"	;
224)   096C C5          		 DEFB    'E'+80H	;
225)   096D EF 0A       		 DEFW DSSETDATE	;
226)   096F 53 45 54 4C 		 DEFM "SETLC"	;
226)   0973 43          		 DEFM "SETLC"	;
227)   0974 C4          		 DEFB    'D'+80H	;
228)   0975 B8 0B       		 DEFW SETLCD	;
229)   0977 53 45 54 54 		 DEFM "SETTIM"	;
229)   097B 49 4D       		 DEFM "SETTIM"	;
230)   097D C5          		 DEFB    'E'+80H	;
231)   097E 07 0B       		 DEFW DSSETTIME	;
232)   0980 53 45 54 56 		 DEFM "SETVG"	;
232)   0984 47          		 DEFM "SETVG"	;
233)   0985 C1          		 DEFB    'A'+80H	;
234)   0986 8D 0B       		 DEFW SETVGA	;
235)   0988 54 59 50    		 DEFM  "TYP"	;
236)   098B C5          		 DEFB    'E'+80H	;
237)   098C 8A 0A       		 DEFW DRV_TYPFILE	;
238)   098E 56 47 41 4D 		 DEFM  "VGAMOD"	;
238)   0992 4F 44       		 DEFM  "VGAMOD"	;
239)   0994 C5          		 DEFB    'E'+80H	;
240)   0995 E3 0B       		 DEFW SETVGAMODE	;
243)   0997 FF          		 DEFB 0FFH	;
251)   0998 2A 3F FF    		OSCMDFIN:      LD HL,(COMDGET)	;
252)   099B E5          		 PUSH HL	;
253)   099C C9          		 RET  ;GOTO COMDGET	;GOTO COMDGET
255)   099D E1          		OSERROR:       POP HL	;
256)   099E CD E7 04    		               CALL OS_PRINTTEXT	;
257)   09A1 C3 98 09    		               JP OSCMDFIN	;
259)   09A4 CD 9D 09    		SNTX_ERROR: CALL OSERROR	;
260)   09A7 4F 53 20 43 		 DEFM  "OS CMD Syntax error"	;
260)   09AB 4D 44 20 53 		 DEFM  "OS CMD Syntax error"	;
260)   09AF 79 6E 74 61 		 DEFM  "OS CMD Syntax error"	;
260)   09B3 78 20 65 72 		 DEFM  "OS CMD Syntax error"	;
260)   09B7 72 6F 72    		 DEFM  "OS CMD Syntax error"	;
261)   09BA 00          		 DEFB    0	;
263)   09BB C3 98 09    		NIMP           JP OSCMDFIN	;
265)   09BE C3 A3 02    		BYE: JP MENU	;
267)   09C1 CD E0 04    		DOCLS:         CALL OS_CLRSCR	;
268)   09C4 C3 98 09    		               JP OSCMDFIN	;
271)   09C7 C3 00 00    		DORESET: JP 0	;
274)   09CA CD 9D 09    		HEXERROR:      CALL OSERROR	;
275)   09CD 4E 4F 54 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
275)   09D1 41 20 56 41 		               DEFM "NOT A VALID HEX ADDRESS"	;
275)   09D5 4C 49 44 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
275)   09D9 48 45 58 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
275)   09DD 41 44 44 52 		               DEFM "NOT A VALID HEX ADDRESS"	;
275)   09E1 45 53 53    		               DEFM "NOT A VALID HEX ADDRESS"	;
276)   09E4 00          		               DEFB 0	;
280)   09E5 7E          		PRSADDR:       LD A,(HL)	;
281)   09E6 FE 00       		               CP 0	;
282)   09E8 28 14       		               JR Z,PSADEX	;
283)   09EA FE 2E       		               CP '.'	;
284)   09EC 28 03       		               JR Z,PSADGTIT	;
285)   09EE 23          		               INC HL	;
286)   09EF 18 F4       		               JR PRSADDR	;
289)   09F1 23          		PSADGTIT:      INC HL	;
290)   09F2 CD 75 2A    		               CALL IsStrHex   ;CHECK IF VALID HEX	;CHECK IF VALID HEX
291)   09F5 20 D3       		               JR NZ,HEXERROR	;
293)   09F7 CD C5 2A    		               CALL Read16bit	;
294)   09FA 60          		               LD H,B	;
295)   09FB 69          		               LD L,C	;
296)   09FC AF          		               XOR A           ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
297)   09FD C9          		               RET	;
298)   09FE 37          		PSADEX:        SCF             ;SET CARRY FLAG ON ERROR	;SET CARRY FLAG ON ERROR
299)   09FF C9          		               RET                	;
303)   0A00 CD 71 0A    		DOEXEC:        CALL DRV_GETFNPRM	;
304)   0A03 2B          		               DEC HL	;
305)   0A04 2B          		               DEC HL	;
306)   0A05 2B          		               DEC HL	;
307)   0A06 2B          		               DEC HL	;
308)   0A07 2B          		               DEC HL	;
309)   0A08 CD E5 09    		               CALL PRSADDR	;
310)   0A0B DA 98 09    		               JP C,OSCMDFIN           ;ERROR ON PARSING HEX ADDRESS	;ERROR ON PARSING HEX ADDRESS
311)   0A0E E5          		               PUSH HL                 ;SAVE HEX ADDR	;SAVE HEX ADDR
312)   0A0F CD B4 10    		 CALL STRG_OPNFILE	;
313)   0A12 E1          		               POP HL	;
314)   0A13 38 43       		 JR C, DRV_ERROR         ;ERROR ON FILE OPENING	;ERROR ON FILE OPENING
315)   0A15 E5          		               PUSH HL                 ;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN	;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN
316)   0A16 54          		               LD D,H	;
317)   0A17 5D          		               LD E,L	;
318)   0A18 01 00 00    		               LD BC,0                 ;LOAD ALL BYTES	;LOAD ALL BYTES
319)   0A1B CD 08 11    		               CALL STRG_BLKREAD	;
320)   0A1E 3A FB FE    		 LD A, (FID)	;
321)   0A21 CD D3 10    		 CALL STRG_CLSFILE       ;CLOSE FILE	;CLOSE FILE
322)   0A24 C9          		               RET                     ;EXECUTE CODE AT HEX ADDR	;EXECUTE CODE AT HEX ADDR
329)   0A25 FD E5       		PARSCMD:       PUSH IY	;
330)   0A27 E1          		               POP HL	;
331)   0A28 CD 6C 08    		               CALL SKIPSP	;
332)   0A2B E5          		               PUSH HL	;
333)   0A2C 1E 00       		               LD E,0	;
334)   0A2E 7E          		PCNXT:         LD A,(HL)	;
335)   0A2F FE 20       		               CP ' '	;
336)   0A31 28 18       		               JR Z,PCEXT	;
337)   0A33 FE 2C       		               CP ','	;
338)   0A35 28 14       		               JR Z,PCEXT	;
339)   0A37 FE 2F       		               CP '/'	;
340)   0A39 28 10       		               JR Z,PCEXT	;
341)   0A3B FE 3A       		               CP ':'	;
342)   0A3D 28 0C       		               JR Z,PCEXT	;
343)   0A3F FE 0D       		               CP 13	;
344)   0A41 28 08       		               JR Z,PCEXT	;
345)   0A43 FE 00       		               CP 0	;
346)   0A45 28 04       		               JR Z,PCEXT	;
347)   0A47 23          		               INC HL	;
348)   0A48 1C          		               INC E	;
349)   0A49 18 E3       		               JR PCNXT	;
350)   0A4B E5          		PCEXT:         PUSH HL	;
351)   0A4C FD E1       		               POP IY          ;IY AT THE END OF PARAM	;IY AT THE END OF PARAM
352)   0A4E E1          		               POP HL          ;HL AT THE START OF PARAM	;HL AT THE START OF PARAM
353)   0A4F C9          		               RET                	;
356)   0A50 CD 25 0A    		PARSCMDI:      CALL PARSCMD	;
358)   0A53 CD 95 2A    		               CALL STRTOB     ;CONVERT TO BYTE ON A	;CONVERT TO BYTE ON A
359)   0A56 6F          		               LD L,A	;
360)   0A57 C9          		               RET	;
364)   0A58 CD 9D 09    		DRV_ERROR: CALL OSERROR	;
365)   0A5B 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
365)   0A5F 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
365)   0A63 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
365)   0A67 52          		 DEFM  "STORAGE ERROR"	;
366)   0A68 00          		 DEFB    0	;
371)   0A69 CD 70 10    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
372)   0A6C D2 98 09    		 JP NC, OSCMDFIN	;
373)   0A6F 18 E7       		 JR DRV_ERROR	;
375)   0A71 CD 25 0A    		DRV_GETFNPRM: CALL PARSCMD       	;
376)   0A74 06 00       		 LD B, 0	;
377)   0A76 4B          		 LD C, E	;
378)   0A77 11 CF FE    		 LD DE, STRGBUFF	;
379)   0A7A ED B0       		 LDIR	;
380)   0A7C AF          		 XOR A	;
381)   0A7D 12          		 LD (DE), A	;
382)   0A7E C9          		 RET	;
385)   0A7F CD 71 0A    		DRV_CD: CALL DRV_GETFNPRM	;
386)   0A82 CD 9C 10    		 CALL STRG_DIRCHG	;
387)   0A85 D2 98 09    		 JP NC, OSCMDFIN	;
388)   0A88 18 CE       		 JR DRV_ERROR	;
391)   0A8A CD 71 0A    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
392)   0A8D CD B4 10    		 CALL STRG_OPNFILE	;
393)   0A90 38 C6       		 JR C, DRV_ERROR	;
394)   0A92 CD 3D 11    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
395)   0A95 3A FB FE    		 LD A, (FID)	;
396)   0A98 CD D3 10    		 CALL STRG_CLSFILE	;
397)   0A9B C3 98 09    		 JP OSCMDFIN	;
404)   0A9E CD 50 0A    		RTC_GETPARBCD: CALL PARSCMDI	;
405)   0AA1 CD 26 29    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
406)   0AA4 FD 7E 00    		 LD A, (IY)	;
407)   0AA7 FE 2C       		 CP ','	;
408)   0AA9 FD 23       		 INC IY	;
409)   0AAB 7D          		 LD A, L	;
410)   0AAC C9          		 RET	;
415)   0AAD 0E 00       		RTC_ADJUST: LD C, 0	;
416)   0AAF 11 8A FE    		 LD DE, BUFFER	;
417)   0AB2 AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
418)   0AB3 32 8A FE    		 LD (BUFFER), A	;
419)   0AB6 13          		 INC DE	;
420)   0AB7 C5          		RTCADJ_NXT: PUSH BC	;
421)   0AB8 D5          		 PUSH DE	;
422)   0AB9 CD 9E 0A    		 CALL RTC_GETPARBCD	;
423)   0ABC D1          		 POP DE	;
424)   0ABD C1          		 POP BC	;
425)   0ABE 28 0B       		 JR Z, RTCADJ_PAROK	;
427)   0AC0 FD 2B       		 DEC IY	;
428)   0AC2 47          		 LD B, A        ;SAVE A	;SAVE A
429)   0AC3 79          		 LD A, C	;
430)   0AC4 FE 06       		 CP 6	;
431)   0AC6 28 08       		 JR Z, RTCADJ_EXEC	;
433)   0AC8 C3 A4 09    		 JP SNTX_ERROR	;
434)   0ACB 0C          		RTCADJ_PAROK: INC C	;
435)   0ACC 12          		 LD (DE), A	;
436)   0ACD 13          		 INC DE	;
437)   0ACE 18 E7       		 JR RTCADJ_NXT	;
438)   0AD0 78          		RTCADJ_EXEC: LD A, B	;
439)   0AD1 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
440)   0AD2 13          		 INC DE	;
441)   0AD3 AF          		 XOR A	;
442)   0AD4 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
443)   0AD5 CD E9 13    		 CALL DS1307_ADJUST	;
444)   0AD8 C3 98 09    		 JP OSCMDFIN	;
447)   0ADB CD 32 14    		RTC_GET: CALL DS1307_GETTIME 	;
452)   0ADE 21 9E FE    		 LD HL,TIMMSG	;
453)   0AE1 11 14 00    		 LD DE,20	;
454)   0AE4 AF          		 XOR A	;
455)   0AE5 19          		 ADD HL,DE	;
456)   0AE6 77          		 LD (HL),A	;
457)   0AE7 ED 52       		 SBC HL,DE	;
458)   0AE9 CD E7 04    		 CALL OS_PRINTTEXT	;
462)   0AEC C3 98 09    		 JP OSCMDFIN	;
468)   0AEF CD 32 14    		DSSETDATE: CALL DS1307_GETTIME      ;TIMMSG HAS THE DATE AND TIME	;TIMMSG HAS THE DATE AND TIME
471)   0AF2 FD E5       		 PUSH IY	;
472)   0AF4 E1          		 POP HL	;
473)   0AF5 11 9E FE    		 LD DE,TIMMSG	;
474)   0AF8 01 08 00    		 LD BC,8        ;DD/MM/YY	;DD/MM/YY
475)   0AFB ED B0       		 LDIR	;
476)   0AFD FD 21 9E FE 		 LD IY,TIMMSG	;
477)   0B01 CD AD 0A    		 CALL RTC_ADJUST	;
478)   0B04 C3 98 09    		 JP OSCMDFIN	;
480)   0B07 CD 32 14    		DSSETTIME: CALL DS1307_GETTIME      ;TIMMSG HAS THE DATE AND TIME	;TIMMSG HAS THE DATE AND TIME
483)   0B0A FD E5       		 PUSH IY	;
484)   0B0C E1          		 POP HL	;
485)   0B0D 11 A7 FE    		 LD DE,TIMMSG + 9       ;SKIP DATE PART 	;SKIP DATE PART
486)   0B10 01 08 00    		 LD BC,8        ;HH:MN:SS	;HH:MN:SS
487)   0B13 ED B0       		 LDIR	;
488)   0B15 FD 21 9E FE 		 LD IY,TIMMSG	;
489)   0B19 CD AD 0A    		 CALL RTC_ADJUST	;
490)   0B1C C3 98 09    		 JP OSCMDFIN	;
493)   0B1F CD B8 15    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
494)   0B22 C3 98 09    		 JP OSCMDFIN	;
496)   0B25 CD C6 15    		LCD_BLINKON: CALL LCD16_BLINKON	;
497)   0B28 C3 98 09    		 JP OSCMDFIN	;
499)   0B2B CD 69 15    		LCD_CLR: CALL LCD16_CLR	;
500)   0B2E C3 98 09    		 JP OSCMDFIN	;
502)   0B31 CD 50 0A    		LCD_CURSAT: CALL PARSCMDI     ;TAKE PARAMS D COL E ROW  	;TAKE PARAMS D COL E ROW
503)   0B34 55          		 LD D, L	;
504)   0B35 D5          		 PUSH DE                                                 ;SAVE PARAM D	;SAVE PARAM D
505)   0B36 FD 7E 00    		 LD A, (IY)	;
506)   0B39 FE 2C       		 CP ', '	;
507)   0B3B 28 04       		 JR Z, LCDCA_OK	;
508)   0B3D D1          		 POP DE	;
509)   0B3E C3 A4 09    		 JP SNTX_ERROR	;
510)   0B41 FD 23       		LCDCA_OK: INC IY	;
511)   0B43 CD 50 0A    		 CALL PARSCMDI	;
512)   0B46 D1          		               POP DE                                                  ;RESTORE PARAM D	;RESTORE PARAM D
513)   0B47 5D          		 LD E, L	;
514)   0B48 CD 8D 15    		 CALL LCD16_SETCURS	;
515)   0B4B C3 98 09    		 JP OSCMDFIN	;
517)   0B4E CD 9C 15    		LCD_CURSOF: CALL LCD16_CURSOFF	;
518)   0B51 C3 98 09    		 JP OSCMDFIN	;
520)   0B54 CD AA 15    		LCD_CURSON: CALL LCD16_CURSON	;
521)   0B57 C3 98 09    		 JP OSCMDFIN	;
523)   0B5A CD 40 15    		LCD_DISPOF: CALL LCD16_NODISP	;
524)   0B5D C3 98 09    		 JP OSCMDFIN	;
526)   0B60 CD 4E 15    		LCD_DISPON: CALL LCD16_DISP	;
527)   0B63 C3 98 09    		 JP OSCMDFIN	;
529)   0B66 CD 80 15    		LCD_HOME: CALL LCD16_HOME	;
530)   0B69 C3 98 09    		 JP OSCMDFIN	;
532)   0B6C CD E0 15    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
533)   0B6F C3 98 09    		 JP OSCMDFIN	;
535)   0B72 CD E6 15    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
536)   0B75 C3 98 09    		 JP OSCMDFIN	;
538)   0B78 CD 25 0A    		LCD_PRN: CALL PARSCMD	;
539)   0B7B CD 72 15    		               CALL LCD16_PRINT	;
540)   0B7E C3 98 09    		               JP OSCMDFIN	;
543)   0B81 CD D4 15    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
544)   0B84 C3 98 09    		 JP OSCMDFIN	;
546)   0B87 CD DA 15    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
547)   0B8A C3 98 09    		 JP OSCMDFIN	;
552)   0B8D CD 25 0A    		SETVGA: CALL PARSCMD  ;GET PARAM	;GET PARAM
553)   0B90 7E          		 LD A,(HL)	;
554)   0B91 FE 4F       		 CP 'O'  	;
555)   0B93 C2 A4 09    		 JP NZ,SNTX_ERROR	;
556)   0B96 23          		 INC HL	;
557)   0B97 7E          		 LD A,(HL)	;
558)   0B98 FE 4E       		 CP 'N'	;
559)   0B9A 28 14       		 JR Z, SVON	;
560)   0B9C FE 46       		 CP 'F'	;
561)   0B9E C2 A4 09    		 JP NZ,SNTX_ERROR	;
562)   0BA1 23          		 INC HL	;
563)   0BA2 7E          		 LD A,(HL)	;
564)   0BA3 FE 46       		 CP 'F'	;
565)   0BA5 C2 A4 09    		 JP NZ,SNTX_ERROR	;
567)   0BA8 21 B7 FE    		 LD HL,SCRNST	;
568)   0BAB CB 8E       		 RES 1,(HL)	;
569)   0BAD C3 98 09    		 JP OSCMDFIN	;
570)   0BB0 21 B7 FE    		SVON: LD HL,SCRNST	;
571)   0BB3 CB CE       		 SET 1,(HL)	;
572)   0BB5 C3 98 09    		 JP OSCMDFIN	;
575)   0BB8 CD 25 0A    		SETLCD: CALL PARSCMD  ;GET PARAM	;GET PARAM
576)   0BBB 7E          		 LD A,(HL)	;
577)   0BBC FE 4F       		 CP 'O'  	;
578)   0BBE C2 A4 09    		 JP NZ,SNTX_ERROR	;
579)   0BC1 23          		 INC HL	;
580)   0BC2 7E          		 LD A,(HL)	;
581)   0BC3 FE 4E       		 CP 'N'	;
582)   0BC5 28 14       		 JR Z, SLON	;
583)   0BC7 FE 46       		 CP 'F'	;
584)   0BC9 C2 A4 09    		 JP NZ,SNTX_ERROR	;
585)   0BCC 23          		 INC HL	;
586)   0BCD 7E          		 LD A,(HL)	;
587)   0BCE FE 46       		 CP 'F'	;
588)   0BD0 C2 A4 09    		 JP NZ,SNTX_ERROR	;
590)   0BD3 21 B7 FE    		 LD HL,SCRNST	;
591)   0BD6 CB 86       		 RES 0,(HL)	;
592)   0BD8 C3 98 09    		 JP OSCMDFIN	;
593)   0BDB 21 B7 FE    		SLON: LD HL,SCRNST	;
594)   0BDE CB C6       		 SET 0,(HL)	;
595)   0BE0 C3 98 09    		 JP OSCMDFIN	;
600)   0BE3 CD 50 0A    		SETVGAMODE: CALL PARSCMDI	;
601)   0BE6 E6 03       		 AND 3        ;KEEP ONLY BITS 0-1	;KEEP ONLY BITS 0-1
602)   0BE8 6F          		 LD L, A  	;
603)   0BE9 CD CE 16    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
604)   0BEC 4D          		 LD C, L        ;VIDEO MODE SCREEN	;VIDEO MODE SCREEN
605)   0BED CD 9C 16    		 CALL VGA_SETCONF	;
606)   0BF0 C3 98 09    		 JP OSCMDFIN	;
 14)   0BF3 E5          		@INTSER: PUSH HL	;
 15)   0BF4 F5          		 PUSH AF	;
 16)   0BF5 C5          		 PUSH BC	;
 17)   0BF6 DD E5       		 PUSH IX	;
 21)   0BF8 DB 68       		 IN A, (DEVINT)       ;WAS DEVINP BEFORE V 0.43	;WAS DEVINP BEFORE V 0.43
 22)   0BFA 2F          		 CPL	;
 23)   0BFB E6 07       		 AND 0X07       ;BITS 0-2  	;BITS 0-2
 27)   0BFD DD 21 5E FF 		 LD IX, INTTAB	;
 28)   0C01 06 00       		 LD B, 0	;
 29)   0C03 4F          		 LD C, A	;
 30)   0C04 CB 21       		 SLA C        ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 31)   0C06 DD 09       		 ADD IX, BC	;
 32)   0C08 DD 6E 00    		 LD L, (IX)	;
 33)   0C0B DD 66 01    		 LD H, (IX + 1)	;
 34)   0C0E 01 13 0C    		 LD BC, IS_EX	;
 35)   0C11 C5          		 PUSH BC        ;RETURN ADDRESS	;RETURN ADDRESS
 36)   0C12 E9          		 JP (HL)        ;JP TO HL	;JP TO HL
 38)   0C13 DD E1       		IS_EX: POP IX	;
 39)   0C15 C1          		 POP BC	;
 40)   0C16 F1          		 POP AF	;
 41)   0C17 E1          		 POP HL	;
 42)   0C18 FB          		 EI	;
 43)   0C19 C9          		 RET        ;SAME AS RETI FOR IM1	;SAME AS RETI FOR IM1
 48)   0C1A F3          		@COPYINTTAB: DI	;
 49)   0C1B 21 30 0C    		 LD HL,MYINTADDR	;
 50)   0C1E 11 5E FF    		 LD DE,INTTAB	;
 51)   0C21 01 10 00    		 LD BC,16	;
 52)   0C24 ED B0       		 LDIR	;
 53)   0C26 0E 68       		 LD C,DEVINT	;
 54)   0C28 06 08       		 LD B,8	;
 55)   0C2A ED 41       		CIT_NXT: OUT (C), B	;
 56)   0C2C 10 FC       		 DJNZ CIT_NXT 	;
 57)   0C2E FB          		 EI 	;
 58)   0C2F C9          		 RET 	;
 60)   0C30 53 0C       		MYINTADDR: DEFW INT_TIMER	;
 61)   0C32 48 0C       		 DEFW SAVETE	;
 62)   0C34 40 0C       		 DEFW INT_KEYB	;
 63)   0C36 50 0C       		 DEFW DOCLRINT	;
 64)   0C38 50 0C       		 DEFW DOCLRINT	;
 65)   0C3A 50 0C       		 DEFW DOCLRINT	;
 66)   0C3C 50 0C       		 DEFW DOCLRINT	;
 67)   0C3E 50 0C       		 DEFW DOCLRINT	;
 69)   0C40 4F          		INT_KEYB: LD C,A	;
 70)   0C41 CD 40 0D    		 CALL PS2SETKEYAV      ;SET NEW KEY AVAILABLE FROM PS/2	;SET NEW KEY AVAILABLE FROM PS/2
 71)   0C44 79          		 LD A,C	;
 72)   0C45 D3 68       		 OUT (DEVINT), A       ;CLEAR THE INTERRUPT    	;CLEAR THE INTERRUPT
 73)   0C47 C9          		 RET	;
 76)   0C48 D3 68       		SAVETE: OUT (DEVINT), A       ;CLEAR THE INTERRUPT	;CLEAR THE INTERRUPT
 77)   0C4A 3E 01       		 LD A, 1	;
 78)   0C4C 32 C1 FE    		 LD (INT2TE),A        ;TEARING EFFECT	;TEARING EFFECT
 79)   0C4F C9          		 RET	;
 82)   0C50 D3 68       		DOCLRINT: OUT (DEVINT), A	;
 83)   0C52 C9          		 RET	;
 85)   0C53 D3 68       		INT_TIMER: OUT (DEVINT), A	;
 86)   0C55 21 BD FE    		 LD HL, TIMECTR	;
 87)   0C58 34          		 INC (HL)	;
 88)   0C59 7E          		 LD A, (HL)	;
 89)   0C5A FE 00       		 CP 0	;
 90)   0C5C C0          		 RET NZ	;
 91)   0C5D 23          		 INC HL	;
 92)   0C5E 34          		 INC (HL)	;
 93)   0C5F 7E          		 LD A, (HL)	;
 94)   0C60 FE 00       		 CP 0	;
 95)   0C62 C0          		 RET NZ	;
 96)   0C63 23          		 INC HL	;
 97)   0C64 34          		 INC (HL)	;
 98)   0C65 7E          		 LD A, (HL)	;
 99)   0C66 FE 00       		 CP 0	;
100)   0C68 C0          		 RET NZ	;
101)   0C69 23          		 INC HL	;
102)   0C6A 34          		 INC (HL)	;
103)   0C6B 7E          		 LD A, (HL)	;
104)   0C6C FE 00       		 CP 0	;
105)   0C6E C0          		 RET NZ	;
107)   0C6F 21 00 00    		 LD HL, 0	;
108)   0C72 22 BD FE    		 LD (TIMECTR), HL	;
109)   0C75 22 BF FE    		 LD (TIMECTR + 2), HL	;
110)   0C78 C9          		 RET	;
  9)   0C79 21 FD FE    		INITMMU:       LD HL,BANKS	;
 10)   0C7C 06 08       		               LD B,8	;
 11)   0C7E AF          		               XOR A	;
 12)   0C7F 77          		INM_AGN:       LD (HL),A	;
 13)   0C80 3C          		               INC A	;
 14)   0C81 23          		 INC HL	;
 15)   0C82 10 FB       		               DJNZ INM_AGN	;
 16)   0C84 C9          		               RET                	;
 22)   0C85 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 23)   0C86 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 24)   0C87 FE 02       		 CP 2	;
 25)   0C89 D8          		 RET C         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 26)   0C8A FE 07       		 CP 7	;
 27)   0C8C C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 28)   0C8D 21 FD FE    		 LD HL, BANKS	;
 29)   0C90 16 00       		 LD D, 0	;
 30)   0C92 5F          		 LD E, A	;
 31)   0C93 19          		 ADD HL, DE	;
 32)   0C94 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 33)   0C95 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 34)   0C96 0E 00       		 LD C, DEVMMU	;
 35)   0C98 58          		 LD E,B	;
 36)   0C99 CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 37)   0C9B CB 20       		 SLA B	;
 38)   0C9D CB 20       		 SLA B	;
 39)   0C9F CB 20       		 SLA B	;
 40)   0CA1 CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 41)   0CA3 ED 79       		 OUT (C), A	;
 42)   0CA5 43          		 LD B,E	;
 43)   0CA6 C9          		 RET	;
 48)   0CA7 21 FD FE    		GETPGINBANK:   LD HL,BANKS	;
 49)   0CAA 16 00       		               LD D,0	;
 50)   0CAC 58          		               LD E,B	;
 51)   0CAD 19          		               ADD HL,DE	;
 52)   0CAE 7E          		               LD A,(HL)	;
 53)   0CAF C9          		               RET	;
 15)   0CB0 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   0CB0 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   0CB0 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   0CB0 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   0CB0 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   0CB0 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   0CB0 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 44)   0CB0 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   0CB0 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   0CB0 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   0CB0 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   0CB0 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   0CB0 F5          		RS_INI: PUSH AF	;
 63)   0CB1 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 64)   0CB3 D3 1B       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 73)   0CB5 F1          		 POP AF	;
 74)   0CB6 D3 18       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 75)   0CB8 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   0CBA D3 19       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 77)   0CBC 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   0CBE D3 1B       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 80)   0CC0 3E 00       		 LD A, 0	;
 81)   0CC2 D3 1A       		 OUT (FCR), A        ;//was commented	;//was commented
 82)   0CC4 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   0CC6 D3 19       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 84)   0CC8 C9          		 RET	;
 87)   0CC9 CD CF 0C    		RS_TX: CALL RSTXRD	;
 88)   0CCC D3 18       		 OUT (THR), A	;
 90)   0CCE C9          		 RET	;
 94)   0CCF F5          		RSTXRD: PUSH AF	;
 95)   0CD0 DB 1D       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 96)   0CD2 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   0CD4 28 FA       		 JR Z, RSTXLP	;
 98)   0CD6 F1          		 POP AF	;
 99)   0CD7 C9          		 RET	;
102)   0CD8 7E          		RS_TXT: LD A, (HL)	;
103)   0CD9 23          		 INC HL	;
104)   0CDA FE 00       		 CP 0	;
105)   0CDC C8          		 RET Z	;
106)   0CDD CD C9 0C    		 CALL RS_TX	;
107)   0CE0 18 F6       		 JR RS_TXT	;
114)   0CE2 F3          		RS_RX: DI	;
115)   0CE3 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   0CE5 D3 1C       		 OUT (MCR), A	;
117)   0CE7 CD 00 0D    		 CALL RSRXRD	;
118)   0CEA AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   0CEB D3 1C       		 OUT (MCR), A	;
121)   0CED DB 18       		 IN A, (RBR)	;
122)   0CEF FB          		 EI	;
123)   0CF0 C9          		 RET	;
125)   0CF1 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   0CF3 D3 1C       		 OUT (MCR), A	;
127)   0CF5 DB 1D       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
128)   0CF7 CB 47       		 BIT 0, A	;
129)   0CF9 28 03       		 JR Z, RS_NOCHAR	;
130)   0CFB F3          		 DI	;
131)   0CFC 18 EC       		 JR RS_GTCH	;
132)   0CFE AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
133)   0CFF C9          		 RET	;
141)   0D00 F5          		 PUSH AF	;
147)   0D01 DB 1D       		 IN A, (LSR)        ; fetch the control register	; fetch the control register
148)   0D03 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
149)   0D05 28 FA       		 JR Z, RSRXLP	;
151)   0D07 F1          		 POP AF	;
153)   0D08 C9          		 RET	;
157)   0D09 DB 1D       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
158)   0D0B CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
159)   0D0D C9          		 RET	;
161)   0D0E F5          		SHLCD: PUSH AF	;
163)   0D0F F1          		 POP AF	;
165)   0D10 C9          		 RET	;
169)   0D11 F5          		CHKERR: PUSH AF	;
170)   0D12 E5          		 PUSH HL	;
171)   0D13 C5          		 PUSH BC	;
172)   0D14 DB 1D       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
173)   0D16 CB 67       		 BIT 4, A	;
174)   0D18 28 04       		 JR Z, LBLPE	;
175)   0D1A 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
176)   0D1C 18 1A       		 JR EXIT	;
177)   0D1E CB 57       		LBLPE: BIT 2, A	;
178)   0D20 28 04       		 JR Z, LBLFE	;
179)   0D22 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
180)   0D24 18 12       		 JR EXIT	;
181)   0D26 CB 5F       		LBLFE: BIT 3, A	;
182)   0D28 28 04       		 JR Z, LBLOE	;
183)   0D2A 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
184)   0D2C 18 0A       		 JR EXIT	;
185)   0D2E CB 4F       		LBLOE: BIT 1, A	;
186)   0D30 28 04       		 JR Z, LBLNE	;
187)   0D32 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
188)   0D34 18 02       		 JR EXIT	;
189)   0D36 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
190)   0D38 21 B4 FE    		EXIT: LD HL, SERERR	;
191)   0D3B 77          		 LD (HL), A	;
193)   0D3C C1          		 POP BC	;
194)   0D3D E1          		 POP HL	;
195)   0D3E F1          		 POP AF	;
196)   0D3F C9          		 RET	;
 14)   0D40 21 70 FF    		PS2SETKEYAV:  LD HL,KBDFLAG	;
 15)   0D43 36 01       		 LD (HL),1	;
 16)   0D45 DB 20       		 IN A, (DEVKBI)        ;JUST TO CLEAR THE INTERRUPT	;JUST TO CLEAR THE INTERRUPT
 17)   0D47 C9          		 RET	;
 20)   0D48 21 70 FF    		PS2NOKEYAV: LD HL,KBDFLAG	;
 21)   0D4B 36 00       		 LD (HL),0	;
 22)   0D4D C9          		 RET 	;
 27)   0D4E CD 5F 0D    		READCHAR: CALL GTKEY	;
 28)   0D51 B7          		 OR A	;
 29)   0D52 C8          		               RET Z                                                           ;NO KEY IF A=0	;NO KEY IF A=0
 30)   0D53 32 71 FF    		 LD (LASTKEY),A                	;
 31)   0D56 CD 5E 0E    		               CALL PS2LOK                                                     ;LOOK UP TABLE TRANSLATION	;LOOK UP TABLE TRANSLATION
 32)   0D59 C9          		               RET	;
 36)   0D5A 3A 70 FF    		PS2ISK:        LD A,(KBDFLAG) 	;
 37)   0D5D B7          		               OR A	;
 38)   0D5E C9          		               RET     	;
 41)   0D5F CD 84 0D    		GTKEY: CALL NGETKEY       ;GET A KEY FROM PS2 HARDWARE	;GET A KEY FROM PS2 HARDWARE
 42)   0D62 B7          		 OR A	;
 43)   0D63 C8          		 RET Z  	;
 44)   0D64 CD 9D 0D    		               CALL CHECKEXT                                                   ;CHECK FOR EXTDED KEYS	;CHECK FOR EXTDED KEYS
 45)   0D67 C9          		               RET	;
 49)   0D68 CD 7B 0D    		PS2KBINIT: CALL KBDISABLE       ;RESET KB                	;RESET KB
 50)   0D6B DB 20       		 IN A, (DEVKBI)        ;RESET KB INTERRUPT  	;RESET KB INTERRUPT
 51)   0D6D CD 80 0D    		 CALL KBENABLE	;
 52)   0D70 CD 80 0D    		               CALL KBENABLE  	;
 53)   0D73 CD 48 0D    		 CALL PS2NOKEYAV	;
 54)   0D76 AF          		 XOR A	;
 55)   0D77 32 71 FF    		 LD (LASTKEY),A   	;
 56)   0D7A C9          		 RET	;
 58)   0D7B 3E 02       		KBDISABLE: LD A, 2	;
 59)   0D7D D3 20       		 OUT (DEVKBI), A	;
 60)   0D7F C9          		 RET	;
 62)   0D80 AF          		KBENABLE: XOR A	;
 63)   0D81 D3 20       		 OUT (DEVKBI), A	;
 64)   0D83 C9          		 RET	;
 70)   0D84 F3          		NGETKEY: DI	;
 71)   0D85 3E 02       		 LD A,2	;
 72)   0D87 D3 20       		 OUT (DEVKBI), A 	;
 73)   0D89 DB 20       		 IN A, (DEVKBI)        ;GET KEY	;GET KEY
 75)   0D8B 4F          		 LD C, A	;
 76)   0D8C AF          		 XOR A	;
 77)   0D8D D3 20       		 OUT (DEVKBI), A       ;RESET FOR NEXT KEY	;RESET FOR NEXT KEY
 80)   0D8F D3 20       		 OUT (DEVKBI), A       ;ZERO COUNTER  	;ZERO COUNTER
 81)   0D91 D3 20       		 OUT (DEVKBI), A       ;ZERO COUNTER	;ZERO COUNTER
 83)   0D93 79          		 LD A, C	;
 84)   0D94 FB          		 EI        ;CLEAR INTERRUPT	;CLEAR INTERRUPT
 86)   0D95 06 1E       		 LD B,30	;
 87)   0D97 10 FE       		AGME: DJNZ AGME  	;
 89)   0D99 CD 48 0D    		 CALL PS2NOKEYAV       ;READY FOR NEXT KEY 	;READY FOR NEXT KEY
 90)   0D9C C9          		 RET	;
 96)   0D9D FE E1       		CHECKEXT:     CP $E1         ;BREAK KEY	;BREAK KEY
 97)   0D9F C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
 98)   0DA0 FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
 99)   0DA2 C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
100)   0DA3 FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
101)   0DA5 C8          		 RET Z        ;JUST SAVE IT	;JUST SAVE IT
102)   0DA6 FE AA       		 CP $AA        ;POST TEST KB OK	;POST TEST KB OK
103)   0DA8 C8          		 RET Z	;
105)   0DA9 4F          		 LD C,A        ;SAVE KEY	;SAVE KEY
106)   0DAA 3A 71 FF    		 LD A,(LASTKEY)	;
107)   0DAD FE E1       		 CP $E1	;
108)   0DAF 28 23       		 JR Z, GTBRK	;
109)   0DB1 FE F0       		 CP $F0	;
110)   0DB3 28 59       		 JR Z, GTREL	;
111)   0DB5 FE E0       		 CP $E0	;
112)   0DB7 28 21       		 JR Z, GTEXT	;
113)   0DB9 79          		 LD A,C	;
115)   0DBA FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
116)   0DBC CC 3A 0E    		 CALL Z, SHFTOG	;
117)   0DBF FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
118)   0DC1 CC 3A 0E    		 CALL Z, SHFTOG	;
119)   0DC4 FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
120)   0DC6 CC 43 0E    		 CALL Z, CTRTOG	;
121)   0DC9 FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
122)   0DCB CC 4C 0E    		 CALL Z, ALTTOG	;
123)   0DCE FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
124)   0DD0 CC 55 0E    		 CALL Z, CAPSTOG	;
125)   0DD3 C9          		               RET	;
127)   0DD4 79          		GTBRK: LD A,C       ;$14 OR $F0	;$14 OR $F0
128)   0DD5 FE F0       		 CP $F0	;
129)   0DD7 C8          		 RET Z  	;
130)   0DD8 AF          		 XOR A        	;
131)   0DD9 C9          		 RET	;
133)   0DDA 79          		GTEXT: LD A,C       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
134)   0DDB FE 6B       		 CP $6B         ;LEFT	;LEFT
135)   0DDD C8          		 RET Z	;
136)   0DDE FE 72       		 CP $72        ;DOWN	;DOWN
137)   0DE0 C8          		 RET Z	;
138)   0DE1 FE 74       		 CP $74        ;RIGHT	;RIGHT
139)   0DE3 C8          		 RET Z	;
140)   0DE4 FE 75       		 CP $75        ;UP	;UP
141)   0DE6 C8          		 RET Z	;
142)   0DE7 FE 70       		 CP $70        ;INSERT	;INSERT
143)   0DE9 C8          		 RET Z	;
144)   0DEA FE 6C       		 CP $6C        ;HOME	;HOME
145)   0DEC C8          		 RET Z	;
146)   0DED FE 7D       		 CP $7D        ;PG UP	;PG UP
147)   0DEF C8          		 RET Z	;
148)   0DF0 FE 7A       		 CP $7A        ;PG DN	;PG DN
149)   0DF2 C8          		 RET Z	;
150)   0DF3 FE 69       		 CP $69        ;END	;END
151)   0DF5 C8          		 RET Z	;
152)   0DF6 FE 71       		 CP $71        ;DEL	;DEL
153)   0DF8 C8          		 RET Z	;
154)   0DF9 FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
155)   0DFB C8          		 RET Z	;
156)   0DFC FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
157)   0DFE C8          		 RET Z	;
158)   0DFF FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
159)   0E01 C8          		 RET Z	;
160)   0E02 FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
161)   0E04 C8          		 RET Z	;
162)   0E05 FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
163)   0E07 C8          		 RET Z	;
164)   0E08 FE F0       		 CP $F0	;
165)   0E0A 20 00       		 JR NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY  	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
167)   0E0C AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
168)   0E0D C9          		 RET	;
171)   0E0E 79          		GTREL: LD A,C       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
172)   0E0F FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
173)   0E11 CC 28 0E    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
174)   0E14 FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
175)   0E16 CC 2E 0E    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
176)   0E19 FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
177)   0E1B CC 34 0E    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
178)   0E1E FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
179)   0E20 CC 28 0E    		 CALL Z, SHFRES       ; RESET SHIFT  	; RESET SHIFT
180)   0E23 32 71 FF    		 LD (LASTKEY),A         ; SET LAST KEY	; SET LAST KEY
181)   0E26 AF          		 XOR A         ; NO KEY  	; NO KEY
182)   0E27 C9          		 RET	;
184)   0E28 21 B3 FE    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
185)   0E2B CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
186)   0E2D C9          		 RET	;
188)   0E2E 21 B3 FE    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
189)   0E31 CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
190)   0E33 C9          		 RET	;
192)   0E34 21 B3 FE    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
193)   0E37 CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
194)   0E39 C9          		 RET	;
196)   0E3A 21 B3 FE    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
197)   0E3D 3E 40       		 LD A, $40       ; MASK	; MASK
198)   0E3F AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
199)   0E40 77          		 LD (HL), A       ; SAVE	; SAVE
200)   0E41 AF          		 XOR A         ; NO KEY	; NO KEY
201)   0E42 C9          		 RET	;
203)   0E43 21 B3 FE    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
204)   0E46 3E 80       		 LD A, $80       ; MASK	; MASK
205)   0E48 AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
206)   0E49 77          		 LD (HL), A       ; SAVE	; SAVE
207)   0E4A AF          		 XOR A         ; NO KEY	; NO KEY
208)   0E4B C9          		 RET	;
210)   0E4C 21 B3 FE    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
211)   0E4F 3E 20       		 LD A, $20	;
212)   0E51 AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
213)   0E52 77          		 LD (HL), A       ; SAVE	; SAVE
214)   0E53 AF          		 XOR A         ; NO KEY	; NO KEY
215)   0E54 C9          		 RET	;
217)   0E55 21 B3 FE    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
218)   0E58 3E 10       		 LD A, $10	;
219)   0E5A AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
220)   0E5B 77          		 LD (HL), A       ; SAVE	; SAVE
221)   0E5C AF          		 XOR A         ; NO KEY	; NO KEY
222)   0E5D C9          		 RET	;
226)   0E5E FE AA       		@PS2LOK: CP $AA	;
227)   0E60 38 02       		 JR C,DOTRANS       ;ONLY 0-170	;ONLY 0-170
229)   0E62 AF          		 XOR A	;
230)   0E63 C9          		 RET	;
231)   0E64 21 9A 0E    		DOTRANS: LD HL, PS2TAB1      ;UNSHIFTED	;UNSHIFTED
232)   0E67 57          		 LD D,A        ;SAVE KEY CODE	;SAVE KEY CODE
233)   0E68 CD 94 0E    		 CALL PLK1       ;GET CHAR NO SHIFT NO CAPS	;GET CHAR NO SHIFT NO CAPS
234)   0E6B 47          		 LD B,A        ;SAVE CHAR	;SAVE CHAR
235)   0E6C FE 61       		 CP 'a'	;
236)   0E6E 38 04       		 JR C,PS2CHKCAPS	;
237)   0E70 FE 7B       		PS2SGT: CP 'z'+1  	;
238)   0E72 38 09       		 JR C, PS2CPSF;ITS A LETTER CAPS AND SHIFT MATTERS	;ITS A LETTER CAPS AND SHIFT MATTERS
240)   0E74 3A B3 FE    		PS2CHKCAPS: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT  	; GET KEYBFLAGS ON A SHIFT
241)   0E77 CB 77       		 BIT 6, A	;
242)   0E79 78          		 LD A,B	;
243)   0E7A C8          		 RET Z        ;IF NO SHIFT RETURN TAB1 CHAR	;IF NO SHIFT RETURN TAB1 CHAR
245)   0E7B 18 0F       		 JR PS2SHIFT	;
247)   0E7D 3A B3 FE    		PS2CPSF: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
248)   0E80 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
249)   0E81 CB 1F       		 RR A	;
250)   0E83 CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
251)   0E85 A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
252)   0E86 CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED      	;CHECK IF BIT 4 IS 0 = UNSHIFTED
253)   0E88 20 02       		 JR NZ,PS2SHIFT	;
257)   0E8A 78          		 LD A,B    	;
258)   0E8B C9          		 RET	;
259)   0E8C 7A          		PS2SHIFT: LD A, D       ;RESTORE A KEYCODE	;RESTORE A KEYCODE
260)   0E8D 21 44 0F    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
261)   0E90 CD 94 0E    		 CALL PLK1       ;GET CHAR	;GET CHAR
262)   0E93 C9          		 RET	;
263)   0E94 06 00       		PLK1: LD B, 0	;
264)   0E96 4F          		 LD C, A	;
265)   0E97 09          		 ADD HL, BC	;
266)   0E98 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
267)   0E99 C9          		 RET	;
271)   0E9A 00 00 00 A5 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
271)   0E9E 00 00 00 00 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
271)   0EA2 00 00       		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
272)   0EA4 A8 A6 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
272)   0EA8 60 00 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
272)   0EAC 00 00       		 DB 168,166,0,0,'`',0,0,0,0,0	;
273)   0EAE 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
273)   0EB2 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
273)   0EB6 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
274)   0EB8 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
274)   0EBC 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
274)   0EC0 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
275)   0EC2 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
275)   0EC6 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
275)   0ECA 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
276)   0ECC 62 68 67 79 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
276)   0ED0 36 00 00 2C 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
276)   0ED4 6D 6A       		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
277)   0ED6 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
277)   0EDA 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
277)   0EDE 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
278)   0EE0 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
278)   0EE4 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
278)   0EE8 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
279)   0EEA 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
279)   0EEE 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
279)   0EF2 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
280)   0EF4 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
280)   0EF8 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
280)   0EFC 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
281)   0EFE 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
281)   0F02 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
281)   0F06 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
282)   0F08 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
282)   0F0C 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
282)   0F10 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
283)   0F12 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
283)   0F16 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
283)   0F1A 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
284)   0F1C 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
284)   0F20 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
284)   0F24 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
285)   0F26 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
285)   0F2A 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
285)   0F2E 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
286)   0F30 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
286)   0F34 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
286)   0F38 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
287)   0F3A 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
287)   0F3E 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
287)   0F42 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
290)   0F44 00 00 00 A5 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
290)   0F48 00 00 00 00 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
290)   0F4C 00 00       		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
291)   0F4E A8 A6 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
291)   0F52 7E 00 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
291)   0F56 00 00       		 DB 168,166,0,0,'~',0,0,0,0,0	;
292)   0F58 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
292)   0F5C 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
292)   0F60 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
293)   0F62 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
293)   0F66 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
293)   0F6A 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
294)   0F6C 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
294)   0F70 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
294)   0F74 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
295)   0F76 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
295)   0F7A 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
295)   0F7E 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
296)   0F80 55 26 2A 00 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
296)   0F84 00 3C 4B 49 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
296)   0F88 4F 29       		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
297)   0F8A 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
297)   0F8E 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
297)   0F92 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
298)   0F94 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
298)   0F98 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
298)   0F9C 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
299)   0F9E 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
299)   0FA2 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
299)   0FA6 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
300)   0FA8 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
300)   0FAC 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
300)   0FB0 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
301)   0FB2 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
301)   0FB6 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
301)   0FBA 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
302)   0FBC 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
302)   0FC0 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
302)   0FC4 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
303)   0FC6 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
303)   0FCA 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
303)   0FCE 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
304)   0FD0 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
304)   0FD4 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
304)   0FD8 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
305)   0FDA 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
305)   0FDE 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
305)   0FE2 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
306)   0FE4 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
306)   0FE8 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
306)   0FEC 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 46)   0FEE 3E 03       		STRG_INIT: LD A, 3       ;38400 BPS	;38400 BPS
 47)   0FF0 CD 7B 11    		 CALL STOR_INI	;
 48)   0FF3 C9          		 RET	;
 52)   0FF4 21 F7 FE    		NEWCMD: LD HL, STRGCMD	;
 53)   0FF7 77          		 LD (HL), A	;
 54)   0FF8 23          		 INC HL	;
 55)   0FF9 E5          		 PUSH HL	;
 56)   0FFA AF          		 XOR A	;
 57)   0FFB 06 03       		 LD B, 3	;
 58)   0FFD 77          		CCAGN: LD (HL), A	;
 59)   0FFE 23          		 INC HL	;
 60)   0FFF 10 FC       		 DJNZ CCAGN	;
 61)   1001 E1          		 POP HL         ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 62)   1002 C9          		 RET	;
 65)   1003 CD DC 11    		SENDCMD: CALL FLUSHREC	;
 66)   1006 21 F7 FE    		 LD HL, STRGCMD	;
 67)   1009 06 04       		 LD B, 4	;
 68)   100B 7E          		NXTBT: LD A, (HL)	;
 69)   100C CD AB 11    		 CALL STOR_TX	;
 70)   100F 23          		 INC HL	;
 71)   1010 10 F9       		 DJNZ NXTBT	;
 72)   1012 C9          		 RET	;
 74)   1013 3E 01       		STRG_OPENCRD: LD A, OPENCARD	;
 75)   1015 CD F4 0F    		 CALL NEWCMD	;
 76)   1018 CD 03 10    		 CALL SENDCMD	;
 77)   101B CD F2 28    		 CALL DEL2	;
 78)   101E CD BE 11    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
 79)   1021 FE C9       		 CP FCMDOKTST	;
 80)   1023 3F          		 CCF	;
 81)   1024 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
 86)   1025 F5          		STRG_GETEOF: PUSH AF	;
 87)   1026 3E 0D       		 LD A, ENDOFFILE	;
 88)   1028 CD F4 0F    		 CALL NEWCMD	;
 89)   102B F1          		 POP AF	;
 90)   102C 77          		 LD (HL), A       ;FID	;FID
 91)   102D CD 03 10    		 CALL SENDCMD	;
 93)   1030 CD BE 11    		 CALL STOR_RX       ;GET EOF	;GET EOF
 94)   1033 FE C9       		 CP FCMDOKTST	;
 95)   1035 3F          		 CCF	;
 96)   1036 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
101)   1037 F5          		STRG_GETSIZE: PUSH AF	;
102)   1038 3E 0C       		 LD A, FILESIZE	;
103)   103A 18 03       		 JR GT2BYTES	;
108)   103C F5          		STRG_GETPOS: PUSH AF	;
109)   103D 3E 09       		 LD A, POSITIONG	;
110)   103F CD F4 0F    		GT2BYTES: CALL NEWCMD	;
111)   1042 F1          		 POP AF	;
112)   1043 77          		 LD (HL), A       ;FID	;FID
113)   1044 CD 03 10    		 CALL SENDCMD	;
115)   1047 CD BE 11    		 CALL STOR_RX       ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
116)   104A 67          		 LD H, A	;
117)   104B CD BE 11    		 CALL STOR_RX       ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
118)   104E 6F          		 LD L, A	;
119)   104F CD BE 11    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
120)   1052 FE C9       		 CP FCMDOKTST	;
121)   1054 3F          		 CCF	;
122)   1055 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
128)   1056 EB          		STRG_SETPOS: EX DE, HL	;
129)   1057 F5          		 PUSH AF	;
130)   1058 3E 08       		 LD A, POSITIONS	;
131)   105A CD F4 0F    		 CALL NEWCMD	;
132)   105D F1          		 POP AF	;
133)   105E 77          		 LD (HL), A       ;FID	;FID
134)   105F 23          		 INC HL	;
135)   1060 72          		 LD (HL), D       ;NEW POS ON DE	;NEW POS ON DE
136)   1061 23          		 INC HL	;
137)   1062 73          		 LD (HL), E	;
138)   1063 CD 03 10    		 CALL SENDCMD	;
139)   1066 CD F2 28    		 CALL DEL2	;
140)   1069 CD BE 11    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
141)   106C FE C9       		 CP FCMDOKTST	;
142)   106E 3F          		 CCF	;
143)   106F C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
148)   1070 3E 0A       		STRG_DIRLIST: LD A, LISTDIR	;
149)   1072 CD F4 0F    		 CALL NEWCMD	;
150)   1075 CD 03 10    		 CALL SENDCMD	;
151)   1078 CD F2 28    		 CALL DEL2	;
153)   107B 11 CF FE    		 LD DE, STRGBUFF	;
154)   107E CD BE 11    		NXTCHR: CALL STOR_RX	;
155)   1081 FE FF       		 CP 255	;
156)   1083 28 05       		 JR Z, DIROUT	;
158)   1085 CD 42 04    		 CALL OS_PRINTCHAR	;
159)   1088 18 F4       		 JR NXTCHR	;
160)   108A CD F2 28    		DIROUT: CALL DEL2	;
161)   108D CD BE 11    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
162)   1090 FE C9       		 CP FCMDOKTST	;
163)   1092 3F          		 CCF	;
164)   1093 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
168)   1094 CD B4 11    		SENDFNAME: CALL STOR_TXT      ;SEND FILENAME	;SEND FILENAME
169)   1097 AF          		 XOR A	;
170)   1098 CD AB 11    		 CALL STOR_TX	;
171)   109B C9          		 RET	;
174)   109C 3E 0B       		STRG_DIRCHG: LD A, CHANGEDIR	;
175)   109E CD F4 0F    		 CALL NEWCMD	;
176)   10A1 CD 03 10    		 CALL SENDCMD	;
177)   10A4 21 CF FE    		 LD HL, STRGBUFF	;
178)   10A7 CD 94 10    		 CALL SENDFNAME	;
179)   10AA CD F2 28    		 CALL DEL2	;
180)   10AD CD BE 11    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
181)   10B0 FE C9       		 CP FCMDOKTST	;
182)   10B2 3F          		 CCF	;
183)   10B3 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
187)   10B4 F5          		STRG_OPNFILE: PUSH AF	;
188)   10B5 3E 02       		 LD A, OPENFILE	;
189)   10B7 CD F4 0F    		 CALL NEWCMD	;
190)   10BA F1          		 POP AF	;
191)   10BB 23          		 INC HL        ;FID IS NOT SET YET	;FID IS NOT SET YET
192)   10BC 77          		 LD (HL), A       ;PARAM1	;PARAM1
193)   10BD CD 03 10    		 CALL SENDCMD	;
194)   10C0 21 CF FE    		 LD HL, STRGBUFF	;
195)   10C3 CD 94 10    		 CALL SENDFNAME	;
196)   10C6 CD F2 28    		 CALL DEL2	;
197)   10C9 CD BE 11    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
199)   10CC 32 FB FE    		 LD (FID), A	;
200)   10CF FE C9       		 CP FCMDOKTST	;
201)   10D1 3F          		 CCF	;
202)   10D2 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
205)   10D3 F5          		STRG_CLSFILE: PUSH AF	;
206)   10D4 3E 03       		 LD A, CLOSEFILE	;
207)   10D6 CD F4 0F    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
208)   10D9 F1          		 POP AF	;
209)   10DA 77          		 LD (HL), A       ;FID	;FID
210)   10DB CD 03 10    		 CALL SENDCMD	;
211)   10DE CD BE 11    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
212)   10E1 FE C9       		 CP FCMDOKTST	;
213)   10E3 3F          		 CCF	;
214)   10E4 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
220)   10E5 F5          		STRG_BLKWRITE: PUSH AF	;
221)   10E6 3E 07       		 LD A, WRITEBLOCK	;
222)   10E8 CD F4 0F    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
223)   10EB F1          		 POP AF	;
224)   10EC 77          		 LD (HL), A       ;FID	;FID
225)   10ED 23          		 INC HL	;
227)   10EE 78          		 LD A, B        ;BYTES HI	;BYTES HI
228)   10EF 77          		 LD (HL), A	;
229)   10F0 23          		 INC HL	;
230)   10F1 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
231)   10F2 77          		 LD (HL), A	;
232)   10F3 CD 03 10    		 CALL SENDCMD        ;SEND BLOCKWRITE COMMAND BC BYTES	;SEND BLOCKWRITE COMMAND BC BYTES
233)   10F6 EB          		 EX DE, HL	;
234)   10F7 7E          		BWNXCH: LD A, (HL)	;
235)   10F8 CD AB 11    		 CALL STOR_TX	;
236)   10FB 23          		 INC HL	;
237)   10FC 0B          		 DEC BC	;
238)   10FD 78          		 LD A, B	;
239)   10FE B1          		 OR C	;
240)   10FF 20 F6       		 JR NZ, BWNXCH	;
241)   1101 CD BE 11    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
242)   1104 FE C9       		 CP FCMDOKTST	;
243)   1106 3F          		 CCF	;
244)   1107 C9          		 RET	;
252)   1108 F5          		STRG_BLKREAD: PUSH AF	;
253)   1109 3E 06       		 LD A, READBLOCK	;
254)   110B CD F4 0F    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
255)   110E F1          		 POP AF	;
256)   110F 77          		 LD (HL), A       ;FID	;FID
257)   1110 23          		 INC HL	;
258)   1111 78          		 LD A, B        ;BYTES HI	;BYTES HI
259)   1112 77          		 LD (HL), A	;
260)   1113 23          		 INC HL	;
261)   1114 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
262)   1115 77          		 LD (HL), A	;
263)   1116 CD 03 10    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
264)   1119 CD F2 28    		 CALL DEL2 	;
265)   111C CD BE 11    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
266)   111F 47          		 LD B, A	;
267)   1120 CD BE 11    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
268)   1123 4F          		 LD C, A	;
269)   1124 78          		 LD A, B	;
270)   1125 B1          		 OR C	;
271)   1126 28 13       		 JR Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
273)   1128 C5          		 PUSH BC        ;SAVE BYTES TO RECEIVE	;SAVE BYTES TO RECEIVE
274)   1129 CD BE 11    		OFNXCH: CALL STOR_RX	;
275)   112C 12          		 LD (DE), A	;
276)   112D 13          		 INC DE	;
277)   112E 0B          		 DEC BC	;
278)   112F 78          		 LD A, B	;
279)   1130 B1          		 OR C	;
280)   1131 20 F6       		 JR NZ, OFNXCH	;
281)   1133 CD BE 11    		OFEXIT: CALL STOR_RX        ;GET RESULT	;GET RESULT
282)   1136 C1          		 POP BC         ;TOTAL BYTES RECEIVED	;TOTAL BYTES RECEIVED
283)   1137 FE C9       		 CP FCMDOKTST	;
284)   1139 3F          		 CCF	;
285)   113A C9          		 RET	;
287)   113B 18 F6       		 JR OFEXIT	;
291)   113D F5          		STRG_TPFILE: PUSH AF	;
292)   113E 3E 06       		 LD A, READBLOCK	;
293)   1140 CD F4 0F    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
294)   1143 F1          		 POP AF	;
295)   1144 77          		 LD (HL), A       ;FID	;FID
296)   1145 23          		 INC HL	;
297)   1146 78          		 LD A, B        ;BYTES HI	;BYTES HI
298)   1147 77          		 LD (HL), A	;
299)   1148 23          		 INC HL	;
300)   1149 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
301)   114A 77          		 LD (HL), A	;
302)   114B CD 03 10    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
303)   114E CD F2 28    		 CALL DEL2	;
304)   1151 CD BE 11    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
305)   1154 47          		 LD B, A	;
306)   1155 CD BE 11    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
307)   1158 4F          		 LD C, A	;
308)   1159 78          		 LD A, B	;
309)   115A B1          		 OR C	;
310)   115B CA 3B 11    		 JP Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
312)   115E 3E 0D       		 LD A, 13	;
313)   1160 C5          		 PUSH BC	;
314)   1161 CD 42 04    		 CALL OS_PRINTCHAR	;
315)   1164 C1          		 POP BC	;
316)   1165 CD BE 11    		TFOFNXCH: CALL STOR_RX       ;GET THE CHAR	;GET THE CHAR
317)   1168 C5          		 PUSH BC	;
318)   1169 CD 42 04    		 CALL OS_PRINTCHAR       ;PRINT TO SCREEN	;PRINT TO SCREEN
319)   116C C1          		 POP BC	;
320)   116D 0B          		 DEC BC	;
321)   116E 78          		 LD A, B	;
322)   116F B1          		 OR C	;
323)   1170 20 F3       		 JR NZ, TFOFNXCH	;
324)   1172 CD BE 11    		TFOFEXIT: CALL STOR_RX       ;GET RESULT	;GET RESULT
325)   1175 FE C9       		 CP FCMDOKTST	;
326)   1177 3F          		 CCF	;
327)   1178 C9          		 RET         ;C SET IF ERROR	;C SET IF ERROR
330)   1179 18 F7       		 JR TFOFEXIT	;
352)   117B 	            		 RBR EQU DEVSTOR+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
353)   117B 	            		 THR EQU DEVSTOR+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
354)   117B 	            		 IER EQU DEVSTOR+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
359)   117B 	            		 IIR EQU DEVSTOR+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
364)   117B 	            		 FCR EQU DEVSTOR+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
372)   117B 	            		 LCR EQU DEVSTOR+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
380)   117B 	            		 MCR EQU DEVSTOR+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
381)   117B 	            		 LSR EQU DEVSTOR+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
390)   117B 	            		 MSR EQU DEVSTOR+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
391)   117B 	            		 SCR EQU DEVSTOR+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
392)   117B 	            		 DLL EQU DEVSTOR+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
393)   117B 	            		 DLM EQU DEVSTOR+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
397)   117B F5          		STOR_INI: PUSH AF	;
398)   117C 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
399)   117E D3 2B       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
407)   1180 F1          		 POP AF	;
408)   1181 D3 28       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
409)   1183 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
410)   1185 D3 29       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
411)   1187 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
412)   1189 D3 2B       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
414)   118B 3E 00       		 LD A, 0	;
415)   118D D3 2A       		 OUT (FCR), A        ;//was commented	;//was commented
416)   118F 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
417)   1191 D3 29       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
418)   1193 AF          		 XOR A         ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
419)   1194 D3 2C       		 OUT (MCR), A	;
420)   1196 C9          		 RET	;
426)   1197 F5          		STORTXRD: PUSH AF	;
427)   1198 DB 2D       		STORTXLP: IN A, (LSR)       ; fetch the control register	; fetch the control register
428)   119A CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
429)   119C 28 FA       		 JR Z, STORTXLP	;
430)   119E F1          		 POP AF	;
431)   119F C9          		 RET	;
434)   11A0 F5          		WAITCTSLOW: PUSH AF	;
435)   11A1 DB 2E       		TSTAGN: IN A, (MSR)	;
436)   11A3 CB 67       		 BIT 4, A        ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
437)   11A5 20 02       		 JR NZ, WCLEX	;
438)   11A7 18 F8       		 JR TSTAGN	;
439)   11A9 F1          		WCLEX: POP AF	;
440)   11AA C9          		 RET	;
446)   11AB CD A0 11    		 CALL WAITCTSLOW	;
451)   11AE CD 97 11    		 CALL STORTXRD	;
456)   11B1 D3 28       		 OUT (THR), A	;
457)   11B3 C9          		 RET	;
460)   11B4 7E          		STOR_TXT: LD A, (HL)	;
461)   11B5 23          		 INC HL	;
462)   11B6 FE 00       		 CP 0	;
463)   11B8 C8          		 RET Z	;
464)   11B9 CD AB 11    		 CALL STOR_TX	;
465)   11BC 18 F6       		 JR STOR_TXT	;
472)   11BE F3          		STOR_RX: DI	;
473)   11BF 3E 02       		 LD A, 2        ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
474)   11C1 D3 2C       		 OUT (MCR), A	;
475)   11C3 CD E7 11    		 CALL STORRXRD	;
476)   11C6 AF          		STOR_GTCH: XOR A        ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
477)   11C7 D3 2C       		 OUT (MCR), A	;
478)   11C9 DB 28       		 IN A, (RBR)	;
479)   11CB FB          		 EI	;
480)   11CC C9          		 RET	;
482)   11CD 3E 02       		STOR_RXNW: LD A, 2       ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
483)   11CF D3 2C       		 OUT (MCR), A	;
484)   11D1 DB 2D       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
485)   11D3 CB 47       		 BIT 0, A	;
486)   11D5 28 03       		 JR Z, STOR_NOCHAR	;
487)   11D7 F3          		 DI	;
488)   11D8 18 EC       		 JR STOR_GTCH	;
489)   11DA AF          		STOR_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
490)   11DB C9          		 RET	;
492)   11DC 06 0A       		FLUSHREC: LD B, 10	;
493)   11DE CD CD 11    		FRAGN: CALL STOR_RXNW	;
494)   11E1 10 FB       		 DJNZ FRAGN	;
495)   11E3 AF          		 XOR A	;
496)   11E4 D3 2C       		 OUT (MCR), A	;
497)   11E6 C9          		 RET	;
503)   11E7 F3          		STORRXRD: DI	;
504)   11E8 F5          		 PUSH AF	;
505)   11E9 DB 2D       		STORRXLP: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
506)   11EB CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
507)   11ED 28 FA       		 JR Z, STORRXLP	;
508)   11EF F1          		 POP AF	;
509)   11F0 FB          		 EI	;
510)   11F1 C9          		 RET	;
514)   11F2 DB 2D       		STOR_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
515)   11F4 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
516)   11F6 C9          		 RET	;
  7)   11F7 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  8)   11F7 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
  9)   11F7 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 10)   11F7 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 11)   11F7 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 56)   11F7 C5          		I2C_RDSTAT_WT: PUSH BC	;
 57)   11F8 01 00 20    		 LD BC, $2000	;
 58)   11FB DB 73       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 59)   11FD CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 60)   11FF 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 61)   1201 0B          		 DEC BC	;
 62)   1202 78          		 LD A, B	;
 63)   1203 B1          		 OR C	;
 64)   1204 20 F5       		 JR NZ, I2CRWT_AGN	;
 65)   1206 C1          		I2CRWT_OK: POP BC	;
 66)   1207 DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 67)   1209 C9          		 RET	;
 69)   120A DB 73       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 70)   120C CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 71)   120E 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 72)   1210 C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 73)   1211 DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 74)   1213 C9          		 RET	;
 77)   1214 3E 01       		I2C_INIT: LD A, I2CADR	;
 78)   1216 D3 70       		 OUT (DI2C_INDPTR), A	;
 79)   1218 3E E0       		 LD A, $E0	;
 80)   121A D3 72       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 82)   121C 3E 40       		 LD A, $40        ;INIT	;INIT
 83)   121E D3 73       		 OUT (DI2C_CON), A      ;	;
 84)   1220 06 FA       		 LD B, 250	;
 85)   1222 CD DF 28    		 CALL DELAYMICRO	;
 86)   1225 06 FA       		 LD B, 250	;
 87)   1227 CD DF 28    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 92)   122A 3E 06       		 LD A, I2CMODE	;
 93)   122C D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 94)   122E 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 95)   1230 D3 72       		 OUT (DI2C_INDIR), A	;
 96)   1232 3E 02       		 LD A, I2CSCLL	;
 97)   1234 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 98)   1236 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
 99)   1238 D3 72       		 OUT (DI2C_INDIR), A	;
100)   123A 3E 03       		 LD A, I2CSCLH	;
101)   123C D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
102)   123E 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
103)   1240 D3 72       		 OUT (DI2C_INDIR), A	;
105)   1242 C9          		 RET	;
112)   1243 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
113)   1245 D3 73       		 OUT (DI2C_CON), A	;
114)   1247 CD F7 11    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
115)   124A 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
116)   124B FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
117)   124D 28 21       		 JR Z, WRB_S1	;
118)   124F FE 10       		 CP MASTER_RESTART_TXed	;
119)   1251 28 1D       		 JR Z, WRB_S1	;
120)   1253 FE 28       		 CP MASTER_DATA_W_ACK	;
121)   1255 28 26       		 JR Z, WRB_S2	;
122)   1257 FE 18       		 CP MASTER_SLA_W_ACK	;
123)   1259 28 23       		 JR Z, WRB_S3	;
124)   125B FE 20       		 CP MASTER_SLA_W_NAK	;
125)   125D 28 2D       		 JR Z, WRB_EXIT	;
126)   125F FE 30       		 CP MASTER_DATA_W_NAK	;
127)   1261 28 29       		 JR Z, WRB_EXIT	;
128)   1263 FE 38       		 CP MASTER_ARB_LOST	;
129)   1265 C8          		 RET Z	;
130)   1266 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
131)   1268 C8          		 RET Z	;
132)   1269 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
133)   126B C8          		 RET Z	;
134)   126C FE D8       		 CP SLAVE_GENERALCALL_AL	;
135)   126E C8          		 RET Z	;
136)   126F C9          		 RET	;
138)   1270 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
139)   1271 CB 27       		 SLA A	;
140)   1273 E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
141)   1275 D3 71       		 OUT (DI2C_DAT), A	;
142)   1277 3E 40       		 LD A, $40	;
143)   1279 D3 73       		 OUT (DI2C_CON), A	;
144)   127B 18 CA       		 JR WRB_LP1	;
145)   127D 0B          		WRB_S2: DEC BC	;
146)   127E 78          		WRB_S3: LD A, B	;
147)   127F B1          		 OR C	;
148)   1280 28 0A       		 JR Z, WRB_EXIT	;
149)   1282 7E          		 LD A, (HL)	;
150)   1283 23          		 INC HL	;
151)   1284 D3 71       		 OUT (DI2C_DAT), A	;
152)   1286 3E 40       		 LD A, $40	;
153)   1288 D3 73       		 OUT (DI2C_CON), A	;
154)   128A 18 BB       		 JR WRB_LP1	;
156)   128C 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
157)   128E D3 73       		 OUT (DI2C_CON), A	;
158)   1290 78          		 LD A, B	;
159)   1291 B1          		 OR C	;
160)   1292 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
166)   1293 78          		I2C_RD_BYTE: LD A, B	;
167)   1294 B1          		 OR C	;
168)   1295 C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
169)   1296 3E 60       		 LD A, $60	;
170)   1298 D3 73       		 OUT (DI2C_CON), A	;
171)   129A CD F7 11    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
172)   129D 1E 00       		 LD E, 0	;
173)   129F FE 08       		 CP MASTER_START_TXed	;
174)   12A1 28 1F       		 JR Z, RDB_S1	;
176)   12A3 28 1D       		 JR Z, RDB_S1	;
177)   12A5 FE 58       		 CP MASTER_DATA_R_NAK	;
178)   12A7 28 26       		 JR Z, RDB_S2	;
179)   12A9 FE 50       		 CP MASTER_DATA_R_ACK	;
180)   12AB 28 24       		 JR Z, RDB_S3	;
181)   12AD FE 40       		 CP MASTER_SLA_R_ACK	;
182)   12AF 28 25       		 JR Z, RDB_S4	;
183)   12B1 FE 48       		 CP MASTER_SLA_R_NAK	;
184)   12B3 28 38       		 JR Z, RDB_EXIT	;
185)   12B5 FE 38       		 CP MASTER_ARB_LOST	;
186)   12B7 C8          		 RET Z	;
187)   12B8 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
188)   12BA C8          		 RET Z	;
189)   12BB FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
190)   12BD C8          		 RET Z	;
191)   12BE FE D8       		 CP SLAVE_GENERALCALL_AL	;
192)   12C0 C8          		 RET Z	;
193)   12C1 C9          		 RET	;
196)   12C2 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
197)   12C3 CB 27       		 SLA A	;
198)   12C5 F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
199)   12C7 D3 71       		 OUT (DI2C_DAT), A	;
200)   12C9 3E 40       		 LD A, $40	;
201)   12CB D3 73       		 OUT (DI2C_CON), A	;
202)   12CD 18 CB       		 JR RDB_LP1	;
203)   12CF 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
204)   12D1 DB 71       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
205)   12D3 77          		 LD (HL), A	;
206)   12D4 23          		 INC HL	;
207)   12D5 0B          		 DEC BC	;
208)   12D6 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
209)   12D7 B1          		 OR C	;
210)   12D8 28 13       		 JR Z, RDB_EXIT	;
211)   12DA 7B          		 LD A, E	;
212)   12DB FE 01       		 CP 1	;
213)   12DD 28 0E       		 JR Z, RDB_EXIT	;
214)   12DF 78          		 LD A, B	;
215)   12E0 81          		 ADD C	;
216)   12E1 FE 01       		 CP 1	;
217)   12E3 3E 40       		 LD A, $40	;
218)   12E5 28 02       		 JR Z, RDB_NXT1	;
219)   12E7 3E C0       		 LD A, $C0	;
220)   12E9 D3 73       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
221)   12EB 18 AD       		 JR RDB_LP1	;
223)   12ED 3E 50       		RDB_EXIT: LD A, $50	;
224)   12EF D3 73       		 OUT (DI2C_CON), A	;
225)   12F1 78          		 LD A, B	;
226)   12F2 B1          		 OR C	;
227)   12F3 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
 28)   12F4 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 28)   12F8 61 79       		 SUN DEFM  "Sunday"	;
 29)   12FA 00          		 DB 0	;
 30)   12FB 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 30)   12FF 61 79       		 MON DEFM  "Monday"	;
 31)   1301 00          		 DB 0	;
 32)   1302 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 32)   1306 64 61 79    		 TUE DEFM  "Tuesday"	;
 33)   1309 00          		 DB 0	;
 34)   130A 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 34)   130E 65 73 64 61 		 WED DEFM  "Wednesday"	;
 34)   1312 79          		 WED DEFM  "Wednesday"	;
 35)   1313 00          		 DB 0	;
 36)   1314 54 68 75 72 		 THU DEFM  "Thursday"	;
 36)   1318 73 64 61 79 		 THU DEFM  "Thursday"	;
 37)   131C 00          		 DB 0	;
 38)   131D 46 72 69 64 		 FRI DEFM  "Friday"	;
 38)   1321 61 79       		 FRI DEFM  "Friday"	;
 39)   1323 00          		 DB 0	;
 40)   1324 53 61 74 75 		 SAT DEFM  "Saturday"	;
 40)   1328 72 64 61 79 		 SAT DEFM  "Saturday"	;
 41)   132C 00          		 DB 0	;
 43)   132D F4 12       		 DAYS DEFW SUN	;
 44)   132F FB 12       		 DEFW MON	;
 45)   1331 02 13       		 DEFW TUE	;
 46)   1333 0A 13       		 DEFW WED	;
 47)   1335 14 13       		 DEFW THU	;
 48)   1337 1D 13       		 DEFW FRI	;
 49)   1339 24 13       		 DEFW SAT	;
 51)   133B 45 52 52 4F 		 MESERR DEFM "ERROR ON RECEIVING"	;
 51)   133F 52 20 4F 4E 		 MESERR DEFM "ERROR ON RECEIVING"	;
 51)   1343 20 52 45 43 		 MESERR DEFM "ERROR ON RECEIVING"	;
 51)   1347 45 49 56 49 		 MESERR DEFM "ERROR ON RECEIVING"	;
 51)   134B 4E 47       		 MESERR DEFM "ERROR ON RECEIVING"	;
 52)   134D 0A 0D 00    		 DEFB 10,13,0	;
 54)   1350 45 52 52 4F 		 MESERR0 DEFM "ERROR ON SENDING"	;
 54)   1354 52 20 4F 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 54)   1358 20 53 45 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 54)   135C 44 49 4E 47 		 MESERR0 DEFM "ERROR ON SENDING"	;
 55)   1360 0A 0D 00    		 DEFB 10,13,0	;
 57)   1363 7B          		SHERR0: LD A, E	;
 58)   1364 C5          		 PUSH BC	;
 59)   1365 CD B6 05    		 CALL SOUTAS	;
 60)   1368 C1          		 POP BC	;
 61)   1369 79          		 LD A, C	;
 62)   136A CD B6 05    		 CALL SOUTAS	;
 64)   136D 21 50 13    		 LD HL, MESERR0	;
 65)   1370 CD D8 0C    		 CALL RS_TXT	;
 66)   1373 C9          		 RET	;
 69)   1374 79          		SHERR: LD A, C	;
 70)   1375 CD B6 05    		 CALL SOUTAS	;
 71)   1378 21 3B 13    		 LD HL, MESERR	;
 72)   137B CD D8 0C    		 CALL RS_TXT	;
 73)   137E 37          		 SCF	;
 74)   137F C9          		 RET	;
 77)   1380 AF          		RST_BUF: XOR A	;
 78)   1381 06 14       		 LD B, 20	;
 79)   1383 21 8A FE    		 LD HL, BUFFER	;
 80)   1386 77          		LP1: LD (HL), A	;
 81)   1387 23          		 INC HL	;
 82)   1388 10 FC       		 DJNZ LP1	;
 83)   138A C9          		 RET	;
 87)   138B C9          		 RET	;
 89)   138C 21 8A FE    		DS1307_GETNOW: LD HL, BUFFER	;
 90)   138F AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 91)   1390 77          		 LD (HL), A	;
 92)   1391 16 68       		 LD D, DS1307_ADDRESS	;
 93)   1393 01 01 00    		 LD BC, 1	;
 94)   1396 CD 43 12    		 CALL I2C_WRITE	;
 95)   1399 C2 63 13    		 JP NZ, SHERR0	;
 97)   139C 21 8A FE    		 LD HL, BUFFER	;
 98)   139F 16 68       		 LD D, DS1307_ADDRESS	;
 99)   13A1 01 07 00    		 LD BC, 7	;
100)   13A4 CD 93 12    		 CALL I2C_READ	;
101)   13A7 C2 74 13    		 JP NZ, SHERR	;
102)   13AA AF          		 XOR A	;
103)   13AB C9          		 RET	;
108)   13AC C9          		 RET	;
113)   13AD 11 8A FE    		 LD DE, BUFFER	;
114)   13B0 AF          		 XOR A	;
115)   13B1 12          		 LD (DE), A	;
116)   13B2 13          		 INC DE	;
117)   13B3 3E 0A       		 LD A, 10        ; 10 SECS	; 10 SECS
118)   13B5 CD 26 29    		 CALL BN2BCD	;
119)   13B8 7D          		 LD A, L	;
120)   13B9 12          		 LD (DE), A	;
121)   13BA 13          		 INC DE	;
122)   13BB 3E 22       		 LD A, 34        ; 28 MINS	; 28 MINS
123)   13BD CD 26 29    		 CALL BN2BCD	;
124)   13C0 7D          		 LD A, L	;
125)   13C1 12          		 LD (DE), A	;
126)   13C2 13          		 INC DE	;
127)   13C3 3E 12       		 LD A, 18        ; 19 HOURS	; 19 HOURS
128)   13C5 CD 26 29    		 CALL BN2BCD	;
129)   13C8 7D          		 LD A, L	;
130)   13C9 12          		 LD (DE), A	;
131)   13CA 13          		 INC DE	;
132)   13CB 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
133)   13CD 12          		 LD (DE), A	;
134)   13CE 13          		 INC DE	;
135)   13CF 3E 12       		 LD A, 18        ; 8 DAY	; 8 DAY
136)   13D1 CD 26 29    		 CALL BN2BCD	;
137)   13D4 7D          		 LD A, L	;
138)   13D5 12          		 LD (DE), A	;
139)   13D6 13          		 INC DE	;
140)   13D7 3E 02       		 LD A, 02        ; 10 MONTH	; 10 MONTH
141)   13D9 CD 26 29    		 CALL BN2BCD	;
142)   13DC 7D          		 LD A, L	;
143)   13DD 12          		 LD (DE), A	;
144)   13DE 13          		 INC DE	;
145)   13DF 3E 15       		 LD A, 21        ; 21 YEAR (2020)	; 21 YEAR (2020)
146)   13E1 CD 26 29    		 CALL BN2BCD	;
147)   13E4 7D          		 LD A, L	;
148)   13E5 12          		 LD (DE), A	;
149)   13E6 13          		 INC DE	;
150)   13E7 AF          		 XOR A	;
151)   13E8 12          		 LD (DE), A	;
164)   13E9 21 8A FE    		DS1307_ADJUST: LD HL, BUFFER	;
165)   13EC 16 68       		 LD D, DS1307_ADDRESS	;
166)   13EE 01 09 00    		 LD BC, 9	;
167)   13F1 CD 43 12    		 CALL I2C_WRITE	;
168)   13F4 C2 63 13    		 JP NZ, SHERR0	;
169)   13F7 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
170)   13FA CD A3 29    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
171)   13FD 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
172)   1400 CD A3 29    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
173)   1403 C9          		 RET	;
177)   1404 21 8A FE    		DS1307_SETSQ: LD HL, BUFFER	;
178)   1407 E5          		 PUSH HL	;
179)   1408 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
180)   140A 77          		 LD (HL), A	;
181)   140B 23          		 INC HL	;
182)   140C 7A          		 LD A, D	;
183)   140D 77          		 LD (HL), A	;
184)   140E E1          		 POP HL	;
185)   140F 16 68       		 LD D, DS1307_ADDRESS	;
186)   1411 01 02 00    		 LD BC, 2	;
187)   1414 CD 43 12    		 CALL I2C_WRITE	;
188)   1417 C2 63 13    		 JP NZ, SHERR0	;
189)   141A C9          		 RET	;
193)   141B CD 8D 29    		CONVHL: CALL Bcd2ASC	;
194)   141E 26 00       		 LD H, 0	;
195)   1420 C9          		 RET	;
198)   1421 06 07       		CHKERROR: LD B, 7	;
199)   1423 21 8A FE    		 LD HL, BUFFER	;
200)   1426 7E          		CEAGN: LD A, (HL)	;
201)   1427 FE FF       		 CP $FF	;
202)   1429 28 05       		 JR Z, STER	;
203)   142B 23          		 INC HL	;
204)   142C 10 F8       		 DJNZ CEAGN	;
205)   142E AF          		 XOR A	;
206)   142F C9          		 RET	;
209)   1430 37          		 SCF	;
210)   1431 C9          		 RET	;
215)   1432 CD 80 13    		DS1307_GETTIME: CALL RST_BUF	;
216)   1435 CD 8C 13    		 CALL DS1307_GETNOW	;
217)   1438 D8          		 RET C         ;ERROR RETURN	;ERROR RETURN
218)   1439 CD 21 14    		 CALL CHKERROR	;
219)   143C D8          		 RET C         ;ERRREAD  ;IF ERROR DONT PRINT	;ERRREAD  ;IF ERROR DONT PRINT
220)   143D DD 21 8A FE 		 LD IX, BUFFER	;
221)   1441 11 9E FE    		 LD DE, TIMMSG	;
222)   1444 26 00       		 LD H, 0	;
223)   1446 DD 6E 04    		 LD L, (IX + 4)        ;DAY	;DAY
224)   1449 CD 1B 14    		 CALL CONVHL	;
225)   144C 3E 2F       		 LD A, ' / '	;
226)   144E 12          		 LD (DE), A	;
227)   144F 13          		 INC DE	;
228)   1450 DD 6E 05    		 LD L, (IX + 5)        ;MONTH	;MONTH
229)   1453 CD 1B 14    		 CALL CONVHL	;
230)   1456 3E 2F       		 LD A, ' / '	;
231)   1458 12          		 LD (DE), A	;
232)   1459 13          		 INC DE	;
233)   145A DD 6E 06    		 LD L, (IX + 6)        ;YEAR	;YEAR
234)   145D CD 1B 14    		 CALL CONVHL	;
235)   1460 3E 20       		 LD A, ' '	;
236)   1462 12          		 LD (DE), A	;
237)   1463 13          		 INC DE	;
238)   1464 DD 6E 02    		 LD L, (IX + 2)        ;HOUR	;HOUR
239)   1467 CD 1B 14    		 CALL CONVHL	;
240)   146A 3E 3A       		 LD A, ':'	;
241)   146C 12          		 LD (DE), A	;
242)   146D 13          		 INC DE	;
243)   146E DD 6E 01    		 LD L, (IX + 1)        ;MIN	;MIN
244)   1471 CD 1B 14    		 CALL CONVHL	;
245)   1474 3E 3A       		 LD A, ':'	;
246)   1476 12          		 LD (DE), A	;
247)   1477 13          		 INC DE	;
248)   1478 DD 6E 00    		 LD L, (IX)        ;SECS	;SECS
249)   147B CD 1B 14    		 CALL CONVHL	;
250)   147E 13          		 INC DE	;
251)   147F AF          		 XOR A	;
252)   1480 12          		 LD (DE), A	;
253)   1481 C9          		 RET	;
112)   1482 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
114)   1484 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
115)   1485 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
116)   1487 CB E2       		 SET D4, D	;
117)   1489 0F          		LWNXT1: RRCA	;
118)   148A 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
119)   148C CB EA       		 SET D5, D	;
120)   148E 0F          		LWNXT2: RRCA	;
121)   148F 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
122)   1491 CB F2       		 SET D6, D	;
123)   1493 0F          		LWNXT3: RRCA	;
124)   1494 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
125)   1496 CB FA       		 SET D7, D	;
126)   1498 7B          		LWNXT4: LD A, E	;
127)   1499 0F          		 RRCA	;
128)   149A 30 02       		 JR NC, LWNXT5	;
129)   149C CB C2       		 SET RS, D	;
131)   149E 3A 89 FE    		 LD A,(LCD_STSMASK)       ;ADD THE BACKLIGHT MASKS  	;ADD THE BACKLIGHT MASKS
132)   14A1 B2          		 OR D	;
133)   14A2 57          		 LD D,A	;
135)   14A3 CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
136)   14A5 7A          		 LD A, D	;
137)   14A6 CD B0 14    		 CALL LCD16_I2CSEND	;
138)   14A9 CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
139)   14AB 7A          		 LD A, D	;
140)   14AC CD B0 14    		 CALL LCD16_I2CSEND	;
141)   14AF C9          		 RET	;
145)   14B0 D5          		LCD16_I2CSEND: PUSH DE	;
146)   14B1 E5          		 PUSH HL	;
147)   14B2 21 8A FE    		 LD HL, BUFFER	;
148)   14B5 77          		 LD (HL), A	;
149)   14B6 16 27       		 LD D, LCDADDR	;
150)   14B8 01 01 00    		 LD BC, 1	;
151)   14BB CD 43 12    		 CALL I2C_WRITE	;
152)   14BE E1          		 POP HL	;
153)   14BF D1          		 POP DE	;
154)   14C0 C9          		 RET	;
157)   14C1 1E 00       		LCD16_COMMD: LD E, COMMAND	;
158)   14C3 18 02       		 JR LCD16_SEND	;
161)   14C5 1E 01       		LCD16_DATA: LD E, LCD_DATA 	;
164)   14C7 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
165)   14C8 7B          		 LD A, E	;
166)   14C9 0F          		 RRCA	;
167)   14CA 38 07       		 JR C, ISCMDDATA	;
168)   14CC 0F          		 RRCA	;
169)   14CD 30 04       		 JR NC, ISCMDDATA	;
171)   14CF 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
172)   14D1 18 0E       		 JR LCSD_4BIT	;
173)   14D3 7A          		ISCMDDATA: LD A, D	;
174)   14D4 CB 3F       		 SRL A	;
175)   14D6 CB 3F       		 SRL A	;
176)   14D8 CB 3F       		 SRL A	;
177)   14DA CB 3F       		 SRL A	;
178)   14DC D5          		 PUSH DE	;
179)   14DD CD 82 14    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
180)   14E0 D1          		 POP DE	;
181)   14E1 7A          		LCSD_4BIT: LD A, D	;
182)   14E2 E6 0F       		 AND $0F	;
183)   14E4 CD 82 14    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
184)   14E7 C9          		 RET	;
186)   14E8 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
187)   14EA 1E 02       		 LD E, FOUR_BITS	;
188)   14EC CD C7 14    		 CALL LCD16_SEND	;
189)   14EF 01 00 30    		 LD BC, $3000	;
190)   14F2 CD A3 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
191)   14F5 3E 03       		 LD A, 3	;
192)   14F7 1E 02       		 LD E, FOUR_BITS	;
193)   14F9 CD C7 14    		 CALL LCD16_SEND	;
194)   14FC 01 00 30    		 LD BC, $3000	;
195)   14FF CD A3 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
196)   1502 3E 03       		 LD A, 3	;
197)   1504 1E 02       		 LD E, FOUR_BITS	;
198)   1506 CD C7 14    		 CALL LCD16_SEND	;
199)   1509 01 00 30    		 LD BC, $3000	;
200)   150C CD A3 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
201)   150F 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
202)   1511 1E 02       		 LD E, FOUR_BITS	;
203)   1513 CD C7 14    		 CALL LCD16_SEND	;
204)   1516 01 00 30    		 LD BC, $3000	;
205)   1519 CD A3 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
207)   151C 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
208)   151E CD C1 14    		 CALL LCD16_COMMD	;
209)   1521 3E 02       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
210)   1523 32 87 FE    		 LD (LCD_DSPCTRL), A	;
211)   1526 CD 4E 15    		 CALL LCD16_DISP	;
212)   1529 CD 69 15    		 CALL LCD16_CLR	;
213)   152C 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
214)   152E 32 88 FE    		 LD (LCD_DSPMODE), A	;
215)   1531 F6 04       		 OR LCD_ENTRYMODESET	;
216)   1533 CD C1 14    		 CALL LCD16_COMMD	;
217)   1536 01 00 30    		 LD BC, $3000	;
218)   1539 CD A3 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
219)   153C CD EC 15    		 CALL LCD16_BKLTON      ;BACKLIGHT ON BY DEFAULT	;BACKLIGHT ON BY DEFAULT
220)   153F C9          		 RET	;
222)   1540 3A 87 FE    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
223)   1543 CB 97       		 RES LCD_DISPLAYON, A	;
224)   1545 32 87 FE    		 LD (LCD_DSPCTRL), A	;
225)   1548 F6 08       		 OR LCD_DISPLAYCONTROL	;
226)   154A CD C1 14    		 CALL LCD16_COMMD	;
227)   154D C9          		 RET	;
228)   154E 3A 87 FE    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
229)   1551 CB D7       		 SET LCD_DISPLAYON, A	;
230)   1553 32 87 FE    		 LD (LCD_DSPCTRL), A	;
231)   1556 F6 08       		 OR LCD_DISPLAYCONTROL	;
232)   1558 CD C1 14    		 CALL LCD16_COMMD	;
233)   155B C9          		 RET	;
235)   155C 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
236)   155F C5          		LCLR_AGN1: PUSH BC	;
237)   1560 CD DF 28    		 CALL DELAYMICRO	;
238)   1563 C1          		 POP BC	;
239)   1564 0D          		 DEC C	;
240)   1565 E2 5F 15    		 JP PO, LCLR_AGN1	;
241)   1568 C9          		 RET	;
243)   1569 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
244)   156B CD C1 14    		 CALL LCD16_COMMD	;
245)   156E CD 5C 15    		 CALL LCDDELAY	;
246)   1571 C9          		 RET	;
249)   1572 7E          		@LCD16_PRINT: LD A, (HL)	;
250)   1573 FE 00       		 CP 0	;
251)   1575 C8          		 RET Z	;
252)   1576 CD C5 14    		 CALL LCD16_DATA	;
253)   1579 23          		 INC HL	;
254)   157A 18 F6       		 JR LCD16_PRINT	;
257)   157C CD C5 14    		@LCD16_PRCHR: CALL LCD16_DATA	;
258)   157F C9          		 RET	;
260)   1580 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
261)   1582 CD C1 14    		 CALL LCD16_COMMD	;
262)   1585 CD 5C 15    		 CALL LCDDELAY	;
263)   1588 C9          		 RET	;
266)   1589 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
267)   158D 06 00       		@LCD16_SETCURS: LD B, 0	;
268)   158F 4B          		 LD C, E	;
269)   1590 21 89 15    		 LD HL, ROWOFFSET	;
270)   1593 09          		 ADD HL, BC	;
271)   1594 7E          		 LD A, (HL)	;
272)   1595 82          		 ADD D	;
273)   1596 F6 80       		 OR LCD_SETDDRAMADDR	;
274)   1598 CD C1 14    		 CALL LCD16_COMMD	;
275)   159B C9          		 RET	;
277)   159C 3A 87 FE    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
278)   159F CB 8F       		 RES LCD_CURSORON, A	;
279)   15A1 32 87 FE    		 LD (LCD_DSPCTRL), A	;
280)   15A4 F6 08       		 OR LCD_DISPLAYCONTROL	;
281)   15A6 CD C1 14    		 CALL LCD16_COMMD	;
282)   15A9 C9          		 RET	;
285)   15AA 3A 87 FE    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
286)   15AD CB CF       		 SET LCD_CURSORON, A	;
287)   15AF 32 87 FE    		 LD (LCD_DSPCTRL), A	;
288)   15B2 F6 08       		 OR LCD_DISPLAYCONTROL	;
289)   15B4 CD C1 14    		 CALL LCD16_COMMD	;
290)   15B7 C9          		 RET	;
292)   15B8 3A 87 FE    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
293)   15BB CB 87       		 RES LCD_BLINKON, A	;
294)   15BD 32 87 FE    		 LD (LCD_DSPCTRL), A	;
295)   15C0 F6 08       		 OR LCD_DISPLAYCONTROL	;
296)   15C2 CD C1 14    		 CALL LCD16_COMMD	;
297)   15C5 C9          		 RET	;
300)   15C6 3A 87 FE    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
301)   15C9 CB C7       		 SET LCD_BLINKON, A	;
302)   15CB 32 87 FE    		 LD (LCD_DSPCTRL), A	;
303)   15CE F6 08       		 OR LCD_DISPLAYCONTROL	;
304)   15D0 CD C1 14    		 CALL LCD16_COMMD	;
305)   15D3 C9          		 RET	;
307)   15D4 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
308)   15D6 CD C1 14    		 CALL LCD16_COMMD	;
309)   15D9 C9          		 RET	;
311)   15DA 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
312)   15DC CD C1 14    		 CALL LCD16_COMMD	;
313)   15DF C9          		 RET	;
315)   15E0 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
316)   15E2 CD C1 14    		 CALL LCD16_COMMD	;
317)   15E5 C9          		 RET	;
319)   15E6 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
320)   15E8 CD C1 14    		 CALL LCD16_COMMD	;
321)   15EB C9          		 RET	;
324)   15EC 3E 08       		@LCD16_BKLTON: LD A, BACKLIGHTPINMASK AND LCD_BACKLIGHT	;
325)   15EE 32 89 FE    		 LD (LCD_STSMASK),A	;
326)   15F1 CD B0 14    		 CALL LCD16_I2CSEND	;
327)   15F4 C9          		 RET	;
329)   15F5 3E 00       		@LCD16_BKLTOFF: LD A, BACKLIGHTPINMASK AND LCD_NOBACKLIGHT	;
330)   15F7 32 89 FE    		 LD (LCD_STSMASK),A	;
331)   15FA CD B0 14    		 CALL LCD16_I2CSEND	;
332)   15FD C9          		 RET	;
 75)   15FE 0E 03       		 LD C, 11B        ;HIRES TEXT SCREEN	;HIRES TEXT SCREEN
 76)   1600 3E 04       		 LD A, VGA_NAVY	;
 77)   1602 CB 27       		 SLA A	;
 78)   1604 CB 27       		 SLA A	;
 79)   1606 CB 27       		 SLA A	;
 80)   1608 CB 27       		 SLA A	;
 81)   160A 06 0F       		 LD B, VGA_WHITE	;
 82)   160C B0          		 OR B	;
 83)   160D 47          		 LD B, A	;
 84)   160E CD 9C 16    		 CALL VGA_SETCONF	;
 85)   1611 C9          		 RET	;
 89)   1612 F5          		VGA_SETLOWGR: PUSH AF	;
 90)   1613 CD CE 16    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
 91)   1616 0E 00       		 LD C, 00B        ;LOW RES GRAPH SCREEN	;LOW RES GRAPH SCREEN
 92)   1618 CD 9C 16    		 CALL VGA_SETCONF	;
 93)   161B F1          		 POP AF	;
 94)   161C C9          		 RET	;
 97)   161D F5          		VGA_SETLOWTX: PUSH AF	;
 98)   161E CD CE 16    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
 99)   1621 0E 01       		 LD C, 01B        ;LOW RES TEXT SCREEN	;LOW RES TEXT SCREEN
100)   1623 CD 9C 16    		 CALL VGA_SETCONF	;
101)   1626 F1          		 POP AF	;
102)   1627 C9          		 RET	;
104)   1628 F5          		VGA_SETHIGR: PUSH AF	;
105)   1629 CD CE 16    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
106)   162C 0E 02       		 LD C, 10B        ;HI RES GRAPH SCREEN	;HI RES GRAPH SCREEN
107)   162E CD 9C 16    		 CALL VGA_SETCONF	;
108)   1631 F1          		 POP AF	;
109)   1632 C9          		 RET	;
111)   1633 F5          		VGA_SETHITX: PUSH AF	;
112)   1634 CD CE 16    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
113)   1637 0E 03       		 LD C, 11B        ;HI RES TEXT SCREEN	;HI RES TEXT SCREEN
114)   1639 CD 9C 16    		 CALL VGA_SETCONF	;
115)   163C F1          		 POP AF	;
116)   163D C9          		 RET	;
121)   163E 0F          		VGA_SETVISBUFF: RRCA       ;BIT 1 > BIT 7	;BIT 1 > BIT 7
122)   163F E5          		 PUSH HL	;
123)   1640 F5          		 PUSH AF	;
124)   1641 06 04       		 LD B, 4        ;8000h	;8000h
125)   1643 CD A7 0C    		 CALL GETPGINBANK	;
126)   1646 E1          		 POP HL        ;H THE BUFFER	;H THE BUFFER
127)   1647 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
128)   1648 E5          		 PUSH HL	;
129)   1649 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
130)   164B CD 85 0C    		 CALL PUTPGINBANK	;
131)   164E 21 F8 1F    		 LD HL, CONFADDR	;
132)   1651 11 00 80    		 LD DE, $8000	;
133)   1654 B7          		 OR A	;
134)   1655 ED 5A       		 ADC HL, DE	;
135)   1657 C1          		 POP BC        ;B THE BUFFER 0 OR 1	;B THE BUFFER 0 OR 1
136)   1658 7E          		 LD A,(HL)	;
137)   1659 1F          		 RRA	;
138)   165A CB 18       		 RR B        ;BIT 0 ON CARRY	;BIT 0 ON CARRY
139)   165C 17          		 RLA	;
140)   165D 77          		 LD (HL),A	;
141)   165E F1          		 POP AF        ;PREVIOUS PAGE NO	;PREVIOUS PAGE NO
142)   165F 06 04       		 LD B, 4	;
143)   1661 CD 85 0C    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
144)   1664 E1          		 POP HL	;
145)   1665 C9          		 RET  	;
149)   1666 E5          		VGA_SWVISBUFF: PUSH HL	;
150)   1667 06 04       		 LD B, 4        ;8000h	;8000h
151)   1669 CD A7 0C    		 CALL GETPGINBANK	;
152)   166C F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
153)   166D 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
154)   166F CD 85 0C    		 CALL PUTPGINBANK	;
155)   1672 21 F8 1F    		 LD HL, CONFADDR	;
156)   1675 11 00 80    		 LD DE, $8000	;
157)   1678 B7          		 OR A	;
158)   1679 ED 5A       		 ADC HL, DE	;
159)   167B 7E          		 LD A, (HL)        ;VIDEO CTRL REG1 VIDEO MODE	;VIDEO CTRL REG1 VIDEO MODE
160)   167C CB 7F       		 BIT 7,A 	;
161)   167E 28 04       		 JR Z,VSVB_SETBUF1	;
163)   1680 CB BF       		 RES 7,A	;
164)   1682 18 02       		 JR VSVB_CONT	;
165)   1684 CB FF       		VSVB_SETBUF1: SET 7,A       ;SET BIT 7	;SET BIT 7
168)   1686 77          		VSVB_CONT: LD (HL),A	;
169)   1687 F1          		 POP AF	;
170)   1688 06 04       		 LD B, 4	;
171)   168A CD 85 0C    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
172)   168D E1          		 POP HL	;
173)   168E C9          		 RET  	;
177)   168F 32 14 FF    		VGA_SETWRKBUFF: LD (VGABUF),A	;
178)   1692 C9          		 RET	;
181)   1693 3A 14 FF    		VGA_SWWRKBUFF: LD A,(VGABUF)	;
182)   1696 EE 01       		 XOR 1	;
183)   1698 32 14 FF    		 LD (VGABUF),A	;
184)   169B C9          		 RET	;
191)   169C E5          		VGA_SETCONF: PUSH HL	;
192)   169D C5          		 PUSH BC	;
193)   169E 06 04       		 LD B, 4        ;8000h	;8000h
194)   16A0 CD A7 0C    		 CALL GETPGINBANK	;
195)   16A3 C1          		 POP BC	;
196)   16A4 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
197)   16A5 C5          		 PUSH BC        ;SAVE SCREEN CODE	;SAVE SCREEN CODE
198)   16A6 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
199)   16A8 06 04       		 LD B, 4	;
200)   16AA CD 85 0C    		 CALL PUTPGINBANK	;
201)   16AD C1          		 POP BC	;
202)   16AE 79          		 LD A, C	;
203)   16AF 21 F8 1F    		 LD HL, CONFADDR	;
204)   16B2 11 00 80    		 LD DE, $8000	;
205)   16B5 B7          		 OR A	;
206)   16B6 ED 5A       		 ADC HL, DE	;
207)   16B8 77          		 LD (HL), A        ;VIDEO CTRL REG1 VIDEO MODE	;VIDEO CTRL REG1 VIDEO MODE
208)   16B9 23          		 INC HL	;
209)   16BA 78          		 LD A, B        ;DEFAULT COLORS	;DEFAULT COLORS
210)   16BB 77          		 LD (HL), A        ;VIDEO CTRL REG2 VIDEO DEF COLORS	;VIDEO CTRL REG2 VIDEO DEF COLORS
211)   16BC F1          		 POP AF	;
212)   16BD C5          		 PUSH BC	;
213)   16BE 06 04       		 LD B, 4	;
214)   16C0 CD 85 0C    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
215)   16C3 C1          		 POP BC	;
216)   16C4 E1          		 POP HL	;
217)   16C5 79          		 LD A, C        ;SCREEN MODE	;SCREEN MODE
218)   16C6 CB 47       		 BIT 0, A	;
219)   16C8 C2 1D 18    		 JP NZ, VGA_TXTINIT	;
220)   16CB C3 69 1A    		 JP VGA_GRPHINIT	;
227)   16CE E5          		VGA_GETCONF: PUSH HL	;
228)   16CF 06 04       		 LD B, 4        ;8000h	;8000h
229)   16D1 CD A7 0C    		 CALL GETPGINBANK	;
230)   16D4 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
231)   16D5 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
232)   16D7 CD 85 0C    		 CALL PUTPGINBANK	;
233)   16DA 21 F8 1F    		 LD HL, CONFADDR	;
234)   16DD 11 00 80    		 LD DE, $8000	;
235)   16E0 B7          		 OR A	;
236)   16E1 ED 5A       		 ADC HL, DE	;
237)   16E3 7E          		 LD A, (HL)	;
238)   16E4 E6 03       		 AND 3        ;KEEP ONLY BITS 0,1	;KEEP ONLY BITS 0,1
239)   16E6 4F          		 LD C, A        ;SCREEN MODE	;SCREEN MODE
240)   16E7 23          		 INC HL	;
241)   16E8 7E          		 LD A, (HL)	;
242)   16E9 47          		 LD B, A        ;DEFAULT COLORS	;DEFAULT COLORS
243)   16EA F1          		 POP AF	;
244)   16EB C5          		 PUSH BC	;
245)   16EC 06 04       		 LD B, 4	;
246)   16EE CD 85 0C    		 CALL PUTPGINBANK	;
247)   16F1 C1          		 POP BC	;
248)   16F2 E1          		 POP HL	;
249)   16F3 79          		 LD A, C	;
250)   16F4 C9          		 RET	;
257)   16F5 CD CE 16    		VGA_CLRSCR: CALL VGA_GETCONF	;
258)   16F8 CB 47       		 BIT 0,A	;
259)   16FA C2 23 18    		 JP NZ,VGA_TXTCLR	;
260)   16FD C3 F3 1A    		 JP VGA_GRCLS	;
277)   1700 F5          		 PUSH AF        ;SAVE FLAGS	;SAVE FLAGS
278)   1701 D1          		 POP DE         ;FLAGS ON DE	;FLAGS ON DE
279)   1702 FE 1F       		 CP 31	;
280)   1704 DC 1D 17    		 CALL C, VGA_NOTVISCH	;
281)   1707 28 06       		 JR Z, PRCH_EX        ;EXIT IF CHAR WAS HANDLED	;EXIT IF CHAR WAS HANDLED
282)   1709 CD 10 17    		 CALL VGA_DOPRNCH       ;PRINT THE CHAR	;PRINT THE CHAR
283)   170C CD 6E 17    		 CALL VGA_TXFORW       ;TEXT FORWARD	;TEXT FORWARD
285)   170F C9          		 RET	;
290)   1710 67          		VGA_DOPRNCH: LD H, A       ;SAVE A	;SAVE A
291)   1711 CD CE 16    		 CALL VGA_GETCONF	;
292)   1714 CB 47       		 BIT 0, A	;
293)   1716 7C          		 LD A, H        ;RESTORE A	;RESTORE A
294)   1717 C2 BB 18    		 JP NZ, VGA_DOPRNCHTXT       ;NZ MEANS TEXT	;NZ MEANS TEXT
295)   171A C3 8D 1B    		 JP VGA_DOPRNCHGRP	;
303)   171D F5          		VGA_NOTVISCH: PUSH AF	;
304)   171E D5          		 PUSH DE	;
305)   171F CD 29 19    		 CALL VGA_RMVCURS      ;REMOVE CURSOR	;REMOVE CURSOR
306)   1722 D1          		 POP DE	;
307)   1723 F1          		 POP AF	;
308)   1724 FE 08       		 CP 8         ;BACKSPACE	;BACKSPACE
309)   1726 20 18       		 JR NZ, NX1	;
310)   1728 3A 0F FF    		 LD A, (VGATX_X)	;
311)   172B FE 00       		 CP 0         ;COL 0 HAS THE PROMPT	;COL 0 HAS THE PROMPT
312)   172D C8          		 RET Z         ;DO NOT PRINT ANYTHING	;DO NOT PRINT ANYTHING
313)   172E 3D          		 DEC A	;
314)   172F 32 0F FF    		 LD (VGATX_X), A	;
315)   1732 D5          		 PUSH DE	;
316)   1733 F1          		 POP AF         ;GET FLAGS BACK	;GET FLAGS BACK
317)   1734 30 1B       		 JR NC, MVLEFT       ;IF C THEN DELETE THE CHAR ON THE LEFT	;IF C THEN DELETE THE CHAR ON THE LEFT
318)   1736 3E 20       		 LD A, ' '        ;PRINT SPACE	;PRINT SPACE
319)   1738 32 13 FF    		 LD (VGATMPC),A	;
320)   173B CD 10 17    		 CALL VGA_DOPRNCH       ;	;
321)   173E AF          		 XOR A         ;CLEAR ZERO	;CLEAR ZERO
322)   173F C9          		 RET	;
323)   1740 FE 0A       		NX1: CP 10         ;JUST IGNORE IT	;JUST IGNORE IT
324)   1742 C8          		 RET Z	;
325)   1743 FE 0D       		 CP 13         ;CR =NEW LINE	;CR =NEW LINE
326)   1745 20 11       		 JR NZ, NX2	;
327)   1747 CD 29 19    		 CALL VGA_RMVCURS	;
328)   174A CD 81 17    		 CALL VGDOY        ;ADD 1 TO TY	;ADD 1 TO TY
329)   174D 32 0F FF    		 LD (VGATX_X), A       ;ZF IS SET	;ZF IS SET
330)   1750 C9          		 RET	;
331)   1751 CD EC 18    		MVLEFT: CALL VGA_GETCHAR	;
332)   1754 7A          		 LD A, D	;
333)   1755 32 13 FF    		 LD (VGATMPC),A	;
334)   1758 AF          		NX2: XOR A         ;NC MEANS WE DON'T PRINT	;NC MEANS WE DON'T PRINT
335)   1759 C9          		 RET	;
339)   175A CD A2 17    		VGA_PRINT: CALL VGA_GETPAGE	;
340)   175D 7E          		VGAP_AGN: LD A, (HL)	;
341)   175E FE 00       		 CP 0	;
342)   1760 28 08       		 JR Z, VGAP_EX	;
343)   1762 E5          		 PUSH HL	;
344)   1763 CD 00 17    		 CALL VGA_PRCH	;
345)   1766 E1          		 POP HL	;
346)   1767 23          		 INC HL	;
347)   1768 18 F3       		 JR VGAP_AGN	;
348)   176A CD C4 17    		VGAP_EX: CALL VGA_RMVPAGE	;
349)   176D C9          		 RET	;
352)   176E F5          		VGA_TXFORW: PUSH AF	;
353)   176F E5          		 PUSH HL	;
354)   1770 21 11 FF    		 LD HL, VGAMAXX	;
355)   1773 3A 0F FF    		 LD A, (VGATX_X)	;
356)   1776 3C          		 INC A	;
357)   1777 BE          		 CP (HL)	;
358)   1778 CC 81 17    		 CALL Z, VGDOY	;
359)   177B 32 0F FF    		 LD (VGATX_X), A	;
360)   177E E1          		 POP HL	;
361)   177F F1          		 POP AF	;
362)   1780 C9          		 RET	;
363)   1781 21 12 FF    		VGDOY: LD HL, VGAMAXY	;
364)   1784 3A 10 FF    		 LD A, (VGATX_Y)	;
365)   1787 3C          		 INC A	;
366)   1788 BE          		 CP (HL)	;
367)   1789 CC 91 17    		 CALL Z, DOSCRL	;
368)   178C 32 10 FF    		 LD (VGATX_Y), A	;
369)   178F AF          		 XOR A	;
370)   1790 C9          		 RET	;
372)   1791 CD CE 16    		DOSCRL: CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
373)   1794 CB 47       		 BIT 0, A	;
374)   1796 CA 90 1B    		 JP Z, DOSCRLGR	;
375)   1799 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
376)   179B CC A9 19    		 CALL Z, DOSCRL_COL       ;SCROLL COLORS IF BIT 1=0	;SCROLL COLORS IF BIT 1=0
377)   179E CD 73 19    		 CALL DOSCRL_TXT       ;SCROLL TEXT	;SCROLL TEXT
378)   17A1 C9          		 RET	;
388)   17A2 3A 09 FF    		VGA_GETPAGE: LD A, (PGSEM)	;
389)   17A5 3C          		 INC A	;
390)   17A6 32 09 FF    		 LD (PGSEM), A	;
391)   17A9 FE 01       		 CP 1	;
392)   17AB C0          		 RET NZ	;
393)   17AC E5          		 PUSH HL	;
394)   17AD 06 04       		 LD B, 4        ;8000h	;8000h
395)   17AF CD A7 0C    		 CALL GETPGINBANK	;
396)   17B2 32 05 FF    		 LD (TMPG), A        ;SAVE OLD PAGE	;SAVE OLD PAGE
397)   17B5 3A 14 FF    		 LD A,(VGABUF)	;
398)   17B8 1F          		 RRA         ;PUT BIT 0 ON CARRY FLAG	;PUT BIT 0 ON CARRY FLAG
399)   17B9 3E 08       		 LD A, 8        ;PAGE 8  IS BUFFER 0	;PAGE 8  IS BUFFER 0
400)   17BB 30 02       		 JR NC, VGP_SETPG	;
401)   17BD 3E 0C       		 LD A, 12        ;PAGE 12 IS BUFFER 1	;PAGE 12 IS BUFFER 1
402)   17BF CD 85 0C    		VGP_SETPG: CALL PUTPGINBANK	;
403)   17C2 E1          		 POP HL	;
404)   17C3 C9          		 RET	;
408)   17C4 3A 09 FF    		VGA_RMVPAGE: LD A, (PGSEM)	;
409)   17C7 3D          		 DEC A	;
410)   17C8 32 09 FF    		 LD (PGSEM), A	;
411)   17CB FE 00       		 CP 0	;
412)   17CD C0          		 RET NZ	;
413)   17CE E5          		 PUSH HL	;
414)   17CF 06 04       		 LD B, 4	;
415)   17D1 3A 05 FF    		 LD A, (TMPG)	;
416)   17D4 CD 85 0C    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
417)   17D7 E1          		 POP HL	;
418)   17D8 C9          		 RET	;
420)   17D9 CD A2 17    		VGA_SETFONT: CALL VGA_GETPAGE	;
421)   17DC 21 00 36    		 LD HL, FONT_ADDR	;
422)   17DF 11 00 90    		 LD DE, $9000        ;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000	;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000
423)   17E2 01 00 0A    		 LD BC, 2560	;
424)   17E5 ED B0       		 LDIR         ;TRANSFER	;TRANSFER
425)   17E7 CD C4 17    		 CALL VGA_RMVPAGE	;
426)   17EA C9          		 RET	;
429)   17EB 79          		VGA_SETMAXS: LD A, C	;
430)   17EC 16 28       		 LD D, 40	;
431)   17EE 1E 14       		 LD E, 20	;
432)   17F0 CB 4F       		 BIT 1,A        ;LOW RES MODE	;LOW RES MODE
433)   17F2 28 04       		 JR Z, VGSM_NX	;
435)   17F4 16 50       		 LD D, 80	;
436)   17F6 1E 28       		 LD E, 40	;
437)   17F8 7A          		VGSM_NX: LD A, D	;
438)   17F9 32 11 FF    		 LD (VGAMAXX), A	;
439)   17FC 7B          		 LD A, E	;
440)   17FD 32 12 FF    		 LD (VGAMAXY), A	;
441)   1800 C9          		 RET	;
444)   1801 AF          		VGA_SETSCRDEFS: XOR A	;
445)   1802 32 09 FF    		 LD (PGSEM), A	;
446)   1805 32 05 FF    		 LD (TMPG), A	;
447)   1808 3E 0B       		 LD A, VGA_YELLOW	;
448)   180A 32 0D FF    		 LD (VGAFCOL), A	;
449)   180D 3E 04       		 LD A, VGA_NAVY	;
450)   180F 32 0E FF    		 LD (VGABCOL), A	;
451)   1812 CD EB 17    		 CALL VGA_SETMAXS	;
452)   1815 AF          		 XOR A	;
453)   1816 32 0F FF    		 LD (VGATX_X), A	;
454)   1819 32 10 FF    		 LD (VGATX_Y), A	;
455)   181C C9          		 RET	;
457)   181D CD 01 18    		VGA_TXTINIT: CALL VGA_SETSCRDEFS	;
458)   1820 CD D9 17    		 CALL VGA_SETFONT       ;SET THE FONT ON VIDEO MEM	;SET THE FONT ON VIDEO MEM
461)   1823 3A 11 FF    		VGA_TXTCLR: LD A, (VGAMAXX)	;
462)   1826 67          		 LD H, A	;
463)   1827 3A 12 FF    		 LD A, (VGAMAXY)	;
464)   182A 5F          		 LD E, A	;
465)   182B CD FA 2A    		 CALL MULT8	;
466)   182E E5          		 PUSH HL	;
467)   182F CD A2 17    		 CALL VGA_GETPAGE	;
468)   1832 CD CE 16    		 CALL VGA_GETCONF	;
469)   1835 C1          		 POP BC         ;TOTAL BYTES	;TOTAL BYTES
470)   1836 CB 4F       		 BIT 1, A	;
471)   1838 28 0E       		 JR Z, ISLOWRES	;
473)   183A 21 00 80    		 LD HL, $8000	;
474)   183D 3E 20       		 LD A, 32	;
475)   183F 77          		 LD (HL), A	;
476)   1840 11 01 80    		 LD DE, $8001	;
477)   1843 ED B0       		 LDIR	;
478)   1845 C3 6D 18    		 JP VGAC_EXIT	;
480)   1848 21 00 80    		ISLOWRES: LD HL, $8000       ;BANK4	;BANK4
481)   184B 11 00 84    		 LD DE, $8400        ;COLOR INFO	;COLOR INFO
482)   184E C3 5D 18    		 JP VGAC_AGN	;
487)   1851 CD A2 17    		VGA_CLR: CALL VGA_GETPAGE	;
488)   1854 01 20 03    		 LD BC, 800	;
489)   1857 21 00 80    		 LD HL, $8000        ;DEL CHARS	;DEL CHARS
490)   185A 11 00 84    		 LD DE, $8400	;
493)   185D 3E 20       		VGAC_AGN: LD A, 32	;
494)   185F 77          		 LD (HL), A	;
495)   1860 C5          		 PUSH BC	;
496)   1861 CD 82 18    		 CALL VGA_GETCOL	;
497)   1864 C1          		 POP BC	;
498)   1865 12          		 LD (DE), A	;
499)   1866 23          		 INC HL	;
500)   1867 13          		 INC DE	;
501)   1868 0B          		 DEC BC	;
502)   1869 78          		 LD A, B	;
503)   186A B1          		 OR C	;
504)   186B 20 F0       		 JR NZ, VGAC_AGN	;
505)   186D AF          		VGAC_EXIT: XOR A	;
506)   186E 32 0F FF    		 LD (VGATX_X), A	;
507)   1871 32 10 FF    		 LD (VGATX_Y), A	;
508)   1874 CD C4 17    		 CALL VGA_RMVPAGE	;
509)   1877 C9          		 RET	;
513)   1878 CB 20       		VGA_MIXCOLOR: SLA B	;
514)   187A CB 20       		 SLA B	;
515)   187C CB 20       		 SLA B	;
516)   187E CB 20       		 SLA B	;
517)   1880 B0          		 OR B         ;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR	;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR
518)   1881 C9          		 RET	;
522)   1882 3A 0E FF    		VGA_GETCOL: LD A, (VGABCOL)      ;GET COLOR INFO	;GET COLOR INFO
523)   1885 47          		 LD B, A	;
524)   1886 3A 0D FF    		 LD A, (VGAFCOL)	;
525)   1889 CD 78 18    		 CALL VGA_MIXCOLOR	;
526)   188C C9          		 RET	;
530)   188D F5          		VGA_SETCOL: PUSH AF	;
531)   188E E6 0F       		 AND $0F	;
532)   1890 32 0D FF    		 LD (VGAFCOL), A       ;SET COLOR INFO	;SET COLOR INFO
533)   1893 F1          		 POP AF	;
534)   1894 CB 27       		 SLA A	;
535)   1896 CB 27       		 SLA A	;
536)   1898 CB 27       		 SLA A	;
537)   189A CB 27       		 SLA A	;
538)   189C E6 0F       		 AND $0F	;
539)   189E 32 0E FF    		 LD (VGABCOL), A       ;SET BACK COLOR	;SET BACK COLOR
540)   18A1 C9          		 RET	;
547)   18A2 F5          		VGA_CALC_VIDAD: PUSH AF	;
548)   18A3 3A 10 FF    		 LD A, (VGATX_Y)	;
549)   18A6 67          		 LD H, A 	;
550)   18A7 3A 11 FF    		 LD A, (VGAMAXX)	;
551)   18AA 5F          		 LD E, A  	;
552)   18AB CD FA 2A    		 CALL Mult8	;
553)   18AE 11 00 80    		 LD DE, $8000	;
554)   18B1 19          		 ADD HL,DE	;
556)   18B2 16 00       		 LD D, 0	;
557)   18B4 3A 0F FF    		 LD A, (VGATX_X)	;
558)   18B7 5F          		 LD E, A	;
559)   18B8 19          		 ADD HL, DE	;
560)   18B9 F1          		 POP AF	;
561)   18BA C9          		 RET	;
565)   18BB E5          		VGA_DOPRNCHTXT: PUSH HL	;
566)   18BC F5          		 PUSH AF	;
567)   18BD CD A2 17    		 CALL VGA_GETPAGE	;
568)   18C0 CD A2 18    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
569)   18C3 F1          		 POP AF	;
570)   18C4 77          		 LD (HL), A        ;PUT CHAR ON SCREEN	;PUT CHAR ON SCREEN
571)   18C5 E5          		 PUSH HL	;
572)   18C6 CD CE 16    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
573)   18C9 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
574)   18CB E1          		 POP HL	;
575)   18CC 20 08       		 JR NZ, DPC_EX	;
576)   18CE 11 00 04    		 LD DE, $400	;
577)   18D1 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
578)   18D2 CD 82 18    		 CALL VGA_GETCOL       ;GET CURRENT COLOR	;GET CURRENT COLOR
579)   18D5 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
580)   18D6 E1          		DPC_EX: POP HL	;
581)   18D7 CD C4 17    		 CALL VGA_RMVPAGE	;
582)   18DA C9          		 RET	;
586)   18DB F5          		VGA_DOCHCLR: PUSH AF	;
587)   18DC CD A2 17    		 CALL VGA_GETPAGE	;
588)   18DF CD A2 18    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
589)   18E2 11 00 04    		 LD DE, $400	;
590)   18E5 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
591)   18E6 F1          		 POP AF	;
592)   18E7 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
593)   18E8 CD C4 17    		 CALL VGA_RMVPAGE	;
594)   18EB C9          		 RET	;
597)   18EC CD CE 16    		VGA_GETCHAR: CALL VGA_GETCONF      ;GET SCREEEN MODE	;GET SCREEEN MODE
598)   18EF CB 47       		 BIT 0,A	;
599)   18F1 20 07       		 JR NZ,GC_DOIT       ;IF TEXT DOIT	;IF TEXT DOIT
601)   18F3 16 93       		 LD D,  147 ;' '	;' '
602)   18F5 3A 0E FF    		 LD A,(VGABCOL)	;
603)   18F8 5F          		 LD E,A	;
604)   18F9 C9          		 RET	;
605)   18FA CD A2 17    		GC_DOIT: CALL VGA_GETPAGE	;
606)   18FD CD A2 18    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDR ON HL	;CALC VIDEO ADDR ON HL
607)   1900 7E          		 LD A, (HL)	;
608)   1901 F5          		 PUSH AF	;
609)   1902 CD CE 16    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
610)   1905 FE 03       		 CP 3  ;TEXT HI      ; CHECK IF HIRES SO NO COLOR INFO	;TEXT HI      ; CHECK IF HIRES SO NO COLOR INFO
611)   1907 D1          		 POP DE        ;AF ON DE TO PRESERVE FLAG  	;AF ON DE TO PRESERVE FLAG
612)   1908 28 0A       		 JR Z, GC_NOCOL	;
613)   190A 7A          		 LD A, D	;
614)   190B 11 00 04    		 LD DE, $400  ;TEXT LOW	;TEXT LOW
615)   190E 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
616)   190F 57          		 LD D, A        ;THE CHAR	;THE CHAR
617)   1910 7E          		 LD A, (HL)       ;THE COLOR	;THE COLOR
618)   1911 5F          		 LD E, A	;
619)   1912 18 02       		 JR GC_EX	;
621)   1914 1E 00       		 LD E, 0	;
622)   1916 62          		GC_EX: LD H,D	;
623)   1917 6B          		 LD L,E	;
624)   1918 CD C4 17    		 CALL VGA_RMVPAGE	;
625)   191B 54          		 LD D,H	;
626)   191C 5D          		 LD E,L	;
627)   191D C9          		 RET	;
630)   191E BB          		VGA_REVRCOLRS: CP E	;
631)   191F C8          		 RET Z	;
632)   1920 7B          		 LD A, E	;
633)   1921 0F          		 RRCA         ;CHANGE FORE AND BACK COLOR INFO	;CHANGE FORE AND BACK COLOR INFO
634)   1922 0F          		 RRCA	;
635)   1923 0F          		 RRCA	;
636)   1924 0F          		 RRCA	;
637)   1925 CD DB 18    		 CALL VGA_DOCHCLR     ;CHANGE THE COLOR OF THE CHAR	;CHANGE THE COLOR OF THE CHAR
638)   1928 C9          		 RET	;
640)   1929 CD CE 16    		VGA_RMVCURS: CALL VGA_GETCONF      ;GET SCREEEN MODE	;GET SCREEEN MODE
641)   192C CB 47       		 BIT 0,A	;
642)   192E 28 04       		 JR Z, RC_GR       ;IF GRAPHICS	;IF GRAPHICS
643)   1930 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
644)   1932 28 05       		 JR Z, RC_LOW	;
645)   1934 3A 13 FF    		RC_GR: LD A, (VGATMPC)	;
646)   1937 18 0A       		 JR RC_EX	;
647)   1939 CD EC 18    		RC_LOW: CALL VGA_GETCHAR      ;GET CURRENT COLORS	;GET CURRENT COLORS
648)   193C CD 82 18    		 CALL VGA_GETCOL       ;GET DEFAULT COLORS	;GET DEFAULT COLORS
649)   193F CD 1E 19    		 CALL VGA_REVRCOLRS      ;REVERSE IF NECESSARY	;REVERSE IF NECESSARY
650)   1942 C9          		 RET	;
651)   1943 CD 10 17    		RC_EX: CALL VGA_DOPRNCH	;
652)   1946 C9          		 RET	;
653)   1947 CD EC 18    		VGA_PRNCURS: CALL VGA_GETCHAR      ; E HAS THE COLOR INFO	; E HAS THE COLOR INFO
654)   194A D5          		 PUSH DE	;
655)   194B CD CE 16    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
656)   194E D1          		 POP DE	;
657)   194F CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO  	; CHECK IF HIRES SO NO COLOR INFO
658)   1951 20 13       		 JR NZ, PC_NOCOL	;
659)   1953 CB 47       		 BIT 0,A        ;CHECK IF GRAPH SO NO TEXT COLOR INFO	;CHECK IF GRAPH SO NO TEXT COLOR INFO
660)   1955 28 0B       		 JR Z, PC_LORESGR	;
661)   1957 CD 82 18    		 CALL VGA_GETCOL       ;GET CURRENT COLORS	;GET CURRENT COLORS
662)   195A 0F          		 RRCA        ;REVERSE BACK & FORE	;REVERSE BACK & FORE
663)   195B 0F          		 RRCA	;
664)   195C 0F          		 RRCA	;
665)   195D 0F          		 RRCA	;
666)   195E CD 1E 19    		 CALL VGA_REVRCOLRS      ;LOWRES TEXT REVERSE COLORS	;LOWRES TEXT REVERSE COLORS
667)   1961 C9          		 RET	;
668)   1962 3E 93       		PC_LORESGR: LD A, VGA_CURSCHAR	;
669)   1964 18 09       		 JR PC_EX	;
670)   1966 7A          		PC_NOCOL: LD A,D	;
671)   1967 FE 93       		 CP VGA_CURSCHAR	;
672)   1969 C8          		 RET Z        ;ALREADY PRINTED	;ALREADY PRINTED
673)   196A 32 13 FF    		 LD (VGATMPC), A	;
674)   196D 3E 93       		 LD A, VGA_CURSCHAR        ;'_'	;'_'
675)   196F CD 10 17    		PC_EX: CALL VGA_DOPRNCH  	;
676)   1972 C9          		 RET	;
681)   1973 CD A2 17    		DOSCRL_TXT: CALL VGA_GETPAGE	;
682)   1976 3A 11 FF    		 LD A, (VGAMAXX)	;
683)   1979 26 00       		 LD H, 0	;
684)   197B 6F          		 LD L, A	;
685)   197C 11 00 80    		 LD DE, $8000	;
686)   197F 19          		 ADD HL, DE	;
688)   1980 E5          		 PUSH HL	;
689)   1981 D5          		 PUSH DE	;
691)   1982 67          		 LD H, A	;
692)   1983 3A 12 FF    		 LD A, (VGAMAXY)	;
693)   1986 3D          		 DEC A	;
694)   1987 5F          		 LD E, A	;
695)   1988 CD FA 2A    		 CALL Mult8	;
696)   198B 44          		 LD B, H	;
697)   198C 4D          		 LD C, L	;
698)   198D D1          		 POP DE	;
699)   198E E1          		 POP HL	;
700)   198F C5          		 PUSH BC	;
701)   1990 ED B0       		 LDIR         ;SCROLL UP 39 LINES	;SCROLL UP 39 LINES
702)   1992 D1          		 POP DE        ;DE = BC	;DE = BC
703)   1993 21 00 80    		 LD HL, $8000	;
704)   1996 19          		 ADD HL, DE        ;LINE 39 OR 19 ADDRESS TO BE CLEARED (0-39) (0-19)	;LINE 39 OR 19 ADDRESS TO BE CLEARED (0-39) (0-19)
705)   1997 3A 11 FF    		 LD A, (VGAMAXX)       ;80 OR 40	;80 OR 40
706)   199A 47          		 LD B, A	;
707)   199B 3E 20       		 LD A, 32	;
708)   199D 77          		DST_AGN: LD (HL), A	;
709)   199E 23          		 INC HL	;
710)   199F 10 FC       		 DJNZ DST_AGN	;
711)   19A1 CD C4 17    		 CALL VGA_RMVPAGE	;
712)   19A4 3A 12 FF    		 LD A, (VGAMAXY)	;
713)   19A7 3D          		 DEC A	;
714)   19A8 C9          		 RET	;
716)   19A9 CD A2 17    		DOSCRL_COL: CALL VGA_GETPAGE	;
717)   19AC 21 28 84    		 LD HL, $8428        ;LINE 1	;LINE 1
718)   19AF 11 00 84    		 LD DE, $8400        ;LINE 0	;LINE 0
719)   19B2 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
720)   19B5 ED B0       		 LDIR	;
721)   19B7 CD 82 18    		 CALL VGA_GETCOL       ;SET DEFAULT COLOR	;SET DEFAULT COLOR
722)   19BA 21 F8 86    		 LD HL, $86F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
723)   19BD 06 28       		 LD B, 40	;
724)   19BF 77          		DOS_AGNCL: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
725)   19C0 23          		 INC HL	;
726)   19C1 10 FC       		 DJNZ DOS_AGNCL	;
727)   19C3 CD C4 17    		 CALL VGA_RMVPAGE	;
728)   19C6 C9          		 RET	;
738)   19C7 3A 09 FF    		 LD A, (PGSEM)	;
739)   19CA 3C          		 INC A	;
740)   19CB 32 09 FF    		 LD (PGSEM), A	;
741)   19CE FE 01       		 CP 1	;
742)   19D0 C0          		 RET NZ	;
743)   19D1 E5          		 PUSH HL	;
744)   19D2 06 02       		 LD B, 2        ;4000h	;4000h
745)   19D4 CD A7 0C    		 CALL GETPGINBANK	;
746)   19D7 32 05 FF    		 LD (TMPG), A	;
747)   19DA 06 03       		 LD B, 3        ;6000h	;6000h
748)   19DC CD A7 0C    		 CALL GETPGINBANK	;
749)   19DF 32 06 FF    		 LD (TMPG + 1), A	;
750)   19E2 3A 14 FF    		 LD A,(VGABUF)	;
751)   19E5 1F          		 RRA        ;PUT SCREEN BUF ON CARRY FLAG	;PUT SCREEN BUF ON CARRY FLAG
752)   19E6 38 10       		 JR C,VSPL_SETBUFONE	;
754)   19E8 3E 08       		 LD A, 8	;
755)   19EA 06 02       		 LD B, 2	;
756)   19EC CD 85 0C    		 CALL PUTPGINBANK	;
758)   19EF 3E 09       		 LD A, 9	;
759)   19F1 06 03       		 LD B, 3	;
760)   19F3 CD 85 0C    		 CALL PUTPGINBANK	;
761)   19F6 E1          		 POP HL	;
762)   19F7 C9          		 RET	;
764)   19F8 3E 0C       		 LD A, 12	;
765)   19FA 06 02       		 LD B, 2	;
766)   19FC CD 85 0C    		 CALL PUTPGINBANK	;
768)   19FF 3E 0D       		 LD A, 13	;
769)   1A01 06 03       		 LD B, 3	;
770)   1A03 CD 85 0C    		 CALL PUTPGINBANK	;
771)   1A06 E1          		 POP HL	;
772)   1A07 C9          		 RET	;
779)   1A08 3A 09 FF    		 LD A, (PGSEM)	;
780)   1A0B 3C          		 INC A	;
781)   1A0C 32 09 FF    		 LD (PGSEM), A	;
782)   1A0F FE 01       		 CP 1	;
783)   1A11 C0          		 RET NZ	;
784)   1A12 E5          		 PUSH HL	;
785)   1A13 06 02       		 LD B, 2        ;4000h	;4000h
786)   1A15 CD A7 0C    		 CALL GETPGINBANK	;
787)   1A18 32 05 FF    		 LD (TMPG), A	;
788)   1A1B 06 03       		 LD B, 3        ;6000h	;6000h
789)   1A1D CD A7 0C    		 CALL GETPGINBANK	;
790)   1A20 32 06 FF    		 LD (TMPG + 1), A	;
791)   1A23 3A 14 FF    		 LD A,(VGABUF)	;
792)   1A26 1F          		 RRA        ;PUT SCREEN BUF ON CARRY FLAG	;PUT SCREEN BUF ON CARRY FLAG
793)   1A27 38 10       		 JR C,VSPH_SETBUFONE	;
795)   1A29 3E 0A       		 LD A, 10	;
796)   1A2B 06 02       		 LD B, 2	;
797)   1A2D CD 85 0C    		 CALL PUTPGINBANK	;
799)   1A30 3E 0B       		 LD A, 11	;
800)   1A32 06 03       		 LD B, 3	;
801)   1A34 CD 85 0C    		 CALL PUTPGINBANK	;
802)   1A37 E1          		 POP HL	;
803)   1A38 C9          		 RET	;
805)   1A39 3E 0E       		 LD A, 14	;
806)   1A3B 06 02       		 LD B, 2	;
807)   1A3D CD 85 0C    		 CALL PUTPGINBANK	;
809)   1A40 3E 0F       		 LD A, 15	;
810)   1A42 06 03       		 LD B, 3	;
811)   1A44 CD 85 0C    		 CALL PUTPGINBANK	;
812)   1A47 E1          		 POP HL	;
813)   1A48 C9          		 RET	;
818)   1A49 3A 09 FF    		VGA_RMVGRPG: LD A, (PGSEM)	;
819)   1A4C FE 00       		 CP 0	;
820)   1A4E C8          		 RET Z	;
821)   1A4F 3D          		 DEC A	;
822)   1A50 32 09 FF    		 LD (PGSEM), A	;
823)   1A53 FE 00       		 CP 0	;
824)   1A55 C0          		 RET NZ	;
825)   1A56 E5          		 PUSH HL	;
826)   1A57 06 02       		 LD B, 2	;
827)   1A59 3A 05 FF    		 LD A, (TMPG)	;
828)   1A5C CD 85 0C    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
829)   1A5F 06 03       		 LD B, 3	;
830)   1A61 3A 06 FF    		 LD A, (TMPG + 1)	;
831)   1A64 CD 85 0C    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
832)   1A67 E1          		 POP HL	;
833)   1A68 C9          		 RET	;
836)   1A69 CD 01 18    		VGA_GRPHINIT: CALL VGA_SETSCRDEFS     ;SET SCREEN DEFAULTS	;SET SCREEN DEFAULTS
837)   1A6C CD F3 1A    		 CALL VGA_GRCLS	;
838)   1A6F AF          		 XOR A	;
839)   1A70 C9          		 RET	;
845)   1A71 F5          		VGA_CHECKXY32: PUSH AF	;
846)   1A72 E5          		 PUSH HL	;
847)   1A73 D5          		 PUSH DE	;
848)   1A74 B7          		 OR A	;
849)   1A75 11 40 01    		 LD DE, 320	;
850)   1A78 ED 52       		 SBC HL, DE	;
851)   1A7A 30 0F       		 JR NC, CXY3_ABEX	;
852)   1A7C D1          		 POP DE	;
853)   1A7D D5          		 PUSH DE	;
854)   1A7E EB          		 EX DE, HL	;
855)   1A7F 11 C8 00    		 LD DE, 200	;
856)   1A82 ED 52       		 SBC HL, DE	;
857)   1A84 30 05       		 JR NC, CXY3_ABEX	;
858)   1A86 D1          		 POP DE	;
859)   1A87 E1          		 POP HL	;
860)   1A88 F1          		 POP AF	;
861)   1A89 37          		 SCF         ;RETURN WITH C SET	;RETURN WITH C SET
862)   1A8A C9          		 RET	;
864)   1A8B D1          		CXY3_ABEX: POP DE        	;
865)   1A8C E1          		 POP HL	;
866)   1A8D F1          		 POP AF	;
867)   1A8E B7          		 OR A	;
868)   1A8F C9          		 RET         ;RETURN WITH NC  	;RETURN WITH NC
874)   1A90 CD 71 1A    		VGA_PLTPXL32: CALL VGA_CHECKXY32     ;CHECK BOUNDS	;CHECK BOUNDS
875)   1A93 D0          		 RET NC	;
876)   1A94 E5          		 PUSH HL        ;CHECK BOUNDS	;CHECK BOUNDS
877)   1A95 F5          		 PUSH AF	;
878)   1A96 7B          		 LD A, E	;
879)   1A97 FE 66       		 CP 102	;
880)   1A99 38 27       		 JR C, PPNXT0        ;LESS THAN 102	;LESS THAN 102
881)   1A9B 20 16       		 JR NZ, NXTBNK        ;MORE THAN 102	;MORE THAN 102
882)   1A9D E5          		 PUSH HL        ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES	;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
883)   1A9E 01 80 00    		 LD BC, 128	;
884)   1AA1 B7          		 OR A	;
885)   1AA2 ED 42       		 SBC HL, BC	;
886)   1AA4 47          		 LD B, A	;
887)   1AA5 7C          		 LD A, H	;
888)   1AA6 B7          		 OR A         ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128	; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
889)   1AA7 78          		 LD A, B	;
890)   1AA8 E1          		 POP HL	;
891)   1AA9 20 17       		 JR NZ, PPNXT0	;
893)   1AAB 3E 67       		 LD A, 103        ;WE ARE AT LINE ZERO ON 2ND BANK	;WE ARE AT LINE ZERO ON 2ND BANK
894)   1AAD 11 40 01    		 LD DE, 129 + 191	;
895)   1AB0 B7          		 OR A	;
896)   1AB1 ED 52       		 SBC HL, DE        ;	;
897)   1AB3 D6 67       		NXTBNK: SUB 103        ;SKIP 102 ROWS	;SKIP 102 ROWS
898)   1AB5 11 C0 00    		 LD DE, 192        ;320-128	;320-128
899)   1AB8 B7          		 OR A	;
900)   1AB9 ED 5A       		 ADC HL, DE	;
901)   1ABB F5          		 PUSH AF	;
903)   1ABC CD 08 1A    		 CALL VGA_SETGRPGHI	;
905)   1ABF F1          		 POP AF         ;A HAS THE ROWS ON 2ND 16K	;A HAS THE ROWS ON 2ND 16K
906)   1AC0 18 05       		 JR PPNXT1	;
907)   1AC2 F5          		PPNXT0: PUSH AF        ;A=E=ROW=Y	;A=E=ROW=Y
908)   1AC3 CD C7 19    		 CALL VGA_SETGRPGLO	;
909)   1AC6 F1          		 POP AF	;
910)   1AC7 11 00 40    		PPNXT1: LD DE, BASEADDR	;
912)   1ACA CB 3C       		 SRL H	;
913)   1ACC CB 1D       		 RR L	;
914)   1ACE 19          		 ADD HL, DE        ;FIND COLUMN	;FIND COLUMN
915)   1ACF E5          		 PUSH HL	;
916)   1AD0 11 A0 00    		 LD DE, 160	;
918)   1AD3 CD 06 2B    		 CALL Mult12	;
919)   1AD6 D1          		 POP DE	;
920)   1AD7 19          		 ADD HL, DE	;
921)   1AD8 C1          		DOPLOTPX: POP BC        ;B HAS THE COLOR	;B HAS THE COLOR
922)   1AD9 D1          		 POP DE         ;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL
923)   1ADA 7E          		 LD A, (HL)        ;GET PIXEL BYTE	;GET PIXEL BYTE
924)   1ADB CB 43       		 BIT 0, E        ;CHECK X IS EVEN OR ODD	;CHECK X IS EVEN OR ODD
925)   1ADD 28 04       		 JR Z, DOEVEN        ;EVEN	;EVEN
927)   1ADF E6 F0       		 AND $F0        ;CLEAR RIGHT 4 BITS	;CLEAR RIGHT 4 BITS
928)   1AE1 18 0A       		 JR DPEXIT	;
930)   1AE3 CB 00       		DOEVEN: RLC B	;
931)   1AE5 CB 00       		 RLC B	;
932)   1AE7 CB 00       		 RLC B	;
933)   1AE9 CB 00       		 RLC B	;
934)   1AEB E6 0F       		 AND $0F        ;ZERO LEFT	;ZERO LEFT
935)   1AED B0          		DPEXIT: OR B         ;MIX PIXELS	;MIX PIXELS
936)   1AEE 77          		 LD (HL), A	;
937)   1AEF CD 49 1A    		 CALL VGA_RMVGRPG	;
938)   1AF2 C9          		 RET	;
941)   1AF3 CD C7 19    		VGA_GRCLS: CALL VGA_SETGRPGLO	;
942)   1AF6 21 00 40    		 LD HL, BASEADDR	;
943)   1AF9 11 01 40    		 LD DE, BASEADDR + 1	;
944)   1AFC 01 FF 3F    		 LD BC, 16384 - 1       ;BYTES ON 1ST 16K	;BYTES ON 1ST 16K
945)   1AFF AF          		 XOR A	;
946)   1B00 77          		 LD (HL), A	;
947)   1B01 ED B0       		 LDIR         ;RED - RED	;RED - RED
949)   1B03 CD 49 1A    		 CALL VGA_RMVGRPG	;
950)   1B06 CD 08 1A    		 CALL VGA_SETGRPGHI	;
951)   1B09 21 00 40    		 LD HL, BASEADDR	;
952)   1B0C 11 01 40    		 LD DE, BASEADDR + 1	;
953)   1B0F 01 FF 3C    		 LD BC, 15616 - 1       ;BYTES ON 2ND 16K	;BYTES ON 2ND 16K
954)   1B12 AF          		 XOR A	;
955)   1B13 77          		 LD (HL), A	;
956)   1B14 ED B0       		 LDIR	;
957)   1B16 CD 49 1A    		 CALL VGA_RMVGRPG	;
958)   1B19 AF          		 XOR A        ;RESET TEXT COORDS	;RESET TEXT COORDS
959)   1B1A 32 0F FF    		 LD (VGATX_X), A	;
960)   1B1D 32 10 FF    		 LD (VGATX_Y), A	;
961)   1B20 C9          		 RET         ;TO MENU	;TO MENU
963)   1B21 C5          		FILLBTS: PUSH BC	;
964)   1B22 12          		AGN1: LD (DE), A	;
965)   1B23 13          		 INC DE	;
966)   1B24 0B          		 DEC BC	;
967)   1B25 67          		 LD H, A	;
968)   1B26 78          		 LD A, B	;
969)   1B27 B1          		 OR C	;
970)   1B28 7C          		 LD A, H	;
971)   1B29 20 F7       		 JR NZ, AGN1	;
972)   1B2B 2D          		 DEC L	;
973)   1B2C 7D          		 LD A, L	;
974)   1B2D B7          		 OR A	;
975)   1B2E 7C          		 LD A, H	;
976)   1B2F C1          		 POP BC	;
977)   1B30 20 EF       		 JR NZ, FILLBTS	;
978)   1B32 C9          		 RET	;
984)   1B33 E5          		VGA_GETPXL32: PUSH HL	;
985)   1B34 F5          		 PUSH AF	;
986)   1B35 7B          		 LD A, E	;
987)   1B36 FE 66       		 CP 102	;
988)   1B38 38 25       		 JR C, GPNXT0        ;LESS THAN 102	;LESS THAN 102
989)   1B3A 20 16       		 JR NZ, GPNXTBNK       ;MORE THAN 102	;MORE THAN 102
990)   1B3C E5          		 PUSH HL        ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES	;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
991)   1B3D 01 80 00    		 LD BC, 128	;
992)   1B40 B7          		 OR A	;
993)   1B41 ED 42       		 SBC HL, BC	;
994)   1B43 47          		 LD B, A	;
995)   1B44 7C          		 LD A, H	;
996)   1B45 B7          		 OR A         ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128	; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
997)   1B46 78          		 LD A, B	;
998)   1B47 E1          		 POP HL	;
999)   1B48 20 15       		 JR NZ, GPNXT0	;
1001)   1B4A 3E 67       		 LD A, 103        ;WE ARE AT LINE ZERO ON 2ND BANK	;WE ARE AT LINE ZERO ON 2ND BANK
1002)   1B4C 11 40 01    		 LD DE, 129 + 191	;
1003)   1B4F B7          		 OR A	;
1004)   1B50 ED 52       		 SBC HL, DE        ;	;
1005)   1B52 D6 67       		GPNXTBNK: SUB 103       ;SKIP 102 ROWS	;SKIP 102 ROWS
1006)   1B54 11 C0 00    		 LD DE, 192        ;320-128	;320-128
1007)   1B57 19          		 ADD HL, DE	;
1008)   1B58 F5          		 PUSH AF	;
1010)   1B59 CD 08 1A    		 CALL VGA_SETGRPGHI	;
1012)   1B5C F1          		 POP AF         ;A HAS THE ROWS ON 2ND 16K	;A HAS THE ROWS ON 2ND 16K
1013)   1B5D 18 05       		 JR GPNXT1	;
1014)   1B5F F5          		GPNXT0: PUSH AF        ;A=E=ROW=Y	;A=E=ROW=Y
1015)   1B60 CD C7 19    		 CALL VGA_SETGRPGLO	;
1016)   1B63 F1          		 POP AF	;
1017)   1B64 11 00 40    		GPNXT1: LD DE, BASEADDR	;
1019)   1B67 CB 3C       		 SRL H	;
1020)   1B69 CB 1D       		 RR L	;
1021)   1B6B 19          		 ADD HL, DE        ;FIND COLUMN	;FIND COLUMN
1022)   1B6C 11 A0 00    		 LD DE, 160	;
1023)   1B6F CD 06 2B    		 CALL Mult12        ;HL=A*DE	;HL=A*DE
1024)   1B72 C1          		GPDOGETPX: POP BC        ;B HAS THE COLOR	;B HAS THE COLOR
1025)   1B73 D1          		 POP DE         ;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL
1026)   1B74 7E          		 LD A, (HL)        ;GET PIXEL BYTE	;GET PIXEL BYTE
1027)   1B75 CB 43       		 BIT 0, E        ;CHECK X IS EVEN OR ODD	;CHECK X IS EVEN OR ODD
1028)   1B77 28 04       		 JR Z, GPDOEVEN        ;EVEN	;EVEN
1030)   1B79 E6 0F       		 AND $0F        ;CLEAR LEFT 4 BITS	;CLEAR LEFT 4 BITS
1031)   1B7B 18 0A       		 JR GPDPEXIT	;
1033)   1B7D CB 07       		GPDOEVEN: RLC A	;
1034)   1B7F CB 07       		 RLC A	;
1035)   1B81 CB 07       		 RLC A	;
1036)   1B83 CB 07       		 RLC A	;
1037)   1B85 E6 0F       		 AND $0F        ;ZERO LEFT	;ZERO LEFT
1038)   1B87 F5          		GPDPEXIT: PUSH AF       ;SAVE PIXEL	;SAVE PIXEL
1039)   1B88 CD 49 1A    		 CALL VGA_RMVGRPG	;
1040)   1B8B F1          		 POP AF         ;RESTORE PIXEL	;RESTORE PIXEL
1041)   1B8C C9          		 RET	;
1046)   1B8D C3 96 1C    		VGA_DOPRNCHGRP: JP VGA_PRNGRCH	;
1054)   1B90 C9          		 RET	;
1060)   1B91 06 02       		SETGRAPHPGS: LD B, 2	;
1061)   1B93 3A 09 FF    		 LD A, (PGSEM)        ;PG SEM FOR ALL 4 PAGES	;PG SEM FOR ALL 4 PAGES
1062)   1B96 3C          		 INC A	;
1063)   1B97 32 09 FF    		 LD (PGSEM), A	;
1064)   1B9A FE 01       		 CP 1	;
1065)   1B9C C0          		 RET NZ	;
1066)   1B9D E5          		 PUSH HL	;
1067)   1B9E 0E 04       		 LD C, 4	;
1068)   1BA0 21 05 FF    		 LD HL, TMPG	;
1069)   1BA3 C5          		 PUSH BC	;
1070)   1BA4 E5          		SGP_NXT: PUSH HL	;
1071)   1BA5 CD A7 0C    		 CALL GETPGINBANK	;
1072)   1BA8 E1          		 POP HL	;
1073)   1BA9 77          		 LD (HL), A	;
1074)   1BAA 23          		 INC HL	;
1075)   1BAB 04          		 INC B	;
1076)   1BAC 0D          		 DEC C	;
1077)   1BAD 20 F5       		 JR NZ, SGP_NXT	;
1078)   1BAF C1          		 POP BC	;
1079)   1BB0 0E 04       		 LD C, 4	;
1080)   1BB2 3A 14 FF    		 LD A,(VGABUF)	;
1081)   1BB5 1F          		 RRA	;
1082)   1BB6 3E 08       		 LD A, 8       ;BUFFER 0	;BUFFER 0
1083)   1BB8 30 02       		 JR NC, SGP_NXT2	;
1084)   1BBA 3E 0C       		 LD A, 12      ;BUFFER 1	;BUFFER 1
1087)   1BBC C5          		SGP_NXT2: PUSH BC	;
1088)   1BBD CD 85 0C    		 CALL PUTPGINBANK	;
1089)   1BC0 C1          		 POP BC	;
1090)   1BC1 3C          		 INC A	;
1091)   1BC2 04          		 INC B	;
1092)   1BC3 0D          		 DEC C	;
1093)   1BC4 20 F6       		 JR NZ, SGP_NXT2	;
1094)   1BC6 E1          		 POP HL	;
1095)   1BC7 C9          		 RET	;
1099)   1BC8 06 02       		RMVGRAPHPGS: LD B, 2	;
1100)   1BCA 3A 09 FF    		 LD A, (PGSEM)	;
1101)   1BCD FE 00       		 CP 0	;
1102)   1BCF C8          		 RET Z	;
1103)   1BD0 3D          		 DEC A	;
1104)   1BD1 32 09 FF    		 LD (PGSEM), A	;
1105)   1BD4 FE 00       		 CP 0	;
1106)   1BD6 C0          		 RET NZ	;
1107)   1BD7 E5          		 PUSH HL	;
1108)   1BD8 21 05 FF    		 LD HL, TMPG	;
1109)   1BDB 0E 04       		 LD C, 4	;
1110)   1BDD 7E          		RGP_NXT: LD A, (HL)	;
1111)   1BDE E5          		 PUSH HL	;
1112)   1BDF C5          		 PUSH BC	;
1113)   1BE0 CD 85 0C    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
1114)   1BE3 C1          		 POP BC	;
1115)   1BE4 E1          		 POP HL	;
1116)   1BE5 04          		 INC B	;
1117)   1BE6 23          		 INC HL	;
1118)   1BE7 0D          		 DEC C	;
1119)   1BE8 20 F3       		 JR NZ, RGP_NXT	;
1120)   1BEA E1          		 POP HL	;
1121)   1BEB C9          		 RET	;
1131)   1BEC 3E 50       		VGA_CALC_VA64: LD A, 80	;
1133)   1BEE E5          		 PUSH HL	;
1134)   1BEF CD 06 2B    		 CALL Mult12        ;HL=A * DE=Y	;HL=A * DE=Y
1135)   1BF2 EB          		 EX DE, HL        ;DE=Y*80	;DE=Y*80
1136)   1BF3 E1          		 POP HL	;
1137)   1BF4 0E 08       		 LD C, 8	;
1138)   1BF6 CD 5C 2B    		 CALL DIV16_8        ;HL=HL/C  A=REMAINDER	;HL=HL/C  A=REMAINDER
1139)   1BF9 19          		 ADD HL, DE        ;THE ADDRESS IN 32K VIDEO BUFFER	;THE ADDRESS IN 32K VIDEO BUFFER
1140)   1BFA 11 00 40    		 LD DE, $4000	;
1141)   1BFD 19          		 ADD HL, DE        ;THE ADDRESS IN Z80 RAM	;THE ADDRESS IN Z80 RAM
1143)   1BFE 4F          		 LD C,A	;
1144)   1BFF 3E 07       		 LD A,7	;
1145)   1C01 91          		 SUB C        ;A=7-REM TO FIND THE BIT TO SET LEFT TO RIGHT	;A=7-REM TO FIND THE BIT TO SET LEFT TO RIGHT
1146)   1C02 06 01       		 LD B, 1	;
1147)   1C04 B7          		 OR A	;
1148)   1C05 28 05       		VCVA_AGN: JR Z, VCVA_NXT	;
1149)   1C07 CB 10       		 RL B         ;MOVE B (THE MASK) TO THE RIGHT BIT	;MOVE B (THE MASK) TO THE RIGHT BIT
1150)   1C09 3D          		 DEC A	;
1151)   1C0A 18 F9       		 JR VCVA_AGN	;
1152)   1C0C 78          		VCVA_NXT: LD A, B	;
1153)   1C0D C9          		 RET	;
1160)   1C0E F5          		VGA_CHECKXY64: PUSH AF	;
1161)   1C0F E5          		 PUSH HL	;
1162)   1C10 D5          		 PUSH DE	;
1163)   1C11 B7          		 OR A	;
1164)   1C12 11 80 02    		 LD DE, 640	;
1165)   1C15 ED 52       		 SBC HL, DE	;
1166)   1C17 30 0F       		 JR NC, CXY6_ABEX	;
1167)   1C19 D1          		 POP DE	;
1168)   1C1A D5          		 PUSH DE	;
1169)   1C1B EB          		 EX DE, HL	;
1170)   1C1C 11 90 01    		 LD DE, 400	;
1171)   1C1F ED 52       		 SBC HL, DE	;
1172)   1C21 D1          		 POP DE         ;ABNORMAL EXIT PIXEL CANT PUT TO SCREEN	;ABNORMAL EXIT PIXEL CANT PUT TO SCREEN
1173)   1C22 E1          		 POP HL	;
1174)   1C23 30 03       		 JR NC, CXY6_ABEX	;
1175)   1C25 F1          		 POP AF	;
1176)   1C26 37          		 SCF         ;RETURN WITH C SET	;RETURN WITH C SET
1177)   1C27 C9          		 RET	;
1178)   1C28 F1          		CXY6_ABEX: POP AF	;
1179)   1C29 AF          		 XOR A	;
1180)   1C2A C9          		 RET         ;RETURN WITH NC	;RETURN WITH NC
1185)   1C2B CD 0E 1C    		VGA_PLTPXL64: CALL VGA_CHECKXY64	;
1186)   1C2E D0          		 RET NC         ;NOT VALID PARAMS	;NOT VALID PARAMS
1187)   1C2F F5          		 PUSH AF	;
1188)   1C30 E5          		 PUSH HL	;
1189)   1C31 D5          		 PUSH DE	;
1190)   1C32 CD 91 1B    		 CALL SETGRAPHPGS       ;BRING VIDEO PAGES TO Z80	;BRING VIDEO PAGES TO Z80
1191)   1C35 D1          		PP6_PAROK: POP DE	;
1192)   1C36 E1          		 POP HL	;
1194)   1C37 CD EC 1B    		 CALL VGA_CALC_VA64       ;HL THE VGA ADDRESS AND A THE BIT MASK	;HL THE VGA ADDRESS AND A THE BIT MASK
1195)   1C3A D1          		 POP DE         ;D HAS THE COLOR 0 OR 1, RESET BIT OR SET	;D HAS THE COLOR 0 OR 1, RESET BIT OR SET
1196)   1C3B 5F          		 LD E, A	;
1197)   1C3C 3A 0E FF    		 LD A,(VGABCOL)	;
1198)   1C3F BA          		 CP D         ;CHECK IF COLOR IS SAME AS BACKG	;CHECK IF COLOR IS SAME AS BACKG
1199)   1C40 28 05       		 JR Z, PP6_RESET	;
1201)   1C42 7E          		 LD A, (HL)        ;GET THE BYTE	;GET THE BYTE
1202)   1C43 B3          		 OR E         ;SET THE BIT	;SET THE BIT
1203)   1C44 77          		 LD (HL), A        ;PUT THE BYTE BACK	;PUT THE BYTE BACK
1204)   1C45 18 06       		 JR PP6_EXIT	;
1207)   1C47 7B          		 LD A, E        ;MASK ON A	;MASK ON A
1208)   1C48 2F          		 CPL         ;INVERT ALL PIXELS	;INVERT ALL PIXELS
1209)   1C49 5F          		 LD E, A        ;MASK ON E	;MASK ON E
1210)   1C4A 7E          		 LD A, (HL)        ;GET THE BYTE	;GET THE BYTE
1211)   1C4B A3          		 AND E         ;RESET THE BIT	;RESET THE BIT
1212)   1C4C 77          		 LD (HL), A        ;PUT THE BYTE BACK	;PUT THE BYTE BACK
1213)   1C4D CD C8 1B    		PP6_EXIT: CALL RMVGRAPHPGS      ;RESTORE PREVIOUS PAGES TO Z80	;RESTORE PREVIOUS PAGES TO Z80
1214)   1C50 C9          		 RET	;
1222)   1C51 CD 0E 1C    		VGA_GETPXL64: CALL VGA_CHECKXY64	;
1223)   1C54 D0          		 RET NC         ;NOT VALID PARAMS	;NOT VALID PARAMS
1224)   1C55 CD 91 1B    		 CALL SETGRAPHPGS       ;BRING VIDEO PAGES TO Z80	;BRING VIDEO PAGES TO Z80
1225)   1C58 D1          		 POP DE	;
1226)   1C59 E1          		 POP HL	;
1227)   1C5A F1          		 POP AF	;
1229)   1C5B CD EC 1B    		 CALL VGA_CALC_VA64       ;HL THE VGA ADDRESS AND A THE BIT MASK	;HL THE VGA ADDRESS AND A THE BIT MASK
1230)   1C5E 5F          		 LD E, A	;
1231)   1C5F 7E          		 LD A, (HL)	;
1232)   1C60 A3          		 AND E	;
1233)   1C61 FE 00       		 CP 0	;
1234)   1C63 28 02       		 JR Z, GP6EXIT	;
1235)   1C65 3E 01       		 LD A, 1	;
1237)   1C67 F5          		GP6EXIT: PUSH AF	;
1238)   1C68 CD C8 1B    		 CALL RMVGRAPHPGS       ;RESTORE PREVIOUS PAGES TO Z80	;RESTORE PREVIOUS PAGES TO Z80
1239)   1C6B F1          		 POP AF	;
1240)   1C6C C9          		 RET	;
1248)   1C6D F5          		VGA_PLTPXL: PUSH AF	;
1249)   1C6E E5          		 PUSH HL	;
1250)   1C6F D5          		 PUSH DE        ;SAVE A	;SAVE A
1251)   1C70 CD CE 16    		 CALL VGA_GETCONF	;
1252)   1C73 D1          		 POP DE	;
1253)   1C74 E1          		 POP HL	;
1254)   1C75 F1          		 POP AF	;
1255)   1C76 E5          		 PUSH HL	;
1256)   1C77 D5          		 PUSH DE	;
1257)   1C78 DD 21 86 1C 		 LD IX,VGA_PPEXIT	;
1258)   1C7C DD E5       		 PUSH IX        ;RETURN ADDRESS  	;RETURN ADDRESS
1259)   1C7E CB 49       		 BIT 1, C        ;test low or hi	;test low or hi
1260)   1C80 C2 2B 1C    		 JP NZ, VGA_PLTPXL64       ;NZ MEANS HI	;NZ MEANS HI
1261)   1C83 C3 90 1A    		 JP VGA_PLTPXL32	;
1262)   1C86 D1          		VGA_PPEXIT: POP DE	;
1263)   1C87 E1          		 POP HL	;
1264)   1C88 C9          		 RET	;
1270)   1C89 D5          		VGA_GETPXL: PUSH DE	;
1271)   1C8A CD CE 16    		 CALL VGA_GETCONF	;
1272)   1C8D D1          		 POP DE	;
1273)   1C8E CB 49       		 BIT 1, C        ;test low or hi	;test low or hi
1274)   1C90 C2 51 1C    		 JP NZ, VGA_GETPXL64       ;NZ MEANS HI	;NZ MEANS HI
1275)   1C93 C3 33 1B    		 JP VGA_GETPXL32	;
1281)   1C96 F5          		VGA_PRNGRCH:  PUSH AF	;
1287)   1C97 1E 08       		 LD E,FONT_WIDTH	;
1288)   1C99 3A 0F FF    		VPGC_NXT: LD A,(VGATX_X)	;
1289)   1C9C 67          		 LD H,A	;
1291)   1C9D CD FA 2A    		 CALL MULT8	;
1292)   1CA0 E5          		 PUSH HL        ;SAVE RESULT	;SAVE RESULT
1293)   1CA1 1E 0A       		 LD E,FONT_HEIGHT	;
1294)   1CA3 3A 10 FF    		 LD A,(VGATX_Y)	;
1295)   1CA6 67          		 LD H,A	;
1296)   1CA7 CD FA 2A    		 CALL MULT8	;
1297)   1CAA D1          		 POP DE	;
1298)   1CAB EB          		 EX DE,HL	;
1300)   1CAC F1          		 POP AF        ;GET THE CHAR	;GET THE CHAR
1302)   1CAD E5          		VGA_PRNGRCHAT: PUSH HL	;
1303)   1CAE D5          		 PUSH DE	;
1304)   1CAF B7          		 OR A	;
1305)   1CB0 21 00 36    		 LD HL, FONT_ADDR	;
1306)   1CB3 16 00       		 LD D, 0	;
1307)   1CB5 5F          		 LD E, A	;
1308)   1CB6 ED 5A       		 ADC HL, DE        ;HL THE START OF FONT	;HL THE START OF FONT
1309)   1CB8 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
1310)   1CBA EB          		 EX DE,HL       ;DE THE START OF FONT PATTERN	;DE THE START OF FONT PATTERN
1311)   1CBB 1A          		VPGC_AGN3: LD A, (DE)       ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1312)   1CBC 06 08       		 LD B, FONT_WIDTH	;
1313)   1CBE CB 27       		VPGC_AGN4: SLA A        ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1314)   1CC0 67          		 LD H,A        ;SAVE A  	;SAVE A
1315)   1CC1 38 05       		 JR C, VPGC_FCOLOR	;
1316)   1CC3 3A 0E FF    		 LD A, (VGABCOL)	;
1317)   1CC6 18 03       		 JR VPGC_CONT	;
1318)   1CC8 3A 0D FF    		VPGC_FCOLOR: LD A, (VGAFCOL) 	;
1320)   1CCB D9          		VPGC_CONT: EXX 	;
1321)   1CCC D1          		 POP DE	;
1322)   1CCD E1          		 POP HL	;
1323)   1CCE CD 6D 1C    		 CALL VGA_PLTPXL	;
1324)   1CD1 23          		 INC HL        ;NEXT PIXEL ON VIDEO BUF	;NEXT PIXEL ON VIDEO BUF
1325)   1CD2 E5          		 PUSH HL	;
1326)   1CD3 D5          		 PUSH DE	;
1327)   1CD4 D9          		 EXX	;
1328)   1CD5 7C          		 LD A,H        ;RESTORE A	;RESTORE A
1329)   1CD6 10 E6       		 DJNZ VPGC_AGN4	;
1330)   1CD8 D9          		 EXX	;
1331)   1CD9 D1          		 POP DE	;
1332)   1CDA E1          		 POP HL	;
1333)   1CDB 06 00       		 LD B,0	;
1334)   1CDD 0E 08       		 LD C,FONT_WIDTH	;
1335)   1CDF B7          		 OR A	;
1336)   1CE0 ED 42       		 SBC HL,BC       ;X=HL AT THE START	;X=HL AT THE START
1337)   1CE2 13          		 INC DE        ;Y=DE +1	;Y=DE +1
1338)   1CE3 E5          		 PUSH HL	;
1339)   1CE4 D5          		 PUSH DE	;
1340)   1CE5 D9          		 EXX	;
1341)   1CE6 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1342)   1CE7 0D          		 DEC C	;
1343)   1CE8 20 D1       		 JR NZ, VPGC_AGN3	;
1344)   1CEA D1          		 POP DE	;
1345)   1CEB E1          		 POP HL	;
1346)   1CEC C9          		 RET	;
 16)   1CED 	            		 LCD_RS EQU DEVTFT       ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   1CED 	            		 LCD_CS EQU DEVTFT+1       ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   1CED 7B          		 LD A, E	;
 32)   1CEE D3 11       		 OUT (LCD_CS), A	;
 37)   1CF0 DB 11       		 IN A, (LCD_CS)	;
 38)   1CF2 C9          		 RET	;
 45)   1CF3 7A          		 LD A, D	;
 46)   1CF4 D3 11       		 OUT (LCD_CS), A	;
 47)   1CF6 C9          		 RET	;
 53)   1CF7 7A          		 LD A, D	;
 54)   1CF8 D3 10       		 OUT (LCD_RS), A	;
 55)   1CFA C9          		 RET	;
 62)   1CFB AF          		 XOR A	;
 63)   1CFC D3 10       		 OUT (LCD_RS), A       ;RS LOW = COMMAND BYTE	;RS LOW = COMMAND BYTE
 64)   1CFE CD F3 1C    		 CALL LCD_WR_BUS	;
 65)   1D01 3E 01       		 LD A, 1	;
 66)   1D03 D3 10       		 OUT (LCD_RS), A       ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   1D05 C9          		 RET	;
 71)   1D06 16 E2       		 LD D, 0xE2        ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   1D08 CD F7 1C    		 CALL LCD_WR_COM       ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   1D0B 16 23       		 LD D, 0x23        ;1E	;1E
 74)   1D0D CD F3 1C    		 CALL LCD_WR_DAT	;
 75)   1D10 16 02       		 LD D, 0x02	;
 76)   1D12 CD F3 1C    		 CALL LCD_WR_DAT	;
 77)   1D15 16 54       		 LD D, 0x54	;
 78)   1D17 CD F3 1C    		 CALL LCD_WR_DAT	;
 79)   1D1A 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 80)   1D1C CD F7 1C    		 CALL LCD_WR_COM	;
 81)   1D1F 16 01       		 LD D, 0x01	;
 82)   1D21 CD F3 1C    		 CALL LCD_WR_DAT	;
 83)   1D24 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 84)   1D26 CD DF 28    		 CALL DELAYMICRO	;
 85)   1D29 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 86)   1D2B CD F7 1C    		 CALL LCD_WR_COM	;
 87)   1D2E 16 03       		 LD D, 0x03	;
 88)   1D30 CD F3 1C    		 CALL LCD_WR_DAT	;
 89)   1D33 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 90)   1D35 CD DF 28    		 CALL DELAYMICRO	;
 92)   1D38 16 01       		 LD D, 0x01        ; software reset	; software reset
 93)   1D3A CD F7 1C    		 CALL LCD_WR_COM	;
 94)   1D3D 06 14       		 LD B, 20        ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   1D3F CD DF 28    		 CALL DELAYMICRO	;
 96)   1D42 16 E6       		 LD D, 0xE6        ;PLL setting for PCLK, depends on resolution	;PLL setting for PCLK, depends on resolution
 97)   1D44 CD F7 1C    		 CALL LCD_WR_COM	;
 98)   1D47 16 03       		 LD D, 0x03	;
 99)   1D49 CD F3 1C    		 CALL LCD_WR_DAT	;
100)   1D4C 16 33       		 LD D, 0x33        ;FF	;FF
101)   1D4E CD F3 1C    		 CALL LCD_WR_DAT	;
102)   1D51 16 33       		 LD D, 0x33        ;FF	;FF
103)   1D53 CD F3 1C    		 CALL LCD_WR_DAT	;
105)   1D56 16 B0       		 LD D, 0xB0        ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   1D58 CD F7 1C    		 CALL LCD_WR_COM	;
107)   1D5B 16 20       		 LD D, 0x20	;
108)   1D5D CD F3 1C    		 CALL LCD_WR_DAT	;
109)   1D60 16 00       		 LD D, 0x00	;
110)   1D62 CD F3 1C    		 CALL LCD_WR_DAT	;
111)   1D65 16 03       		 LD D, 0x03        ;Set HDP  799	;Set HDP  799
112)   1D67 CD F3 1C    		 CALL LCD_WR_DAT	;
113)   1D6A 16 1F       		 LD D, 0x1F	;
114)   1D6C CD F3 1C    		 CALL LCD_WR_DAT	;
115)   1D6F 16 01       		 LD D, 0x01        ;Set VDP  479	;Set VDP  479
116)   1D71 CD F3 1C    		 CALL LCD_WR_DAT	;
117)   1D74 16 DF       		 LD D, 0xDF	;
118)   1D76 CD F3 1C    		 CALL LCD_WR_DAT	;
119)   1D79 16 00       		 LD D, 0x00	;
120)   1D7B CD F3 1C    		 CALL LCD_WR_DAT	;
123)   1D7E 16 B4       		 LD D, 0xB4        ;HSYNC	;HSYNC
124)   1D80 CD F7 1C    		 CALL LCD_WR_COM	;
125)   1D83 16 04       		 LD D, 0x04        ;03         ;Set HT 928	;03         ;Set HT 928
126)   1D85 CD F3 1C    		 CALL LCD_WR_DAT	;
127)   1D88 16 1F       		 LD D, 0x1F        ;A0	;A0
128)   1D8A CD F3 1C    		 CALL LCD_WR_DAT	;
129)   1D8D 16 00       		 LD D, 0x00        ;Set HPS  46	;Set HPS  46
130)   1D8F CD F3 1C    		 CALL LCD_WR_DAT	;
131)   1D92 16 D2       		 LD D, 0xD2        ;2E	;2E
132)   1D94 CD F3 1C    		 CALL LCD_WR_DAT	;
133)   1D97 16 00       		 LD D, 0x00        ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   1D99 CD F3 1C    		 CALL LCD_WR_DAT	;
135)   1D9C 16 00       		 LD D, 0x00        ;Set LPS  15	;Set LPS  15
136)   1D9E CD F3 1C    		 CALL LCD_WR_DAT	;
137)   1DA1 16 00       		 LD D, 0x00        ;0F	;0F
138)   1DA3 CD F3 1C    		 CALL LCD_WR_DAT	;
139)   1DA6 16 00       		 LD D, 0x00	;
140)   1DA8 CD F3 1C    		 CALL LCD_WR_DAT	;
142)   1DAB 16 B6       		 LD D, 0xB6        ;VSYNC	;VSYNC
143)   1DAD CD F7 1C    		 CALL LCD_WR_COM	;
144)   1DB0 16 02       		 LD D, 0x02        ;Set VT 525	;Set VT 525
145)   1DB2 CD F3 1C    		 CALL LCD_WR_DAT	;
146)   1DB5 16 0C       		 LD D, 0x0C        ;0D	;0D
147)   1DB7 CD F3 1C    		 CALL LCD_WR_DAT	;
148)   1DBA 16 00       		 LD D, 0x00        ;Set VPS  16	;Set VPS  16
149)   1DBC CD F3 1C    		 CALL LCD_WR_DAT	;
150)   1DBF 16 22       		 LD D, 0x22        ;10	;10
151)   1DC1 CD F3 1C    		 CALL LCD_WR_DAT	;
152)   1DC4 16 00       		 LD D, 0x00        ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   1DC6 CD F3 1C    		 CALL LCD_WR_DAT	;
154)   1DC9 16 00       		 LD D, 0x00        ;Set FPS  8	;Set FPS  8
155)   1DCB CD F3 1C    		 CALL LCD_WR_DAT	;
156)   1DCE 16 00       		 LD D, 0x00        ; 08	; 08
157)   1DD0 CD F3 1C    		 CALL LCD_WR_DAT	;
159)   1DD3 16 B8       		 LD D, 0xB8	;
160)   1DD5 CD F7 1C    		 CALL LCD_WR_COM	;
161)   1DD8 16 0F       		 LD D, 0x0F        ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   1DDA CD F3 1C    		 CALL LCD_WR_DAT	;
163)   1DDD 16 01       		 LD D, 0x01        ;GPIO0 normal	;GPIO0 normal
164)   1DDF CD F3 1C    		 CALL LCD_WR_DAT	;
166)   1DE2 16 BA       		 LD D, 0xBA	;
167)   1DE4 CD F7 1C    		 CALL LCD_WR_COM	;
168)   1DE7 16 01       		 LD D, 0x01        ;0F	;0F
169)   1DE9 CD F3 1C    		 CALL LCD_WR_DAT       ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   1DEC 16 36       		 LD D, 0x36        ;rotation	;rotation
172)   1DEE CD F7 1C    		 CALL LCD_WR_COM	;
173)   1DF1 16 08       		 LD D, 0x08        ;2A	;2A
174)   1DF3 CD F3 1C    		 CALL LCD_WR_DAT	;
176)   1DF6 16 F0       		 LD D, 0xF0        ;pixel data interface	;pixel data interface
177)   1DF8 CD F7 1C    		 CALL LCD_WR_COM	;
178)   1DFB 16 06       		 LD D, 0x06        ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   1DFD CD F3 1C    		 CALL LCD_WR_DAT	;
181)   1E00 06 05       		 LD B, 5        ;delay(5);	;delay(5);
182)   1E02 CD DF 28    		 CALL DELAYMICRO	;
184)   1E05 16 BC       		 LD D, 0xBC        ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   1E07 CD F7 1C    		 CALL LCD_WR_COM	;
186)   1E0A 16 40       		 LD D, 0x40	;
187)   1E0C CD F3 1C    		 CALL LCD_WR_DAT	;
188)   1E0F 16 80       		 LD D, 0x80	;
189)   1E11 CD F3 1C    		 CALL LCD_WR_DAT	;
190)   1E14 16 40       		 LD D, 0x40	;
191)   1E16 CD F3 1C    		 CALL LCD_WR_DAT	;
192)   1E19 16 01       		 LD D, 0x01	;
193)   1E1B CD F3 1C    		 CALL LCD_WR_DAT	;
194)   1E1E 06 05       		 LD B, 5        ;delay(5);	;delay(5);
195)   1E20 CD DF 28    		 CALL DELAYMICRO	;
197)   1E23 16 35       		 LD D, 0x35        ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   1E25 CD F7 1C    		 CALL LCD_WR_COM	;
199)   1E28 16 00       		 LD D, 0x00        ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   1E2A CD F3 1C    		 CALL LCD_WR_DAT	;
202)   1E2D 16 29       		 LD D, 0x29        ;display on	;display on
203)   1E2F CD F7 1C    		 CALL LCD_WR_COM	;
204)   1E32 16 BE       		 LD D, 0xBE        ;set PWM for B/L	;set PWM for B/L
205)   1E34 CD F7 1C    		 CALL LCD_WR_COM	;
206)   1E37 16 06       		 LD D, 0x06	;
207)   1E39 CD F3 1C    		 CALL LCD_WR_DAT	;
208)   1E3C 16 F0       		 LD D, 0xF0	;
209)   1E3E CD F3 1C    		 CALL LCD_WR_DAT	;
210)   1E41 16 01       		 LD D, 0x01	;
211)   1E43 CD F3 1C    		 CALL LCD_WR_DAT	;
212)   1E46 16 F0       		 LD D, 0xF0	;
213)   1E48 CD F3 1C    		 CALL LCD_WR_DAT	;
214)   1E4B 16 00       		 LD D, 0x00	;
215)   1E4D CD F3 1C    		 CALL LCD_WR_DAT	;
216)   1E50 16 00       		 LD D, 0x00	;
217)   1E52 CD F3 1C    		 CALL LCD_WR_DAT	;
219)   1E55 16 D0       		 LD D, 0xD0	;
220)   1E57 CD F7 1C    		 CALL LCD_WR_COM	;
221)   1E5A 16 0D       		 LD D, 0x0D	;
222)   1E5C CD F3 1C    		 CALL LCD_WR_DAT	;
225)   1E5F 21 00 00    		 LD HL, 0	;
226)   1E62 E5          		 PUSH HL	;
227)   1E63 E5          		 PUSH HL	;
228)   1E64 21 1F 03    		 LD HL, 799	;
229)   1E67 E5          		 PUSH HL	;
230)   1E68 21 DF 01    		 LD HL, 479	;
231)   1E6B E5          		 PUSH HL	;
232)   1E6C CD 70 1E    		 CALL LCD_SETXY	;
233)   1E6F C9          		 RET	;
250)   1E70 DD 21 02 00 		 LD IX, 2	;
251)   1E74 DD 39       		 ADD IX, SP	;
252)   1E76 16 2A       		 LD D, 0x2A        ;SEND IX PARAMS	;SEND IX PARAMS
253)   1E78 CD F7 1C    		 CALL LCD_WR_COM	;
254)   1E7B DD 56 07    		 LD D, (IX + 7)	;
255)   1E7E CD F3 1C    		 CALL LCD_WR_DAT	;
256)   1E81 DD 56 06    		 LD D, (IX + 6)	;
257)   1E84 CD F3 1C    		 CALL LCD_WR_DAT	;
258)   1E87 DD 56 03    		 LD D, (IX + 3)	;
259)   1E8A CD F3 1C    		 CALL LCD_WR_DAT	;
260)   1E8D DD 56 02    		 LD D, (IX + 2)	;
261)   1E90 CD F3 1C    		 CALL LCD_WR_DAT	;
262)   1E93 16 2B       		 LD D, 0x2B        ;SEND Y PARAMS	;SEND Y PARAMS
263)   1E95 CD F7 1C    		 CALL LCD_WR_COM	;
264)   1E98 DD 56 05    		 LD D, (IX + 5)	;
265)   1E9B CD F3 1C    		 CALL LCD_WR_DAT	;
266)   1E9E DD 56 04    		 LD D, (IX + 4)	;
267)   1EA1 CD F3 1C    		 CALL LCD_WR_DAT	;
268)   1EA4 DD 56 01    		 LD D, (IX + 1)	;
269)   1EA7 CD F3 1C    		 CALL LCD_WR_DAT	;
270)   1EAA DD 56 00    		 LD D, (IX)	;
271)   1EAD CD F3 1C    		 CALL LCD_WR_DAT	;
272)   1EB0 16 2C       		 LD D, 0x2C        ;SEND DATA	;SEND DATA
273)   1EB2 CD F7 1C    		 CALL LCD_WR_COM	;
274)   1EB5 D1          		 POP DE	;
275)   1EB6 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   1EB9 39          		 ADD HL, SP	;
277)   1EBA F9          		 LD SP, HL	;
278)   1EBB EB          		 EX DE, HL	;
279)   1EBC E9          		 JP (HL)	;
285)   1EBD 54          		 LD D, H	;
286)   1EBE CD F3 1C    		 CALL LCD_WR_DAT	;
287)   1EC1 55          		 LD D, L	;
288)   1EC2 CD F3 1C    		 CALL LCD_WR_DAT	;
289)   1EC5 C9          		 RET	;
294)   1EC6 16 2E       		 LD D, 0x2E        ;READ DATA	;READ DATA
295)   1EC8 CD F7 1C    		 CALL LCD_WR_COM	;
296)   1ECB CD F0 1C    		@LCD_GTPXL: CALL LCD_RD_DAT	;
297)   1ECE 67          		 LD H, A	;
298)   1ECF CD F0 1C    		 CALL LCD_RD_DAT	;
299)   1ED2 6F          		 LD L, A	;
300)   1ED3 C9          		 RET	;
306)   1ED4 DD E5       		@LCD_READPIXEL: PUSH IX       ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   1ED6 DD 21 04 00 		 LD IX, 4        ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   1EDA DD 39       		 ADD IX, SP	;
309)   1EDC DD 66 03    		 LD H, (IX + 3)        ;X	;X
310)   1EDF DD 6E 02    		 LD L, (IX + 2)        ;X	;X
311)   1EE2 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
312)   1EE5 DD 5E 00    		 LD E, (IX)        ;Y	;Y
313)   1EE8 E5          		 PUSH HL	;
314)   1EE9 D5          		 PUSH DE	;
315)   1EEA E5          		 PUSH HL	;
316)   1EEB D5          		 PUSH DE	;
317)   1EEC CD 70 1E    		 CALL LCD_SETXY	;
318)   1EEF CD C6 1E    		 CALL LCD_GETPIXEL	;
319)   1EF2 E5          		 PUSH HL	;
320)   1EF3 CD 25 1F    		 CALL LCD_CLRXY	;
321)   1EF6 D1          		 POP DE         ;RESULT COLOR	;RESULT COLOR
322)   1EF7 DD E1       		 POP IX	;
323)   1EF9 C1          		 POP BC         ;RET ADDR	;RET ADDR
324)   1EFA 21 04 00    		 LD HL, 2 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   1EFD 39          		 ADD HL, SP	;
326)   1EFE F9          		 LD SP, HL	;
327)   1EFF EB          		 EX DE, HL        ;HL RESULT	;HL RESULT
328)   1F00 C5          		 PUSH BC        ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   1F01 C9          		 RET	;
333)   1F02 DD 21 02 00 		 LD IX, 2        ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   1F06 DD 39       		 ADD IX, SP	;
335)   1F08 DD 66 03    		 LD H, (IX + 3)        ;X	;X
336)   1F0B DD 6E 02    		 LD L, (IX + 2)        ;X	;X
337)   1F0E DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
338)   1F11 DD 5E 00    		 LD E, (IX)        ;Y	;Y
339)   1F14 E5          		 PUSH HL	;
340)   1F15 D5          		 PUSH DE	;
341)   1F16 E5          		 PUSH HL	;
342)   1F17 D5          		 PUSH DE	;
343)   1F18 CD 70 1E    		 CALL LCD_SETXY	;
344)   1F1B 2A 01 FE    		 LD HL, (FCOLOR)	;
345)   1F1E CD BD 1E    		 CALL LCD_SETPIXEL	;
346)   1F21 CD 25 1F    		 CALL LCD_CLRXY	;
347)   1F24 C9          		 RET	;
350)   1F25 21 00 00    		 LD HL, 0	;
351)   1F28 E5          		 PUSH HL	;
352)   1F29 E5          		 PUSH HL	;
353)   1F2A 21 1F 03    		 LD HL, LCD_WIDTH	;
354)   1F2D E5          		 PUSH HL	;
355)   1F2E 21 DF 01    		 LD HL, LCD_HEIGHT	;
356)   1F31 E5          		 PUSH HL	;
357)   1F32 CD 70 1E    		 CALL LCD_SETXY	;
358)   1F35 C9          		 RET	;
365)   1F36 3A B7 FE    		@LCD_FILL: LD A,(SCRNST)	;
366)   1F39 E6 01       		 AND 1	;
367)   1F3B 28 0A       		 JR Z,LF_NOTEN	;
368)   1F3D D9          		 EXX	;
369)   1F3E D1          		 POP DE         ;save return addr to de'	;save return addr to de'
370)   1F3F D9          		 EXX	;
371)   1F40 CD C9 21    		 CALL _FILL	;
372)   1F43 D9          		 EXX	;
373)   1F44 D5          		 PUSH DE        ;restore return addr from de'	;restore return addr from de'
374)   1F45 D9          		 EXX	;
375)   1F46 C9          		 RET	;
376)   1F47 D1          		LF_NOTEN: POP DE       ;GET RETURN ADDRESS	;GET RETURN ADDRESS
377)   1F48 E1          		 POP HL        ;GET 1ST PARAM FROM STACK	;GET 1ST PARAM FROM STACK
378)   1F49 E1          		 POP HL        ;GET 2ND PARAZM FROM STACK	;GET 2ND PARAZM FROM STACK
379)   1F4A D5          		 PUSH DE        ;PUT RETURN ADDRESS ON STACK	;PUT RETURN ADDRESS ON STACK
380)   1F4B C9          		 RET  	;
382)   1F4C F5          		@LCD_PRCH: PUSH AF	;
383)   1F4D CD B0 20    		 CALL LCD_RMVCURS	;
384)   1F50 F1          		 POP AF	;
388)   1F51 F5          		 PUSH AF	;
389)   1F52 D1          		 POP DE         ;FLAGS ON E	;FLAGS ON E
390)   1F53 FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
391)   1F55 28 0D       		 JR Z, PRCHOS_DOBCKSPC	;
392)   1F57 FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
393)   1F59 C8          		 RET Z	;
394)   1F5A FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
395)   1F5C 20 1A       		 JR NZ, PRCH_DOPRN	;
396)   1F5E 21 0D FE    		 LD HL, CURSORX	;
397)   1F61 C3 91 20    		 JP PRCH_NEWLN	;
399)   1F64 21 0D FE    		 LD HL, CURSORX	;
400)   1F67 7E          		 LD A, (HL)    	;
401)   1F68 FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
402)   1F6A C8          		 RET Z	;
403)   1F6B 35          		 DEC (HL)	;
404)   1F6C D5          		 PUSH DE	;
405)   1F6D F1          		 POP AF        ;GET CARRY FLAG BACK	;GET CARRY FLAG BACK
406)   1F6E D0          		 RET NC        ;IF C THEN DELETE LEFT CHAR ALSO	;IF C THEN DELETE LEFT CHAR ALSO
407)   1F6F E5          		 PUSH HL	;
408)   1F70 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
409)   1F72 CD 78 1F    		 CALL PRCH_DOPRN 	;
410)   1F75 E1          		 POP HL	;
411)   1F76 35          		 DEC (HL)	;
412)   1F77 C9          		 RET	;
414)   1F78 F5          		PRCH_DOPRN: PUSH AF       ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
415)   1F79 32 10 FE    		 LD (LASTCHAR), A       ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
419)   1F7C 3A 16 FE    		 LD A, (VDUMODE)	;
420)   1F7F FE 05       		 CP 5	;
421)   1F81 20 19       		 JR NZ, VDU4	;
422)   1F83 2A 5F FE    		 LD HL, (GR_LASTX)	;
423)   1F86 E5          		 PUSH HL	;
424)   1F87 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
425)   1F8B D5          		 PUSH DE	;
426)   1F8C 01 07 00    		 LD BC, FONT_WIDTH - 1	;
427)   1F8F 09          		 ADD HL, BC	;
428)   1F90 E5          		 PUSH HL	;
429)   1F91 01 09 00    		 LD BC, FONT_HEIGHT - 1	;
430)   1F94 EB          		 EX DE, HL	;
431)   1F95 09          		 ADD HL, BC	;
432)   1F96 E5          		 PUSH HL	;
433)   1F97 CD 70 1E    		 CALL LCD_SETXY	;
434)   1F9A 18 34       		 JR PRCHDO	;
435)   1F9C 3A 0D FE    		VDU4: LD A, (CURSORX)	;
436)   1F9F 06 08       		 LD B, FONT_WIDTH	;
437)   1FA1 16 00       		 LD D, 0	;
438)   1FA3 5F          		 LD E, A	;
439)   1FA4 21 00 00    		 LD HL, 0	;
440)   1FA7 B7          		 OR A         ; CLEAR CARRY	; CLEAR CARRY
442)   1FA8 ED 5A       		 ADC HL, DE	;
443)   1FAA 10 FC       		 DJNZ PRCH_AGN1        ;HL=DE*B	;HL=DE*B
444)   1FAC E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
445)   1FAD 11 08 00    		 LD DE, FONT_WIDTH	;
446)   1FB0 ED 5A       		 ADC HL, DE	;
447)   1FB2 2B          		 DEC HL	;
448)   1FB3 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
450)   1FB4 CD 06 20    		 CALL LCD_CALCLINE       ;SCROLL CALC	;SCROLL CALC
451)   1FB7 06 0A       		 LD B, FONT_HEIGHT	;
452)   1FB9 16 00       		 LD D, 0	;
453)   1FBB 5F          		 LD E, A	;
454)   1FBC 21 00 00    		 LD HL, 0	;
456)   1FBF ED 5A       		 ADC HL, DE	;
457)   1FC1 10 FC       		 DJNZ PRCH_AGN2	;
458)   1FC3 D1          		 POP DE         ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
459)   1FC4 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
460)   1FC5 D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
461)   1FC6 11 0A 00    		 LD DE, FONT_HEIGHT	;
462)   1FC9 ED 5A       		 ADC HL, DE        ;CALC 4TH PARAM	;CALC 4TH PARAM
463)   1FCB 2B          		 DEC HL         ;4TH PARAM -1	;4TH PARAM -1
464)   1FCC E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
465)   1FCD CD 70 1E    		 CALL LCD_SETXY	;
466)   1FD0 F1          		PRCHDO: POP AF         ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
467)   1FD1 B7          		 OR A	;
468)   1FD2 21 00 36    		 LD HL, FONT_ADDR	;
469)   1FD5 16 00       		 LD D, 0	;
470)   1FD7 5F          		 LD E, A	;
471)   1FD8 ED 5A       		 ADC HL, DE        ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
472)   1FDA E5          		 PUSH HL	;
473)   1FDB D1          		 POP DE         ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
474)   1FDC 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
476)   1FDE 1A          		 LD A, (DE)        ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
477)   1FDF 06 08       		 LD B, FONT_WIDTH	;
479)   1FE1 CB 27       		 SLA A         ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
480)   1FE3 38 05       		 JR C, FORECOLOR	;
481)   1FE5 2A 03 FE    		 LD HL, (BCOLOR)	;
482)   1FE8 18 03       		 JR PRCH_CONT	;
484)   1FEA 2A 01 FE    		 LD HL, (FCOLOR)	;
486)   1FED F5          		 PUSH AF	;
487)   1FEE D5          		 PUSH DE        ;TODO:PROBABLY NOT NEEDED HERE	;TODO:PROBABLY NOT NEEDED HERE
488)   1FEF CD BD 1E    		 CALL LCD_SETPIXEL	;
489)   1FF2 D1          		 POP DE	;
490)   1FF3 F1          		 POP AF	;
491)   1FF4 10 EB       		 DJNZ PRCH_AGN4	;
492)   1FF6 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
493)   1FF7 0D          		 DEC C	;
494)   1FF8 20 E4       		 JR NZ, PRCH_AGN3	;
496)   1FFA 21 0D FE    		 LD HL, CURSORX	;
497)   1FFD 7E          		 LD A, (HL)	;
498)   1FFE 3C          		 INC A	;
499)   1FFF FE 50       		 CP 80	;
500)   2001 CA 91 20    		 JP Z, PRCH_NEWLN       ;NEW LINE	;NEW LINE
501)   2004 77          		 LD (HL), A	;
502)   2005 C9          		 RET	;
505)   2006 3A 0F FE    		@LCD_CALCLINE: LD A, (SCRLN)	;
506)   2009 57          		 LD D, A	;
507)   200A 3A 0E FE    		 LD A, (CURSORY)       ;480/10 MAKES 48 LINES	;480/10 MAKES 48 LINES
508)   200D 82          		 ADD A, D	;
509)   200E FE 30       		 CP TOTLINES	;
510)   2010 D8          		 RET C	;
512)   2011 D6 30       		 SUB TOTLINES	;
513)   2013 C9          		 RET	;
518)   2014 16 33       		LCD_SETSCROLL: LD D, 0x33	;
519)   2016 CD F7 1C    		 CALL LCD_WR_COM	;
520)   2019 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
521)   201B CD F3 1C    		 CALL LCD_WR_DAT	;
522)   201E 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
523)   2020 CD F3 1C    		 CALL LCD_WR_DAT	;
524)   2023 16 01       		 LD D, 0X01        ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
525)   2025 CD F3 1C    		 CALL LCD_WR_DAT	;
526)   2028 16 E0       		 LD D, 0XE0        ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
527)   202A CD F3 1C    		 CALL LCD_WR_DAT	;
528)   202D 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
529)   202F CD F3 1C    		 CALL LCD_WR_DAT	;
530)   2032 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
531)   2034 CD F3 1C    		 CALL LCD_WR_DAT	;
532)   2037 AF          		 XOR A	;
533)   2038 32 0F FE    		 LD (SCRLN), A	;
534)   203B C9          		 RET	;
537)   203C 3A 0F FE    		@LCD_DOSCROLL: LD A, (SCRLN)	;
538)   203F 3C          		 INC A	;
539)   2040 FE 30       		 CP TOTLINES	;
540)   2042 38 02       		 JR C, DS_NXT	;
541)   2044 D6 30       		 SUB TOTLINES	;
542)   2046 32 0F FE    		DS_NXT: LD (SCRLN), A	;
543)   2049 6F          		 LD L, A	;
544)   204A 26 00       		 LD H, 0	;
545)   204C 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
546)   204D 29          		 ADD HL, HL	;
547)   204E 29          		 ADD HL, HL	;
548)   204F 5F          		 LD E, A	;
549)   2050 16 00       		 LD D, 0	;
550)   2052 19          		 ADD HL, DE	;
551)   2053 19          		 ADD HL, DE	;
552)   2054 16 37       		 LD D, 0x37	;
553)   2056 CD F7 1C    		 CALL LCD_WR_COM	;
554)   2059 54          		 LD D, H        ;NEW TOP SCROLL LINE BYTES HIGH (1-480)	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
555)   205A CD F3 1C    		 CALL LCD_WR_DAT	;
556)   205D 55          		 LD D, L        ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
557)   205E CD F3 1C    		 CALL LCD_WR_DAT	;
558)   2061 C9          		 RET	;
561)   2062 11 00 00    		@LCD_CLRTXTLN: LD DE, 0	;
563)   2065 D5          		 PUSH DE	;
564)   2066 6F          		 LD L, A	;
565)   2067 26 00       		 LD H, 0	;
566)   2069 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
567)   206A 29          		 ADD HL, HL	;
568)   206B 29          		 ADD HL, HL	;
569)   206C 5F          		 LD E, A	;
570)   206D 16 00       		 LD D, 0	;
571)   206F 19          		 ADD HL, DE	;
572)   2070 19          		 ADD HL, DE	;
574)   2071 E5          		 PUSH HL	;
575)   2072 11 0A 00    		 LD DE, FONT_HEIGHT	;
576)   2075 19          		 ADD HL, DE	;
578)   2076 EB          		 EX DE, HL	;
579)   2077 21 1F 03    		 LD HL, LCD_WIDTH	;
581)   207A E5          		 PUSH HL	;
582)   207B D5          		 PUSH DE        ;PARAM4	;PARAM4
583)   207C CD 70 1E    		 CALL LCD_SETXY	;
584)   207F 01 40 1F    		 LD BC, 8000        ; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
585)   2082 2A 03 FE    		 LD HL, (BCOLOR)	;
586)   2085 CD BD 1E    		CTL_AGN: CALL LCD_SETPIXEL      ;DESTROYS D,A	;DESTROYS D,A
587)   2088 0B          		 DEC BC	;
588)   2089 78          		 LD A, B	;
589)   208A B1          		 OR C	;
590)   208B 20 F8       		 JR NZ, CTL_AGN	;
591)   208D CD 25 1F    		 CALL LCD_CLRXY	;
592)   2090 C9          		 RET	;
596)   2091 AF          		 XOR A	;
597)   2092 77          		 LD (HL), A	;
598)   2093 23          		 INC HL	;
599)   2094 7E          		 LD A, (HL)	;
600)   2095 3C          		 INC A	;
602)   2096 FE 30       		 CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
603)   2098 28 02       		 JR Z, PRCH_SCROLL	;
604)   209A 77          		 LD (HL), A	;
605)   209B C9          		 RET	;
607)   209C F5          		PRCH_SCROLL: PUSH AF	;
608)   209D E5          		 PUSH HL	;
610)   209E 3A 0F FE    		 LD A, (SCRLN)	;
611)   20A1 CD 62 20    		 CALL LCD_CLRTXTLN	;
613)   20A4 CD 3C 20    		 CALL LCD_DOSCROLL	;
614)   20A7 E1          		 POP HL	;
615)   20A8 F1          		 POP AF	;
617)   20A9 3D          		 DEC A	;
618)   20AA 77          		 LD (HL), A        ;CURSORY	;CURSORY
619)   20AB AF          		 XOR A	;
620)   20AC 32 0D FE    		 LD (CURSORX), A	;
621)   20AF C9          		 RET	;
636)   20B0 2A 03 FE    		 LD HL, (BCOLOR)       ;	;
637)   20B3 18 03       		 JR LCD_SETCURS	;
648)   20B5 2A 01 FE    		 LD HL, (FCOLOR)       ;COLOR PARAM	;COLOR PARAM
651)   20B8 E5          		 PUSH HL        ;COLOR PARAM	;COLOR PARAM
652)   20B9 3A 0D FE    		 LD A, (CURSORX)	;
653)   20BC 06 08       		 LD B, FONT_WIDTH	;
654)   20BE 16 00       		 LD D, 0	;
655)   20C0 5F          		 LD E, A	;
656)   20C1 21 00 00    		 LD HL, 0	;
657)   20C4 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
659)   20C5 ED 5A       		 ADC HL, DE	;
660)   20C7 10 FC       		 DJNZ SCUR_AGN1        ;HL = DE * B	;HL = DE * B
661)   20C9 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
662)   20CA 01 08 00    		 LD BC, FONT_WIDTH	;
663)   20CD ED 4A       		 ADC HL, BC        ;NEXT CHAR	;NEXT CHAR
664)   20CF 2B          		 DEC HL         ;MINUS 1	;MINUS 1
665)   20D0 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
667)   20D1 CD 06 20    		 CALL LCD_CALCLINE	;
668)   20D4 06 0A       		 LD B, FONT_HEIGHT	;
669)   20D6 16 00       		 LD D, 0	;
670)   20D8 5F          		 LD E, A	;
671)   20D9 21 00 00    		 LD HL, 0	;
673)   20DC ED 5A       		 ADC HL, DE	;
674)   20DE 10 FC       		 DJNZ SCUR_AGN2        ;HL=B*DE	;HL=B*DE
675)   20E0 0E 08       		 LD C, FONT_HEIGHT - 2       ;2 PIXEL HEIGTH CURSOR	;2 PIXEL HEIGTH CURSOR
676)   20E2 06 00       		 LD B, 0	;
677)   20E4 ED 4A       		 ADC HL, BC        ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
678)   20E6 D1          		 POP DE         ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
679)   20E7 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
680)   20E8 D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
682)   20E9 23          		 INC HL         ; Y2 ADD THE LAST +2 PIXELS	; Y2 ADD THE LAST +2 PIXELS
683)   20EA E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
684)   20EB CD 70 1E    		 CALL LCD_SETXY	;
686)   20EE E1          		 POP HL         ;GET THE COLOR	;GET THE COLOR
687)   20EF 06 10       		 LD B, 2 * FONT_WIDTH       ;2*8=16	;2*8=16
689)   20F1 CD BD 1E    		 CALL LCD_SETPIXEL       ;DESTROYS D,A	;DESTROYS D,A
690)   20F4 10 FB       		 DJNZ SCUR_AGN3	;
695)   20F6 C9          		 RET	;
699)   20F7 CD 25 1F    		 CALL LCD_CLRXY        ;	;
700)   20FA 2A 03 FE    		 LD HL, (BCOLOR)	;
702)   20FD 01 E0 01    		 LD BC, LCD_HEIGHT + 1	;
703)   2100 C5          		CS_AGNA2: PUSH BC	;
704)   2101 01 20 03    		 LD BC, LCD_WIDTH + 1	;
705)   2104 CD BD 1E    		CS_AGNA1: CALL LCD_SETPIXEL      ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
706)   2107 0B          		 DEC BC	;
707)   2108 78          		 LD A, B	;
708)   2109 B1          		 OR C	;
709)   210A 20 F8       		 JR NZ, CS_AGNA1	;
710)   210C C1          		 POP BC	;
711)   210D 0B          		 DEC BC	;
712)   210E 78          		 LD A, B	;
713)   210F B1          		 OR C	;
714)   2110 20 EE       		 JR NZ, CS_AGNA2	;
715)   2112 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
716)   2115 22 0D FE    		 LD (CURSORX), HL	;
717)   2118 C9          		 RET	;
722)   2119 06 DF       		 LD B, LCD_HEIGHT.AND.0xFF      ;lsb	;lsb
723)   211B 0E 02       		 LD C, LCD_HEIGHT.SHR.8 + 1      ;MSB+1	;MSB+1
725)   211D C5          		 PUSH BC	;
727)   211E 06 1F       		 LD B, LCD_WIDTH.AND.0xFF      ;lsb	;lsb
728)   2120 0E 04       		 LD C, LCD_WIDTH.SHR.8 + 1      ;MSV+1	;MSV+1
730)   2122 CD BD 1E    		 CALL LCD_SETPIXEL       ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
731)   2125 10 FB       		 DJNZ CS_AGN1	;
732)   2127 0D          		 DEC C	;
733)   2128 20 F8       		 JR NZ, CS_AGN1	;
734)   212A C1          		 POP BC	;
735)   212B 10 F0       		 DJNZ CS_AGN2	;
736)   212D 0D          		 DEC C	;
737)   212E 20 ED       		 JR NZ, CS_AGN2	;
738)   2130 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
739)   2133 22 0D FE    		 LD (CURSORX), HL	;
740)   2136 C9          		 RET	;
745)   2137 7E          		@LCD_MSG: LD A, (HL)	;
746)   2138 FE 00       		 CP 0	;
747)   213A C8          		 RET Z	;
748)   213B E5          		 PUSH HL	;
749)   213C CD 4C 1F    		 CALL LCD_PRCH	;
750)   213F E1          		 POP HL	;
751)   2140 23          		 INC HL	;
752)   2141 18 F4       		 JR LCD_MSG	;
  3)   2143 AF          		NEGHL: xor a	;
  4)   2144 95          		 sub l	;
  5)   2145 6F          		 ld l, a	;
  6)   2146 9F          		 sbc a, a	;
  7)   2147 94          		 sub h	;
  8)   2148 67          		 ld h, a	;
  9)   2149 C9          		 RET	;
 13)   214A 2A 79 FE    		 LD HL, (FILL_IDX)	;
 14)   214D 01 58 02    		 LD BC, MAXQ	;
 15)   2150 A7          		 AND A	;
 16)   2151 ED 42       		 SBC HL, BC	;
 17)   2153 D0          		 RET NC     ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 18)   2154 2A 7B FE    		 LD HL, (FILL_PY)	;
 19)   2157 ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 20)   215B 19          		 ADD HL, DE	;
 21)   215C 7C          		 LD A, H	;
 22)   215D FE 80       		 CP 80H	;
 23)   215F D0          		 RET NC     ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 24)   2160 11 1F 03    		 LD DE, LCD_WIDTH	;
 25)   2163 ED 52       		 SBC HL, DE	;
 26)   2165 D0          		 RET NC      ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 28)   2166 2A 77 FE    		 LD HL, (FILL_Q)	;
 29)   2169 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 30)   216D 78          		 LD A, B	;
 31)   216E B1          		 OR C       ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 32)   216F 28 08       		 JR Z, QPS_NXT1	;
 33)   2171 EB          		 EX DE, HL	;
 34)   2172 C5          		 PUSH BC	;
 35)   2173 E1          		 POP HL	;
 36)   2174 29          		 ADD HL, HL	;
 37)   2175 29          		 ADD HL, HL	;
 38)   2176 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 39)   2177 EB          		 EX DE, HL	;
 40)   2178 19          		 ADD HL, DE	;
 42)   2179 11 7B FE    		 LD DE, FILL_PY	;
 43)   217C EB          		 EX DE, HL      ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 44)   217D 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 45)   2180 ED B0       		 LDIR       ;COPY	;COPY
 46)   2182 2A 79 FE    		 LD HL, (FILL_IDX)	;
 47)   2185 23          		 INC HL	;
 48)   2186 22 79 FE    		 LD (FILL_IDX), HL	;
 49)   2189 C9          		QPS_EXT: RET	;
 51)   218A 2A 77 FE    		QPOP: LD HL, (FILL_Q)	;
 52)   218D ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 53)   2191 0B          		 DEC BC	;
 54)   2192 C5          		 PUSH BC	;
 55)   2193 78          		 LD A, B	;
 56)   2194 B1          		 OR C       ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 57)   2195 28 08       		 JR Z, QPP_NXT1	;
 58)   2197 EB          		 EX DE, HL	;
 59)   2198 C5          		 PUSH BC	;
 60)   2199 E1          		 POP HL	;
 61)   219A 29          		 ADD HL, HL	;
 62)   219B 29          		 ADD HL, HL	;
 63)   219C 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 64)   219D EB          		 EX DE, HL	;
 65)   219E 19          		 ADD HL, DE	;
 66)   219F C1          		QPP_NXT1: POP BC	;
 67)   21A0 ED 43 79 FE 		 LD (FILL_IDX), BC	;
 69)   21A4 11 7B FE    		 LD DE, FILL_PY     ;ORIGIN=QUEUE DEST=FILL_PY	;ORIGIN=QUEUE DEST=FILL_PY
 70)   21A7 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 71)   21AA ED B0       		 LDIR       ;COPY	;COPY
 72)   21AC 2A 7D FE    		 LD HL, (FILL_PXL)	;
 73)   21AF 22 71 FE    		 LD (FILL_X1), HL	;
 74)   21B2 2A 7F FE    		 LD HL, (FILL_PXR)	;
 75)   21B5 22 73 FE    		 LD (FILL_X2), HL	;
 76)   21B8 ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 77)   21BC ED 53 75 FE 		 LD (FILL_DY), DE	;
 78)   21C0 2A 7B FE    		 LD HL, (FILL_PY)	;
 79)   21C3 A7          		 AND A	;
 80)   21C4 19          		 ADD HL, DE	;
 81)   21C5 22 6D FE    		 LD (FILL_Y), HL	;
 89)   21C8 C9          		 RET	;
 91)   21C9 E1          		@_FILL: POP HL     ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 92)   21CA D1          		 POP DE      ;Y	;Y
 93)   21CB C1          		 POP BC      ;X	;X
 94)   21CC E5          		 PUSH HL      ;RET ADDR TO SP	;RET ADDR TO SP
 95)   21CD ED 43 6B FE 		 LD (FILL_X), BC	;
 96)   21D1 ED 53 6D FE 		 LD (FILL_Y), DE	;
 97)   21D5 ED 73 85 FE 		 LD (FILL_OLDSP), SP	;
 98)   21D9 21 3E ED    		 LD HL, - ((MAXQ * 8) + 2)  ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
 99)   21DC 39          		 ADD HL, SP	;
100)   21DD F9          		 LD SP, HL      ;NEW SP	;NEW SP
103)   21DE 22 77 FE    		 LD (FILL_Q), HL     ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
104)   21E1 21 00 00    		 LD HL, 0	;
105)   21E4 22 79 FE    		 LD (FILL_IDX), HL    ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
109)   21E7 2A 6B FE    		 LD HL, (FILL_X)    ;	;
110)   21EA E5          		 PUSH HL	;
111)   21EB 2A 6D FE    		 LD HL, (FILL_y)    ;	;
112)   21EE E5          		 PUSH HL	;
113)   21EF CD D4 1E    		 CALL LCD_READPIXEL	;
114)   21F2 22 83 FE    		 LD (FILL_OV), HL	;
116)   21F5 ED 5B 01 FE 		 LD DE, (FCOLOR)	;
117)   21F9 A7          		 AND A	;
118)   21FA ED 52       		 SBC HL, DE      ;CHK OV=NV	;CHK OV=NV
119)   21FC CA 83 23    		 JP Z, FL_EXIT	;
120)   21FF 2A 6B FE    		 LD HL, (FILL_X)	;
121)   2202 7C          		 LD A, H	;
122)   2203 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
123)   2205 D2 83 23    		 JP NC, FL_EXIT	;
124)   2208 11 1F 03    		 LD DE, LCD_WIDTH	;
125)   220B A7          		 AND A	;
126)   220C ED 52       		 SBC HL, DE      ;CHK>799	;CHK>799
127)   220E D2 83 23    		 JP NC, FL_EXIT	;
128)   2211 2A 6D FE    		 LD HL, (FILL_Y)	;
129)   2214 7C          		 LD A, H	;
130)   2215 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
131)   2217 D2 83 23    		 JP NC, FL_EXIT	;
132)   221A 11 DF 01    		 LD DE, LCD_HEIGHT	;
133)   221D A7          		 AND A	;
134)   221E ED 52       		 SBC HL, DE      ;CHK>480	;CHK>480
135)   2220 D2 83 23    		 JP NC, FL_EXIT	;
137)   2223 2A 6D FE    		 LD HL, (FILL_Y)	;
138)   2226 22 7B FE    		 LD (FILL_PY), HL	;
139)   2229 2A 6B FE    		 LD HL, (FILL_X)	;
140)   222C 22 7D FE    		 LD (FILL_PXL), HL	;
141)   222F 22 7F FE    		 LD (FILL_PXR), HL	;
142)   2232 21 01 00    		 LD HL, 1	;
143)   2235 22 81 FE    		 LD (FILL_PDY), HL	;
144)   2238 CD 4A 21    		 CALL QPUSH      ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
146)   223B 2A 6D FE    		 LD HL, (FILL_Y)	;
147)   223E 23          		 INC HL	;
148)   223F 22 7B FE    		 LD (FILL_PY), HL	;
149)   2242 21 FF FF    		 LD HL, - 1	;
150)   2245 22 81 FE    		 LD (FILL_PDY), HL	;
151)   2248 CD 4A 21    		 CALL QPUSH	;
153)   224B ED 5B 79 FE 		 LD DE, (FILL_IDX)	;
154)   224F 7A          		 LD A, D	;
155)   2250 B3          		 OR E	;
156)   2251 CA 83 23    		 JP Z, FL_EXIT     ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
160)   2254 CD 8A 21    		 CALL QPOP      ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
163)   2257 2A 71 FE    		 LD HL, (FILL_X1)	;
164)   225A 22 6B FE    		 LD (FILL_X), HL	;
165)   225D 7C          		FL_LP1: LD A, H	;
166)   225E FE 80       		 CP 0x80      ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
167)   2260 D2 89 22    		 JP NC, FL_NXT1	;
168)   2263 ED 5B 6D FE 		 LD DE, (FILL_Y)	;
169)   2267 E5          		 PUSH HL	;
170)   2268 D5          		 PUSH DE	;
171)   2269 CD D4 1E    		 CALL LCD_READPIXEL	;
172)   226C ED 5B 83 FE 		 LD DE, (FILL_OV)	;
173)   2270 A7          		 AND A	;
174)   2271 ED 52       		 SBC HL, DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
175)   2273 C2 89 22    		 JP NZ, FL_NXT1	;
176)   2276 ED 5B 6B FE 		 LD DE, (FILL_X)	;
177)   227A 2A 6D FE    		 LD HL, (FILL_Y)	;
178)   227D D5          		 PUSH DE	;
179)   227E EB          		 EX DE,HL	;
180)   227F CD 89 23    		 CALL PLOTP	;
181)   2282 E1          		 POP HL	;
182)   2283 2B          		 DEC HL	;
183)   2284 22 6B FE    		 LD (FILL_X), HL	;
184)   2287 18 D4       		 JR FL_LP1	;
188)   2289 2A 6B FE    		 LD HL, (FILL_X)	;
189)   228C ED 5B 71 FE 		 LD DE, (FILL_X1)	;
190)   2290 7C          		 LD A, H	;
191)   2291 FE 80       		 CP 80H	;
192)   2293 30 08       		 JR NC, FL_NXT1A     ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
193)   2295 A7          		 AND A	;
194)   2296 ED 52       		 SBC HL, DE      ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
195)   2298 D2 41 23    		 JP NC, FL_SKIP     ;C IF DE>HL X1>X, NC IF X>=X1	;C IF DE>HL X1>X, NC IF X>=X1
196)   229B ED 5A       		 ADC HL, DE	;
199)   229D 23          		 INC HL	;
200)   229E 22 6F FE    		 LD (FILL_L), HL	;
203)   22A1 A7          		 AND A	;
204)   22A2 ED 52       		 SBC HL, DE      ;CHK L-X1	;CHK L-X1
205)   22A4 30 1E       		 JR NC, FL_NXT2     ;C IF DE>HL X1>L	;C IF DE>HL X1>L
206)   22A6 28 1C       		 JR Z, FL_NXT2	;
207)   22A8 ED 5A       		 ADC HL, DE	;
208)   22AA 22 7D FE    		 LD (FILL_PXL), HL    ;L	;L
209)   22AD 2A 6D FE    		 LD HL, (FILL_Y)	;
210)   22B0 22 7B FE    		 LD (FILL_PY), HL	;
211)   22B3 1B          		 DEC DE	;
212)   22B4 ED 53 7F FE 		 LD (FILL_PXR), DE	;
213)   22B8 2A 75 FE    		 LD HL, (FILL_DY)	;
214)   22BB CD 43 21    		 CALL NEGHL	;
215)   22BE 22 81 FE    		 LD (FILL_PDY), HL	;
216)   22C1 CD 4A 21    		 CALL QPUSH	;
220)   22C4 2A 71 FE    		 LD HL, (FILL_X1)     ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
221)   22C7 23          		 INC HL	;
222)   22C8 22 6B FE    		 LD (FILL_X), HL	;
226)   22CB 11 1F 03    		 LD DE, LCD_WIDTH	;
227)   22CE A7          		 AND A	;
228)   22CF EB          		 EX DE, HL	;
229)   22D0 ED 52       		 SBC HL, DE      ;800-(X=DE)	;800-(X=DE)
230)   22D2 38 25       		 JR C, FL_NXT3     ;C IF X>800	;C IF X>800
231)   22D4 EB          		 EX DE, HL      ;HL=X	;HL=X
232)   22D5 E5          		 PUSH HL	;
233)   22D6 2A 6D FE    		 LD HL, (FILL_Y)	;
234)   22D9 E5          		 PUSH HL	;
235)   22DA CD D4 1E    		 CALL LCD_READPIXEL	;
236)   22DD ED 5B 83 FE 		 LD DE, (FILL_OV)	;
237)   22E1 A7          		 AND A	;
238)   22E2 ED 52       		 SBC HL, DE      ;PIXELREAD=OV	;PIXELREAD=OV
239)   22E4 20 13       		 JR NZ, FL_NXT3	;
240)   22E6 ED 5B 6B FE 		 LD DE, (FILL_X)	;
241)   22EA 2A 6D FE    		 LD HL, (FILL_Y)	;
242)   22ED D5          		 PUSH DE	;
243)   22EE EB          		 EX DE,HL	;
244)   22EF CD 89 23    		 CALL PLOTP	;
245)   22F2 E1          		 POP HL	;
246)   22F3 23          		 INC HL	;
247)   22F4 22 6B FE    		 LD (FILL_X), HL	;
248)   22F7 18 D2       		 JR FL_LP2	;
251)   22F9 2A 6D FE    		 LD HL, (FILL_Y)	;
252)   22FC 22 7B FE    		 LD (FILL_PY), HL	;
253)   22FF 2A 6F FE    		 LD HL, (FILL_L)	;
254)   2302 22 7D FE    		 LD (FILL_PXL), HL	;
255)   2305 2A 6B FE    		 LD HL, (FILL_X)	;
256)   2308 2B          		 DEC HL	;
257)   2309 22 7F FE    		 LD (FILL_PXR), HL	;
258)   230C 2A 75 FE    		 LD HL, (FILL_DY)	;
259)   230F 22 81 FE    		 LD (FILL_PDY), HL	;
260)   2312 CD 4A 21    		 CALL QPUSH	;
262)   2315 2A 6B FE    		 LD HL, (FILL_X)	;
263)   2318 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
264)   231C 13          		 INC DE	;
265)   231D A7          		 AND A	;
266)   231E ED 52       		 SBC HL, DE      ;X-(X2+1) C IF X2+1>X	;X-(X2+1) C IF X2+1>X
267)   2320 38 1F       		 JR C, FL_NXT4	;
268)   2322 28 1D       		 JR Z, FL_NXT4	;
269)   2324 2A 6D FE    		 LD HL, (FILL_Y)	;
270)   2327 22 7B FE    		 LD (FILL_PY), HL	;
271)   232A ED 53 7D FE 		 LD (FILL_PXL), DE	;
272)   232E 2A 6B FE    		 LD HL, (FILL_X)    ;	;
273)   2331 2B          		 DEC HL	;
274)   2332 22 7F FE    		 LD (FILL_PXR), HL	;
275)   2335 2A 75 FE    		 LD HL, (FILL_DY)	;
276)   2338 CD 43 21    		 CALL NEGHL	;
277)   233B 22 81 FE    		 LD (FILL_PDY), HL	;
278)   233E CD 4A 21    		 CALL QPUSH	;
281)   2341 2A 6B FE    		 LD HL, (FILL_X)	;
282)   2344 23          		 INC HL	;
283)   2345 22 6B FE    		 LD (FILL_X), HL	;
284)   2348 ED 5B 73 FE 		FL_LP3: LD DE, (FILL_X2)	;
285)   234C A7          		 AND A	;
286)   234D EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
287)   234E ED 52       		 SBC HL, DE      ;C IF DE>HL X>X2	;C IF DE>HL X>X2
288)   2350 38 1C       		 JR C, FL_NXT5	;
289)   2352 19          		 ADD HL, DE      ;	;
290)   2353 EB          		 EX DE, HL      ;X=HL X2=DE	;X=HL X2=DE
291)   2354 E5          		 PUSH HL	;
292)   2355 2A 6D FE    		 LD HL, (FILL_Y)	;
293)   2358 E5          		 PUSH HL	;
294)   2359 CD D4 1E    		 CALL LCD_READPIXEL	;
295)   235C ED 5B 83 FE 		 LD DE, (FILL_OV)	;
296)   2360 A7          		 AND A	;
297)   2361 ED 52       		 SBC HL, DE      ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
298)   2363 28 09       		 JR Z, FL_NXT5	;
299)   2365 2A 6B FE    		 LD HL, (FILL_X)	;
300)   2368 23          		 INC HL	;
301)   2369 22 6B FE    		 LD (FILL_X), HL	;
302)   236C 18 DA       		 JR FL_LP3	;
305)   236E 2A 6B FE    		 LD HL, (FILL_X)	;
306)   2371 22 6F FE    		 LD (FILL_L), HL	;
308)   2374 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
309)   2378 A7          		 AND A	;
310)   2379 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
311)   237A ED 52       		 SBC HL, DE      ;X2-X C IF X>X2	;X2-X C IF X>X2
312)   237C EB          		 EX DE, HL      ;X=HL X2-X=DE	;X=HL X2-X=DE
313)   237D DA 4B 22    		 JP C, FL_LP0    ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
314)   2380 C3 CB 22    		 JP FL_LP2      ;GOTO DO WHILE	;GOTO DO WHILE
317)   2383 21 C2 12    		FL_EXIT: LD HL, (MAXQ * 8) + 2  ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
318)   2386 39          		 ADD HL, SP	;
319)   2387 F9          		 LD SP, HL      ;NEW SP	;NEW SP
320)   2388 C9          		 RET	;
  7)   2389 C5          		@PLOTP:        PUSH BC        ;SAVE BC	;SAVE BC
  8)   238A DD E5       		 PUSH IX	;
 10)   238C D5          		               PUSH DE	;
 11)   238D E5          		               PUSH HL	;
 14)   238E E5          		 PUSH HL	;
 15)   238F D5          		 PUSH DE	;
 16)   2390 E5          		 PUSH HL	;
 17)   2391 D5          		 PUSH DE	;
 18)   2392 CD 70 1E    		 CALL LCD_SETXY	;
 20)   2395 2A 01 FE    		 LD HL, (FCOLOR)	;
 21)   2398 CD BD 1E    		 CALL LCD_SETPIXEL	;
 24)   239B E1          		               POP HL	;
 25)   239C D1          		               POP DE                 	;
 26)   239D 3A 0D FF    		               LD A,(VGAFCOL)	;
 27)   23A0 CD 6D 1C    		               CALL VGA_PLTPXL	;
 29)   23A3 DD E1       		 POP IX	;
 30)   23A5 C1          		 POP BC         ;RESTORE BC	;RESTORE BC
 31)   23A6 C9          		 RET	;
 34)   23A7 CD F7 20    		@CLEARGRAPH:   CALL LCD_CLRSCR	;
 35)   23AA CD F3 1A    		 CALL VGA_GRCLS	;
 36)   23AD C9          		               RET	;
 40)   23AE DD 21 02 00 		@GR_DRAWHLINE: LD IX, 2      ;3 PARAMS 2-BYTES EACH TOTAL 6 BYTES  	;3 PARAMS 2-BYTES EACH TOTAL 6 BYTES
 41)   23B2 DD 39       		 ADD IX, SP	;
 42)   23B4 DD 66 05    		 LD H, (IX + 5)        ;X	;X
 43)   23B7 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
 44)   23BA DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
 45)   23BD DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
 46)   23C0 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
 47)   23C3 DD 4E 00    		 LD C, (IX)        ;LENGTH   	;LENGTH
 48)   23C6 E5          		 PUSH HL	;
 49)   23C7 21 00 80    		 LD HL, $8000	;
 50)   23CA B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 51)   23CB ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
 52)   23CD 30 0A       		 JR NC, POSH1	;
 53)   23CF AF          		 XOR A         ;l=-l	;l=-l
 54)   23D0 91          		 SUB C	;
 55)   23D1 4F          		 LD C, A	;
 56)   23D2 9F          		 SBC A, A	;
 57)   23D3 90          		 SUB B	;
 58)   23D4 47          		 LD B, A	;
 59)   23D5 E1          		 POP HL	;
 60)   23D6 ED 42       		 SBC HL, BC        ;x -= l;	;x -= l;
 61)   23D8 E5          		 PUSH HL	;
 62)   23D9 E1          		POSH1: POP HL 	;
 63)   23DA E5          		NXTH1: PUSH HL	;
 64)   23DB D5          		               PUSH DE                	;
 65)   23DC CD 89 23    		               CALL PLOTP                     ;HL X,DE Y                	;HL X,DE Y
 66)   23DF D1          		               POP DE	;
 67)   23E0 E1          		               POP HL                	;
 68)   23E1 23          		               INC HL	;
 69)   23E2 0B          		 DEC BC	;
 70)   23E3 79          		 LD A, C	;
 71)   23E4 B0          		 OR B	;
 72)   23E5 20 F3       		 JR NZ, NXTH1	;
 73)   23E7 CD 25 1F    		 CALL LCD_CLRXY	;
 74)   23EA D1          		 POP DE	;
 75)   23EB 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
 76)   23EE 39          		 ADD HL, SP	;
 77)   23EF F9          		 LD SP, HL	;
 78)   23F0 EB          		 EX DE, HL	;
 79)   23F1 E9          		 JP (HL)	;
 85)   23F2 DD 21 02 00 		 LD IX, 2	;
 86)   23F6 DD 39       		 ADD IX, SP	;
 87)   23F8 DD 66 05    		 LD H, (IX + 5)        ;X	;X
 88)   23FB DD 6E 04    		 LD L, (IX + 4)        ;X	;X
 89)   23FE DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
 90)   2401 DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
 91)   2404 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
 92)   2407 DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
 93)   240A E5          		 PUSH HL	;
 94)   240B 21 00 80    		 LD HL, $8000	;
 95)   240E B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 96)   240F ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
 97)   2411 30 0A       		 JR NC, POSV1	;
 98)   2413 AF          		 XOR A         ;l=-l	;l=-l
 99)   2414 91          		 SUB C	;
100)   2415 4F          		 LD C, A	;
101)   2416 9F          		 SBC A, A	;
102)   2417 90          		 SUB B	;
103)   2418 47          		 LD B, A	;
104)   2419 EB          		 EX DE,HL	;
105)   241A ED 42       		 SBC HL, BC        ;Y -= l;	;Y -= l;
106)   241C EB          		 EX DE,HL	;
107)   241D E1          		POSV1: POP HL	;
108)   241E E5          		NXTV1: PUSH HL	;
109)   241F D5          		               PUSH DE	;
110)   2420 CD 89 23    		               CALL PLOTP	;
111)   2423 D1          		               POP DE	;
112)   2424 E1          		               POP HL	;
113)   2425 13          		               INC DE	;
114)   2426 0B          		 DEC BC	;
115)   2427 79          		 LD A, C	;
116)   2428 B0          		 OR B	;
117)   2429 20 F3       		 JR NZ, NXTV1	;
118)   242B CD 25 1F    		 CALL LCD_CLRXY	;
119)   242E D1          		 POP DE	;
120)   242F 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
121)   2432 39          		 ADD HL, SP	;
122)   2433 F9          		 LD SP, HL	;
123)   2434 EB          		 EX DE, HL	;
124)   2435 E9          		 JP (HL)	;
128)   2436 DD 21 02 00 		 LD IX, 2	;
129)   243A DD 39       		 ADD IX, SP	;
139)   243C DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
140)   243F DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
141)   2442 DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
142)   2445 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
143)   2448 B7          		 OR A	;
144)   2449 ED 52       		 SBC HL, DE	;
145)   244B 20 17       		 JR NZ, YNOTEQ	;
147)   244D DD 46 07    		 LD B, (IX + 7)        ;X1	;X1
148)   2450 DD 4E 06    		 LD C, (IX + 6)        ;X1	;X1
149)   2453 C5          		 PUSH BC        ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
150)   2454 D5          		 PUSH DE        ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
151)   2455 DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
152)   2458 DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
153)   245B ED 42       		 SBC HL, BC        ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
154)   245D E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
155)   245E CD AE 23    		 CALL GR_DRAWHLINE	;
156)   2461 C3 05 26    		 JP DLNEX	;
158)   2464 DD 66 07    		 LD H, (IX + 7)        ;X1	;X1
159)   2467 DD 6E 06    		 LD L, (IX + 6)        ;X1	;X1
160)   246A DD 56 03    		 LD D, (IX + 3)        ;X2	;X2
161)   246D DD 5E 02    		 LD E, (IX + 2)        ;X2	;X2
162)   2470 B7          		 OR A	;
163)   2471 ED 52       		 SBC HL, DE	;
164)   2473 20 17       		 JR NZ, XNOTEQ	;
166)   2475 D5          		 PUSH DE        ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
167)   2476 DD 46 05    		 LD B, (IX + 5)        ;Y1	;Y1
168)   2479 DD 4E 04    		 LD C, (IX + 4)        ;Y1	;Y1
169)   247C C5          		 PUSH BC        ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
170)   247D DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
171)   2480 DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
172)   2483 ED 42       		 SBC HL, BC        ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
173)   2485 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
174)   2486 CD F2 23    		 CALL GR_DRAWVLINE	;
175)   2489 C3 05 26    		 JP DLNEX	;
178)   248C 38 04       		 JR C, X2GTX1	;
180)   248E AF          		 XOR A	;
181)   248F 3D          		 DEC A         ;XSTEP=-1	;XSTEP=-1
182)   2490 18 0D       		 JR DLNXT1	;
185)   2492 D5          		 PUSH DE	;
186)   2493 E1          		 POP HL	;
187)   2494 DD 56 07    		 LD D, (IX + 7)        ;X1	;X1
188)   2497 DD 5E 06    		 LD E, (IX + 6)        ;X1	;X1
189)   249A B7          		 OR A	;
190)   249B ED 52       		 SBC HL, DE        ;X2-X1 ON HL	;X2-X1 ON HL
192)   249D 3E 01       		 LD A, 1        ;XSTEP=1	;XSTEP=1
194)   249F 06 00       		 LD B, 0	;
195)   24A1 0E 00       		 LD C, 0	;
196)   24A3 C5          		 PUSH BC        ;T	;T
197)   24A4 E5          		 PUSH HL        ;DX	;DX
198)   24A5 FE 01       		 CP 1	;
199)   24A7 28 02       		 JR Z, DLXMINUS1	;
200)   24A9 06 FF       		 LD B, 0XFF	;
201)   24AB 4F          		DLXMINUS1: LD C, A	;
202)   24AC C5          		 PUSH BC        ;XSTEP	;XSTEP
203)   24AD DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
204)   24B0 DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
205)   24B3 DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
206)   24B6 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
207)   24B9 B7          		 OR A	;
208)   24BA ED 52       		 SBC HL, DE	;
209)   24BC 38 04       		 JR C, Y2GTY1        ;HL=Y1-Y2	;HL=Y1-Y2
210)   24BE AF          		 XOR A	;
211)   24BF 3D          		 DEC A         ;YSTEP=-1	;YSTEP=-1
212)   24C0 18 0F       		 JR DLNXT2	;
215)   24C2 D5          		 PUSH DE	;
216)   24C3 E1          		 POP HL	;
217)   24C4 DD 56 05    		 LD D, (IX + 5)        ;Y1	;Y1
218)   24C7 DD 5E 04    		 LD E, (IX + 4)        ;Y1	;Y1
219)   24CA B7          		 OR A	;
220)   24CB ED 52       		 SBC HL, DE        ;HL=Y2-Y1    HL=DY	;HL=Y2-Y1    HL=DY
221)   24CD 06 00       		 LD B, 0	;
222)   24CF 3E 01       		 LD A, 1        ;YSTEP=1	;YSTEP=1
224)   24D1 FE 01       		 CP 1	;
225)   24D3 28 02       		 JR Z, DLYMINUS1	;
226)   24D5 06 FF       		 LD B, 0XFF	;
228)   24D7 4F          		 LD C, A	;
229)   24D8 E5          		 PUSH HL        ;DY	;DY
230)   24D9 C5          		 PUSH BC        ;YSTEP	;YSTEP
231)   24DA FD 21 00 00 		 LD IY, 0	;
232)   24DE FD 39       		 ADD IY, SP	;
247)   24E0 FD 56 07    		 LD D, (IY + 7)        ;DX	;DX
248)   24E3 FD 5E 06    		 LD E, (IY + 6)        ;DX	;DX
249)   24E6 B7          		 OR A	;
250)   24E7 ED 52       		 SBC HL, DE        ;DY-DX	;DY-DX
251)   24E9 DA 78 25    		 JP C, DXGTDY	;
252)   24EC CA 78 25    		 JP Z, DXGTDY	;
254)   24EF 19          		 ADD HL, DE        ;HL=DY	;HL=DY
255)   24F0 44          		 LD B, H	;
256)   24F1 4D          		 LD C, L	;
257)   24F2 CB 38       		 SRL B	;
258)   24F4 CB 19       		 RR C         ;(dy >> 1)	;(dy >> 1)
259)   24F6 21 00 00    		 LD HL, 0	;
260)   24F9 ED 42       		 SBC HL, BC        ;t = - (dy >> 1);	;t = - (dy >> 1);
261)   24FB FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
262)   24FE FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
264)   2501 DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
265)   2504 DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
266)   2507 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
267)   250A DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
268)   250D D5          		 PUSH DE	;
269)   250E DD E5       		 PUSH IX	;
272)   2510 E5          		               PUSH HL	;
273)   2511 D5          		               PUSH DE	;
274)   2512 CD 89 23    		               CALL PLOTP	;
275)   2515 D1          		               POP DE	;
276)   2516 E1          		               POP HL	;
278)   2517 DD E1       		 POP IX	;
279)   2519 D1          		 POP DE	;
280)   251A DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
281)   251D DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
282)   2520 ED 52       		 SBC HL, DE        ; ROW=Y2	; ROW=Y2
283)   2522 CA 00 26    		 JP Z, DLEXIT	;
284)   2525 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
285)   2528 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
286)   252B EB          		 EX DE, HL	;
287)   252C 09          		 ADD HL, BC        ;row += ystep;	;row += ystep;
288)   252D DD 74 05    		 LD (IX + 5), H        ;SAVE ROW	;SAVE ROW
289)   2530 DD 75 04    		 LD (IX + 4), L        ;	;
291)   2533 FD 56 09    		 LD D, (IY + 9)        ; T	; T
292)   2536 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
293)   2539 FD 66 07    		 LD H, (IY + 7)        ;DX	;DX
294)   253C FD 6E 06    		 LD L, (IY + 6)        ;DX	;DX
295)   253F 19          		 ADD HL, DE	;
296)   2540 FD 74 09    		 LD (IY + 9), H        ;t += dx;	;t += dx;
297)   2543 FD 75 08    		 LD (IY + 8), L	;
298)   2546 EB          		 EX DE, HL	;
299)   2547 21 00 80    		 LD HL, $8000	;
300)   254A ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
301)   254C 38 B3       		 JR C, DLAGN1        ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
302)   254E FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
303)   2551 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
304)   2554 DD 66 07    		 LD H, (IX + 7)        ;COL HI	;COL HI
305)   2557 DD 6E 06    		 LD L, (IX + 6)        ;COL LO	;COL LO
306)   255A 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
307)   255B DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
308)   255E DD 75 06    		 LD (IX + 6), L        ;	;
310)   2561 FD 66 09    		 LD H, (IY + 9)        ; T	; T
311)   2564 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
312)   2567 FD 46 03    		 LD B, (IY + 3)        ;DY	;DY
313)   256A FD 4E 02    		 LD C, (IY + 2)        ;DY	;DY
314)   256D ED 42       		 SBC HL, BC	;
315)   256F FD 74 09    		 LD (IY + 9), H        ;t -= dY;	;t -= dY;
316)   2572 FD 75 08    		 LD (IY + 8), L	;
317)   2575 C3 01 25    		 JP DLAGN1	;
319)   2578 19          		 ADD HL, DE        ;HL=DY DE=DX	;HL=DY DE=DX
320)   2579 42          		 LD B, D	;
321)   257A 4B          		 LD C, E	;
322)   257B CB 38       		 SRL B	;
323)   257D CB 19       		 RR C         ;(dX >> 1)	;(dX >> 1)
324)   257F 21 00 00    		 LD HL, 0	;
325)   2582 ED 42       		 SBC HL, BC        ;t = - (dX >> 1);	;t = - (dX >> 1);
326)   2584 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
327)   2587 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
329)   258A DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
330)   258D DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
331)   2590 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
332)   2593 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
333)   2596 E5          		 PUSH HL        ;SAVE COL	;SAVE COL
334)   2597 DD E5       		 PUSH IX	;
336)   2599 E5          		 PUSH HL	;
337)   259A D5          		 PUSH DE	;
338)   259B CD 89 23    		               CALL PLOTP	;
339)   259E D1          		               POP DE	;
340)   259F E1          		               POP HL	;
342)   25A0 DD E1       		 POP IX	;
343)   25A2 D1          		 POP DE         ;RETRIEVE COL	;RETRIEVE COL
344)   25A3 DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
345)   25A6 DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
346)   25A9 ED 52       		 SBC HL, DE        ; COL=X2?	; COL=X2?
347)   25AB 28 53       		 JR Z, DLEXIT	;
348)   25AD EB          		 EX DE, HL        ;HL=COL	;HL=COL
349)   25AE FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
350)   25B1 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
351)   25B4 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
352)   25B5 DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
353)   25B8 DD 75 06    		 LD (IX + 6), L        ;	;
354)   25BB FD 56 09    		 LD D, (IY + 9)        ; T	; T
355)   25BE FD 5E 08    		 LD E, (IY + 8)        ; T	; T
356)   25C1 FD 66 03    		 LD H, (IY + 3)        ;DY	;DY
357)   25C4 FD 6E 02    		 LD L, (IY + 2)        ;DY	;DY
358)   25C7 19          		 ADD HL, DE	;
359)   25C8 FD 74 09    		 LD (IY + 9), H        ;t += dY;	;t += dY;
360)   25CB FD 75 08    		 LD (IY + 8), L	;
361)   25CE EB          		 EX DE, HL        ;T=DE	;T=DE
362)   25CF 21 00 80    		 LD HL, $8000	;
363)   25D2 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
364)   25D4 38 B4       		 JR C, DLAGN2        ;CARRY SET IF NEGATIVE	;CARRY SET IF NEGATIVE
365)   25D6 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
366)   25D9 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
367)   25DC DD 66 05    		 LD H, (IX + 5)        ;ROW HI	;ROW HI
368)   25DF DD 6E 04    		 LD L, (IX + 4)        ;ROW LO	;ROW LO
369)   25E2 09          		 ADD HL, BC        ;ROW += Ystep;	;ROW += Ystep;
370)   25E3 DD 74 05    		 LD (IX + 5), H        ;SAVE COL	;SAVE COL
371)   25E6 DD 75 04    		 LD (IX + 4), L        ;	;
373)   25E9 FD 66 09    		 LD H, (IY + 9)        ; T	; T
374)   25EC FD 6E 08    		 LD L, (IY + 8)        ; T	; T
375)   25EF FD 46 07    		 LD B, (IY + 7)        ;DX	;DX
376)   25F2 FD 4E 06    		 LD C, (IY + 6)        ;DX	;DX
377)   25F5 ED 42       		 SBC HL, BC	;
378)   25F7 FD 74 09    		 LD (IY + 9), H        ;t -= dX;	;t -= dX;
379)   25FA FD 75 08    		 LD (IY + 8), L	;
380)   25FD C3 8A 25    		 JP DLAGN2	;
383)   2600 21 0A 00    		 LD HL, 5 * 2        ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
384)   2603 39          		 ADD HL, SP        ;	;
385)   2604 F9          		 LD SP, HL	;
386)   2605 D1          		DLNEX: POP DE         ;RET ADDR	;RET ADDR
387)   2606 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
388)   2609 39          		 ADD HL, SP	;
389)   260A F9          		 LD SP, HL	;
390)   260B EB          		 EX DE, HL	;
391)   260C E9          		 JP (HL)	;
397)   260D E1          		 POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
398)   260E D5          		 PUSH DE        ;F VAR	;F VAR
399)   260F D5          		 PUSH DE        ;DDF_X	;DDF_X
400)   2610 D5          		 PUSH DE        ;DDF_Y	;DDF_Y
401)   2611 D5          		 PUSH DE        ;X1	;X1
402)   2612 D5          		 PUSH DE        ;Y1	;Y1
403)   2613 E5          		 PUSH HL        ;RET ADDR	;RET ADDR
404)   2614 DD 21 02 00 		 LD IX, 2	;
405)   2618 DD 39       		 ADD IX, SP	;
423)   261A AF          		 XOR A	;
424)   261B DD 56 0B    		 LD D, (IX + 11)       ;R	;R
425)   261E DD 5E 0A    		 LD E, (IX + 10)       ;R	;R
426)   2621 DD 72 01    		 LD (IX + 1), D        ;Y1=R	;Y1=R
427)   2624 DD 73 00    		 LD (IX + 0), E	;
428)   2627 21 01 00    		 LD HL, 1	;
429)   262A DD 74 07    		 LD (IX + 7), H        ;DDF_X=1	;DDF_X=1
430)   262D DD 75 06    		 LD (IX + 6), L	;
431)   2630 DD 74 03    		 LD (IX + 3), H        ;X1=0	;X1=0
432)   2633 DD 74 02    		 LD (IX + 2), H	;
433)   2636 ED 52       		 SBC HL, DE	;
434)   2638 DD 74 09    		 LD (IX + 9), H        ;F	;F
435)   263B DD 75 08    		 LD (IX + 8), L        ;F	;F
437)   263E EB          		 EX DE, HL        ;HL=RADIUS	;HL=RADIUS
438)   263F 29          		 ADD HL, HL        ;2*R	;2*R
439)   2640 EB          		 EX DE, HL	;
440)   2641 21 00 00    		 LD HL, 0	;
441)   2644 ED 52       		 SBC HL, DE        ;-2*R	;-2*R
442)   2646 DD 74 05    		 LD (IX + 5), H	;
443)   2649 DD 75 04    		 LD (IX + 4), L        ;DDF_Y	;DDF_Y
445)   264C DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
446)   264F DD 6E 0C    		 LD L, (IX + 12)	;
447)   2652 E5          		 PUSH HL        ;SAVE Y	;SAVE Y
448)   2653 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
449)   2656 DD 5E 0A    		 LD E, (IX + 10)	;
450)   2659 D5          		 PUSH DE        ;SAVE R	;SAVE R
451)   265A 19          		 ADD HL, DE        ;Y+R	;Y+R
452)   265B DD 56 0F    		 LD D, (IX + 15)       ;X	;X
453)   265E DD 5E 0E    		 LD E, (IX + 14)	;
454)   2661 D5          		 PUSH DE        ;SAVE X	;SAVE X
455)   2662 EB          		 EX DE,HL	;
457)   2663 CD 89 23    		 CALL PLOTP	;
459)   2666 D1          		 POP DE         ;GET X	;GET X
460)   2667 C1          		 POP BC         ;GET R	;GET R
461)   2668 E1          		 POP HL         ;GET Y	;GET Y
462)   2669 E5          		 PUSH HL        ;SAVE VARS	;SAVE VARS
463)   266A C5          		 PUSH BC	;
464)   266B D5          		 PUSH DE	;
465)   266C AF          		 XOR A	;
466)   266D ED 42       		 SBC HL, BC        ;	;
468)   266F EB          		 EX DE,HL	;
469)   2670 CD 89 23    		 CALL PLOTP	;
471)   2673 E1          		 POP HL         ;GET X	;GET X
472)   2674 C1          		 POP BC         ;GET R	;GET R
473)   2675 D1          		 POP DE         ;GET Y	;GET Y
474)   2676 D5          		 PUSH DE        ;SAVE VARS	;SAVE VARS
475)   2677 C5          		 PUSH BC	;
476)   2678 E5          		 PUSH HL	;
477)   2679 AF          		 XOR A	;
478)   267A ED 4A       		 ADC HL, BC	;
481)   267C CD 89 23    		 CALL PLOTP	;
483)   267F E1          		 POP HL         ;GET X	;GET X
484)   2680 C1          		 POP BC         ;GET R	;GET R
485)   2681 D1          		 POP DE         ;GET Y	;GET Y
486)   2682 AF          		 XOR A	;
487)   2683 ED 42       		 SBC HL, BC	;
490)   2685 CD 89 23    		 CALL PLOTP	;
493)   2688 DD 66 03    		CIRC_AGN: LD H, (IX + 3)       ;X1	;X1
494)   268B DD 6E 02    		 LD L, (IX + 2)        ;X1	;X1
495)   268E DD 56 01    		 LD D, (IX + 1)        ;Y1	;Y1
496)   2691 DD 5E 00    		 LD E, (IX + 0)        ;Y1	;Y1
497)   2694 AF          		 XOR A	;
498)   2695 ED 52       		 SBC HL, DE	;
499)   2697 D2 8E 27    		 JP NC, CIRC_EXIT	;
501)   269A 19          		 ADD HL, DE	;
502)   269B E5          		 PUSH HL        ;SAVE X1	;SAVE X1
503)   269C D5          		 PUSH DE        ;SAVE Y1	;SAVE Y1
504)   269D 21 00 00    		 LD HL, 0	;
505)   26A0 AF          		 XOR A	;
508)   26A1 DD 7E 09    		 LD A, (IX + 9)        ;F HI BYTE	;F HI BYTE
509)   26A4 FE 50       		 CP 80	;
510)   26A6 30 26       		 JR NC, CIRC_SKIP	;
511)   26A8 28 24       		 JR Z, CIRC_SKIP	;
515)   26AA D1          		 POP DE         ;Y1	;Y1
516)   26AB 1B          		 DEC DE	;
517)   26AC DD 72 01    		 LD (IX + 1), D        ;SAVE Y1	;SAVE Y1
518)   26AF DD 73 00    		 LD (IX + 0), E	;
519)   26B2 D5          		 PUSH DE        ;Y1	;Y1
520)   26B3 DD 66 05    		 LD H, (IX + 5)        ;DDF_Y	;DDF_Y
521)   26B6 DD 6E 04    		 LD L, (IX + 4)	;
522)   26B9 23          		 INC HL	;
523)   26BA 23          		 INC HL	;
524)   26BB DD 74 05    		 LD (IX + 5), H        ;SAVE DDF_Y	;SAVE DDF_Y
525)   26BE DD 75 04    		 LD (IX + 4), L	;
526)   26C1 DD 56 09    		 LD D, (IX + 9)        ;F	;F
527)   26C4 DD 5E 08    		 LD E, (IX + 8)	;
528)   26C7 19          		 ADD HL, DE	;
529)   26C8 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
530)   26CB DD 75 08    		 LD (IX + 8), L	;
534)   26CE C1          		 POP BC         ;Y1	;Y1
535)   26CF E1          		 POP HL         ;X1	;X1
536)   26D0 23          		 INC HL	;
537)   26D1 DD 74 03    		 LD (IX + 3), H        ;SAVE X1	;SAVE X1
538)   26D4 DD 75 02    		 LD (IX + 2), L	;
539)   26D7 E5          		 PUSH HL        ;X1	;X1
540)   26D8 DD 66 07    		 LD H, (IX + 7)        ;DDF_X	;DDF_X
541)   26DB DD 6E 06    		 LD L, (IX + 6)	;
542)   26DE 23          		 INC HL	;
543)   26DF 23          		 INC HL	;
544)   26E0 DD 74 07    		 LD (IX + 7), H        ;SAVE DDF_X	;SAVE DDF_X
545)   26E3 DD 75 06    		 LD (IX + 6), L	;
546)   26E6 DD 56 09    		 LD D, (IX + 9)        ;F	;F
547)   26E9 DD 5E 08    		 LD E, (IX + 8)	;
548)   26EC 19          		 ADD HL, DE	;
549)   26ED DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
550)   26F0 DD 75 08    		 LD (IX + 8), L	;
553)   26F3 E1          		 POP HL         ;X1	;X1
554)   26F4 E5          		 PUSH HL	;
555)   26F5 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
556)   26F8 DD 5E 0E    		 LD E, (IX + 14)	;
557)   26FB D5          		 PUSH DE	;
558)   26FC 19          		 ADD HL, DE	;
559)   26FD EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
560)   26FE DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
561)   2701 DD 6E 0C    		 LD L, (IX + 12)  	;
562)   2704 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
564)   2705 EB          		 EX DE,HL	;
565)   2706 CD 89 23    		 CALL PLOTP	;
567)   2709 E1          		 POP HL         ;X	;X
568)   270A D1          		 POP DE         ;X1	;X1
569)   270B D5          		 PUSH DE	;
570)   270C E5          		 PUSH HL	;
571)   270D AF          		 XOR A	;
572)   270E ED 52       		 SBC HL, DE	;
573)   2710 EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
574)   2711 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
575)   2714 DD 6E 0C    		 LD L, (IX + 12)	;
576)   2717 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
578)   2718 EB          		 EX DE,HL	;
579)   2719 CD 89 23    		 CALL PLOTP	;
581)   271C E1          		 POP HL         ;X	;X
582)   271D D1          		 POP DE         ;X1	;X1
583)   271E D5          		 PUSH DE	;
584)   271F E5          		 PUSH HL	;
585)   2720 19          		 ADD HL, DE	;
586)   2721 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
587)   2722 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
588)   2725 DD 6E 0C    		 LD L, (IX + 12)	;
589)   2728 AF          		 XOR A	;
590)   2729 ED 42       		 SBC HL, BC        ;HL=Y+Y1	;HL=Y+Y1
592)   272B EB          		 EX DE,HL	;
593)   272C CD 89 23    		 CALL PLOTP	;
595)   272F E1          		 POP HL         ;X	;X
596)   2730 D1          		 POP DE         ;X1	;X1
597)   2731 D5          		 PUSH DE	;
598)   2732 E5          		 PUSH HL	;
599)   2733 AF          		 XOR A	;
600)   2734 ED 52       		 SBC HL, DE	;
601)   2736 EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
602)   2737 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
603)   273A DD 6E 0C    		 LD L, (IX + 12)	;
604)   273D AF          		 XOR A	;
605)   273E ED 42       		 SBC HL, BC        ;HL=Y-Y1	;HL=Y-Y1
607)   2740 EB          		 EX DE,HL	;
608)   2741 CD 89 23    		 CALL PLOTP	;
610)   2744 E1          		 POP HL         ;X	;X
611)   2745 D1          		 POP DE         ;X1	;X1
612)   2746 C5          		 PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
613)   2747 E5          		 PUSH HL        ;SAVE X	;SAVE X
614)   2748 D5          		 PUSH DE        ;SAVE X1	;SAVE X1
615)   2749 09          		 ADD HL, BC        ;	;
616)   274A C1          		 POP BC         ;BC=X1	;BC=X1
617)   274B EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
618)   274C DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
619)   274F DD 6E 0C    		 LD L, (IX + 12)	;
620)   2752 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
622)   2753 EB          		 EX DE,HL	;
623)   2754 CD 89 23    		 CALL PLOTP	;
625)   2757 E1          		 POP HL         ;X	;X
626)   2758 D1          		 POP DE         ;Y1	;Y1
627)   2759 D5          		 PUSH DE	;
628)   275A E5          		 PUSH HL	;
629)   275B AF          		 XOR A	;
630)   275C ED 52       		 SBC HL, DE	;
631)   275E EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
632)   275F DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
633)   2762 DD 6E 0C    		 LD L, (IX + 12)	;
634)   2765 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
636)   2766 EB          		 EX DE,HL	;
637)   2767 CD 89 23    		 CALL PLOTP	;
639)   276A E1          		 POP HL         ;X	;X
640)   276B D1          		 POP DE         ;Y1	;Y1
641)   276C D5          		 PUSH DE	;
642)   276D E5          		 PUSH HL	;
643)   276E 19          		 ADD HL, DE	;
644)   276F EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
645)   2770 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
646)   2773 DD 6E 0C    		 LD L, (IX + 12)	;
647)   2776 AF          		 XOR A	;
648)   2777 ED 42       		 SBC HL, BC        ;HL=Y-X1	;HL=Y-X1
649)   2779 E5          		 PUSH HL	;
651)   277A EB          		 EX DE,HL	;
652)   277B CD 89 23    		 CALL PLOTP	;
654)   277E C1          		 POP BC         ;Y-X1	;Y-X1
655)   277F E1          		 POP HL         ;X	;X
656)   2780 D1          		 POP DE         ;Y1	;Y1
657)   2781 AF          		 XOR A	;
658)   2782 ED 52       		 SBC HL, DE	;
659)   2784 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
660)   2785 C5          		 PUSH BC	;
661)   2786 E1          		 POP HL         ;HL=Y-X1	;HL=Y-X1
663)   2787 EB          		 EX DE,HL	;
664)   2788 CD 89 23    		 CALL PLOTP	;
665)   278B C3 88 26    		 JP CIRC_AGN	;
666)   278E CD 25 1F    		CIRC_EXIT: CALL LCD_CLRXY	;
667)   2791 D1          		 POP DE         ;GET RET ADDR	;GET RET ADDR
668)   2792 21 10 00    		 LD HL, 8 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
669)   2795 39          		 ADD HL, SP        ;	;
670)   2796 F9          		 LD SP, HL	;
671)   2797 EB          		 EX DE, HL	;
672)   2798 E9          		 JP (HL)                	;
106)   2799 ED 44       		DELAYABIT: NEG  ;8 CLOCK CYCLES	;8 CLOCK CYCLES
107)   279B ED 44       		 NEG	;
108)   279D ED 44       		 NEG	;
109)   279F ED 44       		 NEG	;
110)   27A1 ED 44       		 NEG	;
111)   27A3 ED 44       		 NEG	;
112)   27A5 ED 44       		 NEG	;
113)   27A7 ED 44       		 NEG	;
114)   27A9 C9          		 RET	;
121)   27AA D3 38       		SND_OUT: OUT (DEVSND),A ;SEND TO SOUND	;SEND TO SOUND
137)   27AC CD 99 27    		 CALL DELAYABIT	;
138)   27AF C9          		 RET	;
140)   27B0 3E 9F       		SND_MUTEALL:   LD A,$9F  ;MUTE CHANNEL 0	;MUTE CHANNEL 0
141)   27B2 CD AA 27    		 CALL SND_OUT	;
142)   27B5 3E BF       		 LD A,$BF  ;MUTE CHANNEL 1	;MUTE CHANNEL 1
143)   27B7 CD AA 27    		 CALL SND_OUT	;
144)   27BA 3E DF       		 LD A,$DF  ;MUTE CHANNEL 2	;MUTE CHANNEL 2
145)   27BC CD AA 27    		 CALL SND_OUT	;
146)   27BF 3E FF       		 LD A,$FF  ;MUTE CHANNEL NOISE	;MUTE CHANNEL NOISE
147)   27C1 CD AA 27    		 CALL SND_OUT                	;
148)   27C4 C9          		               RET	;
150)   27C5 CD B0 27    		SND_INIT: CALL SND_MUTEALL	;
151)   27C8 AF          		               XOR A	;
152)   27C9 32 83 FF    		               LD (CHANST),A	;
153)   27CC AF          		SND_CLRDAT:    XOR A	;
154)   27CD 21 77 FF    		               LD HL,CHANDATA	;
155)   27D0 77          		               LD (HL),A	;
156)   27D1 54          		               LD D,H	;
157)   27D2 5D          		               LD E,L	;
158)   27D3 13          		               INC DE	;
159)   27D4 01 0B 00    		               LD BC,11  	;
160)   27D7 ED B0       		               LDIR	;
161)   27D9 C9          		 RET	;
166)   27DA F5          		SND_NOTE:      PUSH AF	;
167)   27DB E6 03       		               AND $03                  ;KEEP 2 BITS	;KEEP 2 BITS
168)   27DD 07          		               RLCA	;
169)   27DE 07          		               RLCA	;
170)   27DF 07          		               RLCA	;
171)   27E0 07          		               RLCA	;
172)   27E1 07          		               RLCA                    ;TRANSFER TO BITS 6&5	;TRANSFER TO BITS 6&5
173)   27E2 B4          		               OR H                    ;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL	;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL
174)   27E3 CD AA 27    		               CALL SND_OUT	;
175)   27E6 7D          		SN_LOW:        LD A,L                	;
176)   27E7 CD AA 27    		               CALL SND_OUT	;
177)   27EA F1          		               POP AF	;
178)   27EB C9          		               RET	;
183)   27EC F5          		SND_DOBEEP:    PUSH AF	;
184)   27ED 3E 02       		               LD A,DEFCHN	;
185)   27EF 0E 00       		               LD C,SNDVOLHI	;
186)   27F1 CD 15 28    		               CALL SND_SETVOLUME                	;
187)   27F4 3E 02       		               LD A,DEFCHN	;
188)   27F6 CD DA 27    		               CALL SND_NOTE	;
189)   27F9 06 A0       		               LD B,160	;
190)   27FB CD F4 28    		               CALL DELAYMILI	;
191)   27FE 3E 02       		               LD A,DEFCHN	;
192)   2800 0E 04       		               LD C,SNDMUTE	;
193)   2802 CD 15 28    		               CALL SND_SETVOLUME	;
194)   2805 F1          		               POP AF	;
195)   2806 C9          		               RET	;
197)   2807 21 07 83    		SND_BEEP:      LD HL,nG4             ;NOTE G4 ON CHANNEL2	;NOTE G4 ON CHANNEL2
198)   280A CD EC 27    		               CALL SND_DOBEEP	;
199)   280D C9          		               RET	;
201)   280E 21 02 81    		SND_BEEP2:     LD HL,nD6             ;NOTE D6 ON CHANNEL2	;NOTE D6 ON CHANNEL2
202)   2811 CD EC 27    		               CALL SND_DOBEEP	;
203)   2814 C9          		               RET	;
210)   2815 07          		SND_SETVOLUME: RLCA                            ;DOUBLE CHANNEL 0-3 --> 0,2,4,6               	;DOUBLE CHANNEL 0-3 --> 0,2,4,6
211)   2816 3C          		               INC A                           ;E=A+1	;E=A+1
212)   2817 5F          		               LD E,A                          ;SAVE CHANNEL INFO	;SAVE CHANNEL INFO
213)   2818 79          		               LD A,C	;
214)   2819 FE 04       		               CP SNDMUTE	;
215)   281B 3E 0F       		               LD A,$F	;
216)   281D 28 09       		               JR Z, SV_DOIT                   ;SNDMUTE=4 MEANS NO VOLUME = MUTE	;SNDMUTE=4 MEANS NO VOLUME = MUTE
217)   281F 3E 01       		               LD A,1                          ;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3	;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3
218)   2821 0C          		               INC C	;
219)   2822 0D          		SV_AGN:        DEC C	;
220)   2823 28 03       		               JR Z, SV_DOIT	;
221)   2825 07          		               RLCA	;
222)   2826 18 FA       		               JR SV_AGN	;
223)   2828 57          		SV_DOIT:       LD D,A                          ;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV	;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV
224)   2829 3E 80       		               LD A,$80	;
225)   282B CB 03       		               RLC E	;
226)   282D CB 03       		               RLC E	;
227)   282F CB 03       		               RLC E	;
228)   2831 CB 03       		               RLC E	;
229)   2833 B2          		               OR D	;
230)   2834 B3          		               OR E	;
231)   2835 CD AA 27    		               CALL SND_OUT                    ;SET THE VOLUME        	;SET THE VOLUME
232)   2838 C9          		               RET	;
235)   2839 F5          		SND_DISABLE:   PUSH AF	;
236)   283A CD 62 28    		               CALL SND_GETCHMASK	;
237)   283D 47          		               LD B,A	;
238)   283E 3A 83 FF    		               LD A,(CHANST)	;
239)   2841 B0          		               OR B	;
240)   2842 32 83 FF    		               LD (CHANST),A	;
241)   2845 F1          		               POP AF	;
242)   2846 0E 04       		               LD C, SNDMUTE	;
243)   2848 CD 15 28    		               CALL SND_SETVOLUME	;
244)   284B C9          		               RET	;
247)   284C F5          		SND_ENABLE:    PUSH AF	;
248)   284D CD 62 28    		               CALL SND_GETCHMASK	;
249)   2850 ED 44       		               NEG	;
250)   2852 3D          		               DEC A	;
251)   2853 47          		               LD B,A	;
252)   2854 3A 83 FF    		               LD A,(CHANST)	;
253)   2857 A0          		               AND B	;
254)   2858 32 83 FF    		               LD (CHANST),A	;
255)   285B F1          		               POP AF	;
256)   285C 0E 00       		               LD C, SNDVOLHI                  ;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL	;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL
257)   285E CD 15 28    		               CALL SND_SETVOLUME	;
258)   2861 C9          		               RET	;
263)   2862 3C          		SND_GETCHMASK: INC A	;
264)   2863 4F          		               LD C,A	;
265)   2864 AF          		               XOR A	;
266)   2865 3C          		               INC A                	;
267)   2866 0D          		GMCAGN:        DEC C	;
268)   2867 C8          		               RET Z	;
269)   2868 07          		               RLCA	;
270)   2869 18 FB       		               JR GMCAGN             	;
277)   286B F5          		SND_PLAYCH:    PUSH AF	;
278)   286C 21 77 FF    		               LD HL,CHANDATA	;
279)   286F 07          		               RLCA                            ;DOUBLE A	;DOUBLE A
280)   2870 06 00       		               LD B,0	;
281)   2872 4F          		               LD C,A	;
282)   2873 09          		               ADD HL,BC                       ;HL ON CHANNELS DATA ADDRESS VAR	;HL ON CHANNELS DATA ADDRESS VAR
283)   2874 5E          		               LD E,(HL)	;
284)   2875 23          		               INC HL	;
285)   2876 56          		               LD D,(HL)                       ;DE THE CHANNEL DATA ADDRESS	;DE THE CHANNEL DATA ADDRESS
286)   2877 7A          		               LD A,D	;
287)   2878 83          		               ADD E	;
288)   2879 B7          		               OR A	;
289)   287A 28 30       		               JR Z, PC_NOMORE                 ;IF CHANDATA ADDRESS IS ZERO RETURN	;IF CHANDATA ADDRESS IS ZERO RETURN
291)   287C F1          		               POP AF                          ;GET CHANNEL	;GET CHANNEL
292)   287D F5          		               PUSH AF	;
293)   287E CD 62 28    		               CALL SND_GETCHMASK	;
294)   2881 4F          		               LD C, A	;
295)   2882 3A 83 FF    		               LD A,(CHANST)	;
296)   2885 A1          		               AND C	;
297)   2886 C1          		               POP BC	;
298)   2887 20 35       		               JR NZ,SNDOK                     ;SIGNAL OK BUT DON'T PLAY ANYTHING	;SIGNAL OK BUT DON'T PLAY ANYTHING
299)   2889 C5          		               PUSH BC	;
301)   288A 48          		               LD C,B                          ;CHAN NO ON C	;CHAN NO ON C
302)   288B 06 00       		               LD B,0	;
303)   288D 21 7F FF    		               LD HL,CHANCN	;
304)   2890 09          		               ADD HL,BC                       ;HL ON CHANNELS NOTE IDX	;HL ON CHANNELS NOTE IDX
305)   2891 7E          		               LD A,(HL)                       ;A THE NOTE IDX 0-255 	;A THE NOTE IDX 0-255
306)   2892 3C          		               INC A	;
307)   2893 28 17       		               JR Z, PC_NOMORE                 ;IF 255 NO MORE NOTES TO PLAY	;IF 255 NO MORE NOTES TO PLAY
308)   2895 3D          		               DEC A          	;
309)   2896 34          		               INC (HL)                        ;NEXT NOTE	;NEXT NOTE
310)   2897 6F          		               LD L,A                          ;HL THE NOTE IDX	;HL THE NOTE IDX
311)   2898 26 00       		               LD H,0                          ;	;
312)   289A 29          		               ADD HL,HL                       ;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE	;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE
313)   289B 19          		               ADD HL,DE                       ;THE NOTE ADDRESS ON HL	;THE NOTE ADDRESS ON HL
314)   289C 5E          		               LD E,(HL)                       ;E 2ND BYTE OF THE NOTE TO PLAYING	;E 2ND BYTE OF THE NOTE TO PLAYING
315)   289D 23          		               INC HL	;
316)   289E 56          		               LD D,(HL)                       ;D 1ST BYTE OF THE NOTE TO PLAYING	;D 1ST BYTE OF THE NOTE TO PLAYING
317)   289F 7A          		               LD A,D	;
318)   28A0 C1          		               POP BC                          ;GET THE CHANNEL ON B	;GET THE CHANNEL ON B
319)   28A1 FE 0A       		               CP 10                           ;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS	;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS
320)   28A3 38 0A       		               JR C,SND_SPOPS	;
321)   28A5 EB          		               EX DE,HL                        ;HL THE NOTE	;HL THE NOTE
322)   28A6 78          		               LD A,B                          ;CHANNEL ON A	;CHANNEL ON A
323)   28A7 CD DA 27    		               CALL SND_NOTE	;
324)   28AA 18 12       		               JR SNDOK                        ;NOTE PLAYED OK	;NOTE PLAYED OK
325)   28AC C1          		PC_NOMORE:     POP BC	;
326)   28AD 18 11       		               JR SNDEND                       ;SIGNAL  SONG END	;SIGNAL  SONG END
330)   28AF FE 03       		SND_SPOPS:     CP 3	;
331)   28B1 30 07       		               JR NC,SNDOTOPS	;
332)   28B3 4F          		               LD C,A                          ;VOLUME	;VOLUME
333)   28B4 78          		               LD A,B                          ;CHANNEL	;CHANNEL
334)   28B5 CD 15 28    		               CALL SND_SETVOLUME	;
335)   28B8 18 04       		               JR SNDOK                        ;VOLUME SET OK	;VOLUME SET OK
337)   28BA FE 09       		SNDOTOPS:      CP 9                            ;9 MEANS SONG ENDED	;9 MEANS SONG ENDED
338)   28BC 28 02       		               JR Z, SNDEND	;
340)   28BE AF          		SNDOK:         XOR A                           ;END OK                	;END OK
341)   28BF C9          		               RET	;
342)   28C0 3E 01       		SNDEND:        LD A,1                          ;SONG END	;SONG END
343)   28C2 C9          		               RET	;
348)   28C3 06 04       		SND_PLAYMUSIC: LD B,4	;
349)   28C5 0E 00       		               LD C,0	;
350)   28C7 05          		PM_NXT:        DEC B                           ;PLAY 3,2,1,0	;PLAY 3,2,1,0
351)   28C8 78          		               LD A,B	;
352)   28C9 C5          		               PUSH BC                	;
353)   28CA CD 6B 28    		               CALL SND_PLAYCH	;
354)   28CD C1          		               POP BC                	;
355)   28CE 81          		               ADD A,C                         ;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES	;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES
356)   28CF 4F          		               LD C,A	;
357)   28D0 78          		               LD A,B	;
358)   28D1 B7          		               OR A	;
359)   28D2 20 F3       		               JR NZ, PM_NXT	;
360)   28D4 79          		               LD A,C	;
361)   28D5 FE 04       		               CP 4                            ;MEANS ALL 4 CHANNELS ARE NOT ENABLED	;MEANS ALL 4 CHANNELS ARE NOT ENABLED
362)   28D7 C9          		               RET	;
 19)   28D8 C9          		 RET	;
 22)   28D9 F5          		DELAYMICROSEC: PUSH AF	;
 23)   28DA D5          		 PUSH DE	;
 24)   28DB 1B          		 DEC DE	;
 25)   28DC D1          		 POP DE	;
 26)   28DD F1          		 POP AF	;
 27)   28DE C9          		 RET	;
 30)   28DF CD D9 28    		S21: CALL DELAYMICROSEC	;
 31)   28E2 10 FB       		 DJNZ S21	;
 32)   28E4 C9          		 RET	;
 36)   28E5 F5          		DELAYMILISEC: PUSH AF	;
 37)   28E6 D5          		 PUSH DE	;
 38)   28E7 11 2C 01    		 LD DE, 300        ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 39)   28EA 1B          		DEL1: DEC DE	;
 40)   28EB 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 41)   28EC B3          		 OR E	;
 42)   28ED 20 FB       		 JR NZ, DEL1	;
 43)   28EF D1          		 POP DE	;
 44)   28F0 F1          		 POP AF	;
 45)   28F1 C9          		 RET	;
 48)   28F2 06 50       		 LD B, 80	;
 50)   28F4 CD E5 28    		S1: CALL DELAYMILISEC	;
 51)   28F7 10 FB       		 DJNZ S1	;
 52)   28F9 C9          		 RET	;
 57)   28FA C5          		@DELAYSEC: PUSH BC	;
 58)   28FB 01 E8 03    		 LD BC, 1000	;
 59)   28FE C5          		MYDLAGN: PUSH BC	;
 60)   28FF CD E5 28    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 61)   2902 C1          		 POP BC	;
 62)   2903 0B          		 DEC BC	;
 63)   2904 78          		 LD A, B	;
 64)   2905 B1          		 OR C	;
 65)   2906 20 F6       		 JR NZ, MYDLAGN	;
 66)   2908 C1          		 POP BC	;
 67)   2909 10 EF       		 DJNZ DELAYSEC	;
 68)   290B C9          		 RET	;
 73)   290C F5          		OUTASC: PUSH AF	;
 74)   290D D5          		 PUSH DE	;
 75)   290E CD 41 29    		 CALL B2Bcd	;
 76)   2911 D1          		 POP DE	;
 77)   2912 CD 67 29    		 CALL BCD2HA	;
 78)   2915 F1          		 POP AF	;
 79)   2916 C9          		 RET	;
 93)   2917 B7          		BCD2BN: OR A	;
 94)   2918 47          		 LD B, A	;
 95)   2919 E6 F0       		 AND $F0	;
 96)   291B 0F          		 RRCA	;
 97)   291C 4F          		 LD C, A	;
 98)   291D 0F          		 RRCA	;
 99)   291E 0F          		 RRCA	;
100)   291F 81          		 ADD A, C	;
101)   2920 4F          		 LD C, A	;
102)   2921 78          		 LD A, B	;
103)   2922 E6 0F       		 AND $0F	;
104)   2924 81          		 ADD A, C	;
105)   2925 C9          		 RET	;
120)   2926 26 FF       		BN2BCD: LD H, $FF	;
121)   2928 24          		D100LP: INC H	;
122)   2929 D6 64       		 SUB 100	;
123)   292B 30 FB       		 JR NC, D100LP	;
124)   292D C6 64       		 ADD A, 100	;
125)   292F 2E FF       		 LD L, $FF	;
126)   2931 2C          		D10LP: INC L	;
127)   2932 D6 0A       		 SUB 10	;
128)   2934 30 FB       		 JR NC, D10LP	;
129)   2936 C6 0A       		 ADD A, 10	;
130)   2938 4F          		 LD C, A	;
131)   2939 7D          		 LD A, L	;
132)   293A 07          		 RLCA	;
133)   293B 07          		 RLCA	;
134)   293C 07          		 RLCA	;
135)   293D 07          		 RLCA	;
136)   293E B1          		 OR C	;
137)   293F 6F          		 LD L, A	;
138)   2940 C9          		 RET	;
152)   2941 01 00 10    		 LD BC, 16 * 256 + 0       ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
153)   2944 11 00 00    		 LD DE, 0	;
155)   2947 29          		 ADD HL, HL	;
156)   2948 7B          		 LD A, E	;
157)   2949 8F          		 ADC A, A	;
158)   294A 27          		 DAA	;
159)   294B 5F          		 LD E, A	;
160)   294C 7A          		 LD A, D	;
161)   294D 8F          		 ADC A, A	;
162)   294E 27          		 DAA	;
163)   294F 57          		 LD D, A	;
164)   2950 79          		 LD A, C	;
165)   2951 8F          		 ADC A, A	;
166)   2952 27          		 DAA	;
167)   2953 4F          		 LD C, A	;
168)   2954 10 F1       		 DJNZ cvtLp	;
169)   2956 EB          		 EX DE, HL	;
170)   2957 C9          		 RET	;
184)   2958 B7          		BCD2BN: OR A	;
185)   2959 47          		 LD B, A	;
186)   295A E6 F0       		 AND $F0	;
187)   295C 0F          		 RRCA	;
188)   295D 4F          		 LD C, A	;
189)   295E 0F          		 RRCA	;
190)   295F 0F          		 RRCA	;
191)   2960 81          		 ADD A, C	;
192)   2961 4F          		 LD C, A	;
193)   2962 78          		 LD A, B	;
194)   2963 E6 0F       		 AND $0F	;
195)   2965 81          		 ADD A, C	;
196)   2966 C9          		 RET	;
208)   2967 79          		 LD A, C	;
209)   2968 CD 94 29    		 CALL cvtUN	;
210)   296B 79          		 LD A, C	;
211)   296C CD 98 29    		 CALL cvtLN	;
212)   296F 7C          		 LD A, H	;
213)   2970 CD 94 29    		 CALL cvtUN	;
214)   2973 7C          		 LD A, H	;
215)   2974 CD 98 29    		 CALL cvtLN	;
216)   2977 7D          		 LD A, L	;
217)   2978 CD 94 29    		 CALL cvtUN	;
218)   297B 7D          		 LD A, L	;
219)   297C 18 1A       		 JR cvtLN	;
221)   297E 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
222)   297F 1F          		 RRA	;
223)   2980 1F          		 RRA	;
224)   2981 1F          		 RRA	;
226)   2982 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
227)   2984 C6 90       		 ADD A, 90h        ; old trick	; old trick
228)   2986 27          		 DAA         ; for converting	; for converting
229)   2987 CE 40       		 ADC A, 40h        ; one nibble	; one nibble
230)   2989 27          		 DAA         ; to hex ASCII	; to hex ASCII
231)   298A 12          		 LD (DE), A	;
232)   298B 13          		 INC DE	;
233)   298C C9          		 RET	;
245)   298D 7D          		 LD A, L	;
246)   298E CD 7E 29    		 CALL cvtUN	;
247)   2991 7D          		 LD A, L	;
248)   2992 18 EE       		 JR cvtLN	;
250)   2994 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
251)   2995 1F          		 RRA	;
252)   2996 1F          		 RRA	;
253)   2997 1F          		 RRA	;
255)   2998 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
256)   299A C6 90       		 ADD A, 90h        ; old trick	; old trick
257)   299C 27          		 DAA         ; for converting	; for converting
258)   299D CE 40       		 ADC A, 40h        ; one nibble	; one nibble
259)   299F 27          		 DAA         ; to hex ASCII	; to hex ASCII
260)   29A0 12          		 LD (DE), A	;
261)   29A1 13          		 INC DE	;
262)   29A2 C9          		 RET	;
279)   29A3 F5          		 PUSH AF        ; 11 T-states	; 11 T-states
281)   29A4 ED 44       		 NEG         ; 8 T-states	; 8 T-states
282)   29A6 ED 44       		 NEG         ; 8 T-states	; 8 T-states
283)   29A8 ED 44       		 NEG         ; 8 T-states	; 8 T-states
284)   29AA ED 44       		 NEG         ; 8 T-states	; 8 T-states
285)   29AC 0B          		 DEC BC         ; 6 T-states	; 6 T-states
286)   29AD 79          		 LD A, C        ; 9 T-states	; 9 T-states
287)   29AE B0          		 OR B         ; 4 T-states	; 4 T-states
288)   29AF C2 A4 29    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
289)   29B2 F1          		 POP AF         ; 10 T-states	; 10 T-states
290)   29B3 C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
328)   29B4 26 00       		@B2D8: LD H, 0	;
329)   29B6 6F          		 LD L, A	;
330)   29B7 1E 00       		@B2D16: LD E, 0	;
331)   29B9 16 00       		@B2D24: LD D, 0	;
332)   29BB 01 00 00    		@B2D32: LD BC, 0	;
333)   29BE DD 21 00 00 		@B2D48: LD IX, 0        ; zero all non-used bits	; zero all non-used bits
334)   29C2 22 41 FF    		@B2D64: LD (B2DINV), HL	;
335)   29C5 ED 53 43 FF 		 LD (B2DINV + 2), DE	;
336)   29C9 ED 43 45 FF 		 LD (B2DINV + 4), BC	;
337)   29CD DD 22 47 FF 		 LD (B2DINV + 6), IX       ; place full 64-bit input value in buffer	; place full 64-bit input value in buffer
338)   29D1 21 49 FF    		 LD HL, B2DBUF	;
339)   29D4 11 4A FF    		 LD DE, B2DBUF + 1	;
340)   29D7 36 20       		 LD (HL), ' '	;
342)   29D9 01 12 00    		 LD BC, 18	;
343)   29DC ED B0       		 LDIR         ; fill 1st 19 bytes of buffer with spaces	; fill 1st 19 bytes of buffer with spaces
344)   29DE ED 43 5C FF 		 LD (B2DEND - 1), BC       ;set BCD value to "0" & place terminating 0	;set BCD value to "0" & place terminating 0
345)   29E2 1E 01       		 LD E, 1        ; no. of bytes in BCD value	; no. of bytes in BCD value
346)   29E4 21 49 FF    		 LD HL, B2DINV + 8       ; (address MSB input)+1	; (address MSB input)+1
347)   29E7 01 09 09    		 LD BC, 0x0909	;
348)   29EA AF          		 XOR A	;
349)   29EB 05          		B2DSKP0: DEC B	;
350)   29EC 28 29       		 JR Z, B2DSIZ        ; all 0: continue with postprocessing	; all 0: continue with postprocessing
351)   29EE 2B          		 DEC HL	;
352)   29EF B6          		 OR (HL)        ; find first byte <>0	; find first byte <>0
353)   29F0 28 F9       		 JR Z, B2DSKP0	;
354)   29F2 0D          		B2DFND1: DEC C	;
355)   29F3 17          		 RLA	;
356)   29F4 30 FC       		 JR NC, B2DFND1        ; determine no. of most significant 1-bit	; determine no. of most significant 1-bit
357)   29F6 1F          		 RRA	;
358)   29F7 57          		 LD D, A        ; byte from binary input value	; byte from binary input value
359)   29F8 E5          		B2DLUS2: PUSH HL	;
360)   29F9 C5          		 PUSH BC	;
361)   29FA 21 5C FF    		B2DLUS1: LD HL, B2DEND - 1      ; address LSB of BCD value	; address LSB of BCD value
362)   29FD 43          		 LD B, E        ; current length of BCD value in bytes	; current length of BCD value in bytes
363)   29FE CB 12       		 RL D         ; highest bit from input value -> carry	; highest bit from input value -> carry
364)   2A00 7E          		B2DLUS0: LD A, (HL)	;
365)   2A01 8F          		 ADC A, A	;
366)   2A02 27          		 DAA	;
367)   2A03 77          		 LD (HL), A        ; double 1 BCD byte from intermediate result	; double 1 BCD byte from intermediate result
368)   2A04 2B          		 DEC HL	;
369)   2A05 10 F9       		 DJNZ B2DLUS0        ; and go on to double entire BCD value (+carry!)	; and go on to double entire BCD value (+carry!)
370)   2A07 30 03       		 JR NC, B2DNXT	;
371)   2A09 1C          		 INC E         ; carry at MSB -> BCD value grew 1 byte larger	; carry at MSB -> BCD value grew 1 byte larger
372)   2A0A 36 01       		 LD (HL), 1        ; initialize new MSB of BCD value	; initialize new MSB of BCD value
373)   2A0C 0D          		B2DNXT: DEC C	;
374)   2A0D 20 EB       		 JR NZ, B2DLUS1        ; repeat for remaining bits from 1 input byte	; repeat for remaining bits from 1 input byte
375)   2A0F C1          		 POP BC         ; no. of remaining bytes in input value	; no. of remaining bytes in input value
376)   2A10 0E 08       		 LD C, 8        ; reset bit-counter	; reset bit-counter
377)   2A12 E1          		 POP HL         ; pointer to byte from input value	; pointer to byte from input value
378)   2A13 2B          		 DEC HL	;
379)   2A14 56          		 LD D, (HL)        ; get next group of 8 bits	; get next group of 8 bits
380)   2A15 10 E1       		 DJNZ B2DLUS2        ; and repeat until last byte from input value	; and repeat until last byte from input value
381)   2A17 21 5D FF    		B2DSIZ: LD HL, B2DEND        ; address of terminating 0	; address of terminating 0
382)   2A1A 4B          		 LD C, E        ; size of BCD value in bytes	; size of BCD value in bytes
383)   2A1B B7          		 OR A	;
384)   2A1C ED 42       		 SBC HL, BC        ; calculate address of MSB BCD	; calculate address of MSB BCD
385)   2A1E 54          		 LD D, H	;
386)   2A1F 5D          		 LD E, L	;
387)   2A20 ED 42       		 SBC HL, BC	;
388)   2A22 EB          		 EX DE, HL        ; HL=address BCD value, DE=start of decimal value	; HL=address BCD value, DE=start of decimal value
389)   2A23 41          		 LD B, C        ; no. of bytes BCD	; no. of bytes BCD
390)   2A24 CB 21       		 SLA C         ; no. of bytes decimal (possibly 1 too high)	; no. of bytes decimal (possibly 1 too high)
391)   2A26 3E 30       		 LD A, '0'	;
392)   2A28 ED 6F       		 RLD         ; shift bits 4-7 of (HL) into bit 0-3 of A	; shift bits 4-7 of (HL) into bit 0-3 of A
393)   2A2A FE 30       		 CP '0'         ; (HL) was > 9h?	; (HL) was > 9h?
394)   2A2C 20 06       		 JR NZ, B2DEXPH        ; if yes, start with recording high digit	; if yes, start with recording high digit
395)   2A2E 0D          		 DEC C         ; correct number of decimals	; correct number of decimals
396)   2A2F 13          		 INC DE         ; correct start address	; correct start address
397)   2A30 18 04       		 JR B2DEXPL        ; continue with converting low digit	; continue with converting low digit
398)   2A32 ED 6F       		B2DEXP: RLD         ; shift high digit (HL) into low digit of A	; shift high digit (HL) into low digit of A
399)   2A34 12          		B2DEXPH: LD (DE), A       ; record resulting ASCII-code	; record resulting ASCII-code
400)   2A35 13          		 INC DE	;
401)   2A36 ED 6F       		B2DEXPL: RLD	;
402)   2A38 12          		 LD (DE), A	;
403)   2A39 13          		 INC DE	;
404)   2A3A 23          		 INC HL         ; next BCD-byte	; next BCD-byte
405)   2A3B 10 F5       		 DJNZ B2DEXP        ; and go on to convert each BCD-byte into 2 ASCII	; and go on to convert each BCD-byte into 2 ASCII
406)   2A3D ED 42       		 SBC HL, BC        ; return with HL pointing to 1st decimal	; return with HL pointing to 1st decimal
407)   2A3F C9          		 RET	;
411)   2A40 EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
412)   2A41 21 49 FF    		 ld hl, B2DBUF	;
413)   2A44 CD 4B 2A    		 call SkipWhitespace	;
414)   2A47 ED B0       		 ldir	;
415)   2A49 EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
416)   2A4A C9          		 ret	;
420)   2A4B 7E          		 ld a, (hl)	;
421)   2A4C FE 20       		 cp ' '	;
422)   2A4E C0          		 ret nz	;
423)   2A4F 23          		 inc hl	;
424)   2A50 18 F9       		 jr SkipWhitespace	;
428)   2A52 06 08       		@REVBITS: ld b, 8	;
429)   2A54 6F          		 ld l, a	;
431)   2A55 CB 15       		 rl l	;
432)   2A57 1F          		 rra	;
433)   2A58 10 FB       		 djnz REVLOOP	;
434)   2A5A C9          		 RET	;
444)   2A5B E5          		 push hl	;
446)   2A5C 7E          		 ld a, (hl)	;
448)   2A5D FE 00       		 cp  0	;
449)   2A5F 28 0E       		 jr z, IsStrDecTrue	;
451)   2A61 FE 30       		 cp  '0'	;
452)   2A63 38 06       		 jr c, IsStrDecFalse	;
454)   2A65 FE 3A       		 cp  '9'+1	;
455)   2A67 38 09       		 jr c, IsStrDecContinue	;
456)   2A69 FE 39       		 cp  '9'	;
459)   2A6B F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
460)   2A6D E1          		 pop hl	;
461)   2A6E C9          		 ret	;
463)   2A6F BF          		 cp a         ; Set zero flag	; Set zero flag
464)   2A70 E1          		 pop hl	;
465)   2A71 C9          		 ret	;
467)   2A72 23          		 inc hl	;
468)   2A73 18 E7       		 jr IsStrDec00	;
475)   2A75 E5          		 push hl	;
477)   2A76 7E          		 ld a, (hl)	;
479)   2A77 FE 00       		 cp  0	;
480)   2A79 28 14       		 jr z, IsStrHexTrue	;
482)   2A7B FE 30       		 cp  '0'	;
483)   2A7D 38 0C       		 jr c, IsStrHexFalse	;
485)   2A7F FE 3A       		 cp  '9'+1	;
486)   2A81 38 0F       		 jr c, IsStrHexContinue	;
488)   2A83 FE 30       		 cp  '0'	;
489)   2A85 38 04       		 jr c, IsStrHexFalse	;
491)   2A87 FE 47       		 cp  'F'+1	;
492)   2A89 38 07       		 jr c, IsStrHexContinue	;
495)   2A8B F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
496)   2A8D E1          		 pop hl	;
497)   2A8E C9          		 ret	;
499)   2A8F BF          		 cp a         ; Set zero flag	; Set zero flag
500)   2A90 E1          		 pop hl	;
501)   2A91 C9          		 ret	;
503)   2A92 23          		 inc hl	;
504)   2A93 18 E1       		 jr IsStrHex00	;
511)   2A95 AF          		 xor a	;
512)   2A96 CD 9B 2A    		 call loop	;
513)   2A99 7A          		 ld a, d	;
514)   2A9A C9          		 ret	;
516)   2A9B 57          		 ld d, a	;
517)   2A9C 7E          		 ld a, (hl)	;
518)   2A9D 23          		 inc hl	;
519)   2A9E D6 3A       		 sub '9' + 1	;
520)   2AA0 C6 0A       		 add 10	;
521)   2AA2 D0          		 ret nc	;
522)   2AA3 5F          		 ld e, a	;
523)   2AA4 7A          		 ld a, d	;
524)   2AA5 87          		 add a, a        ;double our accumulator	;double our accumulator
525)   2AA6 87          		 add a, a        ;double again (now x4)	;double again (now x4)
526)   2AA7 82          		 add a, d        ;add the original (now x5)	;add the original (now x5)
527)   2AA8 87          		 add a, a        ;double again (now x10)	;double again (now x10)
528)   2AA9 83          		 add a, e        ;add in the incoming digit	;add in the incoming digit
529)   2AAA 18 EF       		 jr loop	;
537)   2AAC 7E          		 ld a, (hl)        ; Copy first char to A	; Copy first char to A
538)   2AAD CD BD 2A    		 call Hex12        ; Convert first char	; Convert first char
539)   2AB0 87          		 add a, a        ; Multiply by 16...	; Multiply by 16...
540)   2AB1 87          		 add a, a        ; ...	; ...
541)   2AB2 87          		 add a, a        ; ...	; ...
542)   2AB3 87          		 add a, a        ; ...done!	; ...done!
543)   2AB4 57          		 ld d, a        ; Store top 4 bits in D	; Store top 4 bits in D
544)   2AB5 23          		 inc hl         ; Advance to next char	; Advance to next char
545)   2AB6 7E          		 ld a, (hl)	;
546)   2AB7 CD BD 2A    		 call Hex12        ; Convert second char	; Convert second char
547)   2ABA B2          		 or d         ; Add back top bits	; Add back top bits
548)   2ABB 23          		 inc hl         ; Advance for next guy	; Advance for next guy
549)   2ABC C9          		 ret	;
550)   2ABD D6 30       		Hex12: sub  '0'	;
551)   2ABF FE 0A       		 cp 10	;
552)   2AC1 D8          		 ret c	;
553)   2AC2 D6 07       		 sub 'A' - '0' - 10	;
554)   2AC4 C9          		 ret	;
561)   2AC5 CD AC 2A    		 call Read8bit	;
562)   2AC8 47          		 ld b, a	;
563)   2AC9 CD AC 2A    		 call Read8bit	;
564)   2ACC 4F          		 ld c, a	;
565)   2ACD C9          		 ret	;
573)   2ACE 7E          		 ld a, (hl)	;
574)   2ACF 23          		 inc hl	;
575)   2AD0 D6 30       		 sub '0'	;
576)   2AD2 CB 27       		 sla a	;
577)   2AD4 CB 27       		 sla a	;
578)   2AD6 CB 27       		 sla a	;
579)   2AD8 CB 27       		 sla a	;
580)   2ADA 47          		 ld b, a	;
581)   2ADB 7E          		 ld a, (hl)	;
582)   2ADC 23          		 inc hl	;
583)   2ADD D6 30       		 sub '0'	;
584)   2ADF B0          		 or b	;
585)   2AE0 C9          		 ret	;
590)   2AE1 4F          		 ld c, a        ; a = number to convert	; a = number to convert
591)   2AE2 CD EE 2A    		 call Num1	;
592)   2AE5 77          		 ld (hl), a	;
593)   2AE6 23          		 inc hl	;
594)   2AE7 79          		 ld a, c	;
595)   2AE8 CD F2 2A    		 call Num2	;
596)   2AEB 77          		 ld (hl), a	;
597)   2AEC 23          		 inc hl	;
598)   2AED C9          		 ret	;
599)   2AEE 1F          		Num1: rra	;
600)   2AEF 1F          		 rra	;
601)   2AF0 1F          		 rra	;
602)   2AF1 1F          		 rra	;
603)   2AF2 F6 F0       		Num2: or $F0	;
604)   2AF4 27          		 daa	;
605)   2AF5 C6 A0       		 add a, $A0	;
606)   2AF7 CE 40       		 adc a, $40        ; Ascii hex at this point (0 to F)	; Ascii hex at this point (0 to F)
607)   2AF9 C9          		 ret	;
  7)   2AFA 16 00       		   ld d,0	;
  8)   2AFC 6A          		   ld l,d	;
  9)   2AFD 06 08       		   ld b,8	;
 11)   2AFF 29          		   add hl,hl	;
 12)   2B00 30 01       		   jr nc,Mult8_NoAdd	;
 13)   2B02 19          		   add hl,de	;
 15)   2B03 10 FA       		   djnz Mult8_Loop	;
 16)   2B05 C9          		   ret	;
 23)   2B06 2E 00       		   ld l,0	;
 24)   2B08 06 08       		   ld b,8	;
 26)   2B0A 29          		   add hl,hl	;
 27)   2B0B 87          		   add a,a	;
 28)   2B0C 30 01       		   jr nc,Mult12_NoAdd	;
 29)   2B0E 19          		   add hl,de	;
 31)   2B0F 10 F9       		   djnz Mult12_Loop	;
 32)   2B11 C9          		   ret	;
 39)   2B12 21 00 00    		@Mult16: ld hl, 0	;
 40)   2B15 78          		 ld a, b	;
 41)   2B16 06 10       		 ld b, 16	;
 43)   2B18 29          		 add hl, hl	;
 44)   2B19 CB 21       		 sla c	;
 45)   2B1B 17          		 rla	;
 46)   2B1C 30 01       		 jr nc, Mult16_NoAdd	;
 47)   2B1E 19          		 add hl, de	;
 49)   2B1F 10 F7       		 djnz Mult16_Loop	;
 50)   2B21 C9          		 ret	;
 56)   2B22 D5          		@Mult32: PUSH DE	;
 57)   2B23 79          		 ld a, c	;
 58)   2B24 48          		 ld c, b	;
 59)   2B25 21 00 00    		 ld hl, 0	;
 60)   2B28 06 10       		 ld b, 16	;
 62)   2B2A 29          		 add hl, hl	;
 63)   2B2B 17          		 rla	;
 64)   2B2C CB 11       		 rl c	;
 65)   2B2E 30 07       		 jr nc, Mult32_NoAdd	;
 66)   2B30 19          		 add hl, de	;
 67)   2B31 CE 00       		 adc a, 0	;
 68)   2B33 D2 37 2B    		 jp nc, Mult32_NoAdd	;
 69)   2B36 0C          		 inc c	;
 71)   2B37 10 F1       		 djnz Mult32_Loop	;
 72)   2B39 41          		 ld b, c	;
 73)   2B3A 4F          		 ld c, a	;
 74)   2B3B D1          		 POP DE	;
 75)   2B3C C9          		 ret	;
 83)   2B3D AF          		   xor a	;
 84)   2B3E 06 08       		   ld b,8	;
 86)   2B40 CB 13       		   rl e	;
 87)   2B42 17          		   rla	;
 88)   2B43 91          		   sub c	;
 89)   2B44 30 01       		   jr nc,Div8_NoAdd	;
 90)   2B46 81          		   add a,c	;
 92)   2B47 10 F7       		   djnz Div8_Loop	;
 93)   2B49 47          		   ld b,a	;
 94)   2B4A 7B          		   ld a,e	;
 95)   2B4B 17          		   rla	;
 96)   2B4C 2F          		   cpl	;
 97)   2B4D C9          		   ret	;
103)   2B4E AF          		  xor a	;
104)   2B4F 06 08       		  ld b, 8	;
107)   2B51 CB 22       		  sla d	;
108)   2B53 17          		  rla	;
109)   2B54 BB          		  cp e	;
110)   2B55 38 02       		  jr c, $+4	;
111)   2B57 93          		  sub e	;
112)   2B58 14          		  inc d	;
114)   2B59 10 F6       		  djnz DIV8_8_loop	;
116)   2B5B C9          		  ret	;
122)   2B5C AF          		  xor a	;
123)   2B5D 06 10       		  ld b, 16	;
126)   2B5F 29          		  add hl, hl	;
127)   2B60 17          		  rla	;
128)   2B61 38 03       		  jr c, $+5	;
129)   2B63 B9          		  cp c	;
130)   2B64 38 02       		  jr c, $+4	;
132)   2B66 91          		  sub c	;
133)   2B67 2C          		  inc l	;
135)   2B68 10 F5       		  djnz DIV16_8_loop	;
137)   2B6A C9          		  ret	;
145)   2B6B 21 00 00    		   ld hl,0	;
146)   2B6E 78          		   ld a,b	;
147)   2B6F 06 08       		   ld b,8	;
149)   2B71 17          		   rla	;
150)   2B72 ED 6A       		   adc hl,hl	;
151)   2B74 ED 52       		   sbc hl,de	;
152)   2B76 30 01       		   jr nc,Div16_NoAdd1	;
153)   2B78 19          		   add hl,de	;
155)   2B79 10 F6       		   djnz Div16_Loop1	;
156)   2B7B 17          		   rla	;
157)   2B7C 2F          		   cpl	;
158)   2B7D 47          		   ld b,a	;
159)   2B7E 79          		   ld a,c	;
160)   2B7F 48          		   ld c,b	;
161)   2B80 06 08       		   ld b,8	;
163)   2B82 17          		   rla	;
164)   2B83 ED 6A       		   adc hl,hl	;
165)   2B85 ED 52       		   sbc hl,de	;
166)   2B87 30 01       		   jr nc,Div16_NoAdd2	;
167)   2B89 19          		   add hl,de	;
169)   2B8A 10 F6       		   djnz Div16_Loop2	;
170)   2B8C 17          		   rla	;
171)   2B8D 2F          		   cpl	;
172)   2B8E 41          		   ld b,c	;
173)   2B8F 4F          		   ld c,a	;
174)   2B90 C9          		   ret  	;
181)   2B91 19          		 ADD HL, DE        ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
182)   2B92 D9          		 EXX	;
183)   2B93 ED 5A       		 ADC HL, DE        ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
184)   2B95 D9          		 EXX	;
187)   2B96 C9          		 RET	;
197)   2B97 11 40 00    		 ld de, $0040	;
198)   2B9A 7D          		 ld a, l	;
199)   2B9B 6C          		 ld l, h	;
200)   2B9C 62          		 ld h, d	;
201)   2B9D B7          		 or a	;
202)   2B9E 06 08       		 ld b, 8	;
204)   2BA0 ED 52       		 sbc hl, de	;
205)   2BA2 30 01       		 jr nc, Sqr16_Skip	;
206)   2BA4 19          		 add hl, de	;
208)   2BA5 3F          		 ccf	;
209)   2BA6 CB 12       		 rl d	;
210)   2BA8 87          		 add a, a	;
211)   2BA9 ED 6A       		 adc hl, hl	;
212)   2BAB 87          		 add a, a	;
213)   2BAC ED 6A       		 adc hl, hl	;
214)   2BAE 10 F0       		 djnz Sqr16_Loop	;
215)   2BB0 C9          		 ret	;
235)   2BB1 3A 6F FF    		 ld a, (RNDseed)	;
236)   2BB4 47          		 ld b, a 	;
238)   2BB5 0F          		 rrca ; multiply by 32	; multiply by 32
239)   2BB6 0F          		 rrca	;
240)   2BB7 0F          		 rrca	;
241)   2BB8 EE 1F       		 xor 0x1f	;
243)   2BBA 80          		 add a, b	;
244)   2BBB DE FF       		 sbc a, 255 ; carry	; carry
246)   2BBD 32 6F FF    		 ld (RNDseed), a	;
247)   2BC0 C9          		 ret	;
 10)   2BC1 0E 00       		MNU_CNTITMS: LD C,0   ;ITEM COUNTER	;ITEM COUNTER
 11)   2BC3 06 00       		 LD B,0   ;ITEM LENGTH COUNTER	;ITEM LENGTH COUNTER
 12)   2BC5 16 00       		 LD D,0   ;TEMP ITEM LENGTH COUNTER	;TEMP ITEM LENGTH COUNTER
 13)   2BC7 7E          		MNU_CHKNXT: LD A,(HL)	;
 14)   2BC8 B7          		 OR A	;
 15)   2BC9 C8          		 RET Z   ;RETURN IF MENU ITEM STARTS WITH ZERO	;RETURN IF MENU ITEM STARTS WITH ZERO
 16)   2BCA 0C          		 INC C   ;WE HAVE A NEW ITEM	;WE HAVE A NEW ITEM
 17)   2BCB 16 00       		 LD D,0	;
 18)   2BCD 23          		MNU_LPITM: INC HL	;
 19)   2BCE 14          		 INC D	;
 20)   2BCF 78          		 LD A,B	;
 21)   2BD0 BA          		 CP D	;
 22)   2BD1 30 01       		 JR NC,MNU_NOTBIGER	;
 23)   2BD3 42          		 LD B,D   ;SAVE THE BIGGER ITEMS LENGTH  	;SAVE THE BIGGER ITEMS LENGTH
 24)   2BD4 7E          		MNU_NOTBIGER: LD A,(HL)	;
 25)   2BD5 B7          		 OR A	;
 26)   2BD6 20 F5       		 JR NZ, MNU_LPITM	;
 27)   2BD8 23          		 INC HL	;
 28)   2BD9 18 EC       		 JR MNU_CHKNXT	;
 30)   2BDB DD E5       		PRINTMNUITM: PUSH IX	;
 31)   2BDD C5          		 PUSH BC	;
 32)   2BDE CD E7 04    		 CALL OS_PRINTTEXT	;
 33)   2BE1 C1          		 POP BC	;
 34)   2BE2 DD E1       		 POP IX	;
 35)   2BE4 C9          		 RET	;
 38)   2BE5 3A 72 FF    		VGA_REVMNUCLR: LD A,(MENUVCLR)	;
 39)   2BE8 07          		 RLCA	;
 40)   2BE9 07          		 RLCA	;
 41)   2BEA 07          		 RLCA	;
 42)   2BEB 07          		 RLCA	;
 43)   2BEC 32 72 FF    		 LD (MENUVCLR),A	;
 44)   2BEF 2A 73 FF    		 LD HL,(MENULFORE)	;
 45)   2BF2 22 03 FE    		 LD (BCOLOR),HL	;
 46)   2BF5 2A 75 FF    		 LD HL,(MENULBACK)	;
 47)   2BF8 22 01 FE    		 LD (FCOLOR),HL	;
 48)   2BFB C9          		 RET	;
 51)   2BFC FE 00       		SETITMCOLOR: CP 0	;
 52)   2BFE 28 05       		 JR Z,DEFCOLOR	;
 53)   2C00 CD E5 2B    		 CALL VGA_REVMNUCLR	;
 54)   2C03 18 0C       		 JR SETVGACOL     	;
 55)   2C05 2A 73 FF    		DEFCOLOR: LD HL,(MENULFORE)	;
 56)   2C08 22 01 FE    		 LD (FCOLOR),HL	;
 57)   2C0B 2A 75 FF    		 LD HL,(MENULBACK)	;
 58)   2C0E 22 03 FE    		 LD (BCOLOR),HL	;
 59)   2C11 3A 72 FF    		SETVGACOL: LD A,(MENUVCLR)	;
 60)   2C14 F5          		 PUSH AF	;
 61)   2C15 E6 0F       		 AND $0F	;
 62)   2C17 32 0D FF    		 LD (VGAFCOL),A	;
 63)   2C1A F1          		 POP AF	;
 64)   2C1B 07          		 RLCA	;
 65)   2C1C 07          		 RLCA	;
 66)   2C1D 07          		 RLCA	;
 67)   2C1E 07          		 RLCA	;
 68)   2C1F E6 0F       		 AND $0F	;
 69)   2C21 32 0E FF    		 LD (VGABCOL),A	;
 70)   2C24 C9          		 RET	;
 74)   2C25 FE 00       		RESETITMCOLOR: CP 0	;
 75)   2C27 C8          		 RET Z	;
 77)   2C28 CD E5 2B    		 CALL VGA_REVMNUCLR	;
 78)   2C2B 2A 73 FF    		 LD HL,(MENULFORE)	;
 79)   2C2E 22 01 FE    		 LD (FCOLOR),HL	;
 80)   2C31 2A 75 FF    		 LD HL,(MENULBACK)	;
 81)   2C34 22 03 FE    		 LD (BCOLOR),HL	;
 82)   2C37 C9          		 RET	;
 88)   2C38 F5          		PRINTMENU: PUSH AF	;
 89)   2C39 E5          		 PUSH HL	;
 90)   2C3A D5          		 PUSH DE  	;
 91)   2C3B CD 33 04    		 CALL OS_GOTOXY  ;SET CURSOR TO X,Y=D,E	;SET CURSOR TO X,Y=D,E
 92)   2C3E CD C1 2B    		 CALL MNU_CNTITMS ;C THE ITEM NUMBER B THE MAX LENGTH	;C THE ITEM NUMBER B THE MAX LENGTH
 93)   2C41 C5          		 PUSH BC	;
 94)   2C42 DD 21 00 00 		 LD IX,0	;
 95)   2C46 DD 39       		 ADD IX,SP  	;
 96)   2C48 C5          		 PUSH BC	;
 97)   2C49 CD 82 18    		 CALL VGA_GETCOL  ;GET VGA COLOR ON A	;GET VGA COLOR ON A
 98)   2C4C C1          		 POP BC  	;
 99)   2C4D F5          		 PUSH AF   ;SAVE COLOR INFO	;SAVE COLOR INFO
100)   2C4E 2A 01 FE    		 LD HL,(FCOLOR)	;
101)   2C51 E5          		 PUSH HL   ;SAVE COLOR INFO	;SAVE COLOR INFO
102)   2C52 2A 03 FE    		 LD HL,(BCOLOR)	;
103)   2C55 E5          		 PUSH HL   ;SAVE COLOR INFO	;SAVE COLOR INFO
104)   2C56 3E 00       		 LD A,0   ;SET MENU COLORS	;SET MENU COLORS
105)   2C58 CD FC 2B    		 CALL SETITMCOLOR	;
106)   2C5B 21 CF FE    		 LD HL,STRGBUFF  ;USE STRGBUFF TO CREATE THE OUT TEXT	;USE STRGBUFF TO CREATE THE OUT TEXT
107)   2C5E E5          		 PUSH HL	;
109)   2C5F 04          		 INC B	;
110)   2C60 36 8B       		 LD (HL),139  ;'/'	;'/'
111)   2C62 23          		PM_AGN1: INC HL	;
112)   2C63 36 81       		 LD (HL),129  ;'='	;'='
113)   2C65 10 FB       		 DJNZ PM_AGN1	;
114)   2C67 23          		 INC HL	;
115)   2C68 36 8A       		 LD (HL),138  ;'\'	;'\'
116)   2C6A 23          		 INC HL	;
117)   2C6B 36 00       		 LD (HL),0	;
118)   2C6D E1          		 POP HL	;
119)   2C6E CD DB 2B    		 CALL PRINTMNUITM	;
120)   2C71 06 01       		 LD B,1   ;;1ST ITEM	;;1ST ITEM
121)   2C73 DD 66 05    		 LD H,(IX+5)  ;MENU ITEM	;MENU ITEM
122)   2C76 DD 6E 04    		 LD L,(IX+4)	;
123)   2C79 11 CF FE    		PM_AGN3: LD DE,STRGBUFF	;
124)   2C7C 3E 82       		 LD A,130  ;'|'	;'|'
125)   2C7E 12          		 LD (DE),A	;
126)   2C7F DD 7E 07    		 LD A,(IX+07)  ;GET SELECTED ITEM	;GET SELECTED ITEM
127)   2C82 B8          		 CP B	;
128)   2C83 3E 20       		 LD A,' '	;
129)   2C85 20 02       		 JR NZ, PM_SKP2	;
130)   2C87 3E C5       		 LD A,197  ;'>'	;'>'
131)   2C89 13          		PM_SKP2: INC DE	;
132)   2C8A 12          		 LD (DE),A  	;
133)   2C8B 0E 00       		 LD C,0   ;COUNT CHARS PRINTED	;COUNT CHARS PRINTED
134)   2C8D 7E          		PM_AGN2: LD A,(HL)	;
135)   2C8E 13          		 INC DE	;
136)   2C8F B7          		 OR A	;
137)   2C90 28 05       		 JR Z,PM_NXT1  ;ITEM END    	;ITEM END
138)   2C92 12          		 LD (DE),A	;
139)   2C93 23          		 INC HL	;
140)   2C94 0C          		 INC C	;
141)   2C95 18 F6       		 JR PM_AGN2	;
142)   2C97 E5          		PM_NXT1: PUSH HL  ;SAVE MENU ITEMS IDX	;SAVE MENU ITEMS IDX
143)   2C98 C5          		 PUSH BC	;
144)   2C99 DD 7E 01    		 LD A,(IX+1)  ;A MAX LENGTH	;A MAX LENGTH
145)   2C9C 91          		 SUB C	;
146)   2C9D 47          		 LD B,A	;
147)   2C9E FE 00       		 CP 0	;
148)   2CA0 28 06       		 JR Z,NOSPC  	;
149)   2CA2 3E 20       		 LD A,' '  	;
150)   2CA4 12          		 LD (DE),A	;
151)   2CA5 13          		 INC DE	;
152)   2CA6 10 FC       		 DJNZ $-2  	;
153)   2CA8 C1          		NOSPC: POP BC   	;
154)   2CA9 3E 82       		 LD A,130  ;'|'	;'|'
155)   2CAB 12          		 LD (DE),A  	;
156)   2CAC 13          		 INC DE  	;
157)   2CAD AF          		 XOR A	;
158)   2CAE 12          		 LD (DE),A  	;
159)   2CAF DD 56 03    		 LD D,(IX+3)  ;X,Y	;X,Y
160)   2CB2 DD 7E 02    		 LD A,(IX+2)	;
161)   2CB5 80          		 ADD A,B   ;ADD MENU ITEM NO	;ADD MENU ITEM NO
162)   2CB6 04          		 INC B	;
163)   2CB7 5F          		 LD E,A	;
164)   2CB8 CD 33 04    		 CALL OS_GOTOXY  ;GOTO XY	;GOTO XY
165)   2CBB C5          		 PUSH BC	;
166)   2CBC DD 7E 07    		 LD A,(IX+07)  ;GET SELECTED ITEM	;GET SELECTED ITEM
167)   2CBF 3C          		 INC A   ;1 BASED	;1 BASED
168)   2CC0 B8          		 CP B	;
169)   2CC1 3E 00       		 LD A,0   ;NO CHANGE OF COLORS	;NO CHANGE OF COLORS
170)   2CC3 20 01       		 JR NZ,NOSELEC	;
172)   2CC5 3C          		 INC A	;
173)   2CC6 F5          		NOSELEC: PUSH AF	;
174)   2CC7 CD FC 2B    		 CALL SETITMCOLOR ;SETS ITEM COLOR	;SETS ITEM COLOR
175)   2CCA 21 CF FE    		 LD HL,STRGBUFF	;
176)   2CCD CD DB 2B    		 CALL PRINTMNUITM	;
177)   2CD0 F1          		 POP AF	;
178)   2CD1 CD 25 2C    		 CALL RESETITMCOLOR ;RESETS THE COLOR IF REVERSED	;RESETS THE COLOR IF REVERSED
179)   2CD4 C1          		 POP BC	;
180)   2CD5 E1          		 POP HL   ;GET NEXT MENU ITEM	;GET NEXT MENU ITEM
181)   2CD6 23          		 INC HL	;
182)   2CD7 7E          		 LD A,(HL)	;
183)   2CD8 B7          		 OR A	;
184)   2CD9 20 9E       		 JR NZ,PM_AGN3	;
185)   2CDB DD 46 01    		 LD B,(IX+1)  ;GET STRING LENGTH AT B	;GET STRING LENGTH AT B
186)   2CDE DD 4E 00    		 LD C,(IX+0)	;
188)   2CE1 CD FC 2B    		 CALL SETITMCOLOR ;SETS ITEM COLOR	;SETS ITEM COLOR
189)   2CE4 21 CF FE    		 LD HL,STRGBUFF  ;USE STRGBUFF TO CREATE THE OUT TEXT	;USE STRGBUFF TO CREATE THE OUT TEXT
190)   2CE7 E5          		 PUSH HL	;
191)   2CE8 36 89       		 LD (HL),137  ;'\'	;'\'
192)   2CEA 04          		 INC B	;
193)   2CEB 23          		PM_AGN4: INC HL	;
194)   2CEC 36 81       		 LD (HL),129  ;'='	;'='
195)   2CEE 10 FB       		 DJNZ PM_AGN4	;
196)   2CF0 23          		 INC HL	;
197)   2CF1 36 88       		 LD (HL),136  ;'/'	;'/'
198)   2CF3 23          		 INC HL	;
199)   2CF4 36 00       		 LD (HL),0  	;
200)   2CF6 DD 56 03    		 LD D,(IX+3)  ;X,Y	;X,Y
201)   2CF9 DD 7E 02    		 LD A,(IX+2)	;
202)   2CFC 81          		 ADD A,C	;
203)   2CFD 3C          		 INC A	;
204)   2CFE 5F          		 LD E,A	;
205)   2CFF CD 33 04    		 CALL OS_GOTOXY	;
206)   2D02 E1          		 POP HL	;
207)   2D03 CD DB 2B    		 CALL PRINTMNUITM	;
209)   2D06 E1          		 POP HL	;
210)   2D07 22 03 FE    		 LD (BCOLOR),HL	;
211)   2D0A E1          		 POP HL	;
212)   2D0B 22 01 FE    		 LD (FCOLOR),HL	;
213)   2D0E F1          		 POP AF	;
214)   2D0F CD 8D 18    		 CALL VGA_SETCOL  ;RESTORE ORIGINAL COLORS	;RESTORE ORIGINAL COLORS
215)   2D12 C1          		 POP BC	;
216)   2D13 D1          		 POP DE	;
217)   2D14 E1          		 POP HL	;
218)   2D15 F1          		 POP AF	;
219)   2D16 C9          		 RET  	;
226)   2D17 E5          		CREATEMENU: PUSH HL  ;SAVE MENU POSITION AND INFO	;SAVE MENU POSITION AND INFO
227)   2D18 D5          		 PUSH DE	;
228)   2D19 F5          		 PUSH AF	;
229)   2D1A CD 38 2C    		 CALL PRINTMENU	;
230)   2D1D CD D6 03    		CM_GTKEY: CALL GET_CHAR	;
231)   2D20 C1          		 POP BC   ;CURRENT ITEM SELECTED ON A	;CURRENT ITEM SELECTED ON A
232)   2D21 FE 0B       		 CP 11   ;ARROW UP	;ARROW UP
233)   2D23 20 0B       		 JR NZ,CM_CHKNXT	;
234)   2D25 78          		 LD A,B	;
235)   2D26 FE 01       		 CP 1	;
236)   2D28 C5          		 PUSH BC	;
237)   2D29 28 F2       		 JR Z,CM_GTKEY  ;NO CHANGE	;NO CHANGE
238)   2D2B F1          		 POP AF	;
239)   2D2C 3D          		 DEC A	;
240)   2D2D F5          		 PUSH AF	;
241)   2D2E 18 14       		 JR REPRINT  	;
242)   2D30 FE 0A       		CM_CHKNXT: CP 10  ;ARROW DOWN	;ARROW DOWN
243)   2D32 20 15       		 JR NZ,CM_CHKNXT1	;
244)   2D34 D1          		 POP DE	;
245)   2D35 E1          		 POP HL	;
246)   2D36 E5          		 PUSH HL	;
247)   2D37 D5          		 PUSH DE	;
248)   2D38 C5          		 PUSH BC  	;
249)   2D39 CD C1 2B    		 CALL MNU_CNTITMS ;C THE MENU ITEMS	;C THE MENU ITEMS
250)   2D3C F1          		 POP AF   ;A THE CURRENT ITEM NO	;A THE CURRENT ITEM NO
251)   2D3D B9          		 CP C   ;WE ARE AT THE LAST?	;WE ARE AT THE LAST?
252)   2D3E F5          		 PUSH AF	;
253)   2D3F 28 DC       		 JR Z,CM_GTKEY  ;NO CHANGE	;NO CHANGE
254)   2D41 F1          		 POP AF	;
255)   2D42 3C          		 INC A	;
256)   2D43 F5          		 PUSH AF	;
258)   2D44 F1          		REPRINT: POP AF	;
259)   2D45 D1          		 POP DE	;
260)   2D46 E1          		 POP HL	;
261)   2D47 18 CE       		 JR CREATEMENU	;
262)   2D49 FE 0D       		CM_CHKNXT1: CP 13  ;ENTER RETURN THE SELECTED ITEM	;ENTER RETURN THE SELECTED ITEM
263)   2D4B C5          		 PUSH BC	;
264)   2D4C 20 CF       		 JR NZ,CM_GTKEY	;
265)   2D4E C1          		 POP BC	;
266)   2D4F 78          		 LD A,B   ;SELECTED ITEM	;SELECTED ITEM
267)   2D50 D1          		 POP DE	;
268)   2D51 E1          		 POP HL	;
269)   2D52 C9          		 RET	;
  4)   2D53 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D57 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D5B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D5F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D63 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D67 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D6B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D6F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D73 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D77 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D7B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D7F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D83 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D87 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D8B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D8F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D93 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D97 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D9B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2D9F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DA3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DA7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DAB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DAF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DB3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DB7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DBB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DBF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DC3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DC7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DCB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DCF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DD3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DD7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DDB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DDF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DE3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DE7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DEB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DEF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DF3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DF7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DFB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2DFF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E03 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E07 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E0B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E0F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E13 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E17 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E1B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E1F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E23 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E27 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E2B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E2F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E33 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E37 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E3B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E3F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E43 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E47 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E4B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E4F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E53 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E57 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E5B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E5F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E63 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E67 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E6B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E6F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E73 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E77 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E7B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E7F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E83 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E87 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E8B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E8F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E93 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E97 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E9B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2E9F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EA3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EA7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EAB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EAF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EB3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EB7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EBB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EBF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EC3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EC7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2ECB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2ECF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2ED3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2ED7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EDB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EDF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EE3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EE7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EEB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EEF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EF3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EF7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EFB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EFF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F03 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F07 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F0B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F0F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F13 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F17 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F1B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F1F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F23 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F27 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F2B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F2F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F33 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F37 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F3B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F3F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F43 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F47 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F4B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F4F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F53 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F57 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F5B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F5F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F63 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F67 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F6B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F6F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F73 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F77 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F7B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F7F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F83 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F87 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F8B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F8F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F93 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F97 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F9B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F9F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FA3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FA7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FAB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FAF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FB3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FB7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FBB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FBF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FC3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FC7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FCB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FCF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FD3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FD7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FDB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FDF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FE3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FE7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FEB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FEF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FF3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FF7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FFB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FFF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3003 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3007 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   300B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   300F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3013 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3017 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   301B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   301F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3023 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3027 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   302B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   302F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3033 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3037 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   303B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   303F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3043 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3047 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   304B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   304F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3053 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3057 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   305B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   305F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3063 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3067 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   306B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   306F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3073 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3077 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   307B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   307F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3083 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3087 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   308B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   308F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3093 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3097 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   309B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   309F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30AB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30AF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30BB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30BF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30CB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30CF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30DB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30DF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30EB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30EF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30FB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30FF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3103 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3107 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   310B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   310F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3113 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3117 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   311B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   311F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3123 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3127 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   312B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   312F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3133 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3137 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   313B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   313F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3143 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3147 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   314B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   314F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3153 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3157 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   315B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   315F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3163 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3167 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   316B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   316F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3173 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3177 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   317B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   317F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3183 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3187 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   318B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   318F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3193 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3197 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   319B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   319F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31AB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31AF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31BB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31BF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31CB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31CF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31DB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31DF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31EB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31EF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31FB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31FF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3203 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3207 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   320B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   320F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3213 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3217 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   321B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   321F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3223 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3227 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   322B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   322F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3233 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3237 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   323B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   323F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3243 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3247 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   324B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   324F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3253 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3257 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   325B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   325F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3263 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3267 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   326B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   326F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3273 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3277 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   327B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   327F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3283 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3287 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   328B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   328F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3293 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3297 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   329B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   329F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32AB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32AF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32BB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32BF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32CB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32CF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32DB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32DF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32EB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32EF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32FB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32FF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3303 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3307 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   330B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   330F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3313 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3317 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   331B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   331F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3323 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3327 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   332B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   332F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3333 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3337 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   333B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   333F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3343 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3347 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   334B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   334F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3353 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3357 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   335B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   335F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3363 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3367 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   336B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   336F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3373 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3377 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   337B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   337F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3383 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3387 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   338B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   338F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3393 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3397 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   339B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   339F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33AB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33AF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33BB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33BF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33CB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33CF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33DB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33DF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33EB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33EF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33FB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33FF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3403 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3407 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   340B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   340F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3413 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3417 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   341B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   341F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3423 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3427 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   342B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   342F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3433 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3437 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   343B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   343F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3443 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3447 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   344B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   344F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3453 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3457 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   345B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   345F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3463 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3467 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   346B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   346F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3473 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3477 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   347B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   347F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3483 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3487 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   348B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   348F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3493 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3497 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   349B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   349F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34AB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34AF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34BB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34BF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34CB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34CF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34DB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34DF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34EB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34EF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34FB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34FF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3503 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3507 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   350B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   350F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3513 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3517 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   351B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   351F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3523 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3527 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   352B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   352F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3533 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3537 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   353B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   353F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3543 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3547 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   354B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   354F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3553 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3557 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   355B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   355F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3563 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3567 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   356B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   356F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3573 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3577 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   357B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   357F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3583 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3587 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   358B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   358F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3593 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3597 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   359B 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   359F 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35AB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35AF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35BB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35BF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35CB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35CF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35DB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35DF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35EB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35EF 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F3 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F7 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35FB 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35FF 00          		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  5)   3600 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3604 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3608 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   360C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3610 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3614 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3618 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   361C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3620 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3624 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3628 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   362C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3630 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3634 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3638 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   363C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3640 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3644 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3648 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   364C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3650 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3654 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3658 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   365C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3660 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3664 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3668 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   366C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3670 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3674 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3678 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   367C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3680 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3684 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3688 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   368C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3690 80 01 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3694 7E 00 C0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3698 00 00 FF 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   369C 80 02 F0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36AC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36BC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36CC 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D0 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D8 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36DC 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E0 14 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E4 00 18 18 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E8 18 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36EC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F8 0C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36FC 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3700 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3704 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3708 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   370C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3710 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3714 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3718 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   371C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3720 00 10 12 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3724 10 60 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3728 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   372C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3730 38 10 38 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3734 08 7C 1C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3738 38 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   373C 08 00 20 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3740 3C 18 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3744 7C 7E 7E 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3748 42 38 02 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   374C 40 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3750 7C 3C 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3754 FE 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3758 44 44 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   375C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3760 20 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3764 04 00 08 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3768 40 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   376C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3770 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3774 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3778 00 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   377C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3780 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3784 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3788 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   378C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3790 C0 03 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3794 7E 00 B0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3798 00 00 00 06 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   379C 40 04 C0 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A0 7C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A4 38 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37AC 60 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B0 00 7E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B4 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B8 00 00 00 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37BC 38 38 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C0 7E 10 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C4 10 00 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C8 60 08 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37CC 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D0 08 20 28 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D4 20 10 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D8 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37DC 08 20 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E0 28 00 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E4 18 18 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E8 3C 42 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37EC 44 10 10 3A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F0 00 3E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F4 04 FE 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F8 10 7E 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3800 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3804 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3808 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   380C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3810 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3814 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3818 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   381C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3820 00 10 24 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3824 3C 64 50 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3828 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   382C 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3830 44 30 44 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3834 18 40 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3838 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   383C 10 00 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3840 42 24 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3844 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3848 42 10 02 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   384C 40 66 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3850 42 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3854 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3858 44 44 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   385C 40 08 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3860 10 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3864 04 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3868 40 10 10 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   386C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3870 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3874 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3878 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   387C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3880 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3884 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3888 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   388C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3890 E0 07 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3894 7E 7E 8C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3898 00 00 00 0A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   389C 20 08 A0 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A0 44 00 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A4 40 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A8 00 00 7C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38AC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B0 00 42 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B4 00 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B8 00 00 7C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38BC 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C0 22 28 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C4 10 10 60 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C8 10 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38CC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D0 10 10 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D4 10 28 28 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D8 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38DC 10 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E0 00 00 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E4 24 24 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E8 42 42 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38EC EE 38 00 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F0 00 50 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F4 08 82 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F8 18 90 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38FC 28 48 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3900 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3904 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3908 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   390C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3910 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3914 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3918 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   391C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3920 00 10 48 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3924 50 08 50 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3928 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   392C 00 00 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3930 4C 10 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3934 28 78 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3938 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   393C 20 7C 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3940 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3944 22 40 40 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3948 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   394C 40 5A 52 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3950 42 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3954 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3958 28 28 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   395C 20 08 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3960 08 38 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3964 3C 38 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3968 78 00 00 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   396C 10 EC 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3970 78 3C 5C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3974 38 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3978 44 44 7C 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   397C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3980 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3984 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3988 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   398C 10 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3990 F0 0F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3994 7E 7E 82 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3998 18 18 00 12 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   399C 12 90 90 41 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A0 40 34 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A4 38 1C 28 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A8 58 10 20 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39AC 10 44 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B0 7C 00 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B4 7C 44 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B8 44 44 20 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39BC 7C 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C0 10 28 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C4 10 08 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C8 30 08 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39CC 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D0 38 38 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D4 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39DC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E0 78 3C 52 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39EC FE 7C 38 4C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F0 3A 90 6C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F4 08 44 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F8 24 90 6C 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A24 38 10 20 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A28 40 04 10 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A2C 00 7C 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A30 54 10 18 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A34 48 04 78 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A38 38 3C 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A3C 40 00 04 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A40 52 7E 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A44 22 7C 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A48 7E 10 02 70 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A4C 40 5A 4A 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A50 7C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A58 10 10 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A5C 10 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A60 00 04 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A64 44 44 38 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A70 44 44 60 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A74 10 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A78 28 44 08 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A7C 00 04 32 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A80 00 FF 08 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A84 FF FF F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A88 F8 0F F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A8C E0 03 E0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A90 F8 1F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A94 7E 7E 8C 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A98 24 3C 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A9C 0A A0 08 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA0 40 48 78 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA4 44 20 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA8 64 10 78 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB0 28 18 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB4 10 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB8 24 24 40 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ABC 92 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC0 08 44 24 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC4 10 7C 2C 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC8 14 08 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ACC 04 04 04 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD0 44 44 44 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ADC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE0 44 40 4A 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE4 78 7E 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE8 42 42 FE FE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AEC FE FE 04 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF0 4C FC 12 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF4 08 44 7C 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF8 24 9C 92 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B20 00 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B24 14 20 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B28 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B2C 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B30 64 10 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B34 7C 04 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B38 44 04 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B3C 20 7C 08 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B40 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B44 22 40 40 4E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B48 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B4C 40 42 46 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B50 40 4A 48 02 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B58 28 10 20 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B5C 08 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B60 00 7C 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B64 44 7C 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B68 44 10 10 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B70 44 44 40 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B78 10 44 10 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B7C 10 08 4C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B8C 00 00 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B90 FC 3F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B94 7E 7E B0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B98 24 3C 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B9C 06 C0 04 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA4 44 18 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA8 44 10 20 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB0 28 00 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB8 28 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BBC 7C 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC0 10 44 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC4 54 08 32 2C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC8 6C 08 20 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BCC 7C 7C 7C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD0 7C 7C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE0 44 40 46 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BEC 7C D6 7C 64 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF0 54 90 FE 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF4 08 28 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF8 18 90 9E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C20 00 00 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C24 78 4C 88 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C28 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C2C 00 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C30 44 10 40 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C34 08 44 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C38 44 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C3C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C40 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C44 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C48 42 10 42 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C4C 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C50 40 44 44 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C54 10 42 24 66 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C58 44 10 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C5C 04 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C60 00 44 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C64 44 40 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C70 78 3C 40 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C78 28 44 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C7C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C90 FE 7F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C94 7E 7E C0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C98 18 18 00 80 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C9C 3E F0 02 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA4 44 20 54 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA8 44 10 40 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CAC 44 44 18 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB0 28 42 64 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB8 10 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CBC 10 10 44 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC0 22 82 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC4 38 10 0C 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC8 14 08 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CCC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD0 40 40 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE0 44 40 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE8 42 42 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CEC 38 10 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF0 64 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF4 08 28 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF8 08 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D1C F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D24 10 0C 74 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D28 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D2C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D30 38 38 7C 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D34 08 38 38 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D38 38 70 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D3C 08 00 20 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D40 3C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D44 7C 7E 40 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D48 42 38 3C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D4C 7E 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D50 40 3A 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D54 10 3C 18 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D58 44 10 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D5C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D60 00 3C 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D64 3C 3C 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D68 44 18 10 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D6C 18 92 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D70 40 04 40 78 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D74 18 3C 10 6C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D78 44 3C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D7C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA0 40 34 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA4 38 1C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA8 44 08 38 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DAC 44 78 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB0 24 7E 58 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB4 08 38 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB8 28 18 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DBC 38 38 C6 EE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC0 7E FE 66 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC4 10 00 10 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC8 1E 08 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DCC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD0 3C 3C 3C 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD4 18 18 18 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DDC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE0 44 3C 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE4 7C 42 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE8 3C 3C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DEC 10 38 3C B8 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF0 B8 9E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF4 08 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF8 30 7E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E2C 20 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E38 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E5C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E64 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E68 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E78 00 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA8 04 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB4 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB8 48 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC4 00 00 1E 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC8 04 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ECC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE0 00 08 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF4 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F2C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F38 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F5C 00 00 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F64 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F68 00 00 30 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F78 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA8 04 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB4 00 00 00 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB8 44 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FCC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE0 00 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
 14)   FE00 00          		 @FLAGS DEFS 1        ; Flags: B7=ESC PRESSED,B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 15)   FE01 00 00       		 @FCOLOR DEFS 2       ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 16)   FE03 00 00       		 @BCOLOR DEFS 2       ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 17)   FE05 00 00       		 @FGRCOL DEFS 2       ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 18)   FE07 00 00       		 @BGRCOL DEFS 2       ;BACKGROUND COLOR FOR GRAPHICS	;BACKGROUND COLOR FOR GRAPHICS
 19)   FE09 00 00       		 @FCOLTM DEFS 2       ;TEMP FOREGROUND COLOR	;TEMP FOREGROUND COLOR
 20)   FE0B 00 00       		 @BCOLTM DEFS 2       ;TEMP BACKGROUND COLOR	;TEMP BACKGROUND COLOR
 21)   FE0D 00          		 @CURSORX DEFS 1       ;0-79	;0-79
 22)   FE0E 00          		 @CURSORY DEFS 1       ;0-47	;0-47
 23)   FE0F 00          		 @SCRLN DEFS 1        ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 24)   FE10 00          		 @LASTCHAR DEFS 1      ;	;
 25)   FE11 00          		 @CURSSTAT DEFS 1       ;IF BIT 0 SET THEN SHOW ELSE HIDE,IF BIT 1 SET THEN VISIBLE ELSE HIDDEN	;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN
 26)   FE12 00 00       		 @EDPTR DEFS 2	;
 27)   FE14 00          		 @OPTVAL DEFS 1	;
 28)   FE15 00          		 @INKEY DEFS 1	;
 29)   FE16 00          		 @VDUMODE DEFS 1       ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 30)   FE17 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE23 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE27 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE33 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 31)   FE37 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE43 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE47 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE53 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 32)   FE57 00 00       		 @GR_LASTX3 DEFS 2	;
 33)   FE59 00 00       		 @GR_LASTY3 DEFS 2	;
 34)   FE5B 00 00       		 @GR_LASTX2 DEFS 2	;
 35)   FE5D 00 00       		 @GR_LASTY2 DEFS 2	;
 36)   FE5F 00 00       		 @GR_LASTX DEFS 2	;
 37)   FE61 00 00       		 @GR_LASTY DEFS 2	;
 38)   FE63 00 00       		 @GR_PARAM1 DEFS 2	;
 39)   FE65 00 00       		 @GR_PARAM2 DEFS 2	;
 40)   FE67 00 00       		 @GR_PARAM3 DEFS 2	;
 41)   FE69 00 00       		 @GR_PARAM4 DEFS 2	;
 43)   FE6B 00 00       		 @FILL_X DEFS 2	;
 44)   FE6D 00 00       		 @FILL_Y DEFS 2	;
 45)   FE6F 00 00       		 @FILL_L DEFS 2	;
 46)   FE71 00 00       		 @FILL_X1 DEFS 2	;
 47)   FE73 00 00       		 @FILL_X2 DEFS 2	;
 48)   FE75 00 00       		 @FILL_DY DEFS 2	;
 49)   FE77 00 00       		 @FILL_Q DEFS 2        ;START OF QUEUE	;START OF QUEUE
 50)   FE79 00 00       		 @FILL_IDX DEFS 2       ;INDEX OF QUEUE	;INDEX OF QUEUE
 51)   FE7B 00 00       		 @FILL_PY DEFS 2       ;FOR PUSH/POP	;FOR PUSH/POP
 52)   FE7D 00 00       		 @FILL_PXL DEFS 2	;
 53)   FE7F 00 00       		 @FILL_PXR DEFS 2	;
 54)   FE81 00 00       		 @FILL_PDY DEFS 2	;
 55)   FE83 00 00       		 @FILL_OV DEFS 2       ;OLD COLOR	;OLD COLOR
 56)   FE85 00 00       		 @FILL_OLDSP DEFS 2      ; OLD SP	; OLD SP
 57)   FE87 00          		 @LCD_DSPCTRL DEFS 1      ;LCD I2C 16X2	;LCD I2C 16X2
 58)   FE88 00          		 @LCD_DSPMODE DEFS 1      ;LCD I2C 16X2	;LCD I2C 16X2
 59)   FE89 00          		 @LCD_STSMASK DEFS 1      ;LCD I2C 16X2 	;LCD I2C 16X2
 60)   FE8A 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE8E 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE92 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE96 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE9A 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 61)   FE9E 00 00 00 00 		 @TIMMSG  DEFS 20       ;DEFM '10/10/2020 12:43:45'DB 0	;DEFM '10/10/2020 12:43:45'DB 0
 61)   FEA2 00 00 00 00 		 @TIMMSG  DEFS 20       ;DEFM '10/10/2020 12:43:45'DB 0	;DEFM '10/10/2020 12:43:45'DB 0
 61)   FEA6 00 00 00 00 		 @TIMMSG  DEFS 20       ;DEFM '10/10/2020 12:43:45'DB 0	;DEFM '10/10/2020 12:43:45'DB 0
 61)   FEAA 00 00 00 00 		 @TIMMSG  DEFS 20       ;DEFM '10/10/2020 12:43:45'DB 0	;DEFM '10/10/2020 12:43:45'DB 0
 61)   FEAE 00 00 00 00 		 @TIMMSG  DEFS 20       ;DEFM '10/10/2020 12:43:45'DB 0	;DEFM '10/10/2020 12:43:45'DB 0
 62)   FEB2 00          		 @FFSTAT DEFS 1        ;FOR OUTPUT FLIP FLOPS DEVEPR,DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 63)   FEB3 00          		 @KEYCTR DEFS 1        ;FOR USB KEYBOARD	;FOR USB KEYBOARD
 64)   FEB4 00          		 @SERERR DEFS 1       ;	;
 65)   FEB5 00          		 @SERER2 DEFS 1        ;AT RAM ADDRESS	;AT RAM ADDRESS
 66)   FEB6 00          		 @DISPCT DEFS 1        ;	;
 67)   FEB7 00          		 @SCRNST DEFS 1       ;SCREEN STATUS BIT 0 ON/OFF LCD,BIT 1 ON/OFF VGA	;SCREEN STATUS BIT 0 ON/OFF LCD, BIT 1 ON/OFF VGA
 68)   FEB8 00          		 @LCDCX DEFS 1        ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 69)   FEB9 00          		 @LCDCY DEFS 1        ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 70)   FEBA 00 00       		 @PRGEX DEFS 2        ;2 BYTES	;2 BYTES
 71)   FEBC 00          		 @TVSTAT DEFS 1        ;1 BYTE	;1 BYTE
 72)   FEBD 00 00 00 00 		 @TIMECTR DEFS 4	;
 73)   FEC1 00          		 @INT2TE DEFS 1	;
 74)   FEC2 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FEC6 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FECA 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FECE 00          		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 75)   FECF 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FED3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FED7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEDB 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEDF 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEE3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEE7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEEB 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEEF 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEF3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 76)   FEF7 00 00 00 00 		 @STRGCMD DEFS 4	;
 77)   FEFB 00          		 @FID DEFS 1	;
 78)   FEFC 00          		 @SPC DEFS 1	;
 79)   FEFD 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 79)   FF01 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 80)   FF05 00 00 00 00 		 @TMPG  DEFS 4  ;TEMP PAGE FOR VIDEO VGA	;TEMP PAGE FOR VIDEO VGA
 81)   FF09 00 00 00 00 		 @PGSEM DEFS 4  ;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS	;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS
 83)   FF0D 00          		 @VGAFCOL DEFS 1  ;VGA FORE COLOR	;VGA FORE COLOR
 84)   FF0E 00          		 @VGABCOL DEFS 1  ;VGA BACK COLOR	;VGA BACK COLOR
 85)   FF0F 00          		 @VGATX_X DEFS 1  ;VGA CURRENT X POS	;VGA CURRENT X POS
 86)   FF10 00          		 @VGATX_Y DEFS 1  ;VGA CUR Y POS	;VGA CUR Y POS
 87)   FF11 00          		 @VGAMAXX DEFS 1  ;MAX HORZ CHARS	;MAX HORZ CHARS
 88)   FF12 00          		 @VGAMAXY DEFS 1  ;MAX VERT LINES	;MAX VERT LINES
 89)   FF13 00          		 @VGATMPC DEFS 1  ;TMP CHAR FOR CURSOR	;TMP CHAR FOR CURSOR
 90)   FF14 00          		 @VGABUF  DEFS 1  ;BUFFER TO WRITE-BIT 0 TO SELECT	;BUFFER TO WRITE - BIT 0 TO SELECT
 91)   FF15 00 00       		 @VGASTADR DEFS 2 ;START ADDRESS TO CALCULATE TEXT OUTPUT	;START ADDRESS TO CALCULATE TEXT OUTPUT
 93)   FF17 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF1B 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF1F 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF23 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF27 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF2B 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF2F 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF33 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF37 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF3B 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF3F 00 00       		 @COMDGET DEFS 2  ;OS COMDGET ADDRESS (CHANGE THIS IN BASIC TO RETURN THERE)	;OS COMDGET ADDRESS (CHANGE THIS IN BASIC TO RETURN THERE)
 96)   FF41 00 00 00 00 		 @B2DINV DEFS 8  ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 96)   FF45 00 00 00 00 		 @B2DINV DEFS 8  ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 97)   FF49 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF4D 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF51 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF55 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF59 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 98)   FF5D 00          		 @B2DEND DEFS 1  ;0 FOR TERMINATE THE STRING	;0 FOR TERMINATE THE STRING
 99)   FF5E 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
 99)   FF62 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
 99)   FF66 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
 99)   FF6A 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
100)   FF6E 00          		 @DISPEN DEFS 1  ;BIT 0 = LCD OFF/ON BIT 1 = VGA OFF/ON	;BIT 0 = LCD OFF/ON BIT 1 = VGA OFF/ON
101)   FF6F 00          		 @RNDseed DEFS 1  ;RANDOM SEED	;RANDOM SEED
103)   FF70 00          		 @KBDFLAG DEFS 1  ;KEYB FLAG	;KEYB FLAG
104)   FF71 00          		 @LASTKEY DEFS 1  ;LAST KEY PRESSED	;LAST KEY PRESSED
105)   FF72 00          		 @MENUVCLR DEFS 1 ;MENU VGA COLOR FORE AND BACK HI NIBBLE IS BACKGROUND	;MENU VGA COLOR FORE AND BACK HI NIBBLE IS BACKGROUND
106)   FF73 00 00       		 @MENULFORE DEFS 2 ;MENU LCD COLOR FOREGROUND	;MENU LCD COLOR FOREGROUND
107)   FF75 00 00       		 @MENULBACK DEFS 2 ;MENU LCD COLOR BACKGROUND	;MENU LCD COLOR BACKGROUND
111)   FF77 00 00       		               DEFS 2	;
112)   FF79 00 00       		               DEFS 2	;
113)   FF7B 00 00       		               DEFS 2	;
114)   FF7D 00 00       		               DEFS 2	;
116)   FF7F 00          		               DEFS 1	;
117)   FF80 00          		               DEFS 1	;
118)   FF81 00          		               DEFS 1	;
119)   FF82 00          		               DEFS 1	;
120)   FF83 00          		@CHANST:       DEFS 1    ;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED                	;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED
