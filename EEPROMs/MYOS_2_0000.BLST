  5)   0000 00          		 NOP	;
  6)   0001 C3 00 02    		 JP START	;
  7)   0004 C3 AE 02    		 JP MENU	;
  8)   0007 25          		 VERSION DEFB $25 ; AT ADDR=7 VER 2.4	; AT ADDR=7 VER 2.4
  9)   0008 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   000C 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0010 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0014 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0018 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   001C 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0020 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0024 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0028 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   002C 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0030 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0034 00 00 00 00 		 DS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
 12)   0038 C3 45 05    		 JP INTSER	;
 15)   003B 00 00 00 00 		 ALIGN 256	;
 15)   003F 00 00 00 00 		 ALIGN 256	;
 15)   0043 00 00 00 00 		 ALIGN 256	;
 15)   0047 00 00 00 00 		 ALIGN 256	;
 15)   004B 00 00 00 00 		 ALIGN 256	;
 15)   004F 00 00 00 00 		 ALIGN 256	;
 15)   0053 00 00 00 00 		 ALIGN 256	;
 15)   0057 00 00 00 00 		 ALIGN 256	;
 15)   005B 00 00 00 00 		 ALIGN 256	;
 15)   005F 00 00 00 00 		 ALIGN 256	;
 15)   0063 00 00 00 00 		 ALIGN 256	;
 15)   0067 00 00 00 00 		 ALIGN 256	;
 15)   006B 00 00 00 00 		 ALIGN 256	;
 15)   006F 00 00 00 00 		 ALIGN 256	;
 15)   0073 00 00 00 00 		 ALIGN 256	;
 15)   0077 00 00 00 00 		 ALIGN 256	;
 15)   007B 00 00 00 00 		 ALIGN 256	;
 15)   007F 00 00 00 00 		 ALIGN 256	;
 15)   0083 00 00 00 00 		 ALIGN 256	;
 15)   0087 00 00 00 00 		 ALIGN 256	;
 15)   008B 00 00 00 00 		 ALIGN 256	;
 15)   008F 00 00 00 00 		 ALIGN 256	;
 15)   0093 00 00 00 00 		 ALIGN 256	;
 15)   0097 00 00 00 00 		 ALIGN 256	;
 15)   009B 00 00 00 00 		 ALIGN 256	;
 15)   009F 00 00 00 00 		 ALIGN 256	;
 15)   00A3 00 00 00 00 		 ALIGN 256	;
 15)   00A7 00 00 00 00 		 ALIGN 256	;
 15)   00AB 00 00 00 00 		 ALIGN 256	;
 15)   00AF 00 00 00 00 		 ALIGN 256	;
 15)   00B3 00 00 00 00 		 ALIGN 256	;
 15)   00B7 00 00 00 00 		 ALIGN 256	;
 15)   00BB 00 00 00 00 		 ALIGN 256	;
 15)   00BF 00 00 00 00 		 ALIGN 256	;
 15)   00C3 00 00 00 00 		 ALIGN 256	;
 15)   00C7 00 00 00 00 		 ALIGN 256	;
 15)   00CB 00 00 00 00 		 ALIGN 256	;
 15)   00CF 00 00 00 00 		 ALIGN 256	;
 15)   00D3 00 00 00 00 		 ALIGN 256	;
 15)   00D7 00 00 00 00 		 ALIGN 256	;
 15)   00DB 00 00 00 00 		 ALIGN 256	;
 15)   00DF 00 00 00 00 		 ALIGN 256	;
 15)   00E3 00 00 00 00 		 ALIGN 256	;
 15)   00E7 00 00 00 00 		 ALIGN 256	;
 15)   00EB 00 00 00 00 		 ALIGN 256	;
 15)   00EF 00 00 00 00 		 ALIGN 256	;
 15)   00F3 00 00 00 00 		 ALIGN 256	;
 15)   00F7 00 00 00 00 		 ALIGN 256	;
 15)   00FB 00 00 00 00 		 ALIGN 256	;
 15)   00FF 00          		 ALIGN 256	;
 18)   0100 C3 09 1E    		     JP MYOS_CLRSCN	;
 19)   0103 C3 0C 1E    		     JP MYOS_PUTIME	;
 20)   0106 C3 1D 1E    		     JP MYOS_GETIME	;
 21)   0109 C3 2E 1E    		     JP MYOS_PUTCSR	;
 22)   010C C3 40 1E    		     JP MYOS_GETCSR	;
 23)   010F C3 4F 1E    		     JP MYOS_OSRDCH	;
 24)   0112 C3 0C 20    		     JP MYOS_PROMPT	;
 25)   0115 C3 5A 1E    		     JP MYOS_OSWRCH	;
 26)   0118 C3 3A 20    		     JP MYOS_OSKEY	;
 27)   011B C3 76 20    		     JP MYOS_OSINIT	;
 28)   011E C3 34 25    		     JP MYOS_OSLINE	;
 29)   0121 C3 41 21    		     JP MYOS_OSCLI	;
 30)   0124 C3 4D 24    		     JP MYOS_OSBPUT 	;
 31)   0127 C3 5D 24    		     JP MYOS_OSBGET 	;
 32)   012A C3 8A 24    		     JP MYOS_OSSTAT 	;
 33)   012D C3 85 24    		     JP MYOS_OSSHUT 	;
 34)   0130 C3 26 24    		     JP MYOS_OSOPEN 	;
 35)   0133 C3 91 24    		     JP MYOS_OSCALL 	;
 36)   0136 C3 71 1D    		     JP MYOS_OSSAVE 	;
 37)   0139 C3 B1 1D    		     JP MYOS_OSLOAD 	;
 38)   013C C3 77 24    		     JP MYOS_GETPTR 	;
 39)   013F C3 7C 24    		     JP MYOS_PUTPTR 	;
 40)   0142 C3 80 24    		     JP MYOS_GETEXT 	;
 41)   0145 C3 92 24    		     JP MYOS_RESET 	;
 42)   0148 C3 66 20    		     JP MYOS_TRAP	;
 43)   014B C3 69 20    		     JP MYOS_LTRAP  	;
 44)   014E C3 9A 24    		     JP MYOS_CLG	;
 45)   0151 C3 B2 24    		     JP MYOS_COLOUR	;
 46)   0154 C3 BD 24    		     JP MYOS_DRAW	;
 47)   0157 C3 E3 24    		     JP MYOS_ENVEL	;
 48)   015A C3 A6 24    		     JP MYOS_GCOL	;
 49)   015D C3 93 24    		     JP MYOS_MODE	;
 50)   0160 C3 C7 24    		     JP MYOS_MOVE	;
 51)   0163 C3 D1 24    		     JP MYOS_PLOT	;
 52)   0166 C3 E3 24    		     JP MYOS_SOUND	;
 53)   0169 C3 E3 24    		     JP MYOS_ADVAL	;
 54)   016C C3 DB 24    		     JP MYOS_POINT	;
 55)   016F C3 E9 24    		     JP MYOS_GETIMS	;
 56)   0172 C3 E3 24    		     JP MYOS_PUTIMS        	;
 58)   0175 00 00 00 00 		 ALIGN 256     	;
 58)   0179 00 00 00 00 		 ALIGN 256     	;
 58)   017D 00 00 00 00 		 ALIGN 256     	;
 58)   0181 00 00 00 00 		 ALIGN 256     	;
 58)   0185 00 00 00 00 		 ALIGN 256     	;
 58)   0189 00 00 00 00 		 ALIGN 256     	;
 58)   018D 00 00 00 00 		 ALIGN 256     	;
 58)   0191 00 00 00 00 		 ALIGN 256     	;
 58)   0195 00 00 00 00 		 ALIGN 256     	;
 58)   0199 00 00 00 00 		 ALIGN 256     	;
 58)   019D 00 00 00 00 		 ALIGN 256     	;
 58)   01A1 00 00 00 00 		 ALIGN 256     	;
 58)   01A5 00 00 00 00 		 ALIGN 256     	;
 58)   01A9 00 00 00 00 		 ALIGN 256     	;
 58)   01AD 00 00 00 00 		 ALIGN 256     	;
 58)   01B1 00 00 00 00 		 ALIGN 256     	;
 58)   01B5 00 00 00 00 		 ALIGN 256     	;
 58)   01B9 00 00 00 00 		 ALIGN 256     	;
 58)   01BD 00 00 00 00 		 ALIGN 256     	;
 58)   01C1 00 00 00 00 		 ALIGN 256     	;
 58)   01C5 00 00 00 00 		 ALIGN 256     	;
 58)   01C9 00 00 00 00 		 ALIGN 256     	;
 58)   01CD 00 00 00 00 		 ALIGN 256     	;
 58)   01D1 00 00 00 00 		 ALIGN 256     	;
 58)   01D5 00 00 00 00 		 ALIGN 256     	;
 58)   01D9 00 00 00 00 		 ALIGN 256     	;
 58)   01DD 00 00 00 00 		 ALIGN 256     	;
 58)   01E1 00 00 00 00 		 ALIGN 256     	;
 58)   01E5 00 00 00 00 		 ALIGN 256     	;
 58)   01E9 00 00 00 00 		 ALIGN 256     	;
 58)   01ED 00 00 00 00 		 ALIGN 256     	;
 58)   01F1 00 00 00 00 		 ALIGN 256     	;
 58)   01F5 00 00 00 00 		 ALIGN 256     	;
 58)   01F9 00 00 00 00 		 ALIGN 256     	;
 58)   01FD 00 00 00    		 ALIGN 256     	;
 39)   0200 F3          		@START: DI	;
 49)   0201 C3 45 02    		 JP BOOT ;SKIP TESTING	;SKIP TESTING
 54)   0204 06 05       		CN1: LD B,5	;
 55)   0206 0E 00       		AGN1: LD C,0	;
 56)   0208 3E 00       		 LD A,0	;
 57)   020A ED 79       		 OUT (C),A	;
 58)   020C 0E 00       		 LD C,0	;
 59)   020E 3E FF       		 LD A,255	;
 60)   0210 ED 79       		 OUT (C),A	;
 61)   0212 10 F2       		 DJNZ AGN1	;
 66)   0214 11 01 00    		 LD DE,1	;
 67)   0217 3E 00       		 LD A,0 ;WRITE 0	;WRITE 0
 68)   0219 4F          		 LD C,A	;
 69)   021A 21 00 80    		 LD HL,RAMAD 	;
 70)   021D 06 08       		 LD B,8	;
 71)   021F 77          		AGN2: LD (HL),A	;
 72)   0220 4E          		 LD C,(HL)	;
 73)   0221 B9          		 CP C	;
 74)   0222 C2 3C 02    		 JP NZ, ERR	;
 75)   0225 19          		 ADD HL,DE	;
 76)   0226 C6 20       		 ADD A,32 ;WRITE +32	;WRITE +32
 77)   0228 4F          		 LD C,A	;
 78)   0229 10 F4       		 DJNZ AGN2	;
 80)   022B 06 05       		 LD B,5	;
 81)   022D 0E 08       		AGN3: LD C,00001000B ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
 82)   022F 3E 40       		 LD A,64	;
 83)   0231 ED 79       		 OUT (C),A	;
 84)   0233 C6 80       		 ADD A,128	;
 85)   0235 ED 79       		 OUT (C),A 	;
 86)   0237 10 F4       		 DJNZ AGN3  ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
 87)   0239 C3 45 02    		 JP BOOT	;
 90)   023C 0E 38       		ERR: LD C,00111000B ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
 91)   023E 3E 40       		 LD A,64	;
 92)   0240 ED 79       		 OUT (C),A	;
 94)   0242 C3 3C 02    		 JP ERR ;DO AGAIN PORT 1	;DO AGAIN PORT 1
101)   0245 F3          		@BOOT: DI	;
102)   0246 ED 56       		  IM 1 	;
103)   0248 31 FF FA    		 LD SP,STACKP 	;
104)   024B CD B6 03    		 CALL FF_CLR	;
105)   024E CD DE 03    		 CALL EPROMOFF	;
106)   0251 CD 4E 06    		 CALL KEYBDATON 	;
109)   0254 3E 0C       		  LD A,12    ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
110)   0256 CD B0 05    		 CALL RS_INI  ;RS232 INITIALIZE	;RS232 INITIALIZE
111)   0259 21 F6 04    		 LD HL,STR00	;
112)   025C CD D8 05    		 CALL RS_TXT	;
115)   025F CD 80 0B    		  CALL I2C_INIT     ;INITIALIZE I2C	;INITIALIZE I2C
116)   0262 CD 0C 0D    		  CALL DS1307_ADJUST_TEST   ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
117)   0265 CD E1 0D    		  CALL LCD16_INIT   ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
118)   0268 21 0A 04    		  LD HL,SVER	;
119)   026B CD 62 0E    		  CALL LCD16_PRINT  ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
122)   026E CD 5B 09    		  CALL STRG_INIT	;
123)   0271 21 2D 05    		 LD HL,STR001	;
124)   0274 CD D8 05    		 CALL RS_TXT	;
132)   0277 CD F5 0E    		  CALL LCD_INIT	;
133)   027A 21 00 00    		  LD HL,COL_BLACK	;
134)   027D 22 03 FE    		  LD (BCOLOR),HL	;
135)   0280 21 FF FF    		  LD HL,COL_WHITE	;
136)   0283 22 01 FE    		  LD (FCOLOR),HL	;
137)   0286 21 E3 04    		  LD HL,STRSCR 	;
138)   0289 CD D8 05    		  CALL RS_TXT	;
139)   028C CD 03 17    		  CALL LCD_CLRSCR  	;
140)   028F AF          		 XOR A	;
141)   0290 32 0F FE    		  LD (SCRLN),A   	;
142)   0293 3E 00       		  LD A,0	;
143)   0295 32 0D FE    		  LD (CURSORX),A	;
144)   0298 3E 00       		  LD A,0	;
145)   029A 32 0E FE    		  LD (CURSORY),A  	;
146)   029D 21 3F 04    		 LD HL,STR0    ;LCD INIT MSG ON 0,0	;LCD INIT MSG ON 0,0
147)   02A0 CD 43 17    		 CALL LCD_MSG	;
148)   02A3 3E 1E       		  LD A,30	;
149)   02A5 32 0D FE    		  LD (CURSORX),A 	;
150)   02A8 21 0A 04    		  LD HL,SVER	;
151)   02AB CD 43 17    		  CALL LCD_MSG  ;PRINT VERSION ON 30,0	;PRINT VERSION ON 30,0
159)   02AE AF          		@MENU: XOR A	;
160)   02AF 32 0F FE    		  LD (SCRLN),A	;
161)   02B2 21 B4 04    		 LD HL,STRMN	;
162)   02B5 CD D8 05    		 CALL RS_TXT ;OUTPUT MENU COMMANDS AT RS232 	;OUTPUT MENU COMMANDS AT RS232
163)   02B8 21 0C 05    		 LD HL,STR01	;
164)   02BB CD D8 05    		 CALL RS_TXT ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
171)   02BE 21 1A 04    		 LD HL,SMENU	;
172)   02C1 3E 05       		  LD A,5	;
173)   02C3 32 0D FE    		  LD (CURSORX),A	;
174)   02C6 3E 02       		  LD A,2	;
175)   02C8 32 0E FE    		  LD (CURSORY),A  	;
176)   02CB CD 43 17    		 CALL LCD_MSG	;
178)   02CE CD 0F 03    		 CALL GET_CHAR ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
181)   02D1 FE 55       		 CP 'U' ;UPLOAD PROGRAM	;UPLOAD PROGRAM
182)   02D3 CC 32 03    		 CALL Z, UPLOD	;
183)   02D6 FE 58       		 CP 'X'	;
184)   02D8 CA 24 03    		 JP Z,EXEC	;
185)   02DB FE 54       		 CP 'T'	;
186)   02DD CC 84 03    		 CALL Z,RSTST 	;
187)   02E0 FE 59       		 CP 'Y'	;
188)   02E2 CC 9A 03    		 CALL Z,RSTST2	;
189)   02E5 FE 48       		 CP 'H'	;
190)   02E7 CC A9 03    		 CALL Z,XMTST	;
191)   02EA FE 4A       		 CP 'J'	;
192)   02EC CC 69 03    		 CALL Z,DNLOD	;
195)   02EF FE 43       		 CP 'C'	;
196)   02F1 CC 03 17    		 CALL Z,LCD_CLRSCR	;
197)   02F4 FE 42       		 CP 'B'	;
198)   02F6 CA 00 40    		 JP Z,BBCBASIC	;
200)   02F9 C3 AE 02    		 JP MENU	;
207)   02FC CD 0A 25    		@GET_CHARNW: CALL CHKCURS	;
208)   02FF AF          		  XOR A 	;
210)   0300 CD 0B 06    		 CALL RS_KEYRD ;CHAR IN RS232?	;CHAR IN RS232?
211)   0303 28 04       		 JR Z,CNW_TST2 	;
212)   0305 CD E2 05    		 CALL RS_RX ; GET THAT CHAR	; GET THAT CHAR
213)   0308 C9          		 RET	;
217)   0309 CD 24 07    		 CALL READCHAR ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
218)   030C FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
229)   030E C9          		 RET	;
234)   030F CD 0A 25    		@GET_CHAR: CALL CHKCURS	;
235)   0312 AF          		 XOR A 	;
237)   0313 CD 0B 06    		 CALL RS_KEYRD ;CHAR IN RS232?	;CHAR IN RS232?
238)   0316 28 04       		 JR Z,CW_TST2	;
239)   0318 CD E2 05    		 CALL RS_RX ; GET THAT CHAR	; GET THAT CHAR
240)   031B C9          		 RET	;
244)   031C CD 24 07    		 CALL READCHAR ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
245)   031F FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
246)   0321 28 EC       		 JR Z,GET_CHAR	;
256)   0323 C9          		 RET	;
267)   0324 3E 05       		 LD A,5	;
268)   0326 CD 5B 26    		 CALL SCPRN  	;
270)   0329 11 A4 FE    		 LD DE,PRGEX	;
271)   032C 1A          		 LD A,(DE)	;
272)   032D 6F          		 LD L,A	;
273)   032E 13          		 INC DE	;
274)   032F 1A          		 LD A,(DE)	;
275)   0330 67          		 LD H,A	;
276)   0331 E9          		 JP (HL)	;
283)   0332 F3          		UPLOD: DI 	;
288)   0333 CD E2 05    		 CALL RS_RX ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
289)   0336 6F          		 LD L,A	;
290)   0337 CD E2 05    		 CALL RS_RX	;
291)   033A 67          		 LD H,A	;
292)   033B CD E2 05    		 CALL RS_RX ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
293)   033E 4F          		 LD C,A	;
294)   033F CD E2 05    		 CALL RS_RX	;
295)   0342 47          		 LD B,A	;
297)   0343 11 A4 FE    		 LD DE,PRGEX ;SAVE TO PRGEX THE PROG EXEC ADDR=HL	;SAVE TO PRGEX THE PROG EXEC ADDR=HL
298)   0346 7D          		 LD A,L	;
299)   0347 12          		 LD (DE),A	;
300)   0348 13          		 INC DE	;
301)   0349 7C          		 LD A,H	;
302)   034A 12          		 LD (DE),A	;
304)   034B FE 80       		 CP $80	;
305)   034D DC E6 03    		 CALL C,EPROMON ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
307)   0350 E5          		NORWR: PUSH HL	;
308)   0351 CD E2 05    		NXB: CALL RS_RX	;
309)   0354 77          		 LD (HL),A	;
310)   0355 23          		 INC HL	;
311)   0356 0B          		 DEC BC	;
312)   0357 78          		 LD A,B	;
313)   0358 B1          		 OR C	;
314)   0359 20 F6       		 JR NZ,NXB ;LOOP ALL BYTES 	;LOOP ALL BYTES
315)   035B CD DE 03    		 CALL EPROMOFF	;
320)   035E 3E 05       		 LD A,5 	;
321)   0360 CD 5B 26    		 CALL SCPRN  	;
322)   0363 CD 68 26    		 CALL DELAY	;
324)   0366 E1          		 POP HL	;
327)   0367 FB          		 EI	;
328)   0368 C9          		 RET	;
339)   0369 CD E2 05    		 CALL RS_RX ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
340)   036C 6F          		 LD L,A	;
341)   036D CD E2 05    		 CALL RS_RX	;
342)   0370 67          		 LD H,A	;
343)   0371 CD E2 05    		 CALL RS_RX ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
344)   0374 4F          		 LD C,A	;
345)   0375 CD E2 05    		 CALL RS_RX	;
346)   0378 47          		 LD B,A	;
348)   0379 7E          		NXB3: LD A,(HL)	;
349)   037A CD C9 05    		 CALL RS_TX ;SEND BYTE	;SEND BYTE
350)   037D 23          		 INC HL	;
351)   037E 0B          		 DEC BC	;
352)   037F 78          		 LD A,B	;
353)   0380 B1          		 OR C	;
354)   0381 20 F6       		 JR NZ,NXB3 ;LOOP ALL BYTES    	;LOOP ALL BYTES
355)   0383 C9          		 RET	;
357)   0384 00          		RSTST: NOP ;GET A KEY FROM RS232	;GET A KEY FROM RS232
358)   0385 06 0A       		 LD B,10	;
359)   0387 C5          		TEN: PUSH BC	;
360)   0388 CD E2 05    		 CALL RS_RX	;
362)   038B CD C9 05    		 CALL RS_TX ;SEND BACK THE CHAR	;SEND BACK THE CHAR
364)   038E 3E 20       		 LD A,' '	;
366)   0390 3E 52       		 LD A,'R'	;
369)   0392 CD 75 26    		 CALL DEL2	;
371)   0395 C1          		 POP BC	;
372)   0396 10 EF       		 DJNZ TEN	;
374)   0398 AF          		 XOR A	;
375)   0399 C9          		 RET	;
377)   039A 00          		RSTST2: NOP ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
378)   039B 06 FF       		 LD B,255	;
379)   039D C5          		TEN2: PUSH BC	;
380)   039E CD E2 05    		 CALL RS_RX	;
382)   03A1 CD C9 05    		 CALL RS_TX ;SEND BACK THE CHAR 	;SEND BACK THE CHAR
384)   03A4 C1          		 POP BC	;
385)   03A5 10 F6       		 DJNZ TEN2	;
386)   03A7 AF          		 XOR A	;
387)   03A8 C9          		 RET	;
390)   03A9 00          		XMTST: NOP ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
391)   03AA 06 FF       		 LD B,255	;
392)   03AC C5          		TEN3: PUSH BC	;
393)   03AD 78          		 LD A,B	;
394)   03AE CD C9 05    		 CALL RS_TX ;SEND THE BYTE	;SEND THE BYTE
395)   03B1 C1          		 POP BC	;
396)   03B2 10 F8       		 DJNZ TEN3	;
397)   03B4 AF          		 XOR A	;
398)   03B5 C9          		 RET	;
404)   03B6 AF          		 XOR A	;
405)   03B7 32 9D FE    		 LD (FFSTAT),A	;
406)   03BA C9          		 RET	;
409)   03BB 04          		@FF_OFF: INC B  ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
410)   03BC AF          		      XOR A	;
411)   03BD 37          		      SCF	;
412)   03BE 17          		SBAGN: RLA        ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
413)   03BF 10 FD       		      DJNZ SBAGN	;
414)   03C1 2F          		      CPL     ;INVERSE BITS ON A	;INVERSE BITS ON A
415)   03C2 47          		      LD B,A	;
416)   03C3 3A 9D FE    		      LD A,(FFSTAT)	;
417)   03C6 A0          		      AND B        ;ZERO THE BIT	;ZERO THE BIT
418)   03C7 32 9D FE    		      LD (FFSTAT),A	;
419)   03CA D3 08       		      OUT (DEVFFS),A	;
420)   03CC C9          		      RET	;
423)   03CD 04          		@FF_ON: INC B  ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
424)   03CE AF          		      XOR A	;
425)   03CF 37          		      SCF	;
426)   03D0 17          		SBAGN: RLA        ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
427)   03D1 10 FD       		      DJNZ SBAGN	;
428)   03D3 47          		      LD B,A	;
429)   03D4 3A 9D FE    		      LD A,(FFSTAT)	;
430)   03D7 B0          		      OR B        ;SET THE BIT	;SET THE BIT
431)   03D8 32 9D FE    		      LD (FFSTAT),A	;
432)   03DB D3 08       		      OUT (DEVFFS),A	;
433)   03DD C9          		      RET	;
435)   03DE C5          		@EPROMOFF: PUSH BC	;
436)   03DF 06 00       		      LD B,0	;
437)   03E1 CD BB 03    		      CALL FF_OFF	;
438)   03E4 C1          		      POP BC	;
439)   03E5 C9          		      RET	;
441)   03E6 C5          		@EPROMON: PUSH BC	;
442)   03E7 06 00       		     LD B,0	;
443)   03E9 CD CD 03    		     CALL FF_ON	;
444)   03EC C1          		     POP BC	;
445)   03ED C9          		     RET	;
451)   03EE F5          		SOUTAS: PUSH AF  ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
452)   03EF 26 00       		 LD H,0	;
453)   03F1 6F          		 LD L,A	;
454)   03F2 11 AC FE    		 LD DE,MYNUM	;
455)   03F5 CD 8F 26    		 CALL OUTASC	;
457)   03F8 3E 0A       		 LD A,10	;
458)   03FA 12          		 LD (DE),A	;
459)   03FB 13          		 INC DE	;
460)   03FC 3E 0D       		 LD A,13	;
461)   03FE 12          		 LD (DE),A	;
462)   03FF 13          		 INC DE	;
463)   0400 AF          		 XOR A	;
464)   0401 12          		 LD (DE),A	;
466)   0402 21 AC FE    		 LD HL,MYNUM	;
467)   0405 CD D8 05    		 CALL RS_TXT	;
468)   0408 F1          		 POP AF	;
469)   0409 C9          		 RET	;
474)   040A 41 54 4C 41 		SVER DEFM "ATLAS OS V "	;
474)   040E 53 20 4F 53 		SVER DEFM "ATLAS OS V "	;
474)   0412 20 56 20    		SVER DEFM "ATLAS OS V "	;
475)   0415 30 2E 32 36 		 DB MJVER,'.',MNVER1,MNVER2	;
476)   0419 00          		 DB 0	;
478)   041A 55 3A 55 50 		SMENU DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
478)   041E 20 4A 3A 44 		SMENU DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
478)   0422 4E 20 58 3A 		SMENU DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
478)   0426 52 55 4E 20 		SMENU DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
478)   042A 54 59 48 3A 		SMENU DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
478)   042E 52 53 20 43 		SMENU DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
478)   0432 3A 43 4C 53 		SMENU DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
478)   0436 20 42 3A 42 		SMENU DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
478)   043A 41 53 49 43 		SMENU DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
479)   043E 00          		 DB 0	;
481)   043F 4C 43 44 20 		STR0 DEFM "LCD INITIALIZED"	;
481)   0443 49 4E 49 54 		STR0 DEFM "LCD INITIALIZED"	;
481)   0447 49 41 4C 49 		STR0 DEFM "LCD INITIALIZED"	;
481)   044B 5A 45 44    		STR0 DEFM "LCD INITIALIZED"	;
482)   044E 00          		 DB 0	;
484)   044F 52 53 32 33 		STR1 DEFM "RS232 INIT"	;
484)   0453 32 20 49 4E 		STR1 DEFM "RS232 INIT"	;
484)   0457 49 54       		STR1 DEFM "RS232 INIT"	;
485)   0459 00          		 DB 0	;
487)   045A 50 52 4F 47 		STR2 DEFM "PROGRAM HALTED"	;
487)   045E 52 41 4D 20 		STR2 DEFM "PROGRAM HALTED"	;
487)   0462 48 41 4C 54 		STR2 DEFM "PROGRAM HALTED"	;
487)   0466 45 44       		STR2 DEFM "PROGRAM HALTED"	;
488)   0468 00          		 DB 0	;
490)   0469 57 41 49 54 		STR02 DEFM "WAITING..."	;
490)   046D 49 4E 47 2E 		STR02 DEFM "WAITING..."	;
490)   0471 2E 2E       		STR02 DEFM "WAITING..."	;
491)   0473 00          		 DB 0	;
493)   0474 50 52 47 20 		DATTR DEFM "PRG TRANSFERED"	;
493)   0478 54 52 41 4E 		DATTR DEFM "PRG TRANSFERED"	;
493)   047C 53 46 45 52 		DATTR DEFM "PRG TRANSFERED"	;
493)   0480 45 44       		DATTR DEFM "PRG TRANSFERED"	;
494)   0482 00          		 DB 0	;
496)   0483 52 45 43 45 		DATST DEFM "RECEIVING..."	;
496)   0487 49 56 49 4E 		DATST DEFM "RECEIVING..."	;
496)   048B 47 2E 2E 2E 		DATST DEFM "RECEIVING..."	;
497)   048F 00          		 DB 0 	;
499)   0490 50 52 47 20 		SPRGX DEFM "PRG EXECUTE"	;
499)   0494 45 58 45 43 		SPRGX DEFM "PRG EXECUTE"	;
499)   0498 55 54 45    		SPRGX DEFM "PRG EXECUTE"	;
500)   049B 00          		 DB 0	;
502)   049C 49 4D 41 47 		STIMG DEFM "IMAGE COPY"	;
502)   04A0 45 20 43 4F 		STIMG DEFM "IMAGE COPY"	;
502)   04A4 50 59       		STIMG DEFM "IMAGE COPY"	;
503)   04A6 00          		 DB 0	;
505)   04A7 53 43 52 45 		TXTMES DEFM "SCREEN READY"	;
505)   04AB 45 4E 20 52 		TXTMES DEFM "SCREEN READY"	;
505)   04AF 45 41 44 59 		TXTMES DEFM "SCREEN READY"	;
506)   04B3 00          		 DB 0	;
508)   04B4 55 49 3A 55 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04B8 50 20 4A 3A 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04BC 44 4E 20 58 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04C0 3A 52 55 4E 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04C4 20 54 59 48 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04C8 3A 52 53 20 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04CC 53 3A 44 49 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04D0 53 50 20 43 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04D4 3A 43 4C 53 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04D8 20 42 3A 42 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
508)   04DC 41 53 49 43 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
509)   04E0 0A 0D 00    		 DB 10,13,0	;
511)   04E3 43 4C 45 41 		STRSCR DEFM "CLEARING SCREEN."	;
511)   04E7 52 49 4E 47 		STRSCR DEFM "CLEARING SCREEN."	;
511)   04EB 20 53 43 52 		STRSCR DEFM "CLEARING SCREEN."	;
511)   04EF 45 45 4E 2E 		STRSCR DEFM "CLEARING SCREEN."	;
512)   04F3 0A 0D 00    		 DB 10,13,0	;
514)   04F6 0A 0D       		STR00 DB 10,13	;
515)   04F8 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
515)   04FC 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
515)   0500 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
515)   0504 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
515)   0508 44          		 DEFM "RS232 INITIALIZED"	;
516)   0509 0A 0D 00    		 DB 10,13,0	;
518)   050C 0A 0D       		STR01 DB 10,13	;
519)   050E 57 41 49 54 		 DEFM "WAITING..."	;
519)   0512 49 4E 47 2E 		 DEFM "WAITING..."	;
519)   0516 2E 2E       		 DEFM "WAITING..."	;
520)   0518 0A 0D 00    		 DB 10,13,0	;
521)   051B 00          		 DB 0	;
523)   051C 0A 0D       		STR06 DB 10,13	;
524)   051E 4B 45 59 20 		 DEFM "KEY PRESSED"	;
524)   0522 50 52 45 53 		 DEFM "KEY PRESSED"	;
524)   0526 53 45 44    		 DEFM "KEY PRESSED"	;
525)   0529 0A 0D 00    		 DB 10,13,0	;
526)   052C 00          		 DB 0	;
528)   052D 0A 0D       		STR001 DB 10,13	;
529)   052F 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
529)   0533 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
529)   0537 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
529)   053B 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
529)   053F 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
530)   0542 0A 0D 00    		 DB 10,13,0	;
  4)   0545 E5          		          PUSH HL	;
  5)   0546 F5          		          PUSH AF	;
  6)   0547 C5          		          PUSH BC	;
  7)   0548 DD E5       		          PUSH IX	;
 11)   054A DB 18       		          IN A,(DEVINP)	;
 12)   054C 2F          		          CPL	;
 13)   054D E6 07       		          AND 0X07 ;BITS 0-2  	;BITS 0-2
 14)   054F 3D          		          DEC A  ;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE	;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE
 15)   0550 DD 21 6E 05 		          LD IX,MYINTADDR                    	;
 16)   0554 06 00       		          LD B,0	;
 17)   0556 4F          		          LD C,A	;
 18)   0557 CB 21       		          SLA C ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 19)   0559 DD 09       		          ADD IX,BC	;
 20)   055B DD 6E 00    		          LD L,(IX)	;
 21)   055E DD 66 01    		          LD H,(IX+1)	;
 22)   0561 01 66 05    		          LD BC,IS_EX	;
 23)   0564 C5          		          PUSH BC ;RETURN ADDRESS	;RETURN ADDRESS
 24)   0565 E9          		          JP (HL) ;JP TO HL	;JP TO HL
 26)   0566 DD E1       		IS_EX:    POP IX	;
 27)   0568 C1          		   POP BC	;
 28)   0569 F1          		   POP AF	;
 29)   056A E1          		          POP HL	;
 30)   056B FB          		          EI	;
 31)   056C ED 4D       		          RETI	;
 33)   056E 8A 05       		MYINTADDR DEFW INT_TIMER	;
 34)   0570 7E 05       		   DEFW SAVETE	;
 35)   0572 87 05       		   DEFW DOCLRINT	;
 36)   0574 87 05       		   DEFW DOCLRINT	;
 37)   0576 87 05       		   DEFW DOCLRINT	;
 38)   0578 87 05       		   DEFW DOCLRINT	;
 39)   057A 87 05       		   DEFW DOCLRINT	;
 40)   057C 87 05       		   DEFW DOCLRINT                    	;
 42)   057E D3 40       		SAVETE   OUT (DEVINT),A  ;CLEAR THE INTERRUPT 	;CLEAR THE INTERRUPT
 43)   0580 21 AB FE    		   LD HL,INT2TE    ;TEARING EFFECT	;TEARING EFFECT
 44)   0583 3E 01       		   LD A,1	;
 45)   0585 77          		   LD (HL),A;	;
 46)   0586 C9          		   RET	;
 49)   0587 D3 40       		DOCLRINT  OUT (DEVINT),A	;
 50)   0589 C9          		   RET	;
 52)   058A D3 40       		INT_TIMER: OUT (DEVINT),A	;
 53)   058C 21 A7 FE    		          LD HL,TIMECTR	;
 54)   058F 34          		          INC (HL)  	;
 55)   0590 7E          		          LD A,(HL)	;
 56)   0591 FE 00       		          CP 0	;
 57)   0593 C0          		          RET NZ	;
 58)   0594 23          		          INC HL	;
 59)   0595 34          		          INC (HL)  	;
 60)   0596 7E          		          LD A,(HL)	;
 61)   0597 FE 00       		          CP 0	;
 62)   0599 C0          		          RET NZ	;
 63)   059A 23          		          INC HL	;
 64)   059B 34          		          INC (HL)  	;
 65)   059C 7E          		          LD A,(HL)	;
 66)   059D FE 00       		          CP 0	;
 67)   059F C0          		          RET NZ	;
 68)   05A0 23          		          INC HL	;
 69)   05A1 34          		          INC (HL)  	;
 70)   05A2 7E          		          LD A,(HL)	;
 71)   05A3 FE 00       		          CP 0	;
 72)   05A5 C0          		          RET NZ  	;
 74)   05A6 21 00 00    		          LD HL,0	;
 75)   05A9 22 A7 FE    		          LD (TIMECTR),HL	;
 76)   05AC 22 A9 FE    		          LD (TIMECTR+2),HL	;
 77)   05AF C9          		          RET	;
 15)   05B0 	            		 RBR EQU DEVSER+0 ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   05B0 	            		 THR EQU DEVSER+0 ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   05B0 	            		 IER EQU DEVSER+1 ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   05B0 	            		 IIR EQU DEVSER+2 ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   05B0 	            		 FCR EQU DEVSER+2 ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   05B0 	            		 LCR EQU DEVSER+3 ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   05B0 	            		 MCR EQU DEVSER+4 ;MODEM CONTROL REGISTER 	;MODEM CONTROL REGISTER
 44)   05B0 	            		 LSR EQU DEVSER+5 ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   05B0 	            		 MSR EQU DEVSER+6 ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   05B0 	            		 SCR EQU DEVSER+7 ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   05B0 	            		 DLL EQU DEVSER+0 ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   05B0 	            		 DLM EQU DEVSER+1 ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   05B0 F5          		RS_INI: PUSH AF	;
 63)   05B1 3E 80       		 LD     A,$80           ; Mask to set DLAB on	; Mask to set DLAB on
 64)   05B3 D3 23       		 OUT    (LCR),A         ; Send to LINe Control Register 	; Send to LINe Control Register
 73)   05B5 F1          		  POP AF	;
 74)   05B6 D3 20       		 OUT    (DLL),A         ; Set LSB of divisor	; Set LSB of divisor
 75)   05B8 3E 00       		 LD     A,00            ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   05BA D3 21       		 OUT    (DLM),A         ; Send to the MSB register	; Send to the MSB register
 77)   05BC 3E 03       		 LD     A,$03           ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   05BE D3 23       		 OUT    (LCR),A         ; Write new value to LCR	; Write new value to LCR
 80)   05C0 3E 00       		 LD A, 0       	;
 81)   05C2 D3 22       		 OUT  (FCR),A      ;//was commented	;//was commented
 82)   05C4 3E 00       		 LD     A,$00           ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   05C6 D3 21       		 OUT    (IER),A         ; Send to INterrupt Enable Register 	; Send to INterrupt Enable Register
 84)   05C8 C9          		 RET	;
 87)   05C9 CD CF 05    		RS_TX: CALL   RSTXRD	;
 88)   05CC D3 20       		       OUT     (THR),A	;
 90)   05CE C9          		       RET	;
 94)   05CF F5          		RSTXRD: PUSH   AF	;
 95)   05D0 DB 25       		RSTXLP: IN     A,(LSR)         ; fetch the control register	; fetch the control register
 96)   05D2 CB 6F       		       BIT     5,A             ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   05D4 28 FA       		       JR      Z,RSTXLP	;
 98)   05D6 F1          		       POP     AF	;
 99)   05D7 C9          		       RET  	;
102)   05D8 7E          		RS_TXT: LD A,(HL)	;
103)   05D9 23          		 INC HL 	;
104)   05DA FE 00       		 CP 0	;
105)   05DC C8          		 RET Z	;
106)   05DD CD C9 05    		       CALL RS_TX	;
107)   05E0 18 F6       		 JR RS_TXT	;
114)   05E2 F3          		RS_RX: DI	;
115)   05E3 3E 01       		       LD A,1     ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   05E5 D3 24       		       OUT (MCR),A	;
117)   05E7 CD 00 06    		 CALL   RSRXRD              	;
118)   05EA AF          		RS_GTCH: XOR A     ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   05EB D3 24       		       OUT (MCR),A        	;
121)   05ED DB 20       		 IN A,(RBR)	;
122)   05EF FB          		 EI	;
123)   05F0 C9          		       RET	;
125)   05F1 3E 01       		RS_RXNW:LD A,1    ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   05F3 D3 24       		       OUT (MCR),A	;
127)   05F5 DB 25       		 IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
128)   05F7 CB 47       		       BIT     0,A                    	;
129)   05F9 28 03       		       JR Z,RS_NOCHAR	;
130)   05FB F3          		       DI	;
131)   05FC 18 EC       		       JR RS_GTCH        	;
132)   05FE AF          		RS_NOCHAR: XOR A ;RETURN ZERO	;RETURN ZERO
133)   05FF C9          		       RET	;
140)   0600 F3          		RSRXRD: DI	;
141)   0601 F5          		       PUSH    AF	;
142)   0602 DB 25       		RSRXLP: IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
143)   0604 CB 47       		       BIT     0,A             ; bit will be set if UART has data	; bit will be set if UART has data
144)   0606 28 FA       		       JR      Z,RSRXLP	;
145)   0608 F1          		       POP     AF	;
146)   0609 FB          		       EI	;
147)   060A C9          		       RET  	;
151)   060B DB 25       		RS_KEYRD:IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
152)   060D CB 47       		        BIT     0,A             ; bit will be set if UART has data        	; bit will be set if UART has data
153)   060F C9          		        RET 	;
155)   0610 F5          		SHLCD: PUSH AF	;
157)   0611 F1          		 POP AF	;
159)   0612 C9          		 RET	;
163)   0613 F5          		CHKERR: PUSH AF	;
164)   0614 E5          		 PUSH HL	;
165)   0615 C5          		 PUSH BC	;
166)   0616 DB 25       		 IN A,(LSR)  ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
167)   0618 CB 67       		 BIT 4,A	;
168)   061A 28 04       		 JR Z,LBLPE	;
169)   061C 3E 42       		 LD A,'B' ;$20 ;BREAK	;$20 ;BREAK
170)   061E 18 1A       		 JR EXIT	;
171)   0620 CB 57       		LBLPE: BIT 2,A 	;
172)   0622 28 04       		 JR Z,LBLFE	;
173)   0624 3E 50       		 LD A,'P' ;$40 ;PARITY	;$40 ;PARITY
174)   0626 18 12       		 JR EXIT	;
175)   0628 CB 5F       		LBLFE: BIT 3,A	;
176)   062A 28 04       		 JR Z,LBLOE	;
177)   062C 3E 46       		 LD A,'F' ;$60 ;FRAME 	;$60 ;FRAME
178)   062E 18 0A       		 JR EXIT	;
179)   0630 CB 4F       		LBLOE: BIT 1,A	;
180)   0632 28 04       		 JR Z,LBLNE	;
181)   0634 3E 4F       		 LD A,'O' ;$80  ;OVERRUN	;$80  ;OVERRUN
182)   0636 18 02       		 JR EXIT	;
183)   0638 3E 4E       		LBLNE: LD A,'N' ;NO ERROR	;NO ERROR
184)   063A 21 9F FE    		EXIT: LD HL,SERERR	;
185)   063D 77          		 LD (HL),A	;
187)   063E C1          		 POP BC	;
188)   063F E1          		 POP HL	;
189)   0640 F1          		 POP AF	;
190)   0641 C9          		 RET	;
 14)   0642 	            		DEVKBI EQU DEVINP; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP	; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP
 20)   0642 06 01       		@KEYBCLKON: LD B,UKB_OUT_CLK	;
 21)   0644 CD BB 03    		      CALL FF_OFF	;
 22)   0647 C9          		      RET	;
 24)   0648 06 01       		@KEYBCLKOFF: LD B,UKB_OUT_CLK	;
 25)   064A CD CD 03    		     CALL FF_ON	;
 26)   064D C9          		     RET	;
 28)   064E 06 02       		@KEYBDATON: LD B,UKB_OUT_DAT	;
 29)   0650 CD BB 03    		      CALL FF_OFF	;
 30)   0653 C9          		      RET	;
 32)   0654 06 02       		@KEYBDATOFF: LD B,UKB_OUT_DAT	;
 33)   0656 CD CD 03    		     CALL FF_ON	;
 34)   0659 C9          		     RET	;
 36)   065A CD 42 06    		PS2ISK:CALL KEYBCLKON   ;KEYBOARD ENABLED	;KEYBOARD ENABLED
 37)   065D 06 46       		   LD B,SAMP     ;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)	;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)
 38)   065F DB 18       		CHAG: IN A,(DEVKBI)	;
 39)   0661 57          		   LD D,A	;
 40)   0662 CB 77       		   BIT UKB_IN_CLK,A ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 41)   0664 28 08       		   JR Z,KEYOK	;
 42)   0666 10 F7       		   DJNZ CHAG	;
 44)   0668 3E 01       		PS2NTP: LD A,1 ;SET A TO 1 MEANS NO KEY AVAILABLE  	;SET A TO 1 MEANS NO KEY AVAILABLE
 45)   066A CD 48 06    		   CALL KEYBCLKOFF	;
 46)   066D C9          		   RET	;
 47)   066E AF          		KEYOK: XOR A ;SET A TO 0 MEANS WE HAVE A KEY	;SET A TO 0 MEANS WE HAVE A KEY
 48)   066F C9          		   RET	;
 51)   0670 06 46       		WAITFORHIGH: LD B,SAMP  ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 52)   0672 B7          		     OR A      ;CLEAR CARRY	;CLEAR CARRY
 53)   0673 DB 18       		WH1: IN A,(DEVKBI)	;
 54)   0675 57          		     LD D,A    	;
 55)   0676 CB 77       		     BIT UKB_IN_CLK,A  ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 56)   0678 C0          		     RET NZ	;
 57)   0679 10 F8       		     DJNZ WH1	;
 58)   067B 37          		     SCF	;
 59)   067C C9          		     RET	;
 61)   067D 06 46       		WAITFORLOW1: LD B,SAMP  ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 62)   067F B7          		    OR A      ;CLEAR CARRY	;CLEAR CARRY
 63)   0680 DB 18       		WL1: IN A,(DEVKBI)	;
 64)   0682 57          		     LD D,A    	;
 65)   0683 CB 77       		     BIT UKB_IN_CLK,A  ;CHECK BIT 6=CLOCK    	;CHECK BIT 6=CLOCK
 66)   0685 C8          		     RET Z	;
 67)   0686 10 F8       		     DJNZ WL1	;
 68)   0688 37          		     SCF	;
 69)   0689 C9          		     RET	;
 71)   068A CD 7D 06    		WAITFORLOW: CALL WAITFORLOW1	;
 72)   068D D8          		           RET C	;
 73)   068E DB 18       		            IN A,(DEVKBI)  ;SOME MORE TIMES TO BE SURE	;SOME MORE TIMES TO BE SURE
 74)   0690 DB 18       		            IN A,(DEVKBI)	;
 75)   0692 57          		            LD D,A	;
 76)   0693 C9          		            RET	;
 78)   0694 F3          		@NEWBYTE:DI	;
 79)   0695 7A          		   LD A,D ;BIT 7 HAS THE DATA	;BIT 7 HAS THE DATA
 80)   0696 CB 7F       		   BIT UKB_IN_DAT,A	;
 81)   0698 20 2D       		   JR NZ,ERROR0 ;ALWAYS START WITH 0	;ALWAYS START WITH 0
 82)   069A 06 08       		   LD B,8	;
 83)   069C 48          		NXTBIT: LD C,B ;SAVE B	;SAVE B
 84)   069D CD 70 06    		   CALL WAITFORHIGH 	;
 85)   06A0 D8          		   RET C	;
 86)   06A1 CD 8A 06    		   CALL WAITFORLOW	;
 87)   06A4 D8          		   RET C	;
 88)   06A5 CB 27       		   SLA A ;BIT 7=DATA IS ON C FLAG	;BIT 7=DATA IS ON C FLAG
 89)   06A7 CB 1B       		   RR E ;CARRY GOES TO BIT 7 OF E  	;CARRY GOES TO BIT 7 OF E
 90)   06A9 41          		   LD B,C  ;RESTORE C	;RESTORE C
 91)   06AA 10 F0       		   DJNZ NXTBIT	;
 92)   06AC CD 70 06    		   CALL WAITFORHIGH 	;
 93)   06AF D8          		   RET C	;
 94)   06B0 CD 8A 06    		   CALL WAITFORLOW     	;
 95)   06B3 D8          		   RET C	;
 97)   06B4 CD 70 06    		   CALL WAITFORHIGH 	;
 98)   06B7 D8          		   RET C	;
 99)   06B8 CD 8A 06    		   CALL WAITFORLOW 	;
100)   06BB D8          		   RET C	;
101)   06BC CB 7F       		   BIT UKB_IN_DAT,A	;
102)   06BE 28 10       		   JR Z,ERROR1 ;ALWAYS ENDS WITH 1  	;ALWAYS ENDS WITH 1
103)   06C0 CD 70 06    		   CALL WAITFORHIGH    ;WAIT FOR END OF TRANSMITION	;WAIT FOR END OF TRANSMITION
104)   06C3 D8          		   RET C	;
106)   06C4 7B          		   LD A,E	;
107)   06C5 FB          		   EI	;
108)   06C6 C9          		   RET	;
109)   06C7 21 DC 06    		ERROR0: LD HL,MSER4	;
110)   06CA CD D8 05    		   CALL RS_TXT	;
111)   06CD 37          		   SCF ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
112)   06CE FB          		   EI	;
113)   06CF C9          		   RET	;
114)   06D0 D5          		ERROR1:PUSH DE	;
115)   06D1 21 F1 06    		   LD HL,MSER5	;
116)   06D4 CD D8 05    		   CALL RS_TXT	;
117)   06D7 37          		   SCF ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
118)   06D8 D1          		   POP DE	;
119)   06D9 7B          		   LD A,E ;MAYBE IGNORE THIS	;MAYBE IGNORE THIS
120)   06DA FB          		   EI	;
121)   06DB C9          		   RET	;
122)   06DC 4B 42 5F 45 		MSER4 DEFM "KB_ERR: START BIT."	;
122)   06E0 52 52 3A 20 		MSER4 DEFM "KB_ERR: START BIT."	;
122)   06E4 53 54 41 52 		MSER4 DEFM "KB_ERR: START BIT."	;
122)   06E8 54 20 42 49 		MSER4 DEFM "KB_ERR: START BIT."	;
122)   06EC 54 2E       		MSER4 DEFM "KB_ERR: START BIT."	;
123)   06EE 0A 0D 00    		   DB 10,13,0	;
124)   06F1 4B 42 5F 45 		MSER5 DEFM "KB_ERR: STOP BIT."	;
124)   06F5 52 52 3A 20 		MSER5 DEFM "KB_ERR: STOP BIT."	;
124)   06F9 53 54 4F 50 		MSER5 DEFM "KB_ERR: STOP BIT."	;
124)   06FD 20 42 49 54 		MSER5 DEFM "KB_ERR: STOP BIT."	;
124)   0701 2E          		MSER5 DEFM "KB_ERR: STOP BIT."	;
125)   0702 0A 0D 00    		   DB 10,13,0	;
127)   0705 01 0A 00    		PS2KEY: LD BC,10       	;
128)   0708 0B          		PS2AGN DEC BC	;
129)   0709 78          		       LD A,B	;
130)   070A B1          		       OR C	;
131)   070B 28 0F       		       JR Z,PS2TIMEOUT	;
132)   070D C5          		       PUSH BC	;
133)   070E CD 5A 06    		       CALL PS2ISK	;
134)   0711 B7          		       OR A	;
135)   0712 C1          		       POP BC	;
136)   0713 20 F3       		       JR NZ, PS2AGN ;NO KEY YET	;NO KEY YET
138)   0715 CD 94 06    		       CALL NEWBYTE 	;
139)   0718 38 02       		       JR C,PS2TIMEOUT ;ERROR SO INVALIDATE A	;ERROR SO INVALIDATE A
140)   071A 18 02       		       JR PS2EX	;
141)   071C AF          		PS2TIMEOUT:XOR A ;0 CODE IS INVALID	;0 CODE IS INVALID
142)   071D FB          		          EI	;
143)   071E F5          		PS2EX  PUSH AF       	;
144)   071F CD 48 06    		       CALL KEYBCLKOFF	;
145)   0722 F1          		       POP AF	;
146)   0723 C9          		       RET	;
149)   0724 CD 2C 07    		READCHAR: CALL GTKEY	;
150)   0727 C8          		 RET Z	;
151)   0728 CD EB 07    		        CALL PS2LOK	;
152)   072B C9          		        RET	;
155)   072C CD 05 07    		@GTKEY: CALL PS2KEY ;GET A KEY FROM PS2	;GET A KEY FROM PS2
156)   072F FE E1       		 CP $E1 ;BREAK KEY	;BREAK KEY
157)   0731 CC 58 07    		 CALL Z,GTBRK	;
158)   0734 FE F0       		 CP $F0 ;240 KEY RELEASED	;240 KEY RELEASED
159)   0736 CC 9C 07    		 CALL Z,GTREL	;
160)   0739 FE E0       		 CP $E0 ;224 EXTENDED KEYS	;224 EXTENDED KEYS
161)   073B CC 62 07    		 CALL Z,GTEXT	;
164)   073E FE 12       		 CP 18 ;LEFT SHIFT	;LEFT SHIFT
165)   0740 CC C7 07    		 CALL Z,SHFTOG	;
166)   0743 FE 59       		 CP 89 ;RIGHT SHIFT	;RIGHT SHIFT
167)   0745 CC C7 07    		 CALL Z,SHFTOG	;
168)   0748 FE 14       		 CP 20 ;RIGHT CONTROL	;RIGHT CONTROL
169)   074A CC D0 07    		 CALL Z,CTRTOG 	;
170)   074D FE 11       		 CP 17 ;LEFT ALT	;LEFT ALT
171)   074F CC D9 07    		 CALL Z,ALTTOG	;
172)   0752 FE 58       		 CP $58 ;CAPS LOCK	;CAPS LOCK
173)   0754 CC E2 07    		 CALL Z,CAPSTOG	;
176)   0757 C9          		 RET	;
178)   0758 CD 05 07    		GTBRK: CALL PS2KEY ;$14 OR $F0	;$14 OR $F0
179)   075B FE F0       		 CP $F0	;
180)   075D C8          		 RET Z	;
181)   075E CD 05 07    		 CALL PS2KEY ;$77	;$77
182)   0761 C9          		 RET	;
184)   0762 CD 05 07    		GTEXT: CALL PS2KEY ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
185)   0765 FE 6B       		 CP $6B ;LEFT	;LEFT
186)   0767 C8          		 RET Z	;
187)   0768 FE 72       		 CP $72 ;DOWN	;DOWN
188)   076A C8          		 RET Z	;
189)   076B FE 74       		 CP $74 ;RIGHT	;RIGHT
190)   076D C8          		 RET Z	;
191)   076E FE 75       		 CP $75 ;UP	;UP
192)   0770 C8          		 RET Z	;
193)   0771 FE 70       		 CP $70 ;INSERT	;INSERT
194)   0773 C8          		 RET Z	;
195)   0774 FE 6C       		 CP $6C ;HOME	;HOME
196)   0776 C8          		 RET Z	;
197)   0777 FE 7D       		 CP $7D ;PG UP	;PG UP
198)   0779 C8          		 RET Z	;
199)   077A FE 7A       		 CP $7A ;PG DN	;PG DN
200)   077C C8          		 RET Z	;
201)   077D FE 69       		 CP $69 ;END	;END
202)   077F C8          		 RET Z	;
203)   0780 FE 71       		 CP $71 ;DEL	;DEL
204)   0782 C8          		 RET Z	;
205)   0783 FE 66       		  CP $66  ;BACKSPACE	;BACKSPACE
206)   0785 C8          		 RET Z	;
207)   0786 FE 5A       		 CP $5A ;ENTER NUM	;ENTER NUM
208)   0788 C8          		 RET Z	;
209)   0789 FE 11       		 CP $11 ;RIGHT ALT	;RIGHT ALT
210)   078B C8          		 RET Z	;
211)   078C FE 14       		 CP $14 ;LEFT ALT	;LEFT ALT
212)   078E C8          		 RET Z	;
213)   078F FE 4A       		 CP $4A ;NUMLOCK /	;NUMLOCK /
214)   0791 C8          		 RET Z	;
215)   0792 FE F0       		 CP $F0	;
216)   0794 C2 9A 07    		 JP NZ, EXGTEX ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
217)   0797 CD 05 07    		 CALL PS2KEY ; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT	; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT
219)   079A AF          		EXGTEX XOR A ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
220)   079B C9          		 RET	;
223)   079C CD 05 07    		GTREL: CALL PS2KEY ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
224)   079F FE 12       		 CP 18 ; LSHIFT RELEASED	; LSHIFT RELEASED
225)   07A1 CC B5 07    		 CALL Z,SHFRES ; RESET SHIFT	; RESET SHIFT
226)   07A4 FE 14       		 CP 20 ; LCTRL RELEASED	; LCTRL RELEASED
227)   07A6 CC BB 07    		 CALL Z,CTRRES ; RESET CONTROL	; RESET CONTROL
228)   07A9 FE 11       		 CP 17 ; LALT RELEASED	; LALT RELEASED
229)   07AB CC C1 07    		 CALL Z,ALTRES ; RESET ALT	; RESET ALT
230)   07AE FE 59       		 CP 89 ; RSHIFT RELEASED	; RSHIFT RELEASED
231)   07B0 CC B5 07    		 CALL Z,SHFRES ; RESET SHIFT	; RESET SHIFT
232)   07B3 AF          		 XOR A ; NO KEY	; NO KEY
233)   07B4 C9          		 RET	;
235)   07B5 21 9E FE    		SHFRES: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH 	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
236)   07B8 CB B6       		 RES 6,(HL)  ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
237)   07BA C9          		 RET	;
239)   07BB 21 9E FE    		CTRRES: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
240)   07BE CB BE       		 RES 7,(HL) ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
241)   07C0 C9          		 RET	;
243)   07C1 21 9E FE    		ALTRES: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
244)   07C4 CB AE       		 RES 5,(HL) ; BIT 5 IS SHIFT $20=32 	; BIT 5 IS SHIFT $20=32
245)   07C6 C9          		 RET	;
247)   07C7 21 9E FE    		SHFTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH 	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
248)   07CA 3E 40       		 LD A,$40 ; MASK	; MASK
249)   07CC AE          		 XOR (HL)  ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
250)   07CD 77          		 LD (HL),A ; SAVE	; SAVE
251)   07CE AF          		 XOR A ; NO KEY	; NO KEY
252)   07CF C9          		 RET	;
254)   07D0 21 9E FE    		CTRTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
255)   07D3 3E 80       		 LD A,$80 ; MASK	; MASK
256)   07D5 AE          		 XOR (HL) ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
257)   07D6 77          		 LD (HL),A ; SAVE	; SAVE
258)   07D7 AF          		 XOR A ; NO KEY	; NO KEY
259)   07D8 C9          		 RET	;
261)   07D9 21 9E FE    		ALTTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
262)   07DC 3E 20       		 LD A,$20	;
263)   07DE AE          		 XOR (HL) ; BIT 5 IS ALT $20=32 	; BIT 5 IS ALT $20=32
264)   07DF 77          		 LD (HL),A ; SAVE	; SAVE
265)   07E0 AF          		 XOR A ; NO KEY	; NO KEY
266)   07E1 C9          		 RET	;
268)   07E2 21 9E FE    		CAPSTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
269)   07E5 3E 10       		 LD A,$10	;
270)   07E7 AE          		 XOR (HL) ; BIT 4 IS CAPS $10=16 	; BIT 4 IS CAPS $10=16
271)   07E8 77          		 LD (HL),A ; SAVE	; SAVE
272)   07E9 AF          		 XOR A ; NO KEY	; NO KEY
273)   07EA C9          		 RET	;
276)   07EB 21 9E FE    		@PS2LOK: LD HL,KEYCTR	;
277)   07EE 47          		 LD B,A  ; SAVE A	; SAVE A
278)   07EF 7E          		 LD A,(HL); GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
279)   07F0 4F          		 LD C,A  ;CAPS ON C	;CAPS ON C
280)   07F1 CB 1F       		 RR A	;
281)   07F3 CB 1F       		 RR A    ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
282)   07F5 A9          		 XOR C   ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
283)   07F6 CB 67       		 BIT 4,A ;CHECK IF BIT 4 IS 0 = UNSHIFTED	;CHECK IF BIT 4 IS 0 = UNSHIFTED
284)   07F8 78          		 LD A,B  ;RESTORE A	;RESTORE A
289)   07F9 21 07 08    		  LD HL,PS2TAB1 ;UNSHIFTED	;UNSHIFTED
290)   07FC 28 03       		 JR Z,PLK1	;
291)   07FE 21 B1 08    		 LD HL,PS2TAB2 ;SHIFTED	;SHIFTED
292)   0801 06 00       		PLK1:  LD B,0	;
293)   0803 4F          		 LD C,A	;
294)   0804 09          		 ADD HL,BC       	;
295)   0805 7E          		 LD A,(HL) ;GET THE CHAR	;GET THE CHAR
296)   0806 C9          		 RET	;
300)   0807 00 00 00 00 		PS2TAB1 DB 0,0,0,0,0,0,0,0,0,0	;
300)   080B 00 00 00 00 		PS2TAB1 DB 0,0,0,0,0,0,0,0,0,0	;
300)   080F 00 00       		PS2TAB1 DB 0,0,0,0,0,0,0,0,0,0	;
301)   0811 00 00 00 00 		      DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0815 60 00 00 00 		      DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0819 00 00       		      DB 0,0,0,0,'`',0,0,0,0,0	;
302)   081B 00 71 31 00 		      DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   081F 00 00 7A 73 		      DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   0823 61 77       		      DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   0825 32 00 00 63 		      DB '2',0,0,'c','x','d','e','4','3',0	;
303)   0829 78 64 65 34 		      DB '2',0,0,'c','x','d','e','4','3',0	;
303)   082D 33 00       		      DB '2',0,0,'c','x','d','e','4','3',0	;
304)   082F 00 20 76 66 		      DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0833 74 72 35 00 		      DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0837 00 6E       		      DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   0839 62 68 67 6D 		      DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   083D 36 00 00 2C 		      DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   0841 6D 6A       		      DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   0843 75 37 38 00 		      DB 'u','7','8',0,0,',','k','i','o','0'   ;60-69	;60-69
306)   0847 00 2C 6B 69 		      DB 'u','7','8',0,0,',','k','i','o','0'   ;60-69	;60-69
306)   084B 6F 30       		      DB 'u','7','8',0,0,',','k','i','o','0'   ;60-69	;60-69
307)   084D 39 00 00 2E 		      DB '9',0,0,'.','/','l',59,'p','-',0       ;70-79	;70-79
307)   0851 2F 6C 3B 70 		      DB '9',0,0,'.','/','l',59,'p','-',0       ;70-79	;70-79
307)   0855 2D 00       		      DB '9',0,0,'.','/','l',59,'p','-',0       ;70-79	;70-79
308)   0857 00 00 27 00 		      DB 0,0,39,0,'[','=',0,0,0,0               ;80-89	;80-89
308)   085B 5B 3D 00 00 		      DB 0,0,39,0,'[','=',0,0,0,0               ;80-89	;80-89
308)   085F 00 00       		      DB 0,0,39,0,'[','=',0,0,0,0               ;80-89	;80-89
309)   0861 0D 5D 00 5C 		      DB 13,']',0,'\',0,0,0,0,0,0               ;90-99	;90-99
309)   0865 00 00 00 00 		      DB 13,']',0,'\',0,0,0,0,0,0               ;90-99	;90-99
309)   0869 00 00       		      DB 13,']',0,'\',0,0,0,0,0,0               ;90-99	;90-99
310)   086B 00 00 06 00 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
310)   086F 00 08 00 04 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
310)   0873 09 00       		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
311)   0875 00 00 01 07 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
311)   0879 0A 00 03 0B 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
311)   087D 1B 00       		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
312)   087F 00 00 2B 2D 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
312)   0883 2A 39 00 00 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
312)   0887 00 00       		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
313)   0889 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
313)   088D 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
313)   0891 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
314)   0893 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
314)   0897 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
314)   089B 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
315)   089D 00 00 00 00 		        DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
315)   08A1 00 00 00 00 		        DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
315)   08A5 00 00       		        DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
316)   08A7 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
316)   08AB 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
316)   08AF 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
319)   08B1 00 00 00 00 		PS2TAB2 DB 0,0,0,0,0,0,0,0,0,0	;
319)   08B5 00 00 00 00 		PS2TAB2 DB 0,0,0,0,0,0,0,0,0,0	;
319)   08B9 00 00       		PS2TAB2 DB 0,0,0,0,0,0,0,0,0,0	;
320)   08BB 00 00 00 00 		      DB 0,0,0,0,'~',0,0,0,0,0	;
320)   08BF 7E 00 00 00 		      DB 0,0,0,0,'~',0,0,0,0,0	;
320)   08C3 00 00       		      DB 0,0,0,0,'~',0,0,0,0,0	;
321)   08C5 00 51 21 00 		      DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   08C9 00 00 5A 53 		      DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   08CD 41 57       		      DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   08CF 40 00 00 43 		      DB '@',0,0,'C','X','D','E','$','#',0	;
322)   08D3 58 44 45 24 		      DB '@',0,0,'C','X','D','E','$','#',0	;
322)   08D7 23 00       		      DB '@',0,0,'C','X','D','E','$','#',0	;
323)   08D9 00 20 56 46 		      DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   08DD 54 52 25 00 		      DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   08E1 00 4E       		      DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   08E3 42 48 47 59 		      DB 'B','H','G','Y','^',0,0,34,'M','J'   ;50-59 34=""	;50-59 34=""
324)   08E7 5E 00 00 22 		      DB 'B','H','G','Y','^',0,0,34,'M','J'   ;50-59 34=""	;50-59 34=""
324)   08EB 4D 4A       		      DB 'B','H','G','Y','^',0,0,34,'M','J'   ;50-59 34=""	;50-59 34=""
325)   08ED 55 5E 2A 00 		      DB 'U','^','*',0,0,'<','K','I','O',')'   ;60-69	;60-69
325)   08F1 00 3C 4B 49 		      DB 'U','^','*',0,0,'<','K','I','O',')'   ;60-69	;60-69
325)   08F5 4F 29       		      DB 'U','^','*',0,0,'<','K','I','O',')'   ;60-69	;60-69
326)   08F7 28 00 00 3E 		      DB '(',0,0,'>','?','L',':','P','_',0      ;70-79	;70-79
326)   08FB 3F 4C 3A 50 		      DB '(',0,0,'>','?','L',':','P','_',0      ;70-79	;70-79
326)   08FF 5F 00       		      DB '(',0,0,'>','?','L',':','P','_',0      ;70-79	;70-79
327)   0901 00 00 22 00 		      DB 0,0,34,0,'{','+',0,0,0,0               ;80-89	;80-89
327)   0905 7B 2B 00 00 		      DB 0,0,34,0,'{','+',0,0,0,0               ;80-89	;80-89
327)   0909 00 00       		      DB 0,0,34,0,'{','+',0,0,0,0               ;80-89	;80-89
328)   090B 0D 7D 00 7C 		      DB 13,'}',0,'|',0,0,0,0,0,0               ;90-99	;90-99
328)   090F 00 00 00 00 		      DB 13,'}',0,'|',0,0,0,0,0,0               ;90-99	;90-99
328)   0913 00 00       		      DB 13,'}',0,'|',0,0,0,0,0,0               ;90-99	;90-99
329)   0915 00 00 06 00 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
329)   0919 00 08 00 04 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
329)   091D 09 00       		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
330)   091F 00 00 01 07 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
330)   0923 0A 00 03 0B 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
330)   0927 1B 00       		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
331)   0929 00 00 2B 2D 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
331)   092D 2A 39 00 00 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
331)   0931 00 00       		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
332)   0933 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
332)   0937 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
332)   093B 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
333)   093D 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
333)   0941 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
333)   0945 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
334)   0947 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
334)   094B 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
334)   094F 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
335)   0951 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
335)   0955 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
335)   0959 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
 46)   095B 3E 03       		STRG_INIT: LD A,3  ;38400 BPS	;38400 BPS
 47)   095D CD E7 0A    		 CALL STOR_INI	;
 48)   0960 C9          		 RET	;
 51)   0961 21 E1 FE    		NEWCMD: LD HL,STRGCMD 	;
 52)   0964 77          		 LD (HL),A	;
 53)   0965 23          		 INC HL	;
 54)   0966 E5          		 PUSH HL	;
 55)   0967 AF          		 XOR A	;
 56)   0968 06 03       		 LD B,3	;
 57)   096A 77          		CCAGN: LD (HL),A	;
 58)   096B 23          		 INC HL	;
 59)   096C 10 FC       		 DJNZ CCAGN	;
 60)   096E E1          		 POP HL   ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 61)   096F C9          		 RET	;
 64)   0970 CD 48 0B    		SENDCMD: CALL FLUSHREC	;
 65)   0973 21 E1 FE    		 LD HL,STRGCMD	;
 66)   0976 06 04       		 LD B,4 	;
 67)   0978 7E          		NXTBT: LD A,(HL)	;
 68)   0979 CD 17 0B    		 CALL STOR_TX	;
 69)   097C 23          		 INC HL	;
 70)   097D 10 F9       		 DJNZ NXTBT	;
 71)   097F C9          		 RET	;
 73)   0980 3E 01       		STRG_OPENCRD: LD A,OPENCARD	;
 74)   0982 CD 61 09    		 CALL NEWCMD	;
 75)   0985 CD 70 09    		 CALL SENDCMD	;
 76)   0988 CD 75 26    		 CALL DEL2	;
 77)   098B CD 2A 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
 78)   098E FE C9       		 CP FCMDOKTST	;
 79)   0990 3F          		 CCF	;
 80)   0991 C9          		 RET ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
 85)   0992 F5          		STRG_GETEOF: PUSH AF	;
 86)   0993 3E 0D       		 LD A,ENDOFFILE	;
 87)   0995 CD 61 09    		 CALL NEWCMD	;
 88)   0998 F1          		 POP AF	;
 89)   0999 77          		 LD (HL),A ;FID	;FID
 90)   099A CD 70 09    		 CALL SENDCMD	;
 92)   099D CD 2A 0B    		 CALL STOR_RX ;GET EOF	;GET EOF
 93)   09A0 FE C9       		 CP FCMDOKTST	;
 94)   09A2 3F          		 CCF	;
 95)   09A3 C9          		 RET ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
100)   09A4 F5          		STRG_GETSIZE: PUSH AF	;
101)   09A5 3E 0C       		 LD A,FILESIZE	;
102)   09A7 18 03       		 JR GT2BYTES	;
107)   09A9 F5          		STRG_GETPOS: PUSH AF	;
108)   09AA 3E 09       		 LD A,POSITIONG	;
109)   09AC CD 61 09    		GT2BYTES: CALL NEWCMD	;
110)   09AF F1          		 POP AF	;
111)   09B0 77          		 LD (HL),A ;FID	;FID
112)   09B1 CD 70 09    		 CALL SENDCMD	;
114)   09B4 CD 2A 0B    		 CALL STOR_RX ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
115)   09B7 67          		 LD H,A 	;
116)   09B8 CD 2A 0B    		 CALL STOR_RX ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
117)   09BB 6F          		 LD L,A 	;
118)   09BC CD 2A 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
119)   09BF FE C9       		 CP FCMDOKTST	;
120)   09C1 3F          		 CCF	;
121)   09C2 C9          		 RET ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
127)   09C3 EB          		STRG_SETPOS: EX DE,HL	;
128)   09C4 F5          		 PUSH AF	;
129)   09C5 3E 08       		 LD A,POSITIONS	;
130)   09C7 CD 61 09    		 CALL NEWCMD	;
131)   09CA F1          		 POP AF	;
132)   09CB 77          		 LD (HL),A ;FID	;FID
133)   09CC 23          		 INC HL	;
134)   09CD 72          		 LD (HL),D ;NEW POS ON DE	;NEW POS ON DE
135)   09CE 23          		 INC HL	;
136)   09CF 73          		 LD (HL),E	;
137)   09D0 CD 70 09    		 CALL SENDCMD	;
138)   09D3 CD 75 26    		 CALL DEL2	;
139)   09D6 CD 2A 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
140)   09D9 FE C9       		 CP FCMDOKTST	;
141)   09DB 3F          		 CCF	;
142)   09DC C9          		 RET ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
147)   09DD 3E 0A       		STRG_DIRLIST: LD A,LISTDIR	;
148)   09DF CD 61 09    		 CALL NEWCMD	;
149)   09E2 CD 70 09    		 CALL SENDCMD	;
150)   09E5 CD 75 26    		 CALL DEL2	;
152)   09E8 11 B9 FE    		 LD DE,STRGBUFF	;
153)   09EB CD 2A 0B    		NXTCHR CALL STOR_RX 	;
154)   09EE FE FF       		 CP 255	;
155)   09F0 28 05       		 JR Z,DIROUT	;
157)   09F2 CD 3E 15    		 CALL LCD_PRINTCHAR	;
158)   09F5 18 F4       		 JR NXTCHR	;
159)   09F7 CD 75 26    		DIROUT: CALL DEL2	;
160)   09FA CD 2A 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
161)   09FD FE C9       		 CP FCMDOKTST	;
162)   09FF 3F          		 CCF	;
163)   0A00 C9          		 RET ; IF CARRY ERROR OCCURED 	; IF CARRY ERROR OCCURED
167)   0A01 CD 20 0B    		SENDFNAME: CALL STOR_TXT ;SEND FILENAME	;SEND FILENAME
168)   0A04 AF          		 XOR A	;
169)   0A05 CD 17 0B    		 CALL STOR_TX	;
170)   0A08 C9          		 RET	;
173)   0A09 3E 0B       		STRG_DIRCHG: LD A,CHANGEDIR	;
174)   0A0B CD 61 09    		 CALL NEWCMD	;
175)   0A0E CD 70 09    		 CALL SENDCMD	;
176)   0A11 21 B9 FE    		 LD HL,STRGBUFF	;
177)   0A14 CD 01 0A    		        CALL SENDFNAME  	;
178)   0A17 CD 75 26    		 CALL DEL2	;
179)   0A1A CD 2A 0B    		 CALL STOR_RX   ;GET RESULT	;GET RESULT
180)   0A1D FE C9       		 CP FCMDOKTST	;
181)   0A1F 3F          		 CCF	;
182)   0A20 C9          		 RET ; IF CARRY ERROR OCCURED 	; IF CARRY ERROR OCCURED
186)   0A21 F5          		STRG_OPNFILE: PUSH AF	;
187)   0A22 3E 02       		 LD A,OPENFILE	;
188)   0A24 CD 61 09    		 CALL NEWCMD	;
189)   0A27 F1          		 POP AF	;
190)   0A28 77          		 LD (HL),A ;FID	;FID
191)   0A29 CD 70 09    		 CALL SENDCMD 	;
192)   0A2C 21 B9 FE    		 LD HL,STRGBUFF	;
193)   0A2F CD 01 0A    		 CALL SENDFNAME	;
194)   0A32 CD 75 26    		 CALL DEL2 	;
195)   0A35 CD 2A 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
197)   0A38 32 E5 FE    		 LD (FID),A	;
198)   0A3B FE C9       		 CP FCMDOKTST	;
199)   0A3D 3F          		 CCF	;
200)   0A3E C9          		 RET ; IF CARRY ERROR OCCURED 	; IF CARRY ERROR OCCURED
203)   0A3F F5          		STRG_CLSFILE: PUSH AF	;
204)   0A40 3E 03       		 LD A,CLOSEFILE  	;
205)   0A42 CD 61 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN 	;HL POINTS ON FID IN COMMAND ON RETURN
206)   0A45 F1          		 POP AF	;
207)   0A46 77          		 LD (HL),A ;FID	;FID
208)   0A47 CD 70 09    		 CALL SENDCMD	;
209)   0A4A CD 2A 0B    		 CALL STOR_RX    ;GET RESULT	;GET RESULT
210)   0A4D FE C9       		 CP FCMDOKTST	;
211)   0A4F 3F          		 CCF	;
212)   0A50 C9          		 RET ; IF CARRY ERROR OCCURED 	; IF CARRY ERROR OCCURED
218)   0A51 F5          		STRG_BLKWRITE: PUSH AF	;
219)   0A52 3E 07       		 LD A,WRITEBLOCK	;
220)   0A54 CD 61 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
221)   0A57 F1          		 POP AF	;
222)   0A58 77          		 LD (HL),A ;FID	;FID
223)   0A59 23          		 INC HL 	;
225)   0A5A 78          		 LD A,B  ;BYTES HI	;BYTES HI
226)   0A5B 77          		 LD (HL),A	;
227)   0A5C 23          		 INC HL 	;
228)   0A5D 79          		 LD A,C  ;BYTES LOW	;BYTES LOW
229)   0A5E 77          		 LD (HL),A	;
230)   0A5F CD 70 09    		 CALL SENDCMD  ;SEND BLOCKWRITE COMMAND BC BYTES   	;SEND BLOCKWRITE COMMAND BC BYTES
231)   0A62 EB          		 EX DE,HL	;
232)   0A63 7E          		BWNXCH: LD A,(HL)	;
233)   0A64 CD 17 0B    		 CALL STOR_TX	;
234)   0A67 23          		 INC HL	;
235)   0A68 0B          		 DEC BC	;
236)   0A69 78          		 LD A,B	;
237)   0A6A B1          		 OR C	;
238)   0A6B 20 F6       		 JR NZ,BWNXCH	;
239)   0A6D CD 2A 0B    		 CALL STOR_RX    ;GET RESULT	;GET RESULT
240)   0A70 FE C9       		 CP FCMDOKTST	;
241)   0A72 3F          		 CCF	;
242)   0A73 C9          		 RET  	;
250)   0A74 F5          		STRG_BLKREAD: PUSH AF	;
251)   0A75 3E 06       		 LD A,READBLOCK	;
252)   0A77 CD 61 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
253)   0A7A F1          		 POP AF	;
254)   0A7B 77          		 LD (HL),A ;FID	;FID
255)   0A7C 23          		 INC HL 	;
256)   0A7D 78          		 LD A,B  ;BYTES HI	;BYTES HI
257)   0A7E 77          		 LD (HL),A	;
258)   0A7F 23          		 INC HL 	;
259)   0A80 79          		 LD A,C  ;BYTES LOW	;BYTES LOW
260)   0A81 77          		 LD (HL),A	;
261)   0A82 CD 70 09    		 CALL SENDCMD  ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
262)   0A85 CD 75 26    		 CALL DEL2	;
263)   0A88 CD 2A 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
264)   0A8B 47          		 LD B,A  	;
265)   0A8C CD 2A 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
266)   0A8F 4F          		 LD C,A	;
267)   0A90 78          		 LD A,B	;
268)   0A91 B1          		 OR C	;
269)   0A92 28 13       		 JR Z,EREXIT   ;SOME ERROR OCCURED	;SOME ERROR OCCURED
271)   0A94 C5          		 PUSH BC   ;SAVE BYTES TO RECEIVE  	;SAVE BYTES TO RECEIVE
272)   0A95 CD 2A 0B    		OFNXCH: CALL STOR_RX	;
273)   0A98 12          		 LD (DE),A	;
274)   0A99 13          		 INC DE	;
275)   0A9A 0B          		 DEC BC	;
276)   0A9B 78          		 LD A,B	;
277)   0A9C B1          		 OR C	;
278)   0A9D 20 F6       		 JR NZ,OFNXCH	;
279)   0A9F CD 2A 0B    		OFEXIT: CALL STOR_RX    ;GET RESULT	;GET RESULT
280)   0AA2 C1          		 POP BC  ;TOTAL BYTES RECEIVED  	;TOTAL BYTES RECEIVED
281)   0AA3 FE C9       		 CP FCMDOKTST	;
282)   0AA5 3F          		 CCF	;
283)   0AA6 C9          		 RET  	;
285)   0AA7 18 F6       		 JR OFEXIT	;
289)   0AA9 F5          		STRG_TPFILE: PUSH AF	;
290)   0AAA 3E 06       		 LD A,READBLOCK	;
291)   0AAC CD 61 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
292)   0AAF F1          		 POP AF	;
293)   0AB0 77          		 LD (HL),A ;FID	;FID
294)   0AB1 23          		 INC HL 	;
295)   0AB2 78          		 LD A,B  ;BYTES HI	;BYTES HI
296)   0AB3 77          		 LD (HL),A	;
297)   0AB4 23          		 INC HL 	;
298)   0AB5 79          		 LD A,C  ;BYTES LOW	;BYTES LOW
299)   0AB6 77          		 LD (HL),A	;
300)   0AB7 CD 70 09    		 CALL SENDCMD  ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
301)   0ABA CD 75 26    		 CALL DEL2	;
302)   0ABD CD 2A 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
303)   0AC0 47          		 LD B,A  	;
304)   0AC1 CD 2A 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
305)   0AC4 4F          		 LD C,A	;
306)   0AC5 78          		 LD A,B	;
307)   0AC6 B1          		 OR C	;
308)   0AC7 CA A7 0A    		 JP Z,EREXIT   ;SOME ERROR OCCURED	;SOME ERROR OCCURED
310)   0ACA 3E 0D       		 LD A,13	;
311)   0ACC C5          		 PUSH BC	;
312)   0ACD CD 3E 15    		 CALL LCD_PRINTCHAR	;
313)   0AD0 C1          		 POP BC  	;
314)   0AD1 CD 2A 0B    		TFOFNXCH: CALL STOR_RX ;GET THE CHAR	;GET THE CHAR
315)   0AD4 C5          		 PUSH BC	;
316)   0AD5 CD 3E 15    		 CALL LCD_PRINTCHAR   ;PRINT TO SCREEN	;PRINT TO SCREEN
317)   0AD8 C1          		 POP BC	;
318)   0AD9 0B          		 DEC BC	;
319)   0ADA 78          		 LD A,B	;
320)   0ADB B1          		 OR C	;
321)   0ADC 20 F3       		 JR NZ,TFOFNXCH  	;
322)   0ADE CD 2A 0B    		TFOFEXIT: CALL STOR_RX  ;GET RESULT 	;GET RESULT
323)   0AE1 FE C9       		 CP FCMDOKTST	;
324)   0AE3 3F          		 CCF 	;
325)   0AE4 C9          		 RET  ;C SET IF ERROR	;C SET IF ERROR
328)   0AE5 18 F7       		 JR TFOFEXIT	;
350)   0AE7 	            		 RBR EQU DEVSTOR+0 ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
351)   0AE7 	            		 THR EQU DEVSTOR+0 ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
352)   0AE7 	            		 IER EQU DEVSTOR+1 ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
357)   0AE7 	            		 IIR EQU DEVSTOR+2 ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
362)   0AE7 	            		 FCR EQU DEVSTOR+2 ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
370)   0AE7 	            		 LCR EQU DEVSTOR+3 ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
378)   0AE7 	            		 MCR EQU DEVSTOR+4 ;MODEM CONTROL REGISTER 	;MODEM CONTROL REGISTER
379)   0AE7 	            		 LSR EQU DEVSTOR+5 ;LINE STATUS REGISTER	;LINE STATUS REGISTER
388)   0AE7 	            		 MSR EQU DEVSTOR+6 ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
389)   0AE7 	            		 SCR EQU DEVSTOR+7 ;SCRATCH REGISTER	;SCRATCH REGISTER
390)   0AE7 	            		 DLL EQU DEVSTOR+0 ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
391)   0AE7 	            		 DLM EQU DEVSTOR+1 ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
395)   0AE7 F5          		STOR_INI: PUSH AF	;
396)   0AE8 3E 80       		 LD      A,$80           ; Mask to set DLAB on	; Mask to set DLAB on
397)   0AEA D3 33       		 OUT     (LCR),A         ; Send to LINe Control Register 	; Send to LINe Control Register
405)   0AEC F1          		   POP AF	;
406)   0AED D3 30       		 OUT     (DLL),A         ; Set LSB of divisor	; Set LSB of divisor
407)   0AEF 3E 00       		 LD      A,00            ; This will be the MSB of the divisior	; This will be the MSB of the divisior
408)   0AF1 D3 31       		 OUT     (DLM),A         ; Send to the MSB register	; Send to the MSB register
409)   0AF3 3E 03       		 LD      A,$03           ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
410)   0AF5 D3 33       		 OUT     (LCR),A         ; Write new value to LCR	; Write new value to LCR
412)   0AF7 3E 00       		   LD A, 0       	;
413)   0AF9 D3 32       		   OUT  (FCR),A      ;//was commented	;//was commented
414)   0AFB 3E 00       		 LD      A,$00           ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
415)   0AFD D3 31       		 OUT     (IER),A         ; Send to INterrupt Enable Register 	; Send to INterrupt Enable Register
416)   0AFF AF          		    XOR A     ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
417)   0B00 D3 34       		       OUT (MCR),A    	;
418)   0B02 C9          		 RET	;
424)   0B03 F5          		STORTXRD: PUSH    AF	;
425)   0B04 DB 35       		STORTXLP: IN      A,(LSR)         ; fetch the control register	; fetch the control register
426)   0B06 CB 6F       		        BIT     5,A             ; bit will be set if UART is ready	; bit will be set if UART is ready
427)   0B08 28 FA       		        JR      Z,STORTXLP	;
428)   0B0A F1          		        POP     AF	;
429)   0B0B C9          		        RET  	;
432)   0B0C F5          		WAITCTSLOW: PUSH AF	;
433)   0B0D DB 36       		TSTAGN: IN A,(MSR)	;
434)   0B0F CB 67       		  BIT 4,A     ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
435)   0B11 20 02       		  JR NZ,WCLEX	;
436)   0B13 18 F8       		  JR TSTAGN	;
437)   0B15 F1          		WCLEX: POP AF	;
438)   0B16 C9          		  RET	;
444)   0B17 CD 0C 0B    		  CALL WAITCTSLOW	;
449)   0B1A CD 03 0B    		  CALL    STORTXRD	;
454)   0B1D D3 30       		        OUT     (THR),A	;
455)   0B1F C9          		        RET	;
458)   0B20 7E          		STOR_TXT: LD A,(HL)	;
459)   0B21 23          		 INC HL 	;
460)   0B22 FE 00       		 CP 0	;
461)   0B24 C8          		 RET Z	;
462)   0B25 CD 17 0B    		        CALL STOR_TX	;
463)   0B28 18 F6       		 JR STOR_TXT	;
470)   0B2A F3          		STOR_RX:  DI	;
471)   0B2B 3E 02       		        LD A,2 ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
472)   0B2D D3 34       		        OUT (MCR),A	;
473)   0B2F CD 53 0B    		  CALL    STORRXRD              	;
474)   0B32 AF          		STOR_GTCH: XOR A      ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
475)   0B33 D3 34       		        OUT (MCR),A        	;
476)   0B35 DB 30       		       IN A,(RBR)	;
477)   0B37 FB          		       EI	;
478)   0B38 C9          		        RET	;
480)   0B39 3E 02       		STOR_RXNW: LD A,2    ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
481)   0B3B D3 34       		        OUT (MCR),A	;
482)   0B3D DB 35       		  IN      A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
483)   0B3F CB 47       		        BIT     0,A                    	;
484)   0B41 28 03       		        JR Z,STOR_NOCHAR	;
485)   0B43 F3          		        DI	;
486)   0B44 18 EC       		        JR STOR_GTCH        	;
487)   0B46 AF          		STOR_NOCHAR: XOR A  ;RETURN ZERO	;RETURN ZERO
488)   0B47 C9          		        RET	;
490)   0B48 06 0A       		FLUSHREC: LD B,10	;
491)   0B4A CD 39 0B    		FRAGN:     CALL  STOR_RXNW	;
492)   0B4D 10 FB       		  DJNZ FRAGN       	;
493)   0B4F AF          		  XOR A	;
494)   0B50 D3 34       		  OUT (MCR),A	;
495)   0B52 C9          		  RET	;
501)   0B53 F3          		STORRXRD: DI	;
502)   0B54 F5          		        PUSH    AF	;
503)   0B55 DB 35       		STORRXLP: IN      A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
504)   0B57 CB 47       		        BIT     0,A             ; bit will be set if UART has data	; bit will be set if UART has data
505)   0B59 28 FA       		        JR      Z,STORRXLP	;
506)   0B5B F1          		        POP     AF	;
507)   0B5C FB          		        EI	;
508)   0B5D C9          		        RET  	;
512)   0B5E DB 35       		STOR_KEYRD: IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
513)   0B60 CB 47       		         BIT     0,A             ; bit will be set if UART has data        	; bit will be set if UART has data
514)   0B62 C9          		         RET 	;
  8)   0B63 	            		DI2C_STA  EQU DEVI2C+0 ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  9)   0B63 	            		DI2C_INDPTR EQU DEVI2C+0 ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
 10)   0B63 	            		DI2C_DAT EQU DEVI2C+1 ;01 A0=HIGH A1=LOW R/W  DEF $00	;01 A0=HIGH A1=LOW R/W  DEF $00
 11)   0B63 	            		DI2C_CON EQU DEVI2C+3 ;11 A0=HIGH A1=HIGH R/W DEF $00	;11 A0=HIGH A1=HIGH R/W DEF $00
 12)   0B63 	            		DI2C_INDIR EQU DEVI2C+2 ;10 A0=LOW A1=HIGH R/W DEF $00	;10 A0=LOW A1=HIGH R/W DEF $00
 57)   0B63 C5          		I2C_RDSTAT_WT: PUSH BC	;
 58)   0B64 01 00 20    		 LD BC,$2000	;
 59)   0B67 DB 4B       		I2CRWT_AGN: IN A,(DI2C_CON) ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 60)   0B69 CB 5F       		 BIT 3,A   ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 61)   0B6B 20 05       		 JR NZ,I2CRWT_OK  ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 62)   0B6D 0B          		 DEC BC	;
 63)   0B6E 78          		 LD A,B	;
 64)   0B6F B1          		 OR C	;
 65)   0B70 20 F5       		 JR NZ,I2CRWT_AGN	;
 66)   0B72 C1          		I2CRWT_OK: POP BC	;
 67)   0B73 DB 48       		 IN A,(DI2C_STA)  ;VALID HERE	;VALID HERE
 68)   0B75 C9          		 RET	;
 70)   0B76 DB 4B       		I2C_RDSTAT_NW: IN A,(DI2C_CON) ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 71)   0B78 CB 5F       		 BIT 3,A   ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 72)   0B7A 3E FF       		 LD A,$FF  ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 73)   0B7C C8          		 RET Z   ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 74)   0B7D DB 48       		 IN A,(DI2C_STA)  ;VALID HERE	;VALID HERE
 75)   0B7F C9          		 RET	;
 78)   0B80 3E 01       		I2C_INIT: LD A,I2CADR	;
 79)   0B82 D3 48       		 OUT (DI2C_INDPTR),A	;
 80)   0B84 3E E0       		 LD A,$E0	;
 81)   0B86 D3 4A       		 OUT (DI2C_INDIR),A  ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 83)   0B88 3E 40       		 LD A,$40  ;INIT	;INIT
 84)   0B8A D3 4B       		 OUT (DI2C_CON),A ;	;
 85)   0B8C 06 FA       		 LD B,250	;
 86)   0B8E CD 62 26    		 CALL DELAYMICRO	;
 87)   0B91 06 FA       		 LD B,250	;
 88)   0B93 CD 62 26    		 CALL DELAYMICRO  ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 93)   0B96 3E 06       		 LD A,I2CMODE	;
 94)   0B98 D3 48       		 OUT (DI2C_INDPTR),A ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 95)   0B9A 3E 00       		 LD A,0   ;SELECT MODE 0	;SELECT MODE 0
 96)   0B9C D3 4A       		 OUT (DI2C_INDIR),A	;
 97)   0B9E 3E 02       		 LD A,I2CSCLL	;
 98)   0BA0 D3 48       		 OUT (DI2C_INDPTR),A ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 99)   0BA2 3E 9D       		 LD A,$9D  ;SELECT CLK L	;SELECT CLK L
100)   0BA4 D3 4A       		 OUT (DI2C_INDIR),A	;
101)   0BA6 3E 03       		 LD A,I2CSCLH	;
102)   0BA8 D3 48       		 OUT (DI2C_INDPTR),A ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
103)   0BAA 3E 86       		 LD A,$86  ;SELECT CLK H	;SELECT CLK H
104)   0BAC D3 4A       		 OUT (DI2C_INDIR),A	;
106)   0BAE C9          		 RET	;
113)   0BAF 3E 60       		I2C_WR_BYTE: LD A,$60  ;START	;START
114)   0BB1 D3 4B       		   OUT (DI2C_CON),A	;
115)   0BB3 CD 63 0B    		WRB_LP1: CALL I2C_RDSTAT_WT ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
116)   0BB6 5F          		 LD E,A   ;SAVE STATUS	;SAVE STATUS
117)   0BB7 FE 08       		 CP MASTER_START_TXed ;A HAS THE STATUS	;A HAS THE STATUS
118)   0BB9 28 21       		 JR Z,WRB_S1	;
119)   0BBB FE 10       		 CP MASTER_RESTART_TXed	;
120)   0BBD 28 1D       		 JR Z,WRB_S1	;
121)   0BBF FE 28       		 CP MASTER_DATA_W_ACK	;
122)   0BC1 28 26       		 JR Z,WRB_S2	;
123)   0BC3 FE 18       		 CP MASTER_SLA_W_ACK	;
124)   0BC5 28 23       		 JR Z,WRB_S3	;
125)   0BC7 FE 20       		 CP MASTER_SLA_W_NAK	;
126)   0BC9 28 2D       		 JR Z,WRB_EXIT	;
127)   0BCB FE 30       		 CP MASTER_DATA_W_NAK	;
128)   0BCD 28 29       		 JR Z,WRB_EXIT	;
129)   0BCF FE 38       		 CP MASTER_ARB_LOST	;
130)   0BD1 C8          		 RET Z	;
131)   0BD2 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
132)   0BD4 C8          		 RET Z	;
133)   0BD5 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
134)   0BD7 C8          		 RET Z	;
135)   0BD8 FE D8       		 CP SLAVE_GENERALCALL_AL 	;
136)   0BDA C8          		 RET Z	;
137)   0BDB C9          		 RET	;
139)   0BDC 7A          		WRB_S1: LD A,D    ;DEVICE ADDR	;DEVICE ADDR
140)   0BDD CB 27       		 SLA A	;
141)   0BDF E6 FE       		 AND $FE   ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
142)   0BE1 D3 49       		 OUT (DI2C_DAT),A  	;
143)   0BE3 3E 40       		 LD A,$40	;
144)   0BE5 D3 4B       		   OUT (DI2C_CON),A  	;
145)   0BE7 18 CA       		 JR WRB_LP1	;
146)   0BE9 0B          		WRB_S2: DEC BC	;
147)   0BEA 78          		WRB_S3: LD A,B	;
148)   0BEB B1          		 OR C	;
149)   0BEC 28 0A       		 JR Z,WRB_EXIT	;
150)   0BEE 7E          		 LD A,(HL)	;
151)   0BEF 23          		 INC HL	;
152)   0BF0 D3 49       		 OUT (DI2C_DAT),A	;
153)   0BF2 3E 40       		 LD A,$40	;
154)   0BF4 D3 4B       		   OUT (DI2C_CON),A	;
155)   0BF6 18 BB       		 JR WRB_LP1 	;
157)   0BF8 3E 50       		WRB_EXIT: LD A,$50 ;STOP	;STOP
158)   0BFA D3 4B       		   OUT (DI2C_CON),A	;
159)   0BFC 78          		 LD A,B	;
160)   0BFD B1          		 OR C	;
161)   0BFE C9          		 RET  ;IF A NOT ZERO THEN ERROR  	;IF A NOT ZERO THEN ERROR
167)   0BFF 78          		I2C_RD_BYTE: LD A,B	;
168)   0C00 B1          		 OR C	;
169)   0C01 C8          		 RET Z ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
170)   0C02 3E 60       		 LD A,$60	;
171)   0C04 D3 4B       		   OUT (DI2C_CON),A	;
172)   0C06 CD 63 0B    		RDB_LP1: CALL I2C_RDSTAT_WT ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
173)   0C09 1E 00       		 LD E,0	;
174)   0C0B FE 08       		 CP MASTER_START_TXed	;
175)   0C0D 28 1F       		 JR Z,RDB_S1	;
177)   0C0F 28 1D       		 JR Z,RDB_S1	;
178)   0C11 FE 58       		 CP MASTER_DATA_R_NAK	;
179)   0C13 28 26       		 JR Z,RDB_S2	;
180)   0C15 FE 50       		 CP MASTER_DATA_R_ACK	;
181)   0C17 28 24       		 JR Z,RDB_S3	;
182)   0C19 FE 40       		 CP MASTER_SLA_R_ACK	;
183)   0C1B 28 25       		 JR Z,RDB_S4	;
184)   0C1D FE 48       		 CP MASTER_SLA_R_NAK	;
185)   0C1F 28 38       		 JR Z,RDB_EXIT	;
186)   0C21 FE 38       		 CP MASTER_ARB_LOST	;
187)   0C23 C8          		 RET Z	;
188)   0C24 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
189)   0C26 C8          		 RET Z	;
190)   0C27 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
191)   0C29 C8          		 RET Z	;
192)   0C2A FE D8       		 CP SLAVE_GENERALCALL_AL 	;
193)   0C2C C8          		 RET Z	;
194)   0C2D C9          		 RET  	;
197)   0C2E 7A          		RDB_S1: LD A,D    ;DEVICE ADDR	;DEVICE ADDR
198)   0C2F CB 27       		 SLA A	;
199)   0C31 F6 01       		 OR $01   ;ADDR + READ COMMAND	;ADDR + READ COMMAND
200)   0C33 D3 49       		 OUT (DI2C_DAT),A	;
201)   0C35 3E 40       		 LD A,$40	;
202)   0C37 D3 4B       		   OUT (DI2C_CON),A	;
203)   0C39 18 CB       		 JR RDB_LP1	;
204)   0C3B 1E 01       		RDB_S2: LD E,1   ;MEANS WE EXIT	;MEANS WE EXIT
205)   0C3D DB 49       		RDB_S3: IN A,(DI2C_DAT)  ;READ DATA	;READ DATA
206)   0C3F 77          		 LD (HL),A	;
207)   0C40 23          		 INC HL	;
208)   0C41 0B          		 DEC BC   	;
209)   0C42 78          		RDB_S4: LD A,B   ; IS LENGTH 0	; IS LENGTH 0
210)   0C43 B1          		 OR C	;
211)   0C44 28 13       		 JR Z,RDB_EXIT 	;
212)   0C46 7B          		 LD A,E	;
213)   0C47 FE 01       		 CP 1	;
214)   0C49 28 0E       		 JR Z,RDB_EXIT 	;
215)   0C4B 78          		 LD A,B	;
216)   0C4C 81          		 ADD C	;
217)   0C4D FE 01       		 CP 1	;
218)   0C4F 3E 40       		 LD A,$40 	;
219)   0C51 28 02       		 JR Z,RDB_NXT1	;
220)   0C53 3E C0       		 LD A,$C0	;
221)   0C55 D3 4B       		RDB_NXT1: OUT (DI2C_CON),A  ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0 	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
222)   0C57 18 AD       		 JR RDB_LP1	;
224)   0C59 3E 50       		RDB_EXIT: LD A,$50	;
225)   0C5B D3 4B       		   OUT (DI2C_CON),A	;
226)   0C5D 78          		 LD A,B	;
227)   0C5E B1          		 OR C	;
228)   0C5F C9          		 RET  ;IF A NOT ZERO THEN ERROR 	;IF A NOT ZERO THEN ERROR
 26)   0C60 53 75 6E 64 		SUN DEFM  "Sunday"	;
 26)   0C64 61 79       		SUN DEFM  "Sunday"	;
 27)   0C66 00          		 DB 0	;
 28)   0C67 4D 6F 6E 64 		MON    DEFM  "Monday"	;
 28)   0C6B 61 79       		MON    DEFM  "Monday"	;
 29)   0C6D 00          		 DB 0	;
 30)   0C6E 54 75 65 73 		TUE    DEFM  "Tuesday"	;
 30)   0C72 64 61 79    		TUE    DEFM  "Tuesday"	;
 31)   0C75 00          		 DB 0	;
 32)   0C76 57 65 64 6E 		WED DEFM  "Wednesday"	;
 32)   0C7A 65 73 64 61 		WED DEFM  "Wednesday"	;
 32)   0C7E 79          		WED DEFM  "Wednesday"	;
 33)   0C7F 00          		 DB 0	;
 34)   0C80 54 68 75 72 		THU DEFM "Thursday"	;
 34)   0C84 73 64 61 79 		THU DEFM "Thursday"	;
 35)   0C88 00          		 DB 0	;
 36)   0C89 46 72 69 64 		FRI DEFM "Friday"	;
 36)   0C8D 61 79       		FRI DEFM "Friday"	;
 37)   0C8F 00          		 DB 0	;
 38)   0C90 53 61 74 75 		SAT DEFM "Saturday"	;
 38)   0C94 72 64 61 79 		SAT DEFM "Saturday"	;
 39)   0C98 00          		 DB 0	;
 41)   0C99 60 0C       		DAYS DEFW SUN	;
 42)   0C9B 67 0C       		 DEFW MON	;
 43)   0C9D 6E 0C       		 DEFW TUE	;
 44)   0C9F 76 0C       		 DEFW WED	;
 45)   0CA1 80 0C       		 DEFW THU	;
 46)   0CA3 89 0C       		 DEFW FRI	;
 47)   0CA5 90 0C       		 DEFW SAT	;
 49)   0CA7 45 52 52 4F 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CAB 52 20 4F 4E 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CAF 20 52 45 43 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CB3 45 49 56 49 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CB7 4E 47       		MESERR DEFM "ERROR ON RECEIVING"	;
 50)   0CB9 0A 0D 00    		    DEFB 10,13,0	;
 52)   0CBC 45 52 52 4F 		MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0CC0 52 20 4F 4E 		MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0CC4 20 53 45 4E 		MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0CC8 44 49 4E 47 		MESERR0 DEFM "ERROR ON SENDING"	;
 53)   0CCC 0A 0D 00    		    DEFB 10,13,0	;
 55)   0CCF 7B          		SHERR0: LD A,E	;
 56)   0CD0 C5          		 PUSH BC	;
 57)   0CD1 CD EE 03    		 CALL SOUTAS	;
 58)   0CD4 C1          		 POP BC	;
 59)   0CD5 79          		 LD A,C	;
 60)   0CD6 CD EE 03    		 CALL SOUTAS	;
 62)   0CD9 21 BC 0C    		 LD HL,MESERR0	;
 63)   0CDC CD D8 05    		 CALL RS_TXT	;
 64)   0CDF C9          		 RET	;
 67)   0CE0 79          		SHERR: LD A,C	;
 68)   0CE1 CD EE 03    		 CALL SOUTAS	;
 69)   0CE4 21 A7 0C    		 LD HL,MESERR	;
 70)   0CE7 CD D8 05    		 CALL RS_TXT	;
 71)   0CEA 37          		 SCF	;
 72)   0CEB C9          		 RET	;
 75)   0CEC 21 89 FE    		@DS1307_GETNOW: LD HL,BUFFER	;
 76)   0CEF AF          		 XOR A   ;SEND COMMAND 0	;SEND COMMAND 0
 77)   0CF0 77          		 LD (HL),A	;
 78)   0CF1 16 68       		 LD D,DS1307_ADDRESS	;
 79)   0CF3 01 01 00    		 LD BC,1	;
 80)   0CF6 CD AF 0B    		 CALL I2C_WRITE	;
 81)   0CF9 C2 CF 0C    		 JP NZ,SHERR0	;
 83)   0CFC 21 89 FE    		 LD HL,BUFFER	;
 84)   0CFF 16 68       		 LD D,DS1307_ADDRESS	;
 85)   0D01 01 07 00    		 LD BC,7	;
 86)   0D04 CD FF 0B    		 CALL I2C_READ	;
 87)   0D07 C2 E0 0C    		 JP NZ,SHERR	;
 88)   0D0A AF          		 XOR A	;
 89)   0D0B C9          		 RET	;
 95)   0D0C 11 89 FE    		 LD DE,BUFFER	;
 96)   0D0F AF          		 XOR A	;
 97)   0D10 12          		 LD (DE),A	;
 98)   0D11 13          		 INC DE	;
 99)   0D12 3E 0A       		 LD A,10 ; 10 SECS	; 10 SECS
100)   0D14 CD A9 26    		 CALL BN2BCD	;
101)   0D17 7D          		 LD A,L	;
102)   0D18 12          		 LD (DE),A	;
103)   0D19 13          		 INC DE	;
104)   0D1A 3E 22       		 LD A,34 ; 28 MINS	; 28 MINS
105)   0D1C CD A9 26    		 CALL BN2BCD	;
106)   0D1F 7D          		 LD A,L	;
107)   0D20 12          		 LD (DE),A	;
108)   0D21 13          		 INC DE	;
109)   0D22 3E 12       		 LD A,18 ; 19 HOURS	; 19 HOURS
110)   0D24 CD A9 26    		 CALL BN2BCD	;
111)   0D27 7D          		 LD A,L	;
112)   0D28 12          		 LD (DE),A	;
113)   0D29 13          		 INC DE	;
114)   0D2A 3E 05       		 LD A,5 ; DAY OF WEEK 	; DAY OF WEEK
115)   0D2C 12          		 LD (DE),A	;
116)   0D2D 13          		 INC DE	;
117)   0D2E 3E 12       		 LD A,18 ; 8 DAY	; 8 DAY
118)   0D30 CD A9 26    		 CALL BN2BCD	;
119)   0D33 7D          		 LD A,L	;
120)   0D34 12          		 LD (DE),A	;
121)   0D35 13          		 INC DE	;
122)   0D36 3E 02       		 LD A,02 ; 10 MONTH	; 10 MONTH
123)   0D38 CD A9 26    		 CALL BN2BCD	;
124)   0D3B 7D          		 LD A,L	;
125)   0D3C 12          		 LD (DE),A	;
126)   0D3D 13          		 INC DE	;
127)   0D3E 3E 15       		 LD A,21 ; 21 YEAR (2020)	; 21 YEAR (2020)
128)   0D40 CD A9 26    		 CALL BN2BCD	;
129)   0D43 7D          		 LD A,L	;
130)   0D44 12          		 LD (DE),A	;
131)   0D45 13          		 INC DE	;
132)   0D46 AF          		 XOR A	;
133)   0D47 12          		 LD (DE),A	;
146)   0D48 21 89 FE    		@DS1307_ADJUST: LD HL,BUFFER	;
147)   0D4B 16 68       		 LD D,DS1307_ADDRESS	;
148)   0D4D 01 09 00    		 LD BC,9	;
149)   0D50 CD AF 0B    		 CALL I2C_WRITE	;
150)   0D53 C2 CF 0C    		 JP NZ,SHERR0	;
151)   0D56 01 FF FF    		 LD BC,FFFFh ;8000H FOR 4MHZ	;8000H FOR 4MHZ
152)   0D59 CD 26 27    		 CALL PAUSE_LOOP ; 0.5 second delay 	; 0.5 second delay
153)   0D5C 01 FF FF    		 LD BC,FFFFh ;8000H FOR 4MHZ	;8000H FOR 4MHZ
154)   0D5F CD 26 27    		 CALL PAUSE_LOOP ; 0.5 second delay 	; 0.5 second delay
155)   0D62 C9          		 RET	;
159)   0D63 21 89 FE    		@DS1307_SETSQ: LD HL,BUFFER	;
160)   0D66 E5          		 PUSH HL	;
161)   0D67 3E 07       		 LD A,DS1307_CONTROL_REGISTER	;
162)   0D69 77          		 LD (HL),A	;
163)   0D6A 23          		 INC HL	;
164)   0D6B 7A          		 LD A,D	;
165)   0D6C 77          		 LD (HL),A	;
166)   0D6D E1          		 POP HL	;
167)   0D6E 16 68       		 LD D,DS1307_ADDRESS	;
168)   0D70 01 02 00    		 LD BC,2	;
169)   0D73 CD AF 0B    		 CALL I2C_WRITE	;
170)   0D76 C2 CF 0C    		 JP NZ,SHERR0 	;
171)   0D79 C9          		 RET	;
105)   0D7A 00          		LCD_DSPMODE DB 0	;
106)   0D7B 00          		LCD_DSPCTRL DB 0	;
111)   0D7C 16 00       		LCD16_WR4BITS: LD D,0 ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
113)   0D7E 0F          		 RRCA   ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
114)   0D7F 30 02       		 JR NC,LWNXT1   ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
115)   0D81 CB E2       		 SET D4,D	;
116)   0D83 0F          		LWNXT1: RRCA	;
117)   0D84 30 02       		 JR NC,LWNXT2   ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
118)   0D86 CB EA       		 SET D5,D	;
119)   0D88 0F          		LWNXT2: RRCA	;
120)   0D89 30 02       		 JR NC,LWNXT3   ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
121)   0D8B CB F2       		 SET D6,D	;
122)   0D8D 0F          		LWNXT3: RRCA	;
123)   0D8E 30 02       		 JR NC,LWNXT4   ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
124)   0D90 CB FA       		 SET D7,D	;
125)   0D92 7B          		LWNXT4: LD A,E	;
126)   0D93 0F          		 RRCA	;
127)   0D94 30 02       		 JR NC,LWNXT5	;
128)   0D96 CB C2       		 SET RS,D	;
131)   0D98 CB D2       		 SET EN,D  ;EN=HIGH	;EN=HIGH
132)   0D9A 7A          		 LD A,D	;
133)   0D9B CD A5 0D    		 CALL LCD16_I2CSEND	;
134)   0D9E CB 92       		 RES EN,D  ;EN=LOW	;EN=LOW
135)   0DA0 7A          		 LD A,D	;
136)   0DA1 CD A5 0D    		 CALL LCD16_I2CSEND	;
137)   0DA4 C9          		 RET	;
141)   0DA5 D5          		LCD16_I2CSEND: PUSH DE	;
142)   0DA6 E5          		 PUSH HL	;
143)   0DA7 21 89 FE    		 LD HL,BUFFER	;
144)   0DAA 77          		 LD (HL),A	;
145)   0DAB 16 27       		 LD D,LCDADDR	;
146)   0DAD 01 01 00    		 LD BC,1	;
147)   0DB0 CD AF 0B    		 CALL I2C_WRITE	;
148)   0DB3 E1          		 POP HL	;
149)   0DB4 D1          		 POP DE	;
150)   0DB5 C9          		 RET	;
154)   0DB6 57          		LCD16_SEND: LD D,A ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
155)   0DB7 7B          		 LD A,E	;
156)   0DB8 0F          		 RRCA	;
157)   0DB9 38 07       		 JR C,ISCMDDATA	;
158)   0DBB 0F          		 RRCA	;
159)   0DBC 30 04       		 JR NC,ISCMDDATA	;
161)   0DBE 1E 00       		 LD E,COMMAND   ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
162)   0DC0 18 0E       		 JR LCSD_4BIT  	;
163)   0DC2 7A          		ISCMDDATA: LD A,D	;
164)   0DC3 CB 3F       		 SRL A	;
165)   0DC5 CB 3F       		 SRL A	;
166)   0DC7 CB 3F       		 SRL A	;
167)   0DC9 CB 3F       		 SRL A	;
168)   0DCB D5          		 PUSH DE	;
169)   0DCC CD 7C 0D    		 CALL LCD16_WR4BITS ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
170)   0DCF D1          		 POP DE	;
171)   0DD0 7A          		LCSD_4BIT: LD A,D	;
172)   0DD1 E6 0F       		 AND $0F	;
173)   0DD3 CD 7C 0D    		 CALL LCD16_WR4BITS ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
174)   0DD6 C9          		 RET	;
179)   0DD7 1E 00       		LCD16_COMMD:   LD E,COMMAND	;
180)   0DD9 C3 B6 0D    		 JP LCD16_SEND	;
183)   0DDC 1E 01       		LCD16_DATA: LD E,LCD_DATA	;
184)   0DDE C3 B6 0D    		 JP LCD16_SEND	;
188)   0DE1 3E 03       		@LCD16_INIT: LD A,3     ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
189)   0DE3 1E 02       		 LD E,FOUR_BITS	;
190)   0DE5 CD B6 0D    		 CALL LCD16_SEND	;
191)   0DE8 01 00 30    		 LD BC,$3000	;
192)   0DEB CD 26 27    		 CALL PAUSE_LOOP  ;DELAY 4,5ms	;DELAY 4,5ms
193)   0DEE 3E 03       		 LD A,3	;
194)   0DF0 1E 02       		 LD E,FOUR_BITS	;
195)   0DF2 CD B6 0D    		 CALL LCD16_SEND	;
196)   0DF5 01 00 30    		 LD BC,$3000	;
197)   0DF8 CD 26 27    		 CALL PAUSE_LOOP  ;DELAY 4,5ms  	;DELAY 4,5ms
198)   0DFB 3E 03       		 LD A,3	;
199)   0DFD 1E 02       		 LD E,FOUR_BITS	;
200)   0DFF CD B6 0D    		 CALL LCD16_SEND	;
201)   0E02 01 00 30    		 LD BC,$3000	;
202)   0E05 CD 26 27    		 CALL PAUSE_LOOP  ;DELAY 4,5ms	;DELAY 4,5ms
203)   0E08 3E 02       		 LD A,2   ;PUT 4 BIT MODE	;PUT 4 BIT MODE
204)   0E0A 1E 02       		 LD E,FOUR_BITS	;
205)   0E0C CD B6 0D    		 CALL LCD16_SEND	;
206)   0E0F 01 00 30    		 LD BC,$3000	;
207)   0E12 CD 26 27    		 CALL PAUSE_LOOP  ;DELAY 4,5ms	;DELAY 4,5ms
209)   0E15 3E 28       		    LD A,LCD_FUNCTIONSET OR LCD_2LINE	;
210)   0E17 CD D7 0D    		 CALL LCD16_COMMD	;
211)   0E1A 3E 04       		 LD A,LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF  	;
212)   0E1C 32 7B 0D    		 LD (LCD_DSPCTRL),A   	;
213)   0E1F CD 3E 0E    		 CALL LCD16_DISP	;
214)   0E22 CD 59 0E    		    CALL LCD16_CLR	;
215)   0E25 3E 02       		    LD A,LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
216)   0E27 32 7A 0D    		    LD (LCD_DSPMODE),A	;
217)   0E2A F6 04       		    OR LCD_ENTRYMODESET	;
218)   0E2C CD D7 0D    		    CALL LCD16_COMMD	;
219)   0E2F C9          		 RET	;
221)   0E30 3A 7B 0D    		@LCD16_NODISP: LD A,(LCD_DSPCTRL)	;
222)   0E33 CB A7       		    RES LCD_DISPLAYON,A	;
223)   0E35 32 7B 0D    		    LD (LCD_DSPCTRL),A	;
224)   0E38 F6 08       		    OR LCD_DISPLAYCONTROL	;
225)   0E3A CD D7 0D    		    CALL LCD16_COMMD	;
226)   0E3D C9          		 RET	;
227)   0E3E 3A 7B 0D    		@LCD16_DISP: LD A,(LCD_DSPCTRL)	;
228)   0E41 F6 04       		    OR LCD_DISPLAYON	;
229)   0E43 32 7B 0D    		    LD (LCD_DSPCTRL),A	;
230)   0E46 F6 08       		    OR LCD_DISPLAYCONTROL	;
231)   0E48 CD D7 0D    		    CALL LCD16_COMMD	;
232)   0E4B C9          		 RET	;
234)   0E4C 01 D0 07    		LCDDELAY: LD BC,HOME_CLEAR_EXEC	;
235)   0E4F C5          		LCLR_AGN1: PUSH BC 	;
236)   0E50 CD 62 26    		 CALL DELAYMICRO	;
237)   0E53 C1          		 POP BC	;
238)   0E54 0D          		 DEC C  	;
239)   0E55 E2 4F 0E    		 JP PO,LCLR_AGN1	;
240)   0E58 C9          		 RET	;
242)   0E59 3E 01       		@LCD16_CLR: LD A,LCD_CLEARDISPLAY ;clear display, set cursor position to zero	;clear display, set cursor position to zero
243)   0E5B CD D7 0D    		 CALL LCD16_COMMD	;
244)   0E5E CD 4C 0E    		 CALL LCDDELAY	;
245)   0E61 C9          		 RET 	;
248)   0E62 7E          		@LCD16_PRINT: LD A,(HL)	;
249)   0E63 FE 00       		 CP 0	;
250)   0E65 C8          		 RET Z	;
251)   0E66 CD DC 0D    		 CALL LCD16_DATA	;
252)   0E69 23          		 INC HL	;
253)   0E6A 18 F6       		 JR LCD16_PRINT	;
256)   0E6C CD DC 0D    		@LCD16_PRCHR: CALL LCD16_DATA	;
257)   0E6F C9          		 RET	;
259)   0E70 3E 02       		@LCD16_HOME: LD A,LCD_RETURNHOME	;
260)   0E72 CD D7 0D    		 CALL LCD16_COMMD 	;
261)   0E75 CD 4C 0E    		 CALL LCDDELAY     	;
262)   0E78 C9          		 RET	;
265)   0E79 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54 	;
266)   0E7D 06 00       		@LCD16_SETCURS: LD B,0	;
267)   0E7F 4B          		 LD C,E	;
268)   0E80 21 79 0E    		 LD HL,ROWOFFSET	;
269)   0E83 09          		 ADD HL,BC	;
270)   0E84 7E          		 LD A,(HL)	;
271)   0E85 82          		 ADD D	;
272)   0E86 F6 80       		 OR LCD_SETDDRAMADDR	;
273)   0E88 CD D7 0D    		 CALL LCD16_COMMD	;
274)   0E8B C9          		 RET	;
276)   0E8C 3A 7B 0D    		@LCD16_CURSOFF: LD A,(LCD_DSPCTRL)	;
277)   0E8F CB 97       		    RES LCD_CURSORON,A	;
278)   0E91 32 7B 0D    		    LD (LCD_DSPCTRL),A	;
279)   0E94 F6 08       		    OR LCD_DISPLAYCONTROL	;
280)   0E96 CD D7 0D    		    CALL LCD16_COMMD	;
281)   0E99 C9          		 RET	;
284)   0E9A 3A 7B 0D    		@LCD16_CURSON: LD A,(LCD_DSPCTRL)	;
285)   0E9D F6 02       		    OR LCD_CURSORON	;
286)   0E9F 32 7B 0D    		    LD (LCD_DSPCTRL),A	;
287)   0EA2 F6 08       		    OR LCD_DISPLAYCONTROL	;
288)   0EA4 CD D7 0D    		    CALL LCD16_COMMD	;
289)   0EA7 C9          		    RET  	;
291)   0EA8 3A 7B 0D    		@LCD16_BLINKOFF: LD A,(LCD_DSPCTRL)	;
292)   0EAB CB 8F       		    RES LCD_BLINKON,A	;
293)   0EAD 32 7B 0D    		    LD (LCD_DSPCTRL),A	;
294)   0EB0 F6 08       		    OR LCD_DISPLAYCONTROL	;
295)   0EB2 CD D7 0D    		    CALL LCD16_COMMD	;
296)   0EB5 C9          		 RET	;
299)   0EB6 3A 7B 0D    		@LCD16_BLINKON: LD A,(LCD_DSPCTRL)	;
300)   0EB9 F6 01       		    OR LCD_BLINKON	;
301)   0EBB 32 7B 0D    		    LD (LCD_DSPCTRL),A	;
302)   0EBE F6 08       		    OR LCD_DISPLAYCONTROL	;
303)   0EC0 CD D7 0D    		    CALL LCD16_COMMD	;
304)   0EC3 C9          		    RET  	;
306)   0EC4 3E 18       		@LCD16_SCRLEFT: LD A,LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
307)   0EC6 CD D7 0D    		 CALL LCD16_COMMD	;
308)   0EC9 C9          		 RET	;
310)   0ECA 3E 1C       		@LCD16_SCRRIGHT: LD A,LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
311)   0ECC CD D7 0D    		 CALL LCD16_COMMD	;
312)   0ECF C9          		 RET	;
314)   0ED0 3E 10       		@LCD16_MOVLEFT: LD A,LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
315)   0ED2 CD D7 0D    		 CALL LCD16_COMMD	;
316)   0ED5 C9          		 RET	;
318)   0ED6 3E 14       		@LCD16_MOVRIGHT: LD A,LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
319)   0ED8 CD D7 0D    		 CALL LCD16_COMMD	;
320)   0EDB C9          		 RET	;
 16)   0EDC 	            		      LCD_RS EQU DEVTFT;  ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;  ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   0EDC 	            		      LCD_CS EQU DEVTFT+1;  ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;  ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   0EDC 7B          		   LD A,E	;
 32)   0EDD D3 11       		   OUT (LCD_CS),A	;
 37)   0EDF DB 11       		   IN A,(LCD_CS)	;
 38)   0EE1 C9          		   RET	;
 45)   0EE2 7A          		   LD A,D  	;
 46)   0EE3 D3 11       		   OUT (LCD_CS),A	;
 47)   0EE5 C9          		   RET	;
 53)   0EE6 7A          		   LD A,D  	;
 54)   0EE7 D3 10       		   OUT (LCD_RS),A	;
 55)   0EE9 C9          		   RET	;
 62)   0EEA AF          		   XOR A	;
 63)   0EEB D3 10       		   OUT (LCD_RS),A  ;RS LOW = COMMAND BYTE      	;RS LOW = COMMAND BYTE
 64)   0EED CD E2 0E    		   CALL LCD_WR_BUS	;
 65)   0EF0 3E 01       		   LD A,1	;
 66)   0EF2 D3 10       		   OUT (LCD_RS),A  ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   0EF4 C9          		   RET	;
 71)   0EF5 16 E2       		   LD D,0xE2         ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   0EF7 CD E6 0E    		   CALL LCD_WR_COM   ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   0EFA 16 23       		   LD D,0x23 ;1E	;1E
 74)   0EFC CD E2 0E    		   CALL LCD_WR_DAT	;
 75)   0EFF 16 02       		   LD D,0x02	;
 76)   0F01 CD E2 0E    		   CALL LCD_WR_DAT	;
 77)   0F04 16 54       		   LD D,0x54	;
 78)   0F06 CD E2 0E    		   CALL LCD_WR_DAT	;
 79)   0F09 16 E0       		   LD D,0xE0         ; PLL enable    	; PLL enable
 80)   0F0B CD E6 0E    		   CALL LCD_WR_COM	;
 81)   0F0E 16 01       		   LD D,0x01	;
 82)   0F10 CD E2 0E    		   CALL LCD_WR_DAT	;
 83)   0F13 06 0A       		   LD B,10        ;delay(10);	;delay(10);
 84)   0F15 CD 62 26    		   CALL DELAYMICRO	;
 85)   0F18 16 E0       		   LD D,0xE0         ; PLL enable    	; PLL enable
 86)   0F1A CD E6 0E    		   CALL LCD_WR_COM   	;
 87)   0F1D 16 03       		   LD D,0x03	;
 88)   0F1F CD E2 0E    		   CALL LCD_WR_DAT	;
 89)   0F22 06 0A       		   LD B,10        ;delay(10);	;delay(10);
 90)   0F24 CD 62 26    		   CALL DELAYMICRO    	;
 92)   0F27 16 01       		   LD D,0x01         ; software reset  	; software reset
 93)   0F29 CD E6 0E    		   CALL LCD_WR_COM   	;
 94)   0F2C 06 14       		   LD B,20       ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   0F2E CD 62 26    		   CALL DELAYMICRO        	;
 96)   0F31 16 E6       		   LD D,0xE6         ;PLL setting for PCLK, depends on resolution  	;PLL setting for PCLK, depends on resolution
 97)   0F33 CD E6 0E    		   CALL LCD_WR_COM           	;
 98)   0F36 16 03       		   LD D,0x03	;
 99)   0F38 CD E2 0E    		   CALL LCD_WR_DAT   	;
100)   0F3B 16 33       		   LD D,0x33 ;FF	;FF
101)   0F3D CD E2 0E    		   CALL LCD_WR_DAT       	;
102)   0F40 16 33       		   LD D,0x33 ;FF	;FF
103)   0F42 CD E2 0E    		   CALL LCD_WR_DAT   	;
105)   0F45 16 B0       		   LD D,0xB0         ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   0F47 CD E6 0E    		   CALL LCD_WR_COM       	;
107)   0F4A 16 20       		   LD D,0x20	;
108)   0F4C CD E2 0E    		   CALL LCD_WR_DAT   	;
109)   0F4F 16 00       		   LD D,0x00	;
110)   0F51 CD E2 0E    		   CALL LCD_WR_DAT       	;
111)   0F54 16 03       		   LD D,0x03         ;Set HDP  799	;Set HDP  799
112)   0F56 CD E2 0E    		   CALL LCD_WR_DAT   	;
113)   0F59 16 1F       		   LD D,0x1F	;
114)   0F5B CD E2 0E    		   CALL LCD_WR_DAT   	;
115)   0F5E 16 01       		   LD D,0x01         ;Set VDP  479	;Set VDP  479
116)   0F60 CD E2 0E    		   CALL LCD_WR_DAT   	;
117)   0F63 16 DF       		   LD D,0xDF	;
118)   0F65 CD E2 0E    		   CALL LCD_WR_DAT 	;
119)   0F68 16 00       		   LD D,0x00	;
120)   0F6A CD E2 0E    		   CALL LCD_WR_DAT     	;
123)   0F6D 16 B4       		   LD D,0xB4         ;HSYNC	;HSYNC
124)   0F6F CD E6 0E    		   CALL LCD_WR_COM       	;
125)   0F72 16 04       		   LD D,0x04 ;03         ;Set HT 928	;03         ;Set HT 928
126)   0F74 CD E2 0E    		   CALL LCD_WR_DAT   	;
127)   0F77 16 1F       		   LD D,0x1F ;A0	;A0
128)   0F79 CD E2 0E    		   CALL LCD_WR_DAT       	;
129)   0F7C 16 00       		   LD D,0x00         ;Set HPS  46	;Set HPS  46
130)   0F7E CD E2 0E    		   CALL LCD_WR_DAT   	;
131)   0F81 16 D2       		   LD D,0xD2 ;2E	;2E
132)   0F83 CD E2 0E    		   CALL LCD_WR_DAT   	;
133)   0F86 16 00       		   LD D,0x00 ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   0F88 CD E2 0E    		   CALL LCD_WR_DAT   	;
135)   0F8B 16 00       		   LD D,0x00         ;Set LPS  15	;Set LPS  15
136)   0F8D CD E2 0E    		   CALL LCD_WR_DAT 	;
137)   0F90 16 00       		   LD D,0x00 ;0F	;0F
138)   0F92 CD E2 0E    		   CALL LCD_WR_DAT   	;
139)   0F95 16 00       		   LD D,0x00	;
140)   0F97 CD E2 0E    		   CALL LCD_WR_DAT     	;
142)   0F9A 16 B6       		   LD D,0xB6         ;VSYNC	;VSYNC
143)   0F9C CD E6 0E    		   CALL LCD_WR_COM       	;
144)   0F9F 16 02       		   LD D,0x02         ;Set VT 525	;Set VT 525
145)   0FA1 CD E2 0E    		   CALL LCD_WR_DAT   	;
146)   0FA4 16 0C       		   LD D,0x0C ;0D	;0D
147)   0FA6 CD E2 0E    		   CALL LCD_WR_DAT       	;
148)   0FA9 16 00       		   LD D,0x00         ;Set VPS  16	;Set VPS  16
149)   0FAB CD E2 0E    		   CALL LCD_WR_DAT   	;
150)   0FAE 16 22       		   LD D,0x22 ;10	;10
151)   0FB0 CD E2 0E    		   CALL LCD_WR_DAT   	;
152)   0FB3 16 00       		   LD D,0x00 ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   0FB5 CD E2 0E    		   CALL LCD_WR_DAT   	;
154)   0FB8 16 00       		   LD D,0x00         ;Set FPS  8	;Set FPS  8
155)   0FBA CD E2 0E    		   CALL LCD_WR_DAT 	;
156)   0FBD 16 00       		   LD D,0x00 ; 08	; 08
157)   0FBF CD E2 0E    		   CALL LCD_WR_DAT   	;
159)   0FC2 16 B8       		   LD D,0xB8         	;
160)   0FC4 CD E6 0E    		   CALL LCD_WR_COM           	;
161)   0FC7 16 0F       		   LD D,0x0F ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   0FC9 CD E2 0E    		   CALL LCD_WR_DAT         	;
163)   0FCC 16 01       		   LD D,0x01         ;GPIO0 normal	;GPIO0 normal
164)   0FCE CD E2 0E    		   CALL LCD_WR_DAT 	;
166)   0FD1 16 BA       		   LD D,0xBA         	;
167)   0FD3 CD E6 0E    		   CALL LCD_WR_COM           	;
168)   0FD6 16 01       		   LD D,0x01 ;0F	;0F
169)   0FD8 CD E2 0E    		   CALL LCD_WR_DAT   ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   0FDB 16 36       		   LD D,0x36         ;rotation	;rotation
172)   0FDD CD E6 0E    		   CALL LCD_WR_COM           	;
173)   0FE0 16 08       		   LD D,0x08 ;2A         	;2A
174)   0FE2 CD E2 0E    		   CALL LCD_WR_DAT         	;
176)   0FE5 16 F0       		   LD D,0xF0         ;pixel data interface	;pixel data interface
177)   0FE7 CD E6 0E    		   CALL LCD_WR_COM           	;
178)   0FEA 16 06       		   LD D,0x06         ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES 	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   0FEC CD E2 0E    		   CALL LCD_WR_DAT     	;
181)   0FEF 06 05       		   LD B,5       ;delay(5);	;delay(5);
182)   0FF1 CD 62 26    		   CALL DELAYMICRO        	;
184)   0FF4 16 BC       		   LD D,0xBC          ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   0FF6 CD E6 0E    		   CALL LCD_WR_COM           	;
186)   0FF9 16 40       		   LD D,0x40	;
187)   0FFB CD E2 0E    		   CALL LCD_WR_DAT   	;
188)   0FFE 16 80       		   LD D,0x80	;
189)   1000 CD E2 0E    		   CALL LCD_WR_DAT   	;
190)   1003 16 40       		   LD D,0x40	;
191)   1005 CD E2 0E    		   CALL LCD_WR_DAT   	;
192)   1008 16 01       		   LD D,0x01	;
193)   100A CD E2 0E    		   CALL LCD_WR_DAT       	;
194)   100D 06 05       		   LD B,5       ;delay(5);	;delay(5);
195)   100F CD 62 26    		   CALL DELAYMICRO  	;
197)   1012 16 35       		   LD D,0x35         ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   1014 CD E6 0E    		   CALL LCD_WR_COM     	;
199)   1017 16 00       		   LD D,0x00         ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   1019 CD E2 0E    		   CALL LCD_WR_DAT     	;
202)   101C 16 29       		   LD D,0x29         ;display on 	;display on
203)   101E CD E6 0E    		   CALL LCD_WR_COM       	;
204)   1021 16 BE       		   LD D,0xBE         ;set PWM for B/L	;set PWM for B/L
205)   1023 CD E6 0E    		   CALL LCD_WR_COM                 	;
206)   1026 16 06       		   LD D,0x06	;
207)   1028 CD E2 0E    		   CALL LCD_WR_DAT                 	;
208)   102B 16 F0       		   LD D,0xF0         	;
209)   102D CD E2 0E    		   CALL LCD_WR_DAT   	;
210)   1030 16 01       		   LD D,0x01         	;
211)   1032 CD E2 0E    		   CALL LCD_WR_DAT   	;
212)   1035 16 F0       		   LD D,0xF0         	;
213)   1037 CD E2 0E    		   CALL LCD_WR_DAT   	;
214)   103A 16 00       		   LD D,0x00         	;
215)   103C CD E2 0E    		   CALL LCD_WR_DAT   	;
216)   103F 16 00       		   LD D,0x00         	;
217)   1041 CD E2 0E    		   CALL LCD_WR_DAT                   	;
219)   1044 16 D0       		   LD D,0xD0         	;
220)   1046 CD E6 0E    		   CALL LCD_WR_COM                 	;
221)   1049 16 0D       		   LD D,0x0D         	;
222)   104B CD E2 0E    		   CALL LCD_WR_DAT         	;
225)   104E 21 00 00    		   LD HL,0	;
226)   1051 E5          		   PUSH HL	;
227)   1052 E5          		   PUSH HL	;
228)   1053 21 1F 03    		   LD HL,799	;
229)   1056 E5          		   PUSH HL	;
230)   1057 21 DF 01    		   LD HL,479	;
231)   105A E5          		   PUSH HL	;
232)   105B CD 5F 10    		   CALL LCD_SETXY	;
233)   105E C9          		   RET	;
250)   105F DD 21 02 00 		   LD IX,2	;
251)   1063 DD 39       		   ADD IX,SP         	;
252)   1065 16 2A       		   LD D,0x2A         ;SEND IX PARAMS	;SEND IX PARAMS
253)   1067 CD E6 0E    		   CALL LCD_WR_COM    	;
254)   106A DD 56 07    		   LD D,(IX+7)	;
255)   106D CD E2 0E    		   CALL LCD_WR_DAT	;
256)   1070 DD 56 06    		   LD D,(IX+6)	;
257)   1073 CD E2 0E    		   CALL LCD_WR_DAT	;
258)   1076 DD 56 03    		   LD D,(IX+3)	;
259)   1079 CD E2 0E    		   CALL LCD_WR_DAT	;
260)   107C DD 56 02    		   LD D,(IX+2)	;
261)   107F CD E2 0E    		   CALL LCD_WR_DAT       	;
262)   1082 16 2B       		   LD D,0x2B         ;SEND Y PARAMS	;SEND Y PARAMS
263)   1084 CD E6 0E    		   CALL LCD_WR_COM   	;
264)   1087 DD 56 05    		   LD D,(IX+5)	;
265)   108A CD E2 0E    		   CALL LCD_WR_DAT	;
266)   108D DD 56 04    		   LD D,(IX+4)	;
267)   1090 CD E2 0E    		   CALL LCD_WR_DAT	;
268)   1093 DD 56 01    		   LD D,(IX+1)	;
269)   1096 CD E2 0E    		   CALL LCD_WR_DAT	;
270)   1099 DD 56 00    		   LD D,(IX)	;
271)   109C CD E2 0E    		   CALL LCD_WR_DAT       	;
272)   109F 16 2C       		   LD D,0x2C         ;SEND DATA	;SEND DATA
273)   10A1 CD E6 0E    		   CALL LCD_WR_COM   	;
274)   10A4 D1          		   POP DE	;
275)   10A5 21 08 00    		   LD HL,4*2       ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   10A8 39          		   ADD HL,SP	;
277)   10A9 F9          		   LD SP,HL	;
278)   10AA EB          		   EX DE,HL	;
279)   10AB E9          		   JP (HL)        	;
285)   10AC 54          		   LD D,H        	;
286)   10AD CD E2 0E    		   CALL LCD_WR_DAT 	;
287)   10B0 55          		   LD D,L	;
288)   10B1 CD E2 0E    		   CALL LCD_WR_DAT 	;
289)   10B4 C9          		   RET	;
294)   10B5 16 2E       		   LD D,0x2E         ;READ DATA	;READ DATA
295)   10B7 CD E6 0E    		   CALL LCD_WR_COM           	;
296)   10BA CD DF 0E    		@LCD_GTPXL:   CALL LCD_RD_DAT 	;
297)   10BD 67          		   LD H,A	;
298)   10BE CD DF 0E    		   CALL LCD_RD_DAT 	;
299)   10C1 6F          		   LD L,A	;
300)   10C2 C9          		   RET    	;
306)   10C3 DD E5       		@LCD_READPIXEL: PUSH IX ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   10C5 DD 21 04 00 		   LD IX,4    ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   10C9 DD 39       		   ADD IX,SP    	;
309)   10CB DD 66 03    		   LD H,(IX+3)   ;X	;X
310)   10CE DD 6E 02    		   LD L,(IX+2)   ;X	;X
311)   10D1 DD 56 01    		   LD D,(IX+1) ;Y	;Y
312)   10D4 DD 5E 00    		   LD E,(IX) ;Y	;Y
313)   10D7 E5          		   PUSH HL	;
314)   10D8 D5          		   PUSH DE	;
315)   10D9 E5          		   PUSH HL	;
316)   10DA D5          		   PUSH DE	;
317)   10DB CD 5F 10    		   CALL LCD_SETXY	;
318)   10DE CD B5 10    		   CALL LCD_GETPIXEL	;
319)   10E1 E5          		   PUSH HL    	;
320)   10E2 CD 14 11    		   CALL LCD_CLRXY	;
321)   10E5 D1          		   POP DE  ;RESULT COLOR	;RESULT COLOR
322)   10E6 DD E1       		   POP IX	;
323)   10E8 C1          		   POP BC  ;RET ADDR	;RET ADDR
324)   10E9 21 04 00    		   LD HL,2*2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   10EC 39          		   ADD HL,SP	;
326)   10ED F9          		   LD SP,HL	;
327)   10EE EB          		   EX DE,HL ;HL RESULT	;HL RESULT
328)   10EF C5          		   PUSH BC  ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   10F0 C9          		   RET	;
333)   10F1 DD 21 02 00 		   LD IX,2     ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   10F5 DD 39       		   ADD IX,SP	;
335)   10F7 DD 66 03    		   LD H,(IX+3)   ;X	;X
336)   10FA DD 6E 02    		   LD L,(IX+2)   ;X	;X
337)   10FD DD 56 01    		   LD D,(IX+1) ;Y	;Y
338)   1100 DD 5E 00    		   LD E,(IX) ;Y	;Y
339)   1103 E5          		   PUSH HL	;
340)   1104 D5          		   PUSH DE	;
341)   1105 E5          		   PUSH HL	;
342)   1106 D5          		   PUSH DE	;
343)   1107 CD 5F 10    		   CALL LCD_SETXY	;
344)   110A 2A 01 FE    		   LD HL,(FCOLOR)	;
345)   110D CD AC 10    		   CALL LCD_SETPIXEL	;
346)   1110 CD 14 11    		   CALL LCD_CLRXY	;
347)   1113 C9          		   RET	;
350)   1114 21 00 00    		    LD HL,0	;
351)   1117 E5          		    PUSH HL	;
352)   1118 E5          		    PUSH HL	;
353)   1119 21 1F 03    		    LD HL,LCD_WIDTH	;
354)   111C E5          		    PUSH HL	;
355)   111D 21 DF 01    		    LD HL,LCD_HEIGHT	;
356)   1120 E5          		    PUSH HL	;
357)   1121 CD 5F 10    		    CALL LCD_SETXY	;
358)   1124 C9          		    RET	;
362)   1125 DD 21 02 00 		     LD IX,2	;
363)   1129 DD 39       		     ADD IX,SP	;
364)   112B DD 66 05    		     LD H,(IX+5)   ;X  	;X
365)   112E DD 6E 04    		     LD L,(IX+4)   ;X	;X
366)   1131 DD 56 03    		     LD D,(IX+3)   ;Y	;Y
367)   1134 DD 5E 02    		     LD E,(IX+2)   ;Y	;Y
368)   1137 DD 46 01    		     LD B,(IX+1)   ;LENGTH	;LENGTH
369)   113A DD 4E 00    		     LD C,(IX)     ;LENGTH	;LENGTH
372)   113D E5          		     PUSH HL	;
373)   113E 21 00 00    		     LD HL,0	;
374)   1141 B7          		     OR A           ;CLEAR CARRY	;CLEAR CARRY
375)   1142 ED 42       		     SBC HL,BC      ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
376)   1144 38 0A       		     JR C,POSH1	;
377)   1146 AF          		     XOR A          ;l=-l	;l=-l
378)   1147 91          		  SUB C	;
379)   1148 4F          		  LD C,A	;
380)   1149 9F          		  SBC A,A	;
381)   114A 90          		  SUB B	;
382)   114B 47          		  LD B,A	;
383)   114C E1          		  POP HL	;
384)   114D ED 42       		     SBC HL,BC       ;x -= l;	;x -= l;
385)   114F E5          		     PUSH HL                    	;
386)   1150 E1          		POSH1: POP HL	;
387)   1151 E5          		  PUSH HL	;
388)   1152 D5          		     PUSH DE	;
389)   1153 09          		     ADD HL,BC	;
390)   1154 E5          		     PUSH HL	;
391)   1155 D5          		     PUSH DE	;
392)   1156 CD 5F 10    		     CALL LCD_SETXY   ;setXY(x, y, x+l, y);	;setXY(x, y, x+l, y);
393)   1159 2A 01 FE    		     LD HL,(FCOLOR)    	;
394)   115C CD AC 10    		NXTH1: CALL LCD_SETPIXEL	;
395)   115F 0B          		     DEC BC	;
396)   1160 79          		     LD A,C	;
397)   1161 B0          		     OR B	;
398)   1162 20 F8       		     JR NZ, NXTH1     	;
399)   1164 CD 14 11    		     CALL LCD_CLRXY	;
400)   1167 D1          		     POP DE	;
401)   1168 21 06 00    		     LD HL,6       ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
402)   116B 39          		     ADD HL,SP	;
403)   116C F9          		     LD SP,HL      	;
404)   116D EB          		     EX DE,HL	;
405)   116E E9          		     JP (HL)	;
411)   116F DD 21 02 00 		     LD IX,2	;
412)   1173 DD 39       		     ADD IX,SP	;
413)   1175 DD 56 05    		     LD D,(IX+5)   ;X  	;X
414)   1178 DD 5E 04    		     LD E,(IX+4)   ;X	;X
415)   117B DD 66 03    		     LD H,(IX+3)   ;Y	;Y
416)   117E DD 6E 02    		     LD L,(IX+2)   ;Y	;Y
417)   1181 DD 46 01    		     LD B,(IX+1)   ;LENGTH	;LENGTH
418)   1184 DD 4E 00    		     LD C,(IX)     ;LENGTH     	;LENGTH
419)   1187 E5          		     PUSH HL	;
420)   1188 21 00 00    		     LD HL,0	;
421)   118B B7          		     OR A           ;CLEAR CARRY	;CLEAR CARRY
422)   118C ED 42       		     SBC HL,BC      ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
423)   118E 38 0A       		     JR C,POSV1	;
424)   1190 AF          		     XOR A          ;l=-l	;l=-l
425)   1191 91          		  SUB C	;
426)   1192 4F          		  LD C,A	;
427)   1193 9F          		  SBC A,A	;
428)   1194 90          		  SUB B	;
429)   1195 47          		  LD B,A	;
430)   1196 E1          		  POP HL	;
431)   1197 ED 42       		     SBC HL,BC       ;Y -= l;	;Y -= l;
432)   1199 E5          		     PUSH HL                   	;
433)   119A E1          		POSV1: POP HL	;
434)   119B D5          		  PUSH DE	;
435)   119C E5          		     PUSH HL	;
436)   119D D5          		     PUSH DE	;
437)   119E 09          		     ADD HL,BC	;
438)   119F E5          		     PUSH HL	;
439)   11A0 CD 5F 10    		     CALL LCD_SETXY   ;setXY(x, y, x, y+l);	;setXY(x, y, x, y+l);
440)   11A3 2A 01 FE    		     LD HL,(FCOLOR)    	;
441)   11A6 CD AC 10    		NXTV1: CALL LCD_SETPIXEL	;
442)   11A9 0B          		     DEC BC	;
443)   11AA 79          		     LD A,C	;
444)   11AB B0          		     OR B	;
445)   11AC 20 F8       		     JR NZ, NXTV1     	;
446)   11AE CD 14 11    		     CALL LCD_CLRXY	;
447)   11B1 D1          		     POP DE	;
448)   11B2 21 06 00    		     LD HL,6       ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
449)   11B5 39          		     ADD HL,SP	;
450)   11B6 F9          		     LD SP,HL	;
451)   11B7 EB          		     EX DE,HL	;
452)   11B8 E9          		     JP (HL)	;
456)   11B9 DD 21 02 00 		     LD IX,2	;
457)   11BD DD 39       		     ADD IX,SP	;
467)   11BF DD 66 05    		     LD H,(IX+5)   ;Y1	;Y1
468)   11C2 DD 6E 04    		     LD L,(IX+4)   ;Y1	;Y1
469)   11C5 DD 56 01    		     LD D,(IX+1)   ;Y2	;Y2
470)   11C8 DD 5E 00    		     LD E,(IX)     ;Y2	;Y2
471)   11CB B7          		     OR A	;
472)   11CC ED 52       		     SBC HL,DE	;
473)   11CE 20 17       		     JR NZ,YNOTEQ	;
475)   11D0 DD 46 07    		     LD B,(IX+7)   ;X1	;X1
476)   11D3 DD 4E 06    		     LD C,(IX+6)   ;X1	;X1
477)   11D6 C5          		     PUSH BC       ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
478)   11D7 D5          		     PUSH DE    ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
479)   11D8 DD 66 03    		     LD H,(IX+3)   ;X2	;X2
480)   11DB DD 6E 02    		     LD L,(IX+2)   ;X2       	;X2
481)   11DE ED 42       		     SBC HL,BC     ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
482)   11E0 E5          		     PUSH HL       ;LENGTH 3RD PARAM ON STACK 	;LENGTH 3RD PARAM ON STACK
483)   11E1 CD 25 11    		     CALL LCD_DRAWHLINE	;
484)   11E4 C3 94 13    		     JP DLNEX	;
486)   11E7 DD 66 07    		     LD H,(IX+7)   ;X1	;X1
487)   11EA DD 6E 06    		     LD L,(IX+6)   ;X1	;X1
488)   11ED DD 56 03    		     LD D,(IX+3)   ;X2	;X2
489)   11F0 DD 5E 02    		     LD E,(IX+2)   ;X2 	;X2
490)   11F3 B7          		     OR A	;
491)   11F4 ED 52       		     SBC HL,DE	;
492)   11F6 20 17       		     JR NZ,XNOTEQ	;
494)   11F8 D5          		     PUSH DE       ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
495)   11F9 DD 46 05    		     LD B,(IX+5)   ;Y1	;Y1
496)   11FC DD 4E 04    		     LD C,(IX+4)   ;Y1	;Y1
497)   11FF C5          		     PUSH BC       ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
498)   1200 DD 66 01    		     LD H,(IX+1)   ;Y2	;Y2
499)   1203 DD 6E 00    		     LD L,(IX)   ;Y2       	;Y2
500)   1206 ED 42       		     SBC HL,BC     ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
501)   1208 E5          		     PUSH HL       ;LENGTH 3RD PARAM ON STACK 	;LENGTH 3RD PARAM ON STACK
502)   1209 CD 6F 11    		     CALL LCD_DRAWVLINE	;
503)   120C C3 94 13    		     JP DLNEX	;
506)   120F 38 04       		     JR C,X2GTX1	;
508)   1211 AF          		     XOR A  	;
509)   1212 3D          		     DEC A  ;XSTEP=-1	;XSTEP=-1
510)   1213 18 0D       		     JR DLNXT1	;
513)   1215 D5          		     PUSH DE	;
514)   1216 E1          		     POP HL	;
515)   1217 DD 56 07    		     LD D,(IX+7)   ;X1	;X1
516)   121A DD 5E 06    		     LD E,(IX+6)   ;X1 	;X1
517)   121D B7          		     OR A     	;
518)   121E ED 52       		     SBC HL,DE     ;X2-X1 ON HL	;X2-X1 ON HL
520)   1220 3E 01       		     LD A,1        ;XSTEP=1	;XSTEP=1
522)   1222 06 00       		     LD B,0	;
523)   1224 0E 00       		     LD C,0	;
524)   1226 C5          		     PUSH BC       ;T	;T
525)   1227 E5          		     PUSH HL       ;DX	;DX
526)   1228 FE 01       		     CP 1	;
527)   122A 28 02       		     JR Z,DLXMINUS1	;
528)   122C 06 FF       		     LD B,0XFF	;
529)   122E 4F          		DLXMINUS1:LD C,A     	;
530)   122F C5          		     PUSH BC       ;XSTEP	;XSTEP
531)   1230 DD 66 05    		     LD H,(IX+5)   ;Y1	;Y1
532)   1233 DD 6E 04    		     LD L,(IX+4)   ;Y1	;Y1
533)   1236 DD 56 01    		     LD D,(IX+1)   ;Y2	;Y2
534)   1239 DD 5E 00    		     LD E,(IX)     ;Y2      	;Y2
535)   123C B7          		     OR A	;
536)   123D ED 52       		     SBC HL,DE	;
537)   123F 38 04       		     JR C,Y2GTY1  ;HL=Y1-Y2	;HL=Y1-Y2
538)   1241 AF          		     XOR A	;
539)   1242 3D          		     DEC A         ;YSTEP=-1	;YSTEP=-1
540)   1243 18 0F       		     JR DLNXT2	;
543)   1245 D5          		     PUSH DE	;
544)   1246 E1          		     POP HL	;
545)   1247 DD 56 05    		     LD D,(IX+5)   ;Y1	;Y1
546)   124A DD 5E 04    		     LD E,(IX+4)   ;Y1  	;Y1
547)   124D B7          		     OR A	;
548)   124E ED 52       		     SBC HL,DE  ;HL=Y2-Y1    HL=DY      	;HL=Y2-Y1    HL=DY
549)   1250 06 00       		     LD B,0	;
550)   1252 3E 01       		     LD A,1        ;YSTEP=1	;YSTEP=1
552)   1254 FE 01       		     CP 1	;
553)   1256 28 02       		     JR Z,DLYMINUS1	;
554)   1258 06 FF       		     LD B,0XFF	;
556)   125A 4F          		     LD C,A      	;
557)   125B E5          		     PUSH HL       ;DY	;DY
558)   125C C5          		     PUSH BC       ;YSTEP   	;YSTEP
559)   125D FD 21 00 00 		     LD IY,0	;
560)   1261 FD 39       		     ADD IY,SP	;
575)   1263 FD 56 07    		     LD D,(IY+7)    ;DX	;DX
576)   1266 FD 5E 06    		     LD E,(IY+6)    ;DX	;DX
577)   1269 B7          		     OR A	;
578)   126A ED 52       		     SBC HL,DE      ;DY-DX	;DY-DX
579)   126C DA 01 13    		     JP C,DXGTDY	;
580)   126F CA 01 13    		     JP Z,DXGTDY	;
582)   1272 19          		     ADD HL,DE      ;HL=DY	;HL=DY
583)   1273 44          		     LD B,H	;
584)   1274 4D          		     LD C,L	;
585)   1275 CB 38       		     SRL B	;
586)   1277 CB 19       		     RR C           ;(dy >> 1)	;(dy >> 1)
587)   1279 21 00 00    		     LD HL,0	;
588)   127C ED 42       		     SBC HL,BC      ;t = - (dy >> 1);	;t = - (dy >> 1);
589)   127E FD 74 09    		     LD (IY+9),H    ;SAVE T	;SAVE T
590)   1281 FD 75 08    		     LD (IY+8),L    ;SAVE T	;SAVE T
592)   1284 DD 56 05    		     LD D,(IX+5)   ;ROW	;ROW
593)   1287 DD 5E 04    		     LD E,(IX+4)   ;ROW=Y1	;ROW=Y1
594)   128A DD 66 07    		     LD H,(IX+7)   ;COL	;COL
595)   128D DD 6E 06    		     LD L,(IX+6)   ;COL=X1	;COL=X1
596)   1290 D5          		     PUSH DE	;
597)   1291 DD E5       		     PUSH IX	;
598)   1293 E5          		     PUSH HL	;
599)   1294 D5          		     PUSH DE	;
600)   1295 E5          		     PUSH HL	;
601)   1296 D5          		     PUSH DE	;
602)   1297 CD 5F 10    		     CALL LCD_SETXY	;
603)   129A 2A 01 FE    		     LD HL,(FCOLOR)    	;
604)   129D CD AC 10    		     CALL LCD_SETPIXEL	;
605)   12A0 DD E1       		     POP IX	;
606)   12A2 D1          		     POP DE	;
607)   12A3 DD 66 01    		     LD H,(IX+1)   ;Y2	;Y2
608)   12A6 DD 6E 00    		     LD L,(IX)     ;Y2 	;Y2
609)   12A9 ED 52       		     SBC HL,DE     ; ROW=Y2	; ROW=Y2
610)   12AB CA 8F 13    		     JP Z,DLEXIT	;
611)   12AE FD 46 01    		     LD B,(IY+1)   ;YSTEP HI	;YSTEP HI
612)   12B1 FD 4E 00    		     LD C,(IY)     ;YSTEP LO	;YSTEP LO
613)   12B4 EB          		     EX DE,HL	;
614)   12B5 09          		     ADD HL,BC     ;row += ystep;	;row += ystep;
615)   12B6 DD 74 05    		     LD (IX+5),H   ;SAVE ROW	;SAVE ROW
616)   12B9 DD 75 04    		     LD (IX+4),L   ;   	;
618)   12BC FD 56 09    		     LD D,(IY+9)   ; T	; T
619)   12BF FD 5E 08    		     LD E,(IY+8)   ; T      	; T
620)   12C2 FD 66 07    		     LD H,(IY+7)   ;DX	;DX
621)   12C5 FD 6E 06    		     LD L,(IY+6)   ;DX	;DX
622)   12C8 19          		     ADD HL,DE	;
623)   12C9 FD 74 09    		     LD (IY+9),H   ;t += dx;	;t += dx;
624)   12CC FD 75 08    		     LD (IY+8),L	;
625)   12CF EB          		     EX DE,HL	;
626)   12D0 21 00 80    		     LD HL,$8000	;
627)   12D3 ED 52       		     SBC HL,DE     ;CHECK IF T<0	;CHECK IF T<0
628)   12D5 38 AD       		     JR C,DLAGN1   ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
629)   12D7 FD 46 05    		     LD B,(IY+5)   ;XSTEP HI	;XSTEP HI
630)   12DA FD 4E 04    		     LD C,(IY+4)   ;XSTEP LO	;XSTEP LO
631)   12DD DD 66 07    		     LD H,(IX+7)   ;COL HI	;COL HI
632)   12E0 DD 6E 06    		     LD L,(IX+6)   ;COL LO	;COL LO
633)   12E3 09          		     ADD HL,BC     ;col += xstep;	;col += xstep;
634)   12E4 DD 74 07    		     LD (IX+7),H   ;SAVE COL	;SAVE COL
635)   12E7 DD 75 06    		     LD (IX+6),L   ;         	;
637)   12EA FD 66 09    		     LD H,(IY+9)   ; T	; T
638)   12ED FD 6E 08    		     LD L,(IY+8)   ; T      	; T
639)   12F0 FD 46 03    		     LD B,(IY+3)   ;DY	;DY
640)   12F3 FD 4E 02    		     LD C,(IY+2)   ;DY	;DY
641)   12F6 ED 42       		     SBC HL,BC	;
642)   12F8 FD 74 09    		     LD (IY+9),H   ;t -= dY;	;t -= dY;
643)   12FB FD 75 08    		     LD (IY+8),L       	;
644)   12FE C3 84 12    		     JP DLAGN1	;
646)   1301 19          		     ADD HL,DE      ;HL=DY DE=DX	;HL=DY DE=DX
647)   1302 42          		     LD B,D	;
648)   1303 4B          		     LD C,E	;
649)   1304 CB 38       		     SRL B	;
650)   1306 CB 19       		     RR C           ;(dX >> 1)	;(dX >> 1)
651)   1308 21 00 00    		     LD HL,0	;
652)   130B ED 42       		     SBC HL,BC      ;t = - (dX >> 1);	;t = - (dX >> 1);
653)   130D FD 74 09    		     LD (IY+9),H    ;SAVE T	;SAVE T
654)   1310 FD 75 08    		     LD (IY+8),L    ;SAVE T	;SAVE T
656)   1313 DD 56 05    		     LD D,(IX+5)   ;ROW	;ROW
657)   1316 DD 5E 04    		     LD E,(IX+4)   ;ROW=Y1	;ROW=Y1
658)   1319 DD 66 07    		     LD H,(IX+7)   ;COL	;COL
659)   131C DD 6E 06    		     LD L,(IX+6)   ;COL=X1	;COL=X1
660)   131F E5          		     PUSH HL       ;SAVE COL	;SAVE COL
661)   1320 DD E5       		     PUSH IX	;
662)   1322 E5          		     PUSH HL	;
663)   1323 D5          		     PUSH DE	;
664)   1324 E5          		     PUSH HL	;
665)   1325 D5          		     PUSH DE	;
666)   1326 CD 5F 10    		     CALL LCD_SETXY	;
667)   1329 2A 01 FE    		     LD HL,(FCOLOR)    	;
668)   132C CD AC 10    		     CALL LCD_SETPIXEL	;
669)   132F DD E1       		     POP IX	;
670)   1331 D1          		     POP DE        ;RETRIEVE COL	;RETRIEVE COL
671)   1332 DD 66 03    		     LD H,(IX+3)   ;X2	;X2
672)   1335 DD 6E 02    		     LD L,(IX+2)   ;X2 	;X2
673)   1338 ED 52       		     SBC HL,DE     ; COL=X2?	; COL=X2?
674)   133A 28 53       		     JR Z,DLEXIT	;
675)   133C EB          		     EX DE,HL      ;HL=COL	;HL=COL
676)   133D FD 46 05    		     LD B,(IY+5)   ;XSTEP HI	;XSTEP HI
677)   1340 FD 4E 04    		     LD C,(IY+4)   ;XSTEP LO	;XSTEP LO
678)   1343 09          		     ADD HL,BC     ;col += xstep;	;col += xstep;
679)   1344 DD 74 07    		     LD (IX+7),H   ;SAVE COL	;SAVE COL
680)   1347 DD 75 06    		     LD (IX+6),L   ;   	;
681)   134A FD 56 09    		     LD D,(IY+9)   ; T	; T
682)   134D FD 5E 08    		     LD E,(IY+8)   ; T      	; T
683)   1350 FD 66 03    		     LD H,(IY+3)   ;DY	;DY
684)   1353 FD 6E 02    		     LD L,(IY+2)   ;DY	;DY
685)   1356 19          		     ADD HL,DE	;
686)   1357 FD 74 09    		     LD (IY+9),H   ;t += dY;	;t += dY;
687)   135A FD 75 08    		     LD (IY+8),L	;
688)   135D EB          		     EX DE,HL      ;T=DE	;T=DE
689)   135E 21 00 80    		     LD HL,$8000  	;
690)   1361 ED 52       		     SBC HL,DE    ;CHECK IF T<0	;CHECK IF T<0
691)   1363 38 AE       		     JR C,DLAGN2  ;CARRY SET IF NEGATIVE    	;CARRY SET IF NEGATIVE
692)   1365 FD 46 01    		     LD B,(IY+1)   ;YSTEP HI	;YSTEP HI
693)   1368 FD 4E 00    		     LD C,(IY)     ;YSTEP LO	;YSTEP LO
694)   136B DD 66 05    		     LD H,(IX+5)   ;ROW HI	;ROW HI
695)   136E DD 6E 04    		     LD L,(IX+4)   ;ROW LO	;ROW LO
696)   1371 09          		     ADD HL,BC     ;ROW += Ystep;	;ROW += Ystep;
697)   1372 DD 74 05    		     LD (IX+5),H   ;SAVE COL	;SAVE COL
698)   1375 DD 75 04    		     LD (IX+4),L   ;         	;
700)   1378 FD 66 09    		     LD H,(IY+9)   ; T	; T
701)   137B FD 6E 08    		     LD L,(IY+8)   ; T      	; T
702)   137E FD 46 07    		     LD B,(IY+7)   ;DX	;DX
703)   1381 FD 4E 06    		     LD C,(IY+6)   ;DX	;DX
704)   1384 ED 42       		     SBC HL,BC	;
705)   1386 FD 74 09    		     LD (IY+9),H   ;t -= dX;	;t -= dX;
706)   1389 FD 75 08    		     LD (IY+8),L       	;
707)   138C C3 13 13    		     JP DLAGN2	;
710)   138F 21 0A 00    		     LD HL,5*2     ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
711)   1392 39          		     ADD HL,SP     ;	;
712)   1393 F9          		     LD SP,HL           	;
713)   1394 D1          		DLNEX:POP DE       ;RET ADDR	;RET ADDR
714)   1395 21 08 00    		     LD HL,4*2       ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
715)   1398 39          		     ADD HL,SP	;
716)   1399 F9          		     LD SP,HL     	;
717)   139A EB          		     EX DE,HL	;
718)   139B E9          		     JP (HL)	;
723)   139C C5          		@PLOTP:PUSH BC      ;SAVE BC	;SAVE BC
724)   139D DD E5       		     PUSH IX	;
726)   139F D5          		     PUSH DE	;
727)   13A0 E5          		     PUSH HL	;
728)   13A1 D5          		     PUSH DE	;
729)   13A2 E5          		     PUSH HL	;
730)   13A3 CD 5F 10    		     CALL LCD_SETXY      	;
731)   13A6 2A 01 FE    		     LD HL,(FCOLOR)	;
732)   13A9 CD AC 10    		     CALL LCD_SETPIXEL  	;
734)   13AC DD E1       		     POP IX	;
735)   13AE C1          		     POP BC        ;RESTORE BC	;RESTORE BC
736)   13AF C9          		     RET   	;
741)   13B0 E1          		     POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
742)   13B1 D5          		     PUSH DE        ;F VAR 	;F VAR
743)   13B2 D5          		     PUSH DE        ;DDF_X 	;DDF_X
744)   13B3 D5          		     PUSH DE        ;DDF_Y	;DDF_Y
745)   13B4 D5          		     PUSH DE        ;X1	;X1
746)   13B5 D5          		     PUSH DE        ;Y1	;Y1
747)   13B6 E5          		     PUSH HL        ;RET ADDR	;RET ADDR
748)   13B7 DD 21 02 00 		     LD IX,2	;
749)   13BB DD 39       		     ADD IX,SP	;
767)   13BD AF          		     XOR A	;
768)   13BE DD 56 0B    		     LD D,(IX+11)    ;R	;R
769)   13C1 DD 5E 0A    		     LD E,(IX+10)    ;R	;R
770)   13C4 DD 72 01    		     LD (IX+1),D     ;Y1=R	;Y1=R
771)   13C7 DD 73 00    		     LD (IX+0),E	;
772)   13CA 21 01 00    		     LD HL,1	;
773)   13CD DD 74 07    		     LD (IX+7),H     ;DDF_X=1	;DDF_X=1
774)   13D0 DD 75 06    		     LD (IX+6),L	;
775)   13D3 DD 74 03    		     LD (IX+3),H     ;X1=0	;X1=0
776)   13D6 DD 74 02    		     LD (IX+2),H      	;
777)   13D9 ED 52       		     SBC HL,DE	;
778)   13DB DD 74 09    		     LD (IX+9),H     ;F	;F
779)   13DE DD 75 08    		     LD (IX+8),L     ;F	;F
781)   13E1 EB          		     EX DE,HL        ;HL=RADIUS	;HL=RADIUS
782)   13E2 29          		     ADD HL,HL       ;2*R	;2*R
783)   13E3 EB          		     EX DE,HL	;
784)   13E4 21 00 00    		     LD HL,0	;
785)   13E7 ED 52       		     SBC HL,DE          ;-2*R	;-2*R
786)   13E9 DD 74 05    		     LD (IX+5),H	;
787)   13EC DD 75 04    		     LD (IX+4),L     ;DDF_Y	;DDF_Y
789)   13EF DD 66 0D    		     LD H,(IX+13)    ;Y	;Y
790)   13F2 DD 6E 0C    		     LD L,(IX+12)	;
791)   13F5 E5          		     PUSH HL         ;SAVE Y	;SAVE Y
792)   13F6 DD 56 0B    		     LD D,(IX+11)    ;R	;R
793)   13F9 DD 5E 0A    		     LD E,(IX+10)	;
794)   13FC D5          		     PUSH DE         ;SAVE R	;SAVE R
795)   13FD 19          		     ADD HL,DE       ;Y+R      	;Y+R
796)   13FE DD 56 0F    		     LD D,(IX+15)    ;X	;X
797)   1401 DD 5E 0E    		     LD E,(IX+14)	;
798)   1404 D5          		     PUSH DE         ;SAVE X	;SAVE X
800)   1405 CD 9C 13    		     CALL PLOTP      	;
802)   1408 D1          		     POP DE        ;GET X	;GET X
803)   1409 C1          		     POP BC        ;GET R	;GET R
804)   140A E1          		     POP HL        ;GET Y	;GET Y
805)   140B E5          		     PUSH HL       ;SAVE VARS	;SAVE VARS
806)   140C C5          		     PUSH BC	;
807)   140D D5          		     PUSH DE	;
808)   140E AF          		     XOR A	;
809)   140F ED 42       		     SBC HL,BC     ;	;
811)   1411 CD 9C 13    		     CALL PLOTP      	;
813)   1414 E1          		    POP HL        ;GET X	;GET X
814)   1415 C1          		    POP BC        ;GET R	;GET R
815)   1416 D1          		    POP DE        ;GET Y	;GET Y
816)   1417 D5          		    PUSH DE       ;SAVE VARS	;SAVE VARS
817)   1418 C5          		    PUSH BC	;
818)   1419 E5          		    PUSH HL	;
819)   141A AF          		    XOR A	;
820)   141B ED 4A       		    ADC HL,BC	;
821)   141D EB          		    EX DE,HL	;
823)   141E CD 9C 13    		     CALL PLOTP      	;
825)   1421 E1          		    POP HL        ;GET X	;GET X
826)   1422 C1          		    POP BC        ;GET R	;GET R
827)   1423 D1          		    POP DE        ;GET Y	;GET Y
828)   1424 AF          		    XOR A	;
829)   1425 ED 42       		    SBC HL,BC	;
830)   1427 EB          		    EX DE,HL	;
832)   1428 CD 9C 13    		     CALL PLOTP      	;
835)   142B DD 66 03    		CIRC_AGN:LD H,(IX+3)   ;X1	;X1
836)   142E DD 6E 02    		     LD L,(IX+2)    ;X1	;X1
837)   1431 DD 56 01    		     LD D,(IX+1)    ;Y1	;Y1
838)   1434 DD 5E 00    		     LD E,(IX+0)    ;Y1	;Y1
839)   1437 AF          		     XOR A	;
840)   1438 ED 52       		     SBC HL,DE	;
841)   143A D2 29 15    		     JP NC,CIRC_EXIT	;
843)   143D 19          		    ADD HL,DE	;
844)   143E E5          		    PUSH HL        ;SAVE X1	;SAVE X1
845)   143F D5          		    PUSH DE        ;SAVE Y1	;SAVE Y1
846)   1440 21 00 00    		    LD HL,0	;
847)   1443 AF          		    XOR A	;
850)   1444 DD 7E 09    		    LD A,(IX+9)     ;F HI BYTE	;F HI BYTE
851)   1447 FE 50       		    CP 80	;
852)   1449 30 26       		    JR NC,CIRC_SKIP	;
853)   144B 28 24       		    JR Z,CIRC_SKIP	;
857)   144D D1          		    POP DE        ;Y1	;Y1
858)   144E 1B          		    DEC DE	;
859)   144F DD 72 01    		    LD (IX+1),D   ;SAVE Y1	;SAVE Y1
860)   1452 DD 73 00    		    LD (IX+0),E	;
861)   1455 D5          		    PUSH DE       ;Y1	;Y1
862)   1456 DD 66 05    		    LD H,(IX+5)   ;DDF_Y	;DDF_Y
863)   1459 DD 6E 04    		    LD L,(IX+4)   	;
864)   145C 23          		    INC HL	;
865)   145D 23          		    INC HL	;
866)   145E DD 74 05    		    LD (IX+5),H   ;SAVE DDF_Y	;SAVE DDF_Y
867)   1461 DD 75 04    		    LD (IX+4),L	;
868)   1464 DD 56 09    		    LD D,(IX+9)   ;F	;F
869)   1467 DD 5E 08    		    LD E,(IX+8)	;
870)   146A 19          		    ADD HL,DE	;
871)   146B DD 74 09    		    LD (IX+9),H    ;SAVE F	;SAVE F
872)   146E DD 75 08    		    LD (IX+8),L          	;
876)   1471 C1          		   POP BC       ;Y1	;Y1
877)   1472 E1          		   POP HL       ;X1	;X1
878)   1473 23          		   INC HL	;
879)   1474 DD 74 03    		   LD (IX+3),H  ;SAVE X1	;SAVE X1
880)   1477 DD 75 02    		   LD (IX+2),L	;
881)   147A E5          		   PUSH HL      ;X1	;X1
882)   147B DD 66 07    		    LD H,(IX+7)   ;DDF_X	;DDF_X
883)   147E DD 6E 06    		    LD L,(IX+6)   	;
884)   1481 23          		    INC HL	;
885)   1482 23          		    INC HL	;
886)   1483 DD 74 07    		    LD (IX+7),H   ;SAVE DDF_X	;SAVE DDF_X
887)   1486 DD 75 06    		    LD (IX+6),L	;
888)   1489 DD 56 09    		    LD D,(IX+9)   ;F	;F
889)   148C DD 5E 08    		    LD E,(IX+8)	;
890)   148F 19          		    ADD HL,DE	;
891)   1490 DD 74 09    		    LD (IX+9),H    ;SAVE F	;SAVE F
892)   1493 DD 75 08    		    LD (IX+8),L      	;
895)   1496 E1          		     POP HL        ;X1	;X1
896)   1497 E5          		     PUSH HL	;
897)   1498 DD 56 0F    		     LD D,(IX+15)  ;X	;X
898)   149B DD 5E 0E    		     LD E,(IX+14)	;
899)   149E D5          		     PUSH DE	;
900)   149F 19          		     ADD HL,DE	;
901)   14A0 EB          		     EX DE,HL      ;DE=X+X1	;DE=X+X1
902)   14A1 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
903)   14A4 DD 6E 0C    		     LD L,(IX+12)	;
904)   14A7 09          		     ADD HL,BC     ;HL=Y+Y1	;HL=Y+Y1
906)   14A8 CD 9C 13    		     CALL PLOTP	;
908)   14AB E1          		   POP HL        ;X	;X
909)   14AC D1          		   POP DE        ;X1	;X1
910)   14AD D5          		   PUSH DE	;
911)   14AE E5          		   PUSH HL	;
912)   14AF AF          		   XOR A	;
913)   14B0 ED 52       		   SBC HL,DE	;
914)   14B2 EB          		   EX DE,HL      ;DE=X-X1	;DE=X-X1
915)   14B3 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
916)   14B6 DD 6E 0C    		     LD L,(IX+12)	;
917)   14B9 09          		     ADD HL,BC     ;HL=Y+Y1	;HL=Y+Y1
919)   14BA CD 9C 13    		     CALL PLOTP	;
921)   14BD E1          		   POP HL        ;X	;X
922)   14BE D1          		   POP DE        ;X1 	;X1
923)   14BF D5          		   PUSH DE	;
924)   14C0 E5          		   PUSH HL	;
925)   14C1 19          		   ADD HL,DE	;
926)   14C2 EB          		   EX DE,HL      ;DE=X+X1	;DE=X+X1
927)   14C3 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
928)   14C6 DD 6E 0C    		     LD L,(IX+12)	;
929)   14C9 AF          		     XOR A	;
930)   14CA ED 42       		     SBC HL,BC     ;HL=Y+Y1	;HL=Y+Y1
932)   14CC CD 9C 13    		     CALL PLOTP	;
934)   14CF E1          		   POP HL        ;X	;X
935)   14D0 D1          		   POP DE        ;X1  	;X1
936)   14D1 D5          		   PUSH DE	;
937)   14D2 E5          		   PUSH HL	;
938)   14D3 AF          		   XOR A	;
939)   14D4 ED 52       		   SBC HL,DE	;
940)   14D6 EB          		   EX DE,HL      ;DE=X-X1	;DE=X-X1
941)   14D7 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
942)   14DA DD 6E 0C    		     LD L,(IX+12)	;
943)   14DD AF          		     XOR A	;
944)   14DE ED 42       		     SBC HL,BC     ;HL=Y-Y1	;HL=Y-Y1
946)   14E0 CD 9C 13    		     CALL PLOTP	;
948)   14E3 E1          		     POP HL         ;X	;X
949)   14E4 D1          		     POP DE         ;X1	;X1
950)   14E5 C5          		     PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
951)   14E6 E5          		     PUSH HL        ;SAVE X      	;SAVE X
952)   14E7 D5          		     PUSH DE        ;SAVE X1      	;SAVE X1
953)   14E8 09          		     ADD HL,BC      ;	;
954)   14E9 C1          		     POP BC         ;BC=X1	;BC=X1
955)   14EA EB          		     EX DE,HL       ;DE=X+Y1	;DE=X+Y1
956)   14EB DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
957)   14EE DD 6E 0C    		     LD L,(IX+12)	;
958)   14F1 09          		     ADD HL,BC     ;HL=Y+X1	;HL=Y+X1
960)   14F2 CD 9C 13    		     CALL PLOTP	;
962)   14F5 E1          		   POP HL        ;X	;X
963)   14F6 D1          		   POP DE        ;Y1	;Y1
964)   14F7 D5          		   PUSH DE	;
965)   14F8 E5          		   PUSH HL	;
966)   14F9 AF          		   XOR A	;
967)   14FA ED 52       		   SBC HL,DE	;
968)   14FC EB          		   EX DE,HL      ;DE=X-Y1	;DE=X-Y1
969)   14FD DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
970)   1500 DD 6E 0C    		     LD L,(IX+12)	;
971)   1503 09          		     ADD HL,BC     ;HL=Y+X1	;HL=Y+X1
973)   1504 CD 9C 13    		     CALL PLOTP	;
975)   1507 E1          		   POP HL        ;X	;X
976)   1508 D1          		   POP DE        ;Y1	;Y1
977)   1509 D5          		   PUSH DE	;
978)   150A E5          		   PUSH HL	;
979)   150B 19          		     ADD HL,DE	;
980)   150C EB          		     EX DE,HL      ;DE=X+Y1	;DE=X+Y1
981)   150D DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
982)   1510 DD 6E 0C    		     LD L,(IX+12)	;
983)   1513 AF          		     XOR A	;
984)   1514 ED 42       		     SBC HL,BC     ;HL=Y-X1	;HL=Y-X1
985)   1516 E5          		     PUSH HL	;
987)   1517 CD 9C 13    		     CALL PLOTP	;
989)   151A C1          		     POP BC        ;Y-X1	;Y-X1
990)   151B E1          		     POP HL        ;X	;X
991)   151C D1          		     POP DE        ;Y1 	;Y1
992)   151D AF          		     XOR A	;
993)   151E ED 52       		     SBC HL,DE	;
994)   1520 EB          		     EX DE,HL      ;DE=X-Y1	;DE=X-Y1
995)   1521 C5          		     PUSH BC	;
996)   1522 E1          		     POP HL        ;HL=Y-X1	;HL=Y-X1
998)   1523 CD 9C 13    		     CALL PLOTP        	;
999)   1526 C3 2B 14    		    JP CIRC_AGN	;
1000)   1529 CD 14 11    		CIRC_EXIT: CALL LCD_CLRXY	;
1001)   152C D1          		     POP DE ;GET RET ADDR	;GET RET ADDR
1002)   152D 21 10 00    		     LD HL,8*2       ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
1003)   1530 39          		     ADD HL,SP     ;	;
1004)   1531 F9          		     LD SP,HL 	;
1005)   1532 EB          		     EX DE,HL     	;
1006)   1533 E9          		     JP (HL)	;
1013)   1534 D9          		   EXX	;
1014)   1535 D1          		   POP DE  ;save return addr to de'	;save return addr to de'
1015)   1536 D9          		   EXX  	;
1016)   1537 CD D5 17    		   CALL _FILL         	;
1017)   153A D9          		   EXX	;
1018)   153B D5          		   PUSH DE ;restore return addr from de'	;restore return addr from de'
1019)   153C D9          		   EXX	;
1020)   153D C9          		   RET	;
1027)   153E FE 08       		     CP 0X08   ;BACKSPACE	;BACKSPACE
1028)   1540 CA 50 15    		     JP Z,PRCH_DOBCKSPC	;
1029)   1543 FE 0A       		     CP 0X0A   ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
1030)   1545 C8          		     RET Z	;
1031)   1546 FE 0D       		     CP 0X0D   ;CHECK FOR ENTER	;CHECK FOR ENTER
1032)   1548 20 3A       		     JR NZ,PRCH_DOPRN	;
1033)   154A 21 0D FE    		     LD HL,CURSORX	;
1034)   154D C3 9D 16    		     JP PRCH_NEWLN 	;
1036)   1550 21 0D FE    		     LD HL,CURSORX      	;
1037)   1553 7E          		     LD A,(HL)	;
1038)   1554 38 05       		     JR C,DOREALBCKSPC	;
1040)   1556 FE 01       		     CP 1      ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1041)   1558 C8          		     RET Z	;
1042)   1559 35          		     DEC (HL)	;
1043)   155A C9          		     RET      	;
1045)   155B FE 01       		     CP 1      ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1046)   155D 28 0A       		     JR Z,PRCH_DOBCKSPC2     ;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER	;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER
1047)   155F 35          		     DEC (HL)  ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1048)   1560 E5          		     PUSH HL	;
1049)   1561 3E 20       		     LD A,32   ;PRINT SPACE	;PRINT SPACE
1050)   1563 CD 84 15    		     CALL PRCH_DOPRN ;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN	;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN
1051)   1566 E1          		     POP HL	;
1052)   1567 35          		     DEC (HL)  ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1053)   1568 B7          		     OR A      	;
1057)   1569 DD 21 02 00 		     LD IX,2	;
1058)   156D DD 39       		     ADD IX,SP	;
1059)   156F DD 66 01    		     LD H,(IX+1);POSITION IN ACCS FOR THE NEW CHARACTER      	;POSITION IN ACCS FOR THE NEW CHARACTER
1060)   1572 DD 6E 00    		     LD L,(IX) ;POSITION IN ACCS FOR THE NEW CHARACTER  	;POSITION IN ACCS FOR THE NEW CHARACTER
1061)   1575 3E 00       		     LD A,0    ;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG	;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG
1062)   1577 28 02       		     JR Z,PRCH_SKIP1  ;WE ARE ON COLUMN 1	;WE ARE ON COLUMN 1
1063)   1579 2B          		     DEC HL     ;PREVIOUS POSITION DELETE BACKSPACE	;PREVIOUS POSITION DELETE BACKSPACE
1064)   157A 77          		     LD (HL),A  ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1066)   157B 2B          		     DEC HL     ;PREVIOUS POSITION DELETE PREVIOUS CHAR	;PREVIOUS POSITION DELETE PREVIOUS CHAR
1067)   157C 77          		     LD (HL),A  ;PUT 0 ON LAST POSITION      	;PUT 0 ON LAST POSITION
1068)   157D DD 74 01    		     LD (IX+1),H ;PUT POSITION BACK ON STACK IT WILL POPED	;PUT POSITION BACK ON STACK IT WILL POPED
1069)   1580 DD 75 00    		     LD (IX),L	;
1070)   1583 C9          		     RET	;
1073)   1584 F5          		     PUSH AF  ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
1074)   1585 32 10 FE    		     LD (LASTCHAR),A ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
1078)   1588 3A 16 FE    		     LD A,(VDUMODE)	;
1079)   158B FE 05       		     CP 5	;
1080)   158D 20 19       		     JR NZ,VDU4	;
1081)   158F 2A 5F FE    		     LD HL,(GR_LASTX)	;
1082)   1592 E5          		     PUSH HL	;
1083)   1593 ED 5B 61 FE 		     LD DE,(GR_LASTY)	;
1084)   1597 D5          		     PUSH DE	;
1085)   1598 01 07 00    		     LD BC,FONT_WIDTH-1	;
1086)   159B 09          		     ADD HL,BC	;
1087)   159C E5          		     PUSH HL	;
1088)   159D 01 09 00    		     LD BC,FONT_HEIGHT-1	;
1089)   15A0 EB          		     EX DE,HL	;
1090)   15A1 09          		     ADD HL,BC	;
1091)   15A2 E5          		     PUSH HL	;
1092)   15A3 CD 5F 10    		     CALL LCD_SETXY	;
1093)   15A6 18 34       		     JR PRCHDO	;
1094)   15A8 3A 0D FE    		VDU4: LD A,(CURSORX)	;
1095)   15AB 06 08       		     LD B,FONT_WIDTH	;
1096)   15AD 16 00       		     LD D,0	;
1097)   15AF 5F          		     LD E,A	;
1098)   15B0 21 00 00    		     LD HL,0	;
1099)   15B3 B7          		     OR A          ; CLEAR CARRY	; CLEAR CARRY
1101)   15B4 ED 5A       		     ADC HL,DE	;
1102)   15B6 10 FC       		     DJNZ PRCH_AGN1 ;HL=DE*B	;HL=DE*B
1103)   15B8 E5          		     PUSH HL       ;1ST PARAM X1	;1ST PARAM X1
1104)   15B9 11 08 00    		     LD DE,FONT_WIDTH 	;
1105)   15BC ED 5A       		     ADC HL,DE      	;
1106)   15BE 2B          		     DEC HL	;
1107)   15BF E5          		     PUSH HL       ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1109)   15C0 CD 12 16    		     CALL LCD_CALCLINE ;SCROLL CALC	;SCROLL CALC
1110)   15C3 06 0A       		     LD B,FONT_HEIGHT 	;
1111)   15C5 16 00       		     LD D,0	;
1112)   15C7 5F          		     LD E,A	;
1113)   15C8 21 00 00    		     LD HL,0	;
1115)   15CB ED 5A       		     ADC HL,DE	;
1116)   15CD 10 FC       		     DJNZ PRCH_AGN2      	;
1117)   15CF D1          		     POP DE        ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
1118)   15D0 E5          		     PUSH HL       ;2ND PARAM Y1	;2ND PARAM Y1
1119)   15D1 D5          		     PUSH DE       ;3RD PARAM X2	;3RD PARAM X2
1120)   15D2 11 0A 00    		     LD DE,FONT_HEIGHT	;
1121)   15D5 ED 5A       		     ADC HL,DE     ;CALC 4TH PARAM      	;CALC 4TH PARAM
1122)   15D7 2B          		     DEC HL        ;4TH PARAM -1  	;4TH PARAM -1
1123)   15D8 E5          		     PUSH HL    ;4TH PARAM Y2	;4TH PARAM Y2
1124)   15D9 CD 5F 10    		     CALL LCD_SETXY	;
1125)   15DC F1          		PRCHDO: POP AF       ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
1126)   15DD B7          		     OR A	;
1127)   15DE 21 00 75    		     LD HL,FONT_ADDR	;
1128)   15E1 16 00       		     LD D,0	;
1129)   15E3 5F          		     LD E,A	;
1130)   15E4 ED 5A       		     ADC HL,DE     ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
1131)   15E6 E5          		     PUSH HL	;
1132)   15E7 D1          		     POP DE        ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
1133)   15E8 0E 0A       		     LD C,FONT_HEIGHT   ; TOTAL FONT LINES	; TOTAL FONT LINES
1135)   15EA 1A          		     LD A,(DE)           ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1136)   15EB 06 08       		     LD B,FONT_WIDTH      	;
1138)   15ED CB 27       		     SLA A               ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1139)   15EF 38 05       		     JR C,FORECOLOR	;
1140)   15F1 2A 03 FE    		     LD HL,(BCOLOR)	;
1141)   15F4 18 03       		     JR PRCH_CONT	;
1143)   15F6 2A 01 FE    		     LD HL,(FCOLOR)      	;
1145)   15F9 F5          		     PUSH AF	;
1146)   15FA D5          		     PUSH DE             ;TODO:PROBABLY NOT NEEDED HERE 	;TODO:PROBABLY NOT NEEDED HERE
1147)   15FB CD AC 10    		     CALL LCD_SETPIXEL	;
1148)   15FE D1          		     POP DE	;
1149)   15FF F1          		     POP AF      	;
1150)   1600 10 EB       		     DJNZ PRCH_AGN4	;
1151)   1602 14          		     INC D             ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1152)   1603 0D          		     DEC C	;
1153)   1604 20 E4       		     JR NZ,PRCH_AGN3	;
1155)   1606 21 0D FE    		     LD HL,CURSORX	;
1156)   1609 7E          		     LD A,(HL)	;
1157)   160A 3C          		     INC A	;
1158)   160B FE 50       		     CP 80	;
1159)   160D CA 9D 16    		     JP Z,PRCH_NEWLN  ;NEW LINE	;NEW LINE
1160)   1610 77          		     LD (HL),A	;
1161)   1611 C9          		     RET	;
1164)   1612 3A 0F FE    		@LCD_CALCLINE: LD A,(SCRLN)	;
1165)   1615 57          		               LD D,A 	;
1166)   1616 3A 0E FE    		               LD A,(CURSORY)  ;480/10 MAKES 48 LINES                	;480/10 MAKES 48 LINES
1167)   1619 82          		               ADD A,D	;
1168)   161A FE 30       		               CP TOTLINES	;
1169)   161C D8          		               RET C	;
1171)   161D D6 30       		               SUB TOTLINES	;
1172)   161F C9          		               RET             	;
1177)   1620 16 33       		LCD_SETSCROLL: LD D,0x33	;
1178)   1622 CD E6 0E    		               CALL LCD_WR_COM	;
1179)   1625 16 00       		 LD D,0X00 ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
1180)   1627 CD E2 0E    		               CALL LCD_WR_DAT	;
1181)   162A 16 00       		 LD D,0X00 ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
1182)   162C CD E2 0E    		               CALL LCD_WR_DAT	;
1183)   162F 16 01       		 LD D,0X01 ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
1184)   1631 CD E2 0E    		               CALL LCD_WR_DAT	;
1185)   1634 16 E0       		 LD D,0XE0 ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
1186)   1636 CD E2 0E    		               CALL LCD_WR_DAT	;
1187)   1639 16 00       		 LD D,0X00 ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
1188)   163B CD E2 0E    		               CALL LCD_WR_DAT	;
1189)   163E 16 00       		 LD D,0X00 ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
1190)   1640 CD E2 0E    		               CALL LCD_WR_DAT	;
1191)   1643 AF          		               XOR A	;
1192)   1644 32 0F FE    		               LD (SCRLN),A	;
1193)   1647 C9          		 RET	;
1196)   1648 3A 0F FE    		@LCD_DOSCROLL:  LD A,(SCRLN)	;
1197)   164B 3C          		               INC A	;
1198)   164C FE 30       		               CP TOTLINES	;
1199)   164E 38 02       		               JR C, DS_NXT	;
1200)   1650 D6 30       		               SUB TOTLINES	;
1201)   1652 32 0F FE    		DS_NXT:        LD (SCRLN),A	;
1202)   1655 6F          		               LD L,A	;
1203)   1656 26 00       		               LD H,0	;
1204)   1658 29          		               ADD HL,HL ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1205)   1659 29          		               ADD HL,HL	;
1206)   165A 29          		               ADD HL,HL  	;
1207)   165B 5F          		               LD E,A	;
1208)   165C 16 00       		               LD D,0	;
1209)   165E 19          		               ADD HL,DE	;
1210)   165F 19          		               ADD HL,DE	;
1211)   1660 16 37       		               LD D,0x37	;
1212)   1662 CD E6 0E    		               CALL LCD_WR_COM	;
1213)   1665 54          		 LD D,H ;NEW TOP SCROLL LINE BYTES HIGH (1-480) 	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
1214)   1666 CD E2 0E    		               CALL LCD_WR_DAT	;
1215)   1669 55          		 LD D,L ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
1216)   166A CD E2 0E    		               CALL LCD_WR_DAT	;
1217)   166D C9          		               RET	;
1220)   166E 11 00 00    		@LCD_CLRTXTLN: LD DE,0	;
1222)   1671 D5          		               PUSH DE	;
1223)   1672 6F          		               LD L,A	;
1224)   1673 26 00       		               LD H,0	;
1225)   1675 29          		               ADD HL,HL ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1226)   1676 29          		               ADD HL,HL	;
1227)   1677 29          		               ADD HL,HL  	;
1228)   1678 5F          		               LD E,A	;
1229)   1679 16 00       		               LD D,0	;
1230)   167B 19          		               ADD HL,DE	;
1231)   167C 19          		               ADD HL,DE	;
1233)   167D E5          		               PUSH HL  	;
1234)   167E 11 0A 00    		               LD DE,FONT_HEIGHT	;
1235)   1681 19          		               ADD HL,DE	;
1237)   1682 EB          		               EX DE,HL                	;
1238)   1683 21 1F 03    		               LD HL,LCD_WIDTH	;
1240)   1686 E5          		               PUSH HL	;
1241)   1687 D5          		               PUSH DE ;PARAM4	;PARAM4
1242)   1688 CD 5F 10    		               CALL LCD_SETXY	;
1243)   168B 01 40 1F    		               LD BC, 8000; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
1244)   168E 2A 03 FE    		               LD HL,(BCOLOR)     	;
1245)   1691 CD AC 10    		CTL_AGN:       CALL LCD_SETPIXEL ;DESTROYS D,A	;DESTROYS D,A
1246)   1694 0B          		               DEC BC	;
1247)   1695 78          		               LD A,B	;
1248)   1696 B1          		               OR C	;
1249)   1697 20 F8       		               JR NZ,CTL_AGN	;
1250)   1699 CD 14 11    		       CALL LCD_CLRXY 	;
1251)   169C C9          		       RET                	;
1255)   169D AF          		     XOR A  	;
1256)   169E 77          		     LD (HL),A   	;
1257)   169F 23          		     INC HL	;
1258)   16A0 7E          		     LD A,(HL)	;
1259)   16A1 3C          		     INC A       	;
1261)   16A2 FE 30       		     CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
1262)   16A4 28 02       		     JR Z,PRCH_SCROLL	;
1263)   16A6 77          		     LD (HL),A                             	;
1264)   16A7 C9          		     RET	;
1266)   16A8 F5          		PRCH_SCROLL: PUSH AF	;
1267)   16A9 E5          		     PUSH HL	;
1269)   16AA 3A 0F FE    		     LD A,(SCRLN)	;
1270)   16AD CD 6E 16    		     CALL LCD_CLRTXTLN	;
1272)   16B0 CD 48 16    		     CALL LCD_DOSCROLL	;
1273)   16B3 E1          		     POP HL	;
1274)   16B4 F1          		     POP AF	;
1276)   16B5 3D          		     DEC A	;
1277)   16B6 77          		     LD (HL),A ;CURSORY                            	;CURSORY
1278)   16B7 AF          		     XOR A	;
1279)   16B8 32 0D FE    		     LD (CURSORX),A	;
1280)   16BB C9          		     RET	;
1295)   16BC 2A 03 FE    		     LD HL,(BCOLOR);      	;
1296)   16BF 18 03       		     JR LCD_SETCURS	;
1307)   16C1 2A 01 FE    		     LD HL,(FCOLOR)      ;COLOR PARAM      	;COLOR PARAM
1310)   16C4 E5          		     PUSH HL             ;COLOR PARAM	;COLOR PARAM
1311)   16C5 3A 0D FE    		     LD A,(CURSORX)	;
1312)   16C8 06 08       		     LD B,FONT_WIDTH	;
1313)   16CA 16 00       		     LD D,0	;
1314)   16CC 5F          		     LD E,A	;
1315)   16CD 21 00 00    		     LD HL,0	;
1316)   16D0 B7          		     OR A                ;CLEAR CARRY	;CLEAR CARRY
1318)   16D1 ED 5A       		     ADC HL,DE	;
1319)   16D3 10 FC       		     DJNZ SCUR_AGN1      ;HL = DE * B 	;HL = DE * B
1320)   16D5 E5          		     PUSH HL             ;1ST PARAM X1	;1ST PARAM X1
1321)   16D6 01 08 00    		     LD BC,FONT_WIDTH	;
1322)   16D9 ED 4A       		     ADC HL,BC           ;NEXT CHAR	;NEXT CHAR
1323)   16DB 2B          		     DEC HL              ;MINUS 1	;MINUS 1
1324)   16DC E5          		     PUSH HL             ;SAVE 3RD PARAM X2      	;SAVE 3RD PARAM X2
1326)   16DD CD 12 16    		     CALL LCD_CALCLINE	;
1327)   16E0 06 0A       		     LD B,FONT_HEIGHT 	;
1328)   16E2 16 00       		     LD D,0	;
1329)   16E4 5F          		     LD E,A	;
1330)   16E5 21 00 00    		     LD HL,0	;
1332)   16E8 ED 5A       		     ADC HL,DE	;
1333)   16EA 10 FC       		     DJNZ SCUR_AGN2      ;HL=B*DE	;HL=B*DE
1334)   16EC 0E 08       		     LD C,FONT_HEIGHT-2  ;2 PIXEL HEIGTH CURSOR       	;2 PIXEL HEIGTH CURSOR
1335)   16EE 06 00       		     LD B,0	;
1336)   16F0 ED 4A       		     ADC HL,BC           ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
1337)   16F2 D1          		     POP DE              ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
1338)   16F3 E5          		     PUSH HL             ;2ND PARAM Y1	;2ND PARAM Y1
1339)   16F4 D5          		     PUSH DE             ;3RD PARAM X2	;3RD PARAM X2
1341)   16F5 23          		     INC HL              ; Y2 ADD THE LAST +2 PIXELS  	; Y2 ADD THE LAST +2 PIXELS
1342)   16F6 E5          		     PUSH HL             ;4TH PARAM Y2	;4TH PARAM Y2
1343)   16F7 CD 5F 10    		     CALL LCD_SETXY	;
1345)   16FA E1          		     POP HL              ;GET THE COLOR	;GET THE COLOR
1346)   16FB 06 10       		     LD B,2*FONT_WIDTH   ;2*8=16	;2*8=16
1348)   16FD CD AC 10    		     CALL LCD_SETPIXEL   ;DESTROYS D,A	;DESTROYS D,A
1349)   1700 10 FB       		     DJNZ SCUR_AGN3                            	;
1354)   1702 C9          		     RET	;
1357)   1703 CD 14 11    		    CALL LCD_CLRXY;	;
1358)   1706 2A 03 FE    		    LD HL,(BCOLOR)     	;
1360)   1709 01 E0 01    		    LD BC,LCD_HEIGHT+1	;
1361)   170C C5          		CS_AGNA2: PUSH BC	;
1362)   170D 01 20 03    		    LD BC,LCD_WIDTH+1	;
1363)   1710 CD AC 10    		CS_AGNA1: CALL LCD_SETPIXEL         ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1364)   1713 0B          		    DEC BC	;
1365)   1714 78          		    LD A,B	;
1366)   1715 B1          		    OR C	;
1367)   1716 20 F8       		    JR NZ,CS_AGNA1	;
1368)   1718 C1          		    POP BC	;
1369)   1719 0B          		    DEC BC	;
1370)   171A 78          		    LD A,B	;
1371)   171B B1          		    OR C     	;
1372)   171C 20 EE       		    JR NZ,CS_AGNA2	;
1373)   171E 21 00 00    		    LD HL,0                   ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1374)   1721 22 0D FE    		    LD (CURSORX),HL       	;
1375)   1724 C9          		  RET	;
1380)   1725 06 DF       		    LD B,LCD_HEIGHT.AND.0xFF   ;lsb	;lsb
1381)   1727 0E 02       		    LD C,LCD_HEIGHT.SHR.8+1      ;MSB+1	;MSB+1
1383)   1729 C5          		    PUSH BC          	;
1385)   172A 06 1F       		    LD B,LCD_WIDTH.AND.0xFF   ;lsb	;lsb
1386)   172C 0E 04       		    LD C,LCD_WIDTH.SHR.8+1      ;MSV+1          	;MSV+1
1388)   172E CD AC 10    		    CALL LCD_SETPIXEL         ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1389)   1731 10 FB       		    DJNZ CS_AGN1	;
1390)   1733 0D          		    DEC C	;
1391)   1734 20 F8       		    JR NZ,CS_AGN1     	;
1392)   1736 C1          		    POP BC	;
1393)   1737 10 F0       		    DJNZ CS_AGN2	;
1394)   1739 0D          		    DEC C	;
1395)   173A 20 ED       		    JR NZ,CS_AGN2 	;
1396)   173C 21 00 00    		    LD HL,0                   ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1397)   173F 22 0D FE    		    LD (CURSORX),HL       	;
1398)   1742 C9          		    RET	;
1404)   1743 7E          		    LD A,(HL)	;
1405)   1744 FE 00       		    CP 0	;
1406)   1746 C8          		    RET Z	;
1407)   1747 E5          		    PUSH HL	;
1408)   1748 CD 3E 15    		    CALL LCD_PRINTCHAR     	;
1409)   174B E1          		    POP HL	;
1410)   174C 23          		    INC HL	;
1411)   174D 18 F4       		    JR LCD_MSG	;
  4)   174F AF          		NEGHL:xor a	;
  5)   1750 95          		     sub l	;
  6)   1751 6F          		     ld l,a	;
  7)   1752 9F          		     sbc a,a	;
  8)   1753 94          		     sub h	;
  9)   1754 67          		     ld h,a	;
 10)   1755 C9          		     RET	;
 14)   1756 2A 79 FE    		     LD HL,(FILL_IDX)	;
 15)   1759 01 58 02    		     LD BC,MAXQ	;
 16)   175C A7          		     AND A	;
 17)   175D ED 42       		     SBC HL,BC	;
 18)   175F D0          		     RET NC ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 19)   1760 2A 7B FE    		     LD HL,(FILL_PY)	;
 20)   1763 ED 5B 81 FE 		     LD DE,(FILL_PDY)	;
 21)   1767 19          		     ADD HL,DE	;
 22)   1768 7C          		     LD A,H	;
 23)   1769 FE 80       		     CP 80H	;
 24)   176B D0          		     RET NC ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 25)   176C 11 1F 03    		     LD DE,LCD_WIDTH	;
 26)   176F ED 52       		     SBC HL,DE	;
 27)   1771 D0          		     RET NC  ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 29)   1772 2A 77 FE    		     LD HL,(FILL_Q)	;
 30)   1775 ED 4B 79 FE 		     LD BC,(FILL_IDX)	;
 31)   1779 78          		     LD A,B	;
 32)   177A B1          		     OR C         ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 33)   177B 28 08       		     JR Z,QPS_NXT1 	;
 34)   177D EB          		     EX DE,HL	;
 35)   177E C5          		     PUSH BC	;
 36)   177F E1          		     POP HL      	;
 37)   1780 29          		     ADD HL, HL	;
 38)   1781 29          		     ADD HL, HL	;
 39)   1782 29          		     ADD HL, HL        ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 40)   1783 EB          		     EX DE,HL	;
 41)   1784 19          		     ADD HL,DE      	;
 43)   1785 11 7B FE    		     LD DE,FILL_PY	;
 44)   1788 EB          		     EX DE,HL  ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 45)   1789 01 08 00    		     LD BC,8   ;8 BYTES	;8 BYTES
 46)   178C ED B0       		     LDIR      ;COPY	;COPY
 47)   178E 2A 79 FE    		     LD HL,(FILL_IDX)      	;
 48)   1791 23          		     INC HL	;
 49)   1792 22 79 FE    		     LD (FILL_IDX),HL	;
 50)   1795 C9          		QPS_EXT: RET   	;
 52)   1796 2A 77 FE    		QPOP: LD HL,(FILL_Q)	;
 53)   1799 ED 4B 79 FE 		     LD BC,(FILL_IDX)	;
 54)   179D 0B          		     DEC BC      	;
 55)   179E C5          		     PUSH BC	;
 56)   179F 78          		     LD A,B	;
 57)   17A0 B1          		     OR C         ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 58)   17A1 28 08       		     JR Z,QPP_NXT1                        	;
 59)   17A3 EB          		     EX DE,HL	;
 60)   17A4 C5          		     PUSH BC	;
 61)   17A5 E1          		     POP HL      	;
 62)   17A6 29          		     ADD HL, HL	;
 63)   17A7 29          		     ADD HL, HL	;
 64)   17A8 29          		     ADD HL, HL        ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 65)   17A9 EB          		     EX DE,HL	;
 66)   17AA 19          		     ADD HL,DE      	;
 67)   17AB C1          		QPP_NXT1: POP BC 	;
 68)   17AC ED 43 79 FE 		     LD (FILL_IDX),BC	;
 70)   17B0 11 7B FE    		     LD DE,FILL_PY  ;ORIGIN=QUEUE DEST=FILL_PY               	;ORIGIN=QUEUE DEST=FILL_PY
 71)   17B3 01 08 00    		     LD BC,8   ;8 BYTES	;8 BYTES
 72)   17B6 ED B0       		     LDIR      ;COPY	;COPY
 73)   17B8 2A 7D FE    		     LD HL,(FILL_PXL)	;
 74)   17BB 22 71 FE    		     LD (FILL_X1),HL	;
 75)   17BE 2A 7F FE    		     LD HL,(FILL_PXR)	;
 76)   17C1 22 73 FE    		     LD (FILL_X2),HL	;
 77)   17C4 ED 5B 81 FE 		     LD DE,(FILL_PDY)	;
 78)   17C8 ED 53 75 FE 		     LD (FILL_DY),DE      	;
 79)   17CC 2A 7B FE    		     LD HL,(FILL_PY)	;
 80)   17CF A7          		     AND A	;
 81)   17D0 19          		     ADD HL,DE	;
 82)   17D1 22 6D FE    		     LD (FILL_Y),HL 	;
 90)   17D4 C9          		     RET	;
 92)   17D5 E1          		@_FILL: POP HL        ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 93)   17D6 D1          		     POP DE          ;Y	;Y
 94)   17D7 C1          		     POP BC          ;X      	;X
 95)   17D8 E5          		     PUSH HL         ;RET ADDR TO SP	;RET ADDR TO SP
 96)   17D9 ED 43 6B FE 		     LD (FILL_X),BC	;
 97)   17DD ED 53 6D FE 		     LD (FILL_Y),DE   	;
 98)   17E1 ED 73 85 FE 		     LD (FILL_OLDSP),SP   	;
 99)   17E5 21 3E ED    		     LD HL,-((MAXQ*8)+2) ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
100)   17E8 39          		     ADD HL,SP	;
101)   17E9 F9          		     LD SP,HL        ;NEW SP	;NEW SP
104)   17EA 22 77 FE    		     LD (FILL_Q),HL  ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
105)   17ED 21 00 00    		     LD HL,0	;
106)   17F0 22 79 FE    		     LD (FILL_IDX),HL ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
110)   17F3 2A 6B FE    		     LD HL,(FILL_X);	;
111)   17F6 E5          		     PUSH HL	;
112)   17F7 2A 6D FE    		     LD HL,(FILL_y);	;
113)   17FA E5          		     PUSH HL	;
114)   17FB CD C3 10    		     CALL LCD_READPIXEL	;
115)   17FE 22 83 FE    		     LD (FILL_OV),HL	;
117)   1801 ED 5B 01 FE 		     LD DE,(FCOLOR)	;
118)   1805 A7          		     AND A	;
119)   1806 ED 52       		     SBC HL,DE      ;CHK OV=NV	;CHK OV=NV
120)   1808 CA 8D 19    		     JP Z,FL_EXIT	;
121)   180B 2A 6B FE    		     LD HL,(FILL_X)	;
122)   180E 7C          		     LD A,H	;
123)   180F FE 80       		     CP 0x80         ;CHK <0	;CHK <0
124)   1811 D2 8D 19    		     JP NC,FL_EXIT	;
125)   1814 11 1F 03    		     LD DE,LCD_WIDTH 	;
126)   1817 A7          		     AND A	;
127)   1818 ED 52       		     SBC HL,DE       ;CHK>799	;CHK>799
128)   181A D2 8D 19    		     JP NC,FL_EXIT	;
129)   181D 2A 6D FE    		     LD HL,(FILL_Y)	;
130)   1820 7C          		     LD A,H	;
131)   1821 FE 80       		     CP 0x80         ;CHK <0	;CHK <0
132)   1823 D2 8D 19    		     JP NC,FL_EXIT	;
133)   1826 11 DF 01    		     LD DE,LCD_HEIGHT 	;
134)   1829 A7          		     AND A	;
135)   182A ED 52       		     SBC HL,DE       ;CHK>480	;CHK>480
136)   182C D2 8D 19    		     JP NC,FL_EXIT           	;
138)   182F 2A 6D FE    		     LD HL,(FILL_Y)	;
139)   1832 22 7B FE    		     LD (FILL_PY),HL	;
140)   1835 2A 6B FE    		     LD HL,(FILL_X)	;
141)   1838 22 7D FE    		     LD (FILL_PXL),HL	;
142)   183B 22 7F FE    		     LD (FILL_PXR),HL	;
143)   183E 21 01 00    		     LD HL,1	;
144)   1841 22 81 FE    		     LD (FILL_PDY),HL	;
145)   1844 CD 56 17    		     CALL QPUSH         ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
147)   1847 2A 6D FE    		     LD HL,(FILL_Y)	;
148)   184A 23          		     INC HL	;
149)   184B 22 7B FE    		     LD (FILL_PY),HL	;
150)   184E 21 FF FF    		     LD HL,-1	;
151)   1851 22 81 FE    		     LD (FILL_PDY),HL	;
152)   1854 CD 56 17    		     CALL QPUSH	;
154)   1857 ED 5B 79 FE 		    LD DE,(FILL_IDX)	;
155)   185B 7A          		    LD A,D	;
156)   185C B3          		    OR E	;
157)   185D CA 8D 19    		    JP Z,FL_EXIT    ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT 	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
161)   1860 CD 96 17    		     CALL QPOP            ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
164)   1863 2A 71 FE    		      LD HL,(FILL_X1)	;
165)   1866 22 6B FE    		     LD (FILL_X),HL	;
166)   1869 7C          		FL_LP1: LD A,H	;
167)   186A FE 80       		     CP 0x80          ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
168)   186C D2 94 18    		     JP NC,FL_NXT1	;
169)   186F ED 5B 6D FE 		     LD DE,(FILL_Y)	;
170)   1873 E5          		     PUSH HL	;
171)   1874 D5          		     PUSH DE	;
172)   1875 CD C3 10    		     CALL LCD_READPIXEL	;
173)   1878 ED 5B 83 FE 		     LD DE,(FILL_OV)	;
174)   187C A7          		     AND A	;
175)   187D ED 52       		     SBC HL,DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
176)   187F C2 94 18    		     JP NZ,FL_NXT1	;
177)   1882 ED 5B 6B FE 		     LD DE,(FILL_X)	;
178)   1886 2A 6D FE    		     LD HL,(FILL_Y)	;
179)   1889 D5          		     PUSH DE	;
180)   188A CD 9C 13    		     CALL PLOTP	;
181)   188D E1          		     POP HL	;
182)   188E 2B          		     DEC HL	;
183)   188F 22 6B FE    		     LD (FILL_X),HL	;
184)   1892 18 D5       		     JR FL_LP1     	;
188)   1894 2A 6B FE    		     LD HL,(FILL_X)	;
189)   1897 ED 5B 71 FE 		     LD DE,(FILL_X1)	;
190)   189B 7C          		     LD A,H	;
191)   189C FE 80       		     CP 80H	;
192)   189E 30 08       		     JR NC,FL_NXT1A   ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP      	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
193)   18A0 A7          		     AND A	;
194)   18A1 ED 52       		     SBC HL,DE       ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
195)   18A3 D2 4B 19    		     JP NC,FL_SKIP   ;C IF DE>HL X1>X, NC IF X>=X1    	;C IF DE>HL X1>X, NC IF X>=X1
196)   18A6 ED 5A       		     ADC HL,DE	;
199)   18A8 23          		    INC HL	;
200)   18A9 22 6F FE    		    LD (FILL_L),HL	;
203)   18AC A7          		    AND A     	;
204)   18AD ED 52       		    SBC HL,DE   ;CHK L-X1	;CHK L-X1
205)   18AF 30 1E       		    JR NC,FL_NXT2   ;C IF DE>HL X1>L	;C IF DE>HL X1>L
206)   18B1 28 1C       		    JR Z,FL_NXT2	;
207)   18B3 ED 5A       		    ADC HL,DE	;
208)   18B5 22 7D FE    		    LD (FILL_PXL),HL ;L	;L
209)   18B8 2A 6D FE    		    LD HL,(FILL_Y)	;
210)   18BB 22 7B FE    		    LD (FILL_PY),HL	;
211)   18BE 1B          		    DEC DE	;
212)   18BF ED 53 7F FE 		    LD (FILL_PXR),DE	;
213)   18C3 2A 75 FE    		    LD HL,(FILL_DY) 	;
214)   18C6 CD 4F 17    		    CALL NEGHL	;
215)   18C9 22 81 FE    		    LD (FILL_PDY),HL     	;
216)   18CC CD 56 17    		    CALL QPUSH     	;
220)   18CF 2A 71 FE    		     LD HL,(FILL_X1)  ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
221)   18D2 23          		     INC HL	;
222)   18D3 22 6B FE    		     LD (FILL_X),HL	;
226)   18D6 11 1F 03    		   LD DE,LCD_WIDTH	;
227)   18D9 A7          		   AND A	;
228)   18DA EB          		   EX DE,HL	;
229)   18DB ED 52       		   SBC HL,DE    ;800-(X=DE)	;800-(X=DE)
230)   18DD 38 24       		   JR C,FL_NXT3   ;C IF X>800	;C IF X>800
231)   18DF EB          		   EX DE,HL      ;HL=X	;HL=X
232)   18E0 E5          		   PUSH HL	;
233)   18E1 2A 6D FE    		   LD HL,(FILL_Y)	;
234)   18E4 E5          		   PUSH HL	;
235)   18E5 CD C3 10    		   CALL LCD_READPIXEL	;
236)   18E8 ED 5B 83 FE 		   LD DE,(FILL_OV)	;
237)   18EC A7          		   AND A	;
238)   18ED ED 52       		   SBC HL,DE       ;PIXELREAD=OV	;PIXELREAD=OV
239)   18EF 20 12       		   JR NZ,FL_NXT3	;
240)   18F1 ED 5B 6B FE 		   LD DE,(FILL_X)	;
241)   18F5 2A 6D FE    		   LD HL,(FILL_Y)	;
242)   18F8 D5          		   PUSH DE	;
243)   18F9 CD 9C 13    		   CALL PLOTP	;
244)   18FC E1          		   POP HL	;
245)   18FD 23          		   INC HL	;
246)   18FE 22 6B FE    		   LD (FILL_X),HL	;
247)   1901 18 D3       		   JR FL_LP2	;
250)   1903 2A 6D FE    		    LD HL,(FILL_Y)	;
251)   1906 22 7B FE    		    LD (FILL_PY),HL	;
252)   1909 2A 6F FE    		    LD HL,(FILL_L)	;
253)   190C 22 7D FE    		    LD (FILL_PXL),HL	;
254)   190F 2A 6B FE    		    LD HL,(FILL_X)	;
255)   1912 2B          		    DEC HL	;
256)   1913 22 7F FE    		    LD (FILL_PXR),HL	;
257)   1916 2A 75 FE    		    LD HL,(FILL_DY)	;
258)   1919 22 81 FE    		    LD (FILL_PDY),HL	;
259)   191C CD 56 17    		    CALL QPUSH         	;
261)   191F 2A 6B FE    		    LD HL,(FILL_X)	;
262)   1922 ED 5B 73 FE 		    LD DE,(FILL_X2)	;
263)   1926 13          		    INC DE	;
264)   1927 A7          		    AND A	;
265)   1928 ED 52       		    SBC HL,DE    ;X-(X2+1) C IF X2+1>X 	;X-(X2+1) C IF X2+1>X
266)   192A 38 1F       		    JR C,FL_NXT4	;
267)   192C 28 1D       		    JR Z,FL_NXT4	;
268)   192E 2A 6D FE    		    LD HL,(FILL_Y)	;
269)   1931 22 7B FE    		    LD (FILL_PY),HL	;
270)   1934 ED 53 7D FE 		    LD (FILL_PXL),DE	;
271)   1938 2A 6B FE    		    LD HL,(FILL_X);	;
272)   193B 2B          		    DEC HL	;
273)   193C 22 7F FE    		    LD (FILL_PXR),HL	;
274)   193F 2A 75 FE    		    LD HL,(FILL_DY)	;
275)   1942 CD 4F 17    		    CALL NEGHL	;
276)   1945 22 81 FE    		    LD (FILL_PDY),HL  	;
277)   1948 CD 56 17    		    CALL QPUSH         	;
280)   194B 2A 6B FE    		       LD HL,(FILL_X)	;
281)   194E 23          		       INC HL	;
282)   194F 22 6B FE    		       LD (FILL_X),HL	;
283)   1952 ED 5B 73 FE 		FL_LP3: LD DE,(FILL_X2)	;
284)   1956 A7          		       AND A	;
285)   1957 EB          		       EX DE,HL         ;X2=HL X=DE	;X2=HL X=DE
286)   1958 ED 52       		       SBC HL,DE        ;C IF DE>HL X>X2       	;C IF DE>HL X>X2
287)   195A 38 1C       		       JR C,FL_NXT5	;
288)   195C 19          		       ADD HL,DE        ;	;
289)   195D EB          		       EX DE,HL         ;X=HL X2=DE	;X=HL X2=DE
290)   195E E5          		       PUSH HL	;
291)   195F 2A 6D FE    		       LD HL,(FILL_Y)	;
292)   1962 E5          		       PUSH HL	;
293)   1963 CD C3 10    		       CALL LCD_READPIXEL	;
294)   1966 ED 5B 83 FE 		       LD DE,(FILL_OV)	;
295)   196A A7          		       AND A	;
296)   196B ED 52       		       SBC HL,DE     ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
297)   196D 28 09       		       JR Z,FL_NXT5	;
298)   196F 2A 6B FE    		       LD HL,(FILL_X)	;
299)   1972 23          		       INC HL	;
300)   1973 22 6B FE    		       LD (FILL_X),HL	;
301)   1976 18 DA       		       JR FL_LP3	;
304)   1978 2A 6B FE    		       LD HL,(FILL_X)	;
305)   197B 22 6F FE    		       LD (FILL_L),HL	;
307)   197E ED 5B 73 FE 		      LD DE,(FILL_X2)	;
308)   1982 A7          		      AND A	;
309)   1983 EB          		      EX DE,HL    ;X2=HL X=DE	;X2=HL X=DE
310)   1984 ED 52       		      SBC HL,DE   ;X2-X C IF X>X2	;X2-X C IF X>X2
311)   1986 EB          		      EX DE,HL    ;X=HL X2-X=DE	;X=HL X2-X=DE
312)   1987 DA 57 18    		      JP C,FL_LP0 ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
313)   198A C3 D6 18    		      JP FL_LP2   ;GOTO DO WHILE	;GOTO DO WHILE
316)   198D 21 C2 12    		FL_EXIT: LD HL,(MAXQ*8)+2 ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
317)   1990 39          		        ADD HL,SP	;
318)   1991 F9          		        LD SP,HL        ;NEW SP	;NEW SP
319)   1992 C9          		        RET	;
  9)   1993 FE 01       		    CP 1          ;IS IT FOR GRAPHICS?	;IS IT FOR GRAPHICS?
 10)   1995 28 0E       		    JR Z,GRCOLS	;
 11)   1997 21 03 FE    		    LD HL,BCOLOR	;
 12)   199A 22 69 FE    		    LD (GR_PARAM4),HL	;
 13)   199D 21 01 FE    		    LD HL,FCOLOR	;
 14)   19A0 22 67 FE    		    LD (GR_PARAM3),HL	;
 15)   19A3 18 0C       		    JR BS_DOCOL	;
 16)   19A5 21 07 FE    		GRCOLS: LD HL,BGRCOL	;
 17)   19A8 22 69 FE    		    LD (GR_PARAM4),HL	;
 18)   19AB 21 05 FE    		    LD HL,FGRCOL	;
 19)   19AE 22 67 FE    		    LD (GR_PARAM3),HL         	;
 20)   19B1 CD 94 5E    		BS_DOCOL: CALL EXPRI   ;GET 1ST PARAM	;GET 1ST PARAM
 21)   19B4 D9          		    EXX	;
 22)   19B5 FD 7E 00    		    LD A,(IY)	;
 23)   19B8 FE 0D       		    CP 0x0D       ;FINISHED COMD LINE	;FINISHED COMD LINE
 24)   19BA 28 32       		    JR Z,COLSEL	;
 25)   19BC FE 3A       		    CP ':'	;
 26)   19BE 28 2E       		    JR Z,COLSEL	;
 27)   19C0 FE 2C       		    CP ','        ;CHECK FOR ','	;CHECK FOR ','
 28)   19C2 C2 61 1D    		    JP NZ,GRPHERR	;
 30)   19C5 E5          		    PUSH HL       ;SAVE 1ST PARAM	;SAVE 1ST PARAM
 31)   19C6 FD 23       		    INC IY        ;NEXT PARAM	;NEXT PARAM
 32)   19C8 CD 94 5E    		    CALL EXPRI    ;GET 2ND PARAM	;GET 2ND PARAM
 33)   19CB D9          		    EXX	;
 34)   19CC D1          		    POP DE        ;RESTORE 1ST PARAM ON DE HL HAS THE 2ND	;RESTORE 1ST PARAM ON DE HL HAS THE 2ND
 35)   19CD 7B          		    LD A,E	;
 36)   19CE D6 80       		    SUB 128	;
 37)   19D0 38 07       		    JR C,COLFC	;
 38)   19D2 5F          		    LD E,A	;
 39)   19D3 DD 21 37 FE 		    LD IX,BCOLPAL	;
 40)   19D7 18 04       		    JR DOPALCOL	;
 41)   19D9 DD 21 17 FE 		COLFC: LD IX,FCOLPAL	;
 43)   19DD 7B          		    LD A,E	;
 44)   19DE FE 0F       		    CP 15     ;MAX 16 COLORS	;MAX 16 COLORS
 45)   19E0 D2 61 1D    		    JP NC,GRPHERR	;
 46)   19E3 DD 19       		    ADD IX,DE     	;
 47)   19E5 DD 19       		    ADD IX,DE     ;2*DE CAUSE ITS A 2 BYTE ARRAY	;2*DE CAUSE ITS A 2 BYTE ARRAY
 48)   19E7 DD 75 00    		    LD (IX),L    ;SAVE THE NEW COLOR 	;SAVE THE NEW COLOR
 49)   19EA DD 74 01    		    LD (IX+1),H  	;
 50)   19ED C9          		    RET  	;
 53)   19EE E5          		    PUSH HL	;
 54)   19EF D1          		    POP DE     	;
 55)   19F0 7B          		    LD A,E	;
 56)   19F1 D6 80       		    SUB 128        ;CHECK MSB	;CHECK MSB
 57)   19F3 38 11       		    JR C,CFC	;
 58)   19F5 5F          		    LD E,A	;
 59)   19F6 DD 21 69 FE 		    LD IX,GR_PARAM4	;
 60)   19FA DD 6E 00    		    LD L,(IX)	;
 61)   19FD DD 66 01    		    LD H,(IX+1)     	;
 62)   1A00 DD 21 37 FE 		    LD IX,BCOLPAL  ;BACKCOLOR	;BACKCOLOR
 63)   1A04 18 0E       		    JR SFC	;
 64)   1A06 DD 21 67 FE 		CFC: LD IX,GR_PARAM3	;
 65)   1A0A DD 6E 00    		    LD L,(IX)	;
 66)   1A0D DD 66 01    		    LD H,(IX+1)     	;
 67)   1A10 DD 21 17 FE 		    LD IX,FCOLPAL  ;FRONTCOLOR	;FRONTCOLOR
 68)   1A14 7B          		SFC: LD A,E	;
 69)   1A15 FE 10       		    CP 16     ;MAX 16 COLORS	;MAX 16 COLORS
 70)   1A17 D2 61 1D    		    JP NC,GRPHERR	;
 71)   1A1A DD 19       		    ADD IX,DE	;
 72)   1A1C DD 19       		    ADD IX,DE	;
 73)   1A1E DD 56 00    		    LD D,(IX)	;
 74)   1A21 DD 5E 01    		    LD E,(IX+1)     	;
 75)   1A24 72          		    LD (HL),D  ;SAVE AGAIN 	;SAVE AGAIN
 76)   1A25 23          		    INC HL     	;
 77)   1A26 73          		    LD (HL),E       	;
 78)   1A27 C9          		    RET          	;
 84)   1A28 AF          		    XOR A	;
 85)   1A29 21 63 FE    		    LD HL,GR_PARAM1	;
 87)   1A2C F5          		    PUSH AF	;
 88)   1A2D E5          		    PUSH HL	;
 89)   1A2E CD 94 5E    		    CALL EXPRI    ;GET 1ST PARAM	;GET 1ST PARAM
 90)   1A31 D9          		    EXX           ;HL HAS THE PARAM     	;HL HAS THE PARAM
 91)   1A32 D1          		    POP DE        ;GET PARAM ADDRESS	;GET PARAM ADDRESS
 92)   1A33 EB          		    EX DE,HL	;
 93)   1A34 73          		    LD (HL),E	;
 94)   1A35 23          		    INC HL	;
 95)   1A36 72          		    LD (HL),D	;
 96)   1A37 23          		    INC HL        ;PARAM SAVED     	;PARAM SAVED
 97)   1A38 F1          		    POP AF	;
 98)   1A39 3C          		    INC A          	;
 99)   1A3A FE 04       		    CP 4	;
100)   1A3C C8          		    RET Z     	;
101)   1A3D F5          		    PUSH AF	;
102)   1A3E FD 7E 00    		    LD A,(IY)     	;
103)   1A41 FE 0D       		    CP 0x0D       ;FINISHED COMD LINE	;FINISHED COMD LINE
104)   1A43 28 0D       		    JR Z,NOMORE 	;
105)   1A45 FE 3A       		    CP ':'       ;FINISHED COMD LINE	;FINISHED COMD LINE
106)   1A47 28 09       		    JR Z,NOMORE      	;
107)   1A49 FE 2C       		    CP ','        ;CHECK FOR ','	;CHECK FOR ','
108)   1A4B 20 05       		    JR NZ,NOMORE     	;
109)   1A4D FD 23       		    INC IY        ;NEXT PARAM	;NEXT PARAM
110)   1A4F F1          		    POP AF    	;
111)   1A50 18 DA       		    JR GBP_NXT     	;
112)   1A52 F1          		NOMORE:POP AF    	;
113)   1A53 C9          		    RET	;
118)   1A54 01 08 00    		    LD BC,8     ;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD	;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD
119)   1A57 11 57 FE    		    LD DE,GR_LASTX3	;
120)   1A5A 21 5B FE    		    LD HL,GR_LASTX2	;
121)   1A5D ED B0       		    LDIR     	;
122)   1A5F 2A 63 FE    		    LD HL,(GR_PARAM1)	;
123)   1A62 22 5F FE    		    LD (GR_LASTX),HL  ;SAVE TO LAST              	;SAVE TO LAST
124)   1A65 2A 65 FE    		    LD HL,(GR_PARAM2)	;
125)   1A68 22 61 FE    		    LD (GR_LASTY),HL  ;SAVE TO LAST     	;SAVE TO LAST
126)   1A6B C9          		  RET	;
130)   1A6C CD 28 1A    		    CALL GETBASICPARAMS	;
131)   1A6F FE 02       		    CP 2	;
132)   1A71 C2 61 1D    		    JP NZ,GRPHERR          	;
133)   1A74 CD 8E 1B    		BAS_DODRAW: CALL GRPH_SAVECOLORS	;
134)   1A77 FD E5       		    PUSH IY	;
137)   1A79 2A 5F FE    		    LD HL,(GR_LASTX)	;
138)   1A7C E5          		    PUSH HL	;
139)   1A7D 2A 61 FE    		    LD HL,(GR_LASTY)	;
140)   1A80 E5          		    PUSH HL	;
141)   1A81 CD 54 1A    		    CALL GRPH_SAVELASTPOS	;
142)   1A84 2A 63 FE    		    LD HL,(GR_PARAM1)	;
143)   1A87 E5          		    PUSH HL	;
144)   1A88 2A 65 FE    		    LD HL,(GR_PARAM2)	;
145)   1A8B E5          		    PUSH HL 	;
146)   1A8C CD B9 11    		    CALL LCD_DRAWLINE 	;
148)   1A8F FD E1       		    POP IY	;
149)   1A91 CD A5 1B    		    CALL GRPH_RESTORECOLORS	;
150)   1A94 C9          		    RET           ;RETURN TO BASIC  	;RETURN TO BASIC
154)   1A95 CD 28 1A    		@BAS_MOVE: CALL GETBASICPARAMS	;
155)   1A98 FE 02       		         CP 2	;
156)   1A9A C2 61 1D    		         JP NZ,GRPHERR   	;
158)   1A9D CD 54 1A    		         CALL GRPH_SAVELASTPOS	;
159)   1AA0 C9          		         RET	;
165)   1AA1 CD 28 1A    		@BAS_POINT:CALL GETBASICPARAMS	;
166)   1AA4 FE 02       		          CP 2	;
167)   1AA6 C2 61 1D    		          JP NZ,GRPHERR   	;
170)   1AA9 2A 63 FE    		          LD HL,(GR_PARAM1)	;
171)   1AAC E5          		          PUSH HL	;
172)   1AAD 2A 65 FE    		          LD HL,(GR_PARAM2)	;
173)   1AB0 E5          		          PUSH HL           	;
174)   1AB1 CD C3 10    		          CALL LCD_READPIXEL	;
178)   1AB4 FD 7E 00    		          LD A,(IY)  	;
179)   1AB7 FE 29       		          CP ')'	;
180)   1AB9 C2 61 1D    		          JP NZ,GRPHERR 	;
181)   1ABC FD 23       		          INC IY 	;
184)   1ABE 01 00 00    		          LD BC,0	;
185)   1AC1 F3          		          DI	;
186)   1AC2 E5          		          PUSH HL	;
187)   1AC3 D9          		          EXX	;
188)   1AC4 E1          		          POP HL	;
189)   1AC5 D9          		          EXX           	;
190)   1AC6 21 00 00    		          LD HL,0	;
191)   1AC9 FB          		          EI	;
192)   1ACA C9          		          RET	;
198)   1ACB FE 00       		GRPH_GETGROUP: CP 0	;
200)   1ACD 21 D1 1C    		    LD HL,PLOT00	;
201)   1AD0 C8          		    RET Z	;
202)   1AD1 FE 0A       		         CP 80.SHR.3	;
203)   1AD3 21 E1 1C    		    LD HL,PLOT80	;
204)   1AD6 C8          		    RET Z	;
205)   1AD7 FE 0C       		         CP 96.SHR.3	;
206)   1AD9 21 F1 1C    		    LD HL,PLOT96	;
207)   1ADC C8          		    RET Z       	;
208)   1ADD FE 10       		         CP 128.SHR.3	;
209)   1ADF 21 01 1D    		    LD HL,PLOT128	;
210)   1AE2 C8          		    RET Z                   	;
211)   1AE3 FE 12       		        CP 144.SHR.3	;
212)   1AE5 21 11 1D    		    LD HL,PLOT144	;
213)   1AE8 C8          		    RET Z                   	;
214)   1AE9 FE 13       		         CP 152.SHR.3	;
215)   1AEB 21 21 1D    		    LD HL,PLOT152	;
216)   1AEE C8          		    RET Z                   	;
217)   1AEF FE 14       		         CP 160.SHR.3	;
218)   1AF1 21 31 1D    		    LD HL,PLOT160	;
219)   1AF4 C8          		    RET Z                   	;
220)   1AF5 FE 18       		         CP 192.SHR.3	;
221)   1AF7 21 41 1D    		    LD HL,PLOT192	;
222)   1AFA C8          		    RET Z                   	;
223)   1AFB FE 19       		         CP 200.SHR.3	;
224)   1AFD 21 51 1D    		         LD HL,PLOT200	;
225)   1B00 C8          		         RET Z 	;
226)   1B01 21 00 00    		    LD HL,0	;
227)   1B04 C9          		    RET                                  	;
230)   1B05 CD 28 1A    		@BAS_PLOT:CALL GETBASICPARAMS	;
231)   1B08 FE 03       		         CP 3	;
232)   1B0A C2 61 1D    		         JP NZ,GRPHERR   	;
233)   1B0D 3A 63 FE    		         LD A,(GR_PARAM1)	;
235)   1B10 01 04 00    		         LD BC,4	;
236)   1B13 21 65 FE    		         LD HL,GR_PARAM2	;
237)   1B16 11 63 FE    		         LD DE,GR_PARAM1	;
238)   1B19 ED B0       		         LDIR                    	;
239)   1B1B 47          		         LD B,A  ;COMMAND GROUP 5 BITS	;COMMAND GROUP 5 BITS
240)   1B1C CB 38       		         SRL B	;
241)   1B1E CB 38       		         SRL B	;
242)   1B20 CB 38       		         SRL B          	;
243)   1B22 E6 07       		         AND 7  	;
244)   1B24 4F          		         LD C,A  ;SPECIFIC COMMAND IN GROUP	;SPECIFIC COMMAND IN GROUP
245)   1B25 78          		         LD A,B	;
246)   1B26 CD CB 1A    		         CALL GRPH_GETGROUP	;
247)   1B29 7C          		         LD A,H	;
248)   1B2A FE 00       		         CP 0	;
249)   1B2C C8          		         RET Z ;RET IF HL=0 GROUP NOT IMPLEMENTED	;RET IF HL=0 GROUP NOT IMPLEMENTED
250)   1B2D 06 00       		         LD B,0	;
251)   1B2F CB 21       		         SLA C      ;C=C*2 2BYTE ADDRESSES	;C=C*2 2BYTE ADDRESSES
252)   1B31 09          		         ADD HL,BC  ;C IS 0-7 SPECIFIC COMMD	;C IS 0-7 SPECIFIC COMMD
253)   1B32 5E          		         LD E,(HL)	;
254)   1B33 23          		         INC HL	;
255)   1B34 56          		         LD D,(HL)	;
256)   1B35 EB          		         EX DE,HL	;
257)   1B36 E9          		         JP (HL)	;
259)   1B37 AF          		GRPH_NOTIMPL:  XOR     A	;
260)   1B38 CD F0 46    		  CALL    EXTERR	;
261)   1B3B 4E 4F 54 20 		  DEFM    'NOT IMPLEMENTED'	;
261)   1B3F 49 4D 50 4C 		  DEFM    'NOT IMPLEMENTED'	;
261)   1B43 45 4D 45 4E 		  DEFM    'NOT IMPLEMENTED'	;
261)   1B47 54 45 44    		  DEFM    'NOT IMPLEMENTED'	;
262)   1B4A 00          		  DEFB    0     	;
266)   1B4B 2A 63 FE    		GRPH_CALCREL: LD HL,(GR_PARAM1)	;
267)   1B4E ED 5B 5F FE 		        LD DE,(GR_LASTX)	;
268)   1B52 19          		        ADD HL,DE	;
269)   1B53 22 63 FE    		        LD (GR_PARAM1),HL	;
270)   1B56 2A 65 FE    		        LD HL,(GR_PARAM2)	;
271)   1B59 ED 5B 61 FE 		        LD DE,(GR_LASTY)	;
272)   1B5D 19          		        ADD HL,DE	;
273)   1B5E 22 65 FE    		        LD (GR_PARAM2),HL	;
274)   1B61 C9          		    RET	;
277)   1B62 CD 4B 1B    		        CALL GRPH_CALCREL	;
278)   1B65 CD 54 1A    		        CALL GRPH_SAVELASTPOS         	;
279)   1B68 C9          		        RET	;
282)   1B69 CD 4B 1B    		        CALL GRPH_CALCREL	;
283)   1B6C CD 74 1A    		        CALL BAS_DODRAW	;
284)   1B6F C9          		        RET	;
287)   1B70 2A 01 FE    		        LD HL,(FCOLOR)	;
288)   1B73 E5          		        PUSH HL	;
289)   1B74 2A 03 FE    		        LD HL,(BCOLOR)	;
290)   1B77 22 01 FE    		        LD (FCOLOR),HL	;
291)   1B7A E1          		        POP HL	;
292)   1B7B 22 03 FE    		        LD (BCOLOR),HL	;
293)   1B7E C9          		        RET	;
296)   1B7F 2A 05 FE    		        LD HL,(FGRCOL)	;
297)   1B82 E5          		        PUSH HL	;
298)   1B83 2A 07 FE    		        LD HL,(BGRCOL)	;
299)   1B86 22 05 FE    		        LD (FGRCOL),HL	;
300)   1B89 E1          		        POP HL	;
301)   1B8A 22 07 FE    		        LD (BGRCOL),HL	;
302)   1B8D C9          		        RET	;
306)   1B8E 01 04 00    		        LD BC,4 ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
307)   1B91 21 01 FE    		        LD HL,FCOLOR	;
308)   1B94 11 09 FE    		        LD DE,FCOLTM 	;
309)   1B97 ED B0       		        LDIR	;
310)   1B99 01 04 00    		        LD BC,4 ;2 FGRCOL + 2 BGRCOL	;2 FGRCOL + 2 BGRCOL
311)   1B9C 21 05 FE    		        LD HL,FGRCOL	;
312)   1B9F 11 01 FE    		        LD DE,FCOLOR	;
313)   1BA2 ED B0       		        LDIR         	;
314)   1BA4 C9          		    RET	;
318)   1BA5 01 04 00    		        LD BC,4 ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
319)   1BA8 21 09 FE    		        LD HL,FCOLTM	;
320)   1BAB 11 01 FE    		        LD DE,FCOLOR 	;
321)   1BAE ED B0       		        LDIR	;
322)   1BB0 C9          		    RET	;
326)   1BB1 CD 7F 1B    		        CALL GRPH_SWAPGRCOLS	;
327)   1BB4 CD 4B 1B    		        CALL GRPH_CALCREL	;
328)   1BB7 CD 74 1A    		        CALL BAS_DODRAW	;
329)   1BBA CD 7F 1B    		        CALL GRPH_SWAPGRCOLS	;
330)   1BBD C9          		        RET	;
333)   1BBE CD 7F 1B    		        CALL GRPH_SWAPGRCOLS	;
334)   1BC1 CD 74 1A    		        CALL BAS_DODRAW	;
335)   1BC4 CD 7F 1B    		        CALL GRPH_SWAPGRCOLS	;
336)   1BC7 C9          		        RET	;
339)   1BC8 CD 74 1A    		        CALL BAS_DODRAW  ;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT	;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT
340)   1BCB 2A 57 FE    		        LD HL,(GR_LASTX3)	;
341)   1BCE 22 63 FE    		        LD (GR_PARAM1),HL	;
342)   1BD1 2A 59 FE    		        LD HL,(GR_LASTY3)	;
343)   1BD4 22 65 FE    		        LD (GR_PARAM2),HL	;
344)   1BD7 CD 74 1A    		        CALL BAS_DODRAW  ;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT	;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT
345)   1BDA 2A 57 FE    		        LD HL,(GR_LASTX3)	;
346)   1BDD 22 63 FE    		        LD (GR_PARAM1),HL	;
347)   1BE0 2A 59 FE    		        LD HL,(GR_LASTY3)	;
348)   1BE3 22 65 FE    		        LD (GR_PARAM2),HL	;
349)   1BE6 CD 74 1A    		        CALL BAS_DODRAW  ;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT	;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT
350)   1BE9 01 04 00    		        LD BC,4	;
351)   1BEC 21 57 FE    		        LD HL,GR_LASTX3	;
352)   1BEF 11 5F FE    		        LD DE,GR_LASTX	;
353)   1BF2 ED B0       		        LDIR               ;SET LASTX,LASTY         	;SET LASTX,LASTY
354)   1BF4 C9          		    RET	;
356)   1BF5 CD 7F 1B    		GRPH_TRIANGLEBC:CALL GRPH_SWAPGRCOLS	;
357)   1BF8 CD C8 1B    		        CALL GRPH_TRIANGLE	;
358)   1BFB CD 7F 1B    		        CALL GRPH_SWAPGRCOLS	;
359)   1BFE C9          		    RET	;
362)   1BFF 21 63 FE    		GRPH_RECT:LD HL,GR_PARAM1	;
363)   1C02 11 67 FE    		        LD DE,GR_PARAM3	;
364)   1C05 01 04 00    		        LD BC,4	;
365)   1C08 ED B0       		        LDIR               ;COPY PARAM1,2 TO 3,4         	;COPY PARAM1,2 TO 3,4
366)   1C0A 2A 61 FE    		        LD HL,(GR_LASTY)	;
367)   1C0D E5          		        PUSH HL            ;PT1_Y	;PT1_Y
368)   1C0E 2A 5F FE    		        LD HL,(GR_LASTX)	;
369)   1C11 E5          		        PUSH HL            ;PT1_X         	;PT1_X
370)   1C12 2A 61 FE    		        LD HL,(GR_LASTY)         	;
371)   1C15 22 65 FE    		        LD (GR_PARAM2),HL         	;
372)   1C18 CD 74 1A    		        CALL BAS_DODRAW    ;PT1_X,PT1_Y TO PT2_X,PT1_Y	;PT1_X,PT1_Y TO PT2_X,PT1_Y
373)   1C1B 2A 69 FE    		        LD HL,(GR_PARAM4)	;
374)   1C1E 22 65 FE    		        LD (GR_PARAM2),HL	;
375)   1C21 CD 74 1A    		        CALL BAS_DODRAW    ;PT2_X,PT1_Y TO PT2_X,PT2_Y	;PT2_X,PT1_Y TO PT2_X,PT2_Y
376)   1C24 E1          		        POP HL             ;PT1_X	;PT1_X
377)   1C25 22 63 FE    		        LD (GR_PARAM1),HL         	;
378)   1C28 CD 74 1A    		        CALL BAS_DODRAW    ;PT2_X,PT2_Y TO PT1_X,PT2_Y	;PT2_X,PT2_Y TO PT1_X,PT2_Y
379)   1C2B E1          		        POP HL             ;PT1_Y	;PT1_Y
380)   1C2C 22 65 FE    		        LD (GR_PARAM2),HL	;
381)   1C2F CD 74 1A    		        CALL BAS_DODRAW    ;PT1_X,PT2_Y TO PT1_X,PT1_Y	;PT1_X,PT2_Y TO PT1_X,PT1_Y
382)   1C32 01 04 00    		        LD BC,4	;
383)   1C35 21 67 FE    		        LD HL,GR_PARAM3	;
384)   1C38 11 5F FE    		        LD DE,GR_LASTX	;
385)   1C3B ED B0       		        LDIR               ;SET LASTX,LASTY	;SET LASTX,LASTY
386)   1C3D C9          		        RET	;
388)   1C3E CD 7F 1B    		GRPH_RECTBC:CALL GRPH_SWAPGRCOLS	;
389)   1C41 CD FF 1B    		        CALL GRPH_RECT	;
390)   1C44 CD 7F 1B    		        CALL GRPH_SWAPGRCOLS	;
391)   1C47 C9          		    RET	;
394)   1C48 CD 8E 1B    		GRPH_CIRCREL: CALL GRPH_SAVECOLORS	;
395)   1C4B 2A 63 FE    		        LD HL,(GR_PARAM1)	;
396)   1C4E 7C          		        LD A,H	;
397)   1C4F B5          		        OR L	;
398)   1C50 20 06       		        JR NZ,CIRE_DOIT 	;
399)   1C52 2A 65 FE    		        LD HL,(GR_PARAM2)	;
400)   1C55 7C          		        LD A,H	;
401)   1C56 B5          		        OR L	;
402)   1C57 C8          		        RET Z              ; RETURN IF BOTH PARAMS ARE ZERO         	; RETURN IF BOTH PARAMS ARE ZERO
403)   1C58 ED 5B 5F FE 		CIRE_DOIT:LD DE,(GR_LASTX)	;
404)   1C5C D5          		        PUSH DE	;
405)   1C5D ED 5B 61 FE 		        LD DE,(GR_LASTY)	;
406)   1C61 D5          		        PUSH DE 	;
407)   1C62 E5          		        PUSH HL	;
408)   1C63 CD B0 13    		        CALL LCD_CIRCLE	;
409)   1C66 CD A5 1B    		        CALL GRPH_RESTORECOLORS	;
410)   1C69 C9          		        RET  	;
412)   1C6A CD 7F 1B    		GRPH_CIRCRELBC:CALL GRPH_SWAPGRCOLS	;
413)   1C6D CD 48 1C    		        CALL GRPH_CIRCREL	;
414)   1C70 CD 7F 1B    		        CALL GRPH_SWAPGRCOLS	;
415)   1C73 C9          		        RET	;
421)   1C74 C9          		GRPH_CIRCLE:RET	;
422)   1C75 2A 5F FE    		        LD HL,(GR_LASTX)	;
423)   1C78 ED 5B 63 FE 		        LD DE,(GR_PARAM1)	;
424)   1C7C AF          		        XOR A	;
425)   1C7D ED 42       		        SBC HL,BC	;
426)   1C7F 22 67 FE    		        LD (GR_PARAM3),HL    ;X2-X1	;X2-X1
427)   1C82 2A 61 FE    		        LD HL,(GR_LASTY)	;
428)   1C85 ED 5B 65 FE 		        LD DE,(GR_PARAM2)	;
429)   1C89 AF          		        XOR A	;
430)   1C8A ED 42       		        SBC HL,BC	;
431)   1C8C 22 69 FE    		        LD (GR_PARAM4),HL    ;Y2-Y1         	;Y2-Y1
433)   1C8F ED 4B 67 FE 		        LD BC,(GR_PARAM3)	;
434)   1C93 C5          		        PUSH BC	;
435)   1C94 D1          		        POP DE	;
436)   1C95 CD 47 27    		        CALL MULT32   ;BCHL RESULT	;BCHL RESULT
437)   1C98 D9          		        EXX	;
438)   1C99 C5          		        PUSH BC	;
439)   1C9A D1          		        POP DE	;
440)   1C9B D9          		        EXX	;
441)   1C9C E5          		        PUSH HL       ;DE LOW         	;DE LOW
442)   1C9D ED 4B 69 FE 		        LD BC,(GR_PARAM4)	;
443)   1CA1 C5          		        PUSH BC	;
444)   1CA2 D1          		        POP DE	;
445)   1CA3 CD 47 27    		        CALL MULT32   ;BCHL RESULT	;BCHL RESULT
446)   1CA6 D9          		        EXX         	;
447)   1CA7 C5          		        PUSH BC	;
448)   1CA8 E1          		        POP HL	;
449)   1CA9 D9          		        EXX	;
450)   1CAA D1          		        POP DE	;
452)   1CAB CD 62 27    		        CALL ADD32	;
456)   1CAE C9          		        RET	;
458)   1CAF CD 7F 1B    		GRPH_CIRCLEBC:CALL GRPH_SWAPGRCOLS	;
459)   1CB2 CD 74 1C    		        CALL GRPH_CIRCLE	;
460)   1CB5 CD 7F 1B    		        CALL GRPH_SWAPGRCOLS	;
461)   1CB8 C9          		        RET  	;
465)   1CB9 CD 7F 1B    		GRPH_FILL: CALL GRPH_SWAPGRCOLS 	;
466)   1CBC CD 8E 1B    		        CALL GRPH_SAVECOLORS	;
467)   1CBF 2A 63 FE    		        LD HL,(GR_PARAM1)	;
468)   1CC2 E5          		        PUSH HL	;
469)   1CC3 2A 65 FE    		        LD HL,(GR_PARAM2)	;
470)   1CC6 E5          		        PUSH HL	;
471)   1CC7 CD 34 15    		        CALL LCD_FILL	;
472)   1CCA CD A5 1B    		        CALL GRPH_RESTORECOLORS	;
473)   1CCD CD 7F 1B    		        CALL GRPH_SWAPGRCOLS	;
474)   1CD0 C9          		        RET         	;
476)   1CD1 62 1B       		PLOT00: DW GRPH_MOVEREL	;
477)   1CD3 69 1B       		    DW GRPH_LINEREL	;
478)   1CD5 37 1B       		    DW GRPH_NOTIMPL	;
479)   1CD7 B1 1B       		    DW GRPH_LINERELBC	;
480)   1CD9 54 1A       		    DW GRPH_SAVELASTPOS	;
481)   1CDB 74 1A       		    DW BAS_DODRAW	;
482)   1CDD 37 1B       		    DW GRPH_NOTIMPL     	;
483)   1CDF BE 1B       		    DW GRPH_DRAWBC	;
485)   1CE1 37 1B       		PLOT80: DW GRPH_NOTIMPL	;
486)   1CE3 C8 1B       		    DW GRPH_TRIANGLE	;
487)   1CE5 37 1B       		    DW GRPH_NOTIMPL	;
488)   1CE7 F5 1B       		    DW GRPH_TRIANGLEBC	;
489)   1CE9 37 1B       		    DW GRPH_NOTIMPL	;
490)   1CEB C8 1B       		    DW GRPH_TRIANGLE	;
491)   1CED 37 1B       		    DW GRPH_NOTIMPL     	;
492)   1CEF F5 1B       		    DW GRPH_TRIANGLEBC	;
494)   1CF1 37 1B       		PLOT96: DW GRPH_NOTIMPL	;
495)   1CF3 FF 1B       		    DW GRPH_RECT	;
496)   1CF5 37 1B       		    DW GRPH_NOTIMPL	;
497)   1CF7 3E 1C       		    DW GRPH_RECTBC	;
498)   1CF9 37 1B       		    DW GRPH_NOTIMPL	;
499)   1CFB FF 1B       		    DW GRPH_RECT	;
500)   1CFD 37 1B       		    DW GRPH_NOTIMPL     	;
501)   1CFF 3E 1C       		    DW GRPH_RECTBC	;
503)   1D01 37 1B       		PLOT128: DW GRPH_NOTIMPL	;
504)   1D03 B9 1C       		    DW GRPH_FILL	;
505)   1D05 37 1B       		    DW GRPH_NOTIMPL	;
506)   1D07 37 1B       		    DW GRPH_NOTIMPL	;
507)   1D09 37 1B       		    DW GRPH_NOTIMPL	;
508)   1D0B 37 1B       		    DW GRPH_NOTIMPL	;
509)   1D0D 37 1B       		    DW GRPH_NOTIMPL     	;
510)   1D0F 37 1B       		    DW GRPH_NOTIMPL	;
512)   1D11 48 1C       		PLOT144: DW GRPH_CIRCREL	;
513)   1D13 48 1C       		    DW GRPH_CIRCREL	;
514)   1D15 37 1B       		    DW GRPH_NOTIMPL	;
515)   1D17 6A 1C       		    DW GRPH_CIRCRELBC	;
516)   1D19 74 1C       		    DW GRPH_CIRCLE	;
517)   1D1B 74 1C       		    DW GRPH_CIRCLE	;
518)   1D1D 37 1B       		    DW GRPH_NOTIMPL     	;
519)   1D1F AF 1C       		    DW GRPH_CIRCLEBC	;
521)   1D21 37 1B       		PLOT152: DW GRPH_NOTIMPL	;
522)   1D23 37 1B       		    DW GRPH_NOTIMPL	;
523)   1D25 37 1B       		    DW GRPH_NOTIMPL	;
524)   1D27 37 1B       		    DW GRPH_NOTIMPL	;
525)   1D29 37 1B       		    DW GRPH_NOTIMPL	;
526)   1D2B 37 1B       		    DW GRPH_NOTIMPL	;
527)   1D2D 37 1B       		    DW GRPH_NOTIMPL     	;
528)   1D2F 37 1B       		    DW GRPH_NOTIMPL	;
530)   1D31 37 1B       		PLOT160: DW GRPH_NOTIMPL	;
531)   1D33 37 1B       		    DW GRPH_NOTIMPL	;
532)   1D35 37 1B       		    DW GRPH_NOTIMPL	;
533)   1D37 37 1B       		    DW GRPH_NOTIMPL	;
534)   1D39 37 1B       		    DW GRPH_NOTIMPL	;
535)   1D3B 37 1B       		    DW GRPH_NOTIMPL	;
536)   1D3D 37 1B       		    DW GRPH_NOTIMPL     	;
537)   1D3F 37 1B       		    DW GRPH_NOTIMPL	;
539)   1D41 37 1B       		PLOT192: DW GRPH_NOTIMPL	;
540)   1D43 37 1B       		    DW GRPH_NOTIMPL	;
541)   1D45 37 1B       		    DW GRPH_NOTIMPL	;
542)   1D47 37 1B       		    DW GRPH_NOTIMPL	;
543)   1D49 37 1B       		    DW GRPH_NOTIMPL	;
544)   1D4B 37 1B       		    DW GRPH_NOTIMPL	;
545)   1D4D 37 1B       		    DW GRPH_NOTIMPL     	;
546)   1D4F 37 1B       		    DW GRPH_NOTIMPL	;
548)   1D51 37 1B       		PLOT200: DW GRPH_NOTIMPL	;
549)   1D53 37 1B       		    DW GRPH_NOTIMPL	;
550)   1D55 37 1B       		    DW GRPH_NOTIMPL	;
551)   1D57 37 1B       		    DW GRPH_NOTIMPL	;
552)   1D59 37 1B       		    DW GRPH_NOTIMPL	;
553)   1D5B 37 1B       		    DW GRPH_NOTIMPL	;
554)   1D5D 37 1B       		    DW GRPH_NOTIMPL     	;
555)   1D5F 37 1B       		    DW GRPH_NOTIMPL	;
558)   1D61 AF          		  XOR     A	;
559)   1D62 CD F0 46    		  CALL    EXTERR	;
560)   1D65 70 61 72 61 		  DEFM    'param error'	;
560)   1D69 6D 20 65 72 		  DEFM    'param error'	;
560)   1D6D 72 6F 72    		  DEFM    'param error'	;
561)   1D70 00          		  DEFB    0     	;
  6)   1D71 11 B9 FE    		@MYOS_OSSAVE:  LD DE,STRGBUFF	;
  7)   1D74 7E          		OSNXT:         LD A,(HL)          ;hl = ACCS =FILENAME ENDS WITH 0X0D	;hl = ACCS =FILENAME ENDS WITH 0X0D
  8)   1D75 FE 0D       		               CP 13      ;	;
  9)   1D77 20 01       		               JR NZ,OSCONT	;
 10)   1D79 AF          		               XOR A	;
 11)   1D7A 12          		OSCONT:        LD (DE),A	;
 12)   1D7B 23          		               INC HL	;
 13)   1D7C 13          		               INC DE	;
 14)   1D7D FE 00       		               CP 0 	;
 15)   1D7F 20 F3       		               JR NZ,OSNXT	;
 16)   1D81 3E 04       		               LD A,4             ;OPEN FILE FOR WRITE AND CREATE IT	;OPEN FILE FOR WRITE AND CREATE IT
 17)   1D83 C5          		               PUSH BC	;
 18)   1D84 CD 21 0A    		               CALL STRG_OPNFILE  ;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A                  	;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A
 19)   1D87 C1          		               POP BC             ;bc = length of program	;bc = length of program
 20)   1D88 38 12       		               JR C,SVERR	;
 21)   1D8A ED 5B DC FD 		               LD DE,(PAGE)	;
 22)   1D8E CD 51 0A    		               CALL STRG_BLKWRITE ;BLOCK WRITE	;BLOCK WRITE
 23)   1D91 FE C8       		               CP FCMDOK	;
 24)   1D93 20 07       		               JR NZ,SVERR	;
 25)   1D95 3A E5 FE    		               LD A,(FID)	;
 26)   1D98 CD 3F 0A    		               CALL STRG_CLSFILE	;
 27)   1D9B C9          		               RET                ;ON RET A=RESULT	;ON RET A=RESULT
 28)   1D9C FE CA       		SVERR:         CP FNOTFND	;
 29)   1D9E CA F7 1D    		               JP Z,FLNOTF	;
 30)   1DA1 CD F0 46    		               CALL    EXTERR	;
 31)   1DA4 45 72 72 6F 		               DEFM    'Error Saving'	;
 31)   1DA8 72 20 53 61 		               DEFM    'Error Saving'	;
 31)   1DAC 76 69 6E 67 		               DEFM    'Error Saving'	;
 32)   1DB0 00          		        DEFB    0   	;
 36)   1DB1 11 B9 FE    		@MYOS_OSLOAD:LD DE,STRGBUFF	;
 37)   1DB4 7E          		OLNXT:      LD A,(HL)	;
 38)   1DB5 FE 0D       		            CP 13      ;	;
 39)   1DB7 20 01       		            JR NZ,OLCONT	;
 40)   1DB9 AF          		            XOR A	;
 41)   1DBA 12          		OLCONT:     LD (DE),a	;
 42)   1DBB 23          		            INC HL	;
 43)   1DBC 13          		            INC DE	;
 44)   1DBD FE 00       		            CP 0 	;
 45)   1DBF 20 F3       		            JR NZ,OLNXT	;
 46)   1DC1 CD 21 0A    		            CALL STRG_OPNFILE ;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A  	;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A
 47)   1DC4 38 1C       		            JR C,LDERR          	;
 48)   1DC6 2A DC FD    		            LD HL,(PAGE)	;
 49)   1DC9 EB          		            EX DE,HL	;
 50)   1DCA 01 00 00    		            LD BC,0           ;ZERO MEANS LOAD ALL	;ZERO MEANS LOAD ALL
 51)   1DCD CD 74 0A    		            CALL STRG_BLKREAD ;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED	;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED
 52)   1DD0 FE C8       		            CP FCMDOK	;
 53)   1DD2 20 0E       		            JR NZ,LDERR	;
 54)   1DD4 3A E5 FE    		            LD A,(FID)	;
 55)   1DD7 CD 3F 0A    		            CALL STRG_CLSFILE	;
 56)   1DDA 21 DE FD    		            LD HL,TOP ;SAVE TOP OF BASIC 	;SAVE TOP OF BASIC
 57)   1DDD 73          		            LD (HL),E	;
 58)   1DDE 23          		            INC HL	;
 59)   1DDF 72          		            LD (HL),D            	;
 60)   1DE0 37          		            SCF       ;SET C = NO ERROR            	;SET C = NO ERROR
 61)   1DE1 C9          		            RET                           	;
 62)   1DE2 FE CA       		LDERR:      CP FNOTFND	;
 63)   1DE4 28 11       		            JR Z,FLNOTF	;
 64)   1DE6 CD F0 46    		            CALL    EXTERR	;
 65)   1DE9 45 72 72 6F 		          DEFM    'Error Loading'	;
 65)   1DED 72 20 4C 6F 		          DEFM    'Error Loading'	;
 65)   1DF1 61 64 69 6E 		          DEFM    'Error Loading'	;
 65)   1DF5 67          		          DEFM    'Error Loading'	;
 66)   1DF6 00          		          DEFB    0   	;
 67)   1DF7 CD F0 46    		FLNOTF:     CALL    EXTERR	;
 68)   1DFA 57 72 6F 6E 		          DEFM    'Wrong Filename'	;
 68)   1DFE 67 20 46 69 		          DEFM    'Wrong Filename'	;
 68)   1E02 6C 65 6E 61 		          DEFM    'Wrong Filename'	;
 68)   1E06 6D 65       		          DEFM    'Wrong Filename'	;
 69)   1E08 00          		          DEFB    0   	;
 41)   1E09 C3 03 17    		@MYOS_CLRSCN:          JP LCD_CLRSCR        ; CLRSCN: clears the screen.	; CLRSCN: clears the screen.
 44)   1E0C 7D          		                LD A,L	;
 45)   1E0D 32 A7 FE    		                LD (TIMECTR),A	;
 46)   1E10 7C          		     LD A,H	;
 47)   1E11 32 A8 FE    		        LD (TIMECTR+1),A	;
 48)   1E14 7B          		        LD A,E	;
 49)   1E15 32 A9 FE    		        LD (TIMECTR+2),A	;
 50)   1E18 7A          		        LD A,D	;
 51)   1E19 32 AA FE    		        LD (TIMECTR+3),A         	;
 52)   1E1C C9          		        RET	;
 56)   1E1D 3A A7 FE    		         LD A,(TIMECTR)	;
 57)   1E20 6F          		         LD L,A	;
 58)   1E21 3A A8 FE    		        LD A,(TIMECTR+1)	;
 59)   1E24 67          		        LD H,A	;
 60)   1E25 3A A9 FE    		        LD A,(TIMECTR+2)	;
 61)   1E28 5F          		        LD E,A	;
 62)   1E29 3A AA FE    		        LD A,(TIMECTR+3)	;
 63)   1E2C 57          		        LD D,A	;
 64)   1E2D C9          		       RET         	;
 66)   1E2E 63          		          LD H,E	;
 67)   1E2F E5          		          PUSH HL	;
 68)   1E30 CD BC 16    		          CALL LCD_RMVCURS	;
 69)   1E33 E1          		          POP HL	;
 70)   1E34 7C          		          LD A,H	;
 71)   1E35 32 0D FE    		          LD (CURSORX),A	;
 72)   1E38 7D          		          LD A,L	;
 73)   1E39 32 0E FE    		          LD (CURSORY),A	;
 74)   1E3C CD C1 16    		          CALL LCD_PRNCURS                      	;
 75)   1E3F C9          		          RET	;
 77)   1E40 16 00       		          LD D,0	;
 78)   1E42 3A 0D FE    		          LD A,(CURSORX)	;
 79)   1E45 5F          		          LD E,A	;
 80)   1E46 26 00       		          LD H,0	;
 82)   1E48 CD 12 16    		          CALL LCD_CALCLINE ;GETS CURSORY WITH SCROLL	;GETS CURSORY WITH SCROLL
 83)   1E4B 6F          		       LD L,A	;
 84)   1E4C C9          		       RET	;
 85)   1E4D 06 50       		KEYGET: LD      B,80 ;SCREEN WIDTH IN CHARS      	;SCREEN WIDTH IN CHARS
 87)   1E4F E5          		         PUSH    HL	;
 88)   1E50 ED 62       		          SBC     HL,HL           ;HL=0	;HL=0
 89)   1E52 CD 3A 20    		          CALL    MYOS_OSKEY	;
 90)   1E55 E1          		          POP     HL	;
 91)   1E56 D8          		          RET     C	;
 92)   1E57 18 F6       		          JR      MYOS_OSRDCH           	;
 93)   1E59 C9          		       RET  	;
 95)   1E5A F5          		       PUSH    AF	;
 96)   1E5B D5          		          PUSH    DE	;
 97)   1E5C E5          		          PUSH    HL	;
 98)   1E5D DD E5       		          PUSH    IX                      	;
 99)   1E5F 5F          		          LD      E,A	;
100)   1E60 CD 59 20    		          CALL    ESCTEST	;
103)   1E63 7B          		          LD A,E	;
104)   1E64 FE 20       		          CP 32	;
105)   1E66 38 0D       		          JR C,CTRCODE	;
106)   1E68 FE 7F       		          CP 127   ;BACKSPACE 	;BACKSPACE
107)   1E6A C2 EE 1F    		          JP NZ,PRINTIT	;
108)   1E6D 3E 08       		          LD A,8            ;DO A BACKSPACE	;DO A BACKSPACE
109)   1E6F CD 3E 15    		          CALL LCD_PRINTCHAR	;
110)   1E72 C3 F1 1F    		          JP OSWREXIT	;
111)   1E75 FE 04       		CTRCODE:  CP 4 ;WRITE TEXT AT TEXT POS	;WRITE TEXT AT TEXT POS
112)   1E77 20 06       		          JR NZ,CC1	;
113)   1E79 32 16 FE    		          LD (VDUMODE),A           	;
114)   1E7C C3 F1 1F    		          JP OSWREXIT	;
115)   1E7F FE 05       		CC1:      CP 5 ;WRITE TEXT AT GRAPH POS    	;WRITE TEXT AT GRAPH POS
116)   1E81 20 06       		          JR NZ,CC2	;
117)   1E83 32 16 FE    		          LD (VDUMODE),A	;
118)   1E86 C3 F1 1F    		          JP OSWREXIT	;
119)   1E89 FE 06       		CC2:      CP 6 ;ENABLE OUTPUT TO SCREEN	;ENABLE OUTPUT TO SCREEN
120)   1E8B 20 03       		          JR NZ,CC3	;
121)   1E8D C3 F1 1F    		          JP OSWREXIT	;
122)   1E90 FE 07       		CC3:      CP 7 ;BEEP	;BEEP
123)   1E92 20 03       		          JR NZ,CC4	;
124)   1E94 C3 F1 1F    		          JP OSWREXIT	;
125)   1E97 FE 08       		CC4:      CP 8 ;MOVE TEXT CURSOR BACK A CHAR	;MOVE TEXT CURSOR BACK A CHAR
126)   1E99 20 03       		          JR NZ,CC5	;
127)   1E9B C3 EE 1F    		          JP PRINTIT	;
134)   1E9E FE 09       		CC5:      CP 9 ;MOVE TEXT CURSOR FORWARD A CHAR	;MOVE TEXT CURSOR FORWARD A CHAR
135)   1EA0 20 0F       		          JR NZ,CC6	;
136)   1EA2 3A 0D FE    		          LD A,(CURSORX)	;
137)   1EA5 3C          		          INC A	;
138)   1EA6 FE 50       		          CP 80	;
139)   1EA8 D2 F1 1F    		          JP NC,OSWREXIT	;
140)   1EAB 32 0D FE    		          LD (CURSORX),A         	;
141)   1EAE C3 F1 1F    		          JP OSWREXIT   	;
142)   1EB1 FE 0A       		CC6:      CP 10 ;MOVE TEXT DOWN LF	;MOVE TEXT DOWN LF
143)   1EB3 CA EE 1F    		          JP Z,PRINTIT	;
144)   1EB6 FE 0B       		CC7:      CP 11 ;MOVE TEXT UP	;MOVE TEXT UP
145)   1EB8 20 0F       		          JR NZ,CC8	;
146)   1EBA 3A 0E FE    		          LD A,(CURSORY)	;
147)   1EBD 3D          		          DEC A	;
148)   1EBE FE FF       		          CP 0XFF	;
149)   1EC0 CA F1 1F    		          JP Z,OSWREXIT	;
150)   1EC3 32 0E FE    		          LD (CURSORY),A           	;
151)   1EC6 C3 F1 1F    		          JP OSWREXIT   	;
152)   1EC9 FE 0C       		CC8:      CP 12 ; CLS	; CLS
153)   1ECB 20 06       		          JR NZ,CC9	;
154)   1ECD CD 03 17    		          CALL LCD_CLRSCR	;
155)   1ED0 C3 F1 1F    		          JP OSWREXIT   	;
156)   1ED3 FE 0D       		CC9:      CP 13 ;GOTO START OF LINE CR	;GOTO START OF LINE CR
157)   1ED5 CA EE 1F    		          JP Z,PRINTIT	;
158)   1ED8 FE 0E       		CC10:     CP 14 ;ENABLE THE AUTOPAGING MODE	;ENABLE THE AUTOPAGING MODE
159)   1EDA 20 03       		          JR NZ,CC11	;
160)   1EDC C3 F1 1F    		          JP OSWREXIT   	;
161)   1EDF FE 0F       		CC11:     CP 15 ;DISABLE THE AUTOPAGING MODE	;DISABLE THE AUTOPAGING MODE
162)   1EE1 20 03       		          JR NZ,CC12	;
163)   1EE3 C3 F1 1F    		          JP OSWREXIT   	;
164)   1EE6 FE 10       		CC12:     CP 16 ;CLG	;CLG
165)   1EE8 20 06       		          JR NZ,CC13	;
166)   1EEA CD 9A 24    		          CALL MYOS_CLG       	;
167)   1EED C3 F1 1F    		          JP OSWREXIT   	;
168)   1EF0 FE 11       		CC13:     CP 17 ; SAME AS COLOUR	; SAME AS COLOUR
169)   1EF2 20 09       		          JR NZ,CC14	;
171)   1EF4 FD 23       		          INC IY ;SKIP ','	;SKIP ','
172)   1EF6 CD 94 5E    		          CALL    EXPRI	;
173)   1EF9 D9          		          EXX ;l has the param  color	;l has the param  color
174)   1EFA C3 F1 1F    		          JP OSWREXIT   	;
175)   1EFD FE 12       		CC14:     CP 18 ;SAME AS GCOL	;SAME AS GCOL
176)   1EFF 20 0F       		          JR NZ,CC15	;
177)   1F01 FD 23       		          INC IY ;SKIP ','	;SKIP ','
178)   1F03 CD 94 5E    		          CALL    EXPRI	;
179)   1F06 D9          		          EXX ;l has the param  mode	;l has the param  mode
180)   1F07 FD 23       		          INC IY ;SKIP ','	;SKIP ','
181)   1F09 CD 94 5E    		          CALL    EXPRI	;
182)   1F0C D9          		          EXX ;l has the param  color                                        	;l has the param  color
184)   1F0D C3 F1 1F    		          JP OSWREXIT   	;
185)   1F10 FE 13       		CC15:     CP 19 ;SELECT A COLOR PALLETTE???	;SELECT A COLOR PALLETTE???
186)   1F12 20 0F       		          JR NZ,CC16	;
188)   1F14 06 05       		          LD B,5	;
189)   1F16 C5          		CC15AGN:  PUSH BC	;
190)   1F17 FD 23       		          INC IY ;SKIP ','	;SKIP ','
191)   1F19 CD 94 5E    		          CALL    EXPRI	;
192)   1F1C D9          		          EXX ;l has the param	;l has the param
193)   1F1D C1          		          POP BC	;
194)   1F1E 10 F6       		          DJNZ CC15AGN           	;
195)   1F20 C3 F1 1F    		          JP OSWREXIT   	;
196)   1F23 FE 14       		CC16:     CP 20 ;RESTORE THE DEFAULT LOGICAL COLORS	;RESTORE THE DEFAULT LOGICAL COLORS
197)   1F25 20 03       		          JR NZ,CC17           	;
199)   1F27 C3 F1 1F    		          JP OSWREXIT   	;
200)   1F2A FE 15       		CC17:     CP 21 ;NO OUTPUT TO SCREEN	;NO OUTPUT TO SCREEN
201)   1F2C 20 03       		          JR NZ,CC18	;
203)   1F2E C3 F1 1F    		          JP OSWREXIT   	;
204)   1F31 FE 16       		CC18:     CP 22 ;LIKE MODE	;LIKE MODE
205)   1F33 20 09       		          JR NZ,CC19	;
206)   1F35 FD 23       		          INC IY ;SKIP ','	;SKIP ','
207)   1F37 CD 94 5E    		          CALL    EXPRI	;
208)   1F3A D9          		          EXX ;l has the param           	;l has the param
209)   1F3B C3 F1 1F    		          JP OSWREXIT   	;
210)   1F3E FE 17       		CC19:     CP 23 ;Program characters and control the cursor.???	;Program characters and control the cursor.???
211)   1F40 20 27       		          JR NZ,CC20	;
212)   1F42 06 09       		          LD B,9   ;9 PARAMS CHAR_NO +8 ROWS OF A CHAR	;9 PARAMS CHAR_NO +8 ROWS OF A CHAR
213)   1F44 FD 7E 00    		          LD A,(IY)	;
214)   1F47 FD 23       		          INC IY ;SKIP ',' OR ';'	;SKIP ',' OR ';'
215)   1F49 FE 3B       		          CP ';'	;
216)   1F4B 20 01       		          JR NZ,CC19AGN	;
217)   1F4D 05          		          DEC B ; IF ; THE DELIMETER THEN 2 BYTES AT START   	; IF ; THE DELIMETER THEN 2 BYTES AT START
218)   1F4E C5          		CC19AGN:  PUSH BC	;
219)   1F4F CD 94 5E    		          CALL    EXPRI	;
220)   1F52 D9          		          EXX ;l has the param           	;l has the param
221)   1F53 FD 7E 00    		     LD A,(IY)	;
222)   1F56 FE 2C       		     CP ','	;
223)   1F58 28 07       		     JR Z,CC19NXT0              	;
224)   1F5A FE 3B       		          CP ';'           	;
225)   1F5C 20 05       		          JR NZ,CC19NXT	;
226)   1F5E C1          		          POP BC	;
227)   1F5F 05          		          DEC B	;
228)   1F60 C5          		          PUSH BC	;
229)   1F61 FD 23       		CC19NXT0: INC IY ;SKIP ','           	;SKIP ','
230)   1F63 C1          		CC19NXT:  POP BC	;
231)   1F64 10 E8       		          DJNZ CC19AGN                     	;
232)   1F66 C3 F1 1F    		          JP OSWREXIT   	;
233)   1F69 FE 18       		CC20:     CP 24 ;Define a graphics window	;Define a graphics window
234)   1F6B 20 11       		          JR NZ,CC21	;
235)   1F6D FD 23       		          INC IY ;SKIP ','	;SKIP ','
236)   1F6F 06 04       		          LD B,4   ;4 PARAMS TWO CORNERS OF A RECT	;4 PARAMS TWO CORNERS OF A RECT
237)   1F71 C5          		CC20AGN:  PUSH BC           	;
238)   1F72 CD 94 5E    		          CALL    EXPRI	;
239)   1F75 D9          		          EXX ;HL has the param	;HL has the param
240)   1F76 FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
241)   1F78 C1          		          POP BC	;
242)   1F79 10 F6       		          DJNZ CC20AGN                                	;
243)   1F7B C3 F1 1F    		          JP OSWREXIT   	;
244)   1F7E FE 19       		CC21:     CP 25 ;Identical to PLOT.	;Identical to PLOT.
245)   1F80 20 17       		          JR NZ,CC22	;
246)   1F82 FD 23       		          INC IY ;SKIP ','	;SKIP ','
247)   1F84 CD 94 5E    		          CALL    EXPRI	;
248)   1F87 D9          		          EXX ;L has the param PLOTMODE	;L has the param PLOTMODE
249)   1F88 FD 23       		          INC IY ;SKIP ','	;SKIP ','
250)   1F8A CD 94 5E    		          CALL    EXPRI	;
251)   1F8D D9          		          EXX ;HL has the param X	;HL has the param X
252)   1F8E FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
253)   1F90 CD 94 5E    		          CALL    EXPRI	;
254)   1F93 D9          		          EXX ;HL has the param Y	;HL has the param Y
255)   1F94 FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
258)   1F96 C3 F1 1F    		          JP OSWREXIT   	;
259)   1F99 FE 1A       		CC22:     CP 26 ;Restore the default text and graphics windows.	;Restore the default text and graphics windows.
260)   1F9B 20 02       		          JR NZ,CC23	;
261)   1F9D 18 52       		          JR OSWREXIT   	;
262)   1F9F FE 1B       		CC23:     CP 27 ;Send the next character to the screen.	;Send the next character to the screen.
263)   1FA1 20 07       		          JR NZ,CC24	;
264)   1FA3 CD 94 5E    		          CALL    EXPRI	;
265)   1FA6 D9          		          EXX ;	;
266)   1FA7 7D          		          LD A,L	;
267)   1FA8 18 44       		          JR PRINTIT           	;
268)   1FAA FE 1C       		CC24:     CP 28 ;Define a text window.	;Define a text window.
269)   1FAC 20 0E       		          JR NZ,CC25	;
270)   1FAE 06 04       		          LD B,4   ;4 PARAMS UPPERLEFT AND LOWERRIGHT	;4 PARAMS UPPERLEFT AND LOWERRIGHT
271)   1FB0 C5          		CC24AGN:  PUSH BC	;
272)   1FB1 FD 23       		     INC IY ;SKIP ','	;SKIP ','
273)   1FB3 CD 94 5E    		          CALL    EXPRI	;
274)   1FB6 D9          		          EXX ;l has the param	;l has the param
275)   1FB7 C1          		          POP BC           	;
276)   1FB8 10 F6       		          DJNZ CC24AGN                                	;
277)   1FBA 18 35       		          JR OSWREXIT   	;
278)   1FBC FE 1D       		CC25:     CP 29 ;Set the graphics origin.	;Set the graphics origin.
279)   1FBE 20 10       		          JR NZ,CC26	;
280)   1FC0 FD 23       		          INC IY ;SKIP ','	;SKIP ','
281)   1FC2 CD 94 5E    		          CALL    EXPRI	;
282)   1FC5 D9          		          EXX ;HL has the param X	;HL has the param X
283)   1FC6 FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
284)   1FC8 CD 94 5E    		          CALL    EXPRI	;
285)   1FCB D9          		          EXX ;HL has the param Y	;HL has the param Y
286)   1FCC FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
288)   1FCE 18 21       		          JR OSWREXIT   	;
289)   1FD0 FE 1E       		CC26:     CP 30 ;Home the text cursor to the top left of the screen.	;Home the text cursor to the top left of the screen.
290)   1FD2 20 08       		          JR NZ,CC27	;
291)   1FD4 21 00 00    		          LD HL,0	;
292)   1FD7 22 0D FE    		          LD (CURSORX),HL	;
293)   1FDA 18 15       		          JR OSWREXIT   	;
294)   1FDC FE 1F       		CC27:     CP 31 ;Move the text cursor - identical to TAB(x,y).	;Move the text cursor - identical to TAB(x,y).
295)   1FDE 20 11       		          JR NZ,OSWREXIT   	;
296)   1FE0 FD 23       		          INC IY ;SKIP ','	;SKIP ','
297)   1FE2 CD 94 5E    		          CALL    EXPRI	;
298)   1FE5 D9          		          EXX ;l has the param X	;l has the param X
299)   1FE6 FD 23       		          INC IY ;SKIP ','	;SKIP ','
300)   1FE8 CD 94 5E    		          CALL    EXPRI	;
301)   1FEB D9          		          EXX ;l has the param Y	;l has the param Y
303)   1FEC 18 03       		          JR OSWREXIT   	;
306)   1FEE CD F7 1F    		PRINTIT:  CALL    EDPUT	;
307)   1FF1 DD E1       		OSWREXIT: POP     IX	;
308)   1FF3 E1          		          POP     HL	;
309)   1FF4 D1          		          POP     DE	;
310)   1FF5 F1          		          POP     AF	;
311)   1FF6 C9          		          RET	;
316)   1FF7 3A 00 FE    		EDPUT: LD      A,(FLAGS)	;
317)   1FFA CB 5F       		       BIT     3,A	;
318)   1FFC 28 10       		       JR      Z,WRCH	;
319)   1FFE 7B          		       LD      A,E	;
320)   1FFF FE 20       		       CP      ' '	;
321)   2001 D8          		       RET     C	;
322)   2002 2A 12 FE    		       LD      HL,(EDPTR)	;
323)   2005 73          		       LD      (HL),E	;
324)   2006 2C          		       INC     L	;
325)   2007 C8          		       RET     Z	;
326)   2008 22 12 FE    		       LD      (EDPTR),HL	;
327)   200B C9          		       RET           	;
330)   200C 1E 3E       		          LD E,'>'        	;
331)   200E 7B          		WRCH:     LD A,E	;
333)   200F F5          		          PUSH AF	;
334)   2010 C5          		          PUSH BC	;
335)   2011 D5          		          PUSH DE	;
336)   2012 E5          		 PUSH HL	;
337)   2013 DD E5       		 PUSH IX	;
338)   2015 FD E5       		 PUSH IY     	;
339)   2017 F5          		          PUSH AF	;
340)   2018 C5          		          PUSH BC	;
341)   2019 D5          		          PUSH DE	;
342)   201A E5          		     PUSH HL	;
343)   201B CD BC 16    		     CALL LCD_RMVCURS	;
344)   201E E1          		          POP HL	;
345)   201F D1          		          POP DE	;
346)   2020 C1          		          POP BC	;
347)   2021 F1          		          POP AF	;
348)   2022 CD 3E 15    		          CALL LCD_PRINTCHAR	;
349)   2025 CD C1 16    		          CALL LCD_PRNCURS	;
351)   2028 FD E1       		          POP IY	;
352)   202A DD E1       		          POP IX	;
353)   202C E1          		          POP HL	;
354)   202D D1          		          POP DE	;
355)   202E C1          		          POP BC	;
356)   202F F1          		          POP AF	;
357)   2030 C9          		       RET 	;
359)   2031 3A 00 FE    		TOGGLE: LD     A,(FLAGS)	;
360)   2034 EE 04       		       XOR     00000100B	;
361)   2036 32 00 FE    		       LD      (FLAGS),A	;
362)   2039 C9          		       RET	;
371)   203A E5          		@MYOS_OSKEY: PUSH   HL	;
372)   203B 21 15 FE    		           LD      HL,INKEY	;
373)   203E 7E          		           LD      A,(HL)	;
374)   203F 36 00       		           LD      (HL),0	;
375)   2041 E1          		           POP     HL	;
376)   2042 B7          		           OR      A	;
377)   2043 37          		           SCF	;
378)   2044 C0          		           RET     NZ  	;
380)   2045 CD 01 25    		           CALL    GETKEYNW	;
382)   2048 D0          		           RET     NC	;
383)   2049 FE 1B       		           CP      ESC	;
384)   204B 37          		           SCF	;
385)   204C C0          		           RET     NZ                        	;
386)   204D E5          		ESCSET:  PUSH    HL	;
387)   204E 21 00 FE    		         LD      HL,FLAGS	;
388)   2051 CB 76       		         BIT     6,(HL)          ; ESC DISABLED?	; ESC DISABLED?
389)   2053 20 02       		         JR      NZ,ESCDIS	;
390)   2055 CB FE       		         SET     7,(HL)          ; SET ESCAPE FLAG	; SET ESCAPE FLAG
391)   2057 E1          		ESCDIS:  POP     HL	;
392)   2058 C9          		         RET 	;
393)   2059 CD F1 05    		ESCTEST: CALL RS_RXNW	;
394)   205C B7          		        OR A	;
395)   205D C8          		        RET Z	;
396)   205E FE 1B       		        CP 0x1B   ; ESC 	; ESC
397)   2060 28 EB       		        JR Z,ESCSET	;
398)   2062 32 15 FE    		        LD (INKEY),A	;
399)   2065 C9          		         RET	;
401)   2066 CD 59 20    		@MYOS_TRAP:  CALL ESCTEST	;
402)   2069 3A 00 FE    		@MYOS_LTRAP: LD A,(FLAGS)	;
403)   206C B7          		            OR A	;
404)   206D F0          		             RET P	;
405)   206E 21 00 FE    		ABORT:        LD HL,FLAGS 	;
406)   2071 CB BE       		            RES 7,(HL)	;
407)   2073 C3 C2 4D    		            JP ESCAPE          	;
416)   2076 F3          		           DI	;
417)   2077 21 F6 FD    		           LD HL,RANDOM    ; SET RANDOM SEED TO NON 0	; SET RANDOM SEED TO NON 0
418)   207A 3E 06       		           LD A,0x06	;
419)   207C 77          		           LD (HL),A	;
420)   207D 3E BB       		           LD A,0xBB	;
421)   207F 77          		           LD (HL),A	;
422)   2080 21 00 00    		           LD HL,0	;
423)   2083 22 0D FE    		           LD (CURSORX),HL  ; CURSOR X 7 Y ZEROED            	; CURSOR X 7 Y ZEROED
424)   2086 11 FF FF    		           LD DE,COL_WHITE   ; SET FCOLOR AND BCOLOR DEFAULT VALUES	; SET FCOLOR AND BCOLOR DEFAULT VALUES
425)   2089 21 01 FE    		           LD HL,FCOLOR	;
426)   208C 73          		           LD (HL),E	;
427)   208D 23          		           INC HL	;
428)   208E 72          		           LD (HL),D	;
429)   208F 23          		           INC HL	;
430)   2090 11 00 00    		           LD DE,COL_BLACK	;
431)   2093 73          		           LD (HL),E	;
432)   2094 23          		           INC HL	;
433)   2095 72          		           LD (HL),D     	;
434)   2096 01 04 00    		           LD BC,4     ; COPY SAME COLORS TO GRAPHICS	; COPY SAME COLORS TO GRAPHICS
435)   2099 11 05 FE    		           LD DE,FGRCOL	;
436)   209C 21 01 FE    		           LD HL,FCOLOR	;
437)   209F ED B0       		           LDIR                                          	;
438)   20A1 11 17 FE    		           LD DE,FCOLPAL	;
439)   20A4 CD AF 20    		           CALL COPYPAL	;
440)   20A7 11 37 FE    		           LD DE,BCOLPAL            	;
441)   20AA CD AF 20    		           CALL COPYPAL	;
442)   20AD 18 16       		           JR OSFINSH;	;
443)   20AF 21 21 21    		COPYPAL:   LD HL,COL_PALET   	;
444)   20B2 01 20 00    		           LD BC,16*2         ;SHOULD ADD 8 MORE COLORS 	;SHOULD ADD 8 MORE COLORS
445)   20B5 ED B0       		           LDIR	;
446)   20B7 AF          		           XOR A	;
447)   20B8 32 0F FE    		           LD (SCRLN),A	;
448)   20BB 21 00 00    		           LD HL,0	;
449)   20BE 22 A7 FE    		           LD (TIMECTR),HL	;
450)   20C1 22 A9 FE    		           LD (TIMECTR+2),HL            	;
451)   20C4 C9          		           RET	;
453)   20C5 CD 03 17    		OSFINSH:   CALL LCD_CLRSCR	;
454)   20C8 CD 2B 4C    		           CALL    TELL	;
455)   20CB 43 44 65 73 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20CF 70 20 4D 6F 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20D3 64 75 6C 61 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20D7 72 20 5A 38 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20DB 30 20 43 6F 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20DF 6D 70 75 74 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20E3 65 72 20 32 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20E7 30 32 30 2D 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   20EB 32 31       		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
456)   20ED 0A 0D       		     DEFB 0AH,0DH	;
457)   20EF 41 54 4C 41 		     DEFM "ATLAS Operating System Version "	;
457)   20F3 53 20 4F 70 		     DEFM "ATLAS Operating System Version "	;
457)   20F7 65 72 61 74 		     DEFM "ATLAS Operating System Version "	;
457)   20FB 69 6E 67 20 		     DEFM "ATLAS Operating System Version "	;
457)   20FF 53 79 73 74 		     DEFM "ATLAS Operating System Version "	;
457)   2103 65 6D 20 56 		     DEFM "ATLAS Operating System Version "	;
457)   2107 65 72 73 69 		     DEFM "ATLAS Operating System Version "	;
457)   210B 6F 6E 20    		     DEFM "ATLAS Operating System Version "	;
458)   210E 30          		                                               DEFB MJVER	;
459)   210F 2E          		                                               DEFB 46	;
460)   2110 32          		                                               DEFB MNVER1,MNVER2      	;
460)   2111 36          		                                               DEFB MNVER1,MNVER2      	;
461)   2112 0A 0D 0A 0D 		     DEFB 0AH,0DH,0AH,0DH      	;
462)   2116 00          		     DEFB 00H	;
463)   2117 AF          		           XOR A	;
464)   2118 11 FF F9    		          LD DE,STACKP-0x100 ;DE = HIMEM 	;DE = HIMEM
465)   211B 5F          		          LD E,A              ;PAGE BOUNDARY	;PAGE BOUNDARY
466)   211C 21 00 80    		          LD HL,RAMAD             ;@USER      	;@USER
467)   211F FB          		          EI     	;
468)   2120 C9          		          RET 	;
469)   2121 00 00       		COL_PALET: DW COL_BLACK	;
470)   2123 00 F8       		           DW COL_RED	;
471)   2125 C0 07       		           DW COL_GREEN	;
472)   2127 C0 FF       		           DW COL_YELLOW	;
473)   2129 3F 00       		           DW COL_BLUE	;
474)   212B 3F F8       		           DW COL_MAGENTA	;
475)   212D FF 07       		           DW COL_CYAN	;
476)   212F FF FF       		           DW COL_WHITE            	;
477)   2131 00 00       		          DW COL_BLACK ;TODO PICK 8 MORE COLORS	;TODO PICK 8 MORE COLORS
478)   2133 00 F8       		           DW COL_RED	;
479)   2135 C0 07       		           DW COL_GREEN	;
480)   2137 C0 FF       		           DW COL_YELLOW	;
481)   2139 3F 00       		           DW COL_BLUE	;
482)   213B 3F F8       		           DW COL_MAGENTA	;
483)   213D FF 07       		           DW COL_CYAN	;
484)   213F FF FF       		           DW COL_WHITE            	;
490)   2141 CD 9E 21    		        CALL    SKIPSP	;
491)   2144 FE 0D       		  CP      CR	;
492)   2146 C8          		  RET     Z	;
493)   2147 FE 7C       		  CP      '|'	;
494)   2149 C8          		  RET     Z	;
495)   214A FE 2E       		  CP      '.'	;
496)   214C CA 91 22    		  JP      Z,DOT           ;*.	;*.
497)   214F EB          		  EX      DE,HL	;
498)   2150 21 AD 21    		  LD      HL,COMDS	;
499)   2153 1A          		OSCLI0:  LD      A,(DE)	;
500)   2154 CD A5 21    		  CALL    UPPRC	;
501)   2157 BE          		  CP      (HL)	;
502)   2158 28 0B       		  JR      Z,OSCLI2	;
503)   215A 38 31       		  JR      C,HUH	;
504)   215C CB 7E       		OSCLI1:  BIT     7,(HL)	;
505)   215E 23          		  INC     HL	;
506)   215F 28 FB       		  JR      Z,OSCLI1	;
507)   2161 23          		  INC     HL	;
508)   2162 23          		  INC     HL	;
509)   2163 18 EE       		  JR      OSCLI0	;
511)   2165 D5          		OSCLI2:  PUSH    DE	;
512)   2166 13          		OSCLI3:  INC     DE	;
513)   2167 23          		  INC     HL	;
514)   2168 1A          		  LD      A,(DE)	;
515)   2169 CD A5 21    		  CALL    UPPRC	;
516)   216C FE 2E       		  CP      '.'             ;ABBREVIATED?	;ABBREVIATED?
517)   216E 28 0A       		  JR      Z,OSCLI4	;
518)   2170 AE          		  XOR     (HL)	;
519)   2171 28 F3       		  JR      Z,OSCLI3	;
520)   2173 FE 80       		  CP      80H	;
521)   2175 28 03       		  JR      Z,OSCLI4	;
522)   2177 D1          		  POP     DE	;
523)   2178 18 E2       		  JR      OSCLI1	;
525)   217A F1          		OSCLI4:  POP     AF	;
526)   217B 13          		         INC     DE	;
527)   217C CB 7E       		OSCLI5:  BIT     7,(HL)	;
528)   217E 23          		  INC     HL	;
529)   217F 28 FB       		  JR      Z,OSCLI5	;
530)   2181 7E          		  LD      A,(HL)	;
531)   2182 23          		  INC     HL	;
532)   2183 66          		  LD      H,(HL)	;
533)   2184 6F          		  LD      L,A	;
534)   2185 E5          		  PUSH    HL ;CALL COMMAND	;CALL COMMAND
535)   2186 EB          		  EX      DE,HL	;
536)   2187 E5          		  PUSH HL	;
537)   2188 FD E1       		  POP IY	;
538)   218A C3 9E 21    		  JP      SKIPSP	;
540)   218D 3E FE       		HUH:     LD      A,254  ;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY	;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY
541)   218F CD F0 46    		         CALL    EXTERR	;
542)   2192 42 61 64 20 		         DEFM    'Bad command'	;
542)   2196 63 6F 6D 6D 		         DEFM    'Bad command'	;
542)   219A 61 6E 64    		         DEFM    'Bad command'	;
543)   219D 00          		         DEFB    0   	;
545)   219E 7E          		SKIPSP:  LD      A,(HL)	;
546)   219F FE 20       		         CP      ' '	;
547)   21A1 C0          		         RET     NZ	;
548)   21A2 23          		         INC     HL	;
549)   21A3 18 F9       		         JR      SKIPSP 	;
551)   21A5 E6 7F       		UPPRC:   AND     7FH	;
552)   21A7 FE 60       		  CP      '`'	;
553)   21A9 D8          		  RET     C	;
554)   21AA E6 5F       		  AND     5FH             ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
555)   21AC C9          		  RET     	;
559)   21AD 42 59       		COMDS:DEFM   'BY'	;
560)   21AF C5          		  DEFB    'E'+80H	;
561)   21B0 94 22       		  DEFW    BYE	;
562)   21B2 43          		     DEFM    'C'	;
563)   21B3 C4          		  DEFB    'D'+80H	;
564)   21B4 C8 22       		  DEFW    DRV_CD   	;
565)   21B6 44 49       		     DEFM    'DI'	;
566)   21B8 D2          		  DEFB    'R'+80H	;
567)   21B9 AE 22       		  DEFW    DRV_DIR      	;
568)   21BB 46          		     DEFM    'F'	;
569)   21BC D8          		  DEFB    'X'+80H	;
570)   21BD 97 22       		  DEFW    FX 	;
571)   21BF 4C 43 44 5F 		     DEFM    'LCD_BLINKOF' 	;
571)   21C3 42 4C 49 4E 		     DEFM    'LCD_BLINKOF' 	;
571)   21C7 4B 4F 46    		     DEFM    'LCD_BLINKOF' 	;
572)   21CA C6          		        DEFB 'F'+80H	;
573)   21CB 4C 23       		        DEFW    LCD_BLINKOF	;
574)   21CD 4C 43 44 5F 		     DEFM    'LCD_BLINKO' 	;
574)   21D1 42 4C 49 4E 		     DEFM    'LCD_BLINKO' 	;
574)   21D5 4B 4F       		     DEFM    'LCD_BLINKO' 	;
575)   21D7 CE          		        DEFB 'N'+80H	;
576)   21D8 52 23       		        DEFW    LCD_BLINKON	;
577)   21DA 4C 43 44 5F 		     DEFM    'LCD_CLEA' 	;
577)   21DE 43 4C 45 41 		     DEFM    'LCD_CLEA' 	;
578)   21E2 D2          		        DEFB 'R'+80H	;
579)   21E3 58 23       		        DEFW    LCD_CLR              	;
580)   21E5 4C 43 44 5F 		     DEFM    'LCD_CURSORA' 	;
580)   21E9 43 55 52 53 		     DEFM    'LCD_CURSORA' 	;
580)   21ED 4F 52 41    		     DEFM    'LCD_CURSORA' 	;
581)   21F0 D4          		        DEFB 'T'+80H	;
582)   21F1 5E 23       		        DEFW    LCD_CURSAT	;
583)   21F3 4C 43 44 5F 		     DEFM    'LCD_CURSOF' 	;
583)   21F7 43 55 52 53 		     DEFM    'LCD_CURSOF' 	;
583)   21FB 4F 46       		     DEFM    'LCD_CURSOF' 	;
584)   21FD C6          		        DEFB 'F'+80H	;
585)   21FE 7D 23       		        DEFW    LCD_CURSOF              	;
586)   2200 4C 43 44 5F 		     DEFM    'LCD_CURSO' 	;
586)   2204 43 55 52 53 		     DEFM    'LCD_CURSO' 	;
586)   2208 4F          		     DEFM    'LCD_CURSO' 	;
587)   2209 CE          		        DEFB 'N'+80H	;
588)   220A 83 23       		        DEFW    LCD_CURSON              	;
589)   220C 4C 43 44 5F 		     DEFM    'LCD_DISPOF' 	;
589)   2210 44 49 53 50 		     DEFM    'LCD_DISPOF' 	;
589)   2214 4F 46       		     DEFM    'LCD_DISPOF' 	;
590)   2216 C6          		        DEFB 'F'+80H	;
591)   2217 89 23       		        DEFW    LCD_DISPOF              	;
592)   2219 4C 43 44 5F 		     DEFM    'LCD_DISPO' 	;
592)   221D 44 49 53 50 		     DEFM    'LCD_DISPO' 	;
592)   2221 4F          		     DEFM    'LCD_DISPO' 	;
593)   2222 CE          		        DEFB 'N'+80H	;
594)   2223 8F 23       		        DEFW    LCD_DISPON	;
595)   2225 4C 43 44 5F 		     DEFM    'LCD_HOM' 	;
595)   2229 48 4F 4D    		     DEFM    'LCD_HOM' 	;
596)   222C C5          		        DEFB 'E'+80H	;
597)   222D 70 0E       		        DEFW    LCD16_HOME                      	;
598)   222F 4C 43 44 5F 		     DEFM    'LCD_MOVLEF' 	;
598)   2233 4D 4F 56 4C 		     DEFM    'LCD_MOVLEF' 	;
598)   2237 45 46       		     DEFM    'LCD_MOVLEF' 	;
599)   2239 D4          		        DEFB 'T'+80H	;
600)   223A 9B 23       		        DEFW    LCD_MOVLFT                      	;
601)   223C 4C 43 44 5F 		     DEFM    'LCD_MOVRIGH' 	;
601)   2240 4D 4F 56 52 		     DEFM    'LCD_MOVRIGH' 	;
601)   2244 49 47 48    		     DEFM    'LCD_MOVRIGH' 	;
602)   2247 D4          		        DEFB 'T'+80H	;
603)   2248 A1 23       		        DEFW    LCD_MOVRGT                      	;
604)   224A 4C 43 44 5F 		     DEFM    'LCD_PRIN' 	;
604)   224E 50 52 49 4E 		     DEFM    'LCD_PRIN' 	;
605)   2252 D4          		        DEFB 'T'+80H	;
606)   2253 A7 23       		        DEFW    LCD_PRN 	;
607)   2255 4C 43 44 5F 		     DEFM    'LCD_SCRLEF' 	;
607)   2259 53 43 52 4C 		     DEFM    'LCD_SCRLEF' 	;
607)   225D 45 46       		     DEFM    'LCD_SCRLEF' 	;
608)   225F D4          		        DEFB 'T'+80H	;
609)   2260 18 24       		        DEFW    LCD_SCRLFT                      	;
610)   2262 4C 43 44 5F 		     DEFM    'LCD_SCRRIGH' 	;
610)   2266 53 43 52 52 		     DEFM    'LCD_SCRRIGH' 	;
610)   226A 49 47 48    		     DEFM    'LCD_SCRRIGH' 	;
611)   226D D4          		        DEFB 'T'+80H	;
612)   226E 1E 24       		        DEFW    LCD_SCRRGT       	;
613)   2270 50 57       		     DEFM    'PW'	;
614)   2272 C4          		  DEFB    'D'+80H	;
615)   2273 9A 22       		  DEFW    NIMP 	;
616)   2275 52 54 43 5F 		     DEFM    'RTC_ADJUS'	;
616)   2279 41 44 4A 55 		     DEFM    'RTC_ADJUS'	;
616)   227D 53          		     DEFM    'RTC_ADJUS'	;
617)   227E D4          		  DEFB    'T'+80H	;
618)   227F F8 22       		  DEFW    RTC_ADJUST 	;
619)   2281 52 54 43 5F 		     DEFM    'RTC_GE'	;
619)   2285 47 45       		     DEFM    'RTC_GE'	;
620)   2287 D4          		  DEFB    'T'+80H	;
621)   2288 26 23       		  DEFW    RTC_GET   	;
622)   228A 54 59 50    		     DEFM    'TYP'	;
623)   228D C5          		  DEFB    'E'+80H	;
624)   228E D3 22       		  DEFW    DRV_TYPFILE      	;
626)   2290 FF          		  DEFB 0FFH	;
629)   2291 C3 24 24    		DOT:  JP      EXTCMDRET	;
634)   2294 C3 00 00    		BYE:  JP 0	;
637)   2297 C3 24 24    		FX: JP     EXTCMDRET   	;
640)   229A C3 24 24    		NIMP: JP     EXTCMDRET   ;NOT IMPLEMENTED YET	;NOT IMPLEMENTED YET
645)   229D CD F0 46    		DRV_ERROR:             CALL    EXTERR	;
646)   22A0 53 54 4F 52 		  DEFM    'STORAGE ERROR'	;
646)   22A4 41 47 45 20 		  DEFM    'STORAGE ERROR'	;
646)   22A8 45 52 52 4F 		  DEFM    'STORAGE ERROR'	;
646)   22AC 52          		  DEFM    'STORAGE ERROR'	;
647)   22AD 00          		  DEFB    0       	;
652)   22AE CD DD 09    		DRV_DIR:               CALL STRG_DIRLIST       ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
653)   22B1 D2 24 24    		                       JP NC,EXTCMDRET	;
654)   22B4 18 E7       		                       JR DRV_ERROR	;
656)   22B6 CD 84 5D    		DRV_GETFNPRM:          CALL    EXPR            ;VARIABLE TYPE	;VARIABLE TYPE
657)   22B9 08          		  EX      AF,AF'          ;E NO OF BYTES ACCS THE PARAM	;E NO OF BYTES ACCS THE PARAM
658)   22BA 21 00 FB    		                       LD HL,ACCS	;
659)   22BD 06 00       		                       LD B,0	;
660)   22BF 4B          		                       LD C,E                        	;
661)   22C0 11 B9 FE    		                       LD DE,STRGBUFF	;
662)   22C3 ED B0       		                       LDIR	;
663)   22C5 AF          		                       XOR A	;
664)   22C6 12          		                       LD (DE),A	;
665)   22C7 C9          		                       RET	;
668)   22C8 CD B6 22    		DRV_CD:                CALL DRV_GETFNPRM	;
669)   22CB CD 09 0A    		                       CALL STRG_DIRCHG	;
670)   22CE D2 24 24    		                       JP NC,EXTCMDRET	;
671)   22D1 18 CA       		                       JR DRV_ERROR	;
674)   22D3 CD B6 22    		DRV_TYPFILE:           CALL DRV_GETFNPRM	;
675)   22D6 CD 21 0A    		                       CALL STRG_OPNFILE	;
676)   22D9 38 C2       		                       JR C,DRV_ERROR	;
677)   22DB CD A9 0A    		                       CALL STRG_TPFILE        ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
678)   22DE 3A E5 FE    		                       LD A,(FID)	;
679)   22E1 CD 3F 0A    		                       CALL STRG_CLSFILE  	;
680)   22E4 C3 24 24    		                       JP EXTCMDRET              	;
687)   22E7 CD 94 5E    		RTC_GETBASPAR: CALL EXPRI	;
688)   22EA D9          		 EXX	;
689)   22EB 7D          		 LD A,L ;A HAS THE NUMBER	;A HAS THE NUMBER
690)   22EC CD A9 26    		 CALL BN2BCD ;CONVERT IT IN BCD RESULT ON L  	;CONVERT IT IN BCD RESULT ON L
691)   22EF FD 7E 00    		 LD A,(IY)	;
692)   22F2 FE 2C       		 CP ','	;
693)   22F4 FD 23       		 INC IY	;
694)   22F6 7D          		 LD A,L	;
695)   22F7 C9          		 RET	;
700)   22F8 0E 00       		RTC_ADJUST: LD C,0	;
701)   22FA 11 89 FE    		 LD DE,BUFFER	;
702)   22FD AF          		 XOR A  ;CMD ADJUST TIME	;CMD ADJUST TIME
703)   22FE 32 89 FE    		 LD (BUFFER),A	;
704)   2301 13          		 INC DE	;
705)   2302 C5          		RTCADJ_NXT: PUSH BC	;
706)   2303 D5          		 PUSH DE	;
707)   2304 CD E7 22    		 CALL RTC_GETBASPAR	;
708)   2307 D1          		 POP DE	;
709)   2308 C1          		 POP BC  	;
710)   2309 28 0B       		 JR Z,RTCADJ_PAROK	;
712)   230B FD 2B       		 DEC IY	;
713)   230D 47          		 LD B,A ;SAVE A	;SAVE A
714)   230E 79          		 LD A,C	;
715)   230F FE 06       		 CP 6	;
716)   2311 28 08       		 JR Z,RTCADJ_EXEC	;
718)   2313 C3 EC 24    		 JP SNTX_ERROR	;
719)   2316 0C          		RTCADJ_PAROK: INC C	;
720)   2317 12          		 LD (DE),A	;
721)   2318 13          		 INC DE  	;
722)   2319 18 E7       		 JR RTCADJ_NXT  	;
723)   231B 78          		RTCADJ_EXEC: LD A,B	;
724)   231C 12          		 LD (DE),A ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
725)   231D 13          		 INC DE	;
726)   231E AF          		 XOR A	;
727)   231F 12          		 LD (DE),A ;YEAR HI DEFAULT	;YEAR HI DEFAULT
728)   2320 CD 48 0D    		 CALL DS1307_ADJUST	;
729)   2323 C3 24 24    		 JP EXTCMDRET	;
731)   2326 CD EC 0C    		RTC_GET: CALL DS1307_GETNOW	;
733)   2329 21 37 23    		 LD HL,TSTSTR	;
734)   232C 11 00 80    		 LD DE,$8000  	;
735)   232F 01 14 00    		 LD BC,20	;
736)   2332 C5          		 PUSH BC	;
737)   2333 ED B0       		 LDIR	;
738)   2335 C1          		 POP BC	;
739)   2336 C9          		 RET	;
741)   2337 31 37 2F 30 		TSTSTR DEFM '17/03/2021 17:52:03'	;
741)   233B 33 2F 32 30 		TSTSTR DEFM '17/03/2021 17:52:03'	;
741)   233F 32 31 20 31 		TSTSTR DEFM '17/03/2021 17:52:03'	;
741)   2343 37 3A 35 32 		TSTSTR DEFM '17/03/2021 17:52:03'	;
741)   2347 3A 30 33    		TSTSTR DEFM '17/03/2021 17:52:03'	;
742)   234A 00 0D       		    DEFB 0,0x0D	;
745)   234C CD A8 0E    		LCD_BLINKOF: CALL LCD16_BLINKOFF 	;
746)   234F C3 24 24    		 JP EXTCMDRET	;
748)   2352 CD B6 0E    		LCD_BLINKON: CALL LCD16_BLINKON 	;
749)   2355 C3 24 24    		 JP EXTCMDRET	;
751)   2358 CD 59 0E    		LCD_CLR: CALL LCD16_CLR	;
752)   235B C3 24 24    		 JP EXTCMDRET	;
755)   235E CD 94 5E    		 CALL EXPRI	;
756)   2361 D9          		 EXX	;
757)   2362 55          		 LD D,L	;
758)   2363 D5          		 PUSH DE	;
759)   2364 FD 7E 00    		 LD A,(IY)	;
760)   2367 FE 2C       		 CP ','	;
761)   2369 28 04       		 JR Z,LCDCA_OK	;
762)   236B D1          		 POP DE	;
763)   236C C3 EC 24    		 JP SNTX_ERROR	;
764)   236F FD 23       		LCDCA_OK: INC IY	;
765)   2371 CD 94 5E    		 CALL EXPRI	;
766)   2374 D9          		 EXX	;
767)   2375 D1          		 POP DE	;
768)   2376 5D          		 LD E,L    	;
769)   2377 CD 7D 0E    		 CALL LCD16_SETCURS  	;
770)   237A C3 24 24    		 JP EXTCMDRET	;
772)   237D CD 8C 0E    		LCD_CURSOF: CALL LCD16_CURSOFF 	;
773)   2380 C3 24 24    		 JP EXTCMDRET	;
775)   2383 CD 9A 0E    		LCD_CURSON: CALL LCD16_CURSON 	;
776)   2386 C3 24 24    		 JP EXTCMDRET	;
778)   2389 CD 30 0E    		LCD_DISPOF: CALL LCD16_NODISP	;
779)   238C C3 24 24    		 JP EXTCMDRET	;
781)   238F CD 3E 0E    		LCD_DISPON: CALL LCD16_DISP 	;
782)   2392 C3 24 24    		 JP EXTCMDRET	;
784)   2395 CD 70 0E    		LCD_HOME: CALL LCD16_HOME   	;
785)   2398 C3 24 24    		 JP EXTCMDRET   	;
787)   239B CD D0 0E    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
788)   239E C3 24 24    		 JP EXTCMDRET  	;
790)   23A1 CD D6 0E    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
791)   23A4 C3 24 24    		 JP EXTCMDRET  	;
793)   23A7 18 20       		LCD_PRN: JR PRINT0	;
794)   23A9 06 02       		PRINT6:  LD      B,2	;
795)   23AB 18 22       		  JR      PRINTC	;
796)   23AD 01 00 01    		PRINT8:  LD      BC,100H	;
797)   23B0 18 1D       		  JR      PRINTC	;
798)   23B2 21 00 FD    		PRINT9:  LD      HL,STAVAR	;
799)   23B5 AF          		  XOR     A	;
800)   23B6 BE          		  CP      (HL)	;
801)   23B7 28 10       		  JR      Z,PRINT0	;
802)   23B9 3A FB FD    		  LD      A,(COUNT)	;
803)   23BC B7          		  OR      A	;
804)   23BD 28 0A       		  JR      Z,PRINT0	;
805)   23BF 96          		PRINTA:  SUB     (HL)	;
806)   23C0 28 07       		  JR      Z,PRINT0	;
807)   23C2 30 FB       		  JR      NC,PRINTA	;
808)   23C4 ED 44       		  NEG	;
809)   23C6 CD 2A 57    		  CALL    FILL                	;
810)   23C9 3A 00 FD    		PRINT0:  LD      A,(STAVAR)	;
811)   23CC 4F          		  LD      C,A             ;PRINTS	;PRINTS
812)   23CD 06 00       		  LD      B,0             ;PRINTF	;PRINTF
813)   23CF CD C2 56    		PRINTC:  CALL    TERM?	;
814)   23D2 28 41       		  JR      Z,PRINT4	;
815)   23D4 CB 80       		  RES     0,B	;
816)   23D6 FD 23       		  INC     IY	;
817)   23D8 FE 7E       		  CP      '~'	;
818)   23DA 28 CD       		  JR      Z,PRINT6	;
819)   23DC FE 3B       		  CP      ';'	;
820)   23DE 28 CD       		  JR      Z,PRINT8	;
821)   23E0 FE 2C       		  CP      ','	;
822)   23E2 28 CE       		  JR      Z,PRINT9	;
823)   23E4 CD E3 56    		  CALL    FORMAT          ;SPC, TAB, '	;SPC, TAB, '
824)   23E7 28 E6       		  JR      Z,PRINTC	;
825)   23E9 FD 2B       		  DEC     IY	;
826)   23EB C5          		  PUSH    BC	;
827)   23EC CD 84 5D    		  CALL    EXPR            ;VARIABLE TYPE	;VARIABLE TYPE
828)   23EF 08          		  EX      AF,AF'	;
829)   23F0 FA 06 24    		  JP      M,PRINT3        ;STRING	;STRING
830)   23F3 D1          		  POP     DE	;
831)   23F4 D5          		  PUSH    DE	;
832)   23F5 CB 4A       		  BIT     1,D	;
833)   23F7 F5          		  PUSH    AF	;
834)   23F8 CC 96 63    		  CALL    Z,STR           ;DECIMAL	;DECIMAL
835)   23FB F1          		  POP     AF	;
836)   23FC C4 53 63    		  CALL    NZ,HEXSTR       ;HEX	;HEX
837)   23FF C1          		  POP     BC	;
838)   2400 C5          		  PUSH    BC	;
839)   2401 79          		  LD      A,C	;
840)   2402 93          		  SUB     E	;
841)   2403 D4 2A 57    		  CALL    NC,FILL         ;RIGHT JUSTIFY	;RIGHT JUSTIFY
842)   2406 C1          		PRINT3:  POP     BC	;
845)   2407 21 00 FB    		  LD HL,ACCS ; L IS 00	; L IS 00
846)   240A 7D          		  LD A,L	;
847)   240B 83          		  ADD E	;
848)   240C 6F          		  LD L,A	;
849)   240D AF          		  XOR A	;
850)   240E 77          		  LD (HL),A	;
851)   240F 6F          		  LD L,A	;
852)   2410 CD 62 0E    		  CALL LCD16_PRINT           ;PRINT	;PRINT
853)   2413 18 BA       		  JR      PRINTC	;
854)   2415 C3 24 24    		PRINT4:  JP      EXTCMDRET            	;
857)   2418 CD C4 0E    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
858)   241B C3 24 24    		 JP      EXTCMDRET  	;
860)   241E CD CA 0E    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
861)   2421 C3 24 24    		 JP      EXTCMDRET  	;
865)   2424 AF          		 XOR A	;
868)   2425 C9          		 RET	;
875)   2426 FE FF       		@MYOS_OSOPEN:  CP 255	;
876)   2428 28 06       		               JR Z,OPW	;
877)   242A FE 01       		               CP 1	;
878)   242C 28 06       		               JR Z,OPRW	;
880)   242E 18 06       		               JR DOOP	;
881)   2430 3E 01       		OPW:           LD A,1	;
882)   2432 18 02       		               JR DOOP	;
883)   2434 3E 02       		OPRW:          LD A,2	;
884)   2436 F5          		DOOP:          PUSH AF                  ;SAVE A                	;SAVE A
885)   2437 AF          		               XOR A                   ;CLEAR CARRY FLAG                	;CLEAR CARRY FLAG
886)   2438 12          		               LD (DE),A               ;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0	;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0
887)   2439 EB          		               EX DE,HL	;
888)   243A ED 52       		               SBC HL,DE	;
889)   243C 23          		               INC HL                  ;+1 FOR ZERO	;+1 FOR ZERO
890)   243D E5          		               PUSH HL	;
891)   243E C1          		               POP BC	;
892)   243F EB          		               EX DE,HL	;
893)   2440 11 B9 FE    		               LD DE,STRGBUFF	;
894)   2443 ED B0       		               LDIR                    ;COPY FILENAME TO STRGBUFF	;COPY FILENAME TO STRGBUFF
895)   2445 F1          		               POP AF                  ;RESTORE A	;RESTORE A
896)   2446 CD 21 0A    		               CALL STRG_OPNFILE   	;
897)   2449 DA 9D 22    		               JP C,DRV_ERROR	;
898)   244C C9          		               RET        	;
902)   244D 21 B9 FE    		@MYOS_OSBPUT:  LD HL,STRGBUFF	;
903)   2450 77          		               LD (HL),A               ;VALUE	;VALUE
904)   2451 7B          		               LD A,E                  ;FID	;FID
905)   2452 EB          		               EX DE,HL	;
906)   2453 01 01 00    		               LD BC,1                 ;NO OF BYTES TO WRITE	;NO OF BYTES TO WRITE
907)   2456 CD 51 0A    		               CALL STRG_BLKWRITE	;
908)   2459 DA 9D 22    		               JP C,DRV_ERROR	;
909)   245C C9          		               RET	;
913)   245D 7B          		@MYOS_OSBGET:  LD A,E                  ;FID	;FID
914)   245E 11 B9 FE    		               LD DE,STRGBUFF          ;SET BUFFER	;SET BUFFER
915)   2461 01 01 00    		               LD BC,1                 ;NO OF BYTES TO READ	;NO OF BYTES TO READ
916)   2464 CD 74 0A    		               CALL STRG_BLKREAD	;
917)   2467 DA 9D 22    		               JP C,DRV_ERROR	;
918)   246A 78          		               LD A,B	;
919)   246B 81          		               ADD C	;
920)   246C FE 01       		               CP 1	;
921)   246E 28 03       		               JR Z,GETISOK	;
922)   2470 3E FF       		               LD A,255	;
923)   2472 C9          		               RET	;
924)   2473 3A B9 FE    		GETISOK:       LD A,(STRGBUFF)	;
925)   2476 C9          		               RET	;
930)   2477 7B          		@MYOS_GETPTR:  LD A,E	;
931)   2478 CD A9 09    		               CALL STRG_GETPOS	;
932)   247B C9          		               RET	;
937)   247C CD C3 09    		@MYOS_PUTPTR:  CALL STRG_SETPOS	;
938)   247F C9          		               RET 	;
943)   2480 7B          		@MYOS_GETEXT:  LD A,E	;
944)   2481 CD A4 09    		               CALL STRG_GETSIZE	;
945)   2484 C9          		               RET	;
950)   2485 7B          		@MYOS_OSSHUT:  LD A,E	;
951)   2486 CD 3F 0A    		               CALL STRG_CLSFILE	;
952)   2489 C9          		               RET   	;
955)   248A 7B          		@MYOS_OSSTAT:  LD A,E	;
956)   248B CD 92 09    		               CALL STRG_GETEOF	;
957)   248E FE FF       		               CP 255                ;TEST IF -1                	;TEST IF -1
958)   2490 C9          		               RET	;
962)   2491 C9          		@MYOS_OSCALL: RET 	;
965)   2492 C9          		@MYOS_RESET: RET	;
967)   2493 CD 94 5E    		@MYOS_MODE:CALL EXPRI   ;GET PARAM	;GET PARAM
968)   2496 D9          		          EXX           ;HL HAS THE PARAM      	;HL HAS THE PARAM
969)   2497 C3 E8 4C    		          JP XEQ	;
971)   249A CD 8E 1B    		@MYOS_CLG: CALL GRPH_SAVECOLORS	;
972)   249D CD 03 17    		          CALL LCD_CLRSCR	;
973)   24A0 CD A5 1B    		          CALL GRPH_RESTORECOLORS	;
974)   24A3 C3 E8 4C    		          JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
977)   24A6 DD E5       		@MYOS_GCOL:  PUSH IX	;
978)   24A8 3E 01       		             LD A,1	;
979)   24AA CD 93 19    		             CALL BAS_COLOUR     	;
980)   24AD DD E1       		             POP IX	;
981)   24AF C3 E8 4C    		             JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
983)   24B2 DD E5       		@MYOS_COLOUR: PUSH IX	;
984)   24B4 AF          		             XOR A   	;
985)   24B5 CD 93 19    		             CALL BAS_COLOUR     	;
986)   24B8 DD E1       		             POP IX	;
987)   24BA C3 E8 4C    		             JP XEQ           ;RETURN TO BASIC              	;RETURN TO BASIC
989)   24BD DD E5       		@MYOS_DRAW: PUSH IX 	;
990)   24BF CD 6C 1A    		           CALL BAS_DRAW	;
991)   24C2 DD E1       		           POP IX	;
992)   24C4 C3 E8 4C    		           JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
994)   24C7 DD E5       		@MYOS_MOVE:PUSH IX	;
995)   24C9 CD 95 1A    		          CALL BAS_MOVE	;
996)   24CC DD E1       		          POP IX	;
997)   24CE C3 E8 4C    		          JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
999)   24D1 DD E5       		@MYOS_PLOT:PUSH IX	;
1000)   24D3 CD 05 1B    		          CALL BAS_PLOT	;
1001)   24D6 DD E1       		          POP IX	;
1002)   24D8 C3 E8 4C    		          JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
1004)   24DB DD E5       		@MYOS_POINT:PUSH IX	;
1005)   24DD CD A1 1A    		          CALL BAS_POINT ;RETURNS A VALUE TO BASIC	;RETURNS A VALUE TO BASIC
1006)   24E0 DD E1       		          POP IX	;
1007)   24E2 C9          		          RET	;
1016)   24E3 CD 28 1A    		@MYOS_PUTIMS:CALL GETBASICPARAMS;            	;
1017)   24E6 C3 E8 4C    		            JP XEQ	;
1019)   24E9 C3 26 23    		@MYOS_GETIMS: JP RTC_GET             	;
1021)   24EC CD F0 46    		SNTX_ERROR: CALL    EXTERR	;
1022)   24EF 53 79 6E 74 		  DEFM    'Syntax error'	;
1022)   24F3 61 78 20 65 		  DEFM    'Syntax error'	;
1022)   24F7 72 72 6F 72 		  DEFM    'Syntax error'	;
1023)   24FB 00          		  DEFB    0            	;
1030)   24FC CD 0F 03    		GETKEY: CALL GET_CHAR	;
1031)   24FF 37          		               SCF	;
1032)   2500 C9          		 RET       	;
1038)   2501 CD FC 02    		           CALL GET_CHARNW	;
1039)   2504 3F          		           CCF	;
1040)   2505 FE 00       		           CP 0	;
1041)   2507 C8          		           RET Z	;
1042)   2508 37          		           SCF	;
1043)   2509 C9          		      RET       	;
1045)   250A F5          		@CHKCURS:   PUSH AF	;
1046)   250B 3A A7 FE    		           LD A,(TIMECTR)	;
1047)   250E CB 67       		           BIT 4,A	;
1048)   2510 28 11       		           JR Z,CCSHOW      ;IF SET SHOW       	;IF SET SHOW
1049)   2512 3A 11 FE    		CCHIDE:    LD A,(CURSSTAT)	;
1050)   2515 CB 4F       		           BIT 1,A	;
1051)   2517 20 19       		           JR NZ,CCEX      ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
1052)   2519 CB CF       		           SET 1,A	;
1053)   251B 32 11 FE    		           LD (CURSSTAT),A	;
1054)   251E CD BC 16    		           CALL LCD_RMVCURS	;
1055)   2521 18 0F       		           JR CCEX                                               	;
1056)   2523 3A 11 FE    		CCSHOW:    LD A,(CURSSTAT)	;
1057)   2526 CB 4F       		           BIT 1,A	;
1058)   2528 28 08       		           JR Z,CCEX      ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
1059)   252A CB 8F       		           RES 1,A	;
1060)   252C 32 11 FE    		           LD (CURSSTAT),A	;
1061)   252F CD C1 16    		           CALL LCD_PRNCURS	;
1063)   2532 F1          		CCEX:      POP AF	;
1064)   2533 C9          		     RET          	;
1075)   2534 3A 00 FE    		       LD      A,(FLAGS)	;
1076)   2537 CB 5F       		       BIT     3,A             ;EDIT MODE?	;EDIT MODE?
1077)   2539 28 09       		       JR      Z,OSLIN1	;
1078)   253B CB 9F       		       RES     3,A	;
1079)   253D 32 00 FE    		       LD      (FLAGS),A	;
1080)   2540 2A 12 FE    		       LD      HL,(EDPTR)	;
1081)   2543 BD          		       CP      L	;
1082)   2544 3E 0D       		OSLIN1: LD     A,CR	;
1083)   2546 77          		       LD      (HL),A	;
1084)   2547 C4 5A 1E    		       CALL    NZ,MYOS_OSWRCH	;
1085)   254A 2E 00       		       LD      L,0	;
1086)   254C 4D          		       LD      C,L             ;REPEAT FLAG	;REPEAT FLAG
1087)   254D 28 20       		       JR      Z,OSWAIT        ;SUPPRESS UNWANTED SPACE	;SUPPRESS UNWANTED SPACE
1088)   254F 06 00       		UPDATE: LD     B,0	;
1089)   2551 7E          		UPD1:  LD      A,(HL)	;
1090)   2552 04          		       INC     B	;
1091)   2553 23          		       INC     HL	;
1092)   2554 FE 0D       		       CP      CR	;
1093)   2556 F5          		       PUSH    AF	;
1094)   2557 E5          		       PUSH    HL	;
1095)   2558 5F          		       LD      E,A	;
1096)   2559 C4 0E 20    		       CALL    NZ,WRCH         ;FAST WRCH	;FAST WRCH
1097)   255C E1          		       POP     HL	;
1098)   255D F1          		       POP     AF	;
1099)   255E 20 F1       		       JR      NZ,UPD1	;
1100)   2560 3E 20       		       LD      A,' '	;
1101)   2562 CD 5A 1E    		       CALL    MYOS_OSWRCH	;
1102)   2565 1E 08       		       LD      E,BS	;
1103)   2567 E5          		UPD2:  PUSH    HL	;
1104)   2568 CD 0E 20    		       CALL    WRCH            ;FAST WRCH	;FAST WRCH
1105)   256B E1          		       POP     HL	;
1106)   256C 2B          		       DEC     HL	;
1107)   256D 10 F8       		       DJNZ    UPD2	;
1108)   256F 79          		OSWAIT: LD     A,C	;
1109)   2570 05          		       DEC     B	;
1110)   2571 28 01       		       JR      Z,LIMIT	;
1111)   2573 B7          		       OR      A               ;REPEAT COMMAND?	;REPEAT COMMAND?
1112)   2574 CC 4D 1E    		LIMIT: CALL    Z,KEYGET        ;READ KEYBOARD	;READ KEYBOARD
1113)   2577 4F          		       LD      C,A             ;SAVE FOR REPEAT	;SAVE FOR REPEAT
1114)   2578 11 6F 25    		       LD      DE,OSWAIT       ;RETURN ADDRESS	;RETURN ADDRESS
1115)   257B D5          		       PUSH    DE	;
1116)   257C 3A 00 FE    		       LD      A,(FLAGS)	;
1117)   257F B7          		       OR      A               ;TEST FOR ESCAPE	;TEST FOR ESCAPE
1118)   2580 79          		       LD      A,C	;
1119)   2581 FA C3 25    		       JP      M,OSEXIT	;
1120)   2584 FE 0B       		       CP      11         ;CURSOR UP     (IX-11)	;CURSOR UP     (IX-11)
1121)   2586 CA 07 26    		       JP      Z,LEFT	;
1122)   2589 FE 0A       		       CP      10         ;CURSOR DOWN   (IX-10)	;CURSOR DOWN   (IX-10)
1123)   258B CA 3A 26    		       JP      Z,RIGHT	;
1124)   258E 06 00       		       LD      B,0	;
1125)   2590 FE 05       		       CP      5          ;CLEAR LEFT    (IX-5)	;CLEAR LEFT    (IX-5)
1126)   2592 28 72       		       JR      Z,BACK	;
1127)   2594 FE 09       		       CP      9          ;START OF LINE (IX-9)	;START OF LINE (IX-9)
1128)   2596 28 6F       		       JR      Z,LEFT	;
1129)   2598 FE 07       		       CP      7          ;CLEAR RIGHT   (IX-7)	;CLEAR RIGHT   (IX-7)
1130)   259A 28 76       		       JR      Z,DELETE	;
1131)   259C FE 08       		       CP      8          ;END OF LINE   (IX-8)	;END OF LINE   (IX-8)
1132)   259E CA 3A 26    		       JP      Z,RIGHT	;
1133)   25A1 0E 00       		       LD      C,0             ;INHIBIT REPEAT	;INHIBIT REPEAT
1134)   25A3 FE 10       		       CP      'P' AND 1FH	;
1135)   25A5 CA 31 20    		       JP      Z,TOGGLE	;
1136)   25A8 FE 06       		       CP      6          ;DELETE LEFT   (IX-6)	;DELETE LEFT   (IX-6)
1137)   25AA 28 5A       		       JR      Z,BACK	;
1138)   25AC FE 04       		       CP      4          ;CURSOR LEFT   (IX-4)	;CURSOR LEFT   (IX-4)
1139)   25AE 28 57       		       JR      Z,LEFT	;
1140)   25B0 FE 02       		       CP      2          ;DELETE RIGHT  (IX-2)	;DELETE RIGHT  (IX-2)
1141)   25B2 28 5E       		       JR      Z,DELETE	;
1142)   25B4 FE 01       		       CP      1          ;INSERT SPACE  (IX-1)	;INSERT SPACE  (IX-1)
1143)   25B6 28 6E       		       JR      Z,INSERT	;
1144)   25B8 FE 03       		       CP      3          ;CURSOR RIGHT  (IX-3)	;CURSOR RIGHT  (IX-3)
1145)   25BA 28 7E       		       JR      Z,RIGHT	;
1146)   25BC FE 20       		       CP      ' '             ;PRINTING CHARACTER	;PRINTING CHARACTER
1147)   25BE 30 7F       		       JR      NC,SAVECH	;
1148)   25C0 FE 0D       		       CP      CR              ;ENTER LINE	;ENTER LINE
1149)   25C2 C0          		       RET     NZ	;
1150)   25C3 7E          		OSEXIT: LD     A,(HL)	;
1151)   25C4 CD 5A 1E    		       CALL    MYOS_OSWRCH          ;WRITE REST OF LINE	;WRITE REST OF LINE
1152)   25C7 23          		       INC     HL	;
1153)   25C8 D6 0D       		       SUB     CR	;
1154)   25CA 20 F7       		       JR      NZ,OSEXIT	;
1155)   25CC D1          		       POP     DE              ;DITCH RETURN ADDRESS	;DITCH RETURN ADDRESS
1156)   25CD B9          		       CP      C	;
1157)   25CE C2 6E 20    		       JP      NZ,ABORT        ;ESCAPE	;ESCAPE
1158)   25D1 3E 0A       		       LD      A,LF	;
1159)   25D3 CD 5A 1E    		       CALL    MYOS_OSWRCH	;
1160)   25D6 ED 5B F4 FD 		       LD      DE,(ERRLIN)	;
1161)   25DA AF          		       XOR     A	;
1162)   25DB 6F          		       LD      L,A	;
1163)   25DC 22 12 FE    		       LD      (EDPTR),HL	;
1164)   25DF BA          		       CP      D	;
1165)   25E0 C0          		       RET     NZ	;
1166)   25E1 BB          		       CP      E	;
1167)   25E2 C0          		       RET     NZ	;
1168)   25E3 11 53 26    		       LD      DE,EDITST	;
1169)   25E6 06 04       		       LD      B,4	;
1170)   25E8 1A          		CMPARE: LD     A,(DE)	;
1171)   25E9 BE          		       CP      (HL)	;
1172)   25EA 3E 00       		       LD      A,0	;
1173)   25EC C0          		       RET     NZ	;
1174)   25ED 23          		       INC     HL	;
1175)   25EE 13          		       INC     DE	;
1176)   25EF 7E          		       LD      A,(HL)	;
1177)   25F0 FE 2E       		       CP      '.'	;
1178)   25F2 28 02       		       JR      Z,ABBR	;
1179)   25F4 10 F2       		       DJNZ    CMPARE	;
1180)   25F6 AF          		ABBR:  XOR     A	;
1181)   25F7 47          		       LD      B,A	;
1182)   25F8 4D          		       LD      C,L	;
1183)   25F9 6F          		       LD      L,A	;
1184)   25FA 11 57 26    		       LD      DE,LISTST	;
1185)   25FD EB          		       EX      DE,HL	;
1186)   25FE ED B0       		       LDIR	;
1187)   2600 21 00 FE    		       LD      HL,FLAGS	;
1188)   2603 CB DE       		       SET     3,(HL)	;
1189)   2605 C9          		       RET	;
1191)   2606 37          		BACK:  SCF                     ;DELETE LEFT	;DELETE LEFT
1192)   2607 2C          		LEFT:  INC     L               ;CURSOR LEFT	;CURSOR LEFT
1193)   2608 2D          		       DEC     L	;
1194)   2609 28 45       		       JR      Z,STOP	;
1195)   260B 3E 08       		       LD      A,BS	;
1196)   260D CD 5A 1E    		       CALL    MYOS_OSWRCH	;
1197)   2610 2D          		       DEC     L	;
1198)   2611 D0          		       RET     NC	;
1199)   2612 7E          		DELETE: LD     A,(HL)          ;DELETE RIGHT	;DELETE RIGHT
1200)   2613 FE 0D       		       CP      CR	;
1201)   2615 28 39       		       JR      Z,STOP	;
1202)   2617 54          		       LD      D,H	;
1203)   2618 5D          		       LD      E,L	;
1204)   2619 13          		DEL1:  INC     DE	;
1205)   261A 1A          		       LD      A,(DE)	;
1206)   261B 1B          		       DEC     DE	;
1207)   261C 12          		       LD      (DE),A	;
1208)   261D 13          		       INC     DE	;
1209)   261E FE 0D       		       CP      CR	;
1210)   2620 20 F7       		       JR      NZ,DEL1	;
1211)   2622 D1          		DEL2:  POP     DE              ;DITCH	;DITCH
1212)   2623 C3 4F 25    		       JP      UPDATE	;
1214)   2626 3E 0D       		INSERT: LD     A,CR            ;INSERT SPACE	;INSERT SPACE
1215)   2628 BE          		       CP      (HL)	;
1216)   2629 C8          		       RET     Z	;
1217)   262A 54          		       LD      D,H	;
1218)   262B 1E FE       		       LD      E,254	;
1219)   262D 13          		INS1:  INC     DE	;
1220)   262E 12          		       LD      (DE),A	;
1221)   262F 1B          		       DEC     DE	;
1222)   2630 7B          		       LD      A,E	;
1223)   2631 BD          		       CP      L	;
1224)   2632 1B          		       DEC     DE	;
1225)   2633 1A          		       LD      A,(DE)	;
1226)   2634 20 F7       		       JR      NZ,INS1	;
1227)   2636 36 20       		       LD      (HL),' '	;
1228)   2638 18 E8       		       JR      DEL2	;
1230)   263A 7E          		RIGHT: LD      A,(HL)          ;CURSOR RIGHT	;CURSOR RIGHT
1231)   263B FE 0D       		       CP      CR	;
1232)   263D 28 11       		       JR      Z,STOP	;
1233)   263F 56          		SAVECH: LD     D,(HL)          ;PRINTING CHARACTER	;PRINTING CHARACTER
1234)   2640 77          		       LD      (HL),A	;
1235)   2641 2C          		       INC     L	;
1236)   2642 28 09       		       JR      Z,WONTGO        ;LINE TOO LONG	;LINE TOO LONG
1237)   2644 CD 5A 1E    		       CALL    MYOS_OSWRCH	;
1238)   2647 3E 0D       		       LD      A,CR	;
1239)   2649 BA          		       CP      D	;
1240)   264A C0          		       RET     NZ	;
1241)   264B 77          		       LD      (HL),A	;
1242)   264C C9          		       RET	;
1244)   264D 2D          		WONTGO: DEC    L	;
1245)   264E 36 0D       		       LD      (HL),CR	;
1248)   2650 0E 00       		STOP:  LD      C,0             ;STOP REPEAT	;STOP REPEAT
1249)   2652 C9          		       RET	;
1252)   2653 45 44 49 54 		EDITST: DEFM   'EDIT'	;
1253)   2657 4C 49 53 54 		LISTST: DEFM   'LIST'	;
 18)   265B C9          		     RET 	;
 21)   265C F5          		DELAYMICROSEC: PUSH AF	;
 22)   265D D5          		 PUSH DE	;
 23)   265E 1B          		 DEC DE	;
 24)   265F D1          		 POP DE	;
 25)   2660 F1          		 POP AF	;
 26)   2661 C9          		 RET	;
 29)   2662 CD 5C 26    		S21: CALL DELAYMICROSEC	;
 30)   2665 10 FB       		 DJNZ S21 	;
 31)   2667 C9          		 RET	;
 35)   2668 F5          		DELAYMILISEC: PUSH AF	;
 36)   2669 D5          		 PUSH DE	;
 37)   266A 11 2C 01    		 LD DE,300 ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 38)   266D 1B          		DEL1: DEC DE	;
 39)   266E 7A          		 LD A,D           ;TEST FOR DE=00	;TEST FOR DE=00
 40)   266F B3          		 OR E	;
 41)   2670 20 FB       		 JR NZ,DEL1 	;
 42)   2672 D1          		 POP DE	;
 43)   2673 F1          		 POP AF	;
 44)   2674 C9          		 RET	;
 46)   2675 06 50       		DEL2:LD B,80	;
 48)   2677 CD 68 26    		S1: CALL DELAYMILISEC	;
 49)   267A 10 FB       		 DJNZ S1 	;
 50)   267C C9          		 RET	;
 55)   267D C5          		@DELAYSEC:PUSH BC 	;
 56)   267E 01 E8 03    		        LD BC,1000 	;
 57)   2681 C5          		MYDLAGN: PUSH BC	;
 58)   2682 CD 68 26    		        CALL DELAY  ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 59)   2685 C1          		       POP BC	;
 60)   2686 0B          		       DEC BC	;
 61)   2687 78          		        LD A,B	;
 62)   2688 B1          		        OR C	;
 63)   2689 20 F6       		        JR NZ,MYDLAGN	;
 64)   268B C1          		        POP BC	;
 65)   268C 10 EF       		        DJNZ DELAYSEC	;
 66)   268E C9          		        RET	;
 71)   268F F5          		OUTASC PUSH AF	;
 72)   2690 D5          		 PUSH DE	;
 73)   2691 CD C4 26    		 CALL B2Bcd	;
 74)   2694 D1          		 POP DE	;
 75)   2695 CD EA 26    		 CALL BCD2HA	;
 76)   2698 F1          		 POP AF	;
 77)   2699 C9          		 RET	;
 91)   269A B7          		BCD2BN: OR A	;
 92)   269B 47          		       LD B,A	;
 93)   269C E6 F0       		 AND $F0	;
 94)   269E 0F          		 RRCA	;
 95)   269F 4F          		 LD C,A	;
 96)   26A0 0F          		 RRCA	;
 97)   26A1 0F          		 RRCA	;
 98)   26A2 81          		 ADD A,C	;
 99)   26A3 4F          		 LD C,A	;
100)   26A4 78          		 LD A,B	;
101)   26A5 E6 0F       		 AND $0F	;
102)   26A7 81          		 ADD A,C	;
103)   26A8 C9          		 RET 	;
118)   26A9 26 FF       		BN2BCD: LD H,$FF	;
119)   26AB 24          		D100LP: INC H	;
120)   26AC D6 64       		 SUB 100	;
121)   26AE 30 FB       		 JR NC,D100LP	;
122)   26B0 C6 64       		 ADD A,100	;
123)   26B2 2E FF       		 LD L,$FF	;
124)   26B4 2C          		D10LP: INC L	;
125)   26B5 D6 0A       		       SUB 10	;
126)   26B7 30 FB       		       JR NC, D10LP	;
127)   26B9 C6 0A       		       ADD A,10	;
128)   26BB 4F          		       LD C,A	;
129)   26BC 7D          		       LD A,L	;
130)   26BD 07          		       RLCA	;
131)   26BE 07          		       RLCA        	;
132)   26BF 07          		 RLCA	;
133)   26C0 07          		       RLCA	;
134)   26C1 B1          		 OR C	;
135)   26C2 6F          		 LD L,A	;
136)   26C3 C9          		 RET	;
150)   26C4 01 00 10    		LD BC, 16*256+0 ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
151)   26C7 11 00 00    		LD DE, 0	;
153)   26CA 29          		ADD HL, HL	;
154)   26CB 7B          		LD A, E	;
155)   26CC 8F          		ADC A, A	;
156)   26CD 27          		DAA	;
157)   26CE 5F          		LD E, A	;
158)   26CF 7A          		LD A, D	;
159)   26D0 8F          		ADC A, A	;
160)   26D1 27          		DAA	;
161)   26D2 57          		LD D, A	;
162)   26D3 79          		LD A, C	;
163)   26D4 8F          		ADC A, A	;
164)   26D5 27          		DAA	;
165)   26D6 4F          		LD C, A	;
166)   26D7 10 F1       		DJNZ cvtLp	;
167)   26D9 EB          		EX DE,HL	;
168)   26DA C9          		RET	;
182)   26DB B7          		BCD2BN: OR A	;
183)   26DC 47          		       LD B,A	;
184)   26DD E6 F0       		 AND $F0	;
185)   26DF 0F          		 RRCA	;
186)   26E0 4F          		 LD C,A	;
187)   26E1 0F          		 RRCA	;
188)   26E2 0F          		 RRCA	;
189)   26E3 81          		 ADD A,C	;
190)   26E4 4F          		 LD C,A	;
191)   26E5 78          		 LD A,B	;
192)   26E6 E6 0F       		 AND $0F	;
193)   26E8 81          		 ADD A,C	;
194)   26E9 C9          		 RET	;
206)   26EA 79          		LD A, C	;
207)   26EB CD 17 27    		CALL cvtUN	;
208)   26EE 79          		LD A, C	;
209)   26EF CD 1B 27    		CALL cvtLN	;
210)   26F2 7C          		LD A, H	;
211)   26F3 CD 17 27    		CALL cvtUN	;
212)   26F6 7C          		LD A, H	;
213)   26F7 CD 1B 27    		CALL cvtLN	;
214)   26FA 7D          		LD A, L	;
215)   26FB CD 17 27    		CALL cvtUN	;
216)   26FE 7D          		LD A, L	;
217)   26FF 18 1A       		JR cvtLN	;
219)   2701 1F          		RRA ; move upper nibble into lower nibble	; move upper nibble into lower nibble
220)   2702 1F          		RRA	;
221)   2703 1F          		RRA	;
222)   2704 1F          		RRA	;
224)   2705 E6 0F       		AND 0Fh ; isolate lower nibble	; isolate lower nibble
225)   2707 C6 90       		ADD A, 90h ; old trick	; old trick
226)   2709 27          		DAA ; for converting	; for converting
227)   270A CE 40       		ADC A, 40h ; one nibble	; one nibble
228)   270C 27          		DAA ; to hex ASCII	; to hex ASCII
229)   270D 12          		LD (DE), A	;
230)   270E 13          		INC DE	;
231)   270F C9          		RET	;
243)   2710 7D          		LD A, L	;
244)   2711 CD 01 27    		CALL cvtUN	;
245)   2714 7D          		LD A, L	;
246)   2715 18 EE       		JR cvtLN	;
248)   2717 1F          		RRA ; move upper nibble into lower nibble	; move upper nibble into lower nibble
249)   2718 1F          		RRA	;
250)   2719 1F          		RRA	;
251)   271A 1F          		RRA	;
253)   271B E6 0F       		AND 0Fh ; isolate lower nibble	; isolate lower nibble
254)   271D C6 90       		ADD A, 90h ; old trick	; old trick
255)   271F 27          		DAA ; for converting	; for converting
256)   2720 CE 40       		ADC A, 40h ; one nibble	; one nibble
257)   2722 27          		DAA ; to hex ASCII	; to hex ASCII
258)   2723 12          		LD (DE), A	;
259)   2724 13          		INC DE	;
260)   2725 C9          		RET	;
277)   2726 F5          		 PUSH AF      ; 11 T-states	; 11 T-states
279)   2727 ED 44       		 NEG        ; 8 T-states	; 8 T-states
280)   2729 ED 44       		 NEG        ; 8 T-states	; 8 T-states
281)   272B ED 44       		 NEG        ; 8 T-states	; 8 T-states
282)   272D ED 44       		 NEG        ; 8 T-states	; 8 T-states
283)   272F 0B          		 DEC BC       ; 6 T-states	; 6 T-states
284)   2730 79          		 LD A,C       ; 9 T-states	; 9 T-states
285)   2731 B0          		 OR B       ; 4 T-states	; 4 T-states
286)   2732 C2 27 27    		 JP NZ,pau_lp     ; 10 T-states	; 10 T-states
287)   2735 F1          		 POP AF       ; 10 T-states	; 10 T-states
288)   2736 C9          		 RET        ; Pause complete, RETurn	; Pause complete, RETurn
  8)   2737 21 00 00    		@Mult16:ld hl,0	;
  9)   273A 78          		   ld a,b	;
 10)   273B 06 10       		   ld b,16	;
 12)   273D 29          		   add hl,hl	;
 13)   273E CB 21       		   sla c	;
 14)   2740 17          		   rla	;
 15)   2741 30 01       		   jr nc,Mult16_NoAdd	;
 16)   2743 19          		   add hl,de	;
 18)   2744 10 F7       		   djnz Mult16_Loop	;
 19)   2746 C9          		   ret	;
 25)   2747 D5          		@Mult32:PUSH DE	;
 26)   2748 79          		   ld a,c	;
 27)   2749 48          		   ld c,b	;
 28)   274A 21 00 00    		   ld hl,0	;
 29)   274D 06 10       		   ld b,16	;
 31)   274F 29          		   add hl,hl	;
 32)   2750 17          		   rla	;
 33)   2751 CB 11       		   rl c	;
 34)   2753 30 07       		   jr nc,Mult32_NoAdd	;
 35)   2755 19          		   add hl,de	;
 36)   2756 CE 00       		   adc a,0	;
 37)   2758 D2 5C 27    		   jp nc,Mult32_NoAdd	;
 38)   275B 0C          		   inc c	;
 40)   275C 10 F1       		   djnz Mult32_Loop	;
 41)   275E 41          		   ld b,c	;
 42)   275F 4F          		   ld c,a	;
 43)   2760 D1          		   POP DE	;
 44)   2761 C9          		   ret	;
 52)   2762 19          		       ADD     HL,DE   ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
 53)   2763 D9          		       EXX	;
 54)   2764 ED 5A       		       ADC     HL,DE   ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
 55)   2766 D9          		       EXX	;
 58)   2767 C9          		       RET	;
 68)   2768 11 40 00    		   ld de,$0040	;
 69)   276B 7D          		   ld a,l	;
 70)   276C 6C          		   ld l,h	;
 71)   276D 62          		   ld h,d	;
 72)   276E B7          		   or a	;
 73)   276F 06 08       		   ld b,8	;
 75)   2771 ED 52       		   sbc hl,de	;
 76)   2773 30 01       		   jr nc,Sqr16_Skip	;
 77)   2775 19          		   add hl,de	;
 79)   2776 3F          		   ccf	;
 80)   2777 CB 12       		   rl d	;
 81)   2779 87          		   add a,a	;
 82)   277A ED 6A       		   adc hl,hl	;
 83)   277C 87          		   add a,a	;
 84)   277D ED 6A       		   adc hl,hl	;
 85)   277F 10 F0       		   djnz Sqr16_Loop	;
 86)   2781 C9          		   ret        	;
  9)   FE00 00          		   @FLAGS   DEFS 1  ; Flags: B7=ESC PRESSED, B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 10)   FE01 00 00       		   @FCOLOR   DEFS 2 ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 11)   FE03 00 00       		   @BCOLOR   DEFS 2 ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 12)   FE05 00 00       		   @FGRCOL   DEFS 2 ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 13)   FE07 00 00       		   @BGRCOL   DEFS 2 ;BACKGROUND COLOR FOR GRAPHICS 	;BACKGROUND COLOR FOR GRAPHICS
 14)   FE09 00 00       		   @FCOLTM   DEFS 2 ;TEMP FOREGROUND COLOR 	;TEMP FOREGROUND COLOR
 15)   FE0B 00 00       		   @BCOLTM   DEFS 2 ;TEMP BACKGROUND COLOR 	;TEMP BACKGROUND COLOR
 16)   FE0D 00          		   @CURSORX  DEFS 1    ;0-79	;0-79
 17)   FE0E 00          		   @CURSORY  DEFS 1    ;0-47	;0-47
 18)   FE0F 00          		   @SCRLN    DEFS 1    ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 19)   FE10 00          		   @LASTCHAR DEFS 1; 	;
 20)   FE11 00          		   @CURSSTAT DEFS 1;  ;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN	;  ;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN
 21)   FE12 00 00       		   @EDPTR    DEFS 2	;
 22)   FE14 00          		   @OPTVAL   DEFS 1	;
 23)   FE15 00          		   @INKEY    DEFS 1	;
 24)   FE16 00          		   @VDUMODE  DEFS 1    ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 25)   FE17 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1B 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1F 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE23 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE27 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2B 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2F 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE33 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 26)   FE37 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3B 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3F 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE43 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE47 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4B 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4F 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE53 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 27)   FE57 00 00       		   @GR_LASTX3 DEFS 2	;
 28)   FE59 00 00       		   @GR_LASTY3 DEFS 2	;
 29)   FE5B 00 00       		   @GR_LASTX2 DEFS 2	;
 30)   FE5D 00 00       		   @GR_LASTY2 DEFS 2    	;
 31)   FE5F 00 00       		   @GR_LASTX DEFS 2	;
 32)   FE61 00 00       		   @GR_LASTY DEFS 2	;
 33)   FE63 00 00       		   @GR_PARAM1 DEFS 2	;
 34)   FE65 00 00       		   @GR_PARAM2 DEFS 2	;
 35)   FE67 00 00       		   @GR_PARAM3 DEFS 2	;
 36)   FE69 00 00       		   @GR_PARAM4 DEFS 2	;
 38)   FE6B 00 00       		   @FILL_X   DEFS 2	;
 39)   FE6D 00 00       		   @FILL_Y   DEFS 2 	;
 40)   FE6F 00 00       		   @FILL_L   DEFS 2	;
 41)   FE71 00 00       		   @FILL_X1  DEFS 2	;
 42)   FE73 00 00       		   @FILL_X2  DEFS 2	;
 43)   FE75 00 00       		   @FILL_DY  DEFS 2	;
 44)   FE77 00 00       		   @FILL_Q   DEFS 2  ;START OF QUEUE	;START OF QUEUE
 45)   FE79 00 00       		   @FILL_IDX DEFS 2  ;INDEX OF QUEUE	;INDEX OF QUEUE
 46)   FE7B 00 00       		   @FILL_PY  DEFS 2  ;FOR PUSH/POP	;FOR PUSH/POP
 47)   FE7D 00 00       		   @FILL_PXL DEFS 2	;
 48)   FE7F 00 00       		   @FILL_PXR DEFS 2	;
 49)   FE81 00 00       		   @FILL_PDY DEFS 2    	;
 50)   FE83 00 00       		   @FILL_OV  DEFS 2  ;OLD COLOR	;OLD COLOR
 51)   FE85 00 00       		   @FILL_OLDSP DEFS 2; OLD SP	; OLD SP
 52)   FE87 00          		   @LCD_DSPCTRL DEFS 1	;
 53)   FE88 00          		   @LCD_DSPMODE DEFS 1	;
 54)   FE89 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE8D 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE91 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE95 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE99 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 55)   FE9D 00          		   @FFSTAT   DEFS 1  ;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 56)   FE9E 00          		  @KEYCTR   DEFS 1  ;FOR USB KEYBOARD 	;FOR USB KEYBOARD
 57)   FE9F 00          		  @SERERR  DEFS 1;	;
 58)   FEA0 00          		  @SERER2  DEFS 1  ;AT RAM ADDRESS	;AT RAM ADDRESS
 59)   FEA1 00          		  @DISPCT   DEFS 1  ;	;
 60)   FEA2 00          		  @LCDCX    DEFS 1  ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 61)   FEA3 00          		  @LCDCY    DEFS 1  ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 62)   FEA4 00 00       		  @PRGEX   DEFS 2  ;2 BYTES	;2 BYTES
 63)   FEA6 00          		  @TVSTAT   DEFS 1  ;1 BYTE	;1 BYTE
 64)   FEA7 00 00 00 00 		  @TIMECTR  DEFS 4	;
 65)   FEAB 00          		  @INT2TE DEFB 0	;
 66)   FEAC 00 00 00 00 		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB0 00 00 00 00 		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB4 00 00 00 00 		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB8 00          		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 67)   FEB9 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEBD 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC1 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC5 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC9 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FECD 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED1 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED5 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED9 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEDD 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 68)   FEE1 00 00 00 00 		   @STRGCMD      DEFS 4	;
 69)   FEE5 00          		   @FID          DEFS 1	;
 70)   FEE6 00          		   @SPC        DEFS 1	;
