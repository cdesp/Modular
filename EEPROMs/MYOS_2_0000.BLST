  5)   0000 00          		 NOP	;
  6)   0001 C3 00 02    		 JP START	;
  7)   0004 C3 A2 02    		 JP MENU	;
  8)   0007 25          		 VERSION DEFB $25 ; AT ADDR=7 VER 2.4	; AT ADDR=7 VER 2.4
  9)   0008 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   000C 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0010 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0014 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0018 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   001C 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0020 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0024 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0028 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   002C 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0030 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
  9)   0034 00 00 00 00 		 DEFS $30 ;SKIP $30 BYTES	;SKIP $30 BYTES
 12)   0038 C3 7A 05    		 JP INTSER	;
 15)   003B 00 00 00 00 		 ALIGN 256	;
 15)   003F 00 00 00 00 		 ALIGN 256	;
 15)   0043 00 00 00 00 		 ALIGN 256	;
 15)   0047 00 00 00 00 		 ALIGN 256	;
 15)   004B 00 00 00 00 		 ALIGN 256	;
 15)   004F 00 00 00 00 		 ALIGN 256	;
 15)   0053 00 00 00 00 		 ALIGN 256	;
 15)   0057 00 00 00 00 		 ALIGN 256	;
 15)   005B 00 00 00 00 		 ALIGN 256	;
 15)   005F 00 00 00 00 		 ALIGN 256	;
 15)   0063 00 00 00 00 		 ALIGN 256	;
 15)   0067 00 00 00 00 		 ALIGN 256	;
 15)   006B 00 00 00 00 		 ALIGN 256	;
 15)   006F 00 00 00 00 		 ALIGN 256	;
 15)   0073 00 00 00 00 		 ALIGN 256	;
 15)   0077 00 00 00 00 		 ALIGN 256	;
 15)   007B 00 00 00 00 		 ALIGN 256	;
 15)   007F 00 00 00 00 		 ALIGN 256	;
 15)   0083 00 00 00 00 		 ALIGN 256	;
 15)   0087 00 00 00 00 		 ALIGN 256	;
 15)   008B 00 00 00 00 		 ALIGN 256	;
 15)   008F 00 00 00 00 		 ALIGN 256	;
 15)   0093 00 00 00 00 		 ALIGN 256	;
 15)   0097 00 00 00 00 		 ALIGN 256	;
 15)   009B 00 00 00 00 		 ALIGN 256	;
 15)   009F 00 00 00 00 		 ALIGN 256	;
 15)   00A3 00 00 00 00 		 ALIGN 256	;
 15)   00A7 00 00 00 00 		 ALIGN 256	;
 15)   00AB 00 00 00 00 		 ALIGN 256	;
 15)   00AF 00 00 00 00 		 ALIGN 256	;
 15)   00B3 00 00 00 00 		 ALIGN 256	;
 15)   00B7 00 00 00 00 		 ALIGN 256	;
 15)   00BB 00 00 00 00 		 ALIGN 256	;
 15)   00BF 00 00 00 00 		 ALIGN 256	;
 15)   00C3 00 00 00 00 		 ALIGN 256	;
 15)   00C7 00 00 00 00 		 ALIGN 256	;
 15)   00CB 00 00 00 00 		 ALIGN 256	;
 15)   00CF 00 00 00 00 		 ALIGN 256	;
 15)   00D3 00 00 00 00 		 ALIGN 256	;
 15)   00D7 00 00 00 00 		 ALIGN 256	;
 15)   00DB 00 00 00 00 		 ALIGN 256	;
 15)   00DF 00 00 00 00 		 ALIGN 256	;
 15)   00E3 00 00 00 00 		 ALIGN 256	;
 15)   00E7 00 00 00 00 		 ALIGN 256	;
 15)   00EB 00 00 00 00 		 ALIGN 256	;
 15)   00EF 00 00 00 00 		 ALIGN 256	;
 15)   00F3 00 00 00 00 		 ALIGN 256	;
 15)   00F7 00 00 00 00 		 ALIGN 256	;
 15)   00FB 00 00 00 00 		 ALIGN 256	;
 15)   00FF 00          		 ALIGN 256	;
 18)   0100 C3 57 1E    		     JP MYOS_CLRSCN	;
 19)   0103 C3 5A 1E    		     JP MYOS_PUTIME	;
 20)   0106 C3 6B 1E    		     JP MYOS_GETIME	;
 21)   0109 C3 7C 1E    		     JP MYOS_PUTCSR	;
 22)   010C C3 8E 1E    		     JP MYOS_GETCSR	;
 23)   010F C3 9D 1E    		     JP MYOS_OSRDCH	;
 24)   0112 C3 5A 20    		     JP MYOS_PROMPT	;
 25)   0115 C3 A8 1E    		     JP MYOS_OSWRCH	;
 26)   0118 C3 88 20    		     JP MYOS_OSKEY	;
 27)   011B C3 C4 20    		     JP MYOS_OSINIT	;
 28)   011E C3 66 25    		     JP MYOS_OSLINE	;
 29)   0121 C3 8E 21    		     JP MYOS_OSCLI	;
 30)   0124 C3 80 24    		     JP MYOS_OSBPUT 	;
 31)   0127 C3 8D 24    		     JP MYOS_OSBGET 	;
 32)   012A C3 B7 24    		     JP MYOS_OSSTAT 	;
 33)   012D C3 B2 24    		     JP MYOS_OSSHUT 	;
 34)   0130 C3 5C 24    		     JP MYOS_OSOPEN 	;
 35)   0133 C3 BE 24    		     JP MYOS_OSCALL 	;
 36)   0136 C3 C3 1D    		     JP MYOS_OSSAVE 	;
 37)   0139 C3 01 1E    		     JP MYOS_OSLOAD 	;
 38)   013C C3 A4 24    		     JP MYOS_GETPTR 	;
 39)   013F C3 A9 24    		     JP MYOS_PUTPTR 	;
 40)   0142 C3 AD 24    		     JP MYOS_GETEXT 	;
 41)   0145 C3 C1 24    		     JP MYOS_RESET 	;
 42)   0148 C3 B4 20    		     JP MYOS_TRAP	;
 43)   014B C3 B7 20    		     JP MYOS_LTRAP  	;
 44)   014E C3 C9 24    		     JP MYOS_CLG	;
 45)   0151 C3 E1 24    		     JP MYOS_COLOUR	;
 46)   0154 C3 EC 24    		     JP MYOS_DRAW	;
 47)   0157 C3 12 25    		     JP MYOS_ENVEL	;
 48)   015A C3 D5 24    		     JP MYOS_GCOL	;
 49)   015D C3 C2 24    		     JP MYOS_MODE	;
 50)   0160 C3 F6 24    		     JP MYOS_MOVE	;
 51)   0163 C3 00 25    		     JP MYOS_PLOT	;
 52)   0166 C3 12 25    		     JP MYOS_SOUND	;
 53)   0169 C3 12 25    		     JP MYOS_ADVAL	;
 54)   016C C3 0A 25    		     JP MYOS_POINT	;
 55)   016F C3 18 25    		     JP MYOS_GETIMS	;
 56)   0172 C3 12 25    		     JP MYOS_PUTIMS        	;
 58)   0175 00 00 00 00 		 ALIGN 256     	;
 58)   0179 00 00 00 00 		 ALIGN 256     	;
 58)   017D 00 00 00 00 		 ALIGN 256     	;
 58)   0181 00 00 00 00 		 ALIGN 256     	;
 58)   0185 00 00 00 00 		 ALIGN 256     	;
 58)   0189 00 00 00 00 		 ALIGN 256     	;
 58)   018D 00 00 00 00 		 ALIGN 256     	;
 58)   0191 00 00 00 00 		 ALIGN 256     	;
 58)   0195 00 00 00 00 		 ALIGN 256     	;
 58)   0199 00 00 00 00 		 ALIGN 256     	;
 58)   019D 00 00 00 00 		 ALIGN 256     	;
 58)   01A1 00 00 00 00 		 ALIGN 256     	;
 58)   01A5 00 00 00 00 		 ALIGN 256     	;
 58)   01A9 00 00 00 00 		 ALIGN 256     	;
 58)   01AD 00 00 00 00 		 ALIGN 256     	;
 58)   01B1 00 00 00 00 		 ALIGN 256     	;
 58)   01B5 00 00 00 00 		 ALIGN 256     	;
 58)   01B9 00 00 00 00 		 ALIGN 256     	;
 58)   01BD 00 00 00 00 		 ALIGN 256     	;
 58)   01C1 00 00 00 00 		 ALIGN 256     	;
 58)   01C5 00 00 00 00 		 ALIGN 256     	;
 58)   01C9 00 00 00 00 		 ALIGN 256     	;
 58)   01CD 00 00 00 00 		 ALIGN 256     	;
 58)   01D1 00 00 00 00 		 ALIGN 256     	;
 58)   01D5 00 00 00 00 		 ALIGN 256     	;
 58)   01D9 00 00 00 00 		 ALIGN 256     	;
 58)   01DD 00 00 00 00 		 ALIGN 256     	;
 58)   01E1 00 00 00 00 		 ALIGN 256     	;
 58)   01E5 00 00 00 00 		 ALIGN 256     	;
 58)   01E9 00 00 00 00 		 ALIGN 256     	;
 58)   01ED 00 00 00 00 		 ALIGN 256     	;
 58)   01F1 00 00 00 00 		 ALIGN 256     	;
 58)   01F5 00 00 00 00 		 ALIGN 256     	;
 58)   01F9 00 00 00 00 		 ALIGN 256     	;
 58)   01FD 00 00 00    		 ALIGN 256     	;
 35)   0200 F3          		@START: DI	;
 45)   0201 C3 45 02    		 JP BOOT ;SKIP TESTING	;SKIP TESTING
 50)   0204 06 05       		CN1: LD B,5	;
 51)   0206 0E 00       		AGN1: LD C,0	;
 52)   0208 3E 00       		 LD A,0	;
 53)   020A ED 79       		 OUT (C),A	;
 54)   020C 0E 00       		 LD C,0	;
 55)   020E 3E FF       		 LD A,255	;
 56)   0210 ED 79       		 OUT (C),A	;
 57)   0212 10 F2       		 DJNZ AGN1	;
 62)   0214 11 01 00    		 LD DE,1	;
 63)   0217 3E 00       		 LD A,0 ;WRITE 0	;WRITE 0
 64)   0219 4F          		 LD C,A	;
 65)   021A 21 00 80    		 LD HL,RAMAD 	;
 66)   021D 06 08       		 LD B,8	;
 67)   021F 77          		AGN2: LD (HL),A	;
 68)   0220 4E          		 LD C,(HL)	;
 69)   0221 B9          		 CP C	;
 70)   0222 C2 3C 02    		 JP NZ, ERR	;
 71)   0225 19          		 ADD HL,DE	;
 72)   0226 C6 20       		 ADD A,32 ;WRITE +32	;WRITE +32
 73)   0228 4F          		 LD C,A	;
 74)   0229 10 F4       		 DJNZ AGN2	;
 76)   022B 06 05       		 LD B,5	;
 77)   022D 0E 08       		AGN3: LD C,00001000B ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
 78)   022F 3E 40       		 LD A,64	;
 79)   0231 ED 79       		 OUT (C),A	;
 80)   0233 C6 80       		 ADD A,128	;
 81)   0235 ED 79       		 OUT (C),A 	;
 82)   0237 10 F4       		 DJNZ AGN3  ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
 83)   0239 C3 45 02    		 JP BOOT	;
 86)   023C 0E 38       		ERR: LD C,00111000B ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
 87)   023E 3E 40       		 LD A,64	;
 88)   0240 ED 79       		 OUT (C),A	;
 90)   0242 C3 3C 02    		 JP ERR ;DO AGAIN PORT 1	;DO AGAIN PORT 1
 97)   0245 F3          		@BOOT: DI	;
 98)   0246 ED 56       		  IM 1 	;
 99)   0248 31 F0 FF    		 LD SP,STACKP 	;
100)   024B CD 17 04    		 CALL EPROMOFF	;
101)   024E CD 83 06    		 CALL KEYBDATON 	;
104)   0251 3E 0C       		  LD A,12    ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
105)   0253 CD E5 05    		 CALL RS_INI  ;RS232 INITIALIZE	;RS232 INITIALIZE
106)   0256 21 43 05    		 LD HL,STR00	;
107)   0259 CD 0D 06    		 CALL RS_TXT	;
110)   025C CD D2 0B    		  CALL I2C_INIT     ;INITIALIZE I2C	;INITIALIZE I2C
111)   025F CD 5E 0D    		  CALL DS1307_ADJUST_TEST   ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
112)   0262 CD 33 0E    		  CALL LCD16_INIT   ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
113)   0265 21 47 04    		  LD HL,SVER	;
114)   0268 CD B4 0E    		  CALL LCD16_PRINT  ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
123)   026B CD 47 0F    		  CALL LCD_INIT	;
124)   026E 21 00 00    		  LD HL,COL_BLACK	;
125)   0271 22 03 83    		  LD (BCOLOR),HL	;
126)   0274 21 C0 FF    		  LD HL,COL_YELLOW	;
127)   0277 22 01 83    		  LD (FCOLOR),HL	;
128)   027A 21 30 05    		  LD HL,STRSCR 	;
129)   027D CD 0D 06    		  CALL RS_TXT	;
130)   0280 CD 55 17    		  CALL LCD_CLRSCR  	;
131)   0283 AF          		 XOR A	;
132)   0284 32 0F 83    		  LD (SCRLN),A   	;
133)   0287 3E 00       		  LD A,0	;
134)   0289 32 0D 83    		  LD (CURSORX),A	;
135)   028C 3E 00       		  LD A,0	;
136)   028E 32 0E 83    		  LD (CURSORY),A  	;
137)   0291 21 8C 04    		 LD HL,STR0    ;LCD INIT MSG ON 0,0	;LCD INIT MSG ON 0,0
138)   0294 CD 95 17    		 CALL LCD_MSG	;
139)   0297 3E 1E       		  LD A,30	;
140)   0299 32 0D 83    		  LD (CURSORX),A 	;
141)   029C 21 47 04    		  LD HL,SVER	;
142)   029F CD 95 17    		  CALL LCD_MSG  ;PRINT VERSION ON 30,0	;PRINT VERSION ON 30,0
150)   02A2 AF          		@MENU: XOR A	;
151)   02A3 32 0F 83    		  LD (SCRLN),A	;
152)   02A6 21 01 05    		 LD HL,STRMN	;
153)   02A9 CD 0D 06    		 CALL RS_TXT ;OUTPUT MENU COMMANDS AT RS232 	;OUTPUT MENU COMMANDS AT RS232
154)   02AC 21 59 05    		 LD HL,STR01	;
155)   02AF CD 0D 06    		 CALL RS_TXT ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
162)   02B2 21 57 04    		 LD HL,SMENU	;
163)   02B5 3E 05       		  LD A,5	;
164)   02B7 32 0D 83    		  LD (CURSORX),A	;
165)   02BA 3E 02       		  LD A,2	;
166)   02BC 32 0E 83    		  LD (CURSORY),A  	;
167)   02BF CD 95 17    		 CALL LCD_MSG	;
169)   02C2 CD 1D 03    		 CALL GET_CHAR ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
172)   02C5 FE 55       		 CP 'U' ;UPLOAD PROGRAM	;UPLOAD PROGRAM
173)   02C7 CC 4C 03    		 CALL Z, UPLOD	;
174)   02CA FE 58       		 CP 'X'	;
175)   02CC CA 3E 03    		 JP Z,EXEC	;
176)   02CF FE 54       		 CP 'T'	;
177)   02D1 CC C3 03    		 CALL Z,RSTST	;
178)   02D4 FE 53       		 CP 'S'	;
179)   02D6 CC F5 03    		 CALL Z,TXTSCR	;
180)   02D9 FE 49       		 CP 'I'	;
181)   02DB CC 83 03    		 CALL Z,UPLOD2	;
182)   02DE FE 59       		 CP 'Y'	;
183)   02E0 CC D9 03    		 CALL Z,RSTST2	;
184)   02E3 FE 48       		 CP 'H'	;
185)   02E5 CC E8 03    		 CALL Z,XMTST	;
186)   02E8 FE 4A       		 CP 'J'	;
187)   02EA CC A8 03    		 CALL Z,DNLOD	;
190)   02ED FE 43       		 CP 'C'	;
191)   02EF CC 55 17    		 CALL Z,LCD_CLRSCR	;
192)   02F2 FE 42       		 CP 'B'	;
193)   02F4 CA 00 40    		 JP Z,BBCBASIC	;
195)   02F7 C3 A2 02    		 JP MENU	;
202)   02FA CD 3C 25    		@GET_CHARNW: CALL CHKCURS	;
203)   02FD AF          		 XOR A 	;
205)   02FE CD 40 06    		 CALL RS_KEYRD ;CHAR IN RS232?	;CHAR IN RS232?
206)   0301 28 04       		 JR Z,CNW_TST2 	;
207)   0303 CD 17 06    		 CALL RS_RX ; GET THAT CHAR	; GET THAT CHAR
208)   0306 C9          		 RET	;
211)   0307 CD 75 07    		 CALL READCHAR ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
212)   030A FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
213)   030C C8          		 RET Z        ;EXIT IF Z TODO LOOP THIS FOR 10MS THEN EXIT	;EXIT IF Z TODO LOOP THIS FOR 10MS THEN EXIT
216)   030D F5          		 PUSH AF	;
217)   030E CD FE 05    		 CALL RS_TX	;
218)   0311 3E 0A       		 LD A,10	;
219)   0313 CD FE 05    		 CALL RS_TX	;
220)   0316 3E 0D       		 LD A,13	;
221)   0318 CD FE 05    		 CALL RS_TX	;
222)   031B F1          		 POP AF	;
223)   031C C9          		 RET	;
228)   031D AF          		@GET_CHAR: XOR A	;
231)   031E CD 40 06    		 CALL RS_KEYRD ;CHAR IN RS232?	;CHAR IN RS232?
232)   0321 28 04       		 JR Z,CW_TST2	;
233)   0323 CD 17 06    		 CALL RS_RX ; GET THAT CHAR	; GET THAT CHAR
234)   0326 C9          		 RET	;
241)   0327 CD 75 07    		 CALL READCHAR ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
242)   032A FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
243)   032C 28 EF       		 JR Z,GET_CHAR	;
246)   032E F5          		 PUSH AF	;
247)   032F CD FE 05    		 CALL RS_TX	;
248)   0332 3E 0A       		 LD A,10	;
249)   0334 CD FE 05    		 CALL RS_TX	;
250)   0337 3E 0D       		 LD A,13	;
251)   0339 CD FE 05    		 CALL RS_TX	;
252)   033C F1          		 POP AF	;
253)   033D C9          		 RET	;
264)   033E 3E 05       		 LD A,5	;
265)   0340 CD 8D 26    		 CALL SCPRN  	;
267)   0343 11 A4 83    		 LD DE,PRGEX	;
268)   0346 1A          		 LD A,(DE)	;
269)   0347 6F          		 LD L,A	;
270)   0348 13          		 INC DE	;
271)   0349 1A          		 LD A,(DE)	;
272)   034A 67          		 LD H,A	;
273)   034B E9          		 JP (HL)	;
280)   034C F3          		UPLOD: DI 	;
285)   034D CD 17 06    		 CALL RS_RX ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
286)   0350 6F          		 LD L,A	;
287)   0351 CD 17 06    		 CALL RS_RX	;
288)   0354 67          		 LD H,A	;
289)   0355 CD 17 06    		 CALL RS_RX ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
290)   0358 4F          		 LD C,A	;
291)   0359 CD 17 06    		 CALL RS_RX	;
292)   035C 47          		 LD B,A	;
294)   035D 11 A4 83    		 LD DE,PRGEX ;SAVE TO PRGEX THE PROG EXEC ADDR=HL	;SAVE TO PRGEX THE PROG EXEC ADDR=HL
295)   0360 7D          		 LD A,L	;
296)   0361 12          		 LD (DE),A	;
297)   0362 13          		 INC DE	;
298)   0363 7C          		 LD A,H	;
299)   0364 12          		 LD (DE),A	;
301)   0365 FE 80       		 CP $80	;
302)   0367 DC 21 04    		 CALL C,EPROMON ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
304)   036A E5          		NORWR: PUSH HL	;
305)   036B CD 17 06    		NXB: CALL RS_RX	;
306)   036E 77          		 LD (HL),A	;
307)   036F 23          		 INC HL	;
308)   0370 0B          		 DEC BC	;
309)   0371 78          		 LD A,B	;
310)   0372 B1          		 OR C	;
311)   0373 20 F6       		 JR NZ,NXB ;LOOP ALL BYTES 	;LOOP ALL BYTES
312)   0375 CD 17 04    		 CALL EPROMOFF	;
317)   0378 3E 05       		 LD A,5 	;
318)   037A CD 8D 26    		 CALL SCPRN  	;
319)   037D CD 9A 26    		 CALL DELAY	;
321)   0380 E1          		 POP HL	;
324)   0381 FB          		 EI	;
325)   0382 C9          		 RET	;
329)   0383 F3          		UPLOD2: DI	;
334)   0384 CD 17 06    		 CALL RS_RX ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
335)   0387 6F          		 LD L,A	;
336)   0388 CD 17 06    		 CALL RS_RX	;
337)   038B 67          		 LD H,A	;
338)   038C CD 17 06    		 CALL RS_RX ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
339)   038F 4F          		 LD C,A	;
340)   0390 CD 17 06    		 CALL RS_RX	;
341)   0393 47          		 LD B,A	;
343)   0394 11 A4 83    		 LD DE,PRGEX ;SAVE TO PRGEX THE PROG EXEC ADDR=HL	;SAVE TO PRGEX THE PROG EXEC ADDR=HL
344)   0397 7D          		 LD A,L	;
345)   0398 12          		 LD (DE),A	;
346)   0399 13          		 INC DE	;
347)   039A 7C          		 LD A,H	;
348)   039B 12          		 LD (DE),A	;
350)   039C CD 17 06    		NXB2: CALL RS_RX	;
351)   039F 77          		 LD (HL),A	;
352)   03A0 23          		 INC HL	;
353)   03A1 0B          		 DEC BC	;
354)   03A2 78          		 LD A,B	;
355)   03A3 B1          		 OR C	;
356)   03A4 20 F6       		 JR NZ,NXB2 ;LOOP ALL BYTES   	;LOOP ALL BYTES
358)   03A6 FB          		 EI	;
360)   03A7 C9          		 RET	;
371)   03A8 CD 17 06    		 CALL RS_RX ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
372)   03AB 6F          		 LD L,A	;
373)   03AC CD 17 06    		 CALL RS_RX	;
374)   03AF 67          		 LD H,A	;
375)   03B0 CD 17 06    		 CALL RS_RX ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
376)   03B3 4F          		 LD C,A	;
377)   03B4 CD 17 06    		 CALL RS_RX	;
378)   03B7 47          		 LD B,A	;
380)   03B8 7E          		NXB3: LD A,(HL)	;
381)   03B9 CD FE 05    		 CALL RS_TX ;SEND BYTE	;SEND BYTE
382)   03BC 23          		 INC HL	;
383)   03BD 0B          		 DEC BC	;
384)   03BE 78          		 LD A,B	;
385)   03BF B1          		 OR C	;
386)   03C0 20 F6       		 JR NZ,NXB3 ;LOOP ALL BYTES    	;LOOP ALL BYTES
387)   03C2 C9          		 RET	;
389)   03C3 00          		RSTST: NOP ;GET A KEY FROM RS232	;GET A KEY FROM RS232
390)   03C4 06 0A       		 LD B,10	;
391)   03C6 C5          		TEN: PUSH BC	;
392)   03C7 CD 17 06    		 CALL RS_RX	;
394)   03CA CD FE 05    		 CALL RS_TX ;SEND BACK THE CHAR	;SEND BACK THE CHAR
396)   03CD 3E 20       		 LD A,' '	;
398)   03CF 3E 52       		 LD A,'R'	;
401)   03D1 CD A7 26    		 CALL DEL2	;
403)   03D4 C1          		 POP BC	;
404)   03D5 10 EF       		 DJNZ TEN	;
406)   03D7 AF          		 XOR A	;
407)   03D8 C9          		 RET	;
409)   03D9 00          		RSTST2: NOP ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
410)   03DA 06 FF       		 LD B,255	;
411)   03DC C5          		TEN2: PUSH BC	;
412)   03DD CD 17 06    		 CALL RS_RX	;
414)   03E0 CD FE 05    		 CALL RS_TX ;SEND BACK THE CHAR 	;SEND BACK THE CHAR
416)   03E3 C1          		 POP BC	;
417)   03E4 10 F6       		 DJNZ TEN2	;
418)   03E6 AF          		 XOR A	;
419)   03E7 C9          		 RET	;
422)   03E8 00          		XMTST: NOP ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
423)   03E9 06 FF       		 LD B,255	;
424)   03EB C5          		TEN3: PUSH BC	;
425)   03EC 78          		 LD A,B	;
426)   03ED CD FE 05    		 CALL RS_TX ;SEND THE BYTE	;SEND THE BYTE
427)   03F0 C1          		 POP BC	;
428)   03F1 10 F8       		 DJNZ TEN3	;
429)   03F3 AF          		 XOR A	;
430)   03F4 C9          		 RET	;
432)   03F5 C9          		TXTSCR: RET	;
439)   03F6 04          		@FF_OFF: INC B  ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
440)   03F7 AF          		      XOR A	;
441)   03F8 37          		      SCF	;
442)   03F9 17          		SBAGN: RLA        ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
443)   03FA 10 FD       		      DJNZ SBAGN	;
444)   03FC 2F          		      CPL     ;INVERSE BITS ON A	;INVERSE BITS ON A
445)   03FD 47          		      LD B,A	;
446)   03FE 21 9D 83    		      LD HL,FFSTAT	;
447)   0401 7E          		      LD A,(HL)	;
448)   0402 A0          		      AND B        ;ZERO THE BIT	;ZERO THE BIT
449)   0403 77          		      LD (HL),A	;
450)   0404 D3 08       		      OUT (DEVFFS),A	;
451)   0406 C9          		      RET	;
454)   0407 04          		@FF_ON: INC B  ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
455)   0408 AF          		      XOR A	;
456)   0409 37          		      SCF	;
457)   040A 17          		SBAGN: RLA        ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
458)   040B 10 FD       		      DJNZ SBAGN	;
459)   040D 47          		      LD B,A	;
460)   040E 21 9D 83    		      LD HL,FFSTAT	;
461)   0411 7E          		      LD A,(HL)	;
462)   0412 B0          		      OR B        ;SET THE BIT	;SET THE BIT
463)   0413 77          		      LD (HL),A	;
464)   0414 D3 08       		      OUT (DEVFFS),A	;
465)   0416 C9          		      RET	;
467)   0417 E5          		@EPROMOFF: PUSH HL	;
468)   0418 C5          		      PUSH BC	;
469)   0419 06 00       		      LD B,0	;
470)   041B CD F6 03    		      CALL FF_OFF	;
471)   041E C1          		      POP BC	;
472)   041F E1          		      POP HL	;
473)   0420 C9          		      RET	;
475)   0421 E5          		@EPROMON: PUSH HL	;
476)   0422 C5          		         PUSH BC	;
477)   0423 06 00       		     LD B,0	;
478)   0425 CD 07 04    		     CALL FF_ON	;
479)   0428 C1          		     POP BC	;
480)   0429 E1          		     POP HL	;
481)   042A C9          		     RET	;
487)   042B F5          		SOUTAS: PUSH AF  ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
488)   042C 26 00       		 LD H,0	;
489)   042E 6F          		 LD L,A	;
490)   042F 11 AC 83    		 LD DE,MYNUM	;
491)   0432 CD C1 26    		 CALL OUTASC	;
493)   0435 3E 0A       		 LD A,10	;
494)   0437 12          		 LD (DE),A	;
495)   0438 13          		 INC DE	;
496)   0439 3E 0D       		 LD A,13	;
497)   043B 12          		 LD (DE),A	;
498)   043C 13          		 INC DE	;
499)   043D AF          		 XOR A	;
500)   043E 12          		 LD (DE),A	;
502)   043F 21 AC 83    		 LD HL,MYNUM	;
503)   0442 CD 0D 06    		 CALL RS_TXT	;
504)   0445 F1          		 POP AF	;
505)   0446 C9          		 RET	;
510)   0447 41 54 4C 41 		SVER DEFM 'ATLAS OS V 2.04'	;
510)   044B 53 20 4F 53 		SVER DEFM 'ATLAS OS V 2.04'	;
510)   044F 20 56 20 32 		SVER DEFM 'ATLAS OS V 2.04'	;
510)   0453 2E 30 34    		SVER DEFM 'ATLAS OS V 2.04'	;
511)   0456 00          		 DB 0	;
513)   0457 55 49 3A 55 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   045B 50 20 4A 3A 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   045F 44 4E 20 58 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0463 3A 52 55 4E 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0467 20 54 59 48 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   046B 3A 52 53 20 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   046F 53 3A 44 49 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0473 53 50 20 43 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0477 3A 43 4C 53 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   047B 20 4C 3A 4C 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   047F 43 44 53 54 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0483 20 42 3A 42 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
513)   0487 41 53 49 43 		SMENU DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS L:LCDST B:BASIC"	;
514)   048B 00          		 DB 0	;
516)   048C 4C 43 44 20 		STR0 DEFM "LCD INITIALIZED"	;
516)   0490 49 4E 49 54 		STR0 DEFM "LCD INITIALIZED"	;
516)   0494 49 41 4C 49 		STR0 DEFM "LCD INITIALIZED"	;
516)   0498 5A 45 44    		STR0 DEFM "LCD INITIALIZED"	;
517)   049B 00          		 DB 0	;
519)   049C 52 53 32 33 		STR1 DEFM "RS232 INIT"	;
519)   04A0 32 20 49 4E 		STR1 DEFM "RS232 INIT"	;
519)   04A4 49 54       		STR1 DEFM "RS232 INIT"	;
520)   04A6 00          		 DB 0	;
522)   04A7 50 52 4F 47 		STR2 DEFM "PROGRAM HALTED"	;
522)   04AB 52 41 4D 20 		STR2 DEFM "PROGRAM HALTED"	;
522)   04AF 48 41 4C 54 		STR2 DEFM "PROGRAM HALTED"	;
522)   04B3 45 44       		STR2 DEFM "PROGRAM HALTED"	;
523)   04B5 00          		 DB 0	;
525)   04B6 57 41 49 54 		STR02 DEFM "WAITING..."	;
525)   04BA 49 4E 47 2E 		STR02 DEFM "WAITING..."	;
525)   04BE 2E 2E       		STR02 DEFM "WAITING..."	;
526)   04C0 00          		 DB 0	;
528)   04C1 50 52 47 20 		DATTR DEFM "PRG TRANSFERED"	;
528)   04C5 54 52 41 4E 		DATTR DEFM "PRG TRANSFERED"	;
528)   04C9 53 46 45 52 		DATTR DEFM "PRG TRANSFERED"	;
528)   04CD 45 44       		DATTR DEFM "PRG TRANSFERED"	;
529)   04CF 00          		 DB 0	;
531)   04D0 52 45 43 45 		DATST DEFM "RECEIVING..."	;
531)   04D4 49 56 49 4E 		DATST DEFM "RECEIVING..."	;
531)   04D8 47 2E 2E 2E 		DATST DEFM "RECEIVING..."	;
532)   04DC 00          		 DB 0 	;
534)   04DD 50 52 47 20 		SPRGX DEFM "PRG EXECUTE"	;
534)   04E1 45 58 45 43 		SPRGX DEFM "PRG EXECUTE"	;
534)   04E5 55 54 45    		SPRGX DEFM "PRG EXECUTE"	;
535)   04E8 00          		 DB 0	;
537)   04E9 49 4D 41 47 		STIMG DEFM "IMAGE COPY"	;
537)   04ED 45 20 43 4F 		STIMG DEFM "IMAGE COPY"	;
537)   04F1 50 59       		STIMG DEFM "IMAGE COPY"	;
538)   04F3 00          		 DB 0	;
540)   04F4 53 43 52 45 		TXTMES DEFM "SCREEN READY"	;
540)   04F8 45 4E 20 52 		TXTMES DEFM "SCREEN READY"	;
540)   04FC 45 41 44 59 		TXTMES DEFM "SCREEN READY"	;
541)   0500 00          		 DB 0	;
543)   0501 55 49 3A 55 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0505 50 20 4A 3A 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0509 44 4E 20 58 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   050D 3A 52 55 4E 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0511 20 54 59 48 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0515 3A 52 53 20 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0519 53 3A 44 49 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   051D 53 50 20 43 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0521 3A 43 4C 53 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0525 20 42 3A 42 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
543)   0529 41 53 49 43 		STRMN DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
544)   052D 0A 0D 00    		 DB 10,13,0	;
546)   0530 43 4C 45 41 		STRSCR DEFM "CLEARING SCREEN."	;
546)   0534 52 49 4E 47 		STRSCR DEFM "CLEARING SCREEN."	;
546)   0538 20 53 43 52 		STRSCR DEFM "CLEARING SCREEN."	;
546)   053C 45 45 4E 2E 		STRSCR DEFM "CLEARING SCREEN."	;
547)   0540 0A 0D 00    		 DB 10,13,0	;
549)   0543 0A 0D       		STR00 DB 10,13	;
550)   0545 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
550)   0549 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
550)   054D 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
550)   0551 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
550)   0555 44          		 DEFM "RS232 INITIALIZED"	;
551)   0556 0A 0D 00    		 DB 10,13,0	;
553)   0559 0A 0D       		STR01 DB 10,13	;
554)   055B 57 41 49 54 		 DEFM "WAITING..."	;
554)   055F 49 4E 47 2E 		 DEFM "WAITING..."	;
554)   0563 2E 2E       		 DEFM "WAITING..."	;
555)   0565 0A 0D 00    		 DB 10,13,0	;
556)   0568 00          		 DB 0	;
558)   0569 0A 0D       		STR06 DB 10,13	;
559)   056B 4B 45 59 20 		 DEFM "KEY PRESSED"	;
559)   056F 50 52 45 53 		 DEFM "KEY PRESSED"	;
559)   0573 53 45 44    		 DEFM "KEY PRESSED"	;
560)   0576 0A 0D 00    		 DB 10,13,0	;
561)   0579 00          		 DB 0	;
  3)   057A F3          		@INTSER:  DI	;
  4)   057B E5          		          PUSH HL	;
  5)   057C F5          		          PUSH AF	;
  6)   057D C5          		          PUSH BC	;
  7)   057E DD E5       		          PUSH IX	;
 11)   0580 DB 18       		          IN A,(DEVINP)	;
 12)   0582 2F          		          CPL	;
 13)   0583 E6 07       		          AND 0X07 ;BITS 0-2  	;BITS 0-2
 14)   0585 3D          		          DEC A  ;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE	;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE
 15)   0586 DD 21 A3 05 		          LD IX,MYINTADDR                    	;
 16)   058A 06 00       		          LD B,0	;
 17)   058C 4F          		          LD C,A	;
 18)   058D CB 21       		          SLA C ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 19)   058F DD 09       		          ADD IX,BC	;
 20)   0591 DD 6E 00    		          LD L,(IX)	;
 21)   0594 DD 66 01    		          LD H,(IX+1)	;
 22)   0597 01 9C 05    		          LD BC,IS_EX	;
 23)   059A C5          		          PUSH BC ;RETURN ADDRESS	;RETURN ADDRESS
 24)   059B E9          		          JP (HL) ;JP TO HL	;JP TO HL
 26)   059C DD E1       		IS_EX:    POP IX	;
 27)   059E C1          		   POP BC	;
 28)   059F F1          		   POP AF	;
 29)   05A0 E1          		          POP HL	;
 30)   05A1 FB          		          EI	;
 31)   05A2 C9          		          RET 	;
 33)   05A3 BF 05       		MYINTADDR DEFW INT_TIMER	;
 34)   05A5 B3 05       		   DEFW SAVETE	;
 35)   05A7 BC 05       		   DEFW DOCLRINT	;
 36)   05A9 BC 05       		   DEFW DOCLRINT	;
 37)   05AB BC 05       		   DEFW DOCLRINT	;
 38)   05AD BC 05       		   DEFW DOCLRINT	;
 39)   05AF BC 05       		   DEFW DOCLRINT	;
 40)   05B1 BC 05       		   DEFW DOCLRINT                    	;
 42)   05B3 D3 40       		SAVETE   OUT (DEVINT),A  ;CLEAR THE INTERRUPT 	;CLEAR THE INTERRUPT
 43)   05B5 21 AB 83    		   LD HL,INT2TE    ;TEARING EFFECT	;TEARING EFFECT
 44)   05B8 3E 01       		   LD A,1	;
 45)   05BA 77          		   LD (HL),A;	;
 46)   05BB C9          		   RET	;
 49)   05BC D3 40       		DOCLRINT  OUT (DEVINT),A	;
 50)   05BE C9          		   RET	;
 52)   05BF D3 40       		INT_TIMER: OUT (DEVINT),A	;
 53)   05C1 21 A7 83    		          LD HL,TIMECTR	;
 54)   05C4 34          		          INC (HL)  	;
 55)   05C5 7E          		          LD A,(HL)	;
 56)   05C6 FE 00       		          CP 0	;
 57)   05C8 C0          		          RET NZ	;
 58)   05C9 23          		          INC HL	;
 59)   05CA 34          		          INC (HL)  	;
 60)   05CB 7E          		          LD A,(HL)	;
 61)   05CC FE 00       		          CP 0	;
 62)   05CE C0          		          RET NZ	;
 63)   05CF 23          		          INC HL	;
 64)   05D0 34          		          INC (HL)  	;
 65)   05D1 7E          		          LD A,(HL)	;
 66)   05D2 FE 00       		          CP 0	;
 67)   05D4 C0          		          RET NZ	;
 68)   05D5 23          		          INC HL	;
 69)   05D6 34          		          INC (HL)  	;
 70)   05D7 7E          		          LD A,(HL)	;
 71)   05D8 FE 00       		          CP 0	;
 72)   05DA C0          		          RET NZ  	;
 74)   05DB 21 00 00    		          LD HL,0	;
 75)   05DE 22 A7 83    		          LD (TIMECTR),HL	;
 76)   05E1 22 A9 83    		          LD (TIMECTR+2),HL	;
 77)   05E4 C9          		          RET	;
 15)   05E5 	            		 RBR EQU DEVSER+0 ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   05E5 	            		 THR EQU DEVSER+0 ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   05E5 	            		 IER EQU DEVSER+1 ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   05E5 	            		 IIR EQU DEVSER+2 ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   05E5 	            		 FCR EQU DEVSER+2 ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   05E5 	            		 LCR EQU DEVSER+3 ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   05E5 	            		 MCR EQU DEVSER+4 ;MODEM CONTROL REGISTER 	;MODEM CONTROL REGISTER
 44)   05E5 	            		 LSR EQU DEVSER+5 ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   05E5 	            		 MSR EQU DEVSER+6 ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   05E5 	            		 SCR EQU DEVSER+7 ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   05E5 	            		 DLL EQU DEVSER+0 ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   05E5 	            		 DLM EQU DEVSER+1 ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   05E5 F5          		RS_INI: PUSH AF	;
 63)   05E6 3E 80       		 LD     A,$80           ; Mask to set DLAB on	; Mask to set DLAB on
 64)   05E8 D3 23       		 OUT    (LCR),A         ; Send to LINe Control Register 	; Send to LINe Control Register
 73)   05EA F1          		  POP AF	;
 74)   05EB D3 20       		 OUT    (DLL),A         ; Set LSB of divisor	; Set LSB of divisor
 75)   05ED 3E 00       		 LD     A,00            ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   05EF D3 21       		 OUT    (DLM),A         ; Send to the MSB register	; Send to the MSB register
 77)   05F1 3E 03       		 LD     A,$03           ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   05F3 D3 23       		 OUT    (LCR),A         ; Write new value to LCR	; Write new value to LCR
 80)   05F5 3E 00       		 LD A, 0       	;
 81)   05F7 D3 22       		 OUT  (FCR),A      ;//was commented	;//was commented
 82)   05F9 3E 00       		 LD     A,$00           ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   05FB D3 21       		 OUT    (IER),A         ; Send to INterrupt Enable Register 	; Send to INterrupt Enable Register
 84)   05FD C9          		 RET	;
 87)   05FE CD 04 06    		RS_TX: CALL   RSTXRD	;
 88)   0601 D3 20       		       OUT     (THR),A	;
 90)   0603 C9          		       RET	;
 94)   0604 F5          		RSTXRD: PUSH   AF	;
 95)   0605 DB 25       		RSTXLP: IN     A,(LSR)         ; fetch the control register	; fetch the control register
 96)   0607 CB 6F       		       BIT     5,A             ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   0609 28 FA       		       JR      Z,RSTXLP	;
 98)   060B F1          		       POP     AF	;
 99)   060C C9          		       RET  	;
102)   060D 7E          		RS_TXT: LD A,(HL)	;
103)   060E 23          		 INC HL 	;
104)   060F FE 00       		 CP 0	;
105)   0611 C8          		 RET Z	;
106)   0612 CD FE 05    		       CALL RS_TX	;
107)   0615 18 F6       		 JR RS_TXT	;
114)   0617 F3          		RS_RX: DI	;
115)   0618 3E 01       		       LD A,1     ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   061A D3 24       		       OUT (MCR),A	;
117)   061C CD 35 06    		   CALL    RSRXRD              	;
118)   061F AF          		RS_GTCH: XOR A     ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   0620 D3 24       		       OUT (MCR),A        	;
121)   0622 DB 20       		      IN A,(RBR)	;
122)   0624 FB          		      EI	;
123)   0625 C9          		       RET	;
125)   0626 3E 01       		RS_RXNW:LD A,1    ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   0628 D3 24       		       OUT (MCR),A	;
127)   062A DB 25       		   IN      A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
128)   062C CB 47       		       BIT     0,A                    	;
129)   062E 28 03       		       JR Z,RS_NOCHAR	;
130)   0630 F3          		       DI	;
131)   0631 18 EC       		       JR RS_GTCH        	;
132)   0633 AF          		RS_NOCHAR: XOR A ;RETURN ZERO	;RETURN ZERO
133)   0634 C9          		       RET	;
140)   0635 F3          		RSRXRD: DI	;
141)   0636 F5          		       PUSH    AF	;
142)   0637 DB 25       		RSRXLP: IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
143)   0639 CB 47       		       BIT     0,A             ; bit will be set if UART has data	; bit will be set if UART has data
144)   063B 28 FA       		       JR      Z,RSRXLP	;
145)   063D F1          		       POP     AF	;
146)   063E FB          		       EI	;
147)   063F C9          		       RET  	;
151)   0640 DB 25       		RS_KEYRD:IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
152)   0642 CB 47       		        BIT     0,A             ; bit will be set if UART has data        	; bit will be set if UART has data
153)   0644 C9          		        RET 	;
155)   0645 F5          		SHLCD: PUSH AF	;
157)   0646 F1          		 POP AF	;
159)   0647 C9          		 RET	;
163)   0648 F5          		CHKERR: PUSH AF	;
164)   0649 E5          		 PUSH HL	;
165)   064A C5          		 PUSH BC	;
166)   064B DB 25       		 IN A,(LSR)  ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
167)   064D CB 67       		 BIT 4,A	;
168)   064F 28 04       		 JR Z,LBLPE	;
169)   0651 3E 42       		 LD A,'B' ;$20 ;BREAK	;$20 ;BREAK
170)   0653 18 1A       		 JR EXIT	;
171)   0655 CB 57       		LBLPE: BIT 2,A 	;
172)   0657 28 04       		 JR Z,LBLFE	;
173)   0659 3E 50       		 LD A,'P' ;$40 ;PARITY	;$40 ;PARITY
174)   065B 18 12       		 JR EXIT	;
175)   065D CB 5F       		LBLFE: BIT 3,A	;
176)   065F 28 04       		 JR Z,LBLOE	;
177)   0661 3E 46       		 LD A,'F' ;$60 ;FRAME 	;$60 ;FRAME
178)   0663 18 0A       		 JR EXIT	;
179)   0665 CB 4F       		LBLOE: BIT 1,A	;
180)   0667 28 04       		 JR Z,LBLNE	;
181)   0669 3E 4F       		 LD A,'O' ;$80  ;OVERRUN	;$80  ;OVERRUN
182)   066B 18 02       		 JR EXIT	;
183)   066D 3E 4E       		LBLNE: LD A,'N' ;NO ERROR	;NO ERROR
184)   066F 21 9F 83    		EXIT: LD HL,SERERR	;
185)   0672 77          		 LD (HL),A	;
187)   0673 C1          		 POP BC	;
188)   0674 E1          		 POP HL	;
189)   0675 F1          		 POP AF	;
190)   0676 C9          		 RET	;
 14)   0677 	            		DEVKBI EQU DEVINP; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP	; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP
 17)   0677 06 01       		@KEYBCLKON: LD B,UKB_OUT_CLK	;
 18)   0679 CD F6 03    		      CALL FF_OFF	;
 19)   067C C9          		      RET	;
 21)   067D 06 01       		@KEYBCLKOFF: LD B,UKB_OUT_CLK	;
 22)   067F CD 07 04    		     CALL FF_ON	;
 23)   0682 C9          		     RET	;
 25)   0683 06 02       		@KEYBDATON: LD B,UKB_OUT_DAT	;
 26)   0685 CD F6 03    		      CALL FF_OFF	;
 27)   0688 C9          		      RET	;
 29)   0689 06 02       		@KEYBDATOFF: LD B,UKB_OUT_DAT	;
 30)   068B CD 07 04    		     CALL FF_ON	;
 31)   068E C9          		     RET	;
 33)   068F CD 77 06    		PS2ISK:CALL KEYBCLKON ;KEYBOARD ENABLED	;KEYBOARD ENABLED
 34)   0692 06 1E       		   LD B,30 ;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)	;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)
 35)   0694 DB 18       		CHAG: IN A,(DEVKBI)	;
 36)   0696 57          		   LD D,A	;
 37)   0697 CB 77       		   BIT UKB_IN_CLK,A ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 38)   0699 28 08       		   JR Z,KEYOK	;
 39)   069B 10 F7       		   DJNZ CHAG	;
 41)   069D 3E 01       		PS2NTP: LD A,1 ;SET A TO 1 MEANS NO KEY AVAILABLE  	;SET A TO 1 MEANS NO KEY AVAILABLE
 42)   069F CD 7D 06    		   CALL KEYBCLKOFF	;
 43)   06A2 C9          		   RET	;
 44)   06A3 AF          		KEYOK: XOR A ;SET A TO 0 MEANS WE HAVE A KEY	;SET A TO 0 MEANS WE HAVE A KEY
 45)   06A4 C9          		   RET	;
 49)   06A5 06 32       		   LD B,50	;
 50)   06A7 B7          		   OR A   ;CLEAR CARRY	;CLEAR CARRY
 51)   06A8 DB 18       		WH1:IN A,(DEVKBI)	;
 52)   06AA 57          		   LD D,A    	;
 53)   06AB CB 77       		   BIT UKB_IN_CLK,A ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 54)   06AD C0          		   RET NZ	;
 55)   06AE 10 F8       		   DJNZ WH1	;
 56)   06B0 37          		   SCF	;
 57)   06B1 C9          		   RET	;
 60)   06B2 06 32       		  LD B,50	;
 61)   06B4 B7          		  OR A    ;CLEAR CARRY	;CLEAR CARRY
 62)   06B5 DB 18       		WL1:IN A,(DEVKBI)	;
 63)   06B7 57          		   LD D,A    	;
 64)   06B8 CB 77       		   BIT UKB_IN_CLK,A ;CHECK BIT 6=CLOCK    	;CHECK BIT 6=CLOCK
 65)   06BA C8          		   RET Z	;
 66)   06BB 10 F8       		   DJNZ WL1	;
 67)   06BD 37          		   SCF	;
 68)   06BE C9          		   RET	;
 70)   06BF CD B2 06    		WAITFORLOW:CALL WAITFORLOW1	;
 71)   06C2 D8          		          RET C	;
 72)   06C3 DB 18       		           IN A,(DEVKBI);SOME MORE TIMES TO BE SURE	;SOME MORE TIMES TO BE SURE
 73)   06C5 DB 18       		           IN A,(DEVKBI)	;
 74)   06C7 57          		           LD D,A	;
 75)   06C8 C9          		           RET	;
 78)   06C9 F3          		@NEWBYTE:DI	;
 79)   06CA 7A          		   LD A,D ;BIT 7 HAS THE DATA	;BIT 7 HAS THE DATA
 80)   06CB CB 7F       		   BIT UKB_IN_DAT,A	;
 81)   06CD 20 2D       		   JR NZ,ERROR0 ;ALWAYS START WITH 0	;ALWAYS START WITH 0
 82)   06CF 06 08       		   LD B,8	;
 83)   06D1 48          		NXTBIT: LD C,B ;SAVE B	;SAVE B
 84)   06D2 CD A5 06    		   CALL WAITFORHIGH 	;
 85)   06D5 D8          		   RET C	;
 86)   06D6 CD BF 06    		   CALL WAITFORLOW	;
 87)   06D9 D8          		   RET C	;
 88)   06DA CB 27       		   SLA A ;BIT 7=DATA IS ON C FLAG	;BIT 7=DATA IS ON C FLAG
 89)   06DC CB 1B       		   RR E ;CARRY GOES TO BIT 7 OF E  	;CARRY GOES TO BIT 7 OF E
 90)   06DE 41          		   LD B,C  ;RESTORE C	;RESTORE C
 91)   06DF 10 F0       		   DJNZ NXTBIT	;
 92)   06E1 CD A5 06    		   CALL WAITFORHIGH 	;
 93)   06E4 D8          		   RET C	;
 94)   06E5 CD BF 06    		   CALL WAITFORLOW     	;
 95)   06E8 D8          		   RET C	;
 97)   06E9 CD A5 06    		   CALL WAITFORHIGH 	;
 98)   06EC D8          		   RET C	;
 99)   06ED CD BF 06    		   CALL WAITFORLOW 	;
100)   06F0 D8          		   RET C	;
101)   06F1 CB 7F       		   BIT UKB_IN_DAT,A	;
102)   06F3 28 10       		   JR Z,ERROR1 ;ALWAYS ENDS WITH 1  	;ALWAYS ENDS WITH 1
103)   06F5 CD A5 06    		   CALL WAITFORHIGH    ;WAIT FOR END OF TRANSMITION	;WAIT FOR END OF TRANSMITION
104)   06F8 D8          		   RET C	;
106)   06F9 7B          		   LD A,E	;
107)   06FA FB          		   EI	;
108)   06FB C9          		   RET	;
109)   06FC 21 11 07    		ERROR0: LD HL,MSER4	;
110)   06FF CD 0D 06    		   CALL RS_TXT	;
111)   0702 37          		   SCF ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
112)   0703 FB          		   EI	;
113)   0704 C9          		   RET	;
114)   0705 D5          		ERROR1:PUSH DE	;
115)   0706 21 34 07    		   LD HL,MSER5	;
116)   0709 CD 0D 06    		   CALL RS_TXT	;
117)   070C 37          		   SCF ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
118)   070D D1          		   POP DE	;
119)   070E 7B          		   LD A,E ;MAYBE IGNORE THIS	;MAYBE IGNORE THIS
120)   070F FB          		   EI	;
121)   0710 C9          		   RET	;
122)   0711 45 52 52 4F 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0715 52 20 53 54 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0719 41 52 54 20 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   071D 42 49 54 2E 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0721 4E 4F 54 2E 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0725 41 53 20 45 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   0729 58 50 45 43 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
122)   072D 54 45 44 2E 		MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."	;
123)   0731 0A 0D 00    		   DB 10,13,0	;
124)   0734 45 52 52 4F 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0738 52 20 53 54 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   073C 4F 50 20 42 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0740 49 54 2E 4E 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0744 4F 54 2E 41 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0748 53 20 45 58 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   074C 50 45 43 54 		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
124)   0750 45 44 2E    		MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."	;
125)   0753 0A 0D 00    		   DB 10,13,0	;
127)   0756 01 0A 00    		PS2KEY: LD BC,10       	;
128)   0759 0B          		PS2AGN DEC BC	;
129)   075A 78          		       LD A,B	;
130)   075B B1          		       OR C	;
131)   075C 28 0F       		       JR Z,PS2TIMEOUT	;
132)   075E C5          		       PUSH BC	;
133)   075F CD 8F 06    		       CALL PS2ISK	;
134)   0762 B7          		       OR A	;
135)   0763 C1          		       POP BC	;
136)   0764 20 F3       		       JR NZ, PS2AGN ;NO KEY YET	;NO KEY YET
138)   0766 CD C9 06    		       CALL NEWBYTE 	;
139)   0769 38 02       		       JR C,PS2TIMEOUT ;ERROR SO INVALIDATE A	;ERROR SO INVALIDATE A
140)   076B 18 02       		       JR PS2EX	;
141)   076D AF          		PS2TIMEOUT:XOR A ;0 CODE IS INVALID	;0 CODE IS INVALID
142)   076E FB          		          EI	;
143)   076F F5          		PS2EX  PUSH AF       	;
144)   0770 CD 7D 06    		       CALL KEYBCLKOFF	;
145)   0773 F1          		       POP AF	;
146)   0774 C9          		       RET	;
149)   0775 CD 7C 07    		READCHAR:CALL GTKEY	;
150)   0778 CD 3B 08    		      CALL PS2LOK	;
151)   077B C9          		      RET	;
154)   077C CD 56 07    		@GTKEY: CALL PS2KEY ;GET A KEY FROM PS2	;GET A KEY FROM PS2
155)   077F FE E1       		 CP $E1 ;BREAK KEY	;BREAK KEY
156)   0781 CC A8 07    		 CALL Z,GTBRK	;
157)   0784 FE F0       		 CP $F0 ;240 KEY RELEASED	;240 KEY RELEASED
158)   0786 CC EC 07    		 CALL Z,GTREL	;
159)   0789 FE E0       		 CP $E0 ;224 EXTENDED KEYS	;224 EXTENDED KEYS
160)   078B CC B2 07    		 CALL Z,GTEXT	;
163)   078E FE 12       		 CP 18 ;LEFT SHIFT	;LEFT SHIFT
164)   0790 CC 17 08    		 CALL Z,SHFTOG	;
165)   0793 FE 59       		 CP 89 ;RIGHT SHIFT	;RIGHT SHIFT
166)   0795 CC 17 08    		 CALL Z,SHFTOG	;
167)   0798 FE 14       		 CP 20 ;RIGHT CONTROL	;RIGHT CONTROL
168)   079A CC 20 08    		 CALL Z,CTRTOG 	;
169)   079D FE 11       		 CP 17 ;LEFT ALT	;LEFT ALT
170)   079F CC 29 08    		 CALL Z,ALTTOG	;
171)   07A2 FE 58       		 CP $58 ;CAPS LOCK	;CAPS LOCK
172)   07A4 CC 32 08    		 CALL Z,CAPSTOG	;
175)   07A7 C9          		 RET	;
177)   07A8 CD 56 07    		GTBRK: CALL PS2KEY ;$14 OR $F0	;$14 OR $F0
178)   07AB FE F0       		 CP $F0	;
179)   07AD C8          		 RET Z	;
180)   07AE CD 56 07    		 CALL PS2KEY ;$77	;$77
181)   07B1 C9          		 RET	;
183)   07B2 CD 56 07    		GTEXT: CALL PS2KEY ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
184)   07B5 FE 6B       		 CP $6B ;LEFT	;LEFT
185)   07B7 C8          		 RET Z	;
186)   07B8 FE 72       		 CP $72 ;DOWN	;DOWN
187)   07BA C8          		 RET Z	;
188)   07BB FE 74       		 CP $74 ;RIGHT	;RIGHT
189)   07BD C8          		 RET Z	;
190)   07BE FE 75       		 CP $75 ;UP	;UP
191)   07C0 C8          		 RET Z	;
192)   07C1 FE 70       		 CP $70 ;INSERT	;INSERT
193)   07C3 C8          		 RET Z	;
194)   07C4 FE 6C       		 CP $6C ;HOME	;HOME
195)   07C6 C8          		 RET Z	;
196)   07C7 FE 7D       		 CP $7D ;PG UP	;PG UP
197)   07C9 C8          		 RET Z	;
198)   07CA FE 7A       		 CP $7A ;PG DN	;PG DN
199)   07CC C8          		 RET Z	;
200)   07CD FE 69       		 CP $69 ;END	;END
201)   07CF C8          		 RET Z	;
202)   07D0 FE 71       		 CP $71 ;DEL	;DEL
203)   07D2 C8          		 RET Z	;
204)   07D3 FE 66       		 CP $66  ;BACKSPACE	;BACKSPACE
205)   07D5 C8          		 RET Z	;
206)   07D6 FE 5A       		 CP $5A ;ENTER NUM	;ENTER NUM
207)   07D8 C8          		 RET Z	;
208)   07D9 FE 11       		 CP $11 ;RIGHT ALT	;RIGHT ALT
209)   07DB C8          		 RET Z	;
210)   07DC FE 14       		 CP $14 ;LEFT ALT	;LEFT ALT
211)   07DE C8          		 RET Z	;
212)   07DF FE 4A       		 CP $4A ;NUMLOCK /	;NUMLOCK /
213)   07E1 C8          		 RET Z	;
214)   07E2 FE F0       		 CP $F0	;
215)   07E4 C2 EA 07    		 JP NZ, EXGTEX ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
216)   07E7 CD 56 07    		 CALL PS2KEY ; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT	; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT
218)   07EA AF          		EXGTEX XOR A ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
219)   07EB C9          		 RET	;
222)   07EC CD 56 07    		GTREL: CALL PS2KEY ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
223)   07EF FE 12       		 CP 18 ; LSHIFT RELEASED	; LSHIFT RELEASED
224)   07F1 CC 05 08    		 CALL Z,SHFRES ; RESET SHIFT	; RESET SHIFT
225)   07F4 FE 14       		 CP 20 ; LCTRL RELEASED	; LCTRL RELEASED
226)   07F6 CC 0B 08    		 CALL Z,CTRRES ; RESET CONTROL	; RESET CONTROL
227)   07F9 FE 11       		 CP 17 ; LALT RELEASED	; LALT RELEASED
228)   07FB CC 11 08    		 CALL Z,ALTRES ; RESET ALT	; RESET ALT
229)   07FE FE 59       		 CP 89 ; RSHIFT RELEASED	; RSHIFT RELEASED
230)   0800 CC 05 08    		 CALL Z,SHFRES ; RESET SHIFT	; RESET SHIFT
231)   0803 AF          		 XOR A ; NO KEY	; NO KEY
232)   0804 C9          		 RET	;
234)   0805 21 9E 83    		SHFRES: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH 	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
235)   0808 CB B6       		 RES 6,(HL)  ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
236)   080A C9          		 RET	;
238)   080B 21 9E 83    		CTRRES: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
239)   080E CB BE       		 RES 7,(HL) ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
240)   0810 C9          		 RET	;
242)   0811 21 9E 83    		ALTRES: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
243)   0814 CB AE       		 RES 5,(HL) ; BIT 5 IS SHIFT $20=32 	; BIT 5 IS SHIFT $20=32
244)   0816 C9          		 RET	;
246)   0817 21 9E 83    		SHFTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH 	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
247)   081A 3E 40       		 LD A,$40 ; MASK	; MASK
248)   081C AE          		 XOR (HL)  ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
249)   081D 77          		 LD (HL),A ; SAVE	; SAVE
250)   081E AF          		 XOR A ; NO KEY	; NO KEY
251)   081F C9          		 RET	;
253)   0820 21 9E 83    		CTRTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
254)   0823 3E 80       		 LD A,$80 ; MASK	; MASK
255)   0825 AE          		 XOR (HL) ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
256)   0826 77          		 LD (HL),A ; SAVE	; SAVE
257)   0827 AF          		 XOR A ; NO KEY	; NO KEY
258)   0828 C9          		 RET	;
260)   0829 21 9E 83    		ALTTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
261)   082C 3E 20       		 LD A,$20	;
262)   082E AE          		 XOR (HL) ; BIT 5 IS ALT $20=32 	; BIT 5 IS ALT $20=32
263)   082F 77          		 LD (HL),A ; SAVE	; SAVE
264)   0830 AF          		 XOR A ; NO KEY	; NO KEY
265)   0831 C9          		 RET	;
267)   0832 21 9E 83    		CAPSTOG: LD HL,KEYCTR ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
268)   0835 3E 10       		 LD A,$10	;
269)   0837 AE          		 XOR (HL) ; BIT 4 IS CAPS $10=16 	; BIT 4 IS CAPS $10=16
270)   0838 77          		 LD (HL),A ; SAVE	; SAVE
271)   0839 AF          		 XOR A ; NO KEY	; NO KEY
272)   083A C9          		 RET	;
276)   083B 21 9E 83    		 LD HL,KEYCTR	;
277)   083E 47          		 LD B,A  ; SAVE A	; SAVE A
278)   083F 7E          		 LD A,(HL); GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
279)   0840 4F          		 LD C,A  ;CAPS ON C	;CAPS ON C
280)   0841 CB 1F       		 RR A	;
281)   0843 CB 1F       		 RR A    ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
282)   0845 A9          		 XOR C   ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
283)   0846 CB 67       		 BIT 4,A ;CHECK IF BIT 4 IS 0 = UNSHIFTED	;CHECK IF BIT 4 IS 0 = UNSHIFTED
284)   0848 78          		 LD A,B  ;RESTORE A	;RESTORE A
289)   0849 21 57 08    		 LD HL,PS2TAB1 ;UNSHIFTED	;UNSHIFTED
290)   084C 28 03       		 JR Z,PLK1	;
291)   084E 21 01 09    		 LD HL,PS2TAB2 ;SHIFTED	;SHIFTED
292)   0851 06 00       		PLK1:  LD B,0	;
293)   0853 4F          		 LD C,A	;
294)   0854 09          		 ADD HL,BC       	;
295)   0855 7E          		 LD A,(HL) ;GET THE CHAR	;GET THE CHAR
296)   0856 C9          		 RET	;
300)   0857 00 00 00 00 		PS2TAB1 DB 0,0,0,0,0,0,0,0,0,0	;
300)   085B 00 00 00 00 		PS2TAB1 DB 0,0,0,0,0,0,0,0,0,0	;
300)   085F 00 00       		PS2TAB1 DB 0,0,0,0,0,0,0,0,0,0	;
301)   0861 00 00 00 00 		      DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0865 60 00 00 00 		      DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0869 00 00       		      DB 0,0,0,0,'`',0,0,0,0,0	;
302)   086B 00 71 31 00 		      DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   086F 00 00 7A 73 		      DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   0873 61 77       		      DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   0875 32 00 00 63 		      DB '2',0,0,'c','x','d','e','4','3',0	;
303)   0879 78 64 65 34 		      DB '2',0,0,'c','x','d','e','4','3',0	;
303)   087D 33 00       		      DB '2',0,0,'c','x','d','e','4','3',0	;
304)   087F 00 20 76 66 		      DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0883 74 72 35 00 		      DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0887 00 6E       		      DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   0889 62 68 67 6D 		      DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   088D 36 00 00 2C 		      DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   0891 6D 6A       		      DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   0893 75 37 38 00 		      DB 'u','7','8',0,0,',','k','i','o','0'   ;60-69	;60-69
306)   0897 00 2C 6B 69 		      DB 'u','7','8',0,0,',','k','i','o','0'   ;60-69	;60-69
306)   089B 6F 30       		      DB 'u','7','8',0,0,',','k','i','o','0'   ;60-69	;60-69
307)   089D 39 00 00 2E 		      DB '9',0,0,'.','/','l',59,'p','-',0       ;70-79	;70-79
307)   08A1 2F 6C 3B 70 		      DB '9',0,0,'.','/','l',59,'p','-',0       ;70-79	;70-79
307)   08A5 2D 00       		      DB '9',0,0,'.','/','l',59,'p','-',0       ;70-79	;70-79
308)   08A7 00 00 27 00 		      DB 0,0,39,0,'[','=',0,0,0,0               ;80-89	;80-89
308)   08AB 5B 3D 00 00 		      DB 0,0,39,0,'[','=',0,0,0,0               ;80-89	;80-89
308)   08AF 00 00       		      DB 0,0,39,0,'[','=',0,0,0,0               ;80-89	;80-89
309)   08B1 0D 5D 00 5C 		      DB 13,']',0,'\',0,0,0,0,0,0               ;90-99	;90-99
309)   08B5 00 00 00 00 		      DB 13,']',0,'\',0,0,0,0,0,0               ;90-99	;90-99
309)   08B9 00 00       		      DB 13,']',0,'\',0,0,0,0,0,0               ;90-99	;90-99
310)   08BB 00 00 06 00 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
310)   08BF 00 08 00 04 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
310)   08C3 09 00       		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
311)   08C5 00 00 01 07 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
311)   08C9 0A 00 03 0B 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
311)   08CD 1B 00       		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
312)   08CF 00 00 2B 2D 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
312)   08D3 2A 39 00 00 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
312)   08D7 00 00       		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
313)   08D9 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
313)   08DD 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
313)   08E1 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
314)   08E3 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
314)   08E7 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
314)   08EB 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
315)   08ED 00 00 00 00 		       DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
315)   08F1 00 00 00 00 		       DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
315)   08F5 00 00       		       DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
316)   08F7 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
316)   08FB 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
316)   08FF 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
319)   0901 00 00 00 00 		PS2TAB2 DB 0,0,0,0,0,0,0,0,0,0	;
319)   0905 00 00 00 00 		PS2TAB2 DB 0,0,0,0,0,0,0,0,0,0	;
319)   0909 00 00       		PS2TAB2 DB 0,0,0,0,0,0,0,0,0,0	;
320)   090B 00 00 00 00 		      DB 0,0,0,0,'~',0,0,0,0,0	;
320)   090F 7E 00 00 00 		      DB 0,0,0,0,'~',0,0,0,0,0	;
320)   0913 00 00       		      DB 0,0,0,0,'~',0,0,0,0,0	;
321)   0915 00 51 21 00 		      DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   0919 00 00 5A 53 		      DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   091D 41 57       		      DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   091F 40 00 00 43 		      DB '@',0,0,'C','X','D','E','$','#',0	;
322)   0923 58 44 45 24 		      DB '@',0,0,'C','X','D','E','$','#',0	;
322)   0927 23 00       		      DB '@',0,0,'C','X','D','E','$','#',0	;
323)   0929 00 20 56 46 		      DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   092D 54 52 25 00 		      DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   0931 00 4E       		      DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   0933 42 48 47 59 		      DB 'B','H','G','Y','^',0,0,'"','M','J'   ;50-59	;50-59
324)   0937 5E 00 00 22 		      DB 'B','H','G','Y','^',0,0,'"','M','J'   ;50-59	;50-59
324)   093B 4D 4A       		      DB 'B','H','G','Y','^',0,0,'"','M','J'   ;50-59	;50-59
325)   093D 55 5E 2A 00 		      DB 'U','^','*',0,0,'<','K','I','O',')'   ;60-69	;60-69
325)   0941 00 3C 4B 49 		      DB 'U','^','*',0,0,'<','K','I','O',')'   ;60-69	;60-69
325)   0945 4F 29       		      DB 'U','^','*',0,0,'<','K','I','O',')'   ;60-69	;60-69
326)   0947 28 00 00 3E 		      DB '(',0,0,'>','?','L',':','P','_',0      ;70-79	;70-79
326)   094B 3F 4C 3A 50 		      DB '(',0,0,'>','?','L',':','P','_',0      ;70-79	;70-79
326)   094F 5F 00       		      DB '(',0,0,'>','?','L',':','P','_',0      ;70-79	;70-79
327)   0951 00 00 22 00 		      DB 0,0,34,0,'{','+',0,0,0,0               ;80-89	;80-89
327)   0955 7B 2B 00 00 		      DB 0,0,34,0,'{','+',0,0,0,0               ;80-89	;80-89
327)   0959 00 00       		      DB 0,0,34,0,'{','+',0,0,0,0               ;80-89	;80-89
328)   095B 0D 7D 00 7C 		      DB 13,'}',0,'|',0,0,0,0,0,0               ;90-99	;90-99
328)   095F 00 00 00 00 		      DB 13,'}',0,'|',0,0,0,0,0,0               ;90-99	;90-99
328)   0963 00 00       		      DB 13,'}',0,'|',0,0,0,0,0,0               ;90-99	;90-99
329)   0965 00 00 06 00 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
329)   0969 00 08 00 04 		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
329)   096D 09 00       		      DB 0,0,6,0,0,8,0,4,9,0                    ;100-109   	;100-109
330)   096F 00 00 01 07 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
330)   0973 0A 00 03 0B 		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
330)   0977 1B 00       		      DB 0,0,1,7,10,0,3,11,ESC,0                ;110-119 	;110-119
331)   0979 00 00 2B 2D 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
331)   097D 2A 39 00 00 		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
331)   0981 00 00       		      DB 0,0,'+','-','*','9',0,0,0,0            ;120-129	;120-129
332)   0983 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
332)   0987 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
332)   098B 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                 ;130-139	;130-139
333)   098D 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
333)   0991 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
333)   0995 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;140-149	;140-149
334)   0997 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
334)   099B 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
334)   099F 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                  ;150-159	;150-159
335)   09A1 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
335)   09A5 00 00 00 00 		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
335)   09A9 00 00       		      DB 0,0,0,0,0,0,0,0,0,0                    ;160-169	;160-169
 45)   09AB 3E 03       		STRG_INIT: LD A,3  ;38400 BPS	;38400 BPS
 46)   09AD CD 39 0B    		 CALL STOR_INI	;
 47)   09B0 C9          		 RET	;
 50)   09B1 21 E1 83    		NEWCMD: LD HL,STRGCMD 	;
 51)   09B4 77          		 LD (HL),A	;
 52)   09B5 23          		 INC HL	;
 53)   09B6 E5          		 PUSH HL	;
 54)   09B7 AF          		 XOR A	;
 55)   09B8 06 03       		 LD B,3	;
 56)   09BA 77          		CCAGN: LD (HL),A	;
 57)   09BB 23          		 INC HL	;
 58)   09BC 10 FC       		 DJNZ CCAGN	;
 59)   09BE E1          		 POP HL   ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 60)   09BF C9          		 RET	;
 63)   09C0 CD 9A 0B    		SENDCMD: CALL FLUSHREC	;
 64)   09C3 21 E1 83    		 LD HL,STRGCMD	;
 65)   09C6 06 04       		 LD B,4 	;
 66)   09C8 7E          		NXTBT: LD A,(HL)	;
 67)   09C9 CD 69 0B    		 CALL STOR_TX	;
 68)   09CC 23          		 INC HL	;
 69)   09CD 10 F9       		 DJNZ NXTBT	;
 70)   09CF C9          		 RET	;
 72)   09D0 3E 01       		STRG_OPENCRD: LD A,OPENCARD	;
 73)   09D2 CD B1 09    		 CALL NEWCMD	;
 74)   09D5 CD C0 09    		 CALL SENDCMD	;
 75)   09D8 CD A7 26    		 CALL DEL2	;
 76)   09DB CD 7C 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
 77)   09DE C9          		 RET	;
 82)   09DF F5          		STRG_GETEOF: PUSH AF	;
 83)   09E0 3E 0D       		 LD A,ENDOFFILE	;
 84)   09E2 CD B1 09    		 CALL NEWCMD	;
 85)   09E5 F1          		 POP AF	;
 86)   09E6 77          		 LD (HL),A ;FID	;FID
 87)   09E7 CD C0 09    		 CALL SENDCMD	;
 89)   09EA CD 7C 0B    		 CALL STOR_RX ;GET EOF	;GET EOF
 90)   09ED C9          		 RET	;
 95)   09EE F5          		STRG_GETSIZE: PUSH AF	;
 96)   09EF 3E 0C       		 LD A,FILESIZE	;
 97)   09F1 18 03       		 JR GT2BYTES	;
102)   09F3 F5          		STRG_GETPOS: PUSH AF	;
103)   09F4 3E 09       		 LD A,POSITIONG	;
104)   09F6 CD B1 09    		GT2BYTES: CALL NEWCMD	;
105)   09F9 F1          		 POP AF	;
106)   09FA 77          		 LD (HL),A ;FID	;FID
107)   09FB CD C0 09    		 CALL SENDCMD	;
109)   09FE CD 7C 0B    		 CALL STOR_RX ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
110)   0A01 67          		 LD H,A 	;
111)   0A02 CD 7C 0B    		 CALL STOR_RX ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
112)   0A05 6F          		 LD L,A 	;
113)   0A06 CD 7C 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
114)   0A09 C9          		 RET	;
120)   0A0A EB          		STRG_SETPOS: EX DE,HL	;
121)   0A0B F5          		 PUSH AF	;
122)   0A0C 3E 08       		 LD A,POSITIONS	;
123)   0A0E CD B1 09    		 CALL NEWCMD	;
124)   0A11 F1          		 POP AF	;
125)   0A12 77          		 LD (HL),A ;FID	;FID
126)   0A13 23          		 INC HL	;
127)   0A14 72          		 LD (HL),D ;NEW POS ON DE	;NEW POS ON DE
128)   0A15 23          		 INC HL	;
129)   0A16 73          		 LD (HL),E	;
130)   0A17 CD C0 09    		 CALL SENDCMD	;
131)   0A1A CD A7 26    		 CALL DEL2	;
132)   0A1D CD 7C 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
133)   0A20 C9          		 RET	;
138)   0A21 3E 0A       		STRG_DIRLIST: LD A,LISTDIR	;
139)   0A23 CD B1 09    		 CALL NEWCMD	;
140)   0A26 CD C0 09    		 CALL SENDCMD	;
141)   0A29 CD A7 26    		 CALL DEL2	;
143)   0A2C 11 89 83    		 LD DE,BUFFER	;
144)   0A2F CD 7C 0B    		NXTCHR CALL STOR_RX 	;
145)   0A32 FE FF       		 CP 255	;
146)   0A34 28 05       		 JR Z,DIROUT	;
148)   0A36 CD 90 15    		 CALL LCD_PRINTCHAR	;
149)   0A39 18 F4       		 JR NXTCHR	;
150)   0A3B CD A7 26    		DIROUT: CALL DEL2	;
151)   0A3E CD 7C 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
152)   0A41 C9          		 RET	;
156)   0A42 CD 72 0B    		SENDFNAME: CALL STOR_TXT ;SEND FILENAME	;SEND FILENAME
157)   0A45 AF          		 XOR A	;
158)   0A46 CD 69 0B    		 CALL STOR_TX	;
159)   0A49 C9          		 RET	;
162)   0A4A 3E 0B       		STRG_DIRCHG: LD A,CHANGEDIR	;
163)   0A4C CD B1 09    		 CALL NEWCMD	;
164)   0A4F CD C0 09    		 CALL SENDCMD	;
165)   0A52 21 B9 83    		 LD HL,STRGBUFF	;
166)   0A55 CD 42 0A    		        CALL SENDFNAME  	;
167)   0A58 CD A7 26    		 CALL DEL2	;
168)   0A5B CD 7C 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
169)   0A5E C9          		 RET	;
173)   0A5F F5          		STRG_OPNFILE: PUSH AF	;
174)   0A60 3E 02       		 LD A,OPENFILE	;
175)   0A62 CD B1 09    		 CALL NEWCMD	;
176)   0A65 F1          		 POP AF	;
177)   0A66 77          		 LD (HL),A ;FID	;FID
178)   0A67 CD C0 09    		 CALL SENDCMD 	;
179)   0A6A 21 B9 83    		 LD HL,STRGBUFF	;
180)   0A6D CD 42 0A    		 CALL SENDFNAME	;
181)   0A70 CD A7 26    		 CALL DEL2 	;
182)   0A73 CD 7C 0B    		 CALL STOR_RX   ;GET RESULT 	;GET RESULT
184)   0A76 32 E5 83    		 LD (FID),A	;
185)   0A79 FE C8       		 CP 200	;
186)   0A7B C9          		 RET ; IF CARRY ERROR OCCURED 	; IF CARRY ERROR OCCURED
189)   0A7C F5          		STRG_CLSFILE: PUSH AF	;
190)   0A7D 3E 03       		 LD A,CLOSEFILE  	;
191)   0A7F CD B1 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN 	;HL POINTS ON FID IN COMMAND ON RETURN
192)   0A82 F1          		 POP AF	;
193)   0A83 77          		 LD (HL),A ;FID	;FID
194)   0A84 CD C0 09    		 CALL SENDCMD	;
195)   0A87 CD 7C 0B    		 CALL STOR_RX    ;GET RESULT	;GET RESULT
196)   0A8A C9          		 RET	;
202)   0A8B F5          		STRG_BLKWRITE: PUSH AF	;
203)   0A8C 3E 07       		 LD A,WRITEBLOCK	;
204)   0A8E CD B1 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
205)   0A91 F1          		 POP AF	;
206)   0A92 77          		 LD (HL),A ;FID	;FID
207)   0A93 23          		 INC HL 	;
209)   0A94 78          		 LD A,B  ;BYTES HI	;BYTES HI
210)   0A95 77          		 LD (HL),A	;
211)   0A96 23          		 INC HL 	;
212)   0A97 79          		 LD A,C  ;BYTES LOW	;BYTES LOW
213)   0A98 77          		 LD (HL),A	;
214)   0A99 CD C0 09    		 CALL SENDCMD  ;SEND BLOCKWRITE COMMAND BC BYTES   	;SEND BLOCKWRITE COMMAND BC BYTES
215)   0A9C EB          		 EX DE,HL	;
216)   0A9D 7E          		BWNXCH: LD A,(HL)	;
217)   0A9E CD 69 0B    		 CALL STOR_TX	;
218)   0AA1 23          		 INC HL	;
219)   0AA2 0B          		 DEC BC	;
220)   0AA3 78          		 LD A,B	;
221)   0AA4 B1          		 OR C	;
222)   0AA5 20 F6       		 JR NZ,BWNXCH	;
223)   0AA7 CD 7C 0B    		 CALL STOR_RX    ;GET RESULT	;GET RESULT
224)   0AAA C9          		 RET  	;
232)   0AAB F5          		STRG_BLKREAD: PUSH AF	;
233)   0AAC 3E 06       		 LD A,READBLOCK	;
234)   0AAE CD B1 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
235)   0AB1 F1          		 POP AF	;
236)   0AB2 77          		 LD (HL),A ;FID	;FID
237)   0AB3 23          		 INC HL 	;
238)   0AB4 78          		 LD A,B  ;BYTES HI	;BYTES HI
239)   0AB5 77          		 LD (HL),A	;
240)   0AB6 23          		 INC HL 	;
241)   0AB7 79          		 LD A,C  ;BYTES LOW	;BYTES LOW
242)   0AB8 77          		 LD (HL),A	;
243)   0AB9 CD C0 09    		 CALL SENDCMD  ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
244)   0ABC CD A7 26    		 CALL DEL2	;
245)   0ABF CD 7C 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
246)   0AC2 47          		 LD B,A  	;
247)   0AC3 CD 7C 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
248)   0AC6 4F          		 LD C,A	;
249)   0AC7 78          		 LD A,B	;
250)   0AC8 B1          		 OR C	;
251)   0AC9 28 10       		 JR Z,EREXIT   ;SOME ERROR OCCURED	;SOME ERROR OCCURED
253)   0ACB C5          		 PUSH BC   ;SAVE BYTES TO RECEIVE  	;SAVE BYTES TO RECEIVE
254)   0ACC CD 7C 0B    		OFNXCH: CALL STOR_RX	;
255)   0ACF 12          		 LD (DE),A	;
256)   0AD0 13          		 INC DE	;
257)   0AD1 0B          		 DEC BC	;
258)   0AD2 78          		 LD A,B	;
259)   0AD3 B1          		 OR C	;
260)   0AD4 20 F6       		 JR NZ,OFNXCH	;
261)   0AD6 CD 7C 0B    		OFEXIT: CALL STOR_RX    ;GET RESULT	;GET RESULT
262)   0AD9 C1          		 POP BC  ;TOTAL BYTES RECEIVED  	;TOTAL BYTES RECEIVED
263)   0ADA C9          		 RET  	;
264)   0ADB 21 24 0B    		EREXIT: LD HL,ERRMSG	;
265)   0ADE CD 95 17    		 CALL LCD_MSG  ;PRINT TO SCREEN	;PRINT TO SCREEN
266)   0AE1 18 F3       		 JR OFEXIT	;
270)   0AE3 F5          		STRG_TPFILE: PUSH AF	;
271)   0AE4 3E 06       		 LD A,READBLOCK	;
272)   0AE6 CD B1 09    		 CALL NEWCMD ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
273)   0AE9 F1          		 POP AF	;
274)   0AEA 77          		 LD (HL),A ;FID	;FID
275)   0AEB 23          		 INC HL 	;
276)   0AEC 78          		 LD A,B  ;BYTES HI	;BYTES HI
277)   0AED 77          		 LD (HL),A	;
278)   0AEE 23          		 INC HL 	;
279)   0AEF 79          		 LD A,C  ;BYTES LOW	;BYTES LOW
280)   0AF0 77          		 LD (HL),A	;
281)   0AF1 CD C0 09    		 CALL SENDCMD  ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
282)   0AF4 CD A7 26    		 CALL DEL2	;
283)   0AF7 CD 7C 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
284)   0AFA 47          		 LD B,A  	;
285)   0AFB CD 7C 0B    		 CALL STOR_RX   ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
286)   0AFE 4F          		 LD C,A	;
287)   0AFF 78          		 LD A,B	;
288)   0B00 B1          		 OR C	;
289)   0B01 CA DB 0A    		 JP Z,EREXIT   ;SOME ERROR OCCURED	;SOME ERROR OCCURED
291)   0B04 3E 0D       		 LD A,13	;
292)   0B06 C5          		 PUSH BC	;
293)   0B07 CD 90 15    		 CALL LCD_PRINTCHAR	;
294)   0B0A C1          		 POP BC  	;
295)   0B0B CD 7C 0B    		TFOFNXCH: CALL STOR_RX ;GET THE CHAR	;GET THE CHAR
296)   0B0E C5          		 PUSH BC	;
297)   0B0F CD 90 15    		 CALL LCD_PRINTCHAR   ;PRINT TO SCREEN	;PRINT TO SCREEN
298)   0B12 C1          		 POP BC	;
299)   0B13 0B          		 DEC BC	;
300)   0B14 78          		 LD A,B	;
301)   0B15 B1          		 OR C	;
302)   0B16 20 F3       		 JR NZ,TFOFNXCH  	;
303)   0B18 CD 7C 0B    		TFOFEXIT: CALL STOR_RX  ;GET RESULT  	;GET RESULT
304)   0B1B C9          		 RET 	;
305)   0B1C 21 24 0B    		TFEREXIT: LD HL,ERRMSG	;
306)   0B1F CD 95 17    		 CALL LCD_MSG  ;PRINT TO SCREEN	;PRINT TO SCREEN
307)   0B22 18 F4       		 JR TFOFEXIT	;
309)   0B24 0D          		ERRMSG  DEFB 13	;
310)   0B25 45 52 52 4F 		        DEFM "ERROR ON RET BYTES"	;
310)   0B29 52 20 4F 4E 		        DEFM "ERROR ON RET BYTES"	;
310)   0B2D 20 52 45 54 		        DEFM "ERROR ON RET BYTES"	;
310)   0B31 20 42 59 54 		        DEFM "ERROR ON RET BYTES"	;
310)   0B35 45 53       		        DEFM "ERROR ON RET BYTES"	;
311)   0B37 0D 00       		        DEFB 13,0	;
329)   0B39 	            		 RBR EQU DEVSTOR+0 ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
330)   0B39 	            		 THR EQU DEVSTOR+0 ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
331)   0B39 	            		 IER EQU DEVSTOR+1 ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
336)   0B39 	            		 IIR EQU DEVSTOR+2 ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
341)   0B39 	            		 FCR EQU DEVSTOR+2 ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
349)   0B39 	            		 LCR EQU DEVSTOR+3 ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
357)   0B39 	            		 MCR EQU DEVSTOR+4 ;MODEM CONTROL REGISTER 	;MODEM CONTROL REGISTER
358)   0B39 	            		 LSR EQU DEVSTOR+5 ;LINE STATUS REGISTER	;LINE STATUS REGISTER
367)   0B39 	            		 MSR EQU DEVSTOR+6 ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
368)   0B39 	            		 SCR EQU DEVSTOR+7 ;SCRATCH REGISTER	;SCRATCH REGISTER
369)   0B39 	            		 DLL EQU DEVSTOR+0 ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
370)   0B39 	            		 DLM EQU DEVSTOR+1 ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
374)   0B39 F5          		STOR_INI: PUSH AF	;
375)   0B3A 3E 80       		 LD      A,$80           ; Mask to set DLAB on	; Mask to set DLAB on
376)   0B3C D3 33       		 OUT     (LCR),A         ; Send to LINe Control Register 	; Send to LINe Control Register
384)   0B3E F1          		   POP AF	;
385)   0B3F D3 30       		 OUT     (DLL),A         ; Set LSB of divisor	; Set LSB of divisor
386)   0B41 3E 00       		 LD      A,00            ; This will be the MSB of the divisior	; This will be the MSB of the divisior
387)   0B43 D3 31       		 OUT     (DLM),A         ; Send to the MSB register	; Send to the MSB register
388)   0B45 3E 03       		 LD      A,$03           ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
389)   0B47 D3 33       		 OUT     (LCR),A         ; Write new value to LCR	; Write new value to LCR
391)   0B49 3E 00       		   LD A, 0       	;
392)   0B4B D3 32       		   OUT  (FCR),A      ;//was commented	;//was commented
393)   0B4D 3E 00       		 LD      A,$00           ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
394)   0B4F D3 31       		 OUT     (IER),A         ; Send to INterrupt Enable Register 	; Send to INterrupt Enable Register
395)   0B51 AF          		    XOR A     ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
396)   0B52 D3 34       		       OUT (MCR),A    	;
397)   0B54 C9          		 RET	;
403)   0B55 F5          		STORTXRD: PUSH    AF	;
404)   0B56 DB 35       		STORTXLP: IN      A,(LSR)         ; fetch the control register	; fetch the control register
405)   0B58 CB 6F       		        BIT     5,A             ; bit will be set if UART is ready	; bit will be set if UART is ready
406)   0B5A 28 FA       		        JR      Z,STORTXLP	;
407)   0B5C F1          		        POP     AF	;
408)   0B5D C9          		        RET  	;
411)   0B5E F5          		WAITCTSLOW: PUSH AF	;
412)   0B5F DB 36       		TSTAGN: IN A,(MSR)	;
413)   0B61 CB 67       		  BIT 4,A     ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
414)   0B63 20 02       		  JR NZ,WCLEX	;
415)   0B65 18 F8       		  JR TSTAGN	;
416)   0B67 F1          		WCLEX: POP AF	;
417)   0B68 C9          		  RET	;
423)   0B69 CD 5E 0B    		  CALL WAITCTSLOW	;
428)   0B6C CD 55 0B    		  CALL    STORTXRD	;
433)   0B6F D3 30       		        OUT     (THR),A	;
434)   0B71 C9          		        RET	;
437)   0B72 7E          		STOR_TXT: LD A,(HL)	;
438)   0B73 23          		 INC HL 	;
439)   0B74 FE 00       		 CP 0	;
440)   0B76 C8          		 RET Z	;
441)   0B77 CD 69 0B    		        CALL STOR_TX	;
442)   0B7A 18 F6       		 JR STOR_TXT	;
449)   0B7C F3          		STOR_RX:  DI	;
450)   0B7D 3E 02       		        LD A,2 ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
451)   0B7F D3 34       		        OUT (MCR),A	;
452)   0B81 CD A5 0B    		  CALL    STORRXRD              	;
453)   0B84 AF          		STOR_GTCH: XOR A      ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
454)   0B85 D3 34       		        OUT (MCR),A        	;
455)   0B87 DB 30       		       IN A,(RBR)	;
456)   0B89 FB          		       EI	;
457)   0B8A C9          		        RET	;
459)   0B8B 3E 02       		STOR_RXNW: LD A,2    ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
460)   0B8D D3 34       		        OUT (MCR),A	;
461)   0B8F DB 35       		  IN      A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
462)   0B91 CB 47       		        BIT     0,A                    	;
463)   0B93 28 03       		        JR Z,STOR_NOCHAR	;
464)   0B95 F3          		        DI	;
465)   0B96 18 EC       		        JR STOR_GTCH        	;
466)   0B98 AF          		STOR_NOCHAR: XOR A  ;RETURN ZERO	;RETURN ZERO
467)   0B99 C9          		        RET	;
469)   0B9A 06 0A       		FLUSHREC: LD B,10	;
470)   0B9C CD 8B 0B    		FRAGN:     CALL  STOR_RXNW	;
471)   0B9F 10 FB       		  DJNZ FRAGN       	;
472)   0BA1 AF          		  XOR A	;
473)   0BA2 D3 34       		  OUT (MCR),A	;
474)   0BA4 C9          		  RET	;
480)   0BA5 F3          		STORRXRD: DI	;
481)   0BA6 F5          		        PUSH    AF	;
482)   0BA7 DB 35       		STORRXLP: IN      A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
483)   0BA9 CB 47       		        BIT     0,A             ; bit will be set if UART has data	; bit will be set if UART has data
484)   0BAB 28 FA       		        JR      Z,STORRXLP	;
485)   0BAD F1          		        POP     AF	;
486)   0BAE FB          		        EI	;
487)   0BAF C9          		        RET  	;
491)   0BB0 DB 35       		STOR_KEYRD: IN     A,(LSR)         ; fetch the conrtol register	; fetch the conrtol register
492)   0BB2 CB 47       		         BIT     0,A             ; bit will be set if UART has data        	; bit will be set if UART has data
493)   0BB4 C9          		         RET 	;
  8)   0BB5 	            		DI2C_STA  EQU DEVI2C+0 ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  9)   0BB5 	            		DI2C_INDPTR EQU DEVI2C+0 ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
 10)   0BB5 	            		DI2C_DAT EQU DEVI2C+1 ;01 A0=HIGH A1=LOW R/W  DEF $00	;01 A0=HIGH A1=LOW R/W  DEF $00
 11)   0BB5 	            		DI2C_CON EQU DEVI2C+3 ;11 A0=HIGH A1=HIGH R/W DEF $00	;11 A0=HIGH A1=HIGH R/W DEF $00
 12)   0BB5 	            		DI2C_INDIR EQU DEVI2C+2 ;10 A0=LOW A1=HIGH R/W DEF $00	;10 A0=LOW A1=HIGH R/W DEF $00
 57)   0BB5 C5          		I2C_RDSTAT_WT: PUSH BC	;
 58)   0BB6 01 00 20    		 LD BC,$2000	;
 59)   0BB9 DB 4B       		I2CRWT_AGN: IN A,(DI2C_CON) ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 60)   0BBB CB 5F       		 BIT 3,A   ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 61)   0BBD 20 05       		 JR NZ,I2CRWT_OK  ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 62)   0BBF 0B          		 DEC BC	;
 63)   0BC0 78          		 LD A,B	;
 64)   0BC1 B1          		 OR C	;
 65)   0BC2 20 F5       		 JR NZ,I2CRWT_AGN	;
 66)   0BC4 C1          		I2CRWT_OK: POP BC	;
 67)   0BC5 DB 48       		 IN A,(DI2C_STA)  ;VALID HERE	;VALID HERE
 68)   0BC7 C9          		 RET	;
 70)   0BC8 DB 4B       		I2C_RDSTAT_NW: IN A,(DI2C_CON) ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 71)   0BCA CB 5F       		 BIT 3,A   ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 72)   0BCC 3E FF       		 LD A,$FF  ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 73)   0BCE C8          		 RET Z   ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 74)   0BCF DB 48       		 IN A,(DI2C_STA)  ;VALID HERE	;VALID HERE
 75)   0BD1 C9          		 RET	;
 78)   0BD2 3E 01       		I2C_INIT: LD A,I2CADR	;
 79)   0BD4 D3 48       		 OUT (DI2C_INDPTR),A	;
 80)   0BD6 3E E0       		 LD A,$E0	;
 81)   0BD8 D3 4A       		 OUT (DI2C_INDIR),A  ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 83)   0BDA 3E 40       		 LD A,$40  ;INIT	;INIT
 84)   0BDC D3 4B       		 OUT (DI2C_CON),A ;	;
 85)   0BDE 06 FA       		 LD B,250	;
 86)   0BE0 CD 94 26    		 CALL DELAYMICRO	;
 87)   0BE3 06 FA       		 LD B,250	;
 88)   0BE5 CD 94 26    		 CALL DELAYMICRO  ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 93)   0BE8 3E 06       		 LD A,I2CMODE	;
 94)   0BEA D3 48       		 OUT (DI2C_INDPTR),A ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 95)   0BEC 3E 00       		 LD A,0   ;SELECT MODE 0	;SELECT MODE 0
 96)   0BEE D3 4A       		 OUT (DI2C_INDIR),A	;
 97)   0BF0 3E 02       		 LD A,I2CSCLL	;
 98)   0BF2 D3 48       		 OUT (DI2C_INDPTR),A ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 99)   0BF4 3E 9D       		 LD A,$9D  ;SELECT CLK L	;SELECT CLK L
100)   0BF6 D3 4A       		 OUT (DI2C_INDIR),A	;
101)   0BF8 3E 03       		 LD A,I2CSCLH	;
102)   0BFA D3 48       		 OUT (DI2C_INDPTR),A ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
103)   0BFC 3E 86       		 LD A,$86  ;SELECT CLK H	;SELECT CLK H
104)   0BFE D3 4A       		 OUT (DI2C_INDIR),A	;
106)   0C00 C9          		 RET	;
113)   0C01 3E 60       		I2C_WR_BYTE: LD A,$60  ;START	;START
114)   0C03 D3 4B       		   OUT (DI2C_CON),A	;
115)   0C05 CD B5 0B    		WRB_LP1: CALL I2C_RDSTAT_WT ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
116)   0C08 5F          		 LD E,A   ;SAVE STATUS	;SAVE STATUS
117)   0C09 FE 08       		 CP MASTER_START_TXed ;A HAS THE STATUS	;A HAS THE STATUS
118)   0C0B 28 21       		 JR Z,WRB_S1	;
119)   0C0D FE 10       		 CP MASTER_RESTART_TXed	;
120)   0C0F 28 1D       		 JR Z,WRB_S1	;
121)   0C11 FE 28       		 CP MASTER_DATA_W_ACK	;
122)   0C13 28 26       		 JR Z,WRB_S2	;
123)   0C15 FE 18       		 CP MASTER_SLA_W_ACK	;
124)   0C17 28 23       		 JR Z,WRB_S3	;
125)   0C19 FE 20       		 CP MASTER_SLA_W_NAK	;
126)   0C1B 28 2D       		 JR Z,WRB_EXIT	;
127)   0C1D FE 30       		 CP MASTER_DATA_W_NAK	;
128)   0C1F 28 29       		 JR Z,WRB_EXIT	;
129)   0C21 FE 38       		 CP MASTER_ARB_LOST	;
130)   0C23 C8          		 RET Z	;
131)   0C24 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
132)   0C26 C8          		 RET Z	;
133)   0C27 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
134)   0C29 C8          		 RET Z	;
135)   0C2A FE D8       		 CP SLAVE_GENERALCALL_AL 	;
136)   0C2C C8          		 RET Z	;
137)   0C2D C9          		 RET	;
139)   0C2E 7A          		WRB_S1: LD A,D    ;DEVICE ADDR	;DEVICE ADDR
140)   0C2F CB 27       		 SLA A	;
141)   0C31 E6 FE       		 AND $FE   ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
142)   0C33 D3 49       		 OUT (DI2C_DAT),A  	;
143)   0C35 3E 40       		 LD A,$40	;
144)   0C37 D3 4B       		   OUT (DI2C_CON),A  	;
145)   0C39 18 CA       		 JR WRB_LP1	;
146)   0C3B 0B          		WRB_S2: DEC BC	;
147)   0C3C 78          		WRB_S3: LD A,B	;
148)   0C3D B1          		 OR C	;
149)   0C3E 28 0A       		 JR Z,WRB_EXIT	;
150)   0C40 7E          		 LD A,(HL)	;
151)   0C41 23          		 INC HL	;
152)   0C42 D3 49       		 OUT (DI2C_DAT),A	;
153)   0C44 3E 40       		 LD A,$40	;
154)   0C46 D3 4B       		   OUT (DI2C_CON),A	;
155)   0C48 18 BB       		 JR WRB_LP1 	;
157)   0C4A 3E 50       		WRB_EXIT: LD A,$50 ;STOP	;STOP
158)   0C4C D3 4B       		   OUT (DI2C_CON),A	;
159)   0C4E 78          		 LD A,B	;
160)   0C4F B1          		 OR C	;
161)   0C50 C9          		 RET  ;IF A NOT ZERO THEN ERROR  	;IF A NOT ZERO THEN ERROR
167)   0C51 78          		I2C_RD_BYTE: LD A,B	;
168)   0C52 B1          		 OR C	;
169)   0C53 C8          		 RET Z ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
170)   0C54 3E 60       		 LD A,$60	;
171)   0C56 D3 4B       		   OUT (DI2C_CON),A	;
172)   0C58 CD B5 0B    		RDB_LP1: CALL I2C_RDSTAT_WT ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
173)   0C5B 1E 00       		 LD E,0	;
174)   0C5D FE 08       		 CP MASTER_START_TXed	;
175)   0C5F 28 1F       		 JR Z,RDB_S1	;
177)   0C61 28 1D       		 JR Z,RDB_S1	;
178)   0C63 FE 58       		 CP MASTER_DATA_R_NAK	;
179)   0C65 28 26       		 JR Z,RDB_S2	;
180)   0C67 FE 50       		 CP MASTER_DATA_R_ACK	;
181)   0C69 28 24       		 JR Z,RDB_S3	;
182)   0C6B FE 40       		 CP MASTER_SLA_R_ACK	;
183)   0C6D 28 25       		 JR Z,RDB_S4	;
184)   0C6F FE 48       		 CP MASTER_SLA_R_NAK	;
185)   0C71 28 38       		 JR Z,RDB_EXIT	;
186)   0C73 FE 38       		 CP MASTER_ARB_LOST	;
187)   0C75 C8          		 RET Z	;
188)   0C76 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
189)   0C78 C8          		 RET Z	;
190)   0C79 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
191)   0C7B C8          		 RET Z	;
192)   0C7C FE D8       		 CP SLAVE_GENERALCALL_AL 	;
193)   0C7E C8          		 RET Z	;
194)   0C7F C9          		 RET  	;
197)   0C80 7A          		RDB_S1: LD A,D    ;DEVICE ADDR	;DEVICE ADDR
198)   0C81 CB 27       		 SLA A	;
199)   0C83 F6 01       		 OR $01   ;ADDR + READ COMMAND	;ADDR + READ COMMAND
200)   0C85 D3 49       		 OUT (DI2C_DAT),A	;
201)   0C87 3E 40       		 LD A,$40	;
202)   0C89 D3 4B       		   OUT (DI2C_CON),A	;
203)   0C8B 18 CB       		 JR RDB_LP1	;
204)   0C8D 1E 01       		RDB_S2: LD E,1   ;MEANS WE EXIT	;MEANS WE EXIT
205)   0C8F DB 49       		RDB_S3: IN A,(DI2C_DAT)  ;READ DATA	;READ DATA
206)   0C91 77          		 LD (HL),A	;
207)   0C92 23          		 INC HL	;
208)   0C93 0B          		 DEC BC   	;
209)   0C94 78          		RDB_S4: LD A,B   ; IS LENGTH 0	; IS LENGTH 0
210)   0C95 B1          		 OR C	;
211)   0C96 28 13       		 JR Z,RDB_EXIT 	;
212)   0C98 7B          		 LD A,E	;
213)   0C99 FE 01       		 CP 1	;
214)   0C9B 28 0E       		 JR Z,RDB_EXIT 	;
215)   0C9D 78          		 LD A,B	;
216)   0C9E 81          		 ADD C	;
217)   0C9F FE 01       		 CP 1	;
218)   0CA1 3E 40       		 LD A,$40 	;
219)   0CA3 28 02       		 JR Z,RDB_NXT1	;
220)   0CA5 3E C0       		 LD A,$C0	;
221)   0CA7 D3 4B       		RDB_NXT1: OUT (DI2C_CON),A  ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0 	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
222)   0CA9 18 AD       		 JR RDB_LP1	;
224)   0CAB 3E 50       		RDB_EXIT: LD A,$50	;
225)   0CAD D3 4B       		   OUT (DI2C_CON),A	;
226)   0CAF 78          		 LD A,B	;
227)   0CB0 B1          		 OR C	;
228)   0CB1 C9          		 RET  ;IF A NOT ZERO THEN ERROR 	;IF A NOT ZERO THEN ERROR
 26)   0CB2 53 75 6E 64 		SUN DEFM  "Sunday"	;
 26)   0CB6 61 79       		SUN DEFM  "Sunday"	;
 27)   0CB8 00          		 DB 0	;
 28)   0CB9 4D 6F 6E 64 		MON    DEFM  "Monday"	;
 28)   0CBD 61 79       		MON    DEFM  "Monday"	;
 29)   0CBF 00          		 DB 0	;
 30)   0CC0 54 75 65 73 		TUE    DEFM  "Tuesday"	;
 30)   0CC4 64 61 79    		TUE    DEFM  "Tuesday"	;
 31)   0CC7 00          		 DB 0	;
 32)   0CC8 57 65 64 6E 		WED DEFM  "Wednesday"	;
 32)   0CCC 65 73 64 61 		WED DEFM  "Wednesday"	;
 32)   0CD0 79          		WED DEFM  "Wednesday"	;
 33)   0CD1 00          		 DB 0	;
 34)   0CD2 54 68 75 72 		THU DEFM "Thursday"	;
 34)   0CD6 73 64 61 79 		THU DEFM "Thursday"	;
 35)   0CDA 00          		 DB 0	;
 36)   0CDB 46 72 69 64 		FRI DEFM "Friday"	;
 36)   0CDF 61 79       		FRI DEFM "Friday"	;
 37)   0CE1 00          		 DB 0	;
 38)   0CE2 53 61 74 75 		SAT DEFM "Saturday"	;
 38)   0CE6 72 64 61 79 		SAT DEFM "Saturday"	;
 39)   0CEA 00          		 DB 0	;
 41)   0CEB B2 0C       		DAYS DEFW SUN	;
 42)   0CED B9 0C       		 DEFW MON	;
 43)   0CEF C0 0C       		 DEFW TUE	;
 44)   0CF1 C8 0C       		 DEFW WED	;
 45)   0CF3 D2 0C       		 DEFW THU	;
 46)   0CF5 DB 0C       		 DEFW FRI	;
 47)   0CF7 E2 0C       		 DEFW SAT	;
 49)   0CF9 45 52 52 4F 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0CFD 52 20 4F 4E 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D01 20 52 45 43 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D05 45 49 56 49 		MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D09 4E 47       		MESERR DEFM "ERROR ON RECEIVING"	;
 50)   0D0B 0A 0D 00    		    DEFB 10,13,0	;
 52)   0D0E 45 52 52 4F 		MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0D12 52 20 4F 4E 		MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0D16 20 53 45 4E 		MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0D1A 44 49 4E 47 		MESERR0 DEFM "ERROR ON SENDING"	;
 53)   0D1E 0A 0D 00    		    DEFB 10,13,0	;
 55)   0D21 7B          		SHERR0: LD A,E	;
 56)   0D22 C5          		 PUSH BC	;
 57)   0D23 CD 2B 04    		 CALL SOUTAS	;
 58)   0D26 C1          		 POP BC	;
 59)   0D27 79          		 LD A,C	;
 60)   0D28 CD 2B 04    		 CALL SOUTAS	;
 62)   0D2B 21 0E 0D    		 LD HL,MESERR0	;
 63)   0D2E CD 0D 06    		 CALL RS_TXT	;
 64)   0D31 C9          		 RET	;
 67)   0D32 79          		SHERR: LD A,C	;
 68)   0D33 CD 2B 04    		 CALL SOUTAS	;
 69)   0D36 21 F9 0C    		 LD HL,MESERR	;
 70)   0D39 CD 0D 06    		 CALL RS_TXT	;
 71)   0D3C 37          		 SCF	;
 72)   0D3D C9          		 RET	;
 75)   0D3E 21 89 83    		@DS1307_GETNOW: LD HL,BUFFER	;
 76)   0D41 AF          		 XOR A   ;SEND COMMAND 0	;SEND COMMAND 0
 77)   0D42 77          		 LD (HL),A	;
 78)   0D43 16 68       		 LD D,DS1307_ADDRESS	;
 79)   0D45 01 01 00    		 LD BC,1	;
 80)   0D48 CD 01 0C    		 CALL I2C_WRITE	;
 81)   0D4B C2 21 0D    		 JP NZ,SHERR0	;
 83)   0D4E 21 89 83    		 LD HL,BUFFER	;
 84)   0D51 16 68       		 LD D,DS1307_ADDRESS	;
 85)   0D53 01 07 00    		 LD BC,7	;
 86)   0D56 CD 51 0C    		 CALL I2C_READ	;
 87)   0D59 C2 32 0D    		 JP NZ,SHERR	;
 88)   0D5C AF          		 XOR A	;
 89)   0D5D C9          		 RET	;
 95)   0D5E 11 89 83    		 LD DE,BUFFER	;
 96)   0D61 AF          		 XOR A	;
 97)   0D62 12          		 LD (DE),A	;
 98)   0D63 13          		 INC DE	;
 99)   0D64 3E 0A       		 LD A,10 ; 10 SECS	; 10 SECS
100)   0D66 CD DB 26    		 CALL BN2BCD	;
101)   0D69 7D          		 LD A,L	;
102)   0D6A 12          		 LD (DE),A	;
103)   0D6B 13          		 INC DE	;
104)   0D6C 3E 22       		 LD A,34 ; 28 MINS	; 28 MINS
105)   0D6E CD DB 26    		 CALL BN2BCD	;
106)   0D71 7D          		 LD A,L	;
107)   0D72 12          		 LD (DE),A	;
108)   0D73 13          		 INC DE	;
109)   0D74 3E 12       		 LD A,18 ; 19 HOURS	; 19 HOURS
110)   0D76 CD DB 26    		 CALL BN2BCD	;
111)   0D79 7D          		 LD A,L	;
112)   0D7A 12          		 LD (DE),A	;
113)   0D7B 13          		 INC DE	;
114)   0D7C 3E 05       		 LD A,5 ; DAY OF WEEK 	; DAY OF WEEK
115)   0D7E 12          		 LD (DE),A	;
116)   0D7F 13          		 INC DE	;
117)   0D80 3E 12       		 LD A,18 ; 8 DAY	; 8 DAY
118)   0D82 CD DB 26    		 CALL BN2BCD	;
119)   0D85 7D          		 LD A,L	;
120)   0D86 12          		 LD (DE),A	;
121)   0D87 13          		 INC DE	;
122)   0D88 3E 02       		 LD A,02 ; 10 MONTH	; 10 MONTH
123)   0D8A CD DB 26    		 CALL BN2BCD	;
124)   0D8D 7D          		 LD A,L	;
125)   0D8E 12          		 LD (DE),A	;
126)   0D8F 13          		 INC DE	;
127)   0D90 3E 15       		 LD A,21 ; 21 YEAR (2020)	; 21 YEAR (2020)
128)   0D92 CD DB 26    		 CALL BN2BCD	;
129)   0D95 7D          		 LD A,L	;
130)   0D96 12          		 LD (DE),A	;
131)   0D97 13          		 INC DE	;
132)   0D98 AF          		 XOR A	;
133)   0D99 12          		 LD (DE),A	;
146)   0D9A 21 89 83    		@DS1307_ADJUST: LD HL,BUFFER	;
147)   0D9D 16 68       		 LD D,DS1307_ADDRESS	;
148)   0D9F 01 09 00    		 LD BC,9	;
149)   0DA2 CD 01 0C    		 CALL I2C_WRITE	;
150)   0DA5 C2 21 0D    		 JP NZ,SHERR0	;
151)   0DA8 01 FF FF    		 LD BC,FFFFh ;8000H FOR 4MHZ	;8000H FOR 4MHZ
152)   0DAB CD 58 27    		 CALL PAUSE_LOOP ; 0.5 second delay 	; 0.5 second delay
153)   0DAE 01 FF FF    		 LD BC,FFFFh ;8000H FOR 4MHZ	;8000H FOR 4MHZ
154)   0DB1 CD 58 27    		 CALL PAUSE_LOOP ; 0.5 second delay 	; 0.5 second delay
155)   0DB4 C9          		 RET	;
159)   0DB5 21 89 83    		@DS1307_SETSQ: LD HL,BUFFER	;
160)   0DB8 E5          		 PUSH HL	;
161)   0DB9 3E 07       		 LD A,DS1307_CONTROL_REGISTER	;
162)   0DBB 77          		 LD (HL),A	;
163)   0DBC 23          		 INC HL	;
164)   0DBD 7A          		 LD A,D	;
165)   0DBE 77          		 LD (HL),A	;
166)   0DBF E1          		 POP HL	;
167)   0DC0 16 68       		 LD D,DS1307_ADDRESS	;
168)   0DC2 01 02 00    		 LD BC,2	;
169)   0DC5 CD 01 0C    		 CALL I2C_WRITE	;
170)   0DC8 C2 21 0D    		 JP NZ,SHERR0 	;
171)   0DCB C9          		 RET	;
105)   0DCC 00          		LCD_DSPMODE DB 0	;
106)   0DCD 00          		LCD_DSPCTRL DB 0	;
111)   0DCE 16 00       		LCD16_WR4BITS: LD D,0 ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
113)   0DD0 0F          		 RRCA   ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
114)   0DD1 30 02       		 JR NC,LWNXT1   ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
115)   0DD3 CB E2       		 SET D4,D	;
116)   0DD5 0F          		LWNXT1: RRCA	;
117)   0DD6 30 02       		 JR NC,LWNXT2   ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
118)   0DD8 CB EA       		 SET D5,D	;
119)   0DDA 0F          		LWNXT2: RRCA	;
120)   0DDB 30 02       		 JR NC,LWNXT3   ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
121)   0DDD CB F2       		 SET D6,D	;
122)   0DDF 0F          		LWNXT3: RRCA	;
123)   0DE0 30 02       		 JR NC,LWNXT4   ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
124)   0DE2 CB FA       		 SET D7,D	;
125)   0DE4 7B          		LWNXT4: LD A,E	;
126)   0DE5 0F          		 RRCA	;
127)   0DE6 30 02       		 JR NC,LWNXT5	;
128)   0DE8 CB C2       		 SET RS,D	;
131)   0DEA CB D2       		 SET EN,D  ;EN=HIGH	;EN=HIGH
132)   0DEC 7A          		 LD A,D	;
133)   0DED CD F7 0D    		 CALL LCD16_I2CSEND	;
134)   0DF0 CB 92       		 RES EN,D  ;EN=LOW	;EN=LOW
135)   0DF2 7A          		 LD A,D	;
136)   0DF3 CD F7 0D    		 CALL LCD16_I2CSEND	;
137)   0DF6 C9          		 RET	;
141)   0DF7 D5          		LCD16_I2CSEND: PUSH DE	;
142)   0DF8 E5          		 PUSH HL	;
143)   0DF9 21 89 83    		 LD HL,BUFFER	;
144)   0DFC 77          		 LD (HL),A	;
145)   0DFD 16 27       		 LD D,LCDADDR	;
146)   0DFF 01 01 00    		 LD BC,1	;
147)   0E02 CD 01 0C    		 CALL I2C_WRITE	;
148)   0E05 E1          		 POP HL	;
149)   0E06 D1          		 POP DE	;
150)   0E07 C9          		 RET	;
154)   0E08 57          		LCD16_SEND: LD D,A ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
155)   0E09 7B          		 LD A,E	;
156)   0E0A 0F          		 RRCA	;
157)   0E0B 38 07       		 JR C,ISCMDDATA	;
158)   0E0D 0F          		 RRCA	;
159)   0E0E 30 04       		 JR NC,ISCMDDATA	;
161)   0E10 1E 00       		 LD E,COMMAND   ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
162)   0E12 18 0E       		 JR LCSD_4BIT  	;
163)   0E14 7A          		ISCMDDATA: LD A,D	;
164)   0E15 CB 3F       		 SRL A	;
165)   0E17 CB 3F       		 SRL A	;
166)   0E19 CB 3F       		 SRL A	;
167)   0E1B CB 3F       		 SRL A	;
168)   0E1D D5          		 PUSH DE	;
169)   0E1E CD CE 0D    		 CALL LCD16_WR4BITS ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
170)   0E21 D1          		 POP DE	;
171)   0E22 7A          		LCSD_4BIT: LD A,D	;
172)   0E23 E6 0F       		 AND $0F	;
173)   0E25 CD CE 0D    		 CALL LCD16_WR4BITS ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
174)   0E28 C9          		 RET	;
179)   0E29 1E 00       		LCD16_COMMD:   LD E,COMMAND	;
180)   0E2B C3 08 0E    		 JP LCD16_SEND	;
183)   0E2E 1E 01       		LCD16_DATA: LD E,LCD_DATA	;
184)   0E30 C3 08 0E    		 JP LCD16_SEND	;
188)   0E33 3E 03       		@LCD16_INIT: LD A,3     ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
189)   0E35 1E 02       		 LD E,FOUR_BITS	;
190)   0E37 CD 08 0E    		 CALL LCD16_SEND	;
191)   0E3A 01 00 30    		 LD BC,$3000	;
192)   0E3D CD 58 27    		 CALL PAUSE_LOOP  ;DELAY 4,5ms	;DELAY 4,5ms
193)   0E40 3E 03       		 LD A,3	;
194)   0E42 1E 02       		 LD E,FOUR_BITS	;
195)   0E44 CD 08 0E    		 CALL LCD16_SEND	;
196)   0E47 01 00 30    		 LD BC,$3000	;
197)   0E4A CD 58 27    		 CALL PAUSE_LOOP  ;DELAY 4,5ms  	;DELAY 4,5ms
198)   0E4D 3E 03       		 LD A,3	;
199)   0E4F 1E 02       		 LD E,FOUR_BITS	;
200)   0E51 CD 08 0E    		 CALL LCD16_SEND	;
201)   0E54 01 00 30    		 LD BC,$3000	;
202)   0E57 CD 58 27    		 CALL PAUSE_LOOP  ;DELAY 4,5ms	;DELAY 4,5ms
203)   0E5A 3E 02       		 LD A,2   ;PUT 4 BIT MODE	;PUT 4 BIT MODE
204)   0E5C 1E 02       		 LD E,FOUR_BITS	;
205)   0E5E CD 08 0E    		 CALL LCD16_SEND	;
206)   0E61 01 00 30    		 LD BC,$3000	;
207)   0E64 CD 58 27    		 CALL PAUSE_LOOP  ;DELAY 4,5ms	;DELAY 4,5ms
209)   0E67 3E 28       		    LD A,LCD_FUNCTIONSET OR LCD_2LINE	;
210)   0E69 CD 29 0E    		 CALL LCD16_COMMD	;
211)   0E6C 3E 04       		 LD A,LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF  	;
212)   0E6E 32 CD 0D    		 LD (LCD_DSPCTRL),A   	;
213)   0E71 CD 90 0E    		 CALL LCD16_DISP	;
214)   0E74 CD AB 0E    		    CALL LCD16_CLR	;
215)   0E77 3E 02       		    LD A,LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
216)   0E79 32 CC 0D    		    LD (LCD_DSPMODE),A	;
217)   0E7C F6 04       		    OR LCD_ENTRYMODESET	;
218)   0E7E CD 29 0E    		    CALL LCD16_COMMD	;
219)   0E81 C9          		 RET	;
221)   0E82 3A CD 0D    		@LCD16_NODISP: LD A,(LCD_DSPCTRL)	;
222)   0E85 CB A7       		    RES LCD_DISPLAYON,A	;
223)   0E87 32 CD 0D    		    LD (LCD_DSPCTRL),A	;
224)   0E8A F6 08       		    OR LCD_DISPLAYCONTROL	;
225)   0E8C CD 29 0E    		    CALL LCD16_COMMD	;
226)   0E8F C9          		 RET	;
227)   0E90 3A CD 0D    		@LCD16_DISP: LD A,(LCD_DSPCTRL)	;
228)   0E93 F6 04       		    OR LCD_DISPLAYON	;
229)   0E95 32 CD 0D    		    LD (LCD_DSPCTRL),A	;
230)   0E98 F6 08       		    OR LCD_DISPLAYCONTROL	;
231)   0E9A CD 29 0E    		    CALL LCD16_COMMD	;
232)   0E9D C9          		 RET	;
234)   0E9E 01 D0 07    		LCDDELAY: LD BC,HOME_CLEAR_EXEC	;
235)   0EA1 C5          		LCLR_AGN1: PUSH BC 	;
236)   0EA2 CD 94 26    		 CALL DELAYMICRO	;
237)   0EA5 C1          		 POP BC	;
238)   0EA6 0D          		 DEC C  	;
239)   0EA7 E2 A1 0E    		 JP PO,LCLR_AGN1	;
240)   0EAA C9          		 RET	;
242)   0EAB 3E 01       		@LCD16_CLR: LD A,LCD_CLEARDISPLAY ;clear display, set cursor position to zero	;clear display, set cursor position to zero
243)   0EAD CD 29 0E    		 CALL LCD16_COMMD	;
244)   0EB0 CD 9E 0E    		 CALL LCDDELAY	;
245)   0EB3 C9          		 RET 	;
248)   0EB4 7E          		@LCD16_PRINT: LD A,(HL)	;
249)   0EB5 FE 00       		 CP 0	;
250)   0EB7 C8          		 RET Z	;
251)   0EB8 CD 2E 0E    		 CALL LCD16_DATA	;
252)   0EBB 23          		 INC HL	;
253)   0EBC 18 F6       		 JR LCD16_PRINT	;
256)   0EBE CD 2E 0E    		@LCD16_PRCHR: CALL LCD16_DATA	;
257)   0EC1 C9          		 RET	;
259)   0EC2 3E 02       		@LCD16_HOME: LD A,LCD_RETURNHOME	;
260)   0EC4 CD 29 0E    		 CALL LCD16_COMMD 	;
261)   0EC7 CD 9E 0E    		 CALL LCDDELAY     	;
262)   0ECA C9          		 RET	;
265)   0ECB 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54 	;
266)   0ECF 06 00       		@LCD16_SETCURS: LD B,0	;
267)   0ED1 4B          		 LD C,E	;
268)   0ED2 21 CB 0E    		 LD HL,ROWOFFSET	;
269)   0ED5 09          		 ADD HL,BC	;
270)   0ED6 7E          		 LD A,(HL)	;
271)   0ED7 82          		 ADD D	;
272)   0ED8 F6 80       		 OR LCD_SETDDRAMADDR	;
273)   0EDA CD 29 0E    		 CALL LCD16_COMMD	;
274)   0EDD C9          		 RET	;
276)   0EDE 3A CD 0D    		@LCD16_CURSOFF: LD A,(LCD_DSPCTRL)	;
277)   0EE1 CB 97       		    RES LCD_CURSORON,A	;
278)   0EE3 32 CD 0D    		    LD (LCD_DSPCTRL),A	;
279)   0EE6 F6 08       		    OR LCD_DISPLAYCONTROL	;
280)   0EE8 CD 29 0E    		    CALL LCD16_COMMD	;
281)   0EEB C9          		 RET	;
284)   0EEC 3A CD 0D    		@LCD16_CURSON: LD A,(LCD_DSPCTRL)	;
285)   0EEF F6 02       		    OR LCD_CURSORON	;
286)   0EF1 32 CD 0D    		    LD (LCD_DSPCTRL),A	;
287)   0EF4 F6 08       		    OR LCD_DISPLAYCONTROL	;
288)   0EF6 CD 29 0E    		    CALL LCD16_COMMD	;
289)   0EF9 C9          		    RET  	;
291)   0EFA 3A CD 0D    		@LCD16_BLINKOFF: LD A,(LCD_DSPCTRL)	;
292)   0EFD CB 8F       		    RES LCD_BLINKON,A	;
293)   0EFF 32 CD 0D    		    LD (LCD_DSPCTRL),A	;
294)   0F02 F6 08       		    OR LCD_DISPLAYCONTROL	;
295)   0F04 CD 29 0E    		    CALL LCD16_COMMD	;
296)   0F07 C9          		 RET	;
299)   0F08 3A CD 0D    		@LCD16_BLINKON: LD A,(LCD_DSPCTRL)	;
300)   0F0B F6 01       		    OR LCD_BLINKON	;
301)   0F0D 32 CD 0D    		    LD (LCD_DSPCTRL),A	;
302)   0F10 F6 08       		    OR LCD_DISPLAYCONTROL	;
303)   0F12 CD 29 0E    		    CALL LCD16_COMMD	;
304)   0F15 C9          		    RET  	;
306)   0F16 3E 18       		@LCD16_SCRLEFT: LD A,LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
307)   0F18 CD 29 0E    		 CALL LCD16_COMMD	;
308)   0F1B C9          		 RET	;
310)   0F1C 3E 1C       		@LCD16_SCRRIGHT: LD A,LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
311)   0F1E CD 29 0E    		 CALL LCD16_COMMD	;
312)   0F21 C9          		 RET	;
314)   0F22 3E 10       		@LCD16_MOVLEFT: LD A,LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
315)   0F24 CD 29 0E    		 CALL LCD16_COMMD	;
316)   0F27 C9          		 RET	;
318)   0F28 3E 14       		@LCD16_MOVRIGHT: LD A,LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
319)   0F2A CD 29 0E    		 CALL LCD16_COMMD	;
320)   0F2D C9          		 RET	;
 16)   0F2E 	            		      LCD_RS EQU DEVTFT;  ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;  ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   0F2E 	            		      LCD_CS EQU DEVTFT+1;  ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;  ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   0F2E 7B          		   LD A,E	;
 32)   0F2F D3 11       		   OUT (LCD_CS),A	;
 37)   0F31 DB 11       		   IN A,(LCD_CS)	;
 38)   0F33 C9          		   RET	;
 45)   0F34 7A          		   LD A,D  	;
 46)   0F35 D3 11       		   OUT (LCD_CS),A	;
 47)   0F37 C9          		   RET	;
 53)   0F38 7A          		   LD A,D  	;
 54)   0F39 D3 10       		   OUT (LCD_RS),A	;
 55)   0F3B C9          		   RET	;
 62)   0F3C AF          		   XOR A	;
 63)   0F3D D3 10       		   OUT (LCD_RS),A  ;RS LOW = COMMAND BYTE      	;RS LOW = COMMAND BYTE
 64)   0F3F CD 34 0F    		   CALL LCD_WR_BUS	;
 65)   0F42 3E 01       		   LD A,1	;
 66)   0F44 D3 10       		   OUT (LCD_RS),A  ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   0F46 C9          		   RET	;
 71)   0F47 16 E2       		   LD D,0xE2         ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   0F49 CD 38 0F    		   CALL LCD_WR_COM   ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   0F4C 16 23       		   LD D,0x23 ;1E	;1E
 74)   0F4E CD 34 0F    		   CALL LCD_WR_DAT	;
 75)   0F51 16 02       		   LD D,0x02	;
 76)   0F53 CD 34 0F    		   CALL LCD_WR_DAT	;
 77)   0F56 16 54       		   LD D,0x54	;
 78)   0F58 CD 34 0F    		   CALL LCD_WR_DAT	;
 79)   0F5B 16 E0       		   LD D,0xE0         ; PLL enable    	; PLL enable
 80)   0F5D CD 38 0F    		   CALL LCD_WR_COM	;
 81)   0F60 16 01       		   LD D,0x01	;
 82)   0F62 CD 34 0F    		   CALL LCD_WR_DAT	;
 83)   0F65 06 0A       		   LD B,10        ;delay(10);	;delay(10);
 84)   0F67 CD 94 26    		   CALL DELAYMICRO	;
 85)   0F6A 16 E0       		   LD D,0xE0         ; PLL enable    	; PLL enable
 86)   0F6C CD 38 0F    		   CALL LCD_WR_COM   	;
 87)   0F6F 16 03       		   LD D,0x03	;
 88)   0F71 CD 34 0F    		   CALL LCD_WR_DAT	;
 89)   0F74 06 0A       		   LD B,10        ;delay(10);	;delay(10);
 90)   0F76 CD 94 26    		   CALL DELAYMICRO    	;
 92)   0F79 16 01       		   LD D,0x01         ; software reset  	; software reset
 93)   0F7B CD 38 0F    		   CALL LCD_WR_COM   	;
 94)   0F7E 06 14       		   LD B,20       ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   0F80 CD 94 26    		   CALL DELAYMICRO        	;
 96)   0F83 16 E6       		   LD D,0xE6         ;PLL setting for PCLK, depends on resolution  	;PLL setting for PCLK, depends on resolution
 97)   0F85 CD 38 0F    		   CALL LCD_WR_COM           	;
 98)   0F88 16 03       		   LD D,0x03	;
 99)   0F8A CD 34 0F    		   CALL LCD_WR_DAT   	;
100)   0F8D 16 33       		   LD D,0x33 ;FF	;FF
101)   0F8F CD 34 0F    		   CALL LCD_WR_DAT       	;
102)   0F92 16 33       		   LD D,0x33 ;FF	;FF
103)   0F94 CD 34 0F    		   CALL LCD_WR_DAT   	;
105)   0F97 16 B0       		   LD D,0xB0         ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   0F99 CD 38 0F    		   CALL LCD_WR_COM       	;
107)   0F9C 16 20       		   LD D,0x20	;
108)   0F9E CD 34 0F    		   CALL LCD_WR_DAT   	;
109)   0FA1 16 00       		   LD D,0x00	;
110)   0FA3 CD 34 0F    		   CALL LCD_WR_DAT       	;
111)   0FA6 16 03       		   LD D,0x03         ;Set HDP  799	;Set HDP  799
112)   0FA8 CD 34 0F    		   CALL LCD_WR_DAT   	;
113)   0FAB 16 1F       		   LD D,0x1F	;
114)   0FAD CD 34 0F    		   CALL LCD_WR_DAT   	;
115)   0FB0 16 01       		   LD D,0x01         ;Set VDP  479	;Set VDP  479
116)   0FB2 CD 34 0F    		   CALL LCD_WR_DAT   	;
117)   0FB5 16 DF       		   LD D,0xDF	;
118)   0FB7 CD 34 0F    		   CALL LCD_WR_DAT 	;
119)   0FBA 16 00       		   LD D,0x00	;
120)   0FBC CD 34 0F    		   CALL LCD_WR_DAT     	;
123)   0FBF 16 B4       		   LD D,0xB4         ;HSYNC	;HSYNC
124)   0FC1 CD 38 0F    		   CALL LCD_WR_COM       	;
125)   0FC4 16 04       		   LD D,0x04 ;03         ;Set HT 928	;03         ;Set HT 928
126)   0FC6 CD 34 0F    		   CALL LCD_WR_DAT   	;
127)   0FC9 16 1F       		   LD D,0x1F ;A0	;A0
128)   0FCB CD 34 0F    		   CALL LCD_WR_DAT       	;
129)   0FCE 16 00       		   LD D,0x00         ;Set HPS  46	;Set HPS  46
130)   0FD0 CD 34 0F    		   CALL LCD_WR_DAT   	;
131)   0FD3 16 D2       		   LD D,0xD2 ;2E	;2E
132)   0FD5 CD 34 0F    		   CALL LCD_WR_DAT   	;
133)   0FD8 16 00       		   LD D,0x00 ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   0FDA CD 34 0F    		   CALL LCD_WR_DAT   	;
135)   0FDD 16 00       		   LD D,0x00         ;Set LPS  15	;Set LPS  15
136)   0FDF CD 34 0F    		   CALL LCD_WR_DAT 	;
137)   0FE2 16 00       		   LD D,0x00 ;0F	;0F
138)   0FE4 CD 34 0F    		   CALL LCD_WR_DAT   	;
139)   0FE7 16 00       		   LD D,0x00	;
140)   0FE9 CD 34 0F    		   CALL LCD_WR_DAT     	;
142)   0FEC 16 B6       		   LD D,0xB6         ;VSYNC	;VSYNC
143)   0FEE CD 38 0F    		   CALL LCD_WR_COM       	;
144)   0FF1 16 02       		   LD D,0x02         ;Set VT 525	;Set VT 525
145)   0FF3 CD 34 0F    		   CALL LCD_WR_DAT   	;
146)   0FF6 16 0C       		   LD D,0x0C ;0D	;0D
147)   0FF8 CD 34 0F    		   CALL LCD_WR_DAT       	;
148)   0FFB 16 00       		   LD D,0x00         ;Set VPS  16	;Set VPS  16
149)   0FFD CD 34 0F    		   CALL LCD_WR_DAT   	;
150)   1000 16 22       		   LD D,0x22 ;10	;10
151)   1002 CD 34 0F    		   CALL LCD_WR_DAT   	;
152)   1005 16 00       		   LD D,0x00 ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   1007 CD 34 0F    		   CALL LCD_WR_DAT   	;
154)   100A 16 00       		   LD D,0x00         ;Set FPS  8	;Set FPS  8
155)   100C CD 34 0F    		   CALL LCD_WR_DAT 	;
156)   100F 16 00       		   LD D,0x00 ; 08	; 08
157)   1011 CD 34 0F    		   CALL LCD_WR_DAT   	;
159)   1014 16 B8       		   LD D,0xB8         	;
160)   1016 CD 38 0F    		   CALL LCD_WR_COM           	;
161)   1019 16 0F       		   LD D,0x0F ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   101B CD 34 0F    		   CALL LCD_WR_DAT         	;
163)   101E 16 01       		   LD D,0x01         ;GPIO0 normal	;GPIO0 normal
164)   1020 CD 34 0F    		   CALL LCD_WR_DAT 	;
166)   1023 16 BA       		   LD D,0xBA         	;
167)   1025 CD 38 0F    		   CALL LCD_WR_COM           	;
168)   1028 16 01       		   LD D,0x01 ;0F	;0F
169)   102A CD 34 0F    		   CALL LCD_WR_DAT   ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   102D 16 36       		   LD D,0x36         ;rotation	;rotation
172)   102F CD 38 0F    		   CALL LCD_WR_COM           	;
173)   1032 16 08       		   LD D,0x08 ;2A         	;2A
174)   1034 CD 34 0F    		   CALL LCD_WR_DAT         	;
176)   1037 16 F0       		   LD D,0xF0         ;pixel data interface	;pixel data interface
177)   1039 CD 38 0F    		   CALL LCD_WR_COM           	;
178)   103C 16 06       		   LD D,0x06         ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES 	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   103E CD 34 0F    		   CALL LCD_WR_DAT     	;
181)   1041 06 05       		   LD B,5       ;delay(5);	;delay(5);
182)   1043 CD 94 26    		   CALL DELAYMICRO        	;
184)   1046 16 BC       		   LD D,0xBC          ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   1048 CD 38 0F    		   CALL LCD_WR_COM           	;
186)   104B 16 40       		   LD D,0x40	;
187)   104D CD 34 0F    		   CALL LCD_WR_DAT   	;
188)   1050 16 80       		   LD D,0x80	;
189)   1052 CD 34 0F    		   CALL LCD_WR_DAT   	;
190)   1055 16 40       		   LD D,0x40	;
191)   1057 CD 34 0F    		   CALL LCD_WR_DAT   	;
192)   105A 16 01       		   LD D,0x01	;
193)   105C CD 34 0F    		   CALL LCD_WR_DAT       	;
194)   105F 06 05       		   LD B,5       ;delay(5);	;delay(5);
195)   1061 CD 94 26    		   CALL DELAYMICRO  	;
197)   1064 16 35       		   LD D,0x35         ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   1066 CD 38 0F    		   CALL LCD_WR_COM     	;
199)   1069 16 00       		   LD D,0x00         ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   106B CD 34 0F    		   CALL LCD_WR_DAT     	;
202)   106E 16 29       		   LD D,0x29         ;display on 	;display on
203)   1070 CD 38 0F    		   CALL LCD_WR_COM       	;
204)   1073 16 BE       		   LD D,0xBE         ;set PWM for B/L	;set PWM for B/L
205)   1075 CD 38 0F    		   CALL LCD_WR_COM                 	;
206)   1078 16 06       		   LD D,0x06	;
207)   107A CD 34 0F    		   CALL LCD_WR_DAT                 	;
208)   107D 16 F0       		   LD D,0xF0         	;
209)   107F CD 34 0F    		   CALL LCD_WR_DAT   	;
210)   1082 16 01       		   LD D,0x01         	;
211)   1084 CD 34 0F    		   CALL LCD_WR_DAT   	;
212)   1087 16 F0       		   LD D,0xF0         	;
213)   1089 CD 34 0F    		   CALL LCD_WR_DAT   	;
214)   108C 16 00       		   LD D,0x00         	;
215)   108E CD 34 0F    		   CALL LCD_WR_DAT   	;
216)   1091 16 00       		   LD D,0x00         	;
217)   1093 CD 34 0F    		   CALL LCD_WR_DAT                   	;
219)   1096 16 D0       		   LD D,0xD0         	;
220)   1098 CD 38 0F    		   CALL LCD_WR_COM                 	;
221)   109B 16 0D       		   LD D,0x0D         	;
222)   109D CD 34 0F    		   CALL LCD_WR_DAT         	;
225)   10A0 21 00 00    		   LD HL,0	;
226)   10A3 E5          		   PUSH HL	;
227)   10A4 E5          		   PUSH HL	;
228)   10A5 21 1F 03    		   LD HL,799	;
229)   10A8 E5          		   PUSH HL	;
230)   10A9 21 DF 01    		   LD HL,479	;
231)   10AC E5          		   PUSH HL	;
232)   10AD CD B1 10    		   CALL LCD_SETXY	;
233)   10B0 C9          		   RET	;
250)   10B1 DD 21 02 00 		   LD IX,2	;
251)   10B5 DD 39       		   ADD IX,SP         	;
252)   10B7 16 2A       		   LD D,0x2A         ;SEND IX PARAMS	;SEND IX PARAMS
253)   10B9 CD 38 0F    		   CALL LCD_WR_COM    	;
254)   10BC DD 56 07    		   LD D,(IX+7)	;
255)   10BF CD 34 0F    		   CALL LCD_WR_DAT	;
256)   10C2 DD 56 06    		   LD D,(IX+6)	;
257)   10C5 CD 34 0F    		   CALL LCD_WR_DAT	;
258)   10C8 DD 56 03    		   LD D,(IX+3)	;
259)   10CB CD 34 0F    		   CALL LCD_WR_DAT	;
260)   10CE DD 56 02    		   LD D,(IX+2)	;
261)   10D1 CD 34 0F    		   CALL LCD_WR_DAT       	;
262)   10D4 16 2B       		   LD D,0x2B         ;SEND Y PARAMS	;SEND Y PARAMS
263)   10D6 CD 38 0F    		   CALL LCD_WR_COM   	;
264)   10D9 DD 56 05    		   LD D,(IX+5)	;
265)   10DC CD 34 0F    		   CALL LCD_WR_DAT	;
266)   10DF DD 56 04    		   LD D,(IX+4)	;
267)   10E2 CD 34 0F    		   CALL LCD_WR_DAT	;
268)   10E5 DD 56 01    		   LD D,(IX+1)	;
269)   10E8 CD 34 0F    		   CALL LCD_WR_DAT	;
270)   10EB DD 56 00    		   LD D,(IX)	;
271)   10EE CD 34 0F    		   CALL LCD_WR_DAT       	;
272)   10F1 16 2C       		   LD D,0x2C         ;SEND DATA	;SEND DATA
273)   10F3 CD 38 0F    		   CALL LCD_WR_COM   	;
274)   10F6 D1          		   POP DE	;
275)   10F7 21 08 00    		   LD HL,4*2       ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   10FA 39          		   ADD HL,SP	;
277)   10FB F9          		   LD SP,HL	;
278)   10FC EB          		   EX DE,HL	;
279)   10FD E9          		   JP (HL)        	;
285)   10FE 54          		   LD D,H        	;
286)   10FF CD 34 0F    		   CALL LCD_WR_DAT 	;
287)   1102 55          		   LD D,L	;
288)   1103 CD 34 0F    		   CALL LCD_WR_DAT 	;
289)   1106 C9          		   RET	;
294)   1107 16 2E       		   LD D,0x2E         ;READ DATA	;READ DATA
295)   1109 CD 38 0F    		   CALL LCD_WR_COM           	;
296)   110C CD 31 0F    		@LCD_GTPXL:   CALL LCD_RD_DAT 	;
297)   110F 67          		   LD H,A	;
298)   1110 CD 31 0F    		   CALL LCD_RD_DAT 	;
299)   1113 6F          		   LD L,A	;
300)   1114 C9          		   RET    	;
306)   1115 DD E5       		@LCD_READPIXEL: PUSH IX ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   1117 DD 21 04 00 		   LD IX,4    ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   111B DD 39       		   ADD IX,SP    	;
309)   111D DD 66 03    		   LD H,(IX+3)   ;X	;X
310)   1120 DD 6E 02    		   LD L,(IX+2)   ;X	;X
311)   1123 DD 56 01    		   LD D,(IX+1) ;Y	;Y
312)   1126 DD 5E 00    		   LD E,(IX) ;Y	;Y
313)   1129 E5          		   PUSH HL	;
314)   112A D5          		   PUSH DE	;
315)   112B E5          		   PUSH HL	;
316)   112C D5          		   PUSH DE	;
317)   112D CD B1 10    		   CALL LCD_SETXY	;
318)   1130 CD 07 11    		   CALL LCD_GETPIXEL	;
319)   1133 E5          		   PUSH HL    	;
320)   1134 CD 66 11    		   CALL LCD_CLRXY	;
321)   1137 D1          		   POP DE  ;RESULT COLOR	;RESULT COLOR
322)   1138 DD E1       		   POP IX	;
323)   113A C1          		   POP BC  ;RET ADDR	;RET ADDR
324)   113B 21 04 00    		   LD HL,2*2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   113E 39          		   ADD HL,SP	;
326)   113F F9          		   LD SP,HL	;
327)   1140 EB          		   EX DE,HL ;HL RESULT	;HL RESULT
328)   1141 C5          		   PUSH BC  ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   1142 C9          		   RET	;
333)   1143 DD 21 02 00 		   LD IX,2     ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   1147 DD 39       		   ADD IX,SP	;
335)   1149 DD 66 03    		   LD H,(IX+3)   ;X	;X
336)   114C DD 6E 02    		   LD L,(IX+2)   ;X	;X
337)   114F DD 56 01    		   LD D,(IX+1) ;Y	;Y
338)   1152 DD 5E 00    		   LD E,(IX) ;Y	;Y
339)   1155 E5          		   PUSH HL	;
340)   1156 D5          		   PUSH DE	;
341)   1157 E5          		   PUSH HL	;
342)   1158 D5          		   PUSH DE	;
343)   1159 CD B1 10    		   CALL LCD_SETXY	;
344)   115C 2A 01 83    		   LD HL,(FCOLOR)	;
345)   115F CD FE 10    		   CALL LCD_SETPIXEL	;
346)   1162 CD 66 11    		   CALL LCD_CLRXY	;
347)   1165 C9          		   RET	;
350)   1166 21 00 00    		    LD HL,0	;
351)   1169 E5          		    PUSH HL	;
352)   116A E5          		    PUSH HL	;
353)   116B 21 1F 03    		    LD HL,LCD_WIDTH	;
354)   116E E5          		    PUSH HL	;
355)   116F 21 DF 01    		    LD HL,LCD_HEIGHT	;
356)   1172 E5          		    PUSH HL	;
357)   1173 CD B1 10    		    CALL LCD_SETXY	;
358)   1176 C9          		    RET	;
362)   1177 DD 21 02 00 		     LD IX,2	;
363)   117B DD 39       		     ADD IX,SP	;
364)   117D DD 66 05    		     LD H,(IX+5)   ;X  	;X
365)   1180 DD 6E 04    		     LD L,(IX+4)   ;X	;X
366)   1183 DD 56 03    		     LD D,(IX+3)   ;Y	;Y
367)   1186 DD 5E 02    		     LD E,(IX+2)   ;Y	;Y
368)   1189 DD 46 01    		     LD B,(IX+1)   ;LENGTH	;LENGTH
369)   118C DD 4E 00    		     LD C,(IX)     ;LENGTH	;LENGTH
372)   118F E5          		     PUSH HL	;
373)   1190 21 00 00    		     LD HL,0	;
374)   1193 B7          		     OR A           ;CLEAR CARRY	;CLEAR CARRY
375)   1194 ED 42       		     SBC HL,BC      ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
376)   1196 38 0A       		     JR C,POSH1	;
377)   1198 AF          		     XOR A          ;l=-l	;l=-l
378)   1199 91          		  SUB C	;
379)   119A 4F          		  LD C,A	;
380)   119B 9F          		  SBC A,A	;
381)   119C 90          		  SUB B	;
382)   119D 47          		  LD B,A	;
383)   119E E1          		  POP HL	;
384)   119F ED 42       		     SBC HL,BC       ;x -= l;	;x -= l;
385)   11A1 E5          		     PUSH HL                    	;
386)   11A2 E1          		POSH1: POP HL	;
387)   11A3 E5          		  PUSH HL	;
388)   11A4 D5          		     PUSH DE	;
389)   11A5 09          		     ADD HL,BC	;
390)   11A6 E5          		     PUSH HL	;
391)   11A7 D5          		     PUSH DE	;
392)   11A8 CD B1 10    		     CALL LCD_SETXY   ;setXY(x, y, x+l, y);	;setXY(x, y, x+l, y);
393)   11AB 2A 01 83    		     LD HL,(FCOLOR)    	;
394)   11AE CD FE 10    		NXTH1: CALL LCD_SETPIXEL	;
395)   11B1 0B          		     DEC BC	;
396)   11B2 79          		     LD A,C	;
397)   11B3 B0          		     OR B	;
398)   11B4 20 F8       		     JR NZ, NXTH1     	;
399)   11B6 CD 66 11    		     CALL LCD_CLRXY	;
400)   11B9 D1          		     POP DE	;
401)   11BA 21 06 00    		     LD HL,6       ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
402)   11BD 39          		     ADD HL,SP	;
403)   11BE F9          		     LD SP,HL      	;
404)   11BF EB          		     EX DE,HL	;
405)   11C0 E9          		     JP (HL)	;
411)   11C1 DD 21 02 00 		     LD IX,2	;
412)   11C5 DD 39       		     ADD IX,SP	;
413)   11C7 DD 56 05    		     LD D,(IX+5)   ;X  	;X
414)   11CA DD 5E 04    		     LD E,(IX+4)   ;X	;X
415)   11CD DD 66 03    		     LD H,(IX+3)   ;Y	;Y
416)   11D0 DD 6E 02    		     LD L,(IX+2)   ;Y	;Y
417)   11D3 DD 46 01    		     LD B,(IX+1)   ;LENGTH	;LENGTH
418)   11D6 DD 4E 00    		     LD C,(IX)     ;LENGTH     	;LENGTH
419)   11D9 E5          		     PUSH HL	;
420)   11DA 21 00 00    		     LD HL,0	;
421)   11DD B7          		     OR A           ;CLEAR CARRY	;CLEAR CARRY
422)   11DE ED 42       		     SBC HL,BC      ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
423)   11E0 38 0A       		     JR C,POSV1	;
424)   11E2 AF          		     XOR A          ;l=-l	;l=-l
425)   11E3 91          		  SUB C	;
426)   11E4 4F          		  LD C,A	;
427)   11E5 9F          		  SBC A,A	;
428)   11E6 90          		  SUB B	;
429)   11E7 47          		  LD B,A	;
430)   11E8 E1          		  POP HL	;
431)   11E9 ED 42       		     SBC HL,BC       ;Y -= l;	;Y -= l;
432)   11EB E5          		     PUSH HL                   	;
433)   11EC E1          		POSV1: POP HL	;
434)   11ED D5          		  PUSH DE	;
435)   11EE E5          		     PUSH HL	;
436)   11EF D5          		     PUSH DE	;
437)   11F0 09          		     ADD HL,BC	;
438)   11F1 E5          		     PUSH HL	;
439)   11F2 CD B1 10    		     CALL LCD_SETXY   ;setXY(x, y, x, y+l);	;setXY(x, y, x, y+l);
440)   11F5 2A 01 83    		     LD HL,(FCOLOR)    	;
441)   11F8 CD FE 10    		NXTV1: CALL LCD_SETPIXEL	;
442)   11FB 0B          		     DEC BC	;
443)   11FC 79          		     LD A,C	;
444)   11FD B0          		     OR B	;
445)   11FE 20 F8       		     JR NZ, NXTV1     	;
446)   1200 CD 66 11    		     CALL LCD_CLRXY	;
447)   1203 D1          		     POP DE	;
448)   1204 21 06 00    		     LD HL,6       ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
449)   1207 39          		     ADD HL,SP	;
450)   1208 F9          		     LD SP,HL	;
451)   1209 EB          		     EX DE,HL	;
452)   120A E9          		     JP (HL)	;
456)   120B DD 21 02 00 		     LD IX,2	;
457)   120F DD 39       		     ADD IX,SP	;
467)   1211 DD 66 05    		     LD H,(IX+5)   ;Y1	;Y1
468)   1214 DD 6E 04    		     LD L,(IX+4)   ;Y1	;Y1
469)   1217 DD 56 01    		     LD D,(IX+1)   ;Y2	;Y2
470)   121A DD 5E 00    		     LD E,(IX)     ;Y2	;Y2
471)   121D B7          		     OR A	;
472)   121E ED 52       		     SBC HL,DE	;
473)   1220 20 17       		     JR NZ,YNOTEQ	;
475)   1222 DD 46 07    		     LD B,(IX+7)   ;X1	;X1
476)   1225 DD 4E 06    		     LD C,(IX+6)   ;X1	;X1
477)   1228 C5          		     PUSH BC       ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
478)   1229 D5          		     PUSH DE    ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
479)   122A DD 66 03    		     LD H,(IX+3)   ;X2	;X2
480)   122D DD 6E 02    		     LD L,(IX+2)   ;X2       	;X2
481)   1230 ED 42       		     SBC HL,BC     ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
482)   1232 E5          		     PUSH HL       ;LENGTH 3RD PARAM ON STACK 	;LENGTH 3RD PARAM ON STACK
483)   1233 CD 77 11    		     CALL LCD_DRAWHLINE	;
484)   1236 C3 E6 13    		     JP DLNEX	;
486)   1239 DD 66 07    		     LD H,(IX+7)   ;X1	;X1
487)   123C DD 6E 06    		     LD L,(IX+6)   ;X1	;X1
488)   123F DD 56 03    		     LD D,(IX+3)   ;X2	;X2
489)   1242 DD 5E 02    		     LD E,(IX+2)   ;X2 	;X2
490)   1245 B7          		     OR A	;
491)   1246 ED 52       		     SBC HL,DE	;
492)   1248 20 17       		     JR NZ,XNOTEQ	;
494)   124A D5          		     PUSH DE       ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
495)   124B DD 46 05    		     LD B,(IX+5)   ;Y1	;Y1
496)   124E DD 4E 04    		     LD C,(IX+4)   ;Y1	;Y1
497)   1251 C5          		     PUSH BC       ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
498)   1252 DD 66 01    		     LD H,(IX+1)   ;Y2	;Y2
499)   1255 DD 6E 00    		     LD L,(IX)   ;Y2       	;Y2
500)   1258 ED 42       		     SBC HL,BC     ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
501)   125A E5          		     PUSH HL       ;LENGTH 3RD PARAM ON STACK 	;LENGTH 3RD PARAM ON STACK
502)   125B CD C1 11    		     CALL LCD_DRAWVLINE	;
503)   125E C3 E6 13    		     JP DLNEX	;
506)   1261 38 04       		     JR C,X2GTX1	;
508)   1263 AF          		     XOR A  	;
509)   1264 3D          		     DEC A  ;XSTEP=-1	;XSTEP=-1
510)   1265 18 0D       		     JR DLNXT1	;
513)   1267 D5          		     PUSH DE	;
514)   1268 E1          		     POP HL	;
515)   1269 DD 56 07    		     LD D,(IX+7)   ;X1	;X1
516)   126C DD 5E 06    		     LD E,(IX+6)   ;X1 	;X1
517)   126F B7          		     OR A     	;
518)   1270 ED 52       		     SBC HL,DE     ;X2-X1 ON HL	;X2-X1 ON HL
520)   1272 3E 01       		     LD A,1        ;XSTEP=1	;XSTEP=1
522)   1274 06 00       		     LD B,0	;
523)   1276 0E 00       		     LD C,0	;
524)   1278 C5          		     PUSH BC       ;T	;T
525)   1279 E5          		     PUSH HL       ;DX	;DX
526)   127A FE 01       		     CP 1	;
527)   127C 28 02       		     JR Z,DLXMINUS1	;
528)   127E 06 FF       		     LD B,0XFF	;
529)   1280 4F          		DLXMINUS1:LD C,A     	;
530)   1281 C5          		     PUSH BC       ;XSTEP	;XSTEP
531)   1282 DD 66 05    		     LD H,(IX+5)   ;Y1	;Y1
532)   1285 DD 6E 04    		     LD L,(IX+4)   ;Y1	;Y1
533)   1288 DD 56 01    		     LD D,(IX+1)   ;Y2	;Y2
534)   128B DD 5E 00    		     LD E,(IX)     ;Y2      	;Y2
535)   128E B7          		     OR A	;
536)   128F ED 52       		     SBC HL,DE	;
537)   1291 38 04       		     JR C,Y2GTY1  ;HL=Y1-Y2	;HL=Y1-Y2
538)   1293 AF          		     XOR A	;
539)   1294 3D          		     DEC A         ;YSTEP=-1	;YSTEP=-1
540)   1295 18 0F       		     JR DLNXT2	;
543)   1297 D5          		     PUSH DE	;
544)   1298 E1          		     POP HL	;
545)   1299 DD 56 05    		     LD D,(IX+5)   ;Y1	;Y1
546)   129C DD 5E 04    		     LD E,(IX+4)   ;Y1  	;Y1
547)   129F B7          		     OR A	;
548)   12A0 ED 52       		     SBC HL,DE  ;HL=Y2-Y1    HL=DY      	;HL=Y2-Y1    HL=DY
549)   12A2 06 00       		     LD B,0	;
550)   12A4 3E 01       		     LD A,1        ;YSTEP=1	;YSTEP=1
552)   12A6 FE 01       		     CP 1	;
553)   12A8 28 02       		     JR Z,DLYMINUS1	;
554)   12AA 06 FF       		     LD B,0XFF	;
556)   12AC 4F          		     LD C,A      	;
557)   12AD E5          		     PUSH HL       ;DY	;DY
558)   12AE C5          		     PUSH BC       ;YSTEP   	;YSTEP
559)   12AF FD 21 00 00 		     LD IY,0	;
560)   12B3 FD 39       		     ADD IY,SP	;
575)   12B5 FD 56 07    		     LD D,(IY+7)    ;DX	;DX
576)   12B8 FD 5E 06    		     LD E,(IY+6)    ;DX	;DX
577)   12BB B7          		     OR A	;
578)   12BC ED 52       		     SBC HL,DE      ;DY-DX	;DY-DX
579)   12BE DA 53 13    		     JP C,DXGTDY	;
580)   12C1 CA 53 13    		     JP Z,DXGTDY	;
582)   12C4 19          		     ADD HL,DE      ;HL=DY	;HL=DY
583)   12C5 44          		     LD B,H	;
584)   12C6 4D          		     LD C,L	;
585)   12C7 CB 38       		     SRL B	;
586)   12C9 CB 19       		     RR C           ;(dy >> 1)	;(dy >> 1)
587)   12CB 21 00 00    		     LD HL,0	;
588)   12CE ED 42       		     SBC HL,BC      ;t = - (dy >> 1);	;t = - (dy >> 1);
589)   12D0 FD 74 09    		     LD (IY+9),H    ;SAVE T	;SAVE T
590)   12D3 FD 75 08    		     LD (IY+8),L    ;SAVE T	;SAVE T
592)   12D6 DD 56 05    		     LD D,(IX+5)   ;ROW	;ROW
593)   12D9 DD 5E 04    		     LD E,(IX+4)   ;ROW=Y1	;ROW=Y1
594)   12DC DD 66 07    		     LD H,(IX+7)   ;COL	;COL
595)   12DF DD 6E 06    		     LD L,(IX+6)   ;COL=X1	;COL=X1
596)   12E2 D5          		     PUSH DE	;
597)   12E3 DD E5       		     PUSH IX	;
598)   12E5 E5          		     PUSH HL	;
599)   12E6 D5          		     PUSH DE	;
600)   12E7 E5          		     PUSH HL	;
601)   12E8 D5          		     PUSH DE	;
602)   12E9 CD B1 10    		     CALL LCD_SETXY	;
603)   12EC 2A 01 83    		     LD HL,(FCOLOR)    	;
604)   12EF CD FE 10    		     CALL LCD_SETPIXEL	;
605)   12F2 DD E1       		     POP IX	;
606)   12F4 D1          		     POP DE	;
607)   12F5 DD 66 01    		     LD H,(IX+1)   ;Y2	;Y2
608)   12F8 DD 6E 00    		     LD L,(IX)     ;Y2 	;Y2
609)   12FB ED 52       		     SBC HL,DE     ; ROW=Y2	; ROW=Y2
610)   12FD CA E1 13    		     JP Z,DLEXIT	;
611)   1300 FD 46 01    		     LD B,(IY+1)   ;YSTEP HI	;YSTEP HI
612)   1303 FD 4E 00    		     LD C,(IY)     ;YSTEP LO	;YSTEP LO
613)   1306 EB          		     EX DE,HL	;
614)   1307 09          		     ADD HL,BC     ;row += ystep;	;row += ystep;
615)   1308 DD 74 05    		     LD (IX+5),H   ;SAVE ROW	;SAVE ROW
616)   130B DD 75 04    		     LD (IX+4),L   ;   	;
618)   130E FD 56 09    		     LD D,(IY+9)   ; T	; T
619)   1311 FD 5E 08    		     LD E,(IY+8)   ; T      	; T
620)   1314 FD 66 07    		     LD H,(IY+7)   ;DX	;DX
621)   1317 FD 6E 06    		     LD L,(IY+6)   ;DX	;DX
622)   131A 19          		     ADD HL,DE	;
623)   131B FD 74 09    		     LD (IY+9),H   ;t += dx;	;t += dx;
624)   131E FD 75 08    		     LD (IY+8),L	;
625)   1321 EB          		     EX DE,HL	;
626)   1322 21 00 80    		     LD HL,$8000	;
627)   1325 ED 52       		     SBC HL,DE     ;CHECK IF T<0	;CHECK IF T<0
628)   1327 38 AD       		     JR C,DLAGN1   ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
629)   1329 FD 46 05    		     LD B,(IY+5)   ;XSTEP HI	;XSTEP HI
630)   132C FD 4E 04    		     LD C,(IY+4)   ;XSTEP LO	;XSTEP LO
631)   132F DD 66 07    		     LD H,(IX+7)   ;COL HI	;COL HI
632)   1332 DD 6E 06    		     LD L,(IX+6)   ;COL LO	;COL LO
633)   1335 09          		     ADD HL,BC     ;col += xstep;	;col += xstep;
634)   1336 DD 74 07    		     LD (IX+7),H   ;SAVE COL	;SAVE COL
635)   1339 DD 75 06    		     LD (IX+6),L   ;         	;
637)   133C FD 66 09    		     LD H,(IY+9)   ; T	; T
638)   133F FD 6E 08    		     LD L,(IY+8)   ; T      	; T
639)   1342 FD 46 03    		     LD B,(IY+3)   ;DY	;DY
640)   1345 FD 4E 02    		     LD C,(IY+2)   ;DY	;DY
641)   1348 ED 42       		     SBC HL,BC	;
642)   134A FD 74 09    		     LD (IY+9),H   ;t -= dY;	;t -= dY;
643)   134D FD 75 08    		     LD (IY+8),L       	;
644)   1350 C3 D6 12    		     JP DLAGN1	;
646)   1353 19          		     ADD HL,DE      ;HL=DY DE=DX	;HL=DY DE=DX
647)   1354 42          		     LD B,D	;
648)   1355 4B          		     LD C,E	;
649)   1356 CB 38       		     SRL B	;
650)   1358 CB 19       		     RR C           ;(dX >> 1)	;(dX >> 1)
651)   135A 21 00 00    		     LD HL,0	;
652)   135D ED 42       		     SBC HL,BC      ;t = - (dX >> 1);	;t = - (dX >> 1);
653)   135F FD 74 09    		     LD (IY+9),H    ;SAVE T	;SAVE T
654)   1362 FD 75 08    		     LD (IY+8),L    ;SAVE T	;SAVE T
656)   1365 DD 56 05    		     LD D,(IX+5)   ;ROW	;ROW
657)   1368 DD 5E 04    		     LD E,(IX+4)   ;ROW=Y1	;ROW=Y1
658)   136B DD 66 07    		     LD H,(IX+7)   ;COL	;COL
659)   136E DD 6E 06    		     LD L,(IX+6)   ;COL=X1	;COL=X1
660)   1371 E5          		     PUSH HL       ;SAVE COL	;SAVE COL
661)   1372 DD E5       		     PUSH IX	;
662)   1374 E5          		     PUSH HL	;
663)   1375 D5          		     PUSH DE	;
664)   1376 E5          		     PUSH HL	;
665)   1377 D5          		     PUSH DE	;
666)   1378 CD B1 10    		     CALL LCD_SETXY	;
667)   137B 2A 01 83    		     LD HL,(FCOLOR)    	;
668)   137E CD FE 10    		     CALL LCD_SETPIXEL	;
669)   1381 DD E1       		     POP IX	;
670)   1383 D1          		     POP DE        ;RETRIEVE COL	;RETRIEVE COL
671)   1384 DD 66 03    		     LD H,(IX+3)   ;X2	;X2
672)   1387 DD 6E 02    		     LD L,(IX+2)   ;X2 	;X2
673)   138A ED 52       		     SBC HL,DE     ; COL=X2?	; COL=X2?
674)   138C 28 53       		     JR Z,DLEXIT	;
675)   138E EB          		     EX DE,HL      ;HL=COL	;HL=COL
676)   138F FD 46 05    		     LD B,(IY+5)   ;XSTEP HI	;XSTEP HI
677)   1392 FD 4E 04    		     LD C,(IY+4)   ;XSTEP LO	;XSTEP LO
678)   1395 09          		     ADD HL,BC     ;col += xstep;	;col += xstep;
679)   1396 DD 74 07    		     LD (IX+7),H   ;SAVE COL	;SAVE COL
680)   1399 DD 75 06    		     LD (IX+6),L   ;   	;
681)   139C FD 56 09    		     LD D,(IY+9)   ; T	; T
682)   139F FD 5E 08    		     LD E,(IY+8)   ; T      	; T
683)   13A2 FD 66 03    		     LD H,(IY+3)   ;DY	;DY
684)   13A5 FD 6E 02    		     LD L,(IY+2)   ;DY	;DY
685)   13A8 19          		     ADD HL,DE	;
686)   13A9 FD 74 09    		     LD (IY+9),H   ;t += dY;	;t += dY;
687)   13AC FD 75 08    		     LD (IY+8),L	;
688)   13AF EB          		     EX DE,HL      ;T=DE	;T=DE
689)   13B0 21 00 80    		     LD HL,$8000  	;
690)   13B3 ED 52       		     SBC HL,DE    ;CHECK IF T<0	;CHECK IF T<0
691)   13B5 38 AE       		     JR C,DLAGN2  ;CARRY SET IF NEGATIVE    	;CARRY SET IF NEGATIVE
692)   13B7 FD 46 01    		     LD B,(IY+1)   ;YSTEP HI	;YSTEP HI
693)   13BA FD 4E 00    		     LD C,(IY)     ;YSTEP LO	;YSTEP LO
694)   13BD DD 66 05    		     LD H,(IX+5)   ;ROW HI	;ROW HI
695)   13C0 DD 6E 04    		     LD L,(IX+4)   ;ROW LO	;ROW LO
696)   13C3 09          		     ADD HL,BC     ;ROW += Ystep;	;ROW += Ystep;
697)   13C4 DD 74 05    		     LD (IX+5),H   ;SAVE COL	;SAVE COL
698)   13C7 DD 75 04    		     LD (IX+4),L   ;         	;
700)   13CA FD 66 09    		     LD H,(IY+9)   ; T	; T
701)   13CD FD 6E 08    		     LD L,(IY+8)   ; T      	; T
702)   13D0 FD 46 07    		     LD B,(IY+7)   ;DX	;DX
703)   13D3 FD 4E 06    		     LD C,(IY+6)   ;DX	;DX
704)   13D6 ED 42       		     SBC HL,BC	;
705)   13D8 FD 74 09    		     LD (IY+9),H   ;t -= dX;	;t -= dX;
706)   13DB FD 75 08    		     LD (IY+8),L       	;
707)   13DE C3 65 13    		     JP DLAGN2	;
710)   13E1 21 0A 00    		     LD HL,5*2     ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
711)   13E4 39          		     ADD HL,SP     ;	;
712)   13E5 F9          		     LD SP,HL           	;
713)   13E6 D1          		DLNEX:POP DE       ;RET ADDR	;RET ADDR
714)   13E7 21 08 00    		     LD HL,4*2       ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
715)   13EA 39          		     ADD HL,SP	;
716)   13EB F9          		     LD SP,HL     	;
717)   13EC EB          		     EX DE,HL	;
718)   13ED E9          		     JP (HL)	;
723)   13EE C5          		@PLOTP:PUSH BC      ;SAVE BC	;SAVE BC
724)   13EF DD E5       		     PUSH IX	;
726)   13F1 D5          		     PUSH DE	;
727)   13F2 E5          		     PUSH HL	;
728)   13F3 D5          		     PUSH DE	;
729)   13F4 E5          		     PUSH HL	;
730)   13F5 CD B1 10    		     CALL LCD_SETXY      	;
731)   13F8 2A 01 83    		     LD HL,(FCOLOR)	;
732)   13FB CD FE 10    		     CALL LCD_SETPIXEL  	;
734)   13FE DD E1       		     POP IX	;
735)   1400 C1          		     POP BC        ;RESTORE BC	;RESTORE BC
736)   1401 C9          		     RET   	;
741)   1402 E1          		     POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
742)   1403 D5          		     PUSH DE        ;F VAR 	;F VAR
743)   1404 D5          		     PUSH DE        ;DDF_X 	;DDF_X
744)   1405 D5          		     PUSH DE        ;DDF_Y	;DDF_Y
745)   1406 D5          		     PUSH DE        ;X1	;X1
746)   1407 D5          		     PUSH DE        ;Y1	;Y1
747)   1408 E5          		     PUSH HL        ;RET ADDR	;RET ADDR
748)   1409 DD 21 02 00 		     LD IX,2	;
749)   140D DD 39       		     ADD IX,SP	;
767)   140F AF          		     XOR A	;
768)   1410 DD 56 0B    		     LD D,(IX+11)    ;R	;R
769)   1413 DD 5E 0A    		     LD E,(IX+10)    ;R	;R
770)   1416 DD 72 01    		     LD (IX+1),D     ;Y1=R	;Y1=R
771)   1419 DD 73 00    		     LD (IX+0),E	;
772)   141C 21 01 00    		     LD HL,1	;
773)   141F DD 74 07    		     LD (IX+7),H     ;DDF_X=1	;DDF_X=1
774)   1422 DD 75 06    		     LD (IX+6),L	;
775)   1425 DD 74 03    		     LD (IX+3),H     ;X1=0	;X1=0
776)   1428 DD 74 02    		     LD (IX+2),H      	;
777)   142B ED 52       		     SBC HL,DE	;
778)   142D DD 74 09    		     LD (IX+9),H     ;F	;F
779)   1430 DD 75 08    		     LD (IX+8),L     ;F	;F
781)   1433 EB          		     EX DE,HL        ;HL=RADIUS	;HL=RADIUS
782)   1434 29          		     ADD HL,HL       ;2*R	;2*R
783)   1435 EB          		     EX DE,HL	;
784)   1436 21 00 00    		     LD HL,0	;
785)   1439 ED 52       		     SBC HL,DE          ;-2*R	;-2*R
786)   143B DD 74 05    		     LD (IX+5),H	;
787)   143E DD 75 04    		     LD (IX+4),L     ;DDF_Y	;DDF_Y
789)   1441 DD 66 0D    		     LD H,(IX+13)    ;Y	;Y
790)   1444 DD 6E 0C    		     LD L,(IX+12)	;
791)   1447 E5          		     PUSH HL         ;SAVE Y	;SAVE Y
792)   1448 DD 56 0B    		     LD D,(IX+11)    ;R	;R
793)   144B DD 5E 0A    		     LD E,(IX+10)	;
794)   144E D5          		     PUSH DE         ;SAVE R	;SAVE R
795)   144F 19          		     ADD HL,DE       ;Y+R      	;Y+R
796)   1450 DD 56 0F    		     LD D,(IX+15)    ;X	;X
797)   1453 DD 5E 0E    		     LD E,(IX+14)	;
798)   1456 D5          		     PUSH DE         ;SAVE X	;SAVE X
800)   1457 CD EE 13    		     CALL PLOTP      	;
802)   145A D1          		     POP DE        ;GET X	;GET X
803)   145B C1          		     POP BC        ;GET R	;GET R
804)   145C E1          		     POP HL        ;GET Y	;GET Y
805)   145D E5          		     PUSH HL       ;SAVE VARS	;SAVE VARS
806)   145E C5          		     PUSH BC	;
807)   145F D5          		     PUSH DE	;
808)   1460 AF          		     XOR A	;
809)   1461 ED 42       		     SBC HL,BC     ;	;
811)   1463 CD EE 13    		     CALL PLOTP      	;
813)   1466 E1          		    POP HL        ;GET X	;GET X
814)   1467 C1          		    POP BC        ;GET R	;GET R
815)   1468 D1          		    POP DE        ;GET Y	;GET Y
816)   1469 D5          		    PUSH DE       ;SAVE VARS	;SAVE VARS
817)   146A C5          		    PUSH BC	;
818)   146B E5          		    PUSH HL	;
819)   146C AF          		    XOR A	;
820)   146D ED 4A       		    ADC HL,BC	;
821)   146F EB          		    EX DE,HL	;
823)   1470 CD EE 13    		     CALL PLOTP      	;
825)   1473 E1          		    POP HL        ;GET X	;GET X
826)   1474 C1          		    POP BC        ;GET R	;GET R
827)   1475 D1          		    POP DE        ;GET Y	;GET Y
828)   1476 AF          		    XOR A	;
829)   1477 ED 42       		    SBC HL,BC	;
830)   1479 EB          		    EX DE,HL	;
832)   147A CD EE 13    		     CALL PLOTP      	;
835)   147D DD 66 03    		CIRC_AGN:LD H,(IX+3)   ;X1	;X1
836)   1480 DD 6E 02    		     LD L,(IX+2)    ;X1	;X1
837)   1483 DD 56 01    		     LD D,(IX+1)    ;Y1	;Y1
838)   1486 DD 5E 00    		     LD E,(IX+0)    ;Y1	;Y1
839)   1489 AF          		     XOR A	;
840)   148A ED 52       		     SBC HL,DE	;
841)   148C D2 7B 15    		     JP NC,CIRC_EXIT	;
843)   148F 19          		    ADD HL,DE	;
844)   1490 E5          		    PUSH HL        ;SAVE X1	;SAVE X1
845)   1491 D5          		    PUSH DE        ;SAVE Y1	;SAVE Y1
846)   1492 21 00 00    		    LD HL,0	;
847)   1495 AF          		    XOR A	;
850)   1496 DD 7E 09    		    LD A,(IX+9)     ;F HI BYTE	;F HI BYTE
851)   1499 FE 50       		    CP 80	;
852)   149B 30 26       		    JR NC,CIRC_SKIP	;
853)   149D 28 24       		    JR Z,CIRC_SKIP	;
857)   149F D1          		    POP DE        ;Y1	;Y1
858)   14A0 1B          		    DEC DE	;
859)   14A1 DD 72 01    		    LD (IX+1),D   ;SAVE Y1	;SAVE Y1
860)   14A4 DD 73 00    		    LD (IX+0),E	;
861)   14A7 D5          		    PUSH DE       ;Y1	;Y1
862)   14A8 DD 66 05    		    LD H,(IX+5)   ;DDF_Y	;DDF_Y
863)   14AB DD 6E 04    		    LD L,(IX+4)   	;
864)   14AE 23          		    INC HL	;
865)   14AF 23          		    INC HL	;
866)   14B0 DD 74 05    		    LD (IX+5),H   ;SAVE DDF_Y	;SAVE DDF_Y
867)   14B3 DD 75 04    		    LD (IX+4),L	;
868)   14B6 DD 56 09    		    LD D,(IX+9)   ;F	;F
869)   14B9 DD 5E 08    		    LD E,(IX+8)	;
870)   14BC 19          		    ADD HL,DE	;
871)   14BD DD 74 09    		    LD (IX+9),H    ;SAVE F	;SAVE F
872)   14C0 DD 75 08    		    LD (IX+8),L          	;
876)   14C3 C1          		   POP BC       ;Y1	;Y1
877)   14C4 E1          		   POP HL       ;X1	;X1
878)   14C5 23          		   INC HL	;
879)   14C6 DD 74 03    		   LD (IX+3),H  ;SAVE X1	;SAVE X1
880)   14C9 DD 75 02    		   LD (IX+2),L	;
881)   14CC E5          		   PUSH HL      ;X1	;X1
882)   14CD DD 66 07    		    LD H,(IX+7)   ;DDF_X	;DDF_X
883)   14D0 DD 6E 06    		    LD L,(IX+6)   	;
884)   14D3 23          		    INC HL	;
885)   14D4 23          		    INC HL	;
886)   14D5 DD 74 07    		    LD (IX+7),H   ;SAVE DDF_X	;SAVE DDF_X
887)   14D8 DD 75 06    		    LD (IX+6),L	;
888)   14DB DD 56 09    		    LD D,(IX+9)   ;F	;F
889)   14DE DD 5E 08    		    LD E,(IX+8)	;
890)   14E1 19          		    ADD HL,DE	;
891)   14E2 DD 74 09    		    LD (IX+9),H    ;SAVE F	;SAVE F
892)   14E5 DD 75 08    		    LD (IX+8),L      	;
895)   14E8 E1          		     POP HL        ;X1	;X1
896)   14E9 E5          		     PUSH HL	;
897)   14EA DD 56 0F    		     LD D,(IX+15)  ;X	;X
898)   14ED DD 5E 0E    		     LD E,(IX+14)	;
899)   14F0 D5          		     PUSH DE	;
900)   14F1 19          		     ADD HL,DE	;
901)   14F2 EB          		     EX DE,HL      ;DE=X+X1	;DE=X+X1
902)   14F3 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
903)   14F6 DD 6E 0C    		     LD L,(IX+12)	;
904)   14F9 09          		     ADD HL,BC     ;HL=Y+Y1	;HL=Y+Y1
906)   14FA CD EE 13    		     CALL PLOTP	;
908)   14FD E1          		   POP HL        ;X	;X
909)   14FE D1          		   POP DE        ;X1	;X1
910)   14FF D5          		   PUSH DE	;
911)   1500 E5          		   PUSH HL	;
912)   1501 AF          		   XOR A	;
913)   1502 ED 52       		   SBC HL,DE	;
914)   1504 EB          		   EX DE,HL      ;DE=X-X1	;DE=X-X1
915)   1505 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
916)   1508 DD 6E 0C    		     LD L,(IX+12)	;
917)   150B 09          		     ADD HL,BC     ;HL=Y+Y1	;HL=Y+Y1
919)   150C CD EE 13    		     CALL PLOTP	;
921)   150F E1          		   POP HL        ;X	;X
922)   1510 D1          		   POP DE        ;X1 	;X1
923)   1511 D5          		   PUSH DE	;
924)   1512 E5          		   PUSH HL	;
925)   1513 19          		   ADD HL,DE	;
926)   1514 EB          		   EX DE,HL      ;DE=X+X1	;DE=X+X1
927)   1515 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
928)   1518 DD 6E 0C    		     LD L,(IX+12)	;
929)   151B AF          		     XOR A	;
930)   151C ED 42       		     SBC HL,BC     ;HL=Y+Y1	;HL=Y+Y1
932)   151E CD EE 13    		     CALL PLOTP	;
934)   1521 E1          		   POP HL        ;X	;X
935)   1522 D1          		   POP DE        ;X1  	;X1
936)   1523 D5          		   PUSH DE	;
937)   1524 E5          		   PUSH HL	;
938)   1525 AF          		   XOR A	;
939)   1526 ED 52       		   SBC HL,DE	;
940)   1528 EB          		   EX DE,HL      ;DE=X-X1	;DE=X-X1
941)   1529 DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
942)   152C DD 6E 0C    		     LD L,(IX+12)	;
943)   152F AF          		     XOR A	;
944)   1530 ED 42       		     SBC HL,BC     ;HL=Y-Y1	;HL=Y-Y1
946)   1532 CD EE 13    		     CALL PLOTP	;
948)   1535 E1          		     POP HL         ;X	;X
949)   1536 D1          		     POP DE         ;X1	;X1
950)   1537 C5          		     PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
951)   1538 E5          		     PUSH HL        ;SAVE X      	;SAVE X
952)   1539 D5          		     PUSH DE        ;SAVE X1      	;SAVE X1
953)   153A 09          		     ADD HL,BC      ;	;
954)   153B C1          		     POP BC         ;BC=X1	;BC=X1
955)   153C EB          		     EX DE,HL       ;DE=X+Y1	;DE=X+Y1
956)   153D DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
957)   1540 DD 6E 0C    		     LD L,(IX+12)	;
958)   1543 09          		     ADD HL,BC     ;HL=Y+X1	;HL=Y+X1
960)   1544 CD EE 13    		     CALL PLOTP	;
962)   1547 E1          		   POP HL        ;X	;X
963)   1548 D1          		   POP DE        ;Y1	;Y1
964)   1549 D5          		   PUSH DE	;
965)   154A E5          		   PUSH HL	;
966)   154B AF          		   XOR A	;
967)   154C ED 52       		   SBC HL,DE	;
968)   154E EB          		   EX DE,HL      ;DE=X-Y1	;DE=X-Y1
969)   154F DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
970)   1552 DD 6E 0C    		     LD L,(IX+12)	;
971)   1555 09          		     ADD HL,BC     ;HL=Y+X1	;HL=Y+X1
973)   1556 CD EE 13    		     CALL PLOTP	;
975)   1559 E1          		   POP HL        ;X	;X
976)   155A D1          		   POP DE        ;Y1	;Y1
977)   155B D5          		   PUSH DE	;
978)   155C E5          		   PUSH HL	;
979)   155D 19          		     ADD HL,DE	;
980)   155E EB          		     EX DE,HL      ;DE=X+Y1	;DE=X+Y1
981)   155F DD 66 0D    		     LD H,(IX+13)  ;Y	;Y
982)   1562 DD 6E 0C    		     LD L,(IX+12)	;
983)   1565 AF          		     XOR A	;
984)   1566 ED 42       		     SBC HL,BC     ;HL=Y-X1	;HL=Y-X1
985)   1568 E5          		     PUSH HL	;
987)   1569 CD EE 13    		     CALL PLOTP	;
989)   156C C1          		     POP BC        ;Y-X1	;Y-X1
990)   156D E1          		     POP HL        ;X	;X
991)   156E D1          		     POP DE        ;Y1 	;Y1
992)   156F AF          		     XOR A	;
993)   1570 ED 52       		     SBC HL,DE	;
994)   1572 EB          		     EX DE,HL      ;DE=X-Y1	;DE=X-Y1
995)   1573 C5          		     PUSH BC	;
996)   1574 E1          		     POP HL        ;HL=Y-X1	;HL=Y-X1
998)   1575 CD EE 13    		     CALL PLOTP        	;
999)   1578 C3 7D 14    		    JP CIRC_AGN	;
1000)   157B CD 66 11    		CIRC_EXIT: CALL LCD_CLRXY	;
1001)   157E D1          		     POP DE ;GET RET ADDR	;GET RET ADDR
1002)   157F 21 10 00    		     LD HL,8*2       ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
1003)   1582 39          		     ADD HL,SP     ;	;
1004)   1583 F9          		     LD SP,HL 	;
1005)   1584 EB          		     EX DE,HL     	;
1006)   1585 E9          		     JP (HL)	;
1013)   1586 D9          		   EXX	;
1014)   1587 D1          		   POP DE  ;save return addr to de'	;save return addr to de'
1015)   1588 D9          		   EXX  	;
1016)   1589 CD 27 18    		   CALL _FILL         	;
1017)   158C D9          		   EXX	;
1018)   158D D5          		   PUSH DE ;restore return addr from de'	;restore return addr from de'
1019)   158E D9          		   EXX	;
1020)   158F C9          		   RET	;
1027)   1590 FE 08       		     CP 0X08   ;BACKSPACE	;BACKSPACE
1028)   1592 CA A2 15    		     JP Z,PRCH_DOBCKSPC	;
1029)   1595 FE 0A       		     CP 0X0A   ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
1030)   1597 C8          		     RET Z	;
1031)   1598 FE 0D       		     CP 0X0D   ;CHECK FOR ENTER	;CHECK FOR ENTER
1032)   159A 20 3A       		     JR NZ,PRCH_DOPRN	;
1033)   159C 21 0D 83    		     LD HL,CURSORX	;
1034)   159F C3 EF 16    		     JP PRCH_NEWLN 	;
1036)   15A2 21 0D 83    		     LD HL,CURSORX      	;
1037)   15A5 7E          		     LD A,(HL)	;
1038)   15A6 38 05       		     JR C,DOREALBCKSPC	;
1040)   15A8 FE 01       		     CP 1      ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1041)   15AA C8          		     RET Z	;
1042)   15AB 35          		     DEC (HL)	;
1043)   15AC C9          		     RET      	;
1045)   15AD FE 01       		     CP 1      ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1046)   15AF 28 0A       		     JR Z,PRCH_DOBCKSPC2     ;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER	;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER
1047)   15B1 35          		     DEC (HL)  ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1048)   15B2 E5          		     PUSH HL	;
1049)   15B3 3E 20       		     LD A,32   ;PRINT SPACE	;PRINT SPACE
1050)   15B5 CD D6 15    		     CALL PRCH_DOPRN ;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN	;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN
1051)   15B8 E1          		     POP HL	;
1052)   15B9 35          		     DEC (HL)  ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1053)   15BA B7          		     OR A      	;
1057)   15BB DD 21 02 00 		     LD IX,2	;
1058)   15BF DD 39       		     ADD IX,SP	;
1059)   15C1 DD 66 01    		     LD H,(IX+1);POSITION IN ACCS FOR THE NEW CHARACTER      	;POSITION IN ACCS FOR THE NEW CHARACTER
1060)   15C4 DD 6E 00    		     LD L,(IX) ;POSITION IN ACCS FOR THE NEW CHARACTER  	;POSITION IN ACCS FOR THE NEW CHARACTER
1061)   15C7 3E 00       		     LD A,0    ;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG	;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG
1062)   15C9 28 02       		     JR Z,PRCH_SKIP1  ;WE ARE ON COLUMN 1	;WE ARE ON COLUMN 1
1063)   15CB 2B          		     DEC HL     ;PREVIOUS POSITION DELETE BACKSPACE	;PREVIOUS POSITION DELETE BACKSPACE
1064)   15CC 77          		     LD (HL),A  ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1066)   15CD 2B          		     DEC HL     ;PREVIOUS POSITION DELETE PREVIOUS CHAR	;PREVIOUS POSITION DELETE PREVIOUS CHAR
1067)   15CE 77          		     LD (HL),A  ;PUT 0 ON LAST POSITION      	;PUT 0 ON LAST POSITION
1068)   15CF DD 74 01    		     LD (IX+1),H ;PUT POSITION BACK ON STACK IT WILL POPED	;PUT POSITION BACK ON STACK IT WILL POPED
1069)   15D2 DD 75 00    		     LD (IX),L	;
1070)   15D5 C9          		     RET	;
1073)   15D6 F5          		     PUSH AF  ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
1074)   15D7 32 10 83    		     LD (LASTCHAR),A ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
1078)   15DA 3A 16 83    		     LD A,(VDUMODE)	;
1079)   15DD FE 05       		     CP 5	;
1080)   15DF 20 19       		     JR NZ,VDU4	;
1081)   15E1 2A 5F 83    		     LD HL,(GR_LASTX)	;
1082)   15E4 E5          		     PUSH HL	;
1083)   15E5 ED 5B 61 83 		     LD DE,(GR_LASTY)	;
1084)   15E9 D5          		     PUSH DE	;
1085)   15EA 01 07 00    		     LD BC,FONT_WIDTH-1	;
1086)   15ED 09          		     ADD HL,BC	;
1087)   15EE E5          		     PUSH HL	;
1088)   15EF 01 09 00    		     LD BC,FONT_HEIGHT-1	;
1089)   15F2 EB          		     EX DE,HL	;
1090)   15F3 09          		     ADD HL,BC	;
1091)   15F4 E5          		     PUSH HL	;
1092)   15F5 CD B1 10    		     CALL LCD_SETXY	;
1093)   15F8 18 34       		     JR PRCHDO	;
1094)   15FA 3A 0D 83    		VDU4: LD A,(CURSORX)	;
1095)   15FD 06 08       		     LD B,FONT_WIDTH	;
1096)   15FF 16 00       		     LD D,0	;
1097)   1601 5F          		     LD E,A	;
1098)   1602 21 00 00    		     LD HL,0	;
1099)   1605 B7          		     OR A          ; CLEAR CARRY	; CLEAR CARRY
1101)   1606 ED 5A       		     ADC HL,DE	;
1102)   1608 10 FC       		     DJNZ PRCH_AGN1 ;HL=DE*B	;HL=DE*B
1103)   160A E5          		     PUSH HL       ;1ST PARAM X1	;1ST PARAM X1
1104)   160B 11 08 00    		     LD DE,FONT_WIDTH 	;
1105)   160E ED 5A       		     ADC HL,DE      	;
1106)   1610 2B          		     DEC HL	;
1107)   1611 E5          		     PUSH HL       ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1109)   1612 CD 64 16    		     CALL LCD_CALCLINE ;SCROLL CALC	;SCROLL CALC
1110)   1615 06 0A       		     LD B,FONT_HEIGHT 	;
1111)   1617 16 00       		     LD D,0	;
1112)   1619 5F          		     LD E,A	;
1113)   161A 21 00 00    		     LD HL,0	;
1115)   161D ED 5A       		     ADC HL,DE	;
1116)   161F 10 FC       		     DJNZ PRCH_AGN2      	;
1117)   1621 D1          		     POP DE        ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
1118)   1622 E5          		     PUSH HL       ;2ND PARAM Y1	;2ND PARAM Y1
1119)   1623 D5          		     PUSH DE       ;3RD PARAM X2	;3RD PARAM X2
1120)   1624 11 0A 00    		     LD DE,FONT_HEIGHT	;
1121)   1627 ED 5A       		     ADC HL,DE     ;CALC 4TH PARAM      	;CALC 4TH PARAM
1122)   1629 2B          		     DEC HL        ;4TH PARAM -1  	;4TH PARAM -1
1123)   162A E5          		     PUSH HL    ;4TH PARAM Y2	;4TH PARAM Y2
1124)   162B CD B1 10    		     CALL LCD_SETXY	;
1125)   162E F1          		PRCHDO: POP AF       ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
1126)   162F B7          		     OR A	;
1127)   1630 21 00 75    		     LD HL,FONT_ADDR	;
1128)   1633 16 00       		     LD D,0	;
1129)   1635 5F          		     LD E,A	;
1130)   1636 ED 5A       		     ADC HL,DE     ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
1131)   1638 E5          		     PUSH HL	;
1132)   1639 D1          		     POP DE        ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
1133)   163A 0E 0A       		     LD C,FONT_HEIGHT   ; TOTAL FONT LINES	; TOTAL FONT LINES
1135)   163C 1A          		     LD A,(DE)           ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1136)   163D 06 08       		     LD B,FONT_WIDTH      	;
1138)   163F CB 27       		     SLA A               ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1139)   1641 38 05       		     JR C,FORECOLOR	;
1140)   1643 2A 03 83    		     LD HL,(BCOLOR)	;
1141)   1646 18 03       		     JR PRCH_CONT	;
1143)   1648 2A 01 83    		     LD HL,(FCOLOR)      	;
1145)   164B F5          		     PUSH AF	;
1146)   164C D5          		     PUSH DE             ;TODO:PROBABLY NOT NEEDED HERE 	;TODO:PROBABLY NOT NEEDED HERE
1147)   164D CD FE 10    		     CALL LCD_SETPIXEL	;
1148)   1650 D1          		     POP DE	;
1149)   1651 F1          		     POP AF      	;
1150)   1652 10 EB       		     DJNZ PRCH_AGN4	;
1151)   1654 14          		     INC D             ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1152)   1655 0D          		     DEC C	;
1153)   1656 20 E4       		     JR NZ,PRCH_AGN3	;
1155)   1658 21 0D 83    		     LD HL,CURSORX	;
1156)   165B 7E          		     LD A,(HL)	;
1157)   165C 3C          		     INC A	;
1158)   165D FE 50       		     CP 80	;
1159)   165F CA EF 16    		     JP Z,PRCH_NEWLN  ;NEW LINE	;NEW LINE
1160)   1662 77          		     LD (HL),A	;
1161)   1663 C9          		     RET	;
1164)   1664 3A 0F 83    		@LCD_CALCLINE: LD A,(SCRLN)	;
1165)   1667 57          		               LD D,A 	;
1166)   1668 3A 0E 83    		               LD A,(CURSORY)  ;480/10 MAKES 48 LINES                	;480/10 MAKES 48 LINES
1167)   166B 82          		               ADD A,D	;
1168)   166C FE 30       		               CP TOTLINES	;
1169)   166E D8          		               RET C	;
1171)   166F D6 30       		               SUB TOTLINES	;
1172)   1671 C9          		               RET             	;
1177)   1672 16 33       		LCD_SETSCROLL: LD D,0x33	;
1178)   1674 CD 38 0F    		               CALL LCD_WR_COM	;
1179)   1677 16 00       		 LD D,0X00 ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
1180)   1679 CD 34 0F    		               CALL LCD_WR_DAT	;
1181)   167C 16 00       		 LD D,0X00 ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
1182)   167E CD 34 0F    		               CALL LCD_WR_DAT	;
1183)   1681 16 01       		 LD D,0X01 ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
1184)   1683 CD 34 0F    		               CALL LCD_WR_DAT	;
1185)   1686 16 E0       		 LD D,0XE0 ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
1186)   1688 CD 34 0F    		               CALL LCD_WR_DAT	;
1187)   168B 16 00       		 LD D,0X00 ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
1188)   168D CD 34 0F    		               CALL LCD_WR_DAT	;
1189)   1690 16 00       		 LD D,0X00 ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
1190)   1692 CD 34 0F    		               CALL LCD_WR_DAT	;
1191)   1695 AF          		               XOR A	;
1192)   1696 32 0F 83    		               LD (SCRLN),A	;
1193)   1699 C9          		 RET	;
1196)   169A 3A 0F 83    		@LCD_DOSCROLL:  LD A,(SCRLN)	;
1197)   169D 3C          		               INC A	;
1198)   169E FE 30       		               CP TOTLINES	;
1199)   16A0 38 02       		               JR C, DS_NXT	;
1200)   16A2 D6 30       		               SUB TOTLINES	;
1201)   16A4 32 0F 83    		DS_NXT:        LD (SCRLN),A	;
1202)   16A7 6F          		               LD L,A	;
1203)   16A8 26 00       		               LD H,0	;
1204)   16AA 29          		               ADD HL,HL ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1205)   16AB 29          		               ADD HL,HL	;
1206)   16AC 29          		               ADD HL,HL  	;
1207)   16AD 5F          		               LD E,A	;
1208)   16AE 16 00       		               LD D,0	;
1209)   16B0 19          		               ADD HL,DE	;
1210)   16B1 19          		               ADD HL,DE	;
1211)   16B2 16 37       		               LD D,0x37	;
1212)   16B4 CD 38 0F    		               CALL LCD_WR_COM	;
1213)   16B7 54          		 LD D,H ;NEW TOP SCROLL LINE BYTES HIGH (1-480) 	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
1214)   16B8 CD 34 0F    		               CALL LCD_WR_DAT	;
1215)   16BB 55          		 LD D,L ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
1216)   16BC CD 34 0F    		               CALL LCD_WR_DAT	;
1217)   16BF C9          		               RET	;
1220)   16C0 11 00 00    		@LCD_CLRTXTLN: LD DE,0	;
1222)   16C3 D5          		               PUSH DE	;
1223)   16C4 6F          		               LD L,A	;
1224)   16C5 26 00       		               LD H,0	;
1225)   16C7 29          		               ADD HL,HL ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1226)   16C8 29          		               ADD HL,HL	;
1227)   16C9 29          		               ADD HL,HL  	;
1228)   16CA 5F          		               LD E,A	;
1229)   16CB 16 00       		               LD D,0	;
1230)   16CD 19          		               ADD HL,DE	;
1231)   16CE 19          		               ADD HL,DE	;
1233)   16CF E5          		               PUSH HL  	;
1234)   16D0 11 0A 00    		               LD DE,FONT_HEIGHT	;
1235)   16D3 19          		               ADD HL,DE	;
1237)   16D4 EB          		               EX DE,HL                	;
1238)   16D5 21 1F 03    		               LD HL,LCD_WIDTH	;
1240)   16D8 E5          		               PUSH HL	;
1241)   16D9 D5          		               PUSH DE ;PARAM4	;PARAM4
1242)   16DA CD B1 10    		               CALL LCD_SETXY	;
1243)   16DD 01 40 1F    		               LD BC, 8000; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
1244)   16E0 2A 03 83    		               LD HL,(BCOLOR)     	;
1245)   16E3 CD FE 10    		CTL_AGN:       CALL LCD_SETPIXEL ;DESTROYS D,A	;DESTROYS D,A
1246)   16E6 0B          		               DEC BC	;
1247)   16E7 78          		               LD A,B	;
1248)   16E8 B1          		               OR C	;
1249)   16E9 20 F8       		               JR NZ,CTL_AGN	;
1250)   16EB CD 66 11    		       CALL LCD_CLRXY 	;
1251)   16EE C9          		       RET                	;
1255)   16EF AF          		     XOR A  	;
1256)   16F0 77          		     LD (HL),A   	;
1257)   16F1 23          		     INC HL	;
1258)   16F2 7E          		     LD A,(HL)	;
1259)   16F3 3C          		     INC A       	;
1261)   16F4 FE 30       		     CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
1262)   16F6 28 02       		     JR Z,PRCH_SCROLL	;
1263)   16F8 77          		     LD (HL),A                             	;
1264)   16F9 C9          		     RET	;
1266)   16FA F5          		PRCH_SCROLL: PUSH AF	;
1267)   16FB E5          		     PUSH HL	;
1269)   16FC 3A 0F 83    		     LD A,(SCRLN)	;
1270)   16FF CD C0 16    		     CALL LCD_CLRTXTLN	;
1272)   1702 CD 9A 16    		     CALL LCD_DOSCROLL	;
1273)   1705 E1          		     POP HL	;
1274)   1706 F1          		     POP AF	;
1276)   1707 3D          		     DEC A	;
1277)   1708 77          		     LD (HL),A ;CURSORY                            	;CURSORY
1278)   1709 AF          		     XOR A	;
1279)   170A 32 0D 83    		     LD (CURSORX),A	;
1280)   170D C9          		     RET	;
1295)   170E 2A 03 83    		     LD HL,(BCOLOR);      	;
1296)   1711 18 03       		     JR LCD_SETCURS	;
1307)   1713 2A 01 83    		     LD HL,(FCOLOR)      ;COLOR PARAM      	;COLOR PARAM
1310)   1716 E5          		     PUSH HL             ;COLOR PARAM	;COLOR PARAM
1311)   1717 3A 0D 83    		     LD A,(CURSORX)	;
1312)   171A 06 08       		     LD B,FONT_WIDTH	;
1313)   171C 16 00       		     LD D,0	;
1314)   171E 5F          		     LD E,A	;
1315)   171F 21 00 00    		     LD HL,0	;
1316)   1722 B7          		     OR A                ;CLEAR CARRY	;CLEAR CARRY
1318)   1723 ED 5A       		     ADC HL,DE	;
1319)   1725 10 FC       		     DJNZ SCUR_AGN1      ;HL = DE * B 	;HL = DE * B
1320)   1727 E5          		     PUSH HL             ;1ST PARAM X1	;1ST PARAM X1
1321)   1728 01 08 00    		     LD BC,FONT_WIDTH	;
1322)   172B ED 4A       		     ADC HL,BC           ;NEXT CHAR	;NEXT CHAR
1323)   172D 2B          		     DEC HL              ;MINUS 1	;MINUS 1
1324)   172E E5          		     PUSH HL             ;SAVE 3RD PARAM X2      	;SAVE 3RD PARAM X2
1326)   172F CD 64 16    		     CALL LCD_CALCLINE	;
1327)   1732 06 0A       		     LD B,FONT_HEIGHT 	;
1328)   1734 16 00       		     LD D,0	;
1329)   1736 5F          		     LD E,A	;
1330)   1737 21 00 00    		     LD HL,0	;
1332)   173A ED 5A       		     ADC HL,DE	;
1333)   173C 10 FC       		     DJNZ SCUR_AGN2      ;HL=B*DE	;HL=B*DE
1334)   173E 0E 08       		     LD C,FONT_HEIGHT-2  ;2 PIXEL HEIGTH CURSOR       	;2 PIXEL HEIGTH CURSOR
1335)   1740 06 00       		     LD B,0	;
1336)   1742 ED 4A       		     ADC HL,BC           ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
1337)   1744 D1          		     POP DE              ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
1338)   1745 E5          		     PUSH HL             ;2ND PARAM Y1	;2ND PARAM Y1
1339)   1746 D5          		     PUSH DE             ;3RD PARAM X2	;3RD PARAM X2
1341)   1747 23          		     INC HL              ; Y2 ADD THE LAST +2 PIXELS  	; Y2 ADD THE LAST +2 PIXELS
1342)   1748 E5          		     PUSH HL             ;4TH PARAM Y2	;4TH PARAM Y2
1343)   1749 CD B1 10    		     CALL LCD_SETXY	;
1345)   174C E1          		     POP HL              ;GET THE COLOR	;GET THE COLOR
1346)   174D 06 10       		     LD B,2*FONT_WIDTH   ;2*8=16	;2*8=16
1348)   174F CD FE 10    		     CALL LCD_SETPIXEL   ;DESTROYS D,A	;DESTROYS D,A
1349)   1752 10 FB       		     DJNZ SCUR_AGN3                            	;
1354)   1754 C9          		     RET	;
1357)   1755 CD 66 11    		    CALL LCD_CLRXY;	;
1358)   1758 2A 03 83    		    LD HL,(BCOLOR)     	;
1360)   175B 01 E0 01    		    LD BC,LCD_HEIGHT+1	;
1361)   175E C5          		CS_AGNA2: PUSH BC	;
1362)   175F 01 20 03    		    LD BC,LCD_WIDTH+1	;
1363)   1762 CD FE 10    		CS_AGNA1: CALL LCD_SETPIXEL         ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1364)   1765 0B          		    DEC BC	;
1365)   1766 78          		    LD A,B	;
1366)   1767 B1          		    OR C	;
1367)   1768 20 F8       		    JR NZ,CS_AGNA1	;
1368)   176A C1          		    POP BC	;
1369)   176B 0B          		    DEC BC	;
1370)   176C 78          		    LD A,B	;
1371)   176D B1          		    OR C     	;
1372)   176E 20 EE       		    JR NZ,CS_AGNA2	;
1373)   1770 21 00 00    		    LD HL,0                   ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1374)   1773 22 0D 83    		    LD (CURSORX),HL       	;
1375)   1776 C9          		  RET	;
1380)   1777 06 DF       		    LD B,LCD_HEIGHT.AND.0xFF   ;lsb	;lsb
1381)   1779 0E 02       		    LD C,LCD_HEIGHT.SHR.8+1      ;MSB+1	;MSB+1
1383)   177B C5          		    PUSH BC          	;
1385)   177C 06 1F       		    LD B,LCD_WIDTH.AND.0xFF   ;lsb	;lsb
1386)   177E 0E 04       		    LD C,LCD_WIDTH.SHR.8+1      ;MSV+1          	;MSV+1
1388)   1780 CD FE 10    		    CALL LCD_SETPIXEL         ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1389)   1783 10 FB       		    DJNZ CS_AGN1	;
1390)   1785 0D          		    DEC C	;
1391)   1786 20 F8       		    JR NZ,CS_AGN1     	;
1392)   1788 C1          		    POP BC	;
1393)   1789 10 F0       		    DJNZ CS_AGN2	;
1394)   178B 0D          		    DEC C	;
1395)   178C 20 ED       		    JR NZ,CS_AGN2 	;
1396)   178E 21 00 00    		    LD HL,0                   ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1397)   1791 22 0D 83    		    LD (CURSORX),HL       	;
1398)   1794 C9          		    RET	;
1404)   1795 7E          		    LD A,(HL)	;
1405)   1796 FE 00       		    CP 0	;
1406)   1798 C8          		    RET Z	;
1407)   1799 E5          		    PUSH HL	;
1408)   179A CD 90 15    		    CALL LCD_PRINTCHAR     	;
1409)   179D E1          		    POP HL	;
1410)   179E 23          		    INC HL	;
1411)   179F 18 F4       		    JR LCD_MSG	;
  4)   17A1 AF          		NEGHL:xor a	;
  5)   17A2 95          		     sub l	;
  6)   17A3 6F          		     ld l,a	;
  7)   17A4 9F          		     sbc a,a	;
  8)   17A5 94          		     sub h	;
  9)   17A6 67          		     ld h,a	;
 10)   17A7 C9          		     RET	;
 14)   17A8 2A 79 83    		     LD HL,(FILL_IDX)	;
 15)   17AB 01 58 02    		     LD BC,MAXQ	;
 16)   17AE A7          		     AND A	;
 17)   17AF ED 42       		     SBC HL,BC	;
 18)   17B1 D0          		     RET NC ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 19)   17B2 2A 7B 83    		     LD HL,(FILL_PY)	;
 20)   17B5 ED 5B 81 83 		     LD DE,(FILL_PDY)	;
 21)   17B9 19          		     ADD HL,DE	;
 22)   17BA 7C          		     LD A,H	;
 23)   17BB FE 80       		     CP 80H	;
 24)   17BD D0          		     RET NC ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 25)   17BE 11 1F 03    		     LD DE,LCD_WIDTH	;
 26)   17C1 ED 52       		     SBC HL,DE	;
 27)   17C3 D0          		     RET NC  ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 29)   17C4 2A 77 83    		     LD HL,(FILL_Q)	;
 30)   17C7 ED 4B 79 83 		     LD BC,(FILL_IDX)	;
 31)   17CB 78          		     LD A,B	;
 32)   17CC B1          		     OR C         ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 33)   17CD 28 08       		     JR Z,QPS_NXT1 	;
 34)   17CF EB          		     EX DE,HL	;
 35)   17D0 C5          		     PUSH BC	;
 36)   17D1 E1          		     POP HL      	;
 37)   17D2 29          		     ADD HL, HL	;
 38)   17D3 29          		     ADD HL, HL	;
 39)   17D4 29          		     ADD HL, HL        ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 40)   17D5 EB          		     EX DE,HL	;
 41)   17D6 19          		     ADD HL,DE      	;
 43)   17D7 11 7B 83    		     LD DE,FILL_PY	;
 44)   17DA EB          		     EX DE,HL  ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 45)   17DB 01 08 00    		     LD BC,8   ;8 BYTES	;8 BYTES
 46)   17DE ED B0       		     LDIR      ;COPY	;COPY
 47)   17E0 2A 79 83    		     LD HL,(FILL_IDX)      	;
 48)   17E3 23          		     INC HL	;
 49)   17E4 22 79 83    		     LD (FILL_IDX),HL	;
 50)   17E7 C9          		QPS_EXT: RET   	;
 52)   17E8 2A 77 83    		QPOP: LD HL,(FILL_Q)	;
 53)   17EB ED 4B 79 83 		     LD BC,(FILL_IDX)	;
 54)   17EF 0B          		     DEC BC      	;
 55)   17F0 C5          		     PUSH BC	;
 56)   17F1 78          		     LD A,B	;
 57)   17F2 B1          		     OR C         ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 58)   17F3 28 08       		     JR Z,QPP_NXT1                        	;
 59)   17F5 EB          		     EX DE,HL	;
 60)   17F6 C5          		     PUSH BC	;
 61)   17F7 E1          		     POP HL      	;
 62)   17F8 29          		     ADD HL, HL	;
 63)   17F9 29          		     ADD HL, HL	;
 64)   17FA 29          		     ADD HL, HL        ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 65)   17FB EB          		     EX DE,HL	;
 66)   17FC 19          		     ADD HL,DE      	;
 67)   17FD C1          		QPP_NXT1: POP BC 	;
 68)   17FE ED 43 79 83 		     LD (FILL_IDX),BC	;
 70)   1802 11 7B 83    		     LD DE,FILL_PY  ;ORIGIN=QUEUE DEST=FILL_PY               	;ORIGIN=QUEUE DEST=FILL_PY
 71)   1805 01 08 00    		     LD BC,8   ;8 BYTES	;8 BYTES
 72)   1808 ED B0       		     LDIR      ;COPY	;COPY
 73)   180A 2A 7D 83    		     LD HL,(FILL_PXL)	;
 74)   180D 22 71 83    		     LD (FILL_X1),HL	;
 75)   1810 2A 7F 83    		     LD HL,(FILL_PXR)	;
 76)   1813 22 73 83    		     LD (FILL_X2),HL	;
 77)   1816 ED 5B 81 83 		     LD DE,(FILL_PDY)	;
 78)   181A ED 53 75 83 		     LD (FILL_DY),DE      	;
 79)   181E 2A 7B 83    		     LD HL,(FILL_PY)	;
 80)   1821 A7          		     AND A	;
 81)   1822 19          		     ADD HL,DE	;
 82)   1823 22 6D 83    		     LD (FILL_Y),HL 	;
 90)   1826 C9          		     RET	;
 92)   1827 E1          		@_FILL: POP HL        ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 93)   1828 D1          		     POP DE          ;Y	;Y
 94)   1829 C1          		     POP BC          ;X      	;X
 95)   182A E5          		     PUSH HL         ;RET ADDR TO SP	;RET ADDR TO SP
 96)   182B ED 43 6B 83 		     LD (FILL_X),BC	;
 97)   182F ED 53 6D 83 		     LD (FILL_Y),DE   	;
 98)   1833 ED 73 85 83 		     LD (FILL_OLDSP),SP   	;
 99)   1837 21 3E ED    		     LD HL,-((MAXQ*8)+2) ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
100)   183A 39          		     ADD HL,SP	;
101)   183B F9          		     LD SP,HL        ;NEW SP	;NEW SP
104)   183C 22 77 83    		     LD (FILL_Q),HL  ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
105)   183F 21 00 00    		     LD HL,0	;
106)   1842 22 79 83    		     LD (FILL_IDX),HL ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
110)   1845 2A 6B 83    		     LD HL,(FILL_X);	;
111)   1848 E5          		     PUSH HL	;
112)   1849 2A 6D 83    		     LD HL,(FILL_y);	;
113)   184C E5          		     PUSH HL	;
114)   184D CD 15 11    		     CALL LCD_READPIXEL	;
115)   1850 22 83 83    		     LD (FILL_OV),HL	;
117)   1853 ED 5B 01 83 		     LD DE,(FCOLOR)	;
118)   1857 A7          		     AND A	;
119)   1858 ED 52       		     SBC HL,DE      ;CHK OV=NV	;CHK OV=NV
120)   185A CA DF 19    		     JP Z,FL_EXIT	;
121)   185D 2A 6B 83    		     LD HL,(FILL_X)	;
122)   1860 7C          		     LD A,H	;
123)   1861 FE 80       		     CP 0x80         ;CHK <0	;CHK <0
124)   1863 D2 DF 19    		     JP NC,FL_EXIT	;
125)   1866 11 1F 03    		     LD DE,LCD_WIDTH 	;
126)   1869 A7          		     AND A	;
127)   186A ED 52       		     SBC HL,DE       ;CHK>799	;CHK>799
128)   186C D2 DF 19    		     JP NC,FL_EXIT	;
129)   186F 2A 6D 83    		     LD HL,(FILL_Y)	;
130)   1872 7C          		     LD A,H	;
131)   1873 FE 80       		     CP 0x80         ;CHK <0	;CHK <0
132)   1875 D2 DF 19    		     JP NC,FL_EXIT	;
133)   1878 11 DF 01    		     LD DE,LCD_HEIGHT 	;
134)   187B A7          		     AND A	;
135)   187C ED 52       		     SBC HL,DE       ;CHK>480	;CHK>480
136)   187E D2 DF 19    		     JP NC,FL_EXIT           	;
138)   1881 2A 6D 83    		     LD HL,(FILL_Y)	;
139)   1884 22 7B 83    		     LD (FILL_PY),HL	;
140)   1887 2A 6B 83    		     LD HL,(FILL_X)	;
141)   188A 22 7D 83    		     LD (FILL_PXL),HL	;
142)   188D 22 7F 83    		     LD (FILL_PXR),HL	;
143)   1890 21 01 00    		     LD HL,1	;
144)   1893 22 81 83    		     LD (FILL_PDY),HL	;
145)   1896 CD A8 17    		     CALL QPUSH         ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
147)   1899 2A 6D 83    		     LD HL,(FILL_Y)	;
148)   189C 23          		     INC HL	;
149)   189D 22 7B 83    		     LD (FILL_PY),HL	;
150)   18A0 21 FF FF    		     LD HL,-1	;
151)   18A3 22 81 83    		     LD (FILL_PDY),HL	;
152)   18A6 CD A8 17    		     CALL QPUSH	;
154)   18A9 ED 5B 79 83 		    LD DE,(FILL_IDX)	;
155)   18AD 7A          		    LD A,D	;
156)   18AE B3          		    OR E	;
157)   18AF CA DF 19    		    JP Z,FL_EXIT    ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT 	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
161)   18B2 CD E8 17    		     CALL QPOP            ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
164)   18B5 2A 71 83    		      LD HL,(FILL_X1)	;
165)   18B8 22 6B 83    		     LD (FILL_X),HL	;
166)   18BB 7C          		FL_LP1: LD A,H	;
167)   18BC FE 80       		     CP 0x80          ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
168)   18BE D2 E6 18    		     JP NC,FL_NXT1	;
169)   18C1 ED 5B 6D 83 		     LD DE,(FILL_Y)	;
170)   18C5 E5          		     PUSH HL	;
171)   18C6 D5          		     PUSH DE	;
172)   18C7 CD 15 11    		     CALL LCD_READPIXEL	;
173)   18CA ED 5B 83 83 		     LD DE,(FILL_OV)	;
174)   18CE A7          		     AND A	;
175)   18CF ED 52       		     SBC HL,DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
176)   18D1 C2 E6 18    		     JP NZ,FL_NXT1	;
177)   18D4 ED 5B 6B 83 		     LD DE,(FILL_X)	;
178)   18D8 2A 6D 83    		     LD HL,(FILL_Y)	;
179)   18DB D5          		     PUSH DE	;
180)   18DC CD EE 13    		     CALL PLOTP	;
181)   18DF E1          		     POP HL	;
182)   18E0 2B          		     DEC HL	;
183)   18E1 22 6B 83    		     LD (FILL_X),HL	;
184)   18E4 18 D5       		     JR FL_LP1     	;
188)   18E6 2A 6B 83    		     LD HL,(FILL_X)	;
189)   18E9 ED 5B 71 83 		     LD DE,(FILL_X1)	;
190)   18ED 7C          		     LD A,H	;
191)   18EE FE 80       		     CP 80H	;
192)   18F0 30 08       		     JR NC,FL_NXT1A   ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP      	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
193)   18F2 A7          		     AND A	;
194)   18F3 ED 52       		     SBC HL,DE       ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
195)   18F5 D2 9D 19    		     JP NC,FL_SKIP   ;C IF DE>HL X1>X, NC IF X>=X1    	;C IF DE>HL X1>X, NC IF X>=X1
196)   18F8 ED 5A       		     ADC HL,DE	;
199)   18FA 23          		    INC HL	;
200)   18FB 22 6F 83    		    LD (FILL_L),HL	;
203)   18FE A7          		    AND A     	;
204)   18FF ED 52       		    SBC HL,DE   ;CHK L-X1	;CHK L-X1
205)   1901 30 1E       		    JR NC,FL_NXT2   ;C IF DE>HL X1>L	;C IF DE>HL X1>L
206)   1903 28 1C       		    JR Z,FL_NXT2	;
207)   1905 ED 5A       		    ADC HL,DE	;
208)   1907 22 7D 83    		    LD (FILL_PXL),HL ;L	;L
209)   190A 2A 6D 83    		    LD HL,(FILL_Y)	;
210)   190D 22 7B 83    		    LD (FILL_PY),HL	;
211)   1910 1B          		    DEC DE	;
212)   1911 ED 53 7F 83 		    LD (FILL_PXR),DE	;
213)   1915 2A 75 83    		    LD HL,(FILL_DY) 	;
214)   1918 CD A1 17    		    CALL NEGHL	;
215)   191B 22 81 83    		    LD (FILL_PDY),HL     	;
216)   191E CD A8 17    		    CALL QPUSH     	;
220)   1921 2A 71 83    		     LD HL,(FILL_X1)  ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
221)   1924 23          		     INC HL	;
222)   1925 22 6B 83    		     LD (FILL_X),HL	;
226)   1928 11 1F 03    		   LD DE,LCD_WIDTH	;
227)   192B A7          		   AND A	;
228)   192C EB          		   EX DE,HL	;
229)   192D ED 52       		   SBC HL,DE    ;800-(X=DE)	;800-(X=DE)
230)   192F 38 24       		   JR C,FL_NXT3   ;C IF X>800	;C IF X>800
231)   1931 EB          		   EX DE,HL      ;HL=X	;HL=X
232)   1932 E5          		   PUSH HL	;
233)   1933 2A 6D 83    		   LD HL,(FILL_Y)	;
234)   1936 E5          		   PUSH HL	;
235)   1937 CD 15 11    		   CALL LCD_READPIXEL	;
236)   193A ED 5B 83 83 		   LD DE,(FILL_OV)	;
237)   193E A7          		   AND A	;
238)   193F ED 52       		   SBC HL,DE       ;PIXELREAD=OV	;PIXELREAD=OV
239)   1941 20 12       		   JR NZ,FL_NXT3	;
240)   1943 ED 5B 6B 83 		   LD DE,(FILL_X)	;
241)   1947 2A 6D 83    		   LD HL,(FILL_Y)	;
242)   194A D5          		   PUSH DE	;
243)   194B CD EE 13    		   CALL PLOTP	;
244)   194E E1          		   POP HL	;
245)   194F 23          		   INC HL	;
246)   1950 22 6B 83    		   LD (FILL_X),HL	;
247)   1953 18 D3       		   JR FL_LP2	;
250)   1955 2A 6D 83    		    LD HL,(FILL_Y)	;
251)   1958 22 7B 83    		    LD (FILL_PY),HL	;
252)   195B 2A 6F 83    		    LD HL,(FILL_L)	;
253)   195E 22 7D 83    		    LD (FILL_PXL),HL	;
254)   1961 2A 6B 83    		    LD HL,(FILL_X)	;
255)   1964 2B          		    DEC HL	;
256)   1965 22 7F 83    		    LD (FILL_PXR),HL	;
257)   1968 2A 75 83    		    LD HL,(FILL_DY)	;
258)   196B 22 81 83    		    LD (FILL_PDY),HL	;
259)   196E CD A8 17    		    CALL QPUSH         	;
261)   1971 2A 6B 83    		    LD HL,(FILL_X)	;
262)   1974 ED 5B 73 83 		    LD DE,(FILL_X2)	;
263)   1978 13          		    INC DE	;
264)   1979 A7          		    AND A	;
265)   197A ED 52       		    SBC HL,DE    ;X-(X2+1) C IF X2+1>X 	;X-(X2+1) C IF X2+1>X
266)   197C 38 1F       		    JR C,FL_NXT4	;
267)   197E 28 1D       		    JR Z,FL_NXT4	;
268)   1980 2A 6D 83    		    LD HL,(FILL_Y)	;
269)   1983 22 7B 83    		    LD (FILL_PY),HL	;
270)   1986 ED 53 7D 83 		    LD (FILL_PXL),DE	;
271)   198A 2A 6B 83    		    LD HL,(FILL_X);	;
272)   198D 2B          		    DEC HL	;
273)   198E 22 7F 83    		    LD (FILL_PXR),HL	;
274)   1991 2A 75 83    		    LD HL,(FILL_DY)	;
275)   1994 CD A1 17    		    CALL NEGHL	;
276)   1997 22 81 83    		    LD (FILL_PDY),HL  	;
277)   199A CD A8 17    		    CALL QPUSH         	;
280)   199D 2A 6B 83    		       LD HL,(FILL_X)	;
281)   19A0 23          		       INC HL	;
282)   19A1 22 6B 83    		       LD (FILL_X),HL	;
283)   19A4 ED 5B 73 83 		FL_LP3: LD DE,(FILL_X2)	;
284)   19A8 A7          		       AND A	;
285)   19A9 EB          		       EX DE,HL         ;X2=HL X=DE	;X2=HL X=DE
286)   19AA ED 52       		       SBC HL,DE        ;C IF DE>HL X>X2       	;C IF DE>HL X>X2
287)   19AC 38 1C       		       JR C,FL_NXT5	;
288)   19AE 19          		       ADD HL,DE        ;	;
289)   19AF EB          		       EX DE,HL         ;X=HL X2=DE	;X=HL X2=DE
290)   19B0 E5          		       PUSH HL	;
291)   19B1 2A 6D 83    		       LD HL,(FILL_Y)	;
292)   19B4 E5          		       PUSH HL	;
293)   19B5 CD 15 11    		       CALL LCD_READPIXEL	;
294)   19B8 ED 5B 83 83 		       LD DE,(FILL_OV)	;
295)   19BC A7          		       AND A	;
296)   19BD ED 52       		       SBC HL,DE     ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
297)   19BF 28 09       		       JR Z,FL_NXT5	;
298)   19C1 2A 6B 83    		       LD HL,(FILL_X)	;
299)   19C4 23          		       INC HL	;
300)   19C5 22 6B 83    		       LD (FILL_X),HL	;
301)   19C8 18 DA       		       JR FL_LP3	;
304)   19CA 2A 6B 83    		       LD HL,(FILL_X)	;
305)   19CD 22 6F 83    		       LD (FILL_L),HL	;
307)   19D0 ED 5B 73 83 		      LD DE,(FILL_X2)	;
308)   19D4 A7          		      AND A	;
309)   19D5 EB          		      EX DE,HL    ;X2=HL X=DE	;X2=HL X=DE
310)   19D6 ED 52       		      SBC HL,DE   ;X2-X C IF X>X2	;X2-X C IF X>X2
311)   19D8 EB          		      EX DE,HL    ;X=HL X2-X=DE	;X=HL X2-X=DE
312)   19D9 DA A9 18    		      JP C,FL_LP0 ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
313)   19DC C3 28 19    		      JP FL_LP2   ;GOTO DO WHILE	;GOTO DO WHILE
316)   19DF 21 C2 12    		FL_EXIT: LD HL,(MAXQ*8)+2 ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
317)   19E2 39          		        ADD HL,SP	;
318)   19E3 F9          		        LD SP,HL        ;NEW SP	;NEW SP
319)   19E4 C9          		        RET	;
  9)   19E5 FE 01       		    CP 1          ;IS IT FOR GRAPHICS?	;IS IT FOR GRAPHICS?
 10)   19E7 28 0E       		    JR Z,GRCOLS	;
 11)   19E9 21 03 83    		    LD HL,BCOLOR	;
 12)   19EC 22 69 83    		    LD (GR_PARAM4),HL	;
 13)   19EF 21 01 83    		    LD HL,FCOLOR	;
 14)   19F2 22 67 83    		    LD (GR_PARAM3),HL	;
 15)   19F5 18 0C       		    JR BS_DOCOL	;
 16)   19F7 21 07 83    		GRCOLS: LD HL,BGRCOL	;
 17)   19FA 22 69 83    		    LD (GR_PARAM4),HL	;
 18)   19FD 21 05 83    		    LD HL,FGRCOL	;
 19)   1A00 22 67 83    		    LD (GR_PARAM3),HL         	;
 20)   1A03 CD 94 5E    		BS_DOCOL: CALL EXPRI   ;GET 1ST PARAM	;GET 1ST PARAM
 21)   1A06 D9          		    EXX	;
 22)   1A07 FD 7E 00    		    LD A,(IY)	;
 23)   1A0A FE 0D       		    CP 0x0D       ;FINISHED COMD LINE	;FINISHED COMD LINE
 24)   1A0C 28 32       		    JR Z,COLSEL	;
 25)   1A0E FE 3A       		    CP ':'	;
 26)   1A10 28 2E       		    JR Z,COLSEL	;
 27)   1A12 FE 2C       		    CP ','        ;CHECK FOR ','	;CHECK FOR ','
 28)   1A14 C2 B3 1D    		    JP NZ,GRPHERR	;
 30)   1A17 E5          		    PUSH HL       ;SAVE 1ST PARAM	;SAVE 1ST PARAM
 31)   1A18 FD 23       		    INC IY        ;NEXT PARAM	;NEXT PARAM
 32)   1A1A CD 94 5E    		    CALL EXPRI    ;GET 2ND PARAM	;GET 2ND PARAM
 33)   1A1D D9          		    EXX	;
 34)   1A1E D1          		    POP DE        ;RESTORE 1ST PARAM ON DE HL HAS THE 2ND	;RESTORE 1ST PARAM ON DE HL HAS THE 2ND
 35)   1A1F 7B          		    LD A,E	;
 36)   1A20 D6 80       		    SUB 128	;
 37)   1A22 38 07       		    JR C,COLFC	;
 38)   1A24 5F          		    LD E,A	;
 39)   1A25 DD 21 37 83 		    LD IX,BCOLPAL	;
 40)   1A29 18 04       		    JR DOPALCOL	;
 41)   1A2B DD 21 17 83 		COLFC: LD IX,FCOLPAL	;
 43)   1A2F 7B          		    LD A,E	;
 44)   1A30 FE 0F       		    CP 15     ;MAX 16 COLORS	;MAX 16 COLORS
 45)   1A32 D2 B3 1D    		    JP NC,GRPHERR	;
 46)   1A35 DD 19       		    ADD IX,DE     	;
 47)   1A37 DD 19       		    ADD IX,DE     ;2*DE CAUSE ITS A 2 BYTE ARRAY	;2*DE CAUSE ITS A 2 BYTE ARRAY
 48)   1A39 DD 75 00    		    LD (IX),L    ;SAVE THE NEW COLOR 	;SAVE THE NEW COLOR
 49)   1A3C DD 74 01    		    LD (IX+1),H  	;
 50)   1A3F C9          		    RET  	;
 53)   1A40 E5          		    PUSH HL	;
 54)   1A41 D1          		    POP DE     	;
 55)   1A42 7B          		    LD A,E	;
 56)   1A43 D6 80       		    SUB 128        ;CHECK MSB	;CHECK MSB
 57)   1A45 38 11       		    JR C,CFC	;
 58)   1A47 5F          		    LD E,A	;
 59)   1A48 DD 21 69 83 		    LD IX,GR_PARAM4	;
 60)   1A4C DD 6E 00    		    LD L,(IX)	;
 61)   1A4F DD 66 01    		    LD H,(IX+1)     	;
 62)   1A52 DD 21 37 83 		    LD IX,BCOLPAL  ;BACKCOLOR	;BACKCOLOR
 63)   1A56 18 0E       		    JR SFC	;
 64)   1A58 DD 21 67 83 		CFC: LD IX,GR_PARAM3	;
 65)   1A5C DD 6E 00    		    LD L,(IX)	;
 66)   1A5F DD 66 01    		    LD H,(IX+1)     	;
 67)   1A62 DD 21 17 83 		    LD IX,FCOLPAL  ;FRONTCOLOR	;FRONTCOLOR
 68)   1A66 7B          		SFC: LD A,E	;
 69)   1A67 FE 10       		    CP 16     ;MAX 16 COLORS	;MAX 16 COLORS
 70)   1A69 D2 B3 1D    		    JP NC,GRPHERR	;
 71)   1A6C DD 19       		    ADD IX,DE	;
 72)   1A6E DD 19       		    ADD IX,DE	;
 73)   1A70 DD 56 00    		    LD D,(IX)	;
 74)   1A73 DD 5E 01    		    LD E,(IX+1)     	;
 75)   1A76 72          		    LD (HL),D  ;SAVE AGAIN 	;SAVE AGAIN
 76)   1A77 23          		    INC HL     	;
 77)   1A78 73          		    LD (HL),E       	;
 78)   1A79 C9          		    RET          	;
 84)   1A7A AF          		    XOR A	;
 85)   1A7B 21 63 83    		    LD HL,GR_PARAM1	;
 87)   1A7E F5          		    PUSH AF	;
 88)   1A7F E5          		    PUSH HL	;
 89)   1A80 CD 94 5E    		    CALL EXPRI    ;GET 1ST PARAM	;GET 1ST PARAM
 90)   1A83 D9          		    EXX           ;HL HAS THE PARAM     	;HL HAS THE PARAM
 91)   1A84 D1          		    POP DE        ;GET PARAM ADDRESS	;GET PARAM ADDRESS
 92)   1A85 EB          		    EX DE,HL	;
 93)   1A86 73          		    LD (HL),E	;
 94)   1A87 23          		    INC HL	;
 95)   1A88 72          		    LD (HL),D	;
 96)   1A89 23          		    INC HL        ;PARAM SAVED     	;PARAM SAVED
 97)   1A8A F1          		    POP AF	;
 98)   1A8B 3C          		    INC A          	;
 99)   1A8C FE 04       		    CP 4	;
100)   1A8E C8          		    RET Z     	;
101)   1A8F F5          		    PUSH AF	;
102)   1A90 FD 7E 00    		    LD A,(IY)     	;
103)   1A93 FE 0D       		    CP 0x0D       ;FINISHED COMD LINE	;FINISHED COMD LINE
104)   1A95 28 0D       		    JR Z,NOMORE 	;
105)   1A97 FE 3A       		    CP ':'       ;FINISHED COMD LINE	;FINISHED COMD LINE
106)   1A99 28 09       		    JR Z,NOMORE      	;
107)   1A9B FE 2C       		    CP ','        ;CHECK FOR ','	;CHECK FOR ','
108)   1A9D 20 05       		    JR NZ,NOMORE     	;
109)   1A9F FD 23       		    INC IY        ;NEXT PARAM	;NEXT PARAM
110)   1AA1 F1          		    POP AF    	;
111)   1AA2 18 DA       		    JR GBP_NXT     	;
112)   1AA4 F1          		NOMORE:POP AF    	;
113)   1AA5 C9          		    RET	;
118)   1AA6 01 08 00    		    LD BC,8     ;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD	;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD
119)   1AA9 11 57 83    		    LD DE,GR_LASTX3	;
120)   1AAC 21 5B 83    		    LD HL,GR_LASTX2	;
121)   1AAF ED B0       		    LDIR     	;
122)   1AB1 2A 63 83    		    LD HL,(GR_PARAM1)	;
123)   1AB4 22 5F 83    		    LD (GR_LASTX),HL  ;SAVE TO LAST              	;SAVE TO LAST
124)   1AB7 2A 65 83    		    LD HL,(GR_PARAM2)	;
125)   1ABA 22 61 83    		    LD (GR_LASTY),HL  ;SAVE TO LAST     	;SAVE TO LAST
126)   1ABD C9          		  RET	;
130)   1ABE CD 7A 1A    		    CALL GETBASICPARAMS	;
131)   1AC1 FE 02       		    CP 2	;
132)   1AC3 C2 B3 1D    		    JP NZ,GRPHERR          	;
133)   1AC6 CD E0 1B    		BAS_DODRAW: CALL GRPH_SAVECOLORS	;
134)   1AC9 FD E5       		    PUSH IY	;
137)   1ACB 2A 5F 83    		    LD HL,(GR_LASTX)	;
138)   1ACE E5          		    PUSH HL	;
139)   1ACF 2A 61 83    		    LD HL,(GR_LASTY)	;
140)   1AD2 E5          		    PUSH HL	;
141)   1AD3 CD A6 1A    		    CALL GRPH_SAVELASTPOS	;
142)   1AD6 2A 63 83    		    LD HL,(GR_PARAM1)	;
143)   1AD9 E5          		    PUSH HL	;
144)   1ADA 2A 65 83    		    LD HL,(GR_PARAM2)	;
145)   1ADD E5          		    PUSH HL 	;
146)   1ADE CD 0B 12    		    CALL LCD_DRAWLINE 	;
148)   1AE1 FD E1       		    POP IY	;
149)   1AE3 CD F7 1B    		    CALL GRPH_RESTORECOLORS	;
150)   1AE6 C9          		    RET           ;RETURN TO BASIC  	;RETURN TO BASIC
154)   1AE7 CD 7A 1A    		@BAS_MOVE: CALL GETBASICPARAMS	;
155)   1AEA FE 02       		         CP 2	;
156)   1AEC C2 B3 1D    		         JP NZ,GRPHERR   	;
158)   1AEF CD A6 1A    		         CALL GRPH_SAVELASTPOS	;
159)   1AF2 C9          		         RET	;
165)   1AF3 CD 7A 1A    		@BAS_POINT:CALL GETBASICPARAMS	;
166)   1AF6 FE 02       		          CP 2	;
167)   1AF8 C2 B3 1D    		          JP NZ,GRPHERR   	;
170)   1AFB 2A 63 83    		          LD HL,(GR_PARAM1)	;
171)   1AFE E5          		          PUSH HL	;
172)   1AFF 2A 65 83    		          LD HL,(GR_PARAM2)	;
173)   1B02 E5          		          PUSH HL           	;
174)   1B03 CD 15 11    		          CALL LCD_READPIXEL	;
178)   1B06 FD 7E 00    		          LD A,(IY)  	;
179)   1B09 FE 29       		          CP ')'	;
180)   1B0B C2 B3 1D    		          JP NZ,GRPHERR 	;
181)   1B0E FD 23       		          INC IY 	;
184)   1B10 01 00 00    		          LD BC,0	;
185)   1B13 F3          		          DI	;
186)   1B14 E5          		          PUSH HL	;
187)   1B15 D9          		          EXX	;
188)   1B16 E1          		          POP HL	;
189)   1B17 D9          		          EXX           	;
190)   1B18 21 00 00    		          LD HL,0	;
191)   1B1B FB          		          EI	;
192)   1B1C C9          		          RET	;
198)   1B1D FE 00       		GRPH_GETGROUP: CP 0	;
200)   1B1F 21 23 1D    		    LD HL,PLOT00	;
201)   1B22 C8          		    RET Z	;
202)   1B23 FE 0A       		         CP 80.SHR.3	;
203)   1B25 21 33 1D    		    LD HL,PLOT80	;
204)   1B28 C8          		    RET Z	;
205)   1B29 FE 0C       		         CP 96.SHR.3	;
206)   1B2B 21 43 1D    		    LD HL,PLOT96	;
207)   1B2E C8          		    RET Z       	;
208)   1B2F FE 10       		         CP 128.SHR.3	;
209)   1B31 21 53 1D    		    LD HL,PLOT128	;
210)   1B34 C8          		    RET Z                   	;
211)   1B35 FE 12       		        CP 144.SHR.3	;
212)   1B37 21 63 1D    		    LD HL,PLOT144	;
213)   1B3A C8          		    RET Z                   	;
214)   1B3B FE 13       		         CP 152.SHR.3	;
215)   1B3D 21 73 1D    		    LD HL,PLOT152	;
216)   1B40 C8          		    RET Z                   	;
217)   1B41 FE 14       		         CP 160.SHR.3	;
218)   1B43 21 83 1D    		    LD HL,PLOT160	;
219)   1B46 C8          		    RET Z                   	;
220)   1B47 FE 18       		         CP 192.SHR.3	;
221)   1B49 21 93 1D    		    LD HL,PLOT192	;
222)   1B4C C8          		    RET Z                   	;
223)   1B4D FE 19       		         CP 200.SHR.3	;
224)   1B4F 21 A3 1D    		         LD HL,PLOT200	;
225)   1B52 C8          		         RET Z 	;
226)   1B53 21 00 00    		    LD HL,0	;
227)   1B56 C9          		    RET                                  	;
230)   1B57 CD 7A 1A    		@BAS_PLOT:CALL GETBASICPARAMS	;
231)   1B5A FE 03       		         CP 3	;
232)   1B5C C2 B3 1D    		         JP NZ,GRPHERR   	;
233)   1B5F 3A 63 83    		         LD A,(GR_PARAM1)	;
235)   1B62 01 04 00    		         LD BC,4	;
236)   1B65 21 65 83    		         LD HL,GR_PARAM2	;
237)   1B68 11 63 83    		         LD DE,GR_PARAM1	;
238)   1B6B ED B0       		         LDIR                    	;
239)   1B6D 47          		         LD B,A  ;COMMAND GROUP 5 BITS	;COMMAND GROUP 5 BITS
240)   1B6E CB 38       		         SRL B	;
241)   1B70 CB 38       		         SRL B	;
242)   1B72 CB 38       		         SRL B          	;
243)   1B74 E6 07       		         AND 7  	;
244)   1B76 4F          		         LD C,A  ;SPECIFIC COMMAND IN GROUP	;SPECIFIC COMMAND IN GROUP
245)   1B77 78          		         LD A,B	;
246)   1B78 CD 1D 1B    		         CALL GRPH_GETGROUP	;
247)   1B7B 7C          		         LD A,H	;
248)   1B7C FE 00       		         CP 0	;
249)   1B7E C8          		         RET Z ;RET IF HL=0 GROUP NOT IMPLEMENTED	;RET IF HL=0 GROUP NOT IMPLEMENTED
250)   1B7F 06 00       		         LD B,0	;
251)   1B81 CB 21       		         SLA C      ;C=C*2 2BYTE ADDRESSES	;C=C*2 2BYTE ADDRESSES
252)   1B83 09          		         ADD HL,BC  ;C IS 0-7 SPECIFIC COMMD	;C IS 0-7 SPECIFIC COMMD
253)   1B84 5E          		         LD E,(HL)	;
254)   1B85 23          		         INC HL	;
255)   1B86 56          		         LD D,(HL)	;
256)   1B87 EB          		         EX DE,HL	;
257)   1B88 E9          		         JP (HL)	;
259)   1B89 AF          		GRPH_NOTIMPL:  XOR     A	;
260)   1B8A CD F0 46    		  CALL    EXTERR	;
261)   1B8D 4E 4F 54 20 		  DEFM    'NOT IMPLEMENTED'	;
261)   1B91 49 4D 50 4C 		  DEFM    'NOT IMPLEMENTED'	;
261)   1B95 45 4D 45 4E 		  DEFM    'NOT IMPLEMENTED'	;
261)   1B99 54 45 44    		  DEFM    'NOT IMPLEMENTED'	;
262)   1B9C 00          		  DEFB    0     	;
266)   1B9D 2A 63 83    		GRPH_CALCREL: LD HL,(GR_PARAM1)	;
267)   1BA0 ED 5B 5F 83 		        LD DE,(GR_LASTX)	;
268)   1BA4 19          		        ADD HL,DE	;
269)   1BA5 22 63 83    		        LD (GR_PARAM1),HL	;
270)   1BA8 2A 65 83    		        LD HL,(GR_PARAM2)	;
271)   1BAB ED 5B 61 83 		        LD DE,(GR_LASTY)	;
272)   1BAF 19          		        ADD HL,DE	;
273)   1BB0 22 65 83    		        LD (GR_PARAM2),HL	;
274)   1BB3 C9          		    RET	;
277)   1BB4 CD 9D 1B    		        CALL GRPH_CALCREL	;
278)   1BB7 CD A6 1A    		        CALL GRPH_SAVELASTPOS         	;
279)   1BBA C9          		        RET	;
282)   1BBB CD 9D 1B    		        CALL GRPH_CALCREL	;
283)   1BBE CD C6 1A    		        CALL BAS_DODRAW	;
284)   1BC1 C9          		        RET	;
287)   1BC2 2A 01 83    		        LD HL,(FCOLOR)	;
288)   1BC5 E5          		        PUSH HL	;
289)   1BC6 2A 03 83    		        LD HL,(BCOLOR)	;
290)   1BC9 22 01 83    		        LD (FCOLOR),HL	;
291)   1BCC E1          		        POP HL	;
292)   1BCD 22 03 83    		        LD (BCOLOR),HL	;
293)   1BD0 C9          		        RET	;
296)   1BD1 2A 05 83    		        LD HL,(FGRCOL)	;
297)   1BD4 E5          		        PUSH HL	;
298)   1BD5 2A 07 83    		        LD HL,(BGRCOL)	;
299)   1BD8 22 05 83    		        LD (FGRCOL),HL	;
300)   1BDB E1          		        POP HL	;
301)   1BDC 22 07 83    		        LD (BGRCOL),HL	;
302)   1BDF C9          		        RET	;
306)   1BE0 01 04 00    		        LD BC,4 ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
307)   1BE3 21 01 83    		        LD HL,FCOLOR	;
308)   1BE6 11 09 83    		        LD DE,FCOLTM 	;
309)   1BE9 ED B0       		        LDIR	;
310)   1BEB 01 04 00    		        LD BC,4 ;2 FGRCOL + 2 BGRCOL	;2 FGRCOL + 2 BGRCOL
311)   1BEE 21 05 83    		        LD HL,FGRCOL	;
312)   1BF1 11 01 83    		        LD DE,FCOLOR	;
313)   1BF4 ED B0       		        LDIR         	;
314)   1BF6 C9          		    RET	;
318)   1BF7 01 04 00    		        LD BC,4 ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
319)   1BFA 21 09 83    		        LD HL,FCOLTM	;
320)   1BFD 11 01 83    		        LD DE,FCOLOR 	;
321)   1C00 ED B0       		        LDIR	;
322)   1C02 C9          		    RET	;
326)   1C03 CD D1 1B    		        CALL GRPH_SWAPGRCOLS	;
327)   1C06 CD 9D 1B    		        CALL GRPH_CALCREL	;
328)   1C09 CD C6 1A    		        CALL BAS_DODRAW	;
329)   1C0C CD D1 1B    		        CALL GRPH_SWAPGRCOLS	;
330)   1C0F C9          		        RET	;
333)   1C10 CD D1 1B    		        CALL GRPH_SWAPGRCOLS	;
334)   1C13 CD C6 1A    		        CALL BAS_DODRAW	;
335)   1C16 CD D1 1B    		        CALL GRPH_SWAPGRCOLS	;
336)   1C19 C9          		        RET	;
339)   1C1A CD C6 1A    		        CALL BAS_DODRAW  ;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT	;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT
340)   1C1D 2A 57 83    		        LD HL,(GR_LASTX3)	;
341)   1C20 22 63 83    		        LD (GR_PARAM1),HL	;
342)   1C23 2A 59 83    		        LD HL,(GR_LASTY3)	;
343)   1C26 22 65 83    		        LD (GR_PARAM2),HL	;
344)   1C29 CD C6 1A    		        CALL BAS_DODRAW  ;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT	;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT
345)   1C2C 2A 57 83    		        LD HL,(GR_LASTX3)	;
346)   1C2F 22 63 83    		        LD (GR_PARAM1),HL	;
347)   1C32 2A 59 83    		        LD HL,(GR_LASTY3)	;
348)   1C35 22 65 83    		        LD (GR_PARAM2),HL	;
349)   1C38 CD C6 1A    		        CALL BAS_DODRAW  ;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT	;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT
350)   1C3B 01 04 00    		        LD BC,4	;
351)   1C3E 21 57 83    		        LD HL,GR_LASTX3	;
352)   1C41 11 5F 83    		        LD DE,GR_LASTX	;
353)   1C44 ED B0       		        LDIR               ;SET LASTX,LASTY         	;SET LASTX,LASTY
354)   1C46 C9          		    RET	;
356)   1C47 CD D1 1B    		GRPH_TRIANGLEBC:CALL GRPH_SWAPGRCOLS	;
357)   1C4A CD 1A 1C    		        CALL GRPH_TRIANGLE	;
358)   1C4D CD D1 1B    		        CALL GRPH_SWAPGRCOLS	;
359)   1C50 C9          		    RET	;
362)   1C51 21 63 83    		GRPH_RECT:LD HL,GR_PARAM1	;
363)   1C54 11 67 83    		        LD DE,GR_PARAM3	;
364)   1C57 01 04 00    		        LD BC,4	;
365)   1C5A ED B0       		        LDIR               ;COPY PARAM1,2 TO 3,4         	;COPY PARAM1,2 TO 3,4
366)   1C5C 2A 61 83    		        LD HL,(GR_LASTY)	;
367)   1C5F E5          		        PUSH HL            ;PT1_Y	;PT1_Y
368)   1C60 2A 5F 83    		        LD HL,(GR_LASTX)	;
369)   1C63 E5          		        PUSH HL            ;PT1_X         	;PT1_X
370)   1C64 2A 61 83    		        LD HL,(GR_LASTY)         	;
371)   1C67 22 65 83    		        LD (GR_PARAM2),HL         	;
372)   1C6A CD C6 1A    		        CALL BAS_DODRAW    ;PT1_X,PT1_Y TO PT2_X,PT1_Y	;PT1_X,PT1_Y TO PT2_X,PT1_Y
373)   1C6D 2A 69 83    		        LD HL,(GR_PARAM4)	;
374)   1C70 22 65 83    		        LD (GR_PARAM2),HL	;
375)   1C73 CD C6 1A    		        CALL BAS_DODRAW    ;PT2_X,PT1_Y TO PT2_X,PT2_Y	;PT2_X,PT1_Y TO PT2_X,PT2_Y
376)   1C76 E1          		        POP HL             ;PT1_X	;PT1_X
377)   1C77 22 63 83    		        LD (GR_PARAM1),HL         	;
378)   1C7A CD C6 1A    		        CALL BAS_DODRAW    ;PT2_X,PT2_Y TO PT1_X,PT2_Y	;PT2_X,PT2_Y TO PT1_X,PT2_Y
379)   1C7D E1          		        POP HL             ;PT1_Y	;PT1_Y
380)   1C7E 22 65 83    		        LD (GR_PARAM2),HL	;
381)   1C81 CD C6 1A    		        CALL BAS_DODRAW    ;PT1_X,PT2_Y TO PT1_X,PT1_Y	;PT1_X,PT2_Y TO PT1_X,PT1_Y
382)   1C84 01 04 00    		        LD BC,4	;
383)   1C87 21 67 83    		        LD HL,GR_PARAM3	;
384)   1C8A 11 5F 83    		        LD DE,GR_LASTX	;
385)   1C8D ED B0       		        LDIR               ;SET LASTX,LASTY	;SET LASTX,LASTY
386)   1C8F C9          		        RET	;
388)   1C90 CD D1 1B    		GRPH_RECTBC:CALL GRPH_SWAPGRCOLS	;
389)   1C93 CD 51 1C    		        CALL GRPH_RECT	;
390)   1C96 CD D1 1B    		        CALL GRPH_SWAPGRCOLS	;
391)   1C99 C9          		    RET	;
394)   1C9A CD E0 1B    		GRPH_CIRCREL: CALL GRPH_SAVECOLORS	;
395)   1C9D 2A 63 83    		        LD HL,(GR_PARAM1)	;
396)   1CA0 7C          		        LD A,H	;
397)   1CA1 B5          		        OR L	;
398)   1CA2 20 06       		        JR NZ,CIRE_DOIT 	;
399)   1CA4 2A 65 83    		        LD HL,(GR_PARAM2)	;
400)   1CA7 7C          		        LD A,H	;
401)   1CA8 B5          		        OR L	;
402)   1CA9 C8          		        RET Z              ; RETURN IF BOTH PARAMS ARE ZERO         	; RETURN IF BOTH PARAMS ARE ZERO
403)   1CAA ED 5B 5F 83 		CIRE_DOIT:LD DE,(GR_LASTX)	;
404)   1CAE D5          		        PUSH DE	;
405)   1CAF ED 5B 61 83 		        LD DE,(GR_LASTY)	;
406)   1CB3 D5          		        PUSH DE 	;
407)   1CB4 E5          		        PUSH HL	;
408)   1CB5 CD 02 14    		        CALL LCD_CIRCLE	;
409)   1CB8 CD F7 1B    		        CALL GRPH_RESTORECOLORS	;
410)   1CBB C9          		        RET  	;
412)   1CBC CD D1 1B    		GRPH_CIRCRELBC:CALL GRPH_SWAPGRCOLS	;
413)   1CBF CD 9A 1C    		        CALL GRPH_CIRCREL	;
414)   1CC2 CD D1 1B    		        CALL GRPH_SWAPGRCOLS	;
415)   1CC5 C9          		        RET	;
421)   1CC6 C9          		GRPH_CIRCLE:RET	;
422)   1CC7 2A 5F 83    		        LD HL,(GR_LASTX)	;
423)   1CCA ED 5B 63 83 		        LD DE,(GR_PARAM1)	;
424)   1CCE AF          		        XOR A	;
425)   1CCF ED 42       		        SBC HL,BC	;
426)   1CD1 22 67 83    		        LD (GR_PARAM3),HL    ;X2-X1	;X2-X1
427)   1CD4 2A 61 83    		        LD HL,(GR_LASTY)	;
428)   1CD7 ED 5B 65 83 		        LD DE,(GR_PARAM2)	;
429)   1CDB AF          		        XOR A	;
430)   1CDC ED 42       		        SBC HL,BC	;
431)   1CDE 22 69 83    		        LD (GR_PARAM4),HL    ;Y2-Y1         	;Y2-Y1
433)   1CE1 ED 4B 67 83 		        LD BC,(GR_PARAM3)	;
434)   1CE5 C5          		        PUSH BC	;
435)   1CE6 D1          		        POP DE	;
436)   1CE7 CD 79 27    		        CALL MULT32   ;BCHL RESULT	;BCHL RESULT
437)   1CEA D9          		        EXX	;
438)   1CEB C5          		        PUSH BC	;
439)   1CEC D1          		        POP DE	;
440)   1CED D9          		        EXX	;
441)   1CEE E5          		        PUSH HL       ;DE LOW         	;DE LOW
442)   1CEF ED 4B 69 83 		        LD BC,(GR_PARAM4)	;
443)   1CF3 C5          		        PUSH BC	;
444)   1CF4 D1          		        POP DE	;
445)   1CF5 CD 79 27    		        CALL MULT32   ;BCHL RESULT	;BCHL RESULT
446)   1CF8 D9          		        EXX         	;
447)   1CF9 C5          		        PUSH BC	;
448)   1CFA E1          		        POP HL	;
449)   1CFB D9          		        EXX	;
450)   1CFC D1          		        POP DE	;
452)   1CFD CD 94 27    		        CALL ADD32	;
456)   1D00 C9          		        RET	;
458)   1D01 CD D1 1B    		GRPH_CIRCLEBC:CALL GRPH_SWAPGRCOLS	;
459)   1D04 CD C6 1C    		        CALL GRPH_CIRCLE	;
460)   1D07 CD D1 1B    		        CALL GRPH_SWAPGRCOLS	;
461)   1D0A C9          		        RET  	;
465)   1D0B CD D1 1B    		GRPH_FILL: CALL GRPH_SWAPGRCOLS 	;
466)   1D0E CD E0 1B    		        CALL GRPH_SAVECOLORS	;
467)   1D11 2A 63 83    		        LD HL,(GR_PARAM1)	;
468)   1D14 E5          		        PUSH HL	;
469)   1D15 2A 65 83    		        LD HL,(GR_PARAM2)	;
470)   1D18 E5          		        PUSH HL	;
471)   1D19 CD 86 15    		        CALL LCD_FILL	;
472)   1D1C CD F7 1B    		        CALL GRPH_RESTORECOLORS	;
473)   1D1F CD D1 1B    		        CALL GRPH_SWAPGRCOLS	;
474)   1D22 C9          		        RET         	;
476)   1D23 B4 1B       		PLOT00: DW GRPH_MOVEREL	;
477)   1D25 BB 1B       		    DW GRPH_LINEREL	;
478)   1D27 89 1B       		    DW GRPH_NOTIMPL	;
479)   1D29 03 1C       		    DW GRPH_LINERELBC	;
480)   1D2B A6 1A       		    DW GRPH_SAVELASTPOS	;
481)   1D2D C6 1A       		    DW BAS_DODRAW	;
482)   1D2F 89 1B       		    DW GRPH_NOTIMPL     	;
483)   1D31 10 1C       		    DW GRPH_DRAWBC	;
485)   1D33 89 1B       		PLOT80: DW GRPH_NOTIMPL	;
486)   1D35 1A 1C       		    DW GRPH_TRIANGLE	;
487)   1D37 89 1B       		    DW GRPH_NOTIMPL	;
488)   1D39 47 1C       		    DW GRPH_TRIANGLEBC	;
489)   1D3B 89 1B       		    DW GRPH_NOTIMPL	;
490)   1D3D 1A 1C       		    DW GRPH_TRIANGLE	;
491)   1D3F 89 1B       		    DW GRPH_NOTIMPL     	;
492)   1D41 47 1C       		    DW GRPH_TRIANGLEBC	;
494)   1D43 89 1B       		PLOT96: DW GRPH_NOTIMPL	;
495)   1D45 51 1C       		    DW GRPH_RECT	;
496)   1D47 89 1B       		    DW GRPH_NOTIMPL	;
497)   1D49 90 1C       		    DW GRPH_RECTBC	;
498)   1D4B 89 1B       		    DW GRPH_NOTIMPL	;
499)   1D4D 51 1C       		    DW GRPH_RECT	;
500)   1D4F 89 1B       		    DW GRPH_NOTIMPL     	;
501)   1D51 90 1C       		    DW GRPH_RECTBC	;
503)   1D53 89 1B       		PLOT128: DW GRPH_NOTIMPL	;
504)   1D55 0B 1D       		    DW GRPH_FILL	;
505)   1D57 89 1B       		    DW GRPH_NOTIMPL	;
506)   1D59 89 1B       		    DW GRPH_NOTIMPL	;
507)   1D5B 89 1B       		    DW GRPH_NOTIMPL	;
508)   1D5D 89 1B       		    DW GRPH_NOTIMPL	;
509)   1D5F 89 1B       		    DW GRPH_NOTIMPL     	;
510)   1D61 89 1B       		    DW GRPH_NOTIMPL	;
512)   1D63 9A 1C       		PLOT144: DW GRPH_CIRCREL	;
513)   1D65 9A 1C       		    DW GRPH_CIRCREL	;
514)   1D67 89 1B       		    DW GRPH_NOTIMPL	;
515)   1D69 BC 1C       		    DW GRPH_CIRCRELBC	;
516)   1D6B C6 1C       		    DW GRPH_CIRCLE	;
517)   1D6D C6 1C       		    DW GRPH_CIRCLE	;
518)   1D6F 89 1B       		    DW GRPH_NOTIMPL     	;
519)   1D71 01 1D       		    DW GRPH_CIRCLEBC	;
521)   1D73 89 1B       		PLOT152: DW GRPH_NOTIMPL	;
522)   1D75 89 1B       		    DW GRPH_NOTIMPL	;
523)   1D77 89 1B       		    DW GRPH_NOTIMPL	;
524)   1D79 89 1B       		    DW GRPH_NOTIMPL	;
525)   1D7B 89 1B       		    DW GRPH_NOTIMPL	;
526)   1D7D 89 1B       		    DW GRPH_NOTIMPL	;
527)   1D7F 89 1B       		    DW GRPH_NOTIMPL     	;
528)   1D81 89 1B       		    DW GRPH_NOTIMPL	;
530)   1D83 89 1B       		PLOT160: DW GRPH_NOTIMPL	;
531)   1D85 89 1B       		    DW GRPH_NOTIMPL	;
532)   1D87 89 1B       		    DW GRPH_NOTIMPL	;
533)   1D89 89 1B       		    DW GRPH_NOTIMPL	;
534)   1D8B 89 1B       		    DW GRPH_NOTIMPL	;
535)   1D8D 89 1B       		    DW GRPH_NOTIMPL	;
536)   1D8F 89 1B       		    DW GRPH_NOTIMPL     	;
537)   1D91 89 1B       		    DW GRPH_NOTIMPL	;
539)   1D93 89 1B       		PLOT192: DW GRPH_NOTIMPL	;
540)   1D95 89 1B       		    DW GRPH_NOTIMPL	;
541)   1D97 89 1B       		    DW GRPH_NOTIMPL	;
542)   1D99 89 1B       		    DW GRPH_NOTIMPL	;
543)   1D9B 89 1B       		    DW GRPH_NOTIMPL	;
544)   1D9D 89 1B       		    DW GRPH_NOTIMPL	;
545)   1D9F 89 1B       		    DW GRPH_NOTIMPL     	;
546)   1DA1 89 1B       		    DW GRPH_NOTIMPL	;
548)   1DA3 89 1B       		PLOT200: DW GRPH_NOTIMPL	;
549)   1DA5 89 1B       		    DW GRPH_NOTIMPL	;
550)   1DA7 89 1B       		    DW GRPH_NOTIMPL	;
551)   1DA9 89 1B       		    DW GRPH_NOTIMPL	;
552)   1DAB 89 1B       		    DW GRPH_NOTIMPL	;
553)   1DAD 89 1B       		    DW GRPH_NOTIMPL	;
554)   1DAF 89 1B       		    DW GRPH_NOTIMPL     	;
555)   1DB1 89 1B       		    DW GRPH_NOTIMPL	;
558)   1DB3 AF          		  XOR     A	;
559)   1DB4 CD F0 46    		  CALL    EXTERR	;
560)   1DB7 70 61 72 61 		  DEFM    'param error'	;
560)   1DBB 6D 20 65 72 		  DEFM    'param error'	;
560)   1DBF 72 6F 72    		  DEFM    'param error'	;
561)   1DC2 00          		  DEFB    0     	;
  6)   1DC3 11 B9 83    		@MYOS_OSSAVE:  LD DE,STRGBUFF	;
  7)   1DC6 7E          		OSNXT:         LD A,(HL)          ;hl = ACCS =FILENAME ENDS WITH 0X0D	;hl = ACCS =FILENAME ENDS WITH 0X0D
  8)   1DC7 FE 0D       		               CP 13      ;	;
  9)   1DC9 20 01       		               JR NZ,OSCONT	;
 10)   1DCB AF          		               XOR A	;
 11)   1DCC 12          		OSCONT:        LD (DE),A	;
 12)   1DCD 23          		               INC HL	;
 13)   1DCE 13          		               INC DE	;
 14)   1DCF FE 00       		               CP 0 	;
 15)   1DD1 20 F3       		               JR NZ,OSNXT	;
 16)   1DD3 3E 04       		               LD A,4             ;OPEN FILE FOR WRITE AND CREATE IT	;OPEN FILE FOR WRITE AND CREATE IT
 17)   1DD5 C5          		               PUSH BC	;
 18)   1DD6 CD 5F 0A    		               CALL STRG_OPNFILE  ;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A  	;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A
 19)   1DD9 C1          		               POP BC             ;bc = length of program	;bc = length of program
 20)   1DDA ED 5B DC 82 		               LD DE,(PAGE)	;
 21)   1DDE CD 8B 0A    		               CALL STRG_BLKWRITE ;BLOCK WRITE	;BLOCK WRITE
 22)   1DE1 FE C8       		               CP FCMDOK	;
 23)   1DE3 20 07       		               JR NZ,SVERR	;
 24)   1DE5 3A E5 83    		               LD A,(FID)	;
 25)   1DE8 CD 7C 0A    		               CALL STRG_CLSFILE	;
 26)   1DEB C9          		               RET                ;ON RET A=RESULT	;ON RET A=RESULT
 27)   1DEC FE CA       		SVERR:         CP FNOTFND	;
 28)   1DEE CA 45 1E    		               JP Z,FLNOTF	;
 29)   1DF1 CD F0 46    		               CALL    EXTERR	;
 30)   1DF4 45 72 72 6F 		               DEFM    'Error Saving'	;
 30)   1DF8 72 20 53 61 		               DEFM    'Error Saving'	;
 30)   1DFC 76 69 6E 67 		               DEFM    'Error Saving'	;
 31)   1E00 00          		        DEFB    0   	;
 35)   1E01 11 B9 83    		@MYOS_OSLOAD:LD DE,STRGBUFF	;
 36)   1E04 7E          		OLNXT:      LD A,(HL)	;
 37)   1E05 FE 0D       		            CP 13      ;	;
 38)   1E07 20 01       		            JR NZ,OLCONT	;
 39)   1E09 AF          		            XOR A	;
 40)   1E0A 12          		OLCONT:     LD (DE),a	;
 41)   1E0B 23          		            INC HL	;
 42)   1E0C 13          		            INC DE	;
 43)   1E0D FE 00       		            CP 0 	;
 44)   1E0F 20 F3       		            JR NZ,OLNXT	;
 45)   1E11 CD 5F 0A    		            CALL STRG_OPNFILE ;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A             	;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A
 46)   1E14 2A DC 82    		            LD HL,(PAGE)	;
 47)   1E17 EB          		            EX DE,HL	;
 48)   1E18 01 00 00    		            LD BC,0           ;ZERO MEANS LOAD ALL	;ZERO MEANS LOAD ALL
 49)   1E1B CD AB 0A    		            CALL STRG_BLKREAD ;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED	;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED
 50)   1E1E FE C8       		            CP FCMDOK	;
 51)   1E20 20 0E       		            JR NZ,LDERR	;
 52)   1E22 3A E5 83    		            LD A,(FID)	;
 53)   1E25 CD 7C 0A    		            CALL STRG_CLSFILE	;
 54)   1E28 21 DE 82    		            LD HL,TOP ;SAVE TOP OF BASIC 	;SAVE TOP OF BASIC
 55)   1E2B 73          		            LD (HL),E	;
 56)   1E2C 23          		            INC HL	;
 57)   1E2D 72          		            LD (HL),D            	;
 58)   1E2E 37          		            SCF       ;SET C = NO ERROR            	;SET C = NO ERROR
 59)   1E2F C9          		            RET                           	;
 60)   1E30 FE CA       		LDERR:      CP FNOTFND	;
 61)   1E32 28 11       		            JR Z,FLNOTF	;
 62)   1E34 CD F0 46    		            CALL    EXTERR	;
 63)   1E37 45 72 72 6F 		          DEFM    'Error Loading'	;
 63)   1E3B 72 20 4C 6F 		          DEFM    'Error Loading'	;
 63)   1E3F 61 64 69 6E 		          DEFM    'Error Loading'	;
 63)   1E43 67          		          DEFM    'Error Loading'	;
 64)   1E44 00          		          DEFB    0   	;
 65)   1E45 CD F0 46    		FLNOTF:     CALL    EXTERR	;
 66)   1E48 57 72 6F 6E 		          DEFM    'Wrong Filename'	;
 66)   1E4C 67 20 46 69 		          DEFM    'Wrong Filename'	;
 66)   1E50 6C 65 6E 61 		          DEFM    'Wrong Filename'	;
 66)   1E54 6D 65       		          DEFM    'Wrong Filename'	;
 67)   1E56 00          		          DEFB    0   	;
 41)   1E57 C3 55 17    		@MYOS_CLRSCN:          JP LCD_CLRSCR        ; CLRSCN: clears the screen.	; CLRSCN: clears the screen.
 44)   1E5A 7D          		                LD A,L	;
 45)   1E5B 32 A7 83    		                LD (TIMECTR),A	;
 46)   1E5E 7C          		     LD A,H	;
 47)   1E5F 32 A8 83    		        LD (TIMECTR+1),A	;
 48)   1E62 7B          		        LD A,E	;
 49)   1E63 32 A9 83    		        LD (TIMECTR+2),A	;
 50)   1E66 7A          		        LD A,D	;
 51)   1E67 32 AA 83    		        LD (TIMECTR+3),A         	;
 52)   1E6A C9          		        RET	;
 56)   1E6B 3A A7 83    		         LD A,(TIMECTR)	;
 57)   1E6E 6F          		         LD L,A	;
 58)   1E6F 3A A8 83    		        LD A,(TIMECTR+1)	;
 59)   1E72 67          		        LD H,A	;
 60)   1E73 3A A9 83    		        LD A,(TIMECTR+2)	;
 61)   1E76 5F          		        LD E,A	;
 62)   1E77 3A AA 83    		        LD A,(TIMECTR+3)	;
 63)   1E7A 57          		        LD D,A	;
 64)   1E7B C9          		       RET         	;
 66)   1E7C 63          		          LD H,E	;
 67)   1E7D E5          		          PUSH HL	;
 68)   1E7E CD 0E 17    		          CALL LCD_RMVCURS	;
 69)   1E81 E1          		          POP HL	;
 70)   1E82 7C          		          LD A,H	;
 71)   1E83 32 0D 83    		          LD (CURSORX),A	;
 72)   1E86 7D          		          LD A,L	;
 73)   1E87 32 0E 83    		          LD (CURSORY),A	;
 74)   1E8A CD 13 17    		          CALL LCD_PRNCURS                      	;
 75)   1E8D C9          		          RET	;
 77)   1E8E 16 00       		          LD D,0	;
 78)   1E90 3A 0D 83    		          LD A,(CURSORX)	;
 79)   1E93 5F          		          LD E,A	;
 80)   1E94 26 00       		          LD H,0	;
 82)   1E96 CD 64 16    		          CALL LCD_CALCLINE ;GETS CURSORY WITH SCROLL	;GETS CURSORY WITH SCROLL
 83)   1E99 6F          		       LD L,A	;
 84)   1E9A C9          		       RET	;
 85)   1E9B 06 50       		KEYGET: LD      B,80 ;SCREEN WIDTH IN CHARS      	;SCREEN WIDTH IN CHARS
 87)   1E9D E5          		         PUSH    HL	;
 88)   1E9E ED 62       		          SBC     HL,HL           ;HL=0	;HL=0
 89)   1EA0 CD 88 20    		          CALL    MYOS_OSKEY	;
 90)   1EA3 E1          		          POP     HL	;
 91)   1EA4 D8          		          RET     C	;
 92)   1EA5 18 F6       		          JR      MYOS_OSRDCH           	;
 93)   1EA7 C9          		       RET  	;
 95)   1EA8 F5          		       PUSH    AF	;
 96)   1EA9 D5          		          PUSH    DE	;
 97)   1EAA E5          		          PUSH    HL	;
 98)   1EAB DD E5       		          PUSH    IX                      	;
 99)   1EAD 5F          		          LD      E,A	;
100)   1EAE CD A7 20    		          CALL    ESCTEST	;
103)   1EB1 7B          		          LD A,E	;
104)   1EB2 FE 20       		          CP 32	;
105)   1EB4 38 0D       		          JR C,CTRCODE	;
106)   1EB6 FE 7F       		          CP 127   ;BACKSPACE 	;BACKSPACE
107)   1EB8 C2 3C 20    		          JP NZ,PRINTIT	;
108)   1EBB 3E 08       		          LD A,8            ;DO A BACKSPACE	;DO A BACKSPACE
109)   1EBD CD 90 15    		          CALL LCD_PRINTCHAR	;
110)   1EC0 C3 3F 20    		          JP OSWREXIT	;
111)   1EC3 FE 04       		CTRCODE:  CP 4 ;WRITE TEXT AT TEXT POS	;WRITE TEXT AT TEXT POS
112)   1EC5 20 06       		          JR NZ,CC1	;
113)   1EC7 32 16 83    		          LD (VDUMODE),A           	;
114)   1ECA C3 3F 20    		          JP OSWREXIT	;
115)   1ECD FE 05       		CC1:      CP 5 ;WRITE TEXT AT GRAPH POS    	;WRITE TEXT AT GRAPH POS
116)   1ECF 20 06       		          JR NZ,CC2	;
117)   1ED1 32 16 83    		          LD (VDUMODE),A	;
118)   1ED4 C3 3F 20    		          JP OSWREXIT	;
119)   1ED7 FE 06       		CC2:      CP 6 ;ENABLE OUTPUT TO SCREEN	;ENABLE OUTPUT TO SCREEN
120)   1ED9 20 03       		          JR NZ,CC3	;
121)   1EDB C3 3F 20    		          JP OSWREXIT	;
122)   1EDE FE 07       		CC3:      CP 7 ;BEEP	;BEEP
123)   1EE0 20 03       		          JR NZ,CC4	;
124)   1EE2 C3 3F 20    		          JP OSWREXIT	;
125)   1EE5 FE 08       		CC4:      CP 8 ;MOVE TEXT CURSOR BACK A CHAR	;MOVE TEXT CURSOR BACK A CHAR
126)   1EE7 20 03       		          JR NZ,CC5	;
127)   1EE9 C3 3C 20    		          JP PRINTIT	;
134)   1EEC FE 09       		CC5:      CP 9 ;MOVE TEXT CURSOR FORWARD A CHAR	;MOVE TEXT CURSOR FORWARD A CHAR
135)   1EEE 20 0F       		          JR NZ,CC6	;
136)   1EF0 3A 0D 83    		          LD A,(CURSORX)	;
137)   1EF3 3C          		          INC A	;
138)   1EF4 FE 50       		          CP 80	;
139)   1EF6 D2 3F 20    		          JP NC,OSWREXIT	;
140)   1EF9 32 0D 83    		          LD (CURSORX),A         	;
141)   1EFC C3 3F 20    		          JP OSWREXIT   	;
142)   1EFF FE 0A       		CC6:      CP 10 ;MOVE TEXT DOWN LF	;MOVE TEXT DOWN LF
143)   1F01 CA 3C 20    		          JP Z,PRINTIT	;
144)   1F04 FE 0B       		CC7:      CP 11 ;MOVE TEXT UP	;MOVE TEXT UP
145)   1F06 20 0F       		          JR NZ,CC8	;
146)   1F08 3A 0E 83    		          LD A,(CURSORY)	;
147)   1F0B 3D          		          DEC A	;
148)   1F0C FE FF       		          CP 0XFF	;
149)   1F0E CA 3F 20    		          JP Z,OSWREXIT	;
150)   1F11 32 0E 83    		          LD (CURSORY),A           	;
151)   1F14 C3 3F 20    		          JP OSWREXIT   	;
152)   1F17 FE 0C       		CC8:      CP 12 ; CLS	; CLS
153)   1F19 20 06       		          JR NZ,CC9	;
154)   1F1B CD 55 17    		          CALL LCD_CLRSCR	;
155)   1F1E C3 3F 20    		          JP OSWREXIT   	;
156)   1F21 FE 0D       		CC9:      CP 13 ;GOTO START OF LINE CR	;GOTO START OF LINE CR
157)   1F23 CA 3C 20    		          JP Z,PRINTIT	;
158)   1F26 FE 0E       		CC10:     CP 14 ;ENABLE THE AUTOPAGING MODE	;ENABLE THE AUTOPAGING MODE
159)   1F28 20 03       		          JR NZ,CC11	;
160)   1F2A C3 3F 20    		          JP OSWREXIT   	;
161)   1F2D FE 0F       		CC11:     CP 15 ;DISABLE THE AUTOPAGING MODE	;DISABLE THE AUTOPAGING MODE
162)   1F2F 20 03       		          JR NZ,CC12	;
163)   1F31 C3 3F 20    		          JP OSWREXIT   	;
164)   1F34 FE 10       		CC12:     CP 16 ;CLG	;CLG
165)   1F36 20 06       		          JR NZ,CC13	;
166)   1F38 CD C9 24    		          CALL MYOS_CLG       	;
167)   1F3B C3 3F 20    		          JP OSWREXIT   	;
168)   1F3E FE 11       		CC13:     CP 17 ; SAME AS COLOUR	; SAME AS COLOUR
169)   1F40 20 09       		          JR NZ,CC14	;
171)   1F42 FD 23       		          INC IY ;SKIP ','	;SKIP ','
172)   1F44 CD 94 5E    		          CALL    EXPRI	;
173)   1F47 D9          		          EXX ;l has the param  color	;l has the param  color
174)   1F48 C3 3F 20    		          JP OSWREXIT   	;
175)   1F4B FE 12       		CC14:     CP 18 ;SAME AS GCOL	;SAME AS GCOL
176)   1F4D 20 0F       		          JR NZ,CC15	;
177)   1F4F FD 23       		          INC IY ;SKIP ','	;SKIP ','
178)   1F51 CD 94 5E    		          CALL    EXPRI	;
179)   1F54 D9          		          EXX ;l has the param  mode	;l has the param  mode
180)   1F55 FD 23       		          INC IY ;SKIP ','	;SKIP ','
181)   1F57 CD 94 5E    		          CALL    EXPRI	;
182)   1F5A D9          		          EXX ;l has the param  color                                        	;l has the param  color
184)   1F5B C3 3F 20    		          JP OSWREXIT   	;
185)   1F5E FE 13       		CC15:     CP 19 ;SELECT A COLOR PALLETTE???	;SELECT A COLOR PALLETTE???
186)   1F60 20 0F       		          JR NZ,CC16	;
188)   1F62 06 05       		          LD B,5	;
189)   1F64 C5          		CC15AGN:  PUSH BC	;
190)   1F65 FD 23       		          INC IY ;SKIP ','	;SKIP ','
191)   1F67 CD 94 5E    		          CALL    EXPRI	;
192)   1F6A D9          		          EXX ;l has the param	;l has the param
193)   1F6B C1          		          POP BC	;
194)   1F6C 10 F6       		          DJNZ CC15AGN           	;
195)   1F6E C3 3F 20    		          JP OSWREXIT   	;
196)   1F71 FE 14       		CC16:     CP 20 ;RESTORE THE DEFAULT LOGICAL COLORS	;RESTORE THE DEFAULT LOGICAL COLORS
197)   1F73 20 03       		          JR NZ,CC17           	;
199)   1F75 C3 3F 20    		          JP OSWREXIT   	;
200)   1F78 FE 15       		CC17:     CP 21 ;NO OUTPUT TO SCREEN	;NO OUTPUT TO SCREEN
201)   1F7A 20 03       		          JR NZ,CC18	;
203)   1F7C C3 3F 20    		          JP OSWREXIT   	;
204)   1F7F FE 16       		CC18:     CP 22 ;LIKE MODE	;LIKE MODE
205)   1F81 20 09       		          JR NZ,CC19	;
206)   1F83 FD 23       		          INC IY ;SKIP ','	;SKIP ','
207)   1F85 CD 94 5E    		          CALL    EXPRI	;
208)   1F88 D9          		          EXX ;l has the param           	;l has the param
209)   1F89 C3 3F 20    		          JP OSWREXIT   	;
210)   1F8C FE 17       		CC19:     CP 23 ;Program characters and control the cursor.???	;Program characters and control the cursor.???
211)   1F8E 20 27       		          JR NZ,CC20	;
212)   1F90 06 09       		          LD B,9   ;9 PARAMS CHAR_NO +8 ROWS OF A CHAR	;9 PARAMS CHAR_NO +8 ROWS OF A CHAR
213)   1F92 FD 7E 00    		          LD A,(IY)	;
214)   1F95 FD 23       		          INC IY ;SKIP ',' OR ';'	;SKIP ',' OR ';'
215)   1F97 FE 3B       		          CP ';'	;
216)   1F99 20 01       		          JR NZ,CC19AGN	;
217)   1F9B 05          		          DEC B ; IF ; THE DELIMETER THEN 2 BYTES AT START   	; IF ; THE DELIMETER THEN 2 BYTES AT START
218)   1F9C C5          		CC19AGN:  PUSH BC	;
219)   1F9D CD 94 5E    		          CALL    EXPRI	;
220)   1FA0 D9          		          EXX ;l has the param           	;l has the param
221)   1FA1 FD 7E 00    		     LD A,(IY)	;
222)   1FA4 FE 2C       		     CP ','	;
223)   1FA6 28 07       		     JR Z,CC19NXT0              	;
224)   1FA8 FE 3B       		          CP ';'           	;
225)   1FAA 20 05       		          JR NZ,CC19NXT	;
226)   1FAC C1          		          POP BC	;
227)   1FAD 05          		          DEC B	;
228)   1FAE C5          		          PUSH BC	;
229)   1FAF FD 23       		CC19NXT0: INC IY ;SKIP ','           	;SKIP ','
230)   1FB1 C1          		CC19NXT:  POP BC	;
231)   1FB2 10 E8       		          DJNZ CC19AGN                     	;
232)   1FB4 C3 3F 20    		          JP OSWREXIT   	;
233)   1FB7 FE 18       		CC20:     CP 24 ;Define a graphics window	;Define a graphics window
234)   1FB9 20 11       		          JR NZ,CC21	;
235)   1FBB FD 23       		          INC IY ;SKIP ','	;SKIP ','
236)   1FBD 06 04       		          LD B,4   ;4 PARAMS TWO CORNERS OF A RECT	;4 PARAMS TWO CORNERS OF A RECT
237)   1FBF C5          		CC20AGN:  PUSH BC           	;
238)   1FC0 CD 94 5E    		          CALL    EXPRI	;
239)   1FC3 D9          		          EXX ;HL has the param	;HL has the param
240)   1FC4 FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
241)   1FC6 C1          		          POP BC	;
242)   1FC7 10 F6       		          DJNZ CC20AGN                                	;
243)   1FC9 C3 3F 20    		          JP OSWREXIT   	;
244)   1FCC FE 19       		CC21:     CP 25 ;Identical to PLOT.	;Identical to PLOT.
245)   1FCE 20 17       		          JR NZ,CC22	;
246)   1FD0 FD 23       		          INC IY ;SKIP ','	;SKIP ','
247)   1FD2 CD 94 5E    		          CALL    EXPRI	;
248)   1FD5 D9          		          EXX ;L has the param PLOTMODE	;L has the param PLOTMODE
249)   1FD6 FD 23       		          INC IY ;SKIP ','	;SKIP ','
250)   1FD8 CD 94 5E    		          CALL    EXPRI	;
251)   1FDB D9          		          EXX ;HL has the param X	;HL has the param X
252)   1FDC FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
253)   1FDE CD 94 5E    		          CALL    EXPRI	;
254)   1FE1 D9          		          EXX ;HL has the param Y	;HL has the param Y
255)   1FE2 FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
258)   1FE4 C3 3F 20    		          JP OSWREXIT   	;
259)   1FE7 FE 1A       		CC22:     CP 26 ;Restore the default text and graphics windows.	;Restore the default text and graphics windows.
260)   1FE9 20 02       		          JR NZ,CC23	;
261)   1FEB 18 52       		          JR OSWREXIT   	;
262)   1FED FE 1B       		CC23:     CP 27 ;Send the next character to the screen.	;Send the next character to the screen.
263)   1FEF 20 07       		          JR NZ,CC24	;
264)   1FF1 CD 94 5E    		          CALL    EXPRI	;
265)   1FF4 D9          		          EXX ;	;
266)   1FF5 7D          		          LD A,L	;
267)   1FF6 18 44       		          JR PRINTIT           	;
268)   1FF8 FE 1C       		CC24:     CP 28 ;Define a text window.	;Define a text window.
269)   1FFA 20 0E       		          JR NZ,CC25	;
270)   1FFC 06 04       		          LD B,4   ;4 PARAMS UPPERLEFT AND LOWERRIGHT	;4 PARAMS UPPERLEFT AND LOWERRIGHT
271)   1FFE C5          		CC24AGN:  PUSH BC	;
272)   1FFF FD 23       		     INC IY ;SKIP ','	;SKIP ','
273)   2001 CD 94 5E    		          CALL    EXPRI	;
274)   2004 D9          		          EXX ;l has the param	;l has the param
275)   2005 C1          		          POP BC           	;
276)   2006 10 F6       		          DJNZ CC24AGN                                	;
277)   2008 18 35       		          JR OSWREXIT   	;
278)   200A FE 1D       		CC25:     CP 29 ;Set the graphics origin.	;Set the graphics origin.
279)   200C 20 10       		          JR NZ,CC26	;
280)   200E FD 23       		          INC IY ;SKIP ','	;SKIP ','
281)   2010 CD 94 5E    		          CALL    EXPRI	;
282)   2013 D9          		          EXX ;HL has the param X	;HL has the param X
283)   2014 FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
284)   2016 CD 94 5E    		          CALL    EXPRI	;
285)   2019 D9          		          EXX ;HL has the param Y	;HL has the param Y
286)   201A FD 23       		          INC IY ;SKIP ';'	;SKIP ';'
288)   201C 18 21       		          JR OSWREXIT   	;
289)   201E FE 1E       		CC26:     CP 30 ;Home the text cursor to the top left of the screen.	;Home the text cursor to the top left of the screen.
290)   2020 20 08       		          JR NZ,CC27	;
291)   2022 21 00 00    		          LD HL,0	;
292)   2025 22 0D 83    		          LD (CURSORX),HL	;
293)   2028 18 15       		          JR OSWREXIT   	;
294)   202A FE 1F       		CC27:     CP 31 ;Move the text cursor - identical to TAB(x,y).	;Move the text cursor - identical to TAB(x,y).
295)   202C 20 11       		          JR NZ,OSWREXIT   	;
296)   202E FD 23       		          INC IY ;SKIP ','	;SKIP ','
297)   2030 CD 94 5E    		          CALL    EXPRI	;
298)   2033 D9          		          EXX ;l has the param X	;l has the param X
299)   2034 FD 23       		          INC IY ;SKIP ','	;SKIP ','
300)   2036 CD 94 5E    		          CALL    EXPRI	;
301)   2039 D9          		          EXX ;l has the param Y	;l has the param Y
303)   203A 18 03       		          JR OSWREXIT   	;
306)   203C CD 45 20    		PRINTIT:  CALL    EDPUT	;
307)   203F DD E1       		OSWREXIT: POP     IX	;
308)   2041 E1          		          POP     HL	;
309)   2042 D1          		          POP     DE	;
310)   2043 F1          		          POP     AF	;
311)   2044 C9          		          RET	;
316)   2045 3A 00 83    		EDPUT: LD      A,(FLAGS)	;
317)   2048 CB 5F       		       BIT     3,A	;
318)   204A 28 10       		       JR      Z,WRCH	;
319)   204C 7B          		       LD      A,E	;
320)   204D FE 20       		       CP      ' '	;
321)   204F D8          		       RET     C	;
322)   2050 2A 12 83    		       LD      HL,(EDPTR)	;
323)   2053 73          		       LD      (HL),E	;
324)   2054 2C          		       INC     L	;
325)   2055 C8          		       RET     Z	;
326)   2056 22 12 83    		       LD      (EDPTR),HL	;
327)   2059 C9          		       RET           	;
330)   205A 1E 3E       		          LD E,'>'        	;
331)   205C 7B          		WRCH:     LD A,E	;
333)   205D F5          		          PUSH AF	;
334)   205E C5          		          PUSH BC	;
335)   205F D5          		          PUSH DE	;
336)   2060 E5          		 PUSH HL	;
337)   2061 DD E5       		 PUSH IX	;
338)   2063 FD E5       		 PUSH IY     	;
339)   2065 F5          		          PUSH AF	;
340)   2066 C5          		          PUSH BC	;
341)   2067 D5          		          PUSH DE	;
342)   2068 E5          		     PUSH HL	;
343)   2069 CD 0E 17    		     CALL LCD_RMVCURS	;
344)   206C E1          		          POP HL	;
345)   206D D1          		          POP DE	;
346)   206E C1          		          POP BC	;
347)   206F F1          		          POP AF	;
348)   2070 CD 90 15    		          CALL LCD_PRINTCHAR	;
349)   2073 CD 13 17    		          CALL LCD_PRNCURS	;
351)   2076 FD E1       		          POP IY	;
352)   2078 DD E1       		          POP IX	;
353)   207A E1          		          POP HL	;
354)   207B D1          		          POP DE	;
355)   207C C1          		          POP BC	;
356)   207D F1          		          POP AF	;
357)   207E C9          		       RET 	;
359)   207F 3A 00 83    		TOGGLE: LD     A,(FLAGS)	;
360)   2082 EE 04       		       XOR     00000100B	;
361)   2084 32 00 83    		       LD      (FLAGS),A	;
362)   2087 C9          		       RET	;
371)   2088 E5          		@MYOS_OSKEY: PUSH   HL	;
372)   2089 21 15 83    		           LD      HL,INKEY	;
373)   208C 7E          		           LD      A,(HL)	;
374)   208D 36 00       		           LD      (HL),0	;
375)   208F E1          		           POP     HL	;
376)   2090 B7          		           OR      A	;
377)   2091 37          		           SCF	;
378)   2092 C0          		           RET     NZ  	;
380)   2093 CD 30 25    		           CALL    GETKEYNW	;
382)   2096 D0          		           RET     NC	;
383)   2097 FE 1B       		           CP      ESC	;
384)   2099 37          		           SCF	;
385)   209A C0          		           RET     NZ                        	;
386)   209B E5          		ESCSET:  PUSH    HL	;
387)   209C 21 00 83    		         LD      HL,FLAGS	;
388)   209F CB 76       		         BIT     6,(HL)          ; ESC DISABLED?	; ESC DISABLED?
389)   20A1 20 02       		         JR      NZ,ESCDIS	;
390)   20A3 CB FE       		         SET     7,(HL)          ; SET ESCAPE FLAG	; SET ESCAPE FLAG
391)   20A5 E1          		ESCDIS:  POP     HL	;
392)   20A6 C9          		         RET 	;
393)   20A7 CD 26 06    		ESCTEST: CALL RS_RXNW	;
394)   20AA B7          		        OR A	;
395)   20AB C8          		        RET Z	;
396)   20AC FE 1B       		        CP 0x1B   ; ESC 	; ESC
397)   20AE 28 EB       		        JR Z,ESCSET	;
398)   20B0 32 15 83    		        LD (INKEY),A	;
399)   20B3 C9          		         RET	;
401)   20B4 CD A7 20    		@MYOS_TRAP:  CALL ESCTEST	;
402)   20B7 3A 00 83    		@MYOS_LTRAP: LD A,(FLAGS)	;
403)   20BA B7          		            OR A	;
404)   20BB F0          		             RET P	;
405)   20BC 21 00 83    		ABORT:        LD HL,FLAGS 	;
406)   20BF CB BE       		            RES 7,(HL)	;
407)   20C1 C3 C2 4D    		            JP ESCAPE          	;
416)   20C4 F3          		           DI	;
417)   20C5 21 F6 82    		           LD HL,RANDOM    ; SET RANDOM SEED TO NON 0	; SET RANDOM SEED TO NON 0
418)   20C8 3E 06       		           LD A,0x06	;
419)   20CA 77          		           LD (HL),A	;
420)   20CB 3E BB       		           LD A,0xBB	;
421)   20CD 77          		           LD (HL),A	;
422)   20CE 21 00 00    		           LD HL,0	;
423)   20D1 22 0D 83    		           LD (CURSORX),HL  ; CURSOR X 7 Y ZEROED            	; CURSOR X 7 Y ZEROED
424)   20D4 11 FF FF    		           LD DE,COL_WHITE   ; SET FCOLOR AND BCOLOR DEFAULT VALUES	; SET FCOLOR AND BCOLOR DEFAULT VALUES
425)   20D7 21 01 83    		           LD HL,FCOLOR	;
426)   20DA 73          		           LD (HL),E	;
427)   20DB 23          		           INC HL	;
428)   20DC 72          		           LD (HL),D	;
429)   20DD 23          		           INC HL	;
430)   20DE 11 00 00    		           LD DE,COL_BLACK	;
431)   20E1 73          		           LD (HL),E	;
432)   20E2 23          		           INC HL	;
433)   20E3 72          		           LD (HL),D     	;
434)   20E4 01 04 00    		           LD BC,4     ; COPY SAME COLORS TO GRAPHICS	; COPY SAME COLORS TO GRAPHICS
435)   20E7 11 05 83    		           LD DE,FGRCOL	;
436)   20EA 21 01 83    		           LD HL,FCOLOR	;
437)   20ED ED B0       		           LDIR                                          	;
438)   20EF 11 17 83    		           LD DE,FCOLPAL	;
439)   20F2 CD FD 20    		           CALL COPYPAL	;
440)   20F5 11 37 83    		           LD DE,BCOLPAL            	;
441)   20F8 CD FD 20    		           CALL COPYPAL	;
442)   20FB 18 16       		           JR OSFINSH;	;
443)   20FD 21 6E 21    		COPYPAL:   LD HL,COL_PALET   	;
444)   2100 01 20 00    		           LD BC,16*2         ;SHOULD ADD 8 MORE COLORS 	;SHOULD ADD 8 MORE COLORS
445)   2103 ED B0       		           LDIR	;
446)   2105 AF          		           XOR A	;
447)   2106 32 0F 83    		           LD (SCRLN),A	;
448)   2109 21 00 00    		           LD HL,0	;
449)   210C 22 A7 83    		           LD (TIMECTR),HL	;
450)   210F 22 A9 83    		           LD (TIMECTR+2),HL            	;
451)   2112 C9          		           RET	;
453)   2113 CD 55 17    		OSFINSH:   CALL LCD_CLRSCR	;
454)   2116 CD 2B 4C    		           CALL    TELL	;
455)   2119 43 44 65 73 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   211D 70 20 4D 6F 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2121 64 75 6C 61 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2125 72 20 5A 38 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2129 30 20 43 6F 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   212D 6D 70 75 74 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2131 65 72 20 32 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2135 30 32 30 2D 		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
455)   2139 32 31       		     DEFM "CDesp Modular Z80 Computer 2020-21"	;
456)   213B 0A 0D       		     DEFB 0AH,0DH	;
457)   213D 41 54 4C 41 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   2141 53 20 4F 70 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   2145 65 72 61 74 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   2149 69 6E 67 20 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   214D 53 79 73 74 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   2151 65 6D 20 56 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   2155 65 72 73 69 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   2159 6F 6E 20 32 		     DEFM "ATLAS Operating System Version 2.5"      	;
457)   215D 2E 35       		     DEFM "ATLAS Operating System Version 2.5"      	;
458)   215F 0A 0D 0A 0D 		     DEFB 0AH,0DH,0AH,0DH      	;
459)   2163 00          		     DEFB 00H	;
460)   2164 AF          		           XOR A	;
461)   2165 11 FF FF    		          LD DE,0xFFFF  ;DE = HIMEM	;DE = HIMEM
462)   2168 5F          		          LD E,A              ;PAGE BOUNDARY	;PAGE BOUNDARY
463)   2169 21 E7 83    		          LD HL,@USER      	;
464)   216C FB          		          EI     	;
465)   216D C9          		          RET 	;
466)   216E 00 00       		COL_PALET: DW COL_BLACK	;
467)   2170 00 F8       		           DW COL_RED	;
468)   2172 C0 07       		           DW COL_GREEN	;
469)   2174 C0 FF       		           DW COL_YELLOW	;
470)   2176 3F 00       		           DW COL_BLUE	;
471)   2178 3F F8       		           DW COL_MAGENTA	;
472)   217A FF 07       		           DW COL_CYAN	;
473)   217C FF FF       		           DW COL_WHITE            	;
474)   217E 00 00       		          DW COL_BLACK ;TODO PICK 8 MORE COLORS	;TODO PICK 8 MORE COLORS
475)   2180 00 F8       		           DW COL_RED	;
476)   2182 C0 07       		           DW COL_GREEN	;
477)   2184 C0 FF       		           DW COL_YELLOW	;
478)   2186 3F 00       		           DW COL_BLUE	;
479)   2188 3F F8       		           DW COL_MAGENTA	;
480)   218A FF 07       		           DW COL_CYAN	;
481)   218C FF FF       		           DW COL_WHITE            	;
487)   218E CD EB 21    		        CALL    SKIPSP	;
488)   2191 FE 0D       		  CP      CR	;
489)   2193 C8          		  RET     Z	;
490)   2194 FE 7C       		  CP      '|'	;
491)   2196 C8          		  RET     Z	;
492)   2197 FE 2E       		  CP      '.'	;
493)   2199 CA DE 22    		  JP      Z,DOT           ;*.	;*.
494)   219C EB          		  EX      DE,HL	;
495)   219D 21 FA 21    		  LD      HL,COMDS	;
496)   21A0 1A          		OSCLI0:  LD      A,(DE)	;
497)   21A1 CD F2 21    		  CALL    UPPRC	;
498)   21A4 BE          		  CP      (HL)	;
499)   21A5 28 0B       		  JR      Z,OSCLI2	;
500)   21A7 38 31       		  JR      C,HUH	;
501)   21A9 CB 7E       		OSCLI1:  BIT     7,(HL)	;
502)   21AB 23          		  INC     HL	;
503)   21AC 28 FB       		  JR      Z,OSCLI1	;
504)   21AE 23          		  INC     HL	;
505)   21AF 23          		  INC     HL	;
506)   21B0 18 EE       		  JR      OSCLI0	;
508)   21B2 D5          		OSCLI2:  PUSH    DE	;
509)   21B3 13          		OSCLI3:  INC     DE	;
510)   21B4 23          		  INC     HL	;
511)   21B5 1A          		  LD      A,(DE)	;
512)   21B6 CD F2 21    		  CALL    UPPRC	;
513)   21B9 FE 2E       		  CP      '.'             ;ABBREVIATED?	;ABBREVIATED?
514)   21BB 28 0A       		  JR      Z,OSCLI4	;
515)   21BD AE          		  XOR     (HL)	;
516)   21BE 28 F3       		  JR      Z,OSCLI3	;
517)   21C0 FE 80       		  CP      80H	;
518)   21C2 28 03       		  JR      Z,OSCLI4	;
519)   21C4 D1          		  POP     DE	;
520)   21C5 18 E2       		  JR      OSCLI1	;
522)   21C7 F1          		OSCLI4:  POP     AF	;
523)   21C8 13          		         INC     DE	;
524)   21C9 CB 7E       		OSCLI5:  BIT     7,(HL)	;
525)   21CB 23          		  INC     HL	;
526)   21CC 28 FB       		  JR      Z,OSCLI5	;
527)   21CE 7E          		  LD      A,(HL)	;
528)   21CF 23          		  INC     HL	;
529)   21D0 66          		  LD      H,(HL)	;
530)   21D1 6F          		  LD      L,A	;
531)   21D2 E5          		  PUSH    HL ;CALL COMMAND	;CALL COMMAND
532)   21D3 EB          		  EX      DE,HL	;
533)   21D4 E5          		  PUSH HL	;
534)   21D5 FD E1       		  POP IY	;
535)   21D7 C3 EB 21    		  JP      SKIPSP	;
537)   21DA 3E FE       		HUH:     LD      A,254  ;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY	;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY
538)   21DC CD F0 46    		         CALL    EXTERR	;
539)   21DF 42 61 64 20 		         DEFM    'Bad command'	;
539)   21E3 63 6F 6D 6D 		         DEFM    'Bad command'	;
539)   21E7 61 6E 64    		         DEFM    'Bad command'	;
540)   21EA 00          		         DEFB    0   	;
542)   21EB 7E          		SKIPSP:  LD      A,(HL)	;
543)   21EC FE 20       		         CP      ' '	;
544)   21EE C0          		         RET     NZ	;
545)   21EF 23          		         INC     HL	;
546)   21F0 18 F9       		         JR      SKIPSP 	;
548)   21F2 E6 7F       		UPPRC:   AND     7FH	;
549)   21F4 FE 60       		  CP      '`'	;
550)   21F6 D8          		  RET     C	;
551)   21F7 E6 5F       		  AND     5FH             ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
552)   21F9 C9          		  RET     	;
556)   21FA 42 59       		COMDS:DEFM   'BY'	;
557)   21FC C5          		  DEFB    'E'+80H	;
558)   21FD E1 22       		  DEFW    BYE	;
559)   21FF 43          		     DEFM    'C'	;
560)   2200 C4          		  DEFB    'D'+80H	;
561)   2201 02 23       		  DEFW    DRV_CD   	;
562)   2203 44 49       		     DEFM    'DI'	;
563)   2205 D2          		  DEFB    'R'+80H	;
564)   2206 EA 22       		  DEFW    DRV_DIR      	;
565)   2208 46          		     DEFM    'F'	;
566)   2209 D8          		  DEFB    'X'+80H	;
567)   220A E4 22       		  DEFW    FX 	;
568)   220C 4C 43 44 5F 		     DEFM    'LCD_BLINKOF' 	;
568)   2210 42 4C 49 4E 		     DEFM    'LCD_BLINKOF' 	;
568)   2214 4B 4F 46    		     DEFM    'LCD_BLINKOF' 	;
569)   2217 C6          		        DEFB 'F'+80H	;
570)   2218 82 23       		        DEFW    LCD_BLINKOF	;
571)   221A 4C 43 44 5F 		     DEFM    'LCD_BLINKO' 	;
571)   221E 42 4C 49 4E 		     DEFM    'LCD_BLINKO' 	;
571)   2222 4B 4F       		     DEFM    'LCD_BLINKO' 	;
572)   2224 CE          		        DEFB 'N'+80H	;
573)   2225 88 23       		        DEFW    LCD_BLINKON	;
574)   2227 4C 43 44 5F 		     DEFM    'LCD_CLEA' 	;
574)   222B 43 4C 45 41 		     DEFM    'LCD_CLEA' 	;
575)   222F D2          		        DEFB 'R'+80H	;
576)   2230 8E 23       		        DEFW    LCD_CLR              	;
577)   2232 4C 43 44 5F 		     DEFM    'LCD_CURSORA' 	;
577)   2236 43 55 52 53 		     DEFM    'LCD_CURSORA' 	;
577)   223A 4F 52 41    		     DEFM    'LCD_CURSORA' 	;
578)   223D D4          		        DEFB 'T'+80H	;
579)   223E 94 23       		        DEFW    LCD_CURSAT	;
580)   2240 4C 43 44 5F 		     DEFM    'LCD_CURSOF' 	;
580)   2244 43 55 52 53 		     DEFM    'LCD_CURSOF' 	;
580)   2248 4F 46       		     DEFM    'LCD_CURSOF' 	;
581)   224A C6          		        DEFB 'F'+80H	;
582)   224B B3 23       		        DEFW    LCD_CURSOF              	;
583)   224D 4C 43 44 5F 		     DEFM    'LCD_CURSO' 	;
583)   2251 43 55 52 53 		     DEFM    'LCD_CURSO' 	;
583)   2255 4F          		     DEFM    'LCD_CURSO' 	;
584)   2256 CE          		        DEFB 'N'+80H	;
585)   2257 B9 23       		        DEFW    LCD_CURSON              	;
586)   2259 4C 43 44 5F 		     DEFM    'LCD_DISPOF' 	;
586)   225D 44 49 53 50 		     DEFM    'LCD_DISPOF' 	;
586)   2261 4F 46       		     DEFM    'LCD_DISPOF' 	;
587)   2263 C6          		        DEFB 'F'+80H	;
588)   2264 BF 23       		        DEFW    LCD_DISPOF              	;
589)   2266 4C 43 44 5F 		     DEFM    'LCD_DISPO' 	;
589)   226A 44 49 53 50 		     DEFM    'LCD_DISPO' 	;
589)   226E 4F          		     DEFM    'LCD_DISPO' 	;
590)   226F CE          		        DEFB 'N'+80H	;
591)   2270 C5 23       		        DEFW    LCD_DISPON	;
592)   2272 4C 43 44 5F 		     DEFM    'LCD_HOM' 	;
592)   2276 48 4F 4D    		     DEFM    'LCD_HOM' 	;
593)   2279 C5          		        DEFB 'E'+80H	;
594)   227A C2 0E       		        DEFW    LCD16_HOME                      	;
595)   227C 4C 43 44 5F 		     DEFM    'LCD_MOVLEF' 	;
595)   2280 4D 4F 56 4C 		     DEFM    'LCD_MOVLEF' 	;
595)   2284 45 46       		     DEFM    'LCD_MOVLEF' 	;
596)   2286 D4          		        DEFB 'T'+80H	;
597)   2287 D1 23       		        DEFW    LCD_MOVLFT                      	;
598)   2289 4C 43 44 5F 		     DEFM    'LCD_MOVRIGH' 	;
598)   228D 4D 4F 56 52 		     DEFM    'LCD_MOVRIGH' 	;
598)   2291 49 47 48    		     DEFM    'LCD_MOVRIGH' 	;
599)   2294 D4          		        DEFB 'T'+80H	;
600)   2295 D7 23       		        DEFW    LCD_MOVRGT                      	;
601)   2297 4C 43 44 5F 		     DEFM    'LCD_PRIN' 	;
601)   229B 50 52 49 4E 		     DEFM    'LCD_PRIN' 	;
602)   229F D4          		        DEFB 'T'+80H	;
603)   22A0 DD 23       		        DEFW    LCD_PRN 	;
604)   22A2 4C 43 44 5F 		     DEFM    'LCD_SCRLEF' 	;
604)   22A6 53 43 52 4C 		     DEFM    'LCD_SCRLEF' 	;
604)   22AA 45 46       		     DEFM    'LCD_SCRLEF' 	;
605)   22AC D4          		        DEFB 'T'+80H	;
606)   22AD 4E 24       		        DEFW    LCD_SCRLFT                      	;
607)   22AF 4C 43 44 5F 		     DEFM    'LCD_SCRRIGH' 	;
607)   22B3 53 43 52 52 		     DEFM    'LCD_SCRRIGH' 	;
607)   22B7 49 47 48    		     DEFM    'LCD_SCRRIGH' 	;
608)   22BA D4          		        DEFB 'T'+80H	;
609)   22BB 54 24       		        DEFW    LCD_SCRRGT       	;
610)   22BD 50 57       		     DEFM    'PW'	;
611)   22BF C4          		  DEFB    'D'+80H	;
612)   22C0 E7 22       		  DEFW    NIMP 	;
613)   22C2 52 54 43 5F 		     DEFM    'RTC_ADJUS'	;
613)   22C6 41 44 4A 55 		     DEFM    'RTC_ADJUS'	;
613)   22CA 53          		     DEFM    'RTC_ADJUS'	;
614)   22CB D4          		  DEFB    'T'+80H	;
615)   22CC 2E 23       		  DEFW    RTC_ADJUST 	;
616)   22CE 52 54 43 5F 		     DEFM    'RTC_GE'	;
616)   22D2 47 45       		     DEFM    'RTC_GE'	;
617)   22D4 D4          		  DEFB    'T'+80H	;
618)   22D5 5C 23       		  DEFW    RTC_GET   	;
619)   22D7 54 59 50    		     DEFM    'TYP'	;
620)   22DA C5          		  DEFB    'E'+80H	;
621)   22DB 0B 23       		  DEFW    DRV_TYPFILE      	;
623)   22DD FF          		  DEFB 0FFH	;
626)   22DE C3 5A 24    		DOT:  JP      EXTCMDRET	;
631)   22E1 C3 00 00    		BYE:  JP 0	;
634)   22E4 C3 5A 24    		FX: JP     EXTCMDRET   	;
637)   22E7 C3 5A 24    		NIMP: JP     EXTCMDRET   ;NOT IMPLEMENTED YET	;NOT IMPLEMENTED YET
643)   22EA CD 21 0A    		DRV_DIR:               CALL STRG_DIRLIST       ;DIRECTLY TYPES THE DIRECTORY ON SCREEN	;DIRECTLY TYPES THE DIRECTORY ON SCREEN
644)   22ED C3 5A 24    		                       JP EXTCMDRET	;
646)   22F0 CD 84 5D    		DRV_GETFNPRM:          CALL    EXPR            ;VARIABLE TYPE	;VARIABLE TYPE
647)   22F3 08          		  EX      AF,AF'          ;E NO OF BYTES ACCS THE PARAM	;E NO OF BYTES ACCS THE PARAM
648)   22F4 21 00 80    		                       LD HL,ACCS	;
649)   22F7 06 00       		                       LD B,0	;
650)   22F9 4B          		                       LD C,E                        	;
651)   22FA 11 B9 83    		                       LD DE,STRGBUFF	;
652)   22FD ED B0       		                       LDIR	;
653)   22FF AF          		                       XOR A	;
654)   2300 12          		                       LD (DE),A	;
655)   2301 C9          		                       RET	;
658)   2302 CD F0 22    		DRV_CD:                CALL DRV_GETFNPRM	;
659)   2305 CD 4A 0A    		                       CALL STRG_DIRCHG	;
660)   2308 C3 5A 24    		                       JP EXTCMDRET	;
663)   230B CD F0 22    		DRV_TYPFILE:           CALL DRV_GETFNPRM	;
664)   230E CD 5F 0A    		                       CALL STRG_OPNFILE	;
665)   2311 CD E3 0A    		                       CALL STRG_TPFILE        ;DIRECTLY TYPES THE FILE ON SCREEN NO BUFFER	;DIRECTLY TYPES THE FILE ON SCREEN NO BUFFER
666)   2314 3A E5 83    		                       LD A,(FID)	;
667)   2317 CD 7C 0A    		                       CALL STRG_CLSFILE  	;
668)   231A C3 5A 24    		                       JP EXTCMDRET              	;
675)   231D CD 94 5E    		RTC_GETBASPAR: CALL EXPRI	;
676)   2320 D9          		 EXX	;
677)   2321 7D          		 LD A,L ;A HAS THE NUMBER	;A HAS THE NUMBER
678)   2322 CD DB 26    		 CALL BN2BCD ;CONVERT IT IN BCD RESULT ON L  	;CONVERT IT IN BCD RESULT ON L
679)   2325 FD 7E 00    		 LD A,(IY)	;
680)   2328 FE 2C       		 CP ','	;
681)   232A FD 23       		 INC IY	;
682)   232C 7D          		 LD A,L	;
683)   232D C9          		 RET	;
688)   232E 0E 00       		RTC_ADJUST: LD C,0	;
689)   2330 11 89 83    		 LD DE,BUFFER	;
690)   2333 AF          		 XOR A  ;CMD ADJUST TIME	;CMD ADJUST TIME
691)   2334 32 89 83    		 LD (BUFFER),A	;
692)   2337 13          		 INC DE	;
693)   2338 C5          		RTCADJ_NXT: PUSH BC	;
694)   2339 D5          		 PUSH DE	;
695)   233A CD 1D 23    		 CALL RTC_GETBASPAR	;
696)   233D D1          		 POP DE	;
697)   233E C1          		 POP BC  	;
698)   233F 28 0B       		 JR Z,RTCADJ_PAROK	;
700)   2341 FD 2B       		 DEC IY	;
701)   2343 47          		 LD B,A ;SAVE A	;SAVE A
702)   2344 79          		 LD A,C	;
703)   2345 FE 06       		 CP 6	;
704)   2347 28 08       		 JR Z,RTCADJ_EXEC	;
706)   2349 C3 1B 25    		 JP SNTX_ERROR	;
707)   234C 0C          		RTCADJ_PAROK: INC C	;
708)   234D 12          		 LD (DE),A	;
709)   234E 13          		 INC DE  	;
710)   234F 18 E7       		 JR RTCADJ_NXT  	;
711)   2351 78          		RTCADJ_EXEC: LD A,B	;
712)   2352 12          		 LD (DE),A ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
713)   2353 13          		 INC DE	;
714)   2354 AF          		 XOR A	;
715)   2355 12          		 LD (DE),A ;YEAR HI DEFAULT	;YEAR HI DEFAULT
716)   2356 CD 9A 0D    		 CALL DS1307_ADJUST	;
717)   2359 C3 5A 24    		 JP EXTCMDRET	;
719)   235C CD 3E 0D    		RTC_GET: CALL DS1307_GETNOW	;
721)   235F 21 6D 23    		 LD HL,TSTSTR	;
722)   2362 11 00 80    		 LD DE,$8000  	;
723)   2365 01 14 00    		 LD BC,20	;
724)   2368 C5          		 PUSH BC	;
725)   2369 ED B0       		 LDIR	;
726)   236B C1          		 POP BC	;
727)   236C C9          		 RET	;
729)   236D 31 37 2F 30 		TSTSTR DEFM '17/03/2021 17:52:03'	;
729)   2371 33 2F 32 30 		TSTSTR DEFM '17/03/2021 17:52:03'	;
729)   2375 32 31 20 31 		TSTSTR DEFM '17/03/2021 17:52:03'	;
729)   2379 37 3A 35 32 		TSTSTR DEFM '17/03/2021 17:52:03'	;
729)   237D 3A 30 33    		TSTSTR DEFM '17/03/2021 17:52:03'	;
730)   2380 00 0D       		    DEFB 0,0x0D	;
733)   2382 CD FA 0E    		LCD_BLINKOF: CALL LCD16_BLINKOFF 	;
734)   2385 C3 5A 24    		 JP EXTCMDRET	;
736)   2388 CD 08 0F    		LCD_BLINKON: CALL LCD16_BLINKON 	;
737)   238B C3 5A 24    		 JP EXTCMDRET	;
739)   238E CD AB 0E    		LCD_CLR: CALL LCD16_CLR	;
740)   2391 C3 5A 24    		 JP EXTCMDRET	;
743)   2394 CD 94 5E    		 CALL EXPRI	;
744)   2397 D9          		 EXX	;
745)   2398 55          		 LD D,L	;
746)   2399 D5          		 PUSH DE	;
747)   239A FD 7E 00    		 LD A,(IY)	;
748)   239D FE 2C       		 CP ','	;
749)   239F 28 04       		 JR Z,LCDCA_OK	;
750)   23A1 D1          		 POP DE	;
751)   23A2 C3 1B 25    		 JP SNTX_ERROR	;
752)   23A5 FD 23       		LCDCA_OK: INC IY	;
753)   23A7 CD 94 5E    		 CALL EXPRI	;
754)   23AA D9          		 EXX	;
755)   23AB D1          		 POP DE	;
756)   23AC 5D          		 LD E,L    	;
757)   23AD CD CF 0E    		 CALL LCD16_SETCURS  	;
758)   23B0 C3 5A 24    		 JP EXTCMDRET	;
760)   23B3 CD DE 0E    		LCD_CURSOF: CALL LCD16_CURSOFF 	;
761)   23B6 C3 5A 24    		 JP EXTCMDRET	;
763)   23B9 CD EC 0E    		LCD_CURSON: CALL LCD16_CURSON 	;
764)   23BC C3 5A 24    		 JP EXTCMDRET	;
766)   23BF CD 82 0E    		LCD_DISPOF: CALL LCD16_NODISP	;
767)   23C2 C3 5A 24    		 JP EXTCMDRET	;
769)   23C5 CD 90 0E    		LCD_DISPON: CALL LCD16_DISP 	;
770)   23C8 C3 5A 24    		 JP EXTCMDRET	;
772)   23CB CD C2 0E    		LCD_HOME: CALL LCD16_HOME   	;
773)   23CE C3 5A 24    		 JP EXTCMDRET   	;
775)   23D1 CD 22 0F    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
776)   23D4 C3 5A 24    		 JP EXTCMDRET  	;
778)   23D7 CD 28 0F    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
779)   23DA C3 5A 24    		 JP EXTCMDRET  	;
781)   23DD 18 20       		LCD_PRN: JR PRINT0	;
782)   23DF 06 02       		PRINT6:  LD      B,2	;
783)   23E1 18 22       		  JR      PRINTC	;
784)   23E3 01 00 01    		PRINT8:  LD      BC,100H	;
785)   23E6 18 1D       		  JR      PRINTC	;
786)   23E8 21 00 82    		PRINT9:  LD      HL,STAVAR	;
787)   23EB AF          		  XOR     A	;
788)   23EC BE          		  CP      (HL)	;
789)   23ED 28 10       		  JR      Z,PRINT0	;
790)   23EF 3A FB 82    		  LD      A,(COUNT)	;
791)   23F2 B7          		  OR      A	;
792)   23F3 28 0A       		  JR      Z,PRINT0	;
793)   23F5 96          		PRINTA:  SUB     (HL)	;
794)   23F6 28 07       		  JR      Z,PRINT0	;
795)   23F8 30 FB       		  JR      NC,PRINTA	;
796)   23FA ED 44       		  NEG	;
797)   23FC CD 2A 57    		  CALL    FILL                	;
798)   23FF 3A 00 82    		PRINT0:  LD      A,(STAVAR)	;
799)   2402 4F          		  LD      C,A             ;PRINTS	;PRINTS
800)   2403 06 00       		  LD      B,0             ;PRINTF	;PRINTF
801)   2405 CD C2 56    		PRINTC:  CALL    TERM?	;
802)   2408 28 41       		  JR      Z,PRINT4	;
803)   240A CB 80       		  RES     0,B	;
804)   240C FD 23       		  INC     IY	;
805)   240E FE 7E       		  CP      '~'	;
806)   2410 28 CD       		  JR      Z,PRINT6	;
807)   2412 FE 3B       		  CP      ';'	;
808)   2414 28 CD       		  JR      Z,PRINT8	;
809)   2416 FE 2C       		  CP      ','	;
810)   2418 28 CE       		  JR      Z,PRINT9	;
811)   241A CD E3 56    		  CALL    FORMAT          ;SPC, TAB, '	;SPC, TAB, '
812)   241D 28 E6       		  JR      Z,PRINTC	;
813)   241F FD 2B       		  DEC     IY	;
814)   2421 C5          		  PUSH    BC	;
815)   2422 CD 84 5D    		  CALL    EXPR            ;VARIABLE TYPE	;VARIABLE TYPE
816)   2425 08          		  EX      AF,AF'	;
817)   2426 FA 3C 24    		  JP      M,PRINT3        ;STRING	;STRING
818)   2429 D1          		  POP     DE	;
819)   242A D5          		  PUSH    DE	;
820)   242B CB 4A       		  BIT     1,D	;
821)   242D F5          		  PUSH    AF	;
822)   242E CC 96 63    		  CALL    Z,STR           ;DECIMAL	;DECIMAL
823)   2431 F1          		  POP     AF	;
824)   2432 C4 53 63    		  CALL    NZ,HEXSTR       ;HEX	;HEX
825)   2435 C1          		  POP     BC	;
826)   2436 C5          		  PUSH    BC	;
827)   2437 79          		  LD      A,C	;
828)   2438 93          		  SUB     E	;
829)   2439 D4 2A 57    		  CALL    NC,FILL         ;RIGHT JUSTIFY	;RIGHT JUSTIFY
830)   243C C1          		PRINT3:  POP     BC	;
833)   243D 21 00 80    		  LD HL,ACCS ; L IS 00	; L IS 00
834)   2440 7D          		  LD A,L	;
835)   2441 83          		  ADD E	;
836)   2442 6F          		  LD L,A	;
837)   2443 AF          		  XOR A	;
838)   2444 77          		  LD (HL),A	;
839)   2445 6F          		  LD L,A	;
840)   2446 CD B4 0E    		  CALL LCD16_PRINT           ;PRINT	;PRINT
841)   2449 18 BA       		  JR      PRINTC	;
842)   244B C3 5A 24    		PRINT4:  JP      EXTCMDRET            	;
845)   244E CD 16 0F    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
846)   2451 C3 5A 24    		 JP      EXTCMDRET  	;
848)   2454 CD 1C 0F    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
849)   2457 C3 5A 24    		 JP      EXTCMDRET  	;
853)   245A AF          		 XOR A	;
856)   245B C9          		 RET	;
863)   245C FE FF       		@MYOS_OSOPEN:  CP 255	;
864)   245E 28 06       		               JR Z,OPW	;
865)   2460 FE 01       		               CP 1	;
866)   2462 28 06       		               JR Z,OPRW	;
868)   2464 18 06       		               JR DOOP	;
869)   2466 3E 01       		OPW:           LD A,1	;
870)   2468 18 02       		               JR DOOP	;
871)   246A 3E 02       		OPRW:          LD A,2	;
872)   246C F5          		DOOP:          PUSH AF                  ;SAVE A                	;SAVE A
873)   246D AF          		               XOR A                   ;CLEAR CARRY FLAG                	;CLEAR CARRY FLAG
874)   246E 12          		               LD (DE),A               ;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0	;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0
875)   246F EB          		               EX DE,HL	;
876)   2470 ED 52       		               SBC HL,DE	;
877)   2472 23          		               INC HL                  ;+1 FOR ZERO	;+1 FOR ZERO
878)   2473 E5          		               PUSH HL	;
879)   2474 C1          		               POP BC	;
880)   2475 EB          		               EX DE,HL	;
881)   2476 11 B9 83    		               LD DE,STRGBUFF	;
882)   2479 ED B0       		               LDIR                    ;COPY FILENAME TO STRGBUFF	;COPY FILENAME TO STRGBUFF
883)   247B F1          		               POP AF                  ;RESTORE A	;RESTORE A
884)   247C CD 5F 0A    		               CALL STRG_OPNFILE               	;
885)   247F C9          		               RET        	;
889)   2480 21 B9 83    		@MYOS_OSBPUT:  LD HL,STRGBUFF	;
890)   2483 77          		               LD (HL),A               ;VALUE	;VALUE
891)   2484 7B          		               LD A,E                  ;FID	;FID
892)   2485 EB          		               EX DE,HL	;
893)   2486 01 01 00    		               LD BC,1                 ;NO OF BYTES TO WRITE	;NO OF BYTES TO WRITE
894)   2489 CD 8B 0A    		               CALL STRG_BLKWRITE	;
895)   248C C9          		               RET	;
899)   248D 7B          		@MYOS_OSBGET:  LD A,E                  ;FID	;FID
900)   248E 11 B9 83    		               LD DE,STRGBUFF          ;SET BUFFER	;SET BUFFER
901)   2491 01 01 00    		               LD BC,1                 ;NO OF BYTES TO READ	;NO OF BYTES TO READ
902)   2494 CD AB 0A    		               CALL STRG_BLKREAD	;
903)   2497 78          		               LD A,B	;
904)   2498 81          		               ADD C	;
905)   2499 FE 01       		               CP 1	;
906)   249B 28 03       		               JR Z,GETISOK	;
907)   249D 3E FF       		               LD A,255	;
908)   249F C9          		               RET	;
909)   24A0 3A B9 83    		GETISOK:       LD A,(STRGBUFF)	;
910)   24A3 C9          		               RET	;
915)   24A4 7B          		@MYOS_GETPTR:  LD A,E	;
916)   24A5 CD F3 09    		               CALL STRG_GETPOS	;
917)   24A8 C9          		               RET	;
922)   24A9 CD 0A 0A    		@MYOS_PUTPTR:  CALL STRG_SETPOS	;
923)   24AC C9          		               RET 	;
928)   24AD 7B          		@MYOS_GETEXT:  LD A,E	;
929)   24AE CD EE 09    		               CALL STRG_GETSIZE	;
930)   24B1 C9          		               RET	;
933)   24B2 7B          		@MYOS_OSSHUT:  LD A,E	;
934)   24B3 CD 7C 0A    		               CALL STRG_CLSFILE	;
935)   24B6 C9          		               RET   	;
938)   24B7 7B          		@MYOS_OSSTAT:  LD A,E	;
939)   24B8 CD DF 09    		               CALL STRG_GETEOF	;
940)   24BB FE FF       		               CP 255                ;TEST IF -1                	;TEST IF -1
941)   24BD C9          		               RET	;
944)   24BE 3E 01       		@MYOS_OSCALL: LD A,1	;
945)   24C0 C9          		             RET 	;
947)   24C1 C9          		@MYOS_RESET: RET	;
949)   24C2 CD 94 5E    		@MYOS_MODE:CALL EXPRI   ;GET PARAM	;GET PARAM
950)   24C5 D9          		          EXX           ;HL HAS THE PARAM      	;HL HAS THE PARAM
951)   24C6 C3 E8 4C    		          JP XEQ	;
953)   24C9 CD E0 1B    		@MYOS_CLG: CALL GRPH_SAVECOLORS	;
954)   24CC CD 55 17    		          CALL LCD_CLRSCR	;
955)   24CF CD F7 1B    		          CALL GRPH_RESTORECOLORS	;
956)   24D2 C3 E8 4C    		          JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
959)   24D5 DD E5       		@MYOS_GCOL:  PUSH IX	;
960)   24D7 3E 01       		             LD A,1	;
961)   24D9 CD E5 19    		             CALL BAS_COLOUR     	;
962)   24DC DD E1       		             POP IX	;
963)   24DE C3 E8 4C    		             JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
965)   24E1 DD E5       		@MYOS_COLOUR: PUSH IX	;
966)   24E3 AF          		             XOR A   	;
967)   24E4 CD E5 19    		             CALL BAS_COLOUR     	;
968)   24E7 DD E1       		             POP IX	;
969)   24E9 C3 E8 4C    		             JP XEQ           ;RETURN TO BASIC              	;RETURN TO BASIC
971)   24EC DD E5       		@MYOS_DRAW: PUSH IX 	;
972)   24EE CD BE 1A    		           CALL BAS_DRAW	;
973)   24F1 DD E1       		           POP IX	;
974)   24F3 C3 E8 4C    		           JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
976)   24F6 DD E5       		@MYOS_MOVE:PUSH IX	;
977)   24F8 CD E7 1A    		          CALL BAS_MOVE	;
978)   24FB DD E1       		          POP IX	;
979)   24FD C3 E8 4C    		          JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
981)   2500 DD E5       		@MYOS_PLOT:PUSH IX	;
982)   2502 CD 57 1B    		          CALL BAS_PLOT	;
983)   2505 DD E1       		          POP IX	;
984)   2507 C3 E8 4C    		          JP XEQ           ;RETURN TO BASIC    	;RETURN TO BASIC
986)   250A DD E5       		@MYOS_POINT:PUSH IX	;
987)   250C CD F3 1A    		          CALL BAS_POINT ;RETURNS A VALUE TO BASIC	;RETURNS A VALUE TO BASIC
988)   250F DD E1       		          POP IX	;
989)   2511 C9          		          RET	;
998)   2512 CD 7A 1A    		@MYOS_PUTIMS:CALL GETBASICPARAMS;            	;
999)   2515 C3 E8 4C    		            JP XEQ	;
1001)   2518 C3 5C 23    		@MYOS_GETIMS: JP RTC_GET             	;
1003)   251B CD F0 46    		SNTX_ERROR: CALL    EXTERR	;
1004)   251E 53 79 6E 74 		  DEFM    'Syntax error'	;
1004)   2522 61 78 20 65 		  DEFM    'Syntax error'	;
1004)   2526 72 72 6F 72 		  DEFM    'Syntax error'	;
1005)   252A 00          		  DEFB    0            	;
1012)   252B CD 1D 03    		GETKEY:   CALL GET_CHAR	;
1013)   252E 37          		           SCF	;
1014)   252F C9          		        RET       	;
1019)   2530 CD 3C 25    		GETKEYNW: CALL CHKCURS	;
1020)   2533 CD FA 02    		           CALL GET_CHARNW	;
1021)   2536 3F          		           CCF	;
1022)   2537 FE 00       		           CP 0	;
1023)   2539 C8          		           RET Z	;
1024)   253A 37          		           SCF	;
1025)   253B C9          		        RET       	;
1027)   253C F5          		@CHKCURS:   PUSH AF	;
1028)   253D 3A A7 83    		           LD A,(TIMECTR)	;
1029)   2540 CB 67       		           BIT 4,A	;
1030)   2542 28 11       		           JR Z,CCSHOW      ;IF SET SHOW       	;IF SET SHOW
1031)   2544 3A 11 83    		CCHIDE:    LD A,(CURSSTAT)	;
1032)   2547 CB 4F       		           BIT 1,A	;
1033)   2549 20 19       		           JR NZ,CCEX      ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
1034)   254B CB CF       		           SET 1,A	;
1035)   254D 32 11 83    		           LD (CURSSTAT),A	;
1036)   2550 CD 0E 17    		           CALL LCD_RMVCURS	;
1037)   2553 18 0F       		           JR CCEX                                               	;
1038)   2555 3A 11 83    		CCSHOW:    LD A,(CURSSTAT)	;
1039)   2558 CB 4F       		           BIT 1,A	;
1040)   255A 28 08       		           JR Z,CCEX      ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
1041)   255C CB 8F       		           RES 1,A	;
1042)   255E 32 11 83    		           LD (CURSSTAT),A	;
1043)   2561 CD 13 17    		           CALL LCD_PRNCURS	;
1045)   2564 F1          		CCEX:      POP AF	;
1046)   2565 C9          		     RET          	;
1057)   2566 3A 00 83    		       LD      A,(FLAGS)	;
1058)   2569 CB 5F       		       BIT     3,A             ;EDIT MODE?	;EDIT MODE?
1059)   256B 28 09       		       JR      Z,OSLIN1	;
1060)   256D CB 9F       		       RES     3,A	;
1061)   256F 32 00 83    		       LD      (FLAGS),A	;
1062)   2572 2A 12 83    		       LD      HL,(EDPTR)	;
1063)   2575 BD          		       CP      L	;
1064)   2576 3E 0D       		OSLIN1: LD     A,CR	;
1065)   2578 77          		       LD      (HL),A	;
1066)   2579 C4 A8 1E    		       CALL    NZ,MYOS_OSWRCH	;
1067)   257C 2E 00       		       LD      L,0	;
1068)   257E 4D          		       LD      C,L             ;REPEAT FLAG	;REPEAT FLAG
1069)   257F 28 20       		       JR      Z,OSWAIT        ;SUPPRESS UNWANTED SPACE	;SUPPRESS UNWANTED SPACE
1070)   2581 06 00       		UPDATE: LD     B,0	;
1071)   2583 7E          		UPD1:  LD      A,(HL)	;
1072)   2584 04          		       INC     B	;
1073)   2585 23          		       INC     HL	;
1074)   2586 FE 0D       		       CP      CR	;
1075)   2588 F5          		       PUSH    AF	;
1076)   2589 E5          		       PUSH    HL	;
1077)   258A 5F          		       LD      E,A	;
1078)   258B C4 5C 20    		       CALL    NZ,WRCH         ;FAST WRCH	;FAST WRCH
1079)   258E E1          		       POP     HL	;
1080)   258F F1          		       POP     AF	;
1081)   2590 20 F1       		       JR      NZ,UPD1	;
1082)   2592 3E 20       		       LD      A,' '	;
1083)   2594 CD A8 1E    		       CALL    MYOS_OSWRCH	;
1084)   2597 1E 08       		       LD      E,BS	;
1085)   2599 E5          		UPD2:  PUSH    HL	;
1086)   259A CD 5C 20    		       CALL    WRCH            ;FAST WRCH	;FAST WRCH
1087)   259D E1          		       POP     HL	;
1088)   259E 2B          		       DEC     HL	;
1089)   259F 10 F8       		       DJNZ    UPD2	;
1090)   25A1 79          		OSWAIT: LD     A,C	;
1091)   25A2 05          		       DEC     B	;
1092)   25A3 28 01       		       JR      Z,LIMIT	;
1093)   25A5 B7          		       OR      A               ;REPEAT COMMAND?	;REPEAT COMMAND?
1094)   25A6 CC 9B 1E    		LIMIT: CALL    Z,KEYGET        ;READ KEYBOARD	;READ KEYBOARD
1095)   25A9 4F          		       LD      C,A             ;SAVE FOR REPEAT	;SAVE FOR REPEAT
1096)   25AA 11 A1 25    		       LD      DE,OSWAIT       ;RETURN ADDRESS	;RETURN ADDRESS
1097)   25AD D5          		       PUSH    DE	;
1098)   25AE 3A 00 83    		       LD      A,(FLAGS)	;
1099)   25B1 B7          		       OR      A               ;TEST FOR ESCAPE	;TEST FOR ESCAPE
1100)   25B2 79          		       LD      A,C	;
1101)   25B3 FA F5 25    		       JP      M,OSEXIT	;
1102)   25B6 FE 0B       		       CP      11         ;CURSOR UP     (IX-11)	;CURSOR UP     (IX-11)
1103)   25B8 CA 39 26    		       JP      Z,LEFT	;
1104)   25BB FE 0A       		       CP      10         ;CURSOR DOWN   (IX-10)	;CURSOR DOWN   (IX-10)
1105)   25BD CA 6C 26    		       JP      Z,RIGHT	;
1106)   25C0 06 00       		       LD      B,0	;
1107)   25C2 FE 05       		       CP      5          ;CLEAR LEFT    (IX-5)	;CLEAR LEFT    (IX-5)
1108)   25C4 28 72       		       JR      Z,BACK	;
1109)   25C6 FE 09       		       CP      9          ;START OF LINE (IX-9)	;START OF LINE (IX-9)
1110)   25C8 28 6F       		       JR      Z,LEFT	;
1111)   25CA FE 07       		       CP      7          ;CLEAR RIGHT   (IX-7)	;CLEAR RIGHT   (IX-7)
1112)   25CC 28 76       		       JR      Z,DELETE	;
1113)   25CE FE 08       		       CP      8          ;END OF LINE   (IX-8)	;END OF LINE   (IX-8)
1114)   25D0 CA 6C 26    		       JP      Z,RIGHT	;
1115)   25D3 0E 00       		       LD      C,0             ;INHIBIT REPEAT	;INHIBIT REPEAT
1116)   25D5 FE 10       		       CP      'P' AND 1FH	;
1117)   25D7 CA 7F 20    		       JP      Z,TOGGLE	;
1118)   25DA FE 06       		       CP      6          ;DELETE LEFT   (IX-6)	;DELETE LEFT   (IX-6)
1119)   25DC 28 5A       		       JR      Z,BACK	;
1120)   25DE FE 04       		       CP      4          ;CURSOR LEFT   (IX-4)	;CURSOR LEFT   (IX-4)
1121)   25E0 28 57       		       JR      Z,LEFT	;
1122)   25E2 FE 02       		       CP      2          ;DELETE RIGHT  (IX-2)	;DELETE RIGHT  (IX-2)
1123)   25E4 28 5E       		       JR      Z,DELETE	;
1124)   25E6 FE 01       		       CP      1          ;INSERT SPACE  (IX-1)	;INSERT SPACE  (IX-1)
1125)   25E8 28 6E       		       JR      Z,INSERT	;
1126)   25EA FE 03       		       CP      3          ;CURSOR RIGHT  (IX-3)	;CURSOR RIGHT  (IX-3)
1127)   25EC 28 7E       		       JR      Z,RIGHT	;
1128)   25EE FE 20       		       CP      ' '             ;PRINTING CHARACTER	;PRINTING CHARACTER
1129)   25F0 30 7F       		       JR      NC,SAVECH	;
1130)   25F2 FE 0D       		       CP      CR              ;ENTER LINE	;ENTER LINE
1131)   25F4 C0          		       RET     NZ	;
1132)   25F5 7E          		OSEXIT: LD     A,(HL)	;
1133)   25F6 CD A8 1E    		       CALL    MYOS_OSWRCH          ;WRITE REST OF LINE	;WRITE REST OF LINE
1134)   25F9 23          		       INC     HL	;
1135)   25FA D6 0D       		       SUB     CR	;
1136)   25FC 20 F7       		       JR      NZ,OSEXIT	;
1137)   25FE D1          		       POP     DE              ;DITCH RETURN ADDRESS	;DITCH RETURN ADDRESS
1138)   25FF B9          		       CP      C	;
1139)   2600 C2 BC 20    		       JP      NZ,ABORT        ;ESCAPE	;ESCAPE
1140)   2603 3E 0A       		       LD      A,LF	;
1141)   2605 CD A8 1E    		       CALL    MYOS_OSWRCH	;
1142)   2608 ED 5B F4 82 		       LD      DE,(ERRLIN)	;
1143)   260C AF          		       XOR     A	;
1144)   260D 6F          		       LD      L,A	;
1145)   260E 22 12 83    		       LD      (EDPTR),HL	;
1146)   2611 BA          		       CP      D	;
1147)   2612 C0          		       RET     NZ	;
1148)   2613 BB          		       CP      E	;
1149)   2614 C0          		       RET     NZ	;
1150)   2615 11 85 26    		       LD      DE,EDITST	;
1151)   2618 06 04       		       LD      B,4	;
1152)   261A 1A          		CMPARE: LD     A,(DE)	;
1153)   261B BE          		       CP      (HL)	;
1154)   261C 3E 00       		       LD      A,0	;
1155)   261E C0          		       RET     NZ	;
1156)   261F 23          		       INC     HL	;
1157)   2620 13          		       INC     DE	;
1158)   2621 7E          		       LD      A,(HL)	;
1159)   2622 FE 2E       		       CP      '.'	;
1160)   2624 28 02       		       JR      Z,ABBR	;
1161)   2626 10 F2       		       DJNZ    CMPARE	;
1162)   2628 AF          		ABBR:  XOR     A	;
1163)   2629 47          		       LD      B,A	;
1164)   262A 4D          		       LD      C,L	;
1165)   262B 6F          		       LD      L,A	;
1166)   262C 11 89 26    		       LD      DE,LISTST	;
1167)   262F EB          		       EX      DE,HL	;
1168)   2630 ED B0       		       LDIR	;
1169)   2632 21 00 83    		       LD      HL,FLAGS	;
1170)   2635 CB DE       		       SET     3,(HL)	;
1171)   2637 C9          		       RET	;
1173)   2638 37          		BACK:  SCF                     ;DELETE LEFT	;DELETE LEFT
1174)   2639 2C          		LEFT:  INC     L               ;CURSOR LEFT	;CURSOR LEFT
1175)   263A 2D          		       DEC     L	;
1176)   263B 28 45       		       JR      Z,STOP	;
1177)   263D 3E 08       		       LD      A,BS	;
1178)   263F CD A8 1E    		       CALL    MYOS_OSWRCH	;
1179)   2642 2D          		       DEC     L	;
1180)   2643 D0          		       RET     NC	;
1181)   2644 7E          		DELETE: LD     A,(HL)          ;DELETE RIGHT	;DELETE RIGHT
1182)   2645 FE 0D       		       CP      CR	;
1183)   2647 28 39       		       JR      Z,STOP	;
1184)   2649 54          		       LD      D,H	;
1185)   264A 5D          		       LD      E,L	;
1186)   264B 13          		DEL1:  INC     DE	;
1187)   264C 1A          		       LD      A,(DE)	;
1188)   264D 1B          		       DEC     DE	;
1189)   264E 12          		       LD      (DE),A	;
1190)   264F 13          		       INC     DE	;
1191)   2650 FE 0D       		       CP      CR	;
1192)   2652 20 F7       		       JR      NZ,DEL1	;
1193)   2654 D1          		DEL2:  POP     DE              ;DITCH	;DITCH
1194)   2655 C3 81 25    		       JP      UPDATE	;
1196)   2658 3E 0D       		INSERT: LD     A,CR            ;INSERT SPACE	;INSERT SPACE
1197)   265A BE          		       CP      (HL)	;
1198)   265B C8          		       RET     Z	;
1199)   265C 54          		       LD      D,H	;
1200)   265D 1E FE       		       LD      E,254	;
1201)   265F 13          		INS1:  INC     DE	;
1202)   2660 12          		       LD      (DE),A	;
1203)   2661 1B          		       DEC     DE	;
1204)   2662 7B          		       LD      A,E	;
1205)   2663 BD          		       CP      L	;
1206)   2664 1B          		       DEC     DE	;
1207)   2665 1A          		       LD      A,(DE)	;
1208)   2666 20 F7       		       JR      NZ,INS1	;
1209)   2668 36 20       		       LD      (HL),' '	;
1210)   266A 18 E8       		       JR      DEL2	;
1212)   266C 7E          		RIGHT: LD      A,(HL)          ;CURSOR RIGHT	;CURSOR RIGHT
1213)   266D FE 0D       		       CP      CR	;
1214)   266F 28 11       		       JR      Z,STOP	;
1215)   2671 56          		SAVECH: LD     D,(HL)          ;PRINTING CHARACTER	;PRINTING CHARACTER
1216)   2672 77          		       LD      (HL),A	;
1217)   2673 2C          		       INC     L	;
1218)   2674 28 09       		       JR      Z,WONTGO        ;LINE TOO LONG	;LINE TOO LONG
1219)   2676 CD A8 1E    		       CALL    MYOS_OSWRCH	;
1220)   2679 3E 0D       		       LD      A,CR	;
1221)   267B BA          		       CP      D	;
1222)   267C C0          		       RET     NZ	;
1223)   267D 77          		       LD      (HL),A	;
1224)   267E C9          		       RET	;
1226)   267F 2D          		WONTGO: DEC    L	;
1227)   2680 36 0D       		       LD      (HL),CR	;
1230)   2682 0E 00       		STOP:  LD      C,0             ;STOP REPEAT	;STOP REPEAT
1231)   2684 C9          		       RET	;
1234)   2685 45 44 49 54 		EDITST: DEFM   'EDIT'	;
1235)   2689 4C 49 53 54 		LISTST: DEFM   'LIST'	;
 18)   268D C9          		     RET 	;
 21)   268E F5          		DELAYMICROSEC: PUSH AF	;
 22)   268F D5          		 PUSH DE	;
 23)   2690 1B          		 DEC DE	;
 24)   2691 D1          		 POP DE	;
 25)   2692 F1          		 POP AF	;
 26)   2693 C9          		 RET	;
 29)   2694 CD 8E 26    		S21: CALL DELAYMICROSEC	;
 30)   2697 10 FB       		 DJNZ S21 	;
 31)   2699 C9          		 RET	;
 35)   269A F5          		DELAYMILISEC: PUSH AF	;
 36)   269B D5          		 PUSH DE	;
 37)   269C 11 2C 01    		 LD DE,300 ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 38)   269F 1B          		DEL1: DEC DE	;
 39)   26A0 7A          		 LD A,D           ;TEST FOR DE=00	;TEST FOR DE=00
 40)   26A1 B3          		 OR E	;
 41)   26A2 20 FB       		 JR NZ,DEL1 	;
 42)   26A4 D1          		 POP DE	;
 43)   26A5 F1          		 POP AF	;
 44)   26A6 C9          		 RET	;
 46)   26A7 06 50       		DEL2:LD B,80	;
 48)   26A9 CD 9A 26    		S1: CALL DELAYMILISEC	;
 49)   26AC 10 FB       		 DJNZ S1 	;
 50)   26AE C9          		 RET	;
 55)   26AF C5          		@DELAYSEC:PUSH BC 	;
 56)   26B0 01 E8 03    		        LD BC,1000 	;
 57)   26B3 C5          		MYDLAGN: PUSH BC	;
 58)   26B4 CD 9A 26    		        CALL DELAY  ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 59)   26B7 C1          		       POP BC	;
 60)   26B8 0B          		       DEC BC	;
 61)   26B9 78          		        LD A,B	;
 62)   26BA B1          		        OR C	;
 63)   26BB 20 F6       		        JR NZ,MYDLAGN	;
 64)   26BD C1          		        POP BC	;
 65)   26BE 10 EF       		        DJNZ DELAYSEC	;
 66)   26C0 C9          		        RET	;
 71)   26C1 F5          		OUTASC PUSH AF	;
 72)   26C2 D5          		 PUSH DE	;
 73)   26C3 CD F6 26    		 CALL B2Bcd	;
 74)   26C6 D1          		 POP DE	;
 75)   26C7 CD 1C 27    		 CALL BCD2HA	;
 76)   26CA F1          		 POP AF	;
 77)   26CB C9          		 RET	;
 91)   26CC B7          		BCD2BN: OR A	;
 92)   26CD 47          		       LD B,A	;
 93)   26CE E6 F0       		 AND $F0	;
 94)   26D0 0F          		 RRCA	;
 95)   26D1 4F          		 LD C,A	;
 96)   26D2 0F          		 RRCA	;
 97)   26D3 0F          		 RRCA	;
 98)   26D4 81          		 ADD A,C	;
 99)   26D5 4F          		 LD C,A	;
100)   26D6 78          		 LD A,B	;
101)   26D7 E6 0F       		 AND $0F	;
102)   26D9 81          		 ADD A,C	;
103)   26DA C9          		 RET 	;
118)   26DB 26 FF       		BN2BCD: LD H,$FF	;
119)   26DD 24          		D100LP: INC H	;
120)   26DE D6 64       		 SUB 100	;
121)   26E0 30 FB       		 JR NC,D100LP	;
122)   26E2 C6 64       		 ADD A,100	;
123)   26E4 2E FF       		 LD L,$FF	;
124)   26E6 2C          		D10LP: INC L	;
125)   26E7 D6 0A       		       SUB 10	;
126)   26E9 30 FB       		       JR NC, D10LP	;
127)   26EB C6 0A       		       ADD A,10	;
128)   26ED 4F          		       LD C,A	;
129)   26EE 7D          		       LD A,L	;
130)   26EF 07          		       RLCA	;
131)   26F0 07          		       RLCA        	;
132)   26F1 07          		 RLCA	;
133)   26F2 07          		       RLCA	;
134)   26F3 B1          		 OR C	;
135)   26F4 6F          		 LD L,A	;
136)   26F5 C9          		 RET	;
150)   26F6 01 00 10    		LD BC, 16*256+0 ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
151)   26F9 11 00 00    		LD DE, 0	;
153)   26FC 29          		ADD HL, HL	;
154)   26FD 7B          		LD A, E	;
155)   26FE 8F          		ADC A, A	;
156)   26FF 27          		DAA	;
157)   2700 5F          		LD E, A	;
158)   2701 7A          		LD A, D	;
159)   2702 8F          		ADC A, A	;
160)   2703 27          		DAA	;
161)   2704 57          		LD D, A	;
162)   2705 79          		LD A, C	;
163)   2706 8F          		ADC A, A	;
164)   2707 27          		DAA	;
165)   2708 4F          		LD C, A	;
166)   2709 10 F1       		DJNZ cvtLp	;
167)   270B EB          		EX DE,HL	;
168)   270C C9          		RET	;
182)   270D B7          		BCD2BN: OR A	;
183)   270E 47          		       LD B,A	;
184)   270F E6 F0       		 AND $F0	;
185)   2711 0F          		 RRCA	;
186)   2712 4F          		 LD C,A	;
187)   2713 0F          		 RRCA	;
188)   2714 0F          		 RRCA	;
189)   2715 81          		 ADD A,C	;
190)   2716 4F          		 LD C,A	;
191)   2717 78          		 LD A,B	;
192)   2718 E6 0F       		 AND $0F	;
193)   271A 81          		 ADD A,C	;
194)   271B C9          		 RET	;
206)   271C 79          		LD A, C	;
207)   271D CD 49 27    		CALL cvtUN	;
208)   2720 79          		LD A, C	;
209)   2721 CD 4D 27    		CALL cvtLN	;
210)   2724 7C          		LD A, H	;
211)   2725 CD 49 27    		CALL cvtUN	;
212)   2728 7C          		LD A, H	;
213)   2729 CD 4D 27    		CALL cvtLN	;
214)   272C 7D          		LD A, L	;
215)   272D CD 49 27    		CALL cvtUN	;
216)   2730 7D          		LD A, L	;
217)   2731 18 1A       		JR cvtLN	;
219)   2733 1F          		RRA ; move upper nibble into lower nibble	; move upper nibble into lower nibble
220)   2734 1F          		RRA	;
221)   2735 1F          		RRA	;
222)   2736 1F          		RRA	;
224)   2737 E6 0F       		AND 0Fh ; isolate lower nibble	; isolate lower nibble
225)   2739 C6 90       		ADD A, 90h ; old trick	; old trick
226)   273B 27          		DAA ; for converting	; for converting
227)   273C CE 40       		ADC A, 40h ; one nibble	; one nibble
228)   273E 27          		DAA ; to hex ASCII	; to hex ASCII
229)   273F 12          		LD (DE), A	;
230)   2740 13          		INC DE	;
231)   2741 C9          		RET	;
243)   2742 7D          		LD A, L	;
244)   2743 CD 33 27    		CALL cvtUN	;
245)   2746 7D          		LD A, L	;
246)   2747 18 EE       		JR cvtLN	;
248)   2749 1F          		RRA ; move upper nibble into lower nibble	; move upper nibble into lower nibble
249)   274A 1F          		RRA	;
250)   274B 1F          		RRA	;
251)   274C 1F          		RRA	;
253)   274D E6 0F       		AND 0Fh ; isolate lower nibble	; isolate lower nibble
254)   274F C6 90       		ADD A, 90h ; old trick	; old trick
255)   2751 27          		DAA ; for converting	; for converting
256)   2752 CE 40       		ADC A, 40h ; one nibble	; one nibble
257)   2754 27          		DAA ; to hex ASCII	; to hex ASCII
258)   2755 12          		LD (DE), A	;
259)   2756 13          		INC DE	;
260)   2757 C9          		RET	;
277)   2758 F5          		 PUSH AF      ; 11 T-states	; 11 T-states
279)   2759 ED 44       		 NEG        ; 8 T-states	; 8 T-states
280)   275B ED 44       		 NEG        ; 8 T-states	; 8 T-states
281)   275D ED 44       		 NEG        ; 8 T-states	; 8 T-states
282)   275F ED 44       		 NEG        ; 8 T-states	; 8 T-states
283)   2761 0B          		 DEC BC       ; 6 T-states	; 6 T-states
284)   2762 79          		 LD A,C       ; 9 T-states	; 9 T-states
285)   2763 B0          		 OR B       ; 4 T-states	; 4 T-states
286)   2764 C2 59 27    		 JP NZ,pau_lp     ; 10 T-states	; 10 T-states
287)   2767 F1          		 POP AF       ; 10 T-states	; 10 T-states
288)   2768 C9          		 RET        ; Pause complete, RETurn	; Pause complete, RETurn
  8)   2769 21 00 00    		@Mult16:ld hl,0	;
  9)   276C 78          		   ld a,b	;
 10)   276D 06 10       		   ld b,16	;
 12)   276F 29          		   add hl,hl	;
 13)   2770 CB 21       		   sla c	;
 14)   2772 17          		   rla	;
 15)   2773 30 01       		   jr nc,Mult16_NoAdd	;
 16)   2775 19          		   add hl,de	;
 18)   2776 10 F7       		   djnz Mult16_Loop	;
 19)   2778 C9          		   ret	;
 25)   2779 D5          		@Mult32:PUSH DE	;
 26)   277A 79          		   ld a,c	;
 27)   277B 48          		   ld c,b	;
 28)   277C 21 00 00    		   ld hl,0	;
 29)   277F 06 10       		   ld b,16	;
 31)   2781 29          		   add hl,hl	;
 32)   2782 17          		   rla	;
 33)   2783 CB 11       		   rl c	;
 34)   2785 30 07       		   jr nc,Mult32_NoAdd	;
 35)   2787 19          		   add hl,de	;
 36)   2788 CE 00       		   adc a,0	;
 37)   278A D2 8E 27    		   jp nc,Mult32_NoAdd	;
 38)   278D 0C          		   inc c	;
 40)   278E 10 F1       		   djnz Mult32_Loop	;
 41)   2790 41          		   ld b,c	;
 42)   2791 4F          		   ld c,a	;
 43)   2792 D1          		   POP DE	;
 44)   2793 C9          		   ret	;
 52)   2794 19          		       ADD     HL,DE   ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
 53)   2795 D9          		       EXX	;
 54)   2796 ED 5A       		       ADC     HL,DE   ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
 55)   2798 D9          		       EXX	;
 58)   2799 C9          		       RET	;
 68)   279A 11 40 00    		   ld de,$0040	;
 69)   279D 7D          		   ld a,l	;
 70)   279E 6C          		   ld l,h	;
 71)   279F 62          		   ld h,d	;
 72)   27A0 B7          		   or a	;
 73)   27A1 06 08       		   ld b,8	;
 75)   27A3 ED 52       		   sbc hl,de	;
 76)   27A5 30 01       		   jr nc,Sqr16_Skip	;
 77)   27A7 19          		   add hl,de	;
 79)   27A8 3F          		   ccf	;
 80)   27A9 CB 12       		   rl d	;
 81)   27AB 87          		   add a,a	;
 82)   27AC ED 6A       		   adc hl,hl	;
 83)   27AE 87          		   add a,a	;
 84)   27AF ED 6A       		   adc hl,hl	;
 85)   27B1 10 F0       		   djnz Sqr16_Loop	;
 86)   27B3 C9          		   ret        	;
  9)   8300 00          		   @FLAGS   DEFS 1  ; Flags: B7=ESC PRESSED, B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 10)   8301 00 00       		   @FCOLOR   DEFS 2 ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 11)   8303 00 00       		   @BCOLOR   DEFS 2 ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 12)   8305 00 00       		   @FGRCOL   DEFS 2 ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 13)   8307 00 00       		   @BGRCOL   DEFS 2 ;BACKGROUND COLOR FOR GRAPHICS 	;BACKGROUND COLOR FOR GRAPHICS
 14)   8309 00 00       		   @FCOLTM   DEFS 2 ;TEMP FOREGROUND COLOR 	;TEMP FOREGROUND COLOR
 15)   830B 00 00       		   @BCOLTM   DEFS 2 ;TEMP BACKGROUND COLOR 	;TEMP BACKGROUND COLOR
 16)   830D 00          		   @CURSORX  DEFS 1    ;0-79	;0-79
 17)   830E 00          		   @CURSORY  DEFS 1    ;0-47	;0-47
 18)   830F 00          		   @SCRLN    DEFS 1    ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 19)   8310 00          		   @LASTCHAR DEFS 1; 	;
 20)   8311 00          		   @CURSSTAT DEFS 1;  ;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN	;  ;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN
 21)   8312 00 00       		   @EDPTR    DEFS 2	;
 22)   8314 00          		   @OPTVAL   DEFS 1	;
 23)   8315 00          		   @INKEY    DEFS 1	;
 24)   8316 00          		   @VDUMODE  DEFS 1    ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 25)   8317 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   831B 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   831F 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   8323 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   8327 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   832B 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   832F 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   8333 00 00 00 00 		   @FCOLPAL DEFS 16*2    ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 26)   8337 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   833B 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   833F 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   8343 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   8347 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   834B 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   834F 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   8353 00 00 00 00 		   @BCOLPAL DEFS 16*2    ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 27)   8357 00 00       		   @GR_LASTX3 DEFS 2	;
 28)   8359 00 00       		   @GR_LASTY3 DEFS 2	;
 29)   835B 00 00       		   @GR_LASTX2 DEFS 2	;
 30)   835D 00 00       		   @GR_LASTY2 DEFS 2    	;
 31)   835F 00 00       		   @GR_LASTX DEFS 2	;
 32)   8361 00 00       		   @GR_LASTY DEFS 2	;
 33)   8363 00 00       		   @GR_PARAM1 DEFS 2	;
 34)   8365 00 00       		   @GR_PARAM2 DEFS 2	;
 35)   8367 00 00       		   @GR_PARAM3 DEFS 2	;
 36)   8369 00 00       		   @GR_PARAM4 DEFS 2	;
 38)   836B 00 00       		   @FILL_X   DEFS 2	;
 39)   836D 00 00       		   @FILL_Y   DEFS 2 	;
 40)   836F 00 00       		   @FILL_L   DEFS 2	;
 41)   8371 00 00       		   @FILL_X1  DEFS 2	;
 42)   8373 00 00       		   @FILL_X2  DEFS 2	;
 43)   8375 00 00       		   @FILL_DY  DEFS 2	;
 44)   8377 00 00       		   @FILL_Q   DEFS 2  ;START OF QUEUE	;START OF QUEUE
 45)   8379 00 00       		   @FILL_IDX DEFS 2  ;INDEX OF QUEUE	;INDEX OF QUEUE
 46)   837B 00 00       		   @FILL_PY  DEFS 2  ;FOR PUSH/POP	;FOR PUSH/POP
 47)   837D 00 00       		   @FILL_PXL DEFS 2	;
 48)   837F 00 00       		   @FILL_PXR DEFS 2	;
 49)   8381 00 00       		   @FILL_PDY DEFS 2    	;
 50)   8383 00 00       		   @FILL_OV  DEFS 2  ;OLD COLOR	;OLD COLOR
 51)   8385 00 00       		   @FILL_OLDSP DEFS 2; OLD SP	; OLD SP
 52)   8387 00          		   @LCD_DSPCTRL DEFS 1	;
 53)   8388 00          		   @LCD_DSPMODE DEFS 1	;
 54)   8389 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   838D 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   8391 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   8395 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   8399 00 00 00 00 		   @BUFFER   DEFS 20; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 55)   839D 00          		   @FFSTAT   DEFS 1  ;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 56)   839E 00          		  @KEYCTR   DEFS 1  ;FOR USB KEYBOARD 	;FOR USB KEYBOARD
 57)   839F 00          		  @SERERR  DEFS 1;	;
 58)   83A0 00          		  @SERER2  DEFS 1  ;AT RAM ADDRESS	;AT RAM ADDRESS
 59)   83A1 00          		  @DISPCT   DEFS 1  ;	;
 60)   83A2 00          		  @LCDCX    DEFS 1  ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 61)   83A3 00          		  @LCDCY    DEFS 1  ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 62)   83A4 00 00       		  @PRGEX   DEFS 2  ;2 BYTES	;2 BYTES
 63)   83A6 00          		  @TVSTAT   DEFS 1  ;1 BYTE	;1 BYTE
 64)   83A7 00 00 00 00 		  @TIMECTR  DEFS 4	;
 65)   83AB 00          		  @INT2TE DEFB 0	;
 66)   83AC 00 00 00 00 		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   83B0 00 00 00 00 		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   83B4 00 00 00 00 		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   83B8 00          		   @MYNUM   DEFS 13 ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED    	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 67)   83B9 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83BD 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83C1 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83C5 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83C9 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83CD 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83D1 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83D5 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83D9 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   83DD 00 00 00 00 		   @STRGBUFF       DEFS 40  ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 68)   83E1 00 00 00 00 		   @STRGCMD      DEFS 4	;
 69)   83E5 00          		   @FID          DEFS 1	;
 70)   83E6 00          		   @SPC        DEFS 1	;
