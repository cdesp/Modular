  3)   0000 00          		 NOP	;
  4)   0001 C3 00 02    		 JP START	;
  5)   0004 C3 F5 02    		 JP MENU	;
  6)   0007 25          		 VERSION DEFB $25    ; AT ADDR=7 VER 2.4	; AT ADDR=7 VER 2.4
  7)   0008 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   000C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0010 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0014 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0018 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   001C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0020 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0024 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0028 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   002C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0030 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0034 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
 10)   0038 C3 BC 05    		 JP INTSER	;
 13)   003B 00 00 00 00 		 ALIGN 256	;
 13)   003F 00 00 00 00 		 ALIGN 256	;
 13)   0043 00 00 00 00 		 ALIGN 256	;
 13)   0047 00 00 00 00 		 ALIGN 256	;
 13)   004B 00 00 00 00 		 ALIGN 256	;
 13)   004F 00 00 00 00 		 ALIGN 256	;
 13)   0053 00 00 00 00 		 ALIGN 256	;
 13)   0057 00 00 00 00 		 ALIGN 256	;
 13)   005B 00 00 00 00 		 ALIGN 256	;
 13)   005F 00 00 00 00 		 ALIGN 256	;
 13)   0063 00 00 00 00 		 ALIGN 256	;
 13)   0067 00 00 00 00 		 ALIGN 256	;
 13)   006B 00 00 00 00 		 ALIGN 256	;
 13)   006F 00 00 00 00 		 ALIGN 256	;
 13)   0073 00 00 00 00 		 ALIGN 256	;
 13)   0077 00 00 00 00 		 ALIGN 256	;
 13)   007B 00 00 00 00 		 ALIGN 256	;
 13)   007F 00 00 00 00 		 ALIGN 256	;
 13)   0083 00 00 00 00 		 ALIGN 256	;
 13)   0087 00 00 00 00 		 ALIGN 256	;
 13)   008B 00 00 00 00 		 ALIGN 256	;
 13)   008F 00 00 00 00 		 ALIGN 256	;
 13)   0093 00 00 00 00 		 ALIGN 256	;
 13)   0097 00 00 00 00 		 ALIGN 256	;
 13)   009B 00 00 00 00 		 ALIGN 256	;
 13)   009F 00 00 00 00 		 ALIGN 256	;
 13)   00A3 00 00 00 00 		 ALIGN 256	;
 13)   00A7 00 00 00 00 		 ALIGN 256	;
 13)   00AB 00 00 00 00 		 ALIGN 256	;
 13)   00AF 00 00 00 00 		 ALIGN 256	;
 13)   00B3 00 00 00 00 		 ALIGN 256	;
 13)   00B7 00 00 00 00 		 ALIGN 256	;
 13)   00BB 00 00 00 00 		 ALIGN 256	;
 13)   00BF 00 00 00 00 		 ALIGN 256	;
 13)   00C3 00 00 00 00 		 ALIGN 256	;
 13)   00C7 00 00 00 00 		 ALIGN 256	;
 13)   00CB 00 00 00 00 		 ALIGN 256	;
 13)   00CF 00 00 00 00 		 ALIGN 256	;
 13)   00D3 00 00 00 00 		 ALIGN 256	;
 13)   00D7 00 00 00 00 		 ALIGN 256	;
 13)   00DB 00 00 00 00 		 ALIGN 256	;
 13)   00DF 00 00 00 00 		 ALIGN 256	;
 13)   00E3 00 00 00 00 		 ALIGN 256	;
 13)   00E7 00 00 00 00 		 ALIGN 256	;
 13)   00EB 00 00 00 00 		 ALIGN 256	;
 13)   00EF 00 00 00 00 		 ALIGN 256	;
 13)   00F3 00 00 00 00 		 ALIGN 256	;
 13)   00F7 00 00 00 00 		 ALIGN 256	;
 13)   00FB 00 00 00 00 		 ALIGN 256	;
 13)   00FF 00          		 ALIGN 256	;
 16)   0100 C3 52 20    		 JP MYOS_CLRSCN	;
 17)   0103 C3 55 20    		 JP MYOS_PUTIME	;
 18)   0106 C3 66 20    		 JP MYOS_GETIME	;
 19)   0109 C3 77 20    		 JP MYOS_PUTCSR	;
 20)   010C C3 8F 20    		 JP MYOS_GETCSR	;
 21)   010F C3 9E 20    		 JP MYOS_OSRDCH	;
 22)   0112 C3 5B 22    		 JP MYOS_PROMPT	;
 23)   0115 C3 A9 20    		 JP MYOS_OSWRCH	;
 24)   0118 C3 89 22    		 JP MYOS_OSKEY	;
 25)   011B C3 C5 22    		 JP MYOS_OSINIT	;
 26)   011E C3 83 27    		 JP MYOS_OSLINE	;
 27)   0121 C3 90 23    		 JP MYOS_OSCLI	;
 28)   0124 C3 9C 26    		 JP MYOS_OSBPUT	;
 29)   0127 C3 AC 26    		 JP MYOS_OSBGET	;
 30)   012A C3 D9 26    		 JP MYOS_OSSTAT	;
 31)   012D C3 D4 26    		 JP MYOS_OSSHUT	;
 32)   0130 C3 75 26    		 JP MYOS_OSOPEN	;
 33)   0133 C3 E0 26    		 JP MYOS_OSCALL	;
 34)   0136 C3 BA 1F    		 JP MYOS_OSSAVE	;
 35)   0139 C3 FA 1F    		 JP MYOS_OSLOAD	;
 36)   013C C3 C6 26    		 JP MYOS_GETPTR	;
 37)   013F C3 CB 26    		 JP MYOS_PUTPTR	;
 38)   0142 C3 CF 26    		 JP MYOS_GETEXT	;
 39)   0145 C3 E1 26    		 JP MYOS_RESET	;
 40)   0148 C3 B5 22    		 JP MYOS_TRAP	;
 41)   014B C3 B8 22    		 JP MYOS_LTRAP	;
 42)   014E C3 E9 26    		 JP MYOS_CLG	;
 43)   0151 C3 01 27    		 JP MYOS_COLOUR	;
 44)   0154 C3 0C 27    		 JP MYOS_DRAW	;
 45)   0157 C3 32 27    		 JP MYOS_ENVEL	;
 46)   015A C3 F5 26    		 JP MYOS_GCOL	;
 47)   015D C3 E2 26    		 JP MYOS_MODE	;
 48)   0160 C3 16 27    		 JP MYOS_MOVE	;
 49)   0163 C3 20 27    		 JP MYOS_PLOT	;
 50)   0166 C3 32 27    		 JP MYOS_SOUND	;
 51)   0169 C3 32 27    		 JP MYOS_ADVAL	;
 52)   016C C3 2A 27    		 JP MYOS_POINT	;
 53)   016F C3 38 27    		 JP MYOS_GETIMS	;
 54)   0172 C3 32 27    		 JP MYOS_PUTIMS	;
 56)   0175 00 00 00 00 		 ALIGN 256	;
 56)   0179 00 00 00 00 		 ALIGN 256	;
 56)   017D 00 00 00 00 		 ALIGN 256	;
 56)   0181 00 00 00 00 		 ALIGN 256	;
 56)   0185 00 00 00 00 		 ALIGN 256	;
 56)   0189 00 00 00 00 		 ALIGN 256	;
 56)   018D 00 00 00 00 		 ALIGN 256	;
 56)   0191 00 00 00 00 		 ALIGN 256	;
 56)   0195 00 00 00 00 		 ALIGN 256	;
 56)   0199 00 00 00 00 		 ALIGN 256	;
 56)   019D 00 00 00 00 		 ALIGN 256	;
 56)   01A1 00 00 00 00 		 ALIGN 256	;
 56)   01A5 00 00 00 00 		 ALIGN 256	;
 56)   01A9 00 00 00 00 		 ALIGN 256	;
 56)   01AD 00 00 00 00 		 ALIGN 256	;
 56)   01B1 00 00 00 00 		 ALIGN 256	;
 56)   01B5 00 00 00 00 		 ALIGN 256	;
 56)   01B9 00 00 00 00 		 ALIGN 256	;
 56)   01BD 00 00 00 00 		 ALIGN 256	;
 56)   01C1 00 00 00 00 		 ALIGN 256	;
 56)   01C5 00 00 00 00 		 ALIGN 256	;
 56)   01C9 00 00 00 00 		 ALIGN 256	;
 56)   01CD 00 00 00 00 		 ALIGN 256	;
 56)   01D1 00 00 00 00 		 ALIGN 256	;
 56)   01D5 00 00 00 00 		 ALIGN 256	;
 56)   01D9 00 00 00 00 		 ALIGN 256	;
 56)   01DD 00 00 00 00 		 ALIGN 256	;
 56)   01E1 00 00 00 00 		 ALIGN 256	;
 56)   01E5 00 00 00 00 		 ALIGN 256	;
 56)   01E9 00 00 00 00 		 ALIGN 256	;
 56)   01ED 00 00 00 00 		 ALIGN 256	;
 56)   01F1 00 00 00 00 		 ALIGN 256	;
 56)   01F5 00 00 00 00 		 ALIGN 256	;
 56)   01F9 00 00 00 00 		 ALIGN 256	;
 56)   01FD 00 00 00    		 ALIGN 256	;
 40)   0200 F3          		@START: DI	;
 50)   0201 C3 45 02    		 JP BOOT        ;SKIP TESTING	;SKIP TESTING
 55)   0204 06 05       		CN1: LD B, 5	;
 56)   0206 0E 00       		AGN1: LD C, 0	;
 57)   0208 3E 00       		 LD A, 0	;
 58)   020A ED 79       		 OUT (C), A	;
 59)   020C 0E 00       		 LD C, 0	;
 60)   020E 3E FF       		 LD A, 255	;
 61)   0210 ED 79       		 OUT (C), A	;
 62)   0212 10 F2       		 DJNZ AGN1	;
 67)   0214 11 01 00    		 LD DE, 1	;
 68)   0217 3E 00       		 LD A, 0        ;WRITE 0	;WRITE 0
 69)   0219 4F          		 LD C, A	;
 70)   021A 21 00 80    		 LD HL, RAMAD	;
 71)   021D 06 08       		 LD B, 8	;
 72)   021F 77          		AGN2: LD (HL), A	;
 73)   0220 4E          		 LD C, (HL)	;
 74)   0221 B9          		 CP C	;
 75)   0222 C2 3C 02    		 JP NZ, ERR	;
 76)   0225 19          		 ADD HL, DE	;
 77)   0226 C6 20       		 ADD A, 32       ;WRITE +32	;WRITE +32
 78)   0228 4F          		 LD C, A	;
 79)   0229 10 F4       		 DJNZ AGN2	;
 81)   022B 06 05       		 LD B, 5	;
 82)   022D 0E 08       		AGN3: LD C, 00001000B       ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
 83)   022F 3E 40       		 LD A, 64	;
 84)   0231 ED 79       		 OUT (C), A	;
 85)   0233 C6 80       		 ADD A, 128	;
 86)   0235 ED 79       		 OUT (C), A	;
 87)   0237 10 F4       		 DJNZ AGN3        ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
 88)   0239 C3 45 02    		 JP BOOT	;
 91)   023C 0E 38       		ERR: LD C, 00111000B       ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
 92)   023E 3E 40       		 LD A, 64	;
 93)   0240 ED 79       		 OUT (C), A	;
 95)   0242 C3 3C 02    		 JP ERR         ;DO AGAIN PORT 1	;DO AGAIN PORT 1
102)   0245 F3          		@BOOT: DI	;
103)   0246 ED 56       		 IM 1	;
106)   0248 0E 00       		MMUSETUP:   LD C,DEVMMU	;
107)   024A AF          		  XOR A	;
108)   024B 06 00       		 LD B,0.SHL.5	;
109)   024D ED 79       		 OUT (C),A	;
110)   024F 3C          		 INC A	;
111)   0250 06 20       		 LD B,1.SHL.5	;
112)   0252 ED 79       		 OUT (C),A  	;
113)   0254 3C          		 INC A	;
114)   0255 06 40       		 LD B,2.SHL.5	;
115)   0257 ED 79       		 OUT (C),A  	;
116)   0259 3C          		 INC A	;
117)   025A 06 60       		 LD B,3.SHL.5	;
118)   025C ED 79       		 OUT (C),A  	;
119)   025E 3C          		 INC A	;
120)   025F 06 80       		 LD B,4.SHL.5	;
121)   0261 ED 79       		 OUT (C),A  	;
122)   0263 3C          		 INC A	;
123)   0264 06 A0       		 LD B,5.SHL.5	;
124)   0266 ED 79       		 OUT (C),A  	;
125)   0268 3C          		 INC A	;
126)   0269 06 C0       		 LD B,6.SHL.5	;
127)   026B ED 79       		 OUT (C),A  	;
128)   026D 3C          		 INC A	;
129)   026E 06 E0       		 LD B,7.SHL.5	;
130)   0270 ED 79       		 OUT (C),A   	;
132)   0272 31 FF FA    		 LD SP, STACKP	;
133)   0275 21 00 FE    		 LD HL,OSVARS       ;ZERO OS VARIABLES	;ZERO OS VARIABLES
134)   0278 AF          		SI_AGN: XOR A	;
135)   0279 77          		 LD (HL),A	;
136)   027A 23          		 INC HL	;
137)   027B 7C          		 LD A,H	;
138)   027C B5          		 OR L	;
139)   027D 20 F9       		 JR NZ,SI_AGN       ;HL=0000 WHEN OVERFLOW FROM FFFF	;HL=0000 WHEN OVERFLOW FROM FFFF
140)   027F CD 27 06    		 CALL INITMMU       ;PUT PAGES 0..7 IN RAM BANKS 0..7	;PUT PAGES 0..7 IN RAM BANKS 0..7
141)   0282 CD 2D 04    		 CALL FF_CLR	;
142)   0285 CD 55 04    		 CALL EPROMOFF	;
143)   0288 CD FA 06    		 CALL KEYBDATON	;
146)   028B 3E 0C       		 LD A, 12        ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
147)   028D CD 5C 06    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
148)   0290 21 6D 05    		 LD HL, STR00	;
149)   0293 CD 84 06    		 CALL RS_TXT	;
152)   0296 CD 2C 0C    		 CALL I2C_INIT        ;INITIALIZE I2C	;INITIALIZE I2C
153)   0299 CD B8 0D    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
154)   029C CD 8D 0E    		 CALL LCD16_INIT       ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
155)   029F 21 81 04    		 LD HL, SVER	;
156)   02A2 CD 0E 0F    		 CALL LCD16_PRINT       ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
159)   02A5 CD 07 0A    		 CALL STRG_INIT	;
160)   02A8 21 A4 05    		 LD HL, STR001	;
161)   02AB CD 84 06    		 CALL RS_TXT	;
169)   02AE CD 3E 11    		 CALL LCD_INIT	;
170)   02B1 21 00 00    		 LD HL, COL_BLACK	;
171)   02B4 22 03 FE    		 LD (BCOLOR), HL	;
172)   02B7 21 FF FF    		 LD HL, COL_WHITE	;
173)   02BA 22 01 FE    		 LD (FCOLOR), HL	;
174)   02BD 21 5A 05    		 LD HL, STRSCR	;
175)   02C0 CD 84 06    		 CALL RS_TXT	;
176)   02C3 CD 4C 19    		 CALL LCD_CLRSCR	;
177)   02C6 AF          		 XOR A	;
178)   02C7 32 0F FE    		 LD (SCRLN), A	;
179)   02CA 3E 00       		 LD A, 0	;
180)   02CC 32 0D FE    		 LD (CURSORX), A	;
181)   02CF 3E 00       		 LD A, 0	;
182)   02D1 32 0E FE    		 LD (CURSORY), A	;
183)   02D4 21 B6 04    		 LD HL, STR0        ;LCD INIT MSG ON 0,0	;LCD INIT MSG ON 0,0
184)   02D7 CD 8C 19    		 CALL LCD_MSG	;
185)   02DA 3E 1E       		 LD A, 30	;
186)   02DC 32 0D FE    		 LD (CURSORX), A	;
187)   02DF 21 81 04    		 LD HL, SVER	;
188)   02E2 CD 8C 19    		 CALL LCD_MSG        ;PRINT VERSION ON 30,0	;PRINT VERSION ON 30,0
192)   02E5 CD 88 0F    		 CALL VGA_INIT	;
193)   02E8 AF          		 XOR A	;
194)   02E9 32 F3 FE    		 LD (VGATX_X),A	;
195)   02EC 32 F4 FE    		 LD (VGATX_Y),A	;
196)   02EF 21 81 04    		 LD HL,SVER	;
197)   02F2 CD BE 10    		 CALL VGA_PRINT	;
204)   02F5 AF          		@MENU: XOR A	;
205)   02F6 32 0F FE    		 LD (SCRLN), A	;
206)   02F9 21 2B 05    		 LD HL, STRMN	;
207)   02FC CD 84 06    		 CALL RS_TXT       ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
208)   02FF 21 83 05    		 LD HL, STR01	;
209)   0302 CD 84 06    		 CALL RS_TXT       ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
216)   0305 21 91 04    		 LD HL, SMENU	;
217)   0308 3E 05       		 LD A, 5	;
218)   030A 32 0D FE    		 LD (CURSORX), A	;
219)   030D 3E 02       		 LD A, 2	;
220)   030F 32 0E FE    		 LD (CURSORY), A	;
221)   0312 CD 8C 19    		 CALL LCD_MSG	;
224)   0315 21 91 04    		 LD HL, SMENU	;
225)   0318 3E 00       		 LD A, 0	;
226)   031A 32 F3 FE    		 LD (VGATX_X), A	;
227)   031D 3E 02       		 LD A, 2	;
228)   031F 32 F4 FE    		 LD (VGATX_Y), A	;
229)   0322 CD BE 10    		 CALL VGA_PRINT	;
232)   0325 CD 66 03    		 CALL GET_CHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
235)   0328 FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
236)   032A CC AB 03    		 CALL Z, UPLOD	;
237)   032D FE 58       		 CP 'X'	;
238)   032F CA A2 03    		 JP Z, EXEC	;
239)   0332 FE 54       		 CP 'T'	;
240)   0334 CC FB 03    		 CALL Z, RSTST	;
241)   0337 FE 59       		 CP 'Y'	;
242)   0339 CC 11 04    		 CALL Z, RSTST2	;
243)   033C FE 48       		 CP 'H'	;
244)   033E CC 20 04    		 CALL Z, XMTST	;
245)   0341 FE 4A       		 CP 'J'	;
246)   0343 CC E0 03    		 CALL Z, DNLOD	;
249)   0346 FE 43       		 CP 'C'	;
250)   0348 CC 4C 19    		 CALL Z, LCD_CLRSCR	;
251)   034B FE 42       		 CP 'B'	;
252)   034D CA 00 40    		 JP Z, BBCBASIC	;
254)   0350 C3 F5 02    		 JP MENU	;
261)   0353 CD 59 27    		@GET_CHARNW: CALL CHKCURS	;
262)   0356 AF          		 XOR A	;
264)   0357 CD B7 06    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
265)   035A 28 04       		 JR Z, CNW_TST2	;
266)   035C CD 8E 06    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
267)   035F C9          		 RET	;
271)   0360 CD D0 07    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
272)   0363 FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
283)   0365 C9          		 RET	;
288)   0366 CD 59 27    		@GET_CHAR: CALL CHKCURS	;
289)   0369 AF          		 XOR A	;
291)   036A CD B7 06    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
292)   036D 28 04       		 JR Z, CW_TST2	;
293)   036F CD 8E 06    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
294)   0372 C9          		 RET	;
298)   0373 CD D0 07    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
299)   0376 FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
300)   0378 28 EC       		 JR Z, GET_CHAR	;
310)   037A C9          		 RET	;
314)   037B F5          		@OS_PRINTCHAR: PUSH AF	;
315)   037C CD 87 17    		 CALL LCD_PRINTCHAR	;
316)   037F F1          		 POP AF	;
317)   0380 CD 2F 10    		 CALL VGA_PRCH	;
318)   0383 C9          		 RET	;
322)   0384 E5          		@OS_MSG: PUSH HL	;
323)   0385 CD 8C 19    		 CALL LCD_MSG	;
324)   0388 E1          		 POP HL	;
325)   0389 CD BE 10    		 CALL VGA_PRINT	;
326)   038C C9          		 RET	;
328)   038D CD 0A 19    		@OS_PRNCURS: CALL LCD_PRNCURS	;
329)   0390 CD AC 10    		 CALL VGA_PRNCURS	;
330)   0393 C9          		 RET	;
332)   0394 CD 05 19    		@OS_RMVCURS: CALL LCD_RMVCURS	;
333)   0397 CD A4 10    		 CALL VGA_RMVCURS	;
334)   039A C9          		 RET	;
336)   039B CD 4C 19    		@OS_CLRSCR: CALL LCD_CLRSCR	;
337)   039E CD D3 0F    		 CALL VGA_CLR	;
338)   03A1 C9          		 RET	;
349)   03A2 3E 05       		 LD A, 5	;
350)   03A4 CD AA 28    		 CALL SCPRN	;
352)   03A7 2A A4 FE    		 LD HL, (PRGEX)	;
359)   03AA E9          		 JP (HL)	;
366)   03AB F3          		UPLOD: DI	;
371)   03AC CD 8E 06    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
372)   03AF 6F          		 LD L, A	;
373)   03B0 CD 8E 06    		 CALL RS_RX	;
374)   03B3 67          		 LD H, A	;
375)   03B4 CD 8E 06    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
376)   03B7 4F          		 LD C, A	;
377)   03B8 CD 8E 06    		 CALL RS_RX	;
378)   03BB 47          		 LD B, A	;
380)   03BC 22 A4 FE    		 LD (PRGEX), HL	;
381)   03BF 3A A5 FE    		 LD A, (PRGEX + 1)	;
389)   03C2 FE 80       		 CP $80	;
390)   03C4 DC 5D 04    		 CALL C, EPROMON       ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
392)   03C7 E5          		NORWR: PUSH HL	;
393)   03C8 CD 8E 06    		NXB: CALL RS_RX	;
394)   03CB 77          		 LD (HL), A	;
395)   03CC 23          		 INC HL	;
396)   03CD 0B          		 DEC BC	;
397)   03CE 78          		 LD A, B	;
398)   03CF B1          		 OR C	;
399)   03D0 20 F6       		 JR NZ, NXB       ;LOOP ALL BYTES	;LOOP ALL BYTES
400)   03D2 CD 55 04    		 CALL EPROMOFF	;
405)   03D5 3E 05       		 LD A, 5	;
406)   03D7 CD AA 28    		 CALL SCPRN	;
407)   03DA CD B7 28    		 CALL DELAY	;
409)   03DD E1          		 POP HL	;
412)   03DE FB          		 EI	;
413)   03DF C9          		 RET	;
424)   03E0 CD 8E 06    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
425)   03E3 6F          		 LD L, A	;
426)   03E4 CD 8E 06    		 CALL RS_RX	;
427)   03E7 67          		 LD H, A	;
428)   03E8 CD 8E 06    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
429)   03EB 4F          		 LD C, A	;
430)   03EC CD 8E 06    		 CALL RS_RX	;
431)   03EF 47          		 LD B, A	;
433)   03F0 7E          		NXB3: LD A, (HL)	;
434)   03F1 CD 75 06    		 CALL RS_TX       ;SEND BYTE	;SEND BYTE
435)   03F4 23          		 INC HL	;
436)   03F5 0B          		 DEC BC	;
437)   03F6 78          		 LD A, B	;
438)   03F7 B1          		 OR C	;
439)   03F8 20 F6       		 JR NZ, NXB3       ;LOOP ALL BYTES	;LOOP ALL BYTES
440)   03FA C9          		 RET	;
442)   03FB 00          		RSTST: NOP        ;GET A KEY FROM RS232	;GET A KEY FROM RS232
443)   03FC 06 0A       		 LD B, 10	;
444)   03FE C5          		TEN: PUSH BC	;
445)   03FF CD 8E 06    		 CALL RS_RX	;
447)   0402 CD 75 06    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
449)   0405 3E 20       		 LD A, ' '	;
451)   0407 3E 52       		 LD A, 'R'	;
454)   0409 CD C4 28    		 CALL DEL2	;
456)   040C C1          		 POP BC	;
457)   040D 10 EF       		 DJNZ TEN	;
459)   040F AF          		 XOR A	;
460)   0410 C9          		 RET	;
462)   0411 00          		RSTST2: NOP        ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
463)   0412 06 FF       		 LD B, 255	;
464)   0414 C5          		TEN2: PUSH BC	;
465)   0415 CD 8E 06    		 CALL RS_RX	;
467)   0418 CD 75 06    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
469)   041B C1          		 POP BC	;
470)   041C 10 F6       		 DJNZ TEN2	;
471)   041E AF          		 XOR A	;
472)   041F C9          		 RET	;
475)   0420 00          		XMTST: NOP        ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
476)   0421 06 FF       		 LD B, 255	;
477)   0423 C5          		TEN3: PUSH BC	;
478)   0424 78          		 LD A, B	;
479)   0425 CD 75 06    		 CALL RS_TX       ;SEND  THE BYTE	;SEND  THE BYTE
480)   0428 C1          		 POP BC	;
481)   0429 10 F8       		 DJNZ TEN3	;
482)   042B AF          		 XOR A	;
483)   042C C9          		 RET	;
489)   042D AF          		 XOR A	;
490)   042E 32 9D FE    		 LD (FFSTAT), A	;
491)   0431 C9          		 RET	;
494)   0432 04          		@FF_OFF: INC B        ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
495)   0433 AF          		 XOR A	;
496)   0434 37          		 SCF	;
497)   0435 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
498)   0436 10 FD       		 DJNZ SBAGN	;
499)   0438 2F          		 CPL         ;INVERSE BITS ON A	;INVERSE BITS ON A
500)   0439 47          		 LD B, A	;
501)   043A 3A 9D FE    		 LD A, (FFSTAT)	;
502)   043D A0          		 AND B         ;ZERO THE BIT	;ZERO THE BIT
503)   043E 32 9D FE    		 LD (FFSTAT), A	;
504)   0441 D3 08       		 OUT (DEVFFS), A	;
505)   0443 C9          		 RET	;
508)   0444 04          		@FF_ON: INC B         ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
509)   0445 AF          		 XOR A	;
510)   0446 37          		 SCF	;
511)   0447 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
512)   0448 10 FD       		 DJNZ SBAGN	;
513)   044A 47          		 LD B, A	;
514)   044B 3A 9D FE    		 LD A, (FFSTAT)	;
515)   044E B0          		 OR B         ;SET THE BIT	;SET THE BIT
516)   044F 32 9D FE    		 LD (FFSTAT), A	;
517)   0452 D3 08       		 OUT (DEVFFS), A	;
518)   0454 C9          		 RET	;
520)   0455 C5          		@EPROMOFF: PUSH BC	;
521)   0456 06 00       		 LD B, 0	;
522)   0458 CD 32 04    		 CALL FF_OFF	;
523)   045B C1          		 POP BC	;
524)   045C C9          		 RET	;
526)   045D C5          		@EPROMON: PUSH BC	;
527)   045E 06 00       		 LD B, 0	;
528)   0460 CD 44 04    		 CALL FF_ON	;
529)   0463 C1          		 POP BC	;
530)   0464 C9          		 RET	;
536)   0465 F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
537)   0466 26 00       		 LD H, 0	;
538)   0468 6F          		 LD L, A	;
539)   0469 11 AC FE    		 LD DE, MYNUM	;
540)   046C CD DE 28    		 CALL OUTASC	;
542)   046F 3E 0A       		 LD A, 10	;
543)   0471 12          		 LD (DE), A	;
544)   0472 13          		 INC DE	;
545)   0473 3E 0D       		 LD A, 13	;
546)   0475 12          		 LD (DE), A	;
547)   0476 13          		 INC DE	;
548)   0477 AF          		 XOR A	;
549)   0478 12          		 LD (DE), A	;
551)   0479 21 AC FE    		 LD HL, MYNUM	;
552)   047C CD 84 06    		 CALL RS_TXT	;
553)   047F F1          		 POP AF	;
554)   0480 C9          		 RET	;
559)   0481 41 54 4C 41 		SVER: DEFM "ATLAS OS V "	;
559)   0485 53 20 4F 53 		SVER: DEFM "ATLAS OS V "	;
559)   0489 20 56 20    		SVER: DEFM "ATLAS OS V "	;
560)   048C 30 2E 33 30 		 DB MJVER,'.',MNVER1,MNVER2	;
561)   0490 00          		 DB 0	;
563)   0491 55 3A 55 50 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
563)   0495 20 4A 3A 44 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
563)   0499 4E 20 58 3A 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
563)   049D 52 55 4E 20 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
563)   04A1 54 59 48 3A 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
563)   04A5 52 53 20 43 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
563)   04A9 3A 43 4C 53 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
563)   04AD 20 42 3A 42 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
563)   04B1 41 53 49 43 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
564)   04B5 00          		 DB 0	;
566)   04B6 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
566)   04BA 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
566)   04BE 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
566)   04C2 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
567)   04C5 00          		 DB 0	;
569)   04C6 52 53 32 33 		STR1: DEFM "RS232 INIT"	;
569)   04CA 32 20 49 4E 		STR1: DEFM "RS232 INIT"	;
569)   04CE 49 54       		STR1: DEFM "RS232 INIT"	;
570)   04D0 00          		 DB 0	;
572)   04D1 50 52 4F 47 		STR2: DEFM "PROGRAM HALTED"	;
572)   04D5 52 41 4D 20 		STR2: DEFM "PROGRAM HALTED"	;
572)   04D9 48 41 4C 54 		STR2: DEFM "PROGRAM HALTED"	;
572)   04DD 45 44       		STR2: DEFM "PROGRAM HALTED"	;
573)   04DF 00          		 DB 0	;
575)   04E0 57 41 49 54 		STR02: DEFM "WAITING..."	;
575)   04E4 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
575)   04E8 2E 2E       		STR02: DEFM "WAITING..."	;
576)   04EA 00          		 DB 0	;
578)   04EB 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
578)   04EF 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
578)   04F3 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
578)   04F7 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
579)   04F9 00          		 DB 0	;
581)   04FA 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
581)   04FE 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
581)   0502 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
582)   0506 00          		 DB 0	;
584)   0507 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
584)   050B 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
584)   050F 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
585)   0512 00          		 DB 0	;
587)   0513 49 4D 41 47 		STIMG: DEFM "IMAGE COPY"	;
587)   0517 45 20 43 4F 		STIMG: DEFM "IMAGE COPY"	;
587)   051B 50 59       		STIMG: DEFM "IMAGE COPY"	;
588)   051D 00          		 DB 0	;
590)   051E 53 43 52 45 		TXTMES: DEFM "SCREEN READY"	;
590)   0522 45 4E 20 52 		TXTMES: DEFM "SCREEN READY"	;
590)   0526 45 41 44 59 		TXTMES: DEFM "SCREEN READY"	;
591)   052A 00          		 DB 0	;
593)   052B 55 49 3A 55 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   052F 50 20 4A 3A 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   0533 44 4E 20 58 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   0537 3A 52 55 4E 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   053B 20 54 59 48 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   053F 3A 52 53 20 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   0543 53 3A 44 49 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   0547 53 50 20 43 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   054B 3A 43 4C 53 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   054F 20 42 3A 42 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
593)   0553 41 53 49 43 		STRMN: DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
594)   0557 0A 0D 00    		 DB 10,13,0	;
596)   055A 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
596)   055E 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
596)   0562 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
596)   0566 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
597)   056A 0A 0D 00    		 DB 10,13,0	;
599)   056D 0A 0D       		STR00: DB 10,13	;
600)   056F 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
600)   0573 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
600)   0577 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
600)   057B 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
600)   057F 44          		 DEFM "RS232 INITIALIZED"	;
601)   0580 0A 0D 00    		 DB 10,13,0	;
603)   0583 0A 0D       		STR01: DB 10,13	;
604)   0585 57 41 49 54 		 DEFM "WAITING..."	;
604)   0589 49 4E 47 2E 		 DEFM "WAITING..."	;
604)   058D 2E 2E       		 DEFM "WAITING..."	;
605)   058F 0A 0D 00    		 DB 10,13,0	;
606)   0592 00          		 DB 0	;
608)   0593 0A 0D       		STR06: DB 10,13	;
609)   0595 4B 45 59 20 		 DEFM "KEY PRESSED"	;
609)   0599 50 52 45 53 		 DEFM "KEY PRESSED"	;
609)   059D 53 45 44    		 DEFM "KEY PRESSED"	;
610)   05A0 0A 0D 00    		 DB 10,13,0	;
611)   05A3 00          		 DB 0	;
613)   05A4 0A 0D       		STR001: DB 10,13	;
614)   05A6 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
614)   05AA 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
614)   05AE 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
614)   05B2 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
614)   05B6 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
615)   05B9 0A 0D 00    		 DB 10,13,0	;
  2)   05BC E5          		 PUSH HL	;
  3)   05BD F5          		 PUSH AF	;
  4)   05BE C5          		 PUSH BC	;
  5)   05BF DD E5       		 PUSH IX	;
  9)   05C1 DB 18       		 IN A, (DEVINP)	;
 10)   05C3 2F          		 CPL	;
 11)   05C4 E6 07       		 AND 0X07       ;BITS 0-2	;BITS 0-2
 12)   05C6 3D          		 DEC A         ;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE	;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE
 13)   05C7 DD 21 E5 05 		 LD IX, MYINTADDR	;
 14)   05CB 06 00       		 LD B, 0	;
 15)   05CD 4F          		 LD C, A	;
 16)   05CE CB 21       		 SLA C        ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 17)   05D0 DD 09       		 ADD IX, BC	;
 18)   05D2 DD 6E 00    		 LD L, (IX)	;
 19)   05D5 DD 66 01    		 LD H, (IX + 1)	;
 20)   05D8 01 DD 05    		 LD BC, IS_EX	;
 21)   05DB C5          		 PUSH BC        ;RETURN ADDRESS	;RETURN ADDRESS
 22)   05DC E9          		 JP (HL)        ;JP TO HL	;JP TO HL
 24)   05DD DD E1       		IS_EX: POP IX	;
 25)   05DF C1          		 POP BC	;
 26)   05E0 F1          		 POP AF	;
 27)   05E1 E1          		 POP HL	;
 28)   05E2 FB          		 EI	;
 29)   05E3 ED 4D       		 RETI	;
 31)   05E5 01 06       		MYINTADDR: DEFW INT_TIMER	;
 32)   05E7 F5 05       		 DEFW SAVETE	;
 33)   05E9 FE 05       		 DEFW DOCLRINT	;
 34)   05EB FE 05       		 DEFW DOCLRINT	;
 35)   05ED FE 05       		 DEFW DOCLRINT	;
 36)   05EF FE 05       		 DEFW DOCLRINT	;
 37)   05F1 FE 05       		 DEFW DOCLRINT	;
 38)   05F3 FE 05       		 DEFW DOCLRINT	;
 40)   05F5 D3 40       		SAVETE: OUT (DEVINT), A       ;CLEAR THE INTERRUPT	;CLEAR THE INTERRUPT
 41)   05F7 21 AB FE    		 LD HL, INT2TE        ;TEARING EFFECT	;TEARING EFFECT
 42)   05FA 3E 01       		 LD A, 1	;
 43)   05FC 77          		 LD (HL),A        ;	;
 44)   05FD C9          		 RET	;
 47)   05FE D3 40       		DOCLRINT: OUT (DEVINT), A	;
 48)   0600 C9          		 RET	;
 50)   0601 D3 40       		INT_TIMER: OUT (DEVINT), A	;
 51)   0603 21 A7 FE    		 LD HL, TIMECTR	;
 52)   0606 34          		 INC (HL)	;
 53)   0607 7E          		 LD A, (HL)	;
 54)   0608 FE 00       		 CP 0	;
 55)   060A C0          		 RET NZ	;
 56)   060B 23          		 INC HL	;
 57)   060C 34          		 INC (HL)	;
 58)   060D 7E          		 LD A, (HL)	;
 59)   060E FE 00       		 CP 0	;
 60)   0610 C0          		 RET NZ	;
 61)   0611 23          		 INC HL	;
 62)   0612 34          		 INC (HL)	;
 63)   0613 7E          		 LD A, (HL)	;
 64)   0614 FE 00       		 CP 0	;
 65)   0616 C0          		 RET NZ	;
 66)   0617 23          		 INC HL	;
 67)   0618 34          		 INC (HL)	;
 68)   0619 7E          		 LD A, (HL)	;
 69)   061A FE 00       		 CP 0	;
 70)   061C C0          		 RET NZ	;
 72)   061D 21 00 00    		 LD HL, 0	;
 73)   0620 22 A7 FE    		 LD (TIMECTR), HL	;
 74)   0623 22 A9 FE    		 LD (TIMECTR + 2), HL	;
 75)   0626 C9          		 RET	;
  9)   0627 21 E7 FE    		INITMMU:       LD HL,BANKS	;
 10)   062A 06 08       		               LD B,8	;
 11)   062C AF          		               XOR A	;
 12)   062D 77          		INM_AGN:       LD (HL),A	;
 13)   062E 3C          		               INC A	;
 14)   062F 23          		 INC HL	;
 15)   0630 10 FB       		               DJNZ INM_AGN	;
 16)   0632 C9          		               RET                	;
 22)   0633 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 23)   0634 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 24)   0635 FE 02       		 CP 2	;
 25)   0637 D8          		 RET C         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 26)   0638 FE 07       		 CP 7	;
 27)   063A C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 28)   063B 21 E7 FE    		 LD HL, BANKS	;
 29)   063E 16 00       		 LD D, 0	;
 30)   0640 5F          		 LD E, A	;
 31)   0641 19          		 ADD HL, DE	;
 32)   0642 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 33)   0643 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 34)   0644 0E 00       		 LD C, DEVMMU	;
 35)   0646 CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 36)   0648 CB 20       		 SLA B	;
 37)   064A CB 20       		 SLA B	;
 38)   064C CB 20       		 SLA B	;
 39)   064E CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 40)   0650 ED 79       		 OUT (C), A	;
 41)   0652 C9          		 RET	;
 46)   0653 21 E7 FE    		GETPGINBANK:   LD HL,BANKS	;
 47)   0656 16 00       		               LD D,0	;
 48)   0658 58          		               LD E,B	;
 49)   0659 19          		               ADD HL,DE	;
 50)   065A 7E          		               LD A,(HL)	;
 51)   065B C9          		               RET	;
 15)   065C 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   065C 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   065C 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   065C 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   065C 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   065C 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   065C 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 44)   065C 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   065C 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   065C 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   065C 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   065C 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   065C F5          		RS_INI: PUSH AF	;
 63)   065D 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 64)   065F D3 23       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 73)   0661 F1          		 POP AF	;
 74)   0662 D3 20       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 75)   0664 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   0666 D3 21       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 77)   0668 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   066A D3 23       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 80)   066C 3E 00       		 LD A, 0	;
 81)   066E D3 22       		 OUT (FCR), A        ;//was commented	;//was commented
 82)   0670 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   0672 D3 21       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 84)   0674 C9          		 RET	;
 87)   0675 CD 7B 06    		RS_TX: CALL RSTXRD	;
 88)   0678 D3 20       		 OUT (THR), A	;
 90)   067A C9          		 RET	;
 94)   067B F5          		RSTXRD: PUSH AF	;
 95)   067C DB 25       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 96)   067E CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   0680 28 FA       		 JR Z, RSTXLP	;
 98)   0682 F1          		 POP AF	;
 99)   0683 C9          		 RET	;
102)   0684 7E          		RS_TXT: LD A, (HL)	;
103)   0685 23          		 INC HL	;
104)   0686 FE 00       		 CP 0	;
105)   0688 C8          		 RET Z	;
106)   0689 CD 75 06    		 CALL RS_TX	;
107)   068C 18 F6       		 JR RS_TXT	;
114)   068E F3          		RS_RX: DI	;
115)   068F 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   0691 D3 24       		 OUT (MCR), A	;
117)   0693 CD AC 06    		 CALL RSRXRD	;
118)   0696 AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   0697 D3 24       		 OUT (MCR), A	;
121)   0699 DB 20       		 IN A, (RBR)	;
122)   069B FB          		 EI	;
123)   069C C9          		 RET	;
125)   069D 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   069F D3 24       		 OUT (MCR), A	;
127)   06A1 DB 25       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
128)   06A3 CB 47       		 BIT 0, A	;
129)   06A5 28 03       		 JR Z, RS_NOCHAR	;
130)   06A7 F3          		 DI	;
131)   06A8 18 EC       		 JR RS_GTCH	;
132)   06AA AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
133)   06AB C9          		 RET	;
140)   06AC F3          		RSRXRD: DI	;
141)   06AD F5          		 PUSH AF	;
142)   06AE DB 25       		RSRXLP: IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
143)   06B0 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
144)   06B2 28 FA       		 JR Z, RSRXLP	;
145)   06B4 F1          		 POP AF	;
146)   06B5 FB          		 EI	;
147)   06B6 C9          		 RET	;
151)   06B7 DB 25       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
152)   06B9 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
153)   06BB C9          		 RET	;
155)   06BC F5          		SHLCD: PUSH AF	;
157)   06BD F1          		 POP AF	;
159)   06BE C9          		 RET	;
163)   06BF F5          		CHKERR: PUSH AF	;
164)   06C0 E5          		 PUSH HL	;
165)   06C1 C5          		 PUSH BC	;
166)   06C2 DB 25       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
167)   06C4 CB 67       		 BIT 4, A	;
168)   06C6 28 04       		 JR Z, LBLPE	;
169)   06C8 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
170)   06CA 18 1A       		 JR EXIT	;
171)   06CC CB 57       		LBLPE: BIT 2, A	;
172)   06CE 28 04       		 JR Z, LBLFE	;
173)   06D0 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
174)   06D2 18 12       		 JR EXIT	;
175)   06D4 CB 5F       		LBLFE: BIT 3, A	;
176)   06D6 28 04       		 JR Z, LBLOE	;
177)   06D8 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
178)   06DA 18 0A       		 JR EXIT	;
179)   06DC CB 4F       		LBLOE: BIT 1, A	;
180)   06DE 28 04       		 JR Z, LBLNE	;
181)   06E0 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
182)   06E2 18 02       		 JR EXIT	;
183)   06E4 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
184)   06E6 21 9F FE    		EXIT: LD HL, SERERR	;
185)   06E9 77          		 LD (HL), A	;
187)   06EA C1          		 POP BC	;
188)   06EB E1          		 POP HL	;
189)   06EC F1          		 POP AF	;
190)   06ED C9          		 RET	;
 15)   06EE 	            		 DEVKBI EQU DEVINP      ; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP	; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP
 21)   06EE 06 01       		@KEYBCLKON: LD B, UKB_OUT_CLK	;
 22)   06F0 CD 32 04    		 CALL FF_OFF	;
 23)   06F3 C9          		 RET	;
 25)   06F4 06 01       		@KEYBCLKOFF: LD B, UKB_OUT_CLK	;
 26)   06F6 CD 44 04    		 CALL FF_ON	;
 27)   06F9 C9          		 RET	;
 29)   06FA 06 02       		@KEYBDATON: LD B, UKB_OUT_DAT	;
 30)   06FC CD 32 04    		 CALL FF_OFF	;
 31)   06FF C9          		 RET	;
 33)   0700 06 02       		@KEYBDATOFF: LD B, UKB_OUT_DAT	;
 34)   0702 CD 44 04    		 CALL FF_ON	;
 35)   0705 C9          		 RET	;
 37)   0706 CD EE 06    		PS2ISK: CALL KEYBCLKON        ;KEYBOARD ENABLED	;KEYBOARD ENABLED
 38)   0709 06 46       		 LD B, SAMP        ;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)	;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)
 39)   070B DB 18       		CHAG: IN A, (DEVKBI)	;
 40)   070D 57          		 LD D, A	;
 41)   070E CB 77       		 BIT UKB_IN_CLK, A      ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 42)   0710 28 08       		 JR Z, KEYOK	;
 43)   0712 10 F7       		 DJNZ CHAG	;
 45)   0714 3E 01       		PS2NTP: LD A, 1        ;SET A TO 1 MEANS NO KEY AVAILABLE	;SET A TO 1 MEANS NO KEY AVAILABLE
 46)   0716 CD F4 06    		 CALL KEYBCLKOFF	;
 47)   0719 C9          		 RET	;
 48)   071A AF          		KEYOK: XOR A        ;SET A TO 0 MEANS WE HAVE A KEY	;SET A TO 0 MEANS WE HAVE A KEY
 49)   071B C9          		 RET	;
 52)   071C 06 46       		WAITFORHIGH: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 53)   071E B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 54)   071F DB 18       		WH1: IN A, (DEVKBI)	;
 55)   0721 57          		 LD D, A	;
 56)   0722 CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 57)   0724 C0          		 RET NZ	;
 58)   0725 10 F8       		 DJNZ WH1	;
 59)   0727 37          		 SCF	;
 60)   0728 C9          		 RET	;
 62)   0729 06 46       		WAITFORLOW1: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 63)   072B B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 64)   072C DB 18       		WL1: IN A, (DEVKBI)	;
 65)   072E 57          		 LD D, A	;
 66)   072F CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 67)   0731 C8          		 RET Z	;
 68)   0732 10 F8       		 DJNZ WL1	;
 69)   0734 37          		 SCF	;
 70)   0735 C9          		 RET	;
 72)   0736 CD 29 07    		WAITFORLOW: CALL WAITFORLOW1	;
 73)   0739 D8          		 RET C	;
 74)   073A DB 18       		 IN A, (DEVKBI)        ;SOME MORE TIMES TO BE SURE	;SOME MORE TIMES TO BE SURE
 75)   073C DB 18       		 IN A, (DEVKBI)	;
 76)   073E 57          		 LD D, A	;
 77)   073F C9          		 RET	;
 79)   0740 F3          		@NEWBYTE: DI	;
 80)   0741 7A          		 LD A, D        ;BIT 7 HAS THE DATA	;BIT 7 HAS THE DATA
 81)   0742 CB 7F       		 BIT UKB_IN_DAT, A	;
 82)   0744 20 2D       		 JR NZ, ERROR0       ;ALWAYS START WITH 0	;ALWAYS START WITH 0
 83)   0746 06 08       		 LD B, 8	;
 84)   0748 48          		NXTBIT: LD C, B        ;SAVE B	;SAVE B
 85)   0749 CD 1C 07    		 CALL WAITFORHIGH	;
 86)   074C D8          		 RET C	;
 87)   074D CD 36 07    		 CALL WAITFORLOW	;
 88)   0750 D8          		 RET C	;
 89)   0751 CB 27       		 SLA A        ;BIT 7=DATA IS ON C FLAG	;BIT 7=DATA IS ON C FLAG
 90)   0753 CB 1B       		 RR E        ;CARRY GOES TO BIT 7 OF E	;CARRY GOES TO BIT 7 OF E
 91)   0755 41          		 LD B, C        ;RESTORE C	;RESTORE C
 92)   0756 10 F0       		 DJNZ NXTBIT	;
 93)   0758 CD 1C 07    		 CALL WAITFORHIGH	;
 94)   075B D8          		 RET C	;
 95)   075C CD 36 07    		 CALL WAITFORLOW	;
 96)   075F D8          		 RET C	;
 98)   0760 CD 1C 07    		 CALL WAITFORHIGH	;
 99)   0763 D8          		 RET C	;
100)   0764 CD 36 07    		 CALL WAITFORLOW	;
101)   0767 D8          		 RET C	;
102)   0768 CB 7F       		 BIT UKB_IN_DAT, A	;
103)   076A 28 10       		 JR Z, ERROR1       ;ALWAYS ENDS WITH 1	;ALWAYS ENDS WITH 1
104)   076C CD 1C 07    		 CALL WAITFORHIGH       ;WAIT FOR END OF TRANSMITION	;WAIT FOR END OF TRANSMITION
105)   076F D8          		 RET C	;
107)   0770 7B          		 LD A, E	;
108)   0771 FB          		 EI	;
109)   0772 C9          		 RET	;
110)   0773 21 88 07    		ERROR0: LD HL, MSER4	;
111)   0776 CD 84 06    		 CALL RS_TXT	;
112)   0779 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
113)   077A FB          		 EI	;
114)   077B C9          		 RET	;
115)   077C D5          		ERROR1: PUSH DE	;
116)   077D 21 9D 07    		 LD HL, MSER5	;
117)   0780 CD 84 06    		 CALL RS_TXT	;
118)   0783 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
119)   0784 D1          		 POP DE	;
120)   0785 7B          		 LD A, E        ;MAYBE IGNORE THIS	;MAYBE IGNORE THIS
121)   0786 FB          		 EI	;
122)   0787 C9          		 RET	;
123)   0788 4B 42 5F 45 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   078C 52 52 3A 20 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0790 53 54 41 52 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0794 54 20 42 49 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0798 54 2E       		MSER4: DEFM "KB_ERR: START BIT."	;
124)   079A 0A 0D 00    		 DB 10,13,0	;
125)   079D 4B 42 5F 45 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   07A1 52 52 3A 20 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   07A5 53 54 4F 50 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   07A9 20 42 49 54 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   07AD 2E          		MSER5: DEFM "KB_ERR: STOP BIT."	;
126)   07AE 0A 0D 00    		 DB 10,13,0	;
128)   07B1 01 0A 00    		PS2KEY: LD BC, 10	;
129)   07B4 0B          		PS2AGN: DEC BC	;
130)   07B5 78          		 LD A, B	;
131)   07B6 B1          		 OR C	;
132)   07B7 28 0F       		 JR Z, PS2TIMEOUT	;
133)   07B9 C5          		 PUSH BC	;
134)   07BA CD 06 07    		 CALL PS2ISK	;
135)   07BD B7          		 OR A	;
136)   07BE C1          		 POP BC	;
137)   07BF 20 F3       		 JR NZ, PS2AGN       ;NO KEY YET	;NO KEY YET
138)   07C1 CD 40 07    		READKEY: CALL NEWBYTE      ;D HAS THE LAST INPUT	;D HAS THE LAST INPUT
139)   07C4 38 02       		 JR C, PS2TIMEOUT      ;ERROR SO INVALIDATE A	;ERROR SO INVALIDATE A
140)   07C6 18 02       		 JR PS2EX	;
141)   07C8 AF          		PS2TIMEOUT: XOR A       ;0 CODE IS INVALID	;0 CODE IS INVALID
142)   07C9 FB          		 EI	;
143)   07CA F5          		PS2EX: PUSH AF	;
144)   07CB CD F4 06    		 CALL KEYBCLKOFF	;
145)   07CE F1          		 POP AF	;
146)   07CF C9          		 RET	;
149)   07D0 CD D8 07    		READCHAR: CALL GTKEY	;
150)   07D3 C8          		 RET Z	;
151)   07D4 CD 97 08    		 CALL PS2LOK	;
152)   07D7 C9          		 RET	;
155)   07D8 CD B1 07    		@GTKEY: CALL PS2KEY       ;GET A KEY FROM PS2	;GET A KEY FROM PS2
156)   07DB FE E1       		 CP $E1         ;BREAK KEY	;BREAK KEY
157)   07DD CC 04 08    		 CALL Z, GTBRK	;
158)   07E0 FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
159)   07E2 CC 48 08    		 CALL Z, GTREL	;
160)   07E5 FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
161)   07E7 CC 0E 08    		 CALL Z, GTEXT	;
164)   07EA FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
165)   07EC CC 73 08    		 CALL Z, SHFTOG	;
166)   07EF FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
167)   07F1 CC 73 08    		 CALL Z, SHFTOG	;
168)   07F4 FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
169)   07F6 CC 7C 08    		 CALL Z, CTRTOG	;
170)   07F9 FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
171)   07FB CC 85 08    		 CALL Z, ALTTOG	;
172)   07FE FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
173)   0800 CC 8E 08    		 CALL Z, CAPSTOG	;
176)   0803 C9          		 RET	;
178)   0804 CD B1 07    		GTBRK: CALL PS2KEY       ;$14 OR $F0	;$14 OR $F0
179)   0807 FE F0       		 CP $F0	;
180)   0809 C8          		 RET Z	;
181)   080A CD B1 07    		 CALL PS2KEY       ;$77	;$77
182)   080D C9          		 RET	;
184)   080E CD B1 07    		GTEXT: CALL PS2KEY       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
185)   0811 FE 6B       		 CP $6B         ;LEFT	;LEFT
186)   0813 C8          		 RET Z	;
187)   0814 FE 72       		 CP $72        ;DOWN	;DOWN
188)   0816 C8          		 RET Z	;
189)   0817 FE 74       		 CP $74        ;RIGHT	;RIGHT
190)   0819 C8          		 RET Z	;
191)   081A FE 75       		 CP $75        ;UP	;UP
192)   081C C8          		 RET Z	;
193)   081D FE 70       		 CP $70        ;INSERT	;INSERT
194)   081F C8          		 RET Z	;
195)   0820 FE 6C       		 CP $6C        ;HOME	;HOME
196)   0822 C8          		 RET Z	;
197)   0823 FE 7D       		 CP $7D        ;PG UP	;PG UP
198)   0825 C8          		 RET Z	;
199)   0826 FE 7A       		 CP $7A        ;PG DN	;PG DN
200)   0828 C8          		 RET Z	;
201)   0829 FE 69       		 CP $69        ;END	;END
202)   082B C8          		 RET Z	;
203)   082C FE 71       		 CP $71        ;DEL	;DEL
204)   082E C8          		 RET Z	;
205)   082F FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
206)   0831 C8          		 RET Z	;
207)   0832 FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
208)   0834 C8          		 RET Z	;
209)   0835 FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
210)   0837 C8          		 RET Z	;
211)   0838 FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
212)   083A C8          		 RET Z	;
213)   083B FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
214)   083D C8          		 RET Z	;
215)   083E FE F0       		 CP $F0	;
216)   0840 C2 46 08    		 JP NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
217)   0843 CD B1 07    		 CALL PS2KEY       ; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT	; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT
219)   0846 AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
220)   0847 C9          		 RET	;
223)   0848 CD B1 07    		GTREL: CALL PS2KEY       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
224)   084B FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
225)   084D CC 61 08    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
226)   0850 FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
227)   0852 CC 67 08    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
228)   0855 FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
229)   0857 CC 6D 08    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
230)   085A FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
231)   085C CC 61 08    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
232)   085F AF          		 XOR A         ; NO KEY	; NO KEY
233)   0860 C9          		 RET	;
235)   0861 21 9E FE    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
236)   0864 CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
237)   0866 C9          		 RET	;
239)   0867 21 9E FE    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
240)   086A CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
241)   086C C9          		 RET	;
243)   086D 21 9E FE    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
244)   0870 CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
245)   0872 C9          		 RET	;
247)   0873 21 9E FE    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
248)   0876 3E 40       		 LD A, $40       ; MASK	; MASK
249)   0878 AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
250)   0879 77          		 LD (HL), A       ; SAVE	; SAVE
251)   087A AF          		 XOR A         ; NO KEY	; NO KEY
252)   087B C9          		 RET	;
254)   087C 21 9E FE    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
255)   087F 3E 80       		 LD A, $80       ; MASK	; MASK
256)   0881 AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
257)   0882 77          		 LD (HL), A       ; SAVE	; SAVE
258)   0883 AF          		 XOR A         ; NO KEY	; NO KEY
259)   0884 C9          		 RET	;
261)   0885 21 9E FE    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
262)   0888 3E 20       		 LD A, $20	;
263)   088A AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
264)   088B 77          		 LD (HL), A       ; SAVE	; SAVE
265)   088C AF          		 XOR A         ; NO KEY	; NO KEY
266)   088D C9          		 RET	;
268)   088E 21 9E FE    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
269)   0891 3E 10       		 LD A, $10	;
270)   0893 AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
271)   0894 77          		 LD (HL), A       ; SAVE	; SAVE
272)   0895 AF          		 XOR A         ; NO KEY	; NO KEY
273)   0896 C9          		 RET	;
276)   0897 21 9E FE    		@PS2LOK: LD HL, KEYCTR	;
277)   089A 47          		 LD B, A        ; SAVE A	; SAVE A
278)   089B 7E          		 LD A, (HL)       ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
279)   089C 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
280)   089D CB 1F       		 RR A	;
281)   089F CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
282)   08A1 A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
283)   08A2 CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED	;CHECK IF BIT 4 IS 0 = UNSHIFTED
284)   08A4 78          		 LD A, B        ;RESTORE A	;RESTORE A
289)   08A5 21 B3 08    		 LD HL, PS2TAB1       ;UNSHIFTED	;UNSHIFTED
290)   08A8 28 03       		 JR Z, PLK1	;
291)   08AA 21 5D 09    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
292)   08AD 06 00       		PLK1: LD B, 0	;
293)   08AF 4F          		 LD C, A	;
294)   08B0 09          		 ADD HL, BC	;
295)   08B1 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
296)   08B2 C9          		 RET	;
300)   08B3 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
300)   08B7 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
300)   08BB 00 00       		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
301)   08BD 00 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
301)   08C1 60 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
301)   08C5 00 00       		 DB 0,0,0,0,'`',0,0,0,0,0	;
302)   08C7 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   08CB 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   08CF 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   08D1 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
303)   08D5 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
303)   08D9 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
304)   08DB 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   08DF 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   08E3 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   08E5 62 68 67 6D 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   08E9 36 00 00 2C 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   08ED 6D 6A       		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   08EF 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
306)   08F3 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
306)   08F7 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
307)   08F9 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
307)   08FD 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
307)   0901 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
308)   0903 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
308)   0907 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
308)   090B 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
309)   090D 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
309)   0911 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
309)   0915 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
310)   0917 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
310)   091B 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
310)   091F 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
311)   0921 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
311)   0925 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
311)   0929 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
312)   092B 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
312)   092F 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
312)   0933 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
313)   0935 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
313)   0939 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
313)   093D 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
314)   093F 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
314)   0943 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
314)   0947 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
315)   0949 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
315)   094D 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
315)   0951 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
316)   0953 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
316)   0957 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
316)   095B 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
319)   095D 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
319)   0961 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
319)   0965 00 00       		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
320)   0967 00 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
320)   096B 7E 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
320)   096F 00 00       		 DB 0,0,0,0,'~',0,0,0,0,0	;
321)   0971 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   0975 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   0979 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   097B 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
322)   097F 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
322)   0983 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
323)   0985 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   0989 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   098D 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   098F 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
324)   0993 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
324)   0997 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
325)   0999 55 26 2A 00 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
325)   099D 00 3C 4B 49 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
325)   09A1 4F 29       		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
326)   09A3 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
326)   09A7 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
326)   09AB 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
327)   09AD 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
327)   09B1 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
327)   09B5 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
328)   09B7 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
328)   09BB 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
328)   09BF 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
329)   09C1 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
329)   09C5 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
329)   09C9 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
330)   09CB 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
330)   09CF 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
330)   09D3 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
331)   09D5 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
331)   09D9 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
331)   09DD 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
332)   09DF 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
332)   09E3 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
332)   09E7 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
333)   09E9 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
333)   09ED 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
333)   09F1 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
334)   09F3 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
334)   09F7 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
334)   09FB 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
335)   09FD 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
335)   0A01 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
335)   0A05 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 46)   0A07 3E 03       		STRG_INIT: LD A, 3       ;38400 BPS	;38400 BPS
 47)   0A09 CD 93 0B    		 CALL STOR_INI	;
 48)   0A0C C9          		 RET	;
 51)   0A0D 21 E1 FE    		NEWCMD: LD HL, STRGCMD	;
 52)   0A10 77          		 LD (HL), A	;
 53)   0A11 23          		 INC HL	;
 54)   0A12 E5          		 PUSH HL	;
 55)   0A13 AF          		 XOR A	;
 56)   0A14 06 03       		 LD B, 3	;
 57)   0A16 77          		CCAGN: LD (HL), A	;
 58)   0A17 23          		 INC HL	;
 59)   0A18 10 FC       		 DJNZ CCAGN	;
 60)   0A1A E1          		 POP HL         ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 61)   0A1B C9          		 RET	;
 64)   0A1C CD F4 0B    		SENDCMD: CALL FLUSHREC	;
 65)   0A1F 21 E1 FE    		 LD HL, STRGCMD	;
 66)   0A22 06 04       		 LD B, 4	;
 67)   0A24 7E          		NXTBT: LD A, (HL)	;
 68)   0A25 CD C3 0B    		 CALL STOR_TX	;
 69)   0A28 23          		 INC HL	;
 70)   0A29 10 F9       		 DJNZ NXTBT	;
 71)   0A2B C9          		 RET	;
 73)   0A2C 3E 01       		STRG_OPENCRD: LD A, OPENCARD	;
 74)   0A2E CD 0D 0A    		 CALL NEWCMD	;
 75)   0A31 CD 1C 0A    		 CALL SENDCMD	;
 76)   0A34 CD C4 28    		 CALL DEL2	;
 77)   0A37 CD D6 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
 78)   0A3A FE C9       		 CP FCMDOKTST	;
 79)   0A3C 3F          		 CCF	;
 80)   0A3D C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
 85)   0A3E F5          		STRG_GETEOF: PUSH AF	;
 86)   0A3F 3E 0D       		 LD A, ENDOFFILE	;
 87)   0A41 CD 0D 0A    		 CALL NEWCMD	;
 88)   0A44 F1          		 POP AF	;
 89)   0A45 77          		 LD (HL), A       ;FID	;FID
 90)   0A46 CD 1C 0A    		 CALL SENDCMD	;
 92)   0A49 CD D6 0B    		 CALL STOR_RX       ;GET EOF	;GET EOF
 93)   0A4C FE C9       		 CP FCMDOKTST	;
 94)   0A4E 3F          		 CCF	;
 95)   0A4F C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
100)   0A50 F5          		STRG_GETSIZE: PUSH AF	;
101)   0A51 3E 0C       		 LD A, FILESIZE	;
102)   0A53 18 03       		 JR GT2BYTES	;
107)   0A55 F5          		STRG_GETPOS: PUSH AF	;
108)   0A56 3E 09       		 LD A, POSITIONG	;
109)   0A58 CD 0D 0A    		GT2BYTES: CALL NEWCMD	;
110)   0A5B F1          		 POP AF	;
111)   0A5C 77          		 LD (HL), A       ;FID	;FID
112)   0A5D CD 1C 0A    		 CALL SENDCMD	;
114)   0A60 CD D6 0B    		 CALL STOR_RX       ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
115)   0A63 67          		 LD H, A	;
116)   0A64 CD D6 0B    		 CALL STOR_RX       ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
117)   0A67 6F          		 LD L, A	;
118)   0A68 CD D6 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
119)   0A6B FE C9       		 CP FCMDOKTST	;
120)   0A6D 3F          		 CCF	;
121)   0A6E C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
127)   0A6F EB          		STRG_SETPOS: EX DE, HL	;
128)   0A70 F5          		 PUSH AF	;
129)   0A71 3E 08       		 LD A, POSITIONS	;
130)   0A73 CD 0D 0A    		 CALL NEWCMD	;
131)   0A76 F1          		 POP AF	;
132)   0A77 77          		 LD (HL), A       ;FID	;FID
133)   0A78 23          		 INC HL	;
134)   0A79 72          		 LD (HL), D       ;NEW POS ON DE	;NEW POS ON DE
135)   0A7A 23          		 INC HL	;
136)   0A7B 73          		 LD (HL), E	;
137)   0A7C CD 1C 0A    		 CALL SENDCMD	;
138)   0A7F CD C4 28    		 CALL DEL2	;
139)   0A82 CD D6 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
140)   0A85 FE C9       		 CP FCMDOKTST	;
141)   0A87 3F          		 CCF	;
142)   0A88 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
147)   0A89 3E 0A       		STRG_DIRLIST: LD A, LISTDIR	;
148)   0A8B CD 0D 0A    		 CALL NEWCMD	;
149)   0A8E CD 1C 0A    		 CALL SENDCMD	;
150)   0A91 CD C4 28    		 CALL DEL2	;
152)   0A94 11 B9 FE    		 LD DE, STRGBUFF	;
153)   0A97 CD D6 0B    		NXTCHR: CALL STOR_RX	;
154)   0A9A FE FF       		 CP 255	;
155)   0A9C 28 05       		 JR Z, DIROUT	;
157)   0A9E CD 7B 03    		 CALL OS_PRINTCHAR	;
158)   0AA1 18 F4       		 JR NXTCHR	;
159)   0AA3 CD C4 28    		DIROUT: CALL DEL2	;
160)   0AA6 CD D6 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
161)   0AA9 FE C9       		 CP FCMDOKTST	;
162)   0AAB 3F          		 CCF	;
163)   0AAC C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
167)   0AAD CD CC 0B    		SENDFNAME: CALL STOR_TXT      ;SEND FILENAME	;SEND FILENAME
168)   0AB0 AF          		 XOR A	;
169)   0AB1 CD C3 0B    		 CALL STOR_TX	;
170)   0AB4 C9          		 RET	;
173)   0AB5 3E 0B       		STRG_DIRCHG: LD A, CHANGEDIR	;
174)   0AB7 CD 0D 0A    		 CALL NEWCMD	;
175)   0ABA CD 1C 0A    		 CALL SENDCMD	;
176)   0ABD 21 B9 FE    		 LD HL, STRGBUFF	;
177)   0AC0 CD AD 0A    		 CALL SENDFNAME	;
178)   0AC3 CD C4 28    		 CALL DEL2	;
179)   0AC6 CD D6 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
180)   0AC9 FE C9       		 CP FCMDOKTST	;
181)   0ACB 3F          		 CCF	;
182)   0ACC C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
186)   0ACD F5          		STRG_OPNFILE: PUSH AF	;
187)   0ACE 3E 02       		 LD A, OPENFILE	;
188)   0AD0 CD 0D 0A    		 CALL NEWCMD	;
189)   0AD3 F1          		 POP AF	;
190)   0AD4 77          		 LD (HL), A       ;FID	;FID
191)   0AD5 CD 1C 0A    		 CALL SENDCMD	;
192)   0AD8 21 B9 FE    		 LD HL, STRGBUFF	;
193)   0ADB CD AD 0A    		 CALL SENDFNAME	;
194)   0ADE CD C4 28    		 CALL DEL2	;
195)   0AE1 CD D6 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
197)   0AE4 32 E5 FE    		 LD (FID), A	;
198)   0AE7 FE C9       		 CP FCMDOKTST	;
199)   0AE9 3F          		 CCF	;
200)   0AEA C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
203)   0AEB F5          		STRG_CLSFILE: PUSH AF	;
204)   0AEC 3E 03       		 LD A, CLOSEFILE	;
205)   0AEE CD 0D 0A    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
206)   0AF1 F1          		 POP AF	;
207)   0AF2 77          		 LD (HL), A       ;FID	;FID
208)   0AF3 CD 1C 0A    		 CALL SENDCMD	;
209)   0AF6 CD D6 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
210)   0AF9 FE C9       		 CP FCMDOKTST	;
211)   0AFB 3F          		 CCF	;
212)   0AFC C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
218)   0AFD F5          		STRG_BLKWRITE: PUSH AF	;
219)   0AFE 3E 07       		 LD A, WRITEBLOCK	;
220)   0B00 CD 0D 0A    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
221)   0B03 F1          		 POP AF	;
222)   0B04 77          		 LD (HL), A       ;FID	;FID
223)   0B05 23          		 INC HL	;
225)   0B06 78          		 LD A, B        ;BYTES HI	;BYTES HI
226)   0B07 77          		 LD (HL), A	;
227)   0B08 23          		 INC HL	;
228)   0B09 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
229)   0B0A 77          		 LD (HL), A	;
230)   0B0B CD 1C 0A    		 CALL SENDCMD        ;SEND BLOCKWRITE COMMAND BC BYTES	;SEND BLOCKWRITE COMMAND BC BYTES
231)   0B0E EB          		 EX DE, HL	;
232)   0B0F 7E          		BWNXCH: LD A, (HL)	;
233)   0B10 CD C3 0B    		 CALL STOR_TX	;
234)   0B13 23          		 INC HL	;
235)   0B14 0B          		 DEC BC	;
236)   0B15 78          		 LD A, B	;
237)   0B16 B1          		 OR C	;
238)   0B17 20 F6       		 JR NZ, BWNXCH	;
239)   0B19 CD D6 0B    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
240)   0B1C FE C9       		 CP FCMDOKTST	;
241)   0B1E 3F          		 CCF	;
242)   0B1F C9          		 RET	;
250)   0B20 F5          		STRG_BLKREAD: PUSH AF	;
251)   0B21 3E 06       		 LD A, READBLOCK	;
252)   0B23 CD 0D 0A    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
253)   0B26 F1          		 POP AF	;
254)   0B27 77          		 LD (HL), A       ;FID	;FID
255)   0B28 23          		 INC HL	;
256)   0B29 78          		 LD A, B        ;BYTES HI	;BYTES HI
257)   0B2A 77          		 LD (HL), A	;
258)   0B2B 23          		 INC HL	;
259)   0B2C 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
260)   0B2D 77          		 LD (HL), A	;
261)   0B2E CD 1C 0A    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
262)   0B31 CD C4 28    		 CALL DEL2	;
263)   0B34 CD D6 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
264)   0B37 47          		 LD B, A	;
265)   0B38 CD D6 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
266)   0B3B 4F          		 LD C, A	;
267)   0B3C 78          		 LD A, B	;
268)   0B3D B1          		 OR C	;
269)   0B3E 28 13       		 JR Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
271)   0B40 C5          		 PUSH BC        ;SAVE BYTES TO RECEIVE	;SAVE BYTES TO RECEIVE
272)   0B41 CD D6 0B    		OFNXCH: CALL STOR_RX	;
273)   0B44 12          		 LD (DE), A	;
274)   0B45 13          		 INC DE	;
275)   0B46 0B          		 DEC BC	;
276)   0B47 78          		 LD A, B	;
277)   0B48 B1          		 OR C	;
278)   0B49 20 F6       		 JR NZ, OFNXCH	;
279)   0B4B CD D6 0B    		OFEXIT: CALL STOR_RX        ;GET RESULT	;GET RESULT
280)   0B4E C1          		 POP BC         ;TOTAL BYTES RECEIVED	;TOTAL BYTES RECEIVED
281)   0B4F FE C9       		 CP FCMDOKTST	;
282)   0B51 3F          		 CCF	;
283)   0B52 C9          		 RET	;
285)   0B53 18 F6       		 JR OFEXIT	;
289)   0B55 F5          		STRG_TPFILE: PUSH AF	;
290)   0B56 3E 06       		 LD A, READBLOCK	;
291)   0B58 CD 0D 0A    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
292)   0B5B F1          		 POP AF	;
293)   0B5C 77          		 LD (HL), A       ;FID	;FID
294)   0B5D 23          		 INC HL	;
295)   0B5E 78          		 LD A, B        ;BYTES HI	;BYTES HI
296)   0B5F 77          		 LD (HL), A	;
297)   0B60 23          		 INC HL	;
298)   0B61 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
299)   0B62 77          		 LD (HL), A	;
300)   0B63 CD 1C 0A    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
301)   0B66 CD C4 28    		 CALL DEL2	;
302)   0B69 CD D6 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
303)   0B6C 47          		 LD B, A	;
304)   0B6D CD D6 0B    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
305)   0B70 4F          		 LD C, A	;
306)   0B71 78          		 LD A, B	;
307)   0B72 B1          		 OR C	;
308)   0B73 CA 53 0B    		 JP Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
310)   0B76 3E 0D       		 LD A, 13	;
311)   0B78 C5          		 PUSH BC	;
312)   0B79 CD 7B 03    		 CALL OS_PRINTCHAR	;
313)   0B7C C1          		 POP BC	;
314)   0B7D CD D6 0B    		TFOFNXCH: CALL STOR_RX       ;GET THE CHAR	;GET THE CHAR
315)   0B80 C5          		 PUSH BC	;
316)   0B81 CD 7B 03    		 CALL OS_PRINTCHAR       ;PRINT TO SCREEN	;PRINT TO SCREEN
317)   0B84 C1          		 POP BC	;
318)   0B85 0B          		 DEC BC	;
319)   0B86 78          		 LD A, B	;
320)   0B87 B1          		 OR C	;
321)   0B88 20 F3       		 JR NZ, TFOFNXCH	;
322)   0B8A CD D6 0B    		TFOFEXIT: CALL STOR_RX       ;GET RESULT	;GET RESULT
323)   0B8D FE C9       		 CP FCMDOKTST	;
324)   0B8F 3F          		 CCF	;
325)   0B90 C9          		 RET         ;C SET IF ERROR	;C SET IF ERROR
328)   0B91 18 F7       		 JR TFOFEXIT	;
350)   0B93 	            		 RBR EQU DEVSTOR+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
351)   0B93 	            		 THR EQU DEVSTOR+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
352)   0B93 	            		 IER EQU DEVSTOR+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
357)   0B93 	            		 IIR EQU DEVSTOR+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
362)   0B93 	            		 FCR EQU DEVSTOR+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
370)   0B93 	            		 LCR EQU DEVSTOR+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
378)   0B93 	            		 MCR EQU DEVSTOR+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
379)   0B93 	            		 LSR EQU DEVSTOR+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
388)   0B93 	            		 MSR EQU DEVSTOR+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
389)   0B93 	            		 SCR EQU DEVSTOR+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
390)   0B93 	            		 DLL EQU DEVSTOR+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
391)   0B93 	            		 DLM EQU DEVSTOR+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
395)   0B93 F5          		STOR_INI: PUSH AF	;
396)   0B94 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
397)   0B96 D3 33       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
405)   0B98 F1          		 POP AF	;
406)   0B99 D3 30       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
407)   0B9B 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
408)   0B9D D3 31       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
409)   0B9F 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
410)   0BA1 D3 33       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
412)   0BA3 3E 00       		 LD A, 0	;
413)   0BA5 D3 32       		 OUT (FCR), A        ;//was commented	;//was commented
414)   0BA7 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
415)   0BA9 D3 31       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
416)   0BAB AF          		 XOR A         ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
417)   0BAC D3 34       		 OUT (MCR), A	;
418)   0BAE C9          		 RET	;
424)   0BAF F5          		STORTXRD: PUSH AF	;
425)   0BB0 DB 35       		STORTXLP: IN A, (LSR)       ; fetch the control register	; fetch the control register
426)   0BB2 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
427)   0BB4 28 FA       		 JR Z, STORTXLP	;
428)   0BB6 F1          		 POP AF	;
429)   0BB7 C9          		 RET	;
432)   0BB8 F5          		WAITCTSLOW: PUSH AF	;
433)   0BB9 DB 36       		TSTAGN: IN A, (MSR)	;
434)   0BBB CB 67       		 BIT 4, A        ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
435)   0BBD 20 02       		 JR NZ, WCLEX	;
436)   0BBF 18 F8       		 JR TSTAGN	;
437)   0BC1 F1          		WCLEX: POP AF	;
438)   0BC2 C9          		 RET	;
444)   0BC3 CD B8 0B    		 CALL WAITCTSLOW	;
449)   0BC6 CD AF 0B    		 CALL STORTXRD	;
454)   0BC9 D3 30       		 OUT (THR), A	;
455)   0BCB C9          		 RET	;
458)   0BCC 7E          		STOR_TXT: LD A, (HL)	;
459)   0BCD 23          		 INC HL	;
460)   0BCE FE 00       		 CP 0	;
461)   0BD0 C8          		 RET Z	;
462)   0BD1 CD C3 0B    		 CALL STOR_TX	;
463)   0BD4 18 F6       		 JR STOR_TXT	;
470)   0BD6 F3          		STOR_RX: DI	;
471)   0BD7 3E 02       		 LD A, 2        ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
472)   0BD9 D3 34       		 OUT (MCR), A	;
473)   0BDB CD FF 0B    		 CALL STORRXRD	;
474)   0BDE AF          		STOR_GTCH: XOR A        ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
475)   0BDF D3 34       		 OUT (MCR), A	;
476)   0BE1 DB 30       		 IN A, (RBR)	;
477)   0BE3 FB          		 EI	;
478)   0BE4 C9          		 RET	;
480)   0BE5 3E 02       		STOR_RXNW: LD A, 2       ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
481)   0BE7 D3 34       		 OUT (MCR), A	;
482)   0BE9 DB 35       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
483)   0BEB CB 47       		 BIT 0, A	;
484)   0BED 28 03       		 JR Z, STOR_NOCHAR	;
485)   0BEF F3          		 DI	;
486)   0BF0 18 EC       		 JR STOR_GTCH	;
487)   0BF2 AF          		STOR_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
488)   0BF3 C9          		 RET	;
490)   0BF4 06 0A       		FLUSHREC: LD B, 10	;
491)   0BF6 CD E5 0B    		FRAGN: CALL STOR_RXNW	;
492)   0BF9 10 FB       		 DJNZ FRAGN	;
493)   0BFB AF          		 XOR A	;
494)   0BFC D3 34       		 OUT (MCR), A	;
495)   0BFE C9          		 RET	;
501)   0BFF F3          		STORRXRD: DI	;
502)   0C00 F5          		 PUSH AF	;
503)   0C01 DB 35       		STORRXLP: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
504)   0C03 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
505)   0C05 28 FA       		 JR Z, STORRXLP	;
506)   0C07 F1          		 POP AF	;
507)   0C08 FB          		 EI	;
508)   0C09 C9          		 RET	;
512)   0C0A DB 35       		STOR_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
513)   0C0C CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
514)   0C0E C9          		 RET	;
  8)   0C0F 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  9)   0C0F 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
 10)   0C0F 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 11)   0C0F 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 12)   0C0F 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 57)   0C0F C5          		I2C_RDSTAT_WT: PUSH BC	;
 58)   0C10 01 00 20    		 LD BC, $2000	;
 59)   0C13 DB 4B       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 60)   0C15 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 61)   0C17 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 62)   0C19 0B          		 DEC BC	;
 63)   0C1A 78          		 LD A, B	;
 64)   0C1B B1          		 OR C	;
 65)   0C1C 20 F5       		 JR NZ, I2CRWT_AGN	;
 66)   0C1E C1          		I2CRWT_OK: POP BC	;
 67)   0C1F DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 68)   0C21 C9          		 RET	;
 70)   0C22 DB 4B       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 71)   0C24 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 72)   0C26 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 73)   0C28 C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 74)   0C29 DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 75)   0C2B C9          		 RET	;
 78)   0C2C 3E 01       		I2C_INIT: LD A, I2CADR	;
 79)   0C2E D3 48       		 OUT (DI2C_INDPTR), A	;
 80)   0C30 3E E0       		 LD A, $E0	;
 81)   0C32 D3 4A       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 83)   0C34 3E 40       		 LD A, $40        ;INIT	;INIT
 84)   0C36 D3 4B       		 OUT (DI2C_CON), A      ;	;
 85)   0C38 06 FA       		 LD B, 250	;
 86)   0C3A CD B1 28    		 CALL DELAYMICRO	;
 87)   0C3D 06 FA       		 LD B, 250	;
 88)   0C3F CD B1 28    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 93)   0C42 3E 06       		 LD A, I2CMODE	;
 94)   0C44 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 95)   0C46 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 96)   0C48 D3 4A       		 OUT (DI2C_INDIR), A	;
 97)   0C4A 3E 02       		 LD A, I2CSCLL	;
 98)   0C4C D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 99)   0C4E 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
100)   0C50 D3 4A       		 OUT (DI2C_INDIR), A	;
101)   0C52 3E 03       		 LD A, I2CSCLH	;
102)   0C54 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
103)   0C56 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
104)   0C58 D3 4A       		 OUT (DI2C_INDIR), A	;
106)   0C5A C9          		 RET	;
113)   0C5B 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
114)   0C5D D3 4B       		 OUT (DI2C_CON), A	;
115)   0C5F CD 0F 0C    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
116)   0C62 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
117)   0C63 FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
118)   0C65 28 21       		 JR Z, WRB_S1	;
119)   0C67 FE 10       		 CP MASTER_RESTART_TXed	;
120)   0C69 28 1D       		 JR Z, WRB_S1	;
121)   0C6B FE 28       		 CP MASTER_DATA_W_ACK	;
122)   0C6D 28 26       		 JR Z, WRB_S2	;
123)   0C6F FE 18       		 CP MASTER_SLA_W_ACK	;
124)   0C71 28 23       		 JR Z, WRB_S3	;
125)   0C73 FE 20       		 CP MASTER_SLA_W_NAK	;
126)   0C75 28 2D       		 JR Z, WRB_EXIT	;
127)   0C77 FE 30       		 CP MASTER_DATA_W_NAK	;
128)   0C79 28 29       		 JR Z, WRB_EXIT	;
129)   0C7B FE 38       		 CP MASTER_ARB_LOST	;
130)   0C7D C8          		 RET Z	;
131)   0C7E FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
132)   0C80 C8          		 RET Z	;
133)   0C81 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
134)   0C83 C8          		 RET Z	;
135)   0C84 FE D8       		 CP SLAVE_GENERALCALL_AL	;
136)   0C86 C8          		 RET Z	;
137)   0C87 C9          		 RET	;
139)   0C88 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
140)   0C89 CB 27       		 SLA A	;
141)   0C8B E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
142)   0C8D D3 49       		 OUT (DI2C_DAT), A	;
143)   0C8F 3E 40       		 LD A, $40	;
144)   0C91 D3 4B       		 OUT (DI2C_CON), A	;
145)   0C93 18 CA       		 JR WRB_LP1	;
146)   0C95 0B          		WRB_S2: DEC BC	;
147)   0C96 78          		WRB_S3: LD A, B	;
148)   0C97 B1          		 OR C	;
149)   0C98 28 0A       		 JR Z, WRB_EXIT	;
150)   0C9A 7E          		 LD A, (HL)	;
151)   0C9B 23          		 INC HL	;
152)   0C9C D3 49       		 OUT (DI2C_DAT), A	;
153)   0C9E 3E 40       		 LD A, $40	;
154)   0CA0 D3 4B       		 OUT (DI2C_CON), A	;
155)   0CA2 18 BB       		 JR WRB_LP1	;
157)   0CA4 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
158)   0CA6 D3 4B       		 OUT (DI2C_CON), A	;
159)   0CA8 78          		 LD A, B	;
160)   0CA9 B1          		 OR C	;
161)   0CAA C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
167)   0CAB 78          		I2C_RD_BYTE: LD A, B	;
168)   0CAC B1          		 OR C	;
169)   0CAD C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
170)   0CAE 3E 60       		 LD A, $60	;
171)   0CB0 D3 4B       		 OUT (DI2C_CON), A	;
172)   0CB2 CD 0F 0C    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
173)   0CB5 1E 00       		 LD E, 0	;
174)   0CB7 FE 08       		 CP MASTER_START_TXed	;
175)   0CB9 28 1F       		 JR Z, RDB_S1	;
177)   0CBB 28 1D       		 JR Z, RDB_S1	;
178)   0CBD FE 58       		 CP MASTER_DATA_R_NAK	;
179)   0CBF 28 26       		 JR Z, RDB_S2	;
180)   0CC1 FE 50       		 CP MASTER_DATA_R_ACK	;
181)   0CC3 28 24       		 JR Z, RDB_S3	;
182)   0CC5 FE 40       		 CP MASTER_SLA_R_ACK	;
183)   0CC7 28 25       		 JR Z, RDB_S4	;
184)   0CC9 FE 48       		 CP MASTER_SLA_R_NAK	;
185)   0CCB 28 38       		 JR Z, RDB_EXIT	;
186)   0CCD FE 38       		 CP MASTER_ARB_LOST	;
187)   0CCF C8          		 RET Z	;
188)   0CD0 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
189)   0CD2 C8          		 RET Z	;
190)   0CD3 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
191)   0CD5 C8          		 RET Z	;
192)   0CD6 FE D8       		 CP SLAVE_GENERALCALL_AL	;
193)   0CD8 C8          		 RET Z	;
194)   0CD9 C9          		 RET	;
197)   0CDA 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
198)   0CDB CB 27       		 SLA A	;
199)   0CDD F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
200)   0CDF D3 49       		 OUT (DI2C_DAT), A	;
201)   0CE1 3E 40       		 LD A, $40	;
202)   0CE3 D3 4B       		 OUT (DI2C_CON), A	;
203)   0CE5 18 CB       		 JR RDB_LP1	;
204)   0CE7 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
205)   0CE9 DB 49       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
206)   0CEB 77          		 LD (HL), A	;
207)   0CEC 23          		 INC HL	;
208)   0CED 0B          		 DEC BC	;
209)   0CEE 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
210)   0CEF B1          		 OR C	;
211)   0CF0 28 13       		 JR Z, RDB_EXIT	;
212)   0CF2 7B          		 LD A, E	;
213)   0CF3 FE 01       		 CP 1	;
214)   0CF5 28 0E       		 JR Z, RDB_EXIT	;
215)   0CF7 78          		 LD A, B	;
216)   0CF8 81          		 ADD C	;
217)   0CF9 FE 01       		 CP 1	;
218)   0CFB 3E 40       		 LD A, $40	;
219)   0CFD 28 02       		 JR Z, RDB_NXT1	;
220)   0CFF 3E C0       		 LD A, $C0	;
221)   0D01 D3 4B       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
222)   0D03 18 AD       		 JR RDB_LP1	;
224)   0D05 3E 50       		RDB_EXIT: LD A, $50	;
225)   0D07 D3 4B       		 OUT (DI2C_CON), A	;
226)   0D09 78          		 LD A, B	;
227)   0D0A B1          		 OR C	;
228)   0D0B C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
 26)   0D0C 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 26)   0D10 61 79       		 SUN DEFM  "Sunday"	;
 27)   0D12 00          		 DB 0	;
 28)   0D13 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 28)   0D17 61 79       		 MON DEFM  "Monday"	;
 29)   0D19 00          		 DB 0	;
 30)   0D1A 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 30)   0D1E 64 61 79    		 TUE DEFM  "Tuesday"	;
 31)   0D21 00          		 DB 0	;
 32)   0D22 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 32)   0D26 65 73 64 61 		 WED DEFM  "Wednesday"	;
 32)   0D2A 79          		 WED DEFM  "Wednesday"	;
 33)   0D2B 00          		 DB 0	;
 34)   0D2C 54 68 75 72 		 THU DEFM  "Thursday"	;
 34)   0D30 73 64 61 79 		 THU DEFM  "Thursday"	;
 35)   0D34 00          		 DB 0	;
 36)   0D35 46 72 69 64 		 FRI DEFM  "Friday"	;
 36)   0D39 61 79       		 FRI DEFM  "Friday"	;
 37)   0D3B 00          		 DB 0	;
 38)   0D3C 53 61 74 75 		 SAT DEFM  "Saturday"	;
 38)   0D40 72 64 61 79 		 SAT DEFM  "Saturday"	;
 39)   0D44 00          		 DB 0	;
 41)   0D45 0C 0D       		 DAYS DEFW SUN	;
 42)   0D47 13 0D       		 DEFW MON	;
 43)   0D49 1A 0D       		 DEFW TUE	;
 44)   0D4B 22 0D       		 DEFW WED	;
 45)   0D4D 2C 0D       		 DEFW THU	;
 46)   0D4F 35 0D       		 DEFW FRI	;
 47)   0D51 3C 0D       		 DEFW SAT	;
 49)   0D53 45 52 52 4F 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D57 52 20 4F 4E 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D5B 20 52 45 43 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D5F 45 49 56 49 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D63 4E 47       		 MESERR DEFM "ERROR ON RECEIVING"	;
 50)   0D65 0A 0D 00    		 DEFB 10,13,0	;
 52)   0D68 45 52 52 4F 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0D6C 52 20 4F 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0D70 20 53 45 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0D74 44 49 4E 47 		 MESERR0 DEFM "ERROR ON SENDING"	;
 53)   0D78 0A 0D 00    		 DEFB 10,13,0	;
 55)   0D7B 7B          		SHERR0: LD A, E	;
 56)   0D7C C5          		 PUSH BC	;
 57)   0D7D CD 65 04    		 CALL SOUTAS	;
 58)   0D80 C1          		 POP BC	;
 59)   0D81 79          		 LD A, C	;
 60)   0D82 CD 65 04    		 CALL SOUTAS	;
 62)   0D85 21 68 0D    		 LD HL, MESERR0	;
 63)   0D88 CD 84 06    		 CALL RS_TXT	;
 64)   0D8B C9          		 RET	;
 67)   0D8C 79          		SHERR: LD A, C	;
 68)   0D8D CD 65 04    		 CALL SOUTAS	;
 69)   0D90 21 53 0D    		 LD HL, MESERR	;
 70)   0D93 CD 84 06    		 CALL RS_TXT	;
 71)   0D96 37          		 SCF	;
 72)   0D97 C9          		 RET	;
 75)   0D98 21 89 FE    		@DS1307_GETNOW: LD HL, BUFFER	;
 76)   0D9B AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 77)   0D9C 77          		 LD (HL), A	;
 78)   0D9D 16 68       		 LD D, DS1307_ADDRESS	;
 79)   0D9F 01 01 00    		 LD BC, 1	;
 80)   0DA2 CD 5B 0C    		 CALL I2C_WRITE	;
 81)   0DA5 C2 7B 0D    		 JP NZ, SHERR0	;
 83)   0DA8 21 89 FE    		 LD HL, BUFFER	;
 84)   0DAB 16 68       		 LD D, DS1307_ADDRESS	;
 85)   0DAD 01 07 00    		 LD BC, 7	;
 86)   0DB0 CD AB 0C    		 CALL I2C_READ	;
 87)   0DB3 C2 8C 0D    		 JP NZ, SHERR	;
 88)   0DB6 AF          		 XOR A	;
 89)   0DB7 C9          		 RET	;
 95)   0DB8 11 89 FE    		 LD DE, BUFFER	;
 96)   0DBB AF          		 XOR A	;
 97)   0DBC 12          		 LD (DE), A	;
 98)   0DBD 13          		 INC DE	;
 99)   0DBE 3E 0A       		 LD A, 10       ; 10 SECS	; 10 SECS
100)   0DC0 CD F8 28    		 CALL BN2BCD	;
101)   0DC3 7D          		 LD A, L	;
102)   0DC4 12          		 LD (DE), A	;
103)   0DC5 13          		 INC DE	;
104)   0DC6 3E 22       		 LD A, 34       ; 28 MINS	; 28 MINS
105)   0DC8 CD F8 28    		 CALL BN2BCD	;
106)   0DCB 7D          		 LD A, L	;
107)   0DCC 12          		 LD (DE), A	;
108)   0DCD 13          		 INC DE	;
109)   0DCE 3E 12       		 LD A, 18       ; 19 HOURS	; 19 HOURS
110)   0DD0 CD F8 28    		 CALL BN2BCD	;
111)   0DD3 7D          		 LD A, L	;
112)   0DD4 12          		 LD (DE), A	;
113)   0DD5 13          		 INC DE	;
114)   0DD6 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
115)   0DD8 12          		 LD (DE), A	;
116)   0DD9 13          		 INC DE	;
117)   0DDA 3E 12       		 LD A, 18       ; 8 DAY	; 8 DAY
118)   0DDC CD F8 28    		 CALL BN2BCD	;
119)   0DDF 7D          		 LD A, L	;
120)   0DE0 12          		 LD (DE), A	;
121)   0DE1 13          		 INC DE	;
122)   0DE2 3E 02       		 LD A, 02       ; 10 MONTH	; 10 MONTH
123)   0DE4 CD F8 28    		 CALL BN2BCD	;
124)   0DE7 7D          		 LD A, L	;
125)   0DE8 12          		 LD (DE), A	;
126)   0DE9 13          		 INC DE	;
127)   0DEA 3E 15       		 LD A, 21       ; 21 YEAR (2020)	; 21 YEAR (2020)
128)   0DEC CD F8 28    		 CALL BN2BCD	;
129)   0DEF 7D          		 LD A, L	;
130)   0DF0 12          		 LD (DE), A	;
131)   0DF1 13          		 INC DE	;
132)   0DF2 AF          		 XOR A	;
133)   0DF3 12          		 LD (DE), A	;
146)   0DF4 21 89 FE    		@DS1307_ADJUST: LD HL, BUFFER	;
147)   0DF7 16 68       		 LD D, DS1307_ADDRESS	;
148)   0DF9 01 09 00    		 LD BC, 9	;
149)   0DFC CD 5B 0C    		 CALL I2C_WRITE	;
150)   0DFF C2 7B 0D    		 JP NZ, SHERR0	;
151)   0E02 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
152)   0E05 CD 75 29    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
153)   0E08 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
154)   0E0B CD 75 29    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
155)   0E0E C9          		 RET	;
159)   0E0F 21 89 FE    		@DS1307_SETSQ: LD HL, BUFFER	;
160)   0E12 E5          		 PUSH HL	;
161)   0E13 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
162)   0E15 77          		 LD (HL), A	;
163)   0E16 23          		 INC HL	;
164)   0E17 7A          		 LD A, D	;
165)   0E18 77          		 LD (HL), A	;
166)   0E19 E1          		 POP HL	;
167)   0E1A 16 68       		 LD D, DS1307_ADDRESS	;
168)   0E1C 01 02 00    		 LD BC, 2	;
169)   0E1F CD 5B 0C    		 CALL I2C_WRITE	;
170)   0E22 C2 7B 0D    		 JP NZ, SHERR0	;
171)   0E25 C9          		 RET	;
105)   0E26 00          		 LCD_DSPMODE  DB 0	;
106)   0E27 00          		 LCD_DSPCTRL  DB 0	;
111)   0E28 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
113)   0E2A 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
114)   0E2B 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
115)   0E2D CB E2       		 SET D4, D	;
116)   0E2F 0F          		LWNXT1: RRCA	;
117)   0E30 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
118)   0E32 CB EA       		 SET D5, D	;
119)   0E34 0F          		LWNXT2: RRCA	;
120)   0E35 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
121)   0E37 CB F2       		 SET D6, D	;
122)   0E39 0F          		LWNXT3: RRCA	;
123)   0E3A 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
124)   0E3C CB FA       		 SET D7, D	;
125)   0E3E 7B          		LWNXT4: LD A, E	;
126)   0E3F 0F          		 RRCA	;
127)   0E40 30 02       		 JR NC, LWNXT5	;
128)   0E42 CB C2       		 SET RS, D	;
131)   0E44 CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
132)   0E46 7A          		 LD A, D	;
133)   0E47 CD 51 0E    		 CALL LCD16_I2CSEND	;
134)   0E4A CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
135)   0E4C 7A          		 LD A, D	;
136)   0E4D CD 51 0E    		 CALL LCD16_I2CSEND	;
137)   0E50 C9          		 RET	;
141)   0E51 D5          		LCD16_I2CSEND: PUSH DE	;
142)   0E52 E5          		 PUSH HL	;
143)   0E53 21 89 FE    		 LD HL, BUFFER	;
144)   0E56 77          		 LD (HL), A	;
145)   0E57 16 27       		 LD D, LCDADDR	;
146)   0E59 01 01 00    		 LD BC, 1	;
147)   0E5C CD 5B 0C    		 CALL I2C_WRITE	;
148)   0E5F E1          		 POP HL	;
149)   0E60 D1          		 POP DE	;
150)   0E61 C9          		 RET	;
154)   0E62 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
155)   0E63 7B          		 LD A, E	;
156)   0E64 0F          		 RRCA	;
157)   0E65 38 07       		 JR C, ISCMDDATA	;
158)   0E67 0F          		 RRCA	;
159)   0E68 30 04       		 JR NC, ISCMDDATA	;
161)   0E6A 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
162)   0E6C 18 0E       		 JR LCSD_4BIT	;
163)   0E6E 7A          		ISCMDDATA: LD A, D	;
164)   0E6F CB 3F       		 SRL A	;
165)   0E71 CB 3F       		 SRL A	;
166)   0E73 CB 3F       		 SRL A	;
167)   0E75 CB 3F       		 SRL A	;
168)   0E77 D5          		 PUSH DE	;
169)   0E78 CD 28 0E    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
170)   0E7B D1          		 POP DE	;
171)   0E7C 7A          		LCSD_4BIT: LD A, D	;
172)   0E7D E6 0F       		 AND $0F	;
173)   0E7F CD 28 0E    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
174)   0E82 C9          		 RET	;
179)   0E83 1E 00       		LCD16_COMMD: LD E, COMMAND	;
180)   0E85 C3 62 0E    		 JP LCD16_SEND	;
183)   0E88 1E 01       		LCD16_DATA: LD E, LCD_DATA	;
184)   0E8A C3 62 0E    		 JP LCD16_SEND	;
188)   0E8D 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
189)   0E8F 1E 02       		 LD E, FOUR_BITS	;
190)   0E91 CD 62 0E    		 CALL LCD16_SEND	;
191)   0E94 01 00 30    		 LD BC, $3000	;
192)   0E97 CD 75 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
193)   0E9A 3E 03       		 LD A, 3	;
194)   0E9C 1E 02       		 LD E, FOUR_BITS	;
195)   0E9E CD 62 0E    		 CALL LCD16_SEND	;
196)   0EA1 01 00 30    		 LD BC, $3000	;
197)   0EA4 CD 75 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
198)   0EA7 3E 03       		 LD A, 3	;
199)   0EA9 1E 02       		 LD E, FOUR_BITS	;
200)   0EAB CD 62 0E    		 CALL LCD16_SEND	;
201)   0EAE 01 00 30    		 LD BC, $3000	;
202)   0EB1 CD 75 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
203)   0EB4 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
204)   0EB6 1E 02       		 LD E, FOUR_BITS	;
205)   0EB8 CD 62 0E    		 CALL LCD16_SEND	;
206)   0EBB 01 00 30    		 LD BC, $3000	;
207)   0EBE CD 75 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
209)   0EC1 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
210)   0EC3 CD 83 0E    		 CALL LCD16_COMMD	;
211)   0EC6 3E 04       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
212)   0EC8 32 27 0E    		 LD (LCD_DSPCTRL), A	;
213)   0ECB CD EA 0E    		 CALL LCD16_DISP	;
214)   0ECE CD 05 0F    		 CALL LCD16_CLR	;
215)   0ED1 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
216)   0ED3 32 26 0E    		 LD (LCD_DSPMODE), A	;
217)   0ED6 F6 04       		 OR LCD_ENTRYMODESET	;
218)   0ED8 CD 83 0E    		 CALL LCD16_COMMD	;
219)   0EDB C9          		 RET	;
221)   0EDC 3A 27 0E    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
222)   0EDF CB A7       		 RES LCD_DISPLAYON, A	;
223)   0EE1 32 27 0E    		 LD (LCD_DSPCTRL), A	;
224)   0EE4 F6 08       		 OR LCD_DISPLAYCONTROL	;
225)   0EE6 CD 83 0E    		 CALL LCD16_COMMD	;
226)   0EE9 C9          		 RET	;
227)   0EEA 3A 27 0E    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
228)   0EED F6 04       		 OR LCD_DISPLAYON	;
229)   0EEF 32 27 0E    		 LD (LCD_DSPCTRL), A	;
230)   0EF2 F6 08       		 OR LCD_DISPLAYCONTROL	;
231)   0EF4 CD 83 0E    		 CALL LCD16_COMMD	;
232)   0EF7 C9          		 RET	;
234)   0EF8 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
235)   0EFB C5          		LCLR_AGN1: PUSH BC	;
236)   0EFC CD B1 28    		 CALL DELAYMICRO	;
237)   0EFF C1          		 POP BC	;
238)   0F00 0D          		 DEC C	;
239)   0F01 E2 FB 0E    		 JP PO, LCLR_AGN1	;
240)   0F04 C9          		 RET	;
242)   0F05 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
243)   0F07 CD 83 0E    		 CALL LCD16_COMMD	;
244)   0F0A CD F8 0E    		 CALL LCDDELAY	;
245)   0F0D C9          		 RET	;
248)   0F0E 7E          		@LCD16_PRINT: LD A, (HL)	;
249)   0F0F FE 00       		 CP 0	;
250)   0F11 C8          		 RET Z	;
251)   0F12 CD 88 0E    		 CALL LCD16_DATA	;
252)   0F15 23          		 INC HL	;
253)   0F16 18 F6       		 JR LCD16_PRINT	;
256)   0F18 CD 88 0E    		@LCD16_PRCHR: CALL LCD16_DATA	;
257)   0F1B C9          		 RET	;
259)   0F1C 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
260)   0F1E CD 83 0E    		 CALL LCD16_COMMD	;
261)   0F21 CD F8 0E    		 CALL LCDDELAY	;
262)   0F24 C9          		 RET	;
265)   0F25 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
266)   0F29 06 00       		@LCD16_SETCURS: LD B, 0	;
267)   0F2B 4B          		 LD C, E	;
268)   0F2C 21 25 0F    		 LD HL, ROWOFFSET	;
269)   0F2F 09          		 ADD HL, BC	;
270)   0F30 7E          		 LD A, (HL)	;
271)   0F31 82          		 ADD D	;
272)   0F32 F6 80       		 OR LCD_SETDDRAMADDR	;
273)   0F34 CD 83 0E    		 CALL LCD16_COMMD	;
274)   0F37 C9          		 RET	;
276)   0F38 3A 27 0E    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
277)   0F3B CB 97       		 RES LCD_CURSORON, A	;
278)   0F3D 32 27 0E    		 LD (LCD_DSPCTRL), A	;
279)   0F40 F6 08       		 OR LCD_DISPLAYCONTROL	;
280)   0F42 CD 83 0E    		 CALL LCD16_COMMD	;
281)   0F45 C9          		 RET	;
284)   0F46 3A 27 0E    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
285)   0F49 F6 02       		 OR LCD_CURSORON	;
286)   0F4B 32 27 0E    		 LD (LCD_DSPCTRL), A	;
287)   0F4E F6 08       		 OR LCD_DISPLAYCONTROL	;
288)   0F50 CD 83 0E    		 CALL LCD16_COMMD	;
289)   0F53 C9          		 RET	;
291)   0F54 3A 27 0E    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
292)   0F57 CB 8F       		 RES LCD_BLINKON, A	;
293)   0F59 32 27 0E    		 LD (LCD_DSPCTRL), A	;
294)   0F5C F6 08       		 OR LCD_DISPLAYCONTROL	;
295)   0F5E CD 83 0E    		 CALL LCD16_COMMD	;
296)   0F61 C9          		 RET	;
299)   0F62 3A 27 0E    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
300)   0F65 F6 01       		 OR LCD_BLINKON	;
301)   0F67 32 27 0E    		 LD (LCD_DSPCTRL), A	;
302)   0F6A F6 08       		 OR LCD_DISPLAYCONTROL	;
303)   0F6C CD 83 0E    		 CALL LCD16_COMMD	;
304)   0F6F C9          		 RET	;
306)   0F70 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
307)   0F72 CD 83 0E    		 CALL LCD16_COMMD	;
308)   0F75 C9          		 RET	;
310)   0F76 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
311)   0F78 CD 83 0E    		 CALL LCD16_COMMD	;
312)   0F7B C9          		 RET	;
314)   0F7C 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
315)   0F7E CD 83 0E    		 CALL LCD16_COMMD	;
316)   0F81 C9          		 RET	;
318)   0F82 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
319)   0F84 CD 83 0E    		 CALL LCD16_COMMD	;
320)   0F87 C9          		 RET	;
 29)   0F88 AF          		VGA_INIT: XOR A	;
 30)   0F89 32 F0 FE    		 LD (PGSEM), A	;
 31)   0F8C 32 EF FE    		 LD (TMPG), A	;
 32)   0F8F 3E 0B       		 LD A, VGA_YELLOW	;
 33)   0F91 32 F1 FE    		 LD (VGAFCOL), A	;
 34)   0F94 3E 04       		 LD A, VGA_NAVY	;
 35)   0F96 32 F2 FE    		 LD (VGABCOL), A	;
 36)   0F99 3E 00       		 LD A, 0	;
 37)   0F9B 32 F3 FE    		 LD (VGATX_X), A	;
 38)   0F9E 3E 00       		 LD A, 0	;
 39)   0FA0 32 F4 FE    		 LD (VGATX_Y), A	;
 40)   0FA3 C9          		 RET	;
 47)   0FA4 3A F0 FE    		VGA_GETPAGE: LD A, (PGSEM)	;
 48)   0FA7 3C          		 INC A	;
 49)   0FA8 32 F0 FE    		 LD (PGSEM), A	;
 50)   0FAB FE 01       		 CP 1	;
 51)   0FAD C0          		 RET NZ	;
 52)   0FAE E5          		 PUSH HL	;
 53)   0FAF 06 04       		 LD B, 4        ;8000h	;8000h
 54)   0FB1 CD 53 06    		 CALL GETPGINBANK	;
 55)   0FB4 32 EF FE    		 LD (TMPG), A        ;SAVE OLD PAGE	;SAVE OLD PAGE
 56)   0FB7 3E 08       		 LD A, 8        ;PAGE 8	;PAGE 8
 57)   0FB9 CD 33 06    		 CALL PUTPGINBANK	;
 58)   0FBC E1          		 POP HL	;
 59)   0FBD C9          		 RET	;
 63)   0FBE 3A F0 FE    		VGA_RMVPAGE: LD A, (PGSEM)	;
 64)   0FC1 3D          		 DEC A	;
 65)   0FC2 32 F0 FE    		 LD (PGSEM), A	;
 66)   0FC5 FE 00       		 CP 0	;
 67)   0FC7 C0          		 RET NZ	;
 68)   0FC8 E5          		 PUSH HL	;
 69)   0FC9 06 04       		 LD B, 4	;
 70)   0FCB 3A EF FE    		 LD A, (TMPG)	;
 71)   0FCE CD 33 06    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
 72)   0FD1 E1          		 POP HL	;
 73)   0FD2 C9          		 RET	;
 77)   0FD3 CD A4 0F    		VGA_CLR: CALL VGA_GETPAGE	;
 78)   0FD6 01 20 03    		 LD BC, 800	;
 79)   0FD9 21 00 80    		 LD HL, $8000        ;DEL CHARS	;DEL CHARS
 80)   0FDC 11 00 84    		 LD DE, $8400	;
 81)   0FDF 3E 20       		VGAC_AGN: LD A, 32	;
 82)   0FE1 77          		 LD (HL), A	;
 83)   0FE2 3A F2 FE    		 LD A, (VGABCOL)	;
 84)   0FE5 CB 27       		 SLA A	;
 85)   0FE7 CB 27       		 SLA A	;
 86)   0FE9 CB 27       		 SLA A	;
 87)   0FEB CB 27       		 SLA A	;
 88)   0FED 12          		 LD (DE), A	;
 89)   0FEE 23          		 INC HL	;
 90)   0FEF 13          		 INC DE	;
 91)   0FF0 0B          		 DEC BC	;
 92)   0FF1 78          		 LD A, B	;
 93)   0FF2 B1          		 OR C	;
 94)   0FF3 20 EA       		 JR NZ, VGAC_AGN	;
 95)   0FF5 AF          		 XOR A	;
 96)   0FF6 32 F3 FE    		 LD (VGATX_X),A	;
 97)   0FF9 32 F4 FE    		 LD (VGATX_Y),A	;
 98)   0FFC CD BE 0F    		 CALL VGA_RMVPAGE	;
 99)   0FFF C9          		 RET	;
103)   1000 3A F1 FE    		VGA_GETCOL: LD A, (VGAFCOL)      ;GET COLOR INFO	;GET COLOR INFO
104)   1003 47          		 LD B, A	;
105)   1004 3A F2 FE    		 LD A, (VGABCOL)	;
106)   1007 CB 27       		 SLA A	;
107)   1009 CB 27       		 SLA A	;
108)   100B CB 27       		 SLA A	;
109)   100D CB 27       		 SLA A	;
110)   100F B0          		 OR B         ;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR	;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR
111)   1010 C9          		 RET	;
116)   1011 F5          		VGA_CALC_VIDAD: PUSH AF	;
117)   1012 06 00       		 LD B, 0	;
118)   1014 3A F4 FE    		 LD A, (VGATX_Y)	;
119)   1017 4F          		 LD C, A	;
120)   1018 21 00 80    		 LD HL, $8000	;
121)   101B 11 28 00    		 LD DE, 40	;
122)   101E 78          		VGCLC_AGN: LD A, B	;
123)   101F B1          		 OR C	;
124)   1020 28 04       		 JR Z, VGCLC_DOX	;
125)   1022 19          		 ADD HL, DE	;
126)   1023 0B          		 DEC BC	;
127)   1024 18 F8       		 JR VGCLC_AGN	;
128)   1026 06 00       		VGCLC_DOX: LD B, 0	;
129)   1028 3A F3 FE    		 LD A, (VGATX_X)	;
130)   102B 4F          		 LD C, A	;
131)   102C 09          		 ADD HL, BC	;
132)   102D F1          		 POP AF	;
133)   102E C9          		 RET	;
137)   102F F5          		VGA_PRCH: PUSH AF	;
138)   1030 CD A4 0F    		 CALL VGA_GETPAGE	;
139)   1033 F1          		 POP AF	;
140)   1034 FE 1F       		 CP 31	;
141)   1036 DC 6D 10    		 CALL C, VGA_NOTVISCH	;
142)   1039 28 06       		 JR Z, PRCH_EX        ;EXIT IF CHAR WAS HANDLED	;EXIT IF CHAR WAS HANDLED
143)   103B CD 45 10    		 CALL VGA_DOPRNCH       ;PRINT THE CHAR	;PRINT THE CHAR
144)   103E CD D0 10    		 CALL VGA_TXFORW       ;TEXT FORWARD	;TEXT FORWARD
145)   1041 CD BE 0F    		PRCH_EX: CALL VGA_RMVPAGE	;
146)   1044 C9          		 RET	;
149)   1045 E5          		VGA_DOPRNCH: PUSH HL	;
150)   1046 F5          		 PUSH AF	;
151)   1047 CD A4 0F    		 CALL VGA_GETPAGE	;
152)   104A CD 11 10    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
153)   104D F1          		 POP AF	;
154)   104E 77          		 LD (HL), A        ;PUT CHAR ON SCREEN	;PUT CHAR ON SCREEN
155)   104F 11 00 04    		 LD DE, $400	;
156)   1052 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
157)   1053 CD 00 10    		 CALL VGA_GETCOL       ;GET CURRENT COLOR	;GET CURRENT COLOR
158)   1056 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
159)   1057 E1          		 POP HL	;
160)   1058 CD BE 0F    		 CALL VGA_RMVPAGE	;
161)   105B C9          		 RET	;
165)   105C F5          		VGA_DOCHCLR: PUSH AF	;
166)   105D CD A4 0F    		 CALL VGA_GETPAGE	;
167)   1060 CD 11 10    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
168)   1063 11 00 04    		 LD DE, $400	;
169)   1066 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
170)   1067 F1          		 POP AF	;
171)   1068 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
172)   1069 CD BE 0F    		 CALL VGA_RMVPAGE	;
173)   106C C9          		 RET	;
178)   106D FE 08       		VGA_NOTVISCH: CP 8        ;BACKSPACE	;BACKSPACE
179)   106F 20 11       		 JR NZ, NX1	;
180)   1071 3A F3 FE    		 LD A, (VGATX_X)	;
181)   1074 FE 01       		 CP 1         ;COL 0 HAS THE PROMPT	;COL 0 HAS THE PROMPT
182)   1076 C8          		 RET Z         ;DO NOT PRINT ANYTHING	;DO NOT PRINT ANYTHING
183)   1077 3D          		 DEC A	;
184)   1078 32 F3 FE    		 LD (VGATX_X), A	;
185)   107B 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
186)   107D CD 45 10    		 CALL VGA_DOPRNCH       ;	;
187)   1080 97          		 SUB A         ;SET ZF	;SET ZF
188)   1081 C9          		 RET	;
189)   1082 FE 0A       		NX1: CP 10         ;JUST IGNORE IT	;JUST IGNORE IT
190)   1084 C8          		 RET Z	;
191)   1085 FE 0D       		 CP 13         ;CR =NEW LINE	;CR =NEW LINE
192)   1087 20 07       		 JR NZ, NX2	;
193)   1089 CD DF 10    		 CALL VGDOY        ;ADD 1 TO TY	;ADD 1 TO TY
194)   108C 32 F3 FE    		 LD (VGATX_X), A       ;ZF IS SET	;ZF IS SET
195)   108F C9          		 RET	;
196)   1090 AF          		NX2: XOR A         ;NC MEANS WE DON'T PRINT	;NC MEANS WE DON'T PRINT
197)   1091 C9          		 RET	;
200)   1092 CD A4 0F    		VGA_GETCHAR: CALL VGA_GETPAGE	;
201)   1095 CD 11 10    		 CALL VGA_CALC_VIDAD  ;CALC VIDEO ADDR ON HL	;CALC VIDEO ADDR ON HL
202)   1098 7E          		 LD A,(HL)	;
203)   1099 11 00 04    		 LD DE, $400	;
204)   109C 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
205)   109D 57          		 LD D,A	;
206)   109E 7E          		 LD A,(HL)	;
207)   109F 5F          		 LD E,A	;
208)   10A0 CD BE 0F    		 CALL VGA_RMVPAGE	;
209)   10A3 C9          		 RET	;
212)   10A4 CD 92 10    		VGA_RMVCURS: CALL VGA_GETCHAR	;
213)   10A7 7A          		 LD A,D	;
214)   10A8 CD 45 10    		 CALL VGA_DOPRNCH	;
215)   10AB C9          		 RET	;
216)   10AC CD A4 0F    		VGA_PRNCURS: CALL VGA_GETPAGE	;
217)   10AF CD 92 10    		 CALL VGA_GETCHAR ; E HAVE THE COLOR INFO	; E HAVE THE COLOR INFO
218)   10B2 7B          		 LD A,E	;
219)   10B3 0F          		 RRCA  ;CHANGE FORE AND BACK COLOR INFO	;CHANGE FORE AND BACK COLOR INFO
220)   10B4 0F          		 RRCA	;
221)   10B5 0F          		 RRCA	;
222)   10B6 0F          		 RRCA	;
223)   10B7 CD 5C 10    		 CALL VGA_DOCHCLR ;CHANGE THE COLOR	;CHANGE THE COLOR
224)   10BA CD BE 0F    		 CALL VGA_RMVPAGE	;
225)   10BD C9          		 RET	;
228)   10BE CD A4 0F    		VGA_PRINT: CALL VGA_GETPAGE	;
229)   10C1 7E          		VGAP_AGN: LD A, (HL)	;
230)   10C2 FE 00       		 CP 0	;
231)   10C4 28 06       		 JR Z, VGAP_EX	;
232)   10C6 CD 2F 10    		 CALL VGA_PRCH	;
233)   10C9 23          		 INC HL	;
234)   10CA 18 F5       		 JR VGAP_AGN	;
235)   10CC CD BE 0F    		VGAP_EX: CALL VGA_RMVPAGE	;
236)   10CF C9          		 RET	;
239)   10D0 F5          		VGA_TXFORW: PUSH AF	;
240)   10D1 3A F3 FE    		 LD A, (VGATX_X)	;
241)   10D4 3C          		 INC A	;
242)   10D5 FE 28       		 CP 40	;
243)   10D7 CC DF 10    		 CALL Z, VGDOY	;
244)   10DA 32 F3 FE    		 LD (VGATX_X), A	;
245)   10DD F1          		 POP AF	;
246)   10DE C9          		 RET	;
247)   10DF 3A F4 FE    		VGDOY: LD A, (VGATX_Y)	;
248)   10E2 3C          		 INC A	;
249)   10E3 FE 14       		 CP 20	;
250)   10E5 CC ED 10    		 CALL Z, DOSCRL	;
251)   10E8 32 F4 FE    		 LD (VGATX_Y), A	;
252)   10EB AF          		 XOR A	;
253)   10EC C9          		 RET	;
255)   10ED CD 0D 11    		DOSCRL: CALL DOSCRL_COL       ;SCROLL COLORS	;SCROLL COLORS
256)   10F0 CD F4 10    		 CALL DOSCRL_TXT       ;SCROLL TEXT	;SCROLL TEXT
257)   10F3 C9          		 RET   	;
258)   10F4 21 28 80    		DOSCRL_TXT: LD HL, $8028       ;LINE 1	;LINE 1
259)   10F7 11 00 80    		 LD DE, $8000        ;LINE 0	;LINE 0
260)   10FA 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
261)   10FD ED B0       		 LDIR	;
262)   10FF 3E 20       		 LD A, 32	;
263)   1101 21 F8 82    		 LD HL, $82F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
264)   1104 06 28       		 LD B, 40	;
265)   1106 77          		DOS_AGN: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
266)   1107 23          		 INC HL	;
267)   1108 10 FC       		 DJNZ, DOS_AGN	;
268)   110A 3E 13       		 LD A, 19        ;SET TO LAST LINE	;SET TO LAST LINE
269)   110C C9          		 RET	;
271)   110D 21 28 84    		DOSCRL_COL: LD HL, $8428        ;LINE 1	;LINE 1
272)   1110 11 00 84    		 LD DE, $8400        ;LINE 0	;LINE 0
273)   1113 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
274)   1116 ED B0       		 LDIR  	;
275)   1118 CD 00 10    		 CALL VGA_GETCOL       ;SET DEFAULT COLOR	;SET DEFAULT COLOR
276)   111B 21 F8 86    		 LD HL, $86F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
277)   111E 06 28       		 LD B, 40	;
278)   1120 77          		DOS_AGNCL: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
279)   1121 23          		 INC HL	;
280)   1122 10 FC       		 DJNZ, DOS_AGNCL	;
281)   1124 C9          		 RET	;
 16)   1125 	            		 LCD_RS EQU DEVTFT       ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   1125 	            		 LCD_CS EQU DEVTFT+1       ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   1125 7B          		 LD A, E	;
 32)   1126 D3 11       		 OUT (LCD_CS), A	;
 37)   1128 DB 11       		 IN A, (LCD_CS)	;
 38)   112A C9          		 RET	;
 45)   112B 7A          		 LD A, D	;
 46)   112C D3 11       		 OUT (LCD_CS), A	;
 47)   112E C9          		 RET	;
 53)   112F 7A          		 LD A, D	;
 54)   1130 D3 10       		 OUT (LCD_RS), A	;
 55)   1132 C9          		 RET	;
 62)   1133 AF          		 XOR A	;
 63)   1134 D3 10       		 OUT (LCD_RS), A       ;RS LOW = COMMAND BYTE	;RS LOW = COMMAND BYTE
 64)   1136 CD 2B 11    		 CALL LCD_WR_BUS	;
 65)   1139 3E 01       		 LD A, 1	;
 66)   113B D3 10       		 OUT (LCD_RS), A       ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   113D C9          		 RET	;
 71)   113E 16 E2       		 LD D, 0xE2        ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   1140 CD 2F 11    		 CALL LCD_WR_COM       ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   1143 16 23       		 LD D, 0x23        ;1E	;1E
 74)   1145 CD 2B 11    		 CALL LCD_WR_DAT	;
 75)   1148 16 02       		 LD D, 0x02	;
 76)   114A CD 2B 11    		 CALL LCD_WR_DAT	;
 77)   114D 16 54       		 LD D, 0x54	;
 78)   114F CD 2B 11    		 CALL LCD_WR_DAT	;
 79)   1152 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 80)   1154 CD 2F 11    		 CALL LCD_WR_COM	;
 81)   1157 16 01       		 LD D, 0x01	;
 82)   1159 CD 2B 11    		 CALL LCD_WR_DAT	;
 83)   115C 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 84)   115E CD B1 28    		 CALL DELAYMICRO	;
 85)   1161 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 86)   1163 CD 2F 11    		 CALL LCD_WR_COM	;
 87)   1166 16 03       		 LD D, 0x03	;
 88)   1168 CD 2B 11    		 CALL LCD_WR_DAT	;
 89)   116B 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 90)   116D CD B1 28    		 CALL DELAYMICRO	;
 92)   1170 16 01       		 LD D, 0x01        ; software reset	; software reset
 93)   1172 CD 2F 11    		 CALL LCD_WR_COM	;
 94)   1175 06 14       		 LD B, 20        ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   1177 CD B1 28    		 CALL DELAYMICRO	;
 96)   117A 16 E6       		 LD D, 0xE6        ;PLL setting for PCLK, depends on resolution	;PLL setting for PCLK, depends on resolution
 97)   117C CD 2F 11    		 CALL LCD_WR_COM	;
 98)   117F 16 03       		 LD D, 0x03	;
 99)   1181 CD 2B 11    		 CALL LCD_WR_DAT	;
100)   1184 16 33       		 LD D, 0x33        ;FF	;FF
101)   1186 CD 2B 11    		 CALL LCD_WR_DAT	;
102)   1189 16 33       		 LD D, 0x33        ;FF	;FF
103)   118B CD 2B 11    		 CALL LCD_WR_DAT	;
105)   118E 16 B0       		 LD D, 0xB0        ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   1190 CD 2F 11    		 CALL LCD_WR_COM	;
107)   1193 16 20       		 LD D, 0x20	;
108)   1195 CD 2B 11    		 CALL LCD_WR_DAT	;
109)   1198 16 00       		 LD D, 0x00	;
110)   119A CD 2B 11    		 CALL LCD_WR_DAT	;
111)   119D 16 03       		 LD D, 0x03        ;Set HDP  799	;Set HDP  799
112)   119F CD 2B 11    		 CALL LCD_WR_DAT	;
113)   11A2 16 1F       		 LD D, 0x1F	;
114)   11A4 CD 2B 11    		 CALL LCD_WR_DAT	;
115)   11A7 16 01       		 LD D, 0x01        ;Set VDP  479	;Set VDP  479
116)   11A9 CD 2B 11    		 CALL LCD_WR_DAT	;
117)   11AC 16 DF       		 LD D, 0xDF	;
118)   11AE CD 2B 11    		 CALL LCD_WR_DAT	;
119)   11B1 16 00       		 LD D, 0x00	;
120)   11B3 CD 2B 11    		 CALL LCD_WR_DAT	;
123)   11B6 16 B4       		 LD D, 0xB4        ;HSYNC	;HSYNC
124)   11B8 CD 2F 11    		 CALL LCD_WR_COM	;
125)   11BB 16 04       		 LD D, 0x04        ;03         ;Set HT 928	;03         ;Set HT 928
126)   11BD CD 2B 11    		 CALL LCD_WR_DAT	;
127)   11C0 16 1F       		 LD D, 0x1F        ;A0	;A0
128)   11C2 CD 2B 11    		 CALL LCD_WR_DAT	;
129)   11C5 16 00       		 LD D, 0x00        ;Set HPS  46	;Set HPS  46
130)   11C7 CD 2B 11    		 CALL LCD_WR_DAT	;
131)   11CA 16 D2       		 LD D, 0xD2        ;2E	;2E
132)   11CC CD 2B 11    		 CALL LCD_WR_DAT	;
133)   11CF 16 00       		 LD D, 0x00        ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   11D1 CD 2B 11    		 CALL LCD_WR_DAT	;
135)   11D4 16 00       		 LD D, 0x00        ;Set LPS  15	;Set LPS  15
136)   11D6 CD 2B 11    		 CALL LCD_WR_DAT	;
137)   11D9 16 00       		 LD D, 0x00        ;0F	;0F
138)   11DB CD 2B 11    		 CALL LCD_WR_DAT	;
139)   11DE 16 00       		 LD D, 0x00	;
140)   11E0 CD 2B 11    		 CALL LCD_WR_DAT	;
142)   11E3 16 B6       		 LD D, 0xB6        ;VSYNC	;VSYNC
143)   11E5 CD 2F 11    		 CALL LCD_WR_COM	;
144)   11E8 16 02       		 LD D, 0x02        ;Set VT 525	;Set VT 525
145)   11EA CD 2B 11    		 CALL LCD_WR_DAT	;
146)   11ED 16 0C       		 LD D, 0x0C        ;0D	;0D
147)   11EF CD 2B 11    		 CALL LCD_WR_DAT	;
148)   11F2 16 00       		 LD D, 0x00        ;Set VPS  16	;Set VPS  16
149)   11F4 CD 2B 11    		 CALL LCD_WR_DAT	;
150)   11F7 16 22       		 LD D, 0x22        ;10	;10
151)   11F9 CD 2B 11    		 CALL LCD_WR_DAT	;
152)   11FC 16 00       		 LD D, 0x00        ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   11FE CD 2B 11    		 CALL LCD_WR_DAT	;
154)   1201 16 00       		 LD D, 0x00        ;Set FPS  8	;Set FPS  8
155)   1203 CD 2B 11    		 CALL LCD_WR_DAT	;
156)   1206 16 00       		 LD D, 0x00        ; 08	; 08
157)   1208 CD 2B 11    		 CALL LCD_WR_DAT	;
159)   120B 16 B8       		 LD D, 0xB8	;
160)   120D CD 2F 11    		 CALL LCD_WR_COM	;
161)   1210 16 0F       		 LD D, 0x0F        ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   1212 CD 2B 11    		 CALL LCD_WR_DAT	;
163)   1215 16 01       		 LD D, 0x01        ;GPIO0 normal	;GPIO0 normal
164)   1217 CD 2B 11    		 CALL LCD_WR_DAT	;
166)   121A 16 BA       		 LD D, 0xBA	;
167)   121C CD 2F 11    		 CALL LCD_WR_COM	;
168)   121F 16 01       		 LD D, 0x01        ;0F	;0F
169)   1221 CD 2B 11    		 CALL LCD_WR_DAT       ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   1224 16 36       		 LD D, 0x36        ;rotation	;rotation
172)   1226 CD 2F 11    		 CALL LCD_WR_COM	;
173)   1229 16 08       		 LD D, 0x08        ;2A	;2A
174)   122B CD 2B 11    		 CALL LCD_WR_DAT	;
176)   122E 16 F0       		 LD D, 0xF0        ;pixel data interface	;pixel data interface
177)   1230 CD 2F 11    		 CALL LCD_WR_COM	;
178)   1233 16 06       		 LD D, 0x06        ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   1235 CD 2B 11    		 CALL LCD_WR_DAT	;
181)   1238 06 05       		 LD B, 5        ;delay(5);	;delay(5);
182)   123A CD B1 28    		 CALL DELAYMICRO	;
184)   123D 16 BC       		 LD D, 0xBC        ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   123F CD 2F 11    		 CALL LCD_WR_COM	;
186)   1242 16 40       		 LD D, 0x40	;
187)   1244 CD 2B 11    		 CALL LCD_WR_DAT	;
188)   1247 16 80       		 LD D, 0x80	;
189)   1249 CD 2B 11    		 CALL LCD_WR_DAT	;
190)   124C 16 40       		 LD D, 0x40	;
191)   124E CD 2B 11    		 CALL LCD_WR_DAT	;
192)   1251 16 01       		 LD D, 0x01	;
193)   1253 CD 2B 11    		 CALL LCD_WR_DAT	;
194)   1256 06 05       		 LD B, 5        ;delay(5);	;delay(5);
195)   1258 CD B1 28    		 CALL DELAYMICRO	;
197)   125B 16 35       		 LD D, 0x35        ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   125D CD 2F 11    		 CALL LCD_WR_COM	;
199)   1260 16 00       		 LD D, 0x00        ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   1262 CD 2B 11    		 CALL LCD_WR_DAT	;
202)   1265 16 29       		 LD D, 0x29        ;display on	;display on
203)   1267 CD 2F 11    		 CALL LCD_WR_COM	;
204)   126A 16 BE       		 LD D, 0xBE        ;set PWM for B/L	;set PWM for B/L
205)   126C CD 2F 11    		 CALL LCD_WR_COM	;
206)   126F 16 06       		 LD D, 0x06	;
207)   1271 CD 2B 11    		 CALL LCD_WR_DAT	;
208)   1274 16 F0       		 LD D, 0xF0	;
209)   1276 CD 2B 11    		 CALL LCD_WR_DAT	;
210)   1279 16 01       		 LD D, 0x01	;
211)   127B CD 2B 11    		 CALL LCD_WR_DAT	;
212)   127E 16 F0       		 LD D, 0xF0	;
213)   1280 CD 2B 11    		 CALL LCD_WR_DAT	;
214)   1283 16 00       		 LD D, 0x00	;
215)   1285 CD 2B 11    		 CALL LCD_WR_DAT	;
216)   1288 16 00       		 LD D, 0x00	;
217)   128A CD 2B 11    		 CALL LCD_WR_DAT	;
219)   128D 16 D0       		 LD D, 0xD0	;
220)   128F CD 2F 11    		 CALL LCD_WR_COM	;
221)   1292 16 0D       		 LD D, 0x0D	;
222)   1294 CD 2B 11    		 CALL LCD_WR_DAT	;
225)   1297 21 00 00    		 LD HL, 0	;
226)   129A E5          		 PUSH HL	;
227)   129B E5          		 PUSH HL	;
228)   129C 21 1F 03    		 LD HL, 799	;
229)   129F E5          		 PUSH HL	;
230)   12A0 21 DF 01    		 LD HL, 479	;
231)   12A3 E5          		 PUSH HL	;
232)   12A4 CD A8 12    		 CALL LCD_SETXY	;
233)   12A7 C9          		 RET	;
250)   12A8 DD 21 02 00 		 LD IX, 2	;
251)   12AC DD 39       		 ADD IX, SP	;
252)   12AE 16 2A       		 LD D, 0x2A        ;SEND IX PARAMS	;SEND IX PARAMS
253)   12B0 CD 2F 11    		 CALL LCD_WR_COM	;
254)   12B3 DD 56 07    		 LD D, (IX + 7)	;
255)   12B6 CD 2B 11    		 CALL LCD_WR_DAT	;
256)   12B9 DD 56 06    		 LD D, (IX + 6)	;
257)   12BC CD 2B 11    		 CALL LCD_WR_DAT	;
258)   12BF DD 56 03    		 LD D, (IX + 3)	;
259)   12C2 CD 2B 11    		 CALL LCD_WR_DAT	;
260)   12C5 DD 56 02    		 LD D, (IX + 2)	;
261)   12C8 CD 2B 11    		 CALL LCD_WR_DAT	;
262)   12CB 16 2B       		 LD D, 0x2B        ;SEND Y PARAMS	;SEND Y PARAMS
263)   12CD CD 2F 11    		 CALL LCD_WR_COM	;
264)   12D0 DD 56 05    		 LD D, (IX + 5)	;
265)   12D3 CD 2B 11    		 CALL LCD_WR_DAT	;
266)   12D6 DD 56 04    		 LD D, (IX + 4)	;
267)   12D9 CD 2B 11    		 CALL LCD_WR_DAT	;
268)   12DC DD 56 01    		 LD D, (IX + 1)	;
269)   12DF CD 2B 11    		 CALL LCD_WR_DAT	;
270)   12E2 DD 56 00    		 LD D, (IX)	;
271)   12E5 CD 2B 11    		 CALL LCD_WR_DAT	;
272)   12E8 16 2C       		 LD D, 0x2C        ;SEND DATA	;SEND DATA
273)   12EA CD 2F 11    		 CALL LCD_WR_COM	;
274)   12ED D1          		 POP DE	;
275)   12EE 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   12F1 39          		 ADD HL, SP	;
277)   12F2 F9          		 LD SP, HL	;
278)   12F3 EB          		 EX DE, HL	;
279)   12F4 E9          		 JP (HL)	;
285)   12F5 54          		 LD D, H	;
286)   12F6 CD 2B 11    		 CALL LCD_WR_DAT	;
287)   12F9 55          		 LD D, L	;
288)   12FA CD 2B 11    		 CALL LCD_WR_DAT	;
289)   12FD C9          		 RET	;
294)   12FE 16 2E       		 LD D, 0x2E        ;READ DATA	;READ DATA
295)   1300 CD 2F 11    		 CALL LCD_WR_COM	;
296)   1303 CD 28 11    		@LCD_GTPXL: CALL LCD_RD_DAT	;
297)   1306 67          		 LD H, A	;
298)   1307 CD 28 11    		 CALL LCD_RD_DAT	;
299)   130A 6F          		 LD L, A	;
300)   130B C9          		 RET	;
306)   130C DD E5       		@LCD_READPIXEL: PUSH IX       ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   130E DD 21 04 00 		 LD IX, 4        ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   1312 DD 39       		 ADD IX, SP	;
309)   1314 DD 66 03    		 LD H, (IX + 3)        ;X	;X
310)   1317 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
311)   131A DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
312)   131D DD 5E 00    		 LD E, (IX)        ;Y	;Y
313)   1320 E5          		 PUSH HL	;
314)   1321 D5          		 PUSH DE	;
315)   1322 E5          		 PUSH HL	;
316)   1323 D5          		 PUSH DE	;
317)   1324 CD A8 12    		 CALL LCD_SETXY	;
318)   1327 CD FE 12    		 CALL LCD_GETPIXEL	;
319)   132A E5          		 PUSH HL	;
320)   132B CD 5D 13    		 CALL LCD_CLRXY	;
321)   132E D1          		 POP DE         ;RESULT COLOR	;RESULT COLOR
322)   132F DD E1       		 POP IX	;
323)   1331 C1          		 POP BC         ;RET ADDR	;RET ADDR
324)   1332 21 04 00    		 LD HL, 2 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   1335 39          		 ADD HL, SP	;
326)   1336 F9          		 LD SP, HL	;
327)   1337 EB          		 EX DE, HL        ;HL RESULT	;HL RESULT
328)   1338 C5          		 PUSH BC        ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   1339 C9          		 RET	;
333)   133A DD 21 02 00 		 LD IX, 2        ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   133E DD 39       		 ADD IX, SP	;
335)   1340 DD 66 03    		 LD H, (IX + 3)        ;X	;X
336)   1343 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
337)   1346 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
338)   1349 DD 5E 00    		 LD E, (IX)        ;Y	;Y
339)   134C E5          		 PUSH HL	;
340)   134D D5          		 PUSH DE	;
341)   134E E5          		 PUSH HL	;
342)   134F D5          		 PUSH DE	;
343)   1350 CD A8 12    		 CALL LCD_SETXY	;
344)   1353 2A 01 FE    		 LD HL, (FCOLOR)	;
345)   1356 CD F5 12    		 CALL LCD_SETPIXEL	;
346)   1359 CD 5D 13    		 CALL LCD_CLRXY	;
347)   135C C9          		 RET	;
350)   135D 21 00 00    		 LD HL, 0	;
351)   1360 E5          		 PUSH HL	;
352)   1361 E5          		 PUSH HL	;
353)   1362 21 1F 03    		 LD HL, LCD_WIDTH	;
354)   1365 E5          		 PUSH HL	;
355)   1366 21 DF 01    		 LD HL, LCD_HEIGHT	;
356)   1369 E5          		 PUSH HL	;
357)   136A CD A8 12    		 CALL LCD_SETXY	;
358)   136D C9          		 RET	;
362)   136E DD 21 02 00 		 LD IX, 2	;
363)   1372 DD 39       		 ADD IX, SP	;
364)   1374 DD 66 05    		 LD H, (IX + 5)        ;X	;X
365)   1377 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
366)   137A DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
367)   137D DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
368)   1380 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
369)   1383 DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
372)   1386 E5          		 PUSH HL	;
373)   1387 21 00 00    		 LD HL, 0	;
374)   138A B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
375)   138B ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
376)   138D 38 0A       		 JR C, POSH1	;
377)   138F AF          		 XOR A         ;l=-l	;l=-l
378)   1390 91          		 SUB C	;
379)   1391 4F          		 LD C, A	;
380)   1392 9F          		 SBC A, A	;
381)   1393 90          		 SUB B	;
382)   1394 47          		 LD B, A	;
383)   1395 E1          		 POP HL	;
384)   1396 ED 42       		 SBC HL, BC        ;x -= l;	;x -= l;
385)   1398 E5          		 PUSH HL	;
386)   1399 E1          		POSH1: POP HL	;
387)   139A E5          		 PUSH HL	;
388)   139B D5          		 PUSH DE	;
389)   139C 09          		 ADD HL, BC	;
390)   139D E5          		 PUSH HL	;
391)   139E D5          		 PUSH DE	;
392)   139F CD A8 12    		 CALL LCD_SETXY        ;setXY(x, y, x+l, y);	;setXY(x, y, x+l, y);
393)   13A2 2A 01 FE    		 LD HL, (FCOLOR)	;
394)   13A5 CD F5 12    		NXTH1: CALL LCD_SETPIXEL	;
395)   13A8 0B          		 DEC BC	;
396)   13A9 79          		 LD A, C	;
397)   13AA B0          		 OR B	;
398)   13AB 20 F8       		 JR NZ, NXTH1	;
399)   13AD CD 5D 13    		 CALL LCD_CLRXY	;
400)   13B0 D1          		 POP DE	;
401)   13B1 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
402)   13B4 39          		 ADD HL, SP	;
403)   13B5 F9          		 LD SP, HL	;
404)   13B6 EB          		 EX DE, HL	;
405)   13B7 E9          		 JP (HL)	;
411)   13B8 DD 21 02 00 		 LD IX, 2	;
412)   13BC DD 39       		 ADD IX, SP	;
413)   13BE DD 56 05    		 LD D, (IX + 5)        ;X	;X
414)   13C1 DD 5E 04    		 LD E, (IX + 4)        ;X	;X
415)   13C4 DD 66 03    		 LD H, (IX + 3)        ;Y	;Y
416)   13C7 DD 6E 02    		 LD L, (IX + 2)        ;Y	;Y
417)   13CA DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
418)   13CD DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
419)   13D0 E5          		 PUSH HL	;
420)   13D1 21 00 00    		 LD HL, 0	;
421)   13D4 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
422)   13D5 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
423)   13D7 38 0A       		 JR C, POSV1	;
424)   13D9 AF          		 XOR A         ;l=-l	;l=-l
425)   13DA 91          		 SUB C	;
426)   13DB 4F          		 LD C, A	;
427)   13DC 9F          		 SBC A, A	;
428)   13DD 90          		 SUB B	;
429)   13DE 47          		 LD B, A	;
430)   13DF E1          		 POP HL	;
431)   13E0 ED 42       		 SBC HL, BC        ;Y -= l;	;Y -= l;
432)   13E2 E5          		 PUSH HL	;
433)   13E3 E1          		POSV1: POP HL	;
434)   13E4 D5          		 PUSH DE	;
435)   13E5 E5          		 PUSH HL	;
436)   13E6 D5          		 PUSH DE	;
437)   13E7 09          		 ADD HL, BC	;
438)   13E8 E5          		 PUSH HL	;
439)   13E9 CD A8 12    		 CALL LCD_SETXY        ;setXY(x, y, x, y+l);	;setXY(x, y, x, y+l);
440)   13EC 2A 01 FE    		 LD HL, (FCOLOR)	;
441)   13EF CD F5 12    		NXTV1: CALL LCD_SETPIXEL	;
442)   13F2 0B          		 DEC BC	;
443)   13F3 79          		 LD A, C	;
444)   13F4 B0          		 OR B	;
445)   13F5 20 F8       		 JR NZ, NXTV1	;
446)   13F7 CD 5D 13    		 CALL LCD_CLRXY	;
447)   13FA D1          		 POP DE	;
448)   13FB 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
449)   13FE 39          		 ADD HL, SP	;
450)   13FF F9          		 LD SP, HL	;
451)   1400 EB          		 EX DE, HL	;
452)   1401 E9          		 JP (HL)	;
456)   1402 DD 21 02 00 		 LD IX, 2	;
457)   1406 DD 39       		 ADD IX, SP	;
467)   1408 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
468)   140B DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
469)   140E DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
470)   1411 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
471)   1414 B7          		 OR A	;
472)   1415 ED 52       		 SBC HL, DE	;
473)   1417 20 17       		 JR NZ, YNOTEQ	;
475)   1419 DD 46 07    		 LD B, (IX + 7)        ;X1	;X1
476)   141C DD 4E 06    		 LD C, (IX + 6)        ;X1	;X1
477)   141F C5          		 PUSH BC        ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
478)   1420 D5          		 PUSH DE        ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
479)   1421 DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
480)   1424 DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
481)   1427 ED 42       		 SBC HL, BC        ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
482)   1429 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
483)   142A CD 6E 13    		 CALL LCD_DRAWHLINE	;
484)   142D C3 DD 15    		 JP DLNEX	;
486)   1430 DD 66 07    		 LD H, (IX + 7)        ;X1	;X1
487)   1433 DD 6E 06    		 LD L, (IX + 6)        ;X1	;X1
488)   1436 DD 56 03    		 LD D, (IX + 3)        ;X2	;X2
489)   1439 DD 5E 02    		 LD E, (IX + 2)        ;X2	;X2
490)   143C B7          		 OR A	;
491)   143D ED 52       		 SBC HL, DE	;
492)   143F 20 17       		 JR NZ, XNOTEQ	;
494)   1441 D5          		 PUSH DE        ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
495)   1442 DD 46 05    		 LD B, (IX + 5)        ;Y1	;Y1
496)   1445 DD 4E 04    		 LD C, (IX + 4)        ;Y1	;Y1
497)   1448 C5          		 PUSH BC        ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
498)   1449 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
499)   144C DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
500)   144F ED 42       		 SBC HL, BC        ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
501)   1451 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
502)   1452 CD B8 13    		 CALL LCD_DRAWVLINE	;
503)   1455 C3 DD 15    		 JP DLNEX	;
506)   1458 38 04       		 JR C, X2GTX1	;
508)   145A AF          		 XOR A	;
509)   145B 3D          		 DEC A         ;XSTEP=-1	;XSTEP=-1
510)   145C 18 0D       		 JR DLNXT1	;
513)   145E D5          		 PUSH DE	;
514)   145F E1          		 POP HL	;
515)   1460 DD 56 07    		 LD D, (IX + 7)        ;X1	;X1
516)   1463 DD 5E 06    		 LD E, (IX + 6)        ;X1	;X1
517)   1466 B7          		 OR A	;
518)   1467 ED 52       		 SBC HL, DE        ;X2-X1 ON HL	;X2-X1 ON HL
520)   1469 3E 01       		 LD A, 1        ;XSTEP=1	;XSTEP=1
522)   146B 06 00       		 LD B, 0	;
523)   146D 0E 00       		 LD C, 0	;
524)   146F C5          		 PUSH BC        ;T	;T
525)   1470 E5          		 PUSH HL        ;DX	;DX
526)   1471 FE 01       		 CP 1	;
527)   1473 28 02       		 JR Z, DLXMINUS1	;
528)   1475 06 FF       		 LD B, 0XFF	;
529)   1477 4F          		DLXMINUS1: LD C, A	;
530)   1478 C5          		 PUSH BC        ;XSTEP	;XSTEP
531)   1479 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
532)   147C DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
533)   147F DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
534)   1482 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
535)   1485 B7          		 OR A	;
536)   1486 ED 52       		 SBC HL, DE	;
537)   1488 38 04       		 JR C, Y2GTY1        ;HL=Y1-Y2	;HL=Y1-Y2
538)   148A AF          		 XOR A	;
539)   148B 3D          		 DEC A         ;YSTEP=-1	;YSTEP=-1
540)   148C 18 0F       		 JR DLNXT2	;
543)   148E D5          		 PUSH DE	;
544)   148F E1          		 POP HL	;
545)   1490 DD 56 05    		 LD D, (IX + 5)        ;Y1	;Y1
546)   1493 DD 5E 04    		 LD E, (IX + 4)        ;Y1	;Y1
547)   1496 B7          		 OR A	;
548)   1497 ED 52       		 SBC HL, DE        ;HL=Y2-Y1    HL=DY	;HL=Y2-Y1    HL=DY
549)   1499 06 00       		 LD B, 0	;
550)   149B 3E 01       		 LD A, 1        ;YSTEP=1	;YSTEP=1
552)   149D FE 01       		 CP 1	;
553)   149F 28 02       		 JR Z, DLYMINUS1	;
554)   14A1 06 FF       		 LD B, 0XFF	;
556)   14A3 4F          		 LD C, A	;
557)   14A4 E5          		 PUSH HL        ;DY	;DY
558)   14A5 C5          		 PUSH BC        ;YSTEP	;YSTEP
559)   14A6 FD 21 00 00 		 LD IY, 0	;
560)   14AA FD 39       		 ADD IY, SP	;
575)   14AC FD 56 07    		 LD D, (IY + 7)        ;DX	;DX
576)   14AF FD 5E 06    		 LD E, (IY + 6)        ;DX	;DX
577)   14B2 B7          		 OR A	;
578)   14B3 ED 52       		 SBC HL, DE        ;DY-DX	;DY-DX
579)   14B5 DA 4A 15    		 JP C, DXGTDY	;
580)   14B8 CA 4A 15    		 JP Z, DXGTDY	;
582)   14BB 19          		 ADD HL, DE        ;HL=DY	;HL=DY
583)   14BC 44          		 LD B, H	;
584)   14BD 4D          		 LD C, L	;
585)   14BE CB 38       		 SRL B	;
586)   14C0 CB 19       		 RR C         ;(dy >> 1)	;(dy >> 1)
587)   14C2 21 00 00    		 LD HL, 0	;
588)   14C5 ED 42       		 SBC HL, BC        ;t = - (dy >> 1);	;t = - (dy >> 1);
589)   14C7 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
590)   14CA FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
592)   14CD DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
593)   14D0 DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
594)   14D3 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
595)   14D6 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
596)   14D9 D5          		 PUSH DE	;
597)   14DA DD E5       		 PUSH IX	;
598)   14DC E5          		 PUSH HL	;
599)   14DD D5          		 PUSH DE	;
600)   14DE E5          		 PUSH HL	;
601)   14DF D5          		 PUSH DE	;
602)   14E0 CD A8 12    		 CALL LCD_SETXY	;
603)   14E3 2A 01 FE    		 LD HL, (FCOLOR)	;
604)   14E6 CD F5 12    		 CALL LCD_SETPIXEL	;
605)   14E9 DD E1       		 POP IX	;
606)   14EB D1          		 POP DE	;
607)   14EC DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
608)   14EF DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
609)   14F2 ED 52       		 SBC HL, DE        ; ROW=Y2	; ROW=Y2
610)   14F4 CA D8 15    		 JP Z, DLEXIT	;
611)   14F7 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
612)   14FA FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
613)   14FD EB          		 EX DE, HL	;
614)   14FE 09          		 ADD HL, BC        ;row += ystep;	;row += ystep;
615)   14FF DD 74 05    		 LD (IX + 5), H        ;SAVE ROW	;SAVE ROW
616)   1502 DD 75 04    		 LD (IX + 4), L        ;	;
618)   1505 FD 56 09    		 LD D, (IY + 9)        ; T	; T
619)   1508 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
620)   150B FD 66 07    		 LD H, (IY + 7)        ;DX	;DX
621)   150E FD 6E 06    		 LD L, (IY + 6)        ;DX	;DX
622)   1511 19          		 ADD HL, DE	;
623)   1512 FD 74 09    		 LD (IY + 9), H        ;t += dx;	;t += dx;
624)   1515 FD 75 08    		 LD (IY + 8), L	;
625)   1518 EB          		 EX DE, HL	;
626)   1519 21 00 80    		 LD HL, $8000	;
627)   151C ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
628)   151E 38 AD       		 JR C, DLAGN1        ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
629)   1520 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
630)   1523 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
631)   1526 DD 66 07    		 LD H, (IX + 7)        ;COL HI	;COL HI
632)   1529 DD 6E 06    		 LD L, (IX + 6)        ;COL LO	;COL LO
633)   152C 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
634)   152D DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
635)   1530 DD 75 06    		 LD (IX + 6), L        ;	;
637)   1533 FD 66 09    		 LD H, (IY + 9)        ; T	; T
638)   1536 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
639)   1539 FD 46 03    		 LD B, (IY + 3)        ;DY	;DY
640)   153C FD 4E 02    		 LD C, (IY + 2)        ;DY	;DY
641)   153F ED 42       		 SBC HL, BC	;
642)   1541 FD 74 09    		 LD (IY + 9), H        ;t -= dY;	;t -= dY;
643)   1544 FD 75 08    		 LD (IY + 8), L	;
644)   1547 C3 CD 14    		 JP DLAGN1	;
646)   154A 19          		 ADD HL, DE        ;HL=DY DE=DX	;HL=DY DE=DX
647)   154B 42          		 LD B, D	;
648)   154C 4B          		 LD C, E	;
649)   154D CB 38       		 SRL B	;
650)   154F CB 19       		 RR C         ;(dX >> 1)	;(dX >> 1)
651)   1551 21 00 00    		 LD HL, 0	;
652)   1554 ED 42       		 SBC HL, BC        ;t = - (dX >> 1);	;t = - (dX >> 1);
653)   1556 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
654)   1559 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
656)   155C DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
657)   155F DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
658)   1562 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
659)   1565 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
660)   1568 E5          		 PUSH HL        ;SAVE COL	;SAVE COL
661)   1569 DD E5       		 PUSH IX	;
662)   156B E5          		 PUSH HL	;
663)   156C D5          		 PUSH DE	;
664)   156D E5          		 PUSH HL	;
665)   156E D5          		 PUSH DE	;
666)   156F CD A8 12    		 CALL LCD_SETXY	;
667)   1572 2A 01 FE    		 LD HL, (FCOLOR)	;
668)   1575 CD F5 12    		 CALL LCD_SETPIXEL	;
669)   1578 DD E1       		 POP IX	;
670)   157A D1          		 POP DE         ;RETRIEVE COL	;RETRIEVE COL
671)   157B DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
672)   157E DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
673)   1581 ED 52       		 SBC HL, DE        ; COL=X2?	; COL=X2?
674)   1583 28 53       		 JR Z, DLEXIT	;
675)   1585 EB          		 EX DE, HL        ;HL=COL	;HL=COL
676)   1586 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
677)   1589 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
678)   158C 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
679)   158D DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
680)   1590 DD 75 06    		 LD (IX + 6), L        ;	;
681)   1593 FD 56 09    		 LD D, (IY + 9)        ; T	; T
682)   1596 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
683)   1599 FD 66 03    		 LD H, (IY + 3)        ;DY	;DY
684)   159C FD 6E 02    		 LD L, (IY + 2)        ;DY	;DY
685)   159F 19          		 ADD HL, DE	;
686)   15A0 FD 74 09    		 LD (IY + 9), H        ;t += dY;	;t += dY;
687)   15A3 FD 75 08    		 LD (IY + 8), L	;
688)   15A6 EB          		 EX DE, HL        ;T=DE	;T=DE
689)   15A7 21 00 80    		 LD HL, $8000	;
690)   15AA ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
691)   15AC 38 AE       		 JR C, DLAGN2        ;CARRY SET IF NEGATIVE	;CARRY SET IF NEGATIVE
692)   15AE FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
693)   15B1 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
694)   15B4 DD 66 05    		 LD H, (IX + 5)        ;ROW HI	;ROW HI
695)   15B7 DD 6E 04    		 LD L, (IX + 4)        ;ROW LO	;ROW LO
696)   15BA 09          		 ADD HL, BC        ;ROW += Ystep;	;ROW += Ystep;
697)   15BB DD 74 05    		 LD (IX + 5), H        ;SAVE COL	;SAVE COL
698)   15BE DD 75 04    		 LD (IX + 4), L        ;	;
700)   15C1 FD 66 09    		 LD H, (IY + 9)        ; T	; T
701)   15C4 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
702)   15C7 FD 46 07    		 LD B, (IY + 7)        ;DX	;DX
703)   15CA FD 4E 06    		 LD C, (IY + 6)        ;DX	;DX
704)   15CD ED 42       		 SBC HL, BC	;
705)   15CF FD 74 09    		 LD (IY + 9), H        ;t -= dX;	;t -= dX;
706)   15D2 FD 75 08    		 LD (IY + 8), L	;
707)   15D5 C3 5C 15    		 JP DLAGN2	;
710)   15D8 21 0A 00    		 LD HL, 5 * 2        ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
711)   15DB 39          		 ADD HL, SP        ;	;
712)   15DC F9          		 LD SP, HL	;
713)   15DD D1          		DLNEX: POP DE         ;RET ADDR	;RET ADDR
714)   15DE 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
715)   15E1 39          		 ADD HL, SP	;
716)   15E2 F9          		 LD SP, HL	;
717)   15E3 EB          		 EX DE, HL	;
718)   15E4 E9          		 JP (HL)	;
723)   15E5 C5          		@PLOTP: PUSH BC        ;SAVE BC	;SAVE BC
724)   15E6 DD E5       		 PUSH IX	;
726)   15E8 D5          		 PUSH DE	;
727)   15E9 E5          		 PUSH HL	;
728)   15EA D5          		 PUSH DE	;
729)   15EB E5          		 PUSH HL	;
730)   15EC CD A8 12    		 CALL LCD_SETXY	;
731)   15EF 2A 01 FE    		 LD HL, (FCOLOR)	;
732)   15F2 CD F5 12    		 CALL LCD_SETPIXEL	;
734)   15F5 DD E1       		 POP IX	;
735)   15F7 C1          		 POP BC         ;RESTORE BC	;RESTORE BC
736)   15F8 C9          		 RET	;
741)   15F9 E1          		 POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
742)   15FA D5          		 PUSH DE        ;F VAR	;F VAR
743)   15FB D5          		 PUSH DE        ;DDF_X	;DDF_X
744)   15FC D5          		 PUSH DE        ;DDF_Y	;DDF_Y
745)   15FD D5          		 PUSH DE        ;X1	;X1
746)   15FE D5          		 PUSH DE        ;Y1	;Y1
747)   15FF E5          		 PUSH HL        ;RET ADDR	;RET ADDR
748)   1600 DD 21 02 00 		 LD IX, 2	;
749)   1604 DD 39       		 ADD IX, SP	;
767)   1606 AF          		 XOR A	;
768)   1607 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
769)   160A DD 5E 0A    		 LD E, (IX + 10)       ;R	;R
770)   160D DD 72 01    		 LD (IX + 1), D        ;Y1=R	;Y1=R
771)   1610 DD 73 00    		 LD (IX + 0), E	;
772)   1613 21 01 00    		 LD HL, 1	;
773)   1616 DD 74 07    		 LD (IX + 7), H        ;DDF_X=1	;DDF_X=1
774)   1619 DD 75 06    		 LD (IX + 6), L	;
775)   161C DD 74 03    		 LD (IX + 3), H        ;X1=0	;X1=0
776)   161F DD 74 02    		 LD (IX + 2), H	;
777)   1622 ED 52       		 SBC HL, DE	;
778)   1624 DD 74 09    		 LD (IX + 9), H        ;F	;F
779)   1627 DD 75 08    		 LD (IX + 8), L        ;F	;F
781)   162A EB          		 EX DE, HL        ;HL=RADIUS	;HL=RADIUS
782)   162B 29          		 ADD HL, HL        ;2*R	;2*R
783)   162C EB          		 EX DE, HL	;
784)   162D 21 00 00    		 LD HL, 0	;
785)   1630 ED 52       		 SBC HL, DE        ;-2*R	;-2*R
786)   1632 DD 74 05    		 LD (IX + 5), H	;
787)   1635 DD 75 04    		 LD (IX + 4), L        ;DDF_Y	;DDF_Y
789)   1638 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
790)   163B DD 6E 0C    		 LD L, (IX + 12)	;
791)   163E E5          		 PUSH HL        ;SAVE Y	;SAVE Y
792)   163F DD 56 0B    		 LD D, (IX + 11)       ;R	;R
793)   1642 DD 5E 0A    		 LD E, (IX + 10)	;
794)   1645 D5          		 PUSH DE        ;SAVE R	;SAVE R
795)   1646 19          		 ADD HL, DE        ;Y+R	;Y+R
796)   1647 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
797)   164A DD 5E 0E    		 LD E, (IX + 14)	;
798)   164D D5          		 PUSH DE        ;SAVE X	;SAVE X
800)   164E CD E5 15    		 CALL PLOTP	;
802)   1651 D1          		 POP DE         ;GET X	;GET X
803)   1652 C1          		 POP BC         ;GET R	;GET R
804)   1653 E1          		 POP HL         ;GET Y	;GET Y
805)   1654 E5          		 PUSH HL        ;SAVE VARS	;SAVE VARS
806)   1655 C5          		 PUSH BC	;
807)   1656 D5          		 PUSH DE	;
808)   1657 AF          		 XOR A	;
809)   1658 ED 42       		 SBC HL, BC        ;	;
811)   165A CD E5 15    		 CALL PLOTP	;
813)   165D E1          		 POP HL         ;GET X	;GET X
814)   165E C1          		 POP BC         ;GET R	;GET R
815)   165F D1          		 POP DE         ;GET Y	;GET Y
816)   1660 D5          		 PUSH DE        ;SAVE VARS	;SAVE VARS
817)   1661 C5          		 PUSH BC	;
818)   1662 E5          		 PUSH HL	;
819)   1663 AF          		 XOR A	;
820)   1664 ED 4A       		 ADC HL, BC	;
821)   1666 EB          		 EX DE, HL	;
823)   1667 CD E5 15    		 CALL PLOTP	;
825)   166A E1          		 POP HL         ;GET X	;GET X
826)   166B C1          		 POP BC         ;GET R	;GET R
827)   166C D1          		 POP DE         ;GET Y	;GET Y
828)   166D AF          		 XOR A	;
829)   166E ED 42       		 SBC HL, BC	;
830)   1670 EB          		 EX DE, HL	;
832)   1671 CD E5 15    		 CALL PLOTP	;
835)   1674 DD 66 03    		CIRC_AGN: LD H, (IX + 3)       ;X1	;X1
836)   1677 DD 6E 02    		 LD L, (IX + 2)        ;X1	;X1
837)   167A DD 56 01    		 LD D, (IX + 1)        ;Y1	;Y1
838)   167D DD 5E 00    		 LD E, (IX + 0)        ;Y1	;Y1
839)   1680 AF          		 XOR A	;
840)   1681 ED 52       		 SBC HL, DE	;
841)   1683 D2 72 17    		 JP NC, CIRC_EXIT	;
843)   1686 19          		 ADD HL, DE	;
844)   1687 E5          		 PUSH HL        ;SAVE X1	;SAVE X1
845)   1688 D5          		 PUSH DE        ;SAVE Y1	;SAVE Y1
846)   1689 21 00 00    		 LD HL, 0	;
847)   168C AF          		 XOR A	;
850)   168D DD 7E 09    		 LD A, (IX + 9)        ;F HI BYTE	;F HI BYTE
851)   1690 FE 50       		 CP 80	;
852)   1692 30 26       		 JR NC, CIRC_SKIP	;
853)   1694 28 24       		 JR Z, CIRC_SKIP	;
857)   1696 D1          		 POP DE         ;Y1	;Y1
858)   1697 1B          		 DEC DE	;
859)   1698 DD 72 01    		 LD (IX + 1), D        ;SAVE Y1	;SAVE Y1
860)   169B DD 73 00    		 LD (IX + 0), E	;
861)   169E D5          		 PUSH DE        ;Y1	;Y1
862)   169F DD 66 05    		 LD H, (IX + 5)        ;DDF_Y	;DDF_Y
863)   16A2 DD 6E 04    		 LD L, (IX + 4)	;
864)   16A5 23          		 INC HL	;
865)   16A6 23          		 INC HL	;
866)   16A7 DD 74 05    		 LD (IX + 5), H        ;SAVE DDF_Y	;SAVE DDF_Y
867)   16AA DD 75 04    		 LD (IX + 4), L	;
868)   16AD DD 56 09    		 LD D, (IX + 9)        ;F	;F
869)   16B0 DD 5E 08    		 LD E, (IX + 8)	;
870)   16B3 19          		 ADD HL, DE	;
871)   16B4 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
872)   16B7 DD 75 08    		 LD (IX + 8), L	;
876)   16BA C1          		 POP BC         ;Y1	;Y1
877)   16BB E1          		 POP HL         ;X1	;X1
878)   16BC 23          		 INC HL	;
879)   16BD DD 74 03    		 LD (IX + 3), H        ;SAVE X1	;SAVE X1
880)   16C0 DD 75 02    		 LD (IX + 2), L	;
881)   16C3 E5          		 PUSH HL        ;X1	;X1
882)   16C4 DD 66 07    		 LD H, (IX + 7)        ;DDF_X	;DDF_X
883)   16C7 DD 6E 06    		 LD L, (IX + 6)	;
884)   16CA 23          		 INC HL	;
885)   16CB 23          		 INC HL	;
886)   16CC DD 74 07    		 LD (IX + 7), H        ;SAVE DDF_X	;SAVE DDF_X
887)   16CF DD 75 06    		 LD (IX + 6), L	;
888)   16D2 DD 56 09    		 LD D, (IX + 9)        ;F	;F
889)   16D5 DD 5E 08    		 LD E, (IX + 8)	;
890)   16D8 19          		 ADD HL, DE	;
891)   16D9 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
892)   16DC DD 75 08    		 LD (IX + 8), L	;
895)   16DF E1          		 POP HL         ;X1	;X1
896)   16E0 E5          		 PUSH HL	;
897)   16E1 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
898)   16E4 DD 5E 0E    		 LD E, (IX + 14)	;
899)   16E7 D5          		 PUSH DE	;
900)   16E8 19          		 ADD HL, DE	;
901)   16E9 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
902)   16EA DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
903)   16ED DD 6E 0C    		 LD L, (IX + 12)	;
904)   16F0 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
906)   16F1 CD E5 15    		 CALL PLOTP	;
908)   16F4 E1          		 POP HL         ;X	;X
909)   16F5 D1          		 POP DE         ;X1	;X1
910)   16F6 D5          		 PUSH DE	;
911)   16F7 E5          		 PUSH HL	;
912)   16F8 AF          		 XOR A	;
913)   16F9 ED 52       		 SBC HL, DE	;
914)   16FB EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
915)   16FC DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
916)   16FF DD 6E 0C    		 LD L, (IX + 12)	;
917)   1702 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
919)   1703 CD E5 15    		 CALL PLOTP	;
921)   1706 E1          		 POP HL         ;X	;X
922)   1707 D1          		 POP DE         ;X1	;X1
923)   1708 D5          		 PUSH DE	;
924)   1709 E5          		 PUSH HL	;
925)   170A 19          		 ADD HL, DE	;
926)   170B EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
927)   170C DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
928)   170F DD 6E 0C    		 LD L, (IX + 12)	;
929)   1712 AF          		 XOR A	;
930)   1713 ED 42       		 SBC HL, BC        ;HL=Y+Y1	;HL=Y+Y1
932)   1715 CD E5 15    		 CALL PLOTP	;
934)   1718 E1          		 POP HL         ;X	;X
935)   1719 D1          		 POP DE         ;X1	;X1
936)   171A D5          		 PUSH DE	;
937)   171B E5          		 PUSH HL	;
938)   171C AF          		 XOR A	;
939)   171D ED 52       		 SBC HL, DE	;
940)   171F EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
941)   1720 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
942)   1723 DD 6E 0C    		 LD L, (IX + 12)	;
943)   1726 AF          		 XOR A	;
944)   1727 ED 42       		 SBC HL, BC        ;HL=Y-Y1	;HL=Y-Y1
946)   1729 CD E5 15    		 CALL PLOTP	;
948)   172C E1          		 POP HL         ;X	;X
949)   172D D1          		 POP DE         ;X1	;X1
950)   172E C5          		 PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
951)   172F E5          		 PUSH HL        ;SAVE X	;SAVE X
952)   1730 D5          		 PUSH DE        ;SAVE X1	;SAVE X1
953)   1731 09          		 ADD HL, BC        ;	;
954)   1732 C1          		 POP BC         ;BC=X1	;BC=X1
955)   1733 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
956)   1734 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
957)   1737 DD 6E 0C    		 LD L, (IX + 12)	;
958)   173A 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
960)   173B CD E5 15    		 CALL PLOTP	;
962)   173E E1          		 POP HL         ;X	;X
963)   173F D1          		 POP DE         ;Y1	;Y1
964)   1740 D5          		 PUSH DE	;
965)   1741 E5          		 PUSH HL	;
966)   1742 AF          		 XOR A	;
967)   1743 ED 52       		 SBC HL, DE	;
968)   1745 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
969)   1746 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
970)   1749 DD 6E 0C    		 LD L, (IX + 12)	;
971)   174C 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
973)   174D CD E5 15    		 CALL PLOTP	;
975)   1750 E1          		 POP HL         ;X	;X
976)   1751 D1          		 POP DE         ;Y1	;Y1
977)   1752 D5          		 PUSH DE	;
978)   1753 E5          		 PUSH HL	;
979)   1754 19          		 ADD HL, DE	;
980)   1755 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
981)   1756 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
982)   1759 DD 6E 0C    		 LD L, (IX + 12)	;
983)   175C AF          		 XOR A	;
984)   175D ED 42       		 SBC HL, BC        ;HL=Y-X1	;HL=Y-X1
985)   175F E5          		 PUSH HL	;
987)   1760 CD E5 15    		 CALL PLOTP	;
989)   1763 C1          		 POP BC         ;Y-X1	;Y-X1
990)   1764 E1          		 POP HL         ;X	;X
991)   1765 D1          		 POP DE         ;Y1	;Y1
992)   1766 AF          		 XOR A	;
993)   1767 ED 52       		 SBC HL, DE	;
994)   1769 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
995)   176A C5          		 PUSH BC	;
996)   176B E1          		 POP HL         ;HL=Y-X1	;HL=Y-X1
998)   176C CD E5 15    		 CALL PLOTP	;
999)   176F C3 74 16    		 JP CIRC_AGN	;
1000)   1772 CD 5D 13    		CIRC_EXIT: CALL LCD_CLRXY	;
1001)   1775 D1          		 POP DE         ;GET RET ADDR	;GET RET ADDR
1002)   1776 21 10 00    		 LD HL, 8 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
1003)   1779 39          		 ADD HL, SP        ;	;
1004)   177A F9          		 LD SP, HL	;
1005)   177B EB          		 EX DE, HL	;
1006)   177C E9          		 JP (HL)	;
1013)   177D D9          		 EXX	;
1014)   177E D1          		 POP DE         ;save return addr to de'	;save return addr to de'
1015)   177F D9          		 EXX	;
1016)   1780 CD 1E 1A    		 CALL _FILL	;
1017)   1783 D9          		 EXX	;
1018)   1784 D5          		 PUSH DE        ;restore return addr from de'	;restore return addr from de'
1019)   1785 D9          		 EXX	;
1020)   1786 C9          		 RET	;
1027)   1787 FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
1028)   1789 CA 99 17    		 JP Z, PRCH_DOBCKSPC	;
1029)   178C FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
1030)   178E C8          		 RET Z	;
1031)   178F FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
1032)   1791 20 3A       		 JR NZ, PRCH_DOPRN	;
1033)   1793 21 0D FE    		 LD HL, CURSORX	;
1034)   1796 C3 E6 18    		 JP PRCH_NEWLN	;
1036)   1799 21 0D FE    		 LD HL, CURSORX	;
1037)   179C 7E          		 LD A, (HL)	;
1038)   179D 38 05       		 JR C, DOREALBCKSPC	;
1040)   179F FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1041)   17A1 C8          		 RET Z	;
1042)   17A2 35          		 DEC (HL)	;
1043)   17A3 C9          		 RET	;
1045)   17A4 FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1046)   17A6 28 0A       		 JR Z, PRCH_DOBCKSPC2       ;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER	;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER
1047)   17A8 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1048)   17A9 E5          		 PUSH HL	;
1049)   17AA 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
1050)   17AC CD CD 17    		 CALL PRCH_DOPRN       ;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN	;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN
1051)   17AF E1          		 POP HL	;
1052)   17B0 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1053)   17B1 B7          		 OR A	;
1057)   17B2 DD 21 02 00 		 LD IX, 2	;
1058)   17B6 DD 39       		 ADD IX, SP	;
1059)   17B8 DD 66 01    		 LD H, (IX + 1)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1060)   17BB DD 6E 00    		 LD L, (IX)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1061)   17BE 3E 00       		 LD A, 0        ;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG	;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG
1062)   17C0 28 02       		 JR Z, PRCH_SKIP1       ;WE ARE ON COLUMN 1	;WE ARE ON COLUMN 1
1063)   17C2 2B          		 DEC HL         ;PREVIOUS POSITION DELETE BACKSPACE	;PREVIOUS POSITION DELETE BACKSPACE
1064)   17C3 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1066)   17C4 2B          		 DEC HL         ;PREVIOUS POSITION DELETE PREVIOUS CHAR	;PREVIOUS POSITION DELETE PREVIOUS CHAR
1067)   17C5 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1068)   17C6 DD 74 01    		 LD (IX + 1), H        ;PUT POSITION BACK ON STACK IT WILL POPED	;PUT POSITION BACK ON STACK IT WILL POPED
1069)   17C9 DD 75 00    		 LD (IX), L	;
1070)   17CC C9          		 RET	;
1073)   17CD F5          		 PUSH AF        ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
1074)   17CE 32 10 FE    		 LD (LASTCHAR), A       ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
1078)   17D1 3A 16 FE    		 LD A, (VDUMODE)	;
1079)   17D4 FE 05       		 CP 5	;
1080)   17D6 20 19       		 JR NZ, VDU4	;
1081)   17D8 2A 5F FE    		 LD HL, (GR_LASTX)	;
1082)   17DB E5          		 PUSH HL	;
1083)   17DC ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
1084)   17E0 D5          		 PUSH DE	;
1085)   17E1 01 07 00    		 LD BC, FONT_WIDTH - 1	;
1086)   17E4 09          		 ADD HL, BC	;
1087)   17E5 E5          		 PUSH HL	;
1088)   17E6 01 09 00    		 LD BC, FONT_HEIGHT - 1	;
1089)   17E9 EB          		 EX DE, HL	;
1090)   17EA 09          		 ADD HL, BC	;
1091)   17EB E5          		 PUSH HL	;
1092)   17EC CD A8 12    		 CALL LCD_SETXY	;
1093)   17EF 18 34       		 JR PRCHDO	;
1094)   17F1 3A 0D FE    		VDU4: LD A, (CURSORX)	;
1095)   17F4 06 08       		 LD B, FONT_WIDTH	;
1096)   17F6 16 00       		 LD D, 0	;
1097)   17F8 5F          		 LD E, A	;
1098)   17F9 21 00 00    		 LD HL, 0	;
1099)   17FC B7          		 OR A         ; CLEAR CARRY	; CLEAR CARRY
1101)   17FD ED 5A       		 ADC HL, DE	;
1102)   17FF 10 FC       		 DJNZ PRCH_AGN1        ;HL=DE*B	;HL=DE*B
1103)   1801 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1104)   1802 11 08 00    		 LD DE, FONT_WIDTH	;
1105)   1805 ED 5A       		 ADC HL, DE	;
1106)   1807 2B          		 DEC HL	;
1107)   1808 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1109)   1809 CD 5B 18    		 CALL LCD_CALCLINE       ;SCROLL CALC	;SCROLL CALC
1110)   180C 06 0A       		 LD B, FONT_HEIGHT	;
1111)   180E 16 00       		 LD D, 0	;
1112)   1810 5F          		 LD E, A	;
1113)   1811 21 00 00    		 LD HL, 0	;
1115)   1814 ED 5A       		 ADC HL, DE	;
1116)   1816 10 FC       		 DJNZ PRCH_AGN2	;
1117)   1818 D1          		 POP DE         ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
1118)   1819 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1119)   181A D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1120)   181B 11 0A 00    		 LD DE, FONT_HEIGHT	;
1121)   181E ED 5A       		 ADC HL, DE        ;CALC 4TH PARAM	;CALC 4TH PARAM
1122)   1820 2B          		 DEC HL         ;4TH PARAM -1	;4TH PARAM -1
1123)   1821 E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1124)   1822 CD A8 12    		 CALL LCD_SETXY	;
1125)   1825 F1          		PRCHDO: POP AF         ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
1126)   1826 B7          		 OR A	;
1127)   1827 21 00 75    		 LD HL, FONT_ADDR	;
1128)   182A 16 00       		 LD D, 0	;
1129)   182C 5F          		 LD E, A	;
1130)   182D ED 5A       		 ADC HL, DE        ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
1131)   182F E5          		 PUSH HL	;
1132)   1830 D1          		 POP DE         ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
1133)   1831 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
1135)   1833 1A          		 LD A, (DE)        ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1136)   1834 06 08       		 LD B, FONT_WIDTH	;
1138)   1836 CB 27       		 SLA A         ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1139)   1838 38 05       		 JR C, FORECOLOR	;
1140)   183A 2A 03 FE    		 LD HL, (BCOLOR)	;
1141)   183D 18 03       		 JR PRCH_CONT	;
1143)   183F 2A 01 FE    		 LD HL, (FCOLOR)	;
1145)   1842 F5          		 PUSH AF	;
1146)   1843 D5          		 PUSH DE        ;TODO:PROBABLY NOT NEEDED HERE	;TODO:PROBABLY NOT NEEDED HERE
1147)   1844 CD F5 12    		 CALL LCD_SETPIXEL	;
1148)   1847 D1          		 POP DE	;
1149)   1848 F1          		 POP AF	;
1150)   1849 10 EB       		 DJNZ PRCH_AGN4	;
1151)   184B 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1152)   184C 0D          		 DEC C	;
1153)   184D 20 E4       		 JR NZ, PRCH_AGN3	;
1155)   184F 21 0D FE    		 LD HL, CURSORX	;
1156)   1852 7E          		 LD A, (HL)	;
1157)   1853 3C          		 INC A	;
1158)   1854 FE 50       		 CP 80	;
1159)   1856 CA E6 18    		 JP Z, PRCH_NEWLN       ;NEW LINE	;NEW LINE
1160)   1859 77          		 LD (HL), A	;
1161)   185A C9          		 RET	;
1164)   185B 3A 0F FE    		@LCD_CALCLINE: LD A, (SCRLN)	;
1165)   185E 57          		 LD D, A	;
1166)   185F 3A 0E FE    		 LD A, (CURSORY)       ;480/10 MAKES 48 LINES	;480/10 MAKES 48 LINES
1167)   1862 82          		 ADD A, D	;
1168)   1863 FE 30       		 CP TOTLINES	;
1169)   1865 D8          		 RET C	;
1171)   1866 D6 30       		 SUB TOTLINES	;
1172)   1868 C9          		 RET	;
1177)   1869 16 33       		LCD_SETSCROLL: LD D, 0x33	;
1178)   186B CD 2F 11    		 CALL LCD_WR_COM	;
1179)   186E 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
1180)   1870 CD 2B 11    		 CALL LCD_WR_DAT	;
1181)   1873 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
1182)   1875 CD 2B 11    		 CALL LCD_WR_DAT	;
1183)   1878 16 01       		 LD D, 0X01        ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
1184)   187A CD 2B 11    		 CALL LCD_WR_DAT	;
1185)   187D 16 E0       		 LD D, 0XE0        ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
1186)   187F CD 2B 11    		 CALL LCD_WR_DAT	;
1187)   1882 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
1188)   1884 CD 2B 11    		 CALL LCD_WR_DAT	;
1189)   1887 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
1190)   1889 CD 2B 11    		 CALL LCD_WR_DAT	;
1191)   188C AF          		 XOR A	;
1192)   188D 32 0F FE    		 LD (SCRLN), A	;
1193)   1890 C9          		 RET	;
1196)   1891 3A 0F FE    		@LCD_DOSCROLL: LD A, (SCRLN)	;
1197)   1894 3C          		 INC A	;
1198)   1895 FE 30       		 CP TOTLINES	;
1199)   1897 38 02       		 JR C, DS_NXT	;
1200)   1899 D6 30       		 SUB TOTLINES	;
1201)   189B 32 0F FE    		DS_NXT: LD (SCRLN), A	;
1202)   189E 6F          		 LD L, A	;
1203)   189F 26 00       		 LD H, 0	;
1204)   18A1 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1205)   18A2 29          		 ADD HL, HL	;
1206)   18A3 29          		 ADD HL, HL	;
1207)   18A4 5F          		 LD E, A	;
1208)   18A5 16 00       		 LD D, 0	;
1209)   18A7 19          		 ADD HL, DE	;
1210)   18A8 19          		 ADD HL, DE	;
1211)   18A9 16 37       		 LD D, 0x37	;
1212)   18AB CD 2F 11    		 CALL LCD_WR_COM	;
1213)   18AE 54          		 LD D, H        ;NEW TOP SCROLL LINE BYTES HIGH (1-480)	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
1214)   18AF CD 2B 11    		 CALL LCD_WR_DAT	;
1215)   18B2 55          		 LD D, L        ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
1216)   18B3 CD 2B 11    		 CALL LCD_WR_DAT	;
1217)   18B6 C9          		 RET	;
1220)   18B7 11 00 00    		@LCD_CLRTXTLN: LD DE, 0	;
1222)   18BA D5          		 PUSH DE	;
1223)   18BB 6F          		 LD L, A	;
1224)   18BC 26 00       		 LD H, 0	;
1225)   18BE 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1226)   18BF 29          		 ADD HL, HL	;
1227)   18C0 29          		 ADD HL, HL	;
1228)   18C1 5F          		 LD E, A	;
1229)   18C2 16 00       		 LD D, 0	;
1230)   18C4 19          		 ADD HL, DE	;
1231)   18C5 19          		 ADD HL, DE	;
1233)   18C6 E5          		 PUSH HL	;
1234)   18C7 11 0A 00    		 LD DE, FONT_HEIGHT	;
1235)   18CA 19          		 ADD HL, DE	;
1237)   18CB EB          		 EX DE, HL	;
1238)   18CC 21 1F 03    		 LD HL, LCD_WIDTH	;
1240)   18CF E5          		 PUSH HL	;
1241)   18D0 D5          		 PUSH DE        ;PARAM4	;PARAM4
1242)   18D1 CD A8 12    		 CALL LCD_SETXY	;
1243)   18D4 01 40 1F    		 LD BC, 8000        ; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
1244)   18D7 2A 03 FE    		 LD HL, (BCOLOR)	;
1245)   18DA CD F5 12    		CTL_AGN: CALL LCD_SETPIXEL      ;DESTROYS D,A	;DESTROYS D,A
1246)   18DD 0B          		 DEC BC	;
1247)   18DE 78          		 LD A, B	;
1248)   18DF B1          		 OR C	;
1249)   18E0 20 F8       		 JR NZ, CTL_AGN	;
1250)   18E2 CD 5D 13    		 CALL LCD_CLRXY	;
1251)   18E5 C9          		 RET	;
1255)   18E6 AF          		 XOR A	;
1256)   18E7 77          		 LD (HL), A	;
1257)   18E8 23          		 INC HL	;
1258)   18E9 7E          		 LD A, (HL)	;
1259)   18EA 3C          		 INC A	;
1261)   18EB FE 30       		 CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
1262)   18ED 28 02       		 JR Z, PRCH_SCROLL	;
1263)   18EF 77          		 LD (HL), A	;
1264)   18F0 C9          		 RET	;
1266)   18F1 F5          		PRCH_SCROLL: PUSH AF	;
1267)   18F2 E5          		 PUSH HL	;
1269)   18F3 3A 0F FE    		 LD A, (SCRLN)	;
1270)   18F6 CD B7 18    		 CALL LCD_CLRTXTLN	;
1272)   18F9 CD 91 18    		 CALL LCD_DOSCROLL	;
1273)   18FC E1          		 POP HL	;
1274)   18FD F1          		 POP AF	;
1276)   18FE 3D          		 DEC A	;
1277)   18FF 77          		 LD (HL), A        ;CURSORY	;CURSORY
1278)   1900 AF          		 XOR A	;
1279)   1901 32 0D FE    		 LD (CURSORX), A	;
1280)   1904 C9          		 RET	;
1295)   1905 2A 03 FE    		 LD HL, (BCOLOR)       ;	;
1296)   1908 18 03       		 JR LCD_SETCURS	;
1307)   190A 2A 01 FE    		 LD HL, (FCOLOR)       ;COLOR PARAM	;COLOR PARAM
1310)   190D E5          		 PUSH HL        ;COLOR PARAM	;COLOR PARAM
1311)   190E 3A 0D FE    		 LD A, (CURSORX)	;
1312)   1911 06 08       		 LD B, FONT_WIDTH	;
1313)   1913 16 00       		 LD D, 0	;
1314)   1915 5F          		 LD E, A	;
1315)   1916 21 00 00    		 LD HL, 0	;
1316)   1919 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
1318)   191A ED 5A       		 ADC HL, DE	;
1319)   191C 10 FC       		 DJNZ SCUR_AGN1        ;HL = DE * B	;HL = DE * B
1320)   191E E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1321)   191F 01 08 00    		 LD BC, FONT_WIDTH	;
1322)   1922 ED 4A       		 ADC HL, BC        ;NEXT CHAR	;NEXT CHAR
1323)   1924 2B          		 DEC HL         ;MINUS 1	;MINUS 1
1324)   1925 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1326)   1926 CD 5B 18    		 CALL LCD_CALCLINE	;
1327)   1929 06 0A       		 LD B, FONT_HEIGHT	;
1328)   192B 16 00       		 LD D, 0	;
1329)   192D 5F          		 LD E, A	;
1330)   192E 21 00 00    		 LD HL, 0	;
1332)   1931 ED 5A       		 ADC HL, DE	;
1333)   1933 10 FC       		 DJNZ SCUR_AGN2        ;HL=B*DE	;HL=B*DE
1334)   1935 0E 08       		 LD C, FONT_HEIGHT - 2       ;2 PIXEL HEIGTH CURSOR	;2 PIXEL HEIGTH CURSOR
1335)   1937 06 00       		 LD B, 0	;
1336)   1939 ED 4A       		 ADC HL, BC        ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
1337)   193B D1          		 POP DE         ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
1338)   193C E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1339)   193D D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1341)   193E 23          		 INC HL         ; Y2 ADD THE LAST +2 PIXELS	; Y2 ADD THE LAST +2 PIXELS
1342)   193F E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1343)   1940 CD A8 12    		 CALL LCD_SETXY	;
1345)   1943 E1          		 POP HL         ;GET THE COLOR	;GET THE COLOR
1346)   1944 06 10       		 LD B, 2 * FONT_WIDTH       ;2*8=16	;2*8=16
1348)   1946 CD F5 12    		 CALL LCD_SETPIXEL       ;DESTROYS D,A	;DESTROYS D,A
1349)   1949 10 FB       		 DJNZ SCUR_AGN3	;
1354)   194B C9          		 RET	;
1357)   194C CD 5D 13    		 CALL LCD_CLRXY        ;	;
1358)   194F 2A 03 FE    		 LD HL, (BCOLOR)	;
1360)   1952 01 E0 01    		 LD BC, LCD_HEIGHT + 1	;
1361)   1955 C5          		CS_AGNA2: PUSH BC	;
1362)   1956 01 20 03    		 LD BC, LCD_WIDTH + 1	;
1363)   1959 CD F5 12    		CS_AGNA1: CALL LCD_SETPIXEL      ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1364)   195C 0B          		 DEC BC	;
1365)   195D 78          		 LD A, B	;
1366)   195E B1          		 OR C	;
1367)   195F 20 F8       		 JR NZ, CS_AGNA1	;
1368)   1961 C1          		 POP BC	;
1369)   1962 0B          		 DEC BC	;
1370)   1963 78          		 LD A, B	;
1371)   1964 B1          		 OR C	;
1372)   1965 20 EE       		 JR NZ, CS_AGNA2	;
1373)   1967 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1374)   196A 22 0D FE    		 LD (CURSORX), HL	;
1375)   196D C9          		 RET	;
1380)   196E 06 DF       		 LD B, LCD_HEIGHT.AND.0xFF      ;lsb	;lsb
1381)   1970 0E 02       		 LD C, LCD_HEIGHT.SHR.8 + 1      ;MSB+1	;MSB+1
1383)   1972 C5          		 PUSH BC	;
1385)   1973 06 1F       		 LD B, LCD_WIDTH.AND.0xFF      ;lsb	;lsb
1386)   1975 0E 04       		 LD C, LCD_WIDTH.SHR.8 + 1      ;MSV+1	;MSV+1
1388)   1977 CD F5 12    		 CALL LCD_SETPIXEL       ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1389)   197A 10 FB       		 DJNZ CS_AGN1	;
1390)   197C 0D          		 DEC C	;
1391)   197D 20 F8       		 JR NZ, CS_AGN1	;
1392)   197F C1          		 POP BC	;
1393)   1980 10 F0       		 DJNZ CS_AGN2	;
1394)   1982 0D          		 DEC C	;
1395)   1983 20 ED       		 JR NZ, CS_AGN2	;
1396)   1985 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1397)   1988 22 0D FE    		 LD (CURSORX), HL	;
1398)   198B C9          		 RET	;
1404)   198C 7E          		 LD A, (HL)	;
1405)   198D FE 00       		 CP 0	;
1406)   198F C8          		 RET Z	;
1407)   1990 E5          		 PUSH HL	;
1408)   1991 CD 87 17    		 CALL LCD_PRINTCHAR	;
1409)   1994 E1          		 POP HL	;
1410)   1995 23          		 INC HL	;
1411)   1996 18 F4       		 JR LCD_MSG	;
  3)   1998 AF          		NEGHL: xor a	;
  4)   1999 95          		 sub l	;
  5)   199A 6F          		 ld l, a	;
  6)   199B 9F          		 sbc a, a	;
  7)   199C 94          		 sub h	;
  8)   199D 67          		 ld h, a	;
  9)   199E C9          		 RET	;
 13)   199F 2A 79 FE    		 LD HL, (FILL_IDX)	;
 14)   19A2 01 58 02    		 LD BC, MAXQ	;
 15)   19A5 A7          		 AND A	;
 16)   19A6 ED 42       		 SBC HL, BC	;
 17)   19A8 D0          		 RET NC     ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 18)   19A9 2A 7B FE    		 LD HL, (FILL_PY)	;
 19)   19AC ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 20)   19B0 19          		 ADD HL, DE	;
 21)   19B1 7C          		 LD A, H	;
 22)   19B2 FE 80       		 CP 80H	;
 23)   19B4 D0          		 RET NC     ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 24)   19B5 11 1F 03    		 LD DE, LCD_WIDTH	;
 25)   19B8 ED 52       		 SBC HL, DE	;
 26)   19BA D0          		 RET NC      ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 28)   19BB 2A 77 FE    		 LD HL, (FILL_Q)	;
 29)   19BE ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 30)   19C2 78          		 LD A, B	;
 31)   19C3 B1          		 OR C       ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 32)   19C4 28 08       		 JR Z, QPS_NXT1	;
 33)   19C6 EB          		 EX DE, HL	;
 34)   19C7 C5          		 PUSH BC	;
 35)   19C8 E1          		 POP HL	;
 36)   19C9 29          		 ADD HL, HL	;
 37)   19CA 29          		 ADD HL, HL	;
 38)   19CB 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 39)   19CC EB          		 EX DE, HL	;
 40)   19CD 19          		 ADD HL, DE	;
 42)   19CE 11 7B FE    		 LD DE, FILL_PY	;
 43)   19D1 EB          		 EX DE, HL      ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 44)   19D2 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 45)   19D5 ED B0       		 LDIR       ;COPY	;COPY
 46)   19D7 2A 79 FE    		 LD HL, (FILL_IDX)	;
 47)   19DA 23          		 INC HL	;
 48)   19DB 22 79 FE    		 LD (FILL_IDX), HL	;
 49)   19DE C9          		QPS_EXT: RET	;
 51)   19DF 2A 77 FE    		QPOP: LD HL, (FILL_Q)	;
 52)   19E2 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 53)   19E6 0B          		 DEC BC	;
 54)   19E7 C5          		 PUSH BC	;
 55)   19E8 78          		 LD A, B	;
 56)   19E9 B1          		 OR C       ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 57)   19EA 28 08       		 JR Z, QPP_NXT1	;
 58)   19EC EB          		 EX DE, HL	;
 59)   19ED C5          		 PUSH BC	;
 60)   19EE E1          		 POP HL	;
 61)   19EF 29          		 ADD HL, HL	;
 62)   19F0 29          		 ADD HL, HL	;
 63)   19F1 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 64)   19F2 EB          		 EX DE, HL	;
 65)   19F3 19          		 ADD HL, DE	;
 66)   19F4 C1          		QPP_NXT1: POP BC	;
 67)   19F5 ED 43 79 FE 		 LD (FILL_IDX), BC	;
 69)   19F9 11 7B FE    		 LD DE, FILL_PY     ;ORIGIN=QUEUE DEST=FILL_PY	;ORIGIN=QUEUE DEST=FILL_PY
 70)   19FC 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 71)   19FF ED B0       		 LDIR       ;COPY	;COPY
 72)   1A01 2A 7D FE    		 LD HL, (FILL_PXL)	;
 73)   1A04 22 71 FE    		 LD (FILL_X1), HL	;
 74)   1A07 2A 7F FE    		 LD HL, (FILL_PXR)	;
 75)   1A0A 22 73 FE    		 LD (FILL_X2), HL	;
 76)   1A0D ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 77)   1A11 ED 53 75 FE 		 LD (FILL_DY), DE	;
 78)   1A15 2A 7B FE    		 LD HL, (FILL_PY)	;
 79)   1A18 A7          		 AND A	;
 80)   1A19 19          		 ADD HL, DE	;
 81)   1A1A 22 6D FE    		 LD (FILL_Y), HL	;
 89)   1A1D C9          		 RET	;
 91)   1A1E E1          		@_FILL: POP HL     ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 92)   1A1F D1          		 POP DE      ;Y	;Y
 93)   1A20 C1          		 POP BC      ;X	;X
 94)   1A21 E5          		 PUSH HL      ;RET ADDR TO SP	;RET ADDR TO SP
 95)   1A22 ED 43 6B FE 		 LD (FILL_X), BC	;
 96)   1A26 ED 53 6D FE 		 LD (FILL_Y), DE	;
 97)   1A2A ED 73 85 FE 		 LD (FILL_OLDSP), SP	;
 98)   1A2E 21 3E ED    		 LD HL, - ((MAXQ * 8) + 2)  ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
 99)   1A31 39          		 ADD HL, SP	;
100)   1A32 F9          		 LD SP, HL      ;NEW SP	;NEW SP
103)   1A33 22 77 FE    		 LD (FILL_Q), HL     ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
104)   1A36 21 00 00    		 LD HL, 0	;
105)   1A39 22 79 FE    		 LD (FILL_IDX), HL    ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
109)   1A3C 2A 6B FE    		 LD HL, (FILL_X)    ;	;
110)   1A3F E5          		 PUSH HL	;
111)   1A40 2A 6D FE    		 LD HL, (FILL_y)    ;	;
112)   1A43 E5          		 PUSH HL	;
113)   1A44 CD 0C 13    		 CALL LCD_READPIXEL	;
114)   1A47 22 83 FE    		 LD (FILL_OV), HL	;
116)   1A4A ED 5B 01 FE 		 LD DE, (FCOLOR)	;
117)   1A4E A7          		 AND A	;
118)   1A4F ED 52       		 SBC HL, DE      ;CHK OV=NV	;CHK OV=NV
119)   1A51 CA D6 1B    		 JP Z, FL_EXIT	;
120)   1A54 2A 6B FE    		 LD HL, (FILL_X)	;
121)   1A57 7C          		 LD A, H	;
122)   1A58 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
123)   1A5A D2 D6 1B    		 JP NC, FL_EXIT	;
124)   1A5D 11 1F 03    		 LD DE, LCD_WIDTH	;
125)   1A60 A7          		 AND A	;
126)   1A61 ED 52       		 SBC HL, DE      ;CHK>799	;CHK>799
127)   1A63 D2 D6 1B    		 JP NC, FL_EXIT	;
128)   1A66 2A 6D FE    		 LD HL, (FILL_Y)	;
129)   1A69 7C          		 LD A, H	;
130)   1A6A FE 80       		 CP 0x80      ;CHK <0	;CHK <0
131)   1A6C D2 D6 1B    		 JP NC, FL_EXIT	;
132)   1A6F 11 DF 01    		 LD DE, LCD_HEIGHT	;
133)   1A72 A7          		 AND A	;
134)   1A73 ED 52       		 SBC HL, DE      ;CHK>480	;CHK>480
135)   1A75 D2 D6 1B    		 JP NC, FL_EXIT	;
137)   1A78 2A 6D FE    		 LD HL, (FILL_Y)	;
138)   1A7B 22 7B FE    		 LD (FILL_PY), HL	;
139)   1A7E 2A 6B FE    		 LD HL, (FILL_X)	;
140)   1A81 22 7D FE    		 LD (FILL_PXL), HL	;
141)   1A84 22 7F FE    		 LD (FILL_PXR), HL	;
142)   1A87 21 01 00    		 LD HL, 1	;
143)   1A8A 22 81 FE    		 LD (FILL_PDY), HL	;
144)   1A8D CD 9F 19    		 CALL QPUSH      ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
146)   1A90 2A 6D FE    		 LD HL, (FILL_Y)	;
147)   1A93 23          		 INC HL	;
148)   1A94 22 7B FE    		 LD (FILL_PY), HL	;
149)   1A97 21 FF FF    		 LD HL, - 1	;
150)   1A9A 22 81 FE    		 LD (FILL_PDY), HL	;
151)   1A9D CD 9F 19    		 CALL QPUSH	;
153)   1AA0 ED 5B 79 FE 		 LD DE, (FILL_IDX)	;
154)   1AA4 7A          		 LD A, D	;
155)   1AA5 B3          		 OR E	;
156)   1AA6 CA D6 1B    		 JP Z, FL_EXIT     ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
160)   1AA9 CD DF 19    		 CALL QPOP      ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
163)   1AAC 2A 71 FE    		 LD HL, (FILL_X1)	;
164)   1AAF 22 6B FE    		 LD (FILL_X), HL	;
165)   1AB2 7C          		FL_LP1: LD A, H	;
166)   1AB3 FE 80       		 CP 0x80      ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
167)   1AB5 D2 DD 1A    		 JP NC, FL_NXT1	;
168)   1AB8 ED 5B 6D FE 		 LD DE, (FILL_Y)	;
169)   1ABC E5          		 PUSH HL	;
170)   1ABD D5          		 PUSH DE	;
171)   1ABE CD 0C 13    		 CALL LCD_READPIXEL	;
172)   1AC1 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
173)   1AC5 A7          		 AND A	;
174)   1AC6 ED 52       		 SBC HL, DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
175)   1AC8 C2 DD 1A    		 JP NZ, FL_NXT1	;
176)   1ACB ED 5B 6B FE 		 LD DE, (FILL_X)	;
177)   1ACF 2A 6D FE    		 LD HL, (FILL_Y)	;
178)   1AD2 D5          		 PUSH DE	;
179)   1AD3 CD E5 15    		 CALL PLOTP	;
180)   1AD6 E1          		 POP HL	;
181)   1AD7 2B          		 DEC HL	;
182)   1AD8 22 6B FE    		 LD (FILL_X), HL	;
183)   1ADB 18 D5       		 JR FL_LP1	;
187)   1ADD 2A 6B FE    		 LD HL, (FILL_X)	;
188)   1AE0 ED 5B 71 FE 		 LD DE, (FILL_X1)	;
189)   1AE4 7C          		 LD A, H	;
190)   1AE5 FE 80       		 CP 80H	;
191)   1AE7 30 08       		 JR NC, FL_NXT1A     ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
192)   1AE9 A7          		 AND A	;
193)   1AEA ED 52       		 SBC HL, DE      ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
194)   1AEC D2 94 1B    		 JP NC, FL_SKIP     ;C IF DE>HL X1>X, NC IF X>=X1	;C IF DE>HL X1>X, NC IF X>=X1
195)   1AEF ED 5A       		 ADC HL, DE	;
198)   1AF1 23          		 INC HL	;
199)   1AF2 22 6F FE    		 LD (FILL_L), HL	;
202)   1AF5 A7          		 AND A	;
203)   1AF6 ED 52       		 SBC HL, DE      ;CHK L-X1	;CHK L-X1
204)   1AF8 30 1E       		 JR NC, FL_NXT2     ;C IF DE>HL X1>L	;C IF DE>HL X1>L
205)   1AFA 28 1C       		 JR Z, FL_NXT2	;
206)   1AFC ED 5A       		 ADC HL, DE	;
207)   1AFE 22 7D FE    		 LD (FILL_PXL), HL    ;L	;L
208)   1B01 2A 6D FE    		 LD HL, (FILL_Y)	;
209)   1B04 22 7B FE    		 LD (FILL_PY), HL	;
210)   1B07 1B          		 DEC DE	;
211)   1B08 ED 53 7F FE 		 LD (FILL_PXR), DE	;
212)   1B0C 2A 75 FE    		 LD HL, (FILL_DY)	;
213)   1B0F CD 98 19    		 CALL NEGHL	;
214)   1B12 22 81 FE    		 LD (FILL_PDY), HL	;
215)   1B15 CD 9F 19    		 CALL QPUSH	;
219)   1B18 2A 71 FE    		 LD HL, (FILL_X1)     ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
220)   1B1B 23          		 INC HL	;
221)   1B1C 22 6B FE    		 LD (FILL_X), HL	;
225)   1B1F 11 1F 03    		 LD DE, LCD_WIDTH	;
226)   1B22 A7          		 AND A	;
227)   1B23 EB          		 EX DE, HL	;
228)   1B24 ED 52       		 SBC HL, DE      ;800-(X=DE)	;800-(X=DE)
229)   1B26 38 24       		 JR C, FL_NXT3     ;C IF X>800	;C IF X>800
230)   1B28 EB          		 EX DE, HL      ;HL=X	;HL=X
231)   1B29 E5          		 PUSH HL	;
232)   1B2A 2A 6D FE    		 LD HL, (FILL_Y)	;
233)   1B2D E5          		 PUSH HL	;
234)   1B2E CD 0C 13    		 CALL LCD_READPIXEL	;
235)   1B31 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
236)   1B35 A7          		 AND A	;
237)   1B36 ED 52       		 SBC HL, DE      ;PIXELREAD=OV	;PIXELREAD=OV
238)   1B38 20 12       		 JR NZ, FL_NXT3	;
239)   1B3A ED 5B 6B FE 		 LD DE, (FILL_X)	;
240)   1B3E 2A 6D FE    		 LD HL, (FILL_Y)	;
241)   1B41 D5          		 PUSH DE	;
242)   1B42 CD E5 15    		 CALL PLOTP	;
243)   1B45 E1          		 POP HL	;
244)   1B46 23          		 INC HL	;
245)   1B47 22 6B FE    		 LD (FILL_X), HL	;
246)   1B4A 18 D3       		 JR FL_LP2	;
249)   1B4C 2A 6D FE    		 LD HL, (FILL_Y)	;
250)   1B4F 22 7B FE    		 LD (FILL_PY), HL	;
251)   1B52 2A 6F FE    		 LD HL, (FILL_L)	;
252)   1B55 22 7D FE    		 LD (FILL_PXL), HL	;
253)   1B58 2A 6B FE    		 LD HL, (FILL_X)	;
254)   1B5B 2B          		 DEC HL	;
255)   1B5C 22 7F FE    		 LD (FILL_PXR), HL	;
256)   1B5F 2A 75 FE    		 LD HL, (FILL_DY)	;
257)   1B62 22 81 FE    		 LD (FILL_PDY), HL	;
258)   1B65 CD 9F 19    		 CALL QPUSH	;
260)   1B68 2A 6B FE    		 LD HL, (FILL_X)	;
261)   1B6B ED 5B 73 FE 		 LD DE, (FILL_X2)	;
262)   1B6F 13          		 INC DE	;
263)   1B70 A7          		 AND A	;
264)   1B71 ED 52       		 SBC HL, DE      ;X-(X2+1) C IF X2+1>X	;X-(X2+1) C IF X2+1>X
265)   1B73 38 1F       		 JR C, FL_NXT4	;
266)   1B75 28 1D       		 JR Z, FL_NXT4	;
267)   1B77 2A 6D FE    		 LD HL, (FILL_Y)	;
268)   1B7A 22 7B FE    		 LD (FILL_PY), HL	;
269)   1B7D ED 53 7D FE 		 LD (FILL_PXL), DE	;
270)   1B81 2A 6B FE    		 LD HL, (FILL_X)    ;	;
271)   1B84 2B          		 DEC HL	;
272)   1B85 22 7F FE    		 LD (FILL_PXR), HL	;
273)   1B88 2A 75 FE    		 LD HL, (FILL_DY)	;
274)   1B8B CD 98 19    		 CALL NEGHL	;
275)   1B8E 22 81 FE    		 LD (FILL_PDY), HL	;
276)   1B91 CD 9F 19    		 CALL QPUSH	;
279)   1B94 2A 6B FE    		 LD HL, (FILL_X)	;
280)   1B97 23          		 INC HL	;
281)   1B98 22 6B FE    		 LD (FILL_X), HL	;
282)   1B9B ED 5B 73 FE 		FL_LP3: LD DE, (FILL_X2)	;
283)   1B9F A7          		 AND A	;
284)   1BA0 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
285)   1BA1 ED 52       		 SBC HL, DE      ;C IF DE>HL X>X2	;C IF DE>HL X>X2
286)   1BA3 38 1C       		 JR C, FL_NXT5	;
287)   1BA5 19          		 ADD HL, DE      ;	;
288)   1BA6 EB          		 EX DE, HL      ;X=HL X2=DE	;X=HL X2=DE
289)   1BA7 E5          		 PUSH HL	;
290)   1BA8 2A 6D FE    		 LD HL, (FILL_Y)	;
291)   1BAB E5          		 PUSH HL	;
292)   1BAC CD 0C 13    		 CALL LCD_READPIXEL	;
293)   1BAF ED 5B 83 FE 		 LD DE, (FILL_OV)	;
294)   1BB3 A7          		 AND A	;
295)   1BB4 ED 52       		 SBC HL, DE      ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
296)   1BB6 28 09       		 JR Z, FL_NXT5	;
297)   1BB8 2A 6B FE    		 LD HL, (FILL_X)	;
298)   1BBB 23          		 INC HL	;
299)   1BBC 22 6B FE    		 LD (FILL_X), HL	;
300)   1BBF 18 DA       		 JR FL_LP3	;
303)   1BC1 2A 6B FE    		 LD HL, (FILL_X)	;
304)   1BC4 22 6F FE    		 LD (FILL_L), HL	;
306)   1BC7 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
307)   1BCB A7          		 AND A	;
308)   1BCC EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
309)   1BCD ED 52       		 SBC HL, DE      ;X2-X C IF X>X2	;X2-X C IF X>X2
310)   1BCF EB          		 EX DE, HL      ;X=HL X2-X=DE	;X=HL X2-X=DE
311)   1BD0 DA A0 1A    		 JP C, FL_LP0    ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
312)   1BD3 C3 1F 1B    		 JP FL_LP2      ;GOTO DO WHILE	;GOTO DO WHILE
315)   1BD6 21 C2 12    		FL_EXIT: LD HL, (MAXQ * 8) + 2  ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
316)   1BD9 39          		 ADD HL, SP	;
317)   1BDA F9          		 LD SP, HL      ;NEW SP	;NEW SP
318)   1BDB C9          		 RET	;
  9)   1BDC FE 01       		 CP 1         ;IS IT FOR GRAPHICS?	;IS IT FOR GRAPHICS?
 10)   1BDE 28 0E       		 JR Z, GRCOLS	;
 11)   1BE0 21 03 FE    		 LD HL, BCOLOR	;
 12)   1BE3 22 69 FE    		 LD (GR_PARAM4), HL	;
 13)   1BE6 21 01 FE    		 LD HL, FCOLOR	;
 14)   1BE9 22 67 FE    		 LD (GR_PARAM3), HL	;
 15)   1BEC 18 0C       		 JR BS_DOCOL	;
 16)   1BEE 21 07 FE    		GRCOLS: LD HL, BGRCOL	;
 17)   1BF1 22 69 FE    		 LD (GR_PARAM4), HL	;
 18)   1BF4 21 05 FE    		 LD HL, FGRCOL	;
 19)   1BF7 22 67 FE    		 LD (GR_PARAM3), HL	;
 20)   1BFA CD 94 5E    		BS_DOCOL: CALL EXPRI       ;GET 1ST PARAM	;GET 1ST PARAM
 21)   1BFD D9          		 EXX	;
 22)   1BFE FD 7E 00    		 LD A, (IY)	;
 23)   1C01 FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
 24)   1C03 28 32       		 JR Z, COLSEL	;
 25)   1C05 FE 3A       		 CP ':'	;
 26)   1C07 28 2E       		 JR Z, COLSEL	;
 27)   1C09 FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
 28)   1C0B C2 AA 1F    		 JP NZ, GRPHERR	;
 30)   1C0E E5          		 PUSH HL        ;SAVE 1ST PARAM	;SAVE 1ST PARAM
 31)   1C0F FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
 32)   1C11 CD 94 5E    		 CALL EXPRI        ;GET 2ND PARAM	;GET 2ND PARAM
 33)   1C14 D9          		 EXX	;
 34)   1C15 D1          		 POP DE         ;RESTORE 1ST PARAM ON DE HL HAS THE 2ND	;RESTORE 1ST PARAM ON DE HL HAS THE 2ND
 35)   1C16 7B          		 LD A, E	;
 36)   1C17 D6 80       		 SUB 128	;
 37)   1C19 38 07       		 JR C, COLFC	;
 38)   1C1B 5F          		 LD E, A	;
 39)   1C1C DD 21 37 FE 		 LD IX, BCOLPAL	;
 40)   1C20 18 04       		 JR DOPALCOL	;
 41)   1C22 DD 21 17 FE 		COLFC: LD IX, FCOLPAL	;
 43)   1C26 7B          		 LD A, E	;
 44)   1C27 FE 0F       		 CP 15         ;MAX 16 COLORS	;MAX 16 COLORS
 45)   1C29 D2 AA 1F    		 JP NC, GRPHERR	;
 46)   1C2C DD 19       		 ADD IX, DE	;
 47)   1C2E DD 19       		 ADD IX, DE        ;2*DE CAUSE ITS A 2 BYTE ARRAY	;2*DE CAUSE ITS A 2 BYTE ARRAY
 48)   1C30 DD 75 00    		 LD (IX), L        ;SAVE THE NEW COLOR	;SAVE THE NEW COLOR
 49)   1C33 DD 74 01    		 LD (IX + 1), H	;
 50)   1C36 C9          		 RET	;
 53)   1C37 E5          		 PUSH HL	;
 54)   1C38 D1          		 POP DE	;
 55)   1C39 7B          		 LD A, E	;
 56)   1C3A D6 80       		 SUB 128        ;CHECK MSB	;CHECK MSB
 57)   1C3C 38 11       		 JR C, CFC	;
 58)   1C3E 5F          		 LD E, A	;
 59)   1C3F DD 21 69 FE 		 LD IX, GR_PARAM4	;
 60)   1C43 DD 6E 00    		 LD L, (IX)	;
 61)   1C46 DD 66 01    		 LD H, (IX + 1)	;
 62)   1C49 DD 21 37 FE 		 LD IX, BCOLPAL        ;BACKCOLOR	;BACKCOLOR
 63)   1C4D 18 0E       		 JR SFC	;
 64)   1C4F DD 21 67 FE 		CFC: LD IX, GR_PARAM3	;
 65)   1C53 DD 6E 00    		 LD L, (IX)	;
 66)   1C56 DD 66 01    		 LD H, (IX + 1)	;
 67)   1C59 DD 21 17 FE 		 LD IX, FCOLPAL        ;FRONTCOLOR	;FRONTCOLOR
 68)   1C5D 7B          		SFC: LD A, E	;
 69)   1C5E FE 10       		 CP 16         ;MAX 16 COLORS	;MAX 16 COLORS
 70)   1C60 D2 AA 1F    		 JP NC, GRPHERR	;
 71)   1C63 DD 19       		 ADD IX, DE	;
 72)   1C65 DD 19       		 ADD IX, DE	;
 73)   1C67 DD 56 00    		 LD D, (IX)	;
 74)   1C6A DD 5E 01    		 LD E, (IX + 1)	;
 75)   1C6D 72          		 LD (HL), D        ;SAVE AGAIN	;SAVE AGAIN
 76)   1C6E 23          		 INC HL	;
 77)   1C6F 73          		 LD (HL), E	;
 78)   1C70 C9          		 RET	;
 84)   1C71 AF          		 XOR A	;
 85)   1C72 21 63 FE    		 LD HL, GR_PARAM1	;
 87)   1C75 F5          		 PUSH AF	;
 88)   1C76 E5          		 PUSH HL	;
 89)   1C77 CD 94 5E    		 CALL EXPRI        ;GET 1ST PARAM	;GET 1ST PARAM
 90)   1C7A D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
 91)   1C7B D1          		 POP DE         ;GET PARAM ADDRESS	;GET PARAM ADDRESS
 92)   1C7C EB          		 EX DE, HL	;
 93)   1C7D 73          		 LD (HL), E	;
 94)   1C7E 23          		 INC HL	;
 95)   1C7F 72          		 LD (HL), D	;
 96)   1C80 23          		 INC HL         ;PARAM SAVED	;PARAM SAVED
 97)   1C81 F1          		 POP AF	;
 98)   1C82 3C          		 INC A	;
 99)   1C83 FE 04       		 CP 4	;
100)   1C85 C8          		 RET Z	;
101)   1C86 F5          		 PUSH AF	;
102)   1C87 FD 7E 00    		 LD A, (IY)	;
103)   1C8A FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
104)   1C8C 28 0D       		 JR Z, NOMORE	;
105)   1C8E FE 3A       		 CP ':'         ;FINISHED COMD LINE	;FINISHED COMD LINE
106)   1C90 28 09       		 JR Z, NOMORE	;
107)   1C92 FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
108)   1C94 20 05       		 JR NZ, NOMORE	;
109)   1C96 FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
110)   1C98 F1          		 POP AF	;
111)   1C99 18 DA       		 JR GBP_NXT	;
112)   1C9B F1          		NOMORE: POP AF	;
113)   1C9C C9          		 RET	;
118)   1C9D 01 08 00    		 LD BC, 8        ;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD	;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD
119)   1CA0 11 57 FE    		 LD DE, GR_LASTX3	;
120)   1CA3 21 5B FE    		 LD HL, GR_LASTX2	;
121)   1CA6 ED B0       		 LDIR	;
122)   1CA8 2A 63 FE    		 LD HL, (GR_PARAM1)	;
123)   1CAB 22 5F FE    		 LD (GR_LASTX), HL       ;SAVE TO LAST	;SAVE TO LAST
124)   1CAE 2A 65 FE    		 LD HL, (GR_PARAM2)	;
125)   1CB1 22 61 FE    		 LD (GR_LASTY), HL       ;SAVE TO LAST	;SAVE TO LAST
126)   1CB4 C9          		 RET	;
130)   1CB5 CD 71 1C    		 CALL GETBASICPARAMS	;
131)   1CB8 FE 02       		 CP 2	;
132)   1CBA C2 AA 1F    		 JP NZ, GRPHERR	;
133)   1CBD CD D7 1D    		BAS_DODRAW: CALL GRPH_SAVECOLORS	;
134)   1CC0 FD E5       		 PUSH IY	;
137)   1CC2 2A 5F FE    		 LD HL, (GR_LASTX)	;
138)   1CC5 E5          		 PUSH HL	;
139)   1CC6 2A 61 FE    		 LD HL, (GR_LASTY)	;
140)   1CC9 E5          		 PUSH HL	;
141)   1CCA CD 9D 1C    		 CALL GRPH_SAVELASTPOS	;
142)   1CCD 2A 63 FE    		 LD HL, (GR_PARAM1)	;
143)   1CD0 E5          		 PUSH HL	;
144)   1CD1 2A 65 FE    		 LD HL, (GR_PARAM2)	;
145)   1CD4 E5          		 PUSH HL	;
146)   1CD5 CD 02 14    		 CALL LCD_DRAWLINE	;
148)   1CD8 FD E1       		 POP IY	;
149)   1CDA CD EE 1D    		 CALL GRPH_RESTORECOLORS	;
150)   1CDD C9          		 RET         ;RETURN TO BASIC	;RETURN TO BASIC
154)   1CDE CD 71 1C    		@BAS_MOVE: CALL GETBASICPARAMS	;
155)   1CE1 FE 02       		 CP 2	;
156)   1CE3 C2 AA 1F    		 JP NZ, GRPHERR	;
158)   1CE6 CD 9D 1C    		 CALL GRPH_SAVELASTPOS	;
159)   1CE9 C9          		 RET	;
165)   1CEA CD 71 1C    		@BAS_POINT: CALL GETBASICPARAMS	;
166)   1CED FE 02       		 CP 2	;
167)   1CEF C2 AA 1F    		 JP NZ, GRPHERR	;
170)   1CF2 2A 63 FE    		 LD HL, (GR_PARAM1)	;
171)   1CF5 E5          		 PUSH HL	;
172)   1CF6 2A 65 FE    		 LD HL, (GR_PARAM2)	;
173)   1CF9 E5          		 PUSH HL	;
174)   1CFA CD 0C 13    		 CALL LCD_READPIXEL	;
178)   1CFD FD 7E 00    		 LD A, (IY)	;
179)   1D00 FE 29       		 CP ')'	;
180)   1D02 C2 AA 1F    		 JP NZ, GRPHERR	;
181)   1D05 FD 23       		 INC IY	;
184)   1D07 01 00 00    		 LD BC, 0	;
185)   1D0A F3          		 DI	;
186)   1D0B E5          		 PUSH HL	;
187)   1D0C D9          		 EXX	;
188)   1D0D E1          		 POP HL	;
189)   1D0E D9          		 EXX	;
190)   1D0F 21 00 00    		 LD HL, 0	;
191)   1D12 FB          		 EI	;
192)   1D13 C9          		 RET	;
198)   1D14 FE 00       		GRPH_GETGROUP: CP 0	;
200)   1D16 21 1A 1F    		 LD HL, PLOT00	;
201)   1D19 C8          		 RET Z	;
202)   1D1A FE 0A       		 CP 80.SHR.3	;
203)   1D1C 21 2A 1F    		 LD HL, PLOT80	;
204)   1D1F C8          		 RET Z	;
205)   1D20 FE 0C       		 CP 96.SHR.3	;
206)   1D22 21 3A 1F    		 LD HL, PLOT96	;
207)   1D25 C8          		 RET Z	;
208)   1D26 FE 10       		 CP 128.SHR.3	;
209)   1D28 21 4A 1F    		 LD HL, PLOT128	;
210)   1D2B C8          		 RET Z	;
211)   1D2C FE 12       		 CP 144.SHR.3	;
212)   1D2E 21 5A 1F    		 LD HL, PLOT144	;
213)   1D31 C8          		 RET Z	;
214)   1D32 FE 13       		 CP 152.SHR.3	;
215)   1D34 21 6A 1F    		 LD HL, PLOT152	;
216)   1D37 C8          		 RET Z	;
217)   1D38 FE 14       		 CP 160.SHR.3	;
218)   1D3A 21 7A 1F    		 LD HL, PLOT160	;
219)   1D3D C8          		 RET Z	;
220)   1D3E FE 18       		 CP 192.SHR.3	;
221)   1D40 21 8A 1F    		 LD HL, PLOT192	;
222)   1D43 C8          		 RET Z	;
223)   1D44 FE 19       		 CP 200.SHR.3	;
224)   1D46 21 9A 1F    		 LD HL, PLOT200	;
225)   1D49 C8          		 RET Z	;
226)   1D4A 21 00 00    		 LD HL, 0	;
227)   1D4D C9          		 RET	;
230)   1D4E CD 71 1C    		@BAS_PLOT: CALL GETBASICPARAMS	;
231)   1D51 FE 03       		 CP 3	;
232)   1D53 C2 AA 1F    		 JP NZ, GRPHERR	;
233)   1D56 3A 63 FE    		 LD A, (GR_PARAM1)	;
235)   1D59 01 04 00    		 LD BC, 4	;
236)   1D5C 21 65 FE    		 LD HL, GR_PARAM2	;
237)   1D5F 11 63 FE    		 LD DE, GR_PARAM1	;
238)   1D62 ED B0       		 LDIR	;
239)   1D64 47          		 LD B, A        ;COMMAND GROUP 5 BITS	;COMMAND GROUP 5 BITS
240)   1D65 CB 38       		 SRL B	;
241)   1D67 CB 38       		 SRL B	;
242)   1D69 CB 38       		 SRL B	;
243)   1D6B E6 07       		 AND 7	;
244)   1D6D 4F          		 LD C, A        ;SPECIFIC COMMAND IN GROUP	;SPECIFIC COMMAND IN GROUP
245)   1D6E 78          		 LD A, B	;
246)   1D6F CD 14 1D    		 CALL GRPH_GETGROUP	;
247)   1D72 7C          		 LD A, H	;
248)   1D73 FE 00       		 CP 0	;
249)   1D75 C8          		 RET Z        ;RET IF HL=0 GROUP NOT IMPLEMENTED	;RET IF HL=0 GROUP NOT IMPLEMENTED
250)   1D76 06 00       		 LD B, 0	;
251)   1D78 CB 21       		 SLA C         ;C=C*2 2BYTE ADDRESSES	;C=C*2 2BYTE ADDRESSES
252)   1D7A 09          		 ADD HL, BC        ;C IS 0-7 SPECIFIC COMMD	;C IS 0-7 SPECIFIC COMMD
253)   1D7B 5E          		 LD E, (HL)	;
254)   1D7C 23          		 INC HL	;
255)   1D7D 56          		 LD D, (HL)	;
256)   1D7E EB          		 EX DE, HL	;
257)   1D7F E9          		 JP (HL)	;
259)   1D80 AF          		GRPH_NOTIMPL: XOR A	;
260)   1D81 CD F0 46    		 CALL EXTERR	;
261)   1D84 4E 4F 54 20 		 DEFM 'NOT IMPLEMENTED'	;
261)   1D88 49 4D 50 4C 		 DEFM 'NOT IMPLEMENTED'	;
261)   1D8C 45 4D 45 4E 		 DEFM 'NOT IMPLEMENTED'	;
261)   1D90 54 45 44    		 DEFM 'NOT IMPLEMENTED'	;
262)   1D93 00          		 DEFB    0	;
266)   1D94 2A 63 FE    		GRPH_CALCREL: LD HL, (GR_PARAM1)	;
267)   1D97 ED 5B 5F FE 		 LD DE, (GR_LASTX)	;
268)   1D9B 19          		 ADD HL, DE	;
269)   1D9C 22 63 FE    		 LD (GR_PARAM1), HL	;
270)   1D9F 2A 65 FE    		 LD HL, (GR_PARAM2)	;
271)   1DA2 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
272)   1DA6 19          		 ADD HL, DE	;
273)   1DA7 22 65 FE    		 LD (GR_PARAM2), HL	;
274)   1DAA C9          		 RET	;
277)   1DAB CD 94 1D    		 CALL GRPH_CALCREL	;
278)   1DAE CD 9D 1C    		 CALL GRPH_SAVELASTPOS	;
279)   1DB1 C9          		 RET	;
282)   1DB2 CD 94 1D    		 CALL GRPH_CALCREL	;
283)   1DB5 CD BD 1C    		 CALL BAS_DODRAW	;
284)   1DB8 C9          		 RET	;
287)   1DB9 2A 01 FE    		 LD HL, (FCOLOR)	;
288)   1DBC E5          		 PUSH HL	;
289)   1DBD 2A 03 FE    		 LD HL, (BCOLOR)	;
290)   1DC0 22 01 FE    		 LD (FCOLOR), HL	;
291)   1DC3 E1          		 POP HL	;
292)   1DC4 22 03 FE    		 LD (BCOLOR), HL	;
293)   1DC7 C9          		 RET	;
296)   1DC8 2A 05 FE    		 LD HL, (FGRCOL)	;
297)   1DCB E5          		 PUSH HL	;
298)   1DCC 2A 07 FE    		 LD HL, (BGRCOL)	;
299)   1DCF 22 05 FE    		 LD (FGRCOL), HL	;
300)   1DD2 E1          		 POP HL	;
301)   1DD3 22 07 FE    		 LD (BGRCOL), HL	;
302)   1DD6 C9          		 RET	;
306)   1DD7 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
307)   1DDA 21 01 FE    		 LD HL, FCOLOR	;
308)   1DDD 11 09 FE    		 LD DE, FCOLTM	;
309)   1DE0 ED B0       		 LDIR	;
310)   1DE2 01 04 00    		 LD BC, 4       ;2 FGRCOL + 2 BGRCOL	;2 FGRCOL + 2 BGRCOL
311)   1DE5 21 05 FE    		 LD HL, FGRCOL	;
312)   1DE8 11 01 FE    		 LD DE, FCOLOR	;
313)   1DEB ED B0       		 LDIR	;
314)   1DED C9          		 RET	;
318)   1DEE 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
319)   1DF1 21 09 FE    		 LD HL, FCOLTM	;
320)   1DF4 11 01 FE    		 LD DE, FCOLOR	;
321)   1DF7 ED B0       		 LDIR	;
322)   1DF9 C9          		 RET	;
326)   1DFA CD C8 1D    		 CALL GRPH_SWAPGRCOLS	;
327)   1DFD CD 94 1D    		 CALL GRPH_CALCREL	;
328)   1E00 CD BD 1C    		 CALL BAS_DODRAW	;
329)   1E03 CD C8 1D    		 CALL GRPH_SWAPGRCOLS	;
330)   1E06 C9          		 RET	;
333)   1E07 CD C8 1D    		 CALL GRPH_SWAPGRCOLS	;
334)   1E0A CD BD 1C    		 CALL BAS_DODRAW	;
335)   1E0D CD C8 1D    		 CALL GRPH_SWAPGRCOLS	;
336)   1E10 C9          		 RET	;
339)   1E11 CD BD 1C    		 CALL BAS_DODRAW       ;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT	;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT
340)   1E14 2A 57 FE    		 LD HL, (GR_LASTX3)	;
341)   1E17 22 63 FE    		 LD (GR_PARAM1), HL	;
342)   1E1A 2A 59 FE    		 LD HL, (GR_LASTY3)	;
343)   1E1D 22 65 FE    		 LD (GR_PARAM2), HL	;
344)   1E20 CD BD 1C    		 CALL BAS_DODRAW       ;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT	;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT
345)   1E23 2A 57 FE    		 LD HL, (GR_LASTX3)	;
346)   1E26 22 63 FE    		 LD (GR_PARAM1), HL	;
347)   1E29 2A 59 FE    		 LD HL, (GR_LASTY3)	;
348)   1E2C 22 65 FE    		 LD (GR_PARAM2), HL	;
349)   1E2F CD BD 1C    		 CALL BAS_DODRAW       ;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT	;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT
350)   1E32 01 04 00    		 LD BC, 4	;
351)   1E35 21 57 FE    		 LD HL, GR_LASTX3	;
352)   1E38 11 5F FE    		 LD DE, GR_LASTX	;
353)   1E3B ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
354)   1E3D C9          		 RET	;
356)   1E3E CD C8 1D    		GRPH_TRIANGLEBC: CALL GRPH_SWAPGRCOLS	;
357)   1E41 CD 11 1E    		 CALL GRPH_TRIANGLE	;
358)   1E44 CD C8 1D    		 CALL GRPH_SWAPGRCOLS	;
359)   1E47 C9          		 RET	;
362)   1E48 21 63 FE    		GRPH_RECT: LD HL, GR_PARAM1	;
363)   1E4B 11 67 FE    		 LD DE, GR_PARAM3	;
364)   1E4E 01 04 00    		 LD BC, 4	;
365)   1E51 ED B0       		 LDIR         ;COPY PARAM1,2 TO 3,4	;COPY PARAM1,2 TO 3,4
366)   1E53 2A 61 FE    		 LD HL, (GR_LASTY)	;
367)   1E56 E5          		 PUSH HL        ;PT1_Y	;PT1_Y
368)   1E57 2A 5F FE    		 LD HL, (GR_LASTX)	;
369)   1E5A E5          		 PUSH HL        ;PT1_X	;PT1_X
370)   1E5B 2A 61 FE    		 LD HL, (GR_LASTY)	;
371)   1E5E 22 65 FE    		 LD (GR_PARAM2), HL	;
372)   1E61 CD BD 1C    		 CALL BAS_DODRAW       ;PT1_X,PT1_Y TO PT2_X,PT1_Y	;PT1_X,PT1_Y TO PT2_X,PT1_Y
373)   1E64 2A 69 FE    		 LD HL, (GR_PARAM4)	;
374)   1E67 22 65 FE    		 LD (GR_PARAM2), HL	;
375)   1E6A CD BD 1C    		 CALL BAS_DODRAW       ;PT2_X,PT1_Y TO PT2_X,PT2_Y	;PT2_X,PT1_Y TO PT2_X,PT2_Y
376)   1E6D E1          		 POP HL         ;PT1_X	;PT1_X
377)   1E6E 22 63 FE    		 LD (GR_PARAM1), HL	;
378)   1E71 CD BD 1C    		 CALL BAS_DODRAW       ;PT2_X,PT2_Y TO PT1_X,PT2_Y	;PT2_X,PT2_Y TO PT1_X,PT2_Y
379)   1E74 E1          		 POP HL         ;PT1_Y	;PT1_Y
380)   1E75 22 65 FE    		 LD (GR_PARAM2), HL	;
381)   1E78 CD BD 1C    		 CALL BAS_DODRAW       ;PT1_X,PT2_Y TO PT1_X,PT1_Y	;PT1_X,PT2_Y TO PT1_X,PT1_Y
382)   1E7B 01 04 00    		 LD BC, 4	;
383)   1E7E 21 67 FE    		 LD HL, GR_PARAM3	;
384)   1E81 11 5F FE    		 LD DE, GR_LASTX	;
385)   1E84 ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
386)   1E86 C9          		 RET	;
388)   1E87 CD C8 1D    		GRPH_RECTBC: CALL GRPH_SWAPGRCOLS	;
389)   1E8A CD 48 1E    		 CALL GRPH_RECT	;
390)   1E8D CD C8 1D    		 CALL GRPH_SWAPGRCOLS	;
391)   1E90 C9          		 RET	;
394)   1E91 CD D7 1D    		GRPH_CIRCREL: CALL GRPH_SAVECOLORS	;
395)   1E94 2A 63 FE    		 LD HL, (GR_PARAM1)	;
396)   1E97 7C          		 LD A, H	;
397)   1E98 B5          		 OR L	;
398)   1E99 20 06       		 JR NZ, CIRE_DOIT	;
399)   1E9B 2A 65 FE    		 LD HL, (GR_PARAM2)	;
400)   1E9E 7C          		 LD A, H	;
401)   1E9F B5          		 OR L	;
402)   1EA0 C8          		 RET Z         ; RETURN IF BOTH PARAMS ARE ZERO	; RETURN IF BOTH PARAMS ARE ZERO
403)   1EA1 ED 5B 5F FE 		CIRE_DOIT: LD DE, (GR_LASTX)	;
404)   1EA5 D5          		 PUSH DE	;
405)   1EA6 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
406)   1EAA D5          		 PUSH DE	;
407)   1EAB E5          		 PUSH HL	;
408)   1EAC CD F9 15    		 CALL LCD_CIRCLE	;
409)   1EAF CD EE 1D    		 CALL GRPH_RESTORECOLORS	;
410)   1EB2 C9          		 RET	;
412)   1EB3 CD C8 1D    		GRPH_CIRCRELBC: CALL GRPH_SWAPGRCOLS	;
413)   1EB6 CD 91 1E    		 CALL GRPH_CIRCREL	;
414)   1EB9 CD C8 1D    		 CALL GRPH_SWAPGRCOLS	;
415)   1EBC C9          		 RET	;
421)   1EBD C9          		GRPH_CIRCLE: RET	;
422)   1EBE 2A 5F FE    		 LD HL, (GR_LASTX)	;
423)   1EC1 ED 5B 63 FE 		 LD DE, (GR_PARAM1)	;
424)   1EC5 AF          		 XOR A	;
425)   1EC6 ED 42       		 SBC HL, BC	;
426)   1EC8 22 67 FE    		 LD (GR_PARAM3), HL       ;X2-X1	;X2-X1
427)   1ECB 2A 61 FE    		 LD HL, (GR_LASTY)	;
428)   1ECE ED 5B 65 FE 		 LD DE, (GR_PARAM2)	;
429)   1ED2 AF          		 XOR A	;
430)   1ED3 ED 42       		 SBC HL, BC	;
431)   1ED5 22 69 FE    		 LD (GR_PARAM4), HL       ;Y2-Y1	;Y2-Y1
433)   1ED8 ED 4B 67 FE 		 LD BC, (GR_PARAM3)	;
434)   1EDC C5          		 PUSH BC	;
435)   1EDD D1          		 POP DE	;
436)   1EDE CD 96 29    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
437)   1EE1 D9          		 EXX	;
438)   1EE2 C5          		 PUSH BC	;
439)   1EE3 D1          		 POP DE	;
440)   1EE4 D9          		 EXX	;
441)   1EE5 E5          		 PUSH HL        ;DE LOW	;DE LOW
442)   1EE6 ED 4B 69 FE 		 LD BC, (GR_PARAM4)	;
443)   1EEA C5          		 PUSH BC	;
444)   1EEB D1          		 POP DE	;
445)   1EEC CD 96 29    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
446)   1EEF D9          		 EXX	;
447)   1EF0 C5          		 PUSH BC	;
448)   1EF1 E1          		 POP HL	;
449)   1EF2 D9          		 EXX	;
450)   1EF3 D1          		 POP DE	;
452)   1EF4 CD B1 29    		 CALL ADD32	;
456)   1EF7 C9          		 RET	;
458)   1EF8 CD C8 1D    		GRPH_CIRCLEBC: CALL GRPH_SWAPGRCOLS	;
459)   1EFB CD BD 1E    		 CALL GRPH_CIRCLE	;
460)   1EFE CD C8 1D    		 CALL GRPH_SWAPGRCOLS	;
461)   1F01 C9          		 RET	;
465)   1F02 CD C8 1D    		GRPH_FILL: CALL GRPH_SWAPGRCOLS	;
466)   1F05 CD D7 1D    		 CALL GRPH_SAVECOLORS	;
467)   1F08 2A 63 FE    		 LD HL, (GR_PARAM1)	;
468)   1F0B E5          		 PUSH HL	;
469)   1F0C 2A 65 FE    		 LD HL, (GR_PARAM2)	;
470)   1F0F E5          		 PUSH HL	;
471)   1F10 CD 7D 17    		 CALL LCD_FILL	;
472)   1F13 CD EE 1D    		 CALL GRPH_RESTORECOLORS	;
473)   1F16 CD C8 1D    		 CALL GRPH_SWAPGRCOLS	;
474)   1F19 C9          		 RET	;
476)   1F1A AB 1D       		PLOT00: DW GRPH_MOVEREL	;
477)   1F1C B2 1D       		 DW GRPH_LINEREL	;
478)   1F1E 80 1D       		 DW GRPH_NOTIMPL	;
479)   1F20 FA 1D       		 DW GRPH_LINERELBC	;
480)   1F22 9D 1C       		 DW GRPH_SAVELASTPOS	;
481)   1F24 BD 1C       		 DW BAS_DODRAW	;
482)   1F26 80 1D       		 DW GRPH_NOTIMPL	;
483)   1F28 07 1E       		 DW GRPH_DRAWBC	;
485)   1F2A 80 1D       		PLOT80: DW GRPH_NOTIMPL	;
486)   1F2C 11 1E       		 DW GRPH_TRIANGLE	;
487)   1F2E 80 1D       		 DW GRPH_NOTIMPL	;
488)   1F30 3E 1E       		 DW GRPH_TRIANGLEBC	;
489)   1F32 80 1D       		 DW GRPH_NOTIMPL	;
490)   1F34 11 1E       		 DW GRPH_TRIANGLE	;
491)   1F36 80 1D       		 DW GRPH_NOTIMPL	;
492)   1F38 3E 1E       		 DW GRPH_TRIANGLEBC	;
494)   1F3A 80 1D       		PLOT96: DW GRPH_NOTIMPL	;
495)   1F3C 48 1E       		 DW GRPH_RECT	;
496)   1F3E 80 1D       		 DW GRPH_NOTIMPL	;
497)   1F40 87 1E       		 DW GRPH_RECTBC	;
498)   1F42 80 1D       		 DW GRPH_NOTIMPL	;
499)   1F44 48 1E       		 DW GRPH_RECT	;
500)   1F46 80 1D       		 DW GRPH_NOTIMPL	;
501)   1F48 87 1E       		 DW GRPH_RECTBC	;
503)   1F4A 80 1D       		PLOT128: DW GRPH_NOTIMPL	;
504)   1F4C 02 1F       		 DW GRPH_FILL	;
505)   1F4E 80 1D       		 DW GRPH_NOTIMPL	;
506)   1F50 80 1D       		 DW GRPH_NOTIMPL	;
507)   1F52 80 1D       		 DW GRPH_NOTIMPL	;
508)   1F54 80 1D       		 DW GRPH_NOTIMPL	;
509)   1F56 80 1D       		 DW GRPH_NOTIMPL	;
510)   1F58 80 1D       		 DW GRPH_NOTIMPL	;
512)   1F5A 91 1E       		PLOT144: DW GRPH_CIRCREL	;
513)   1F5C 91 1E       		 DW GRPH_CIRCREL	;
514)   1F5E 80 1D       		 DW GRPH_NOTIMPL	;
515)   1F60 B3 1E       		 DW GRPH_CIRCRELBC	;
516)   1F62 BD 1E       		 DW GRPH_CIRCLE	;
517)   1F64 BD 1E       		 DW GRPH_CIRCLE	;
518)   1F66 80 1D       		 DW GRPH_NOTIMPL	;
519)   1F68 F8 1E       		 DW GRPH_CIRCLEBC	;
521)   1F6A 80 1D       		PLOT152: DW GRPH_NOTIMPL	;
522)   1F6C 80 1D       		 DW GRPH_NOTIMPL	;
523)   1F6E 80 1D       		 DW GRPH_NOTIMPL	;
524)   1F70 80 1D       		 DW GRPH_NOTIMPL	;
525)   1F72 80 1D       		 DW GRPH_NOTIMPL	;
526)   1F74 80 1D       		 DW GRPH_NOTIMPL	;
527)   1F76 80 1D       		 DW GRPH_NOTIMPL	;
528)   1F78 80 1D       		 DW GRPH_NOTIMPL	;
530)   1F7A 80 1D       		PLOT160: DW GRPH_NOTIMPL	;
531)   1F7C 80 1D       		 DW GRPH_NOTIMPL	;
532)   1F7E 80 1D       		 DW GRPH_NOTIMPL	;
533)   1F80 80 1D       		 DW GRPH_NOTIMPL	;
534)   1F82 80 1D       		 DW GRPH_NOTIMPL	;
535)   1F84 80 1D       		 DW GRPH_NOTIMPL	;
536)   1F86 80 1D       		 DW GRPH_NOTIMPL	;
537)   1F88 80 1D       		 DW GRPH_NOTIMPL	;
539)   1F8A 80 1D       		PLOT192: DW GRPH_NOTIMPL	;
540)   1F8C 80 1D       		 DW GRPH_NOTIMPL	;
541)   1F8E 80 1D       		 DW GRPH_NOTIMPL	;
542)   1F90 80 1D       		 DW GRPH_NOTIMPL	;
543)   1F92 80 1D       		 DW GRPH_NOTIMPL	;
544)   1F94 80 1D       		 DW GRPH_NOTIMPL	;
545)   1F96 80 1D       		 DW GRPH_NOTIMPL	;
546)   1F98 80 1D       		 DW GRPH_NOTIMPL	;
548)   1F9A 80 1D       		PLOT200: DW GRPH_NOTIMPL	;
549)   1F9C 80 1D       		 DW GRPH_NOTIMPL	;
550)   1F9E 80 1D       		 DW GRPH_NOTIMPL	;
551)   1FA0 80 1D       		 DW GRPH_NOTIMPL	;
552)   1FA2 80 1D       		 DW GRPH_NOTIMPL	;
553)   1FA4 80 1D       		 DW GRPH_NOTIMPL	;
554)   1FA6 80 1D       		 DW GRPH_NOTIMPL	;
555)   1FA8 80 1D       		 DW GRPH_NOTIMPL	;
558)   1FAA AF          		 XOR A	;
559)   1FAB CD F0 46    		 CALL EXTERR	;
560)   1FAE 70 61 72 61 		 DEFM 'param error'	;
560)   1FB2 6D 20 65 72 		 DEFM 'param error'	;
560)   1FB6 72 6F 72    		 DEFM 'param error'	;
561)   1FB9 00          		 DEFB    0	;
  6)   1FBA 11 B9 FE    		@MYOS_OSSAVE: LD DE, STRGBUFF	;
  7)   1FBD 7E          		OSNXT: LD A, (HL)        ;hl = ACCS =FILENAME ENDS WITH 0X0D	;hl = ACCS =FILENAME ENDS WITH 0X0D
  8)   1FBE FE 0D       		 CP 13         ;	;
  9)   1FC0 20 01       		 JR NZ, OSCONT	;
 10)   1FC2 AF          		 XOR A	;
 11)   1FC3 12          		OSCONT: LD (DE), A	;
 12)   1FC4 23          		 INC HL	;
 13)   1FC5 13          		 INC DE	;
 14)   1FC6 FE 00       		 CP 0	;
 15)   1FC8 20 F3       		 JR NZ, OSNXT	;
 16)   1FCA 3E 04       		 LD A, 4        ;OPEN FILE FOR WRITE AND CREATE IT	;OPEN FILE FOR WRITE AND CREATE IT
 17)   1FCC C5          		 PUSH BC	;
 18)   1FCD CD CD 0A    		 CALL STRG_OPNFILE       ;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A	;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A
 19)   1FD0 C1          		 POP BC         ;bc = length of program	;bc = length of program
 20)   1FD1 38 12       		 JR C, SVERR	;
 21)   1FD3 ED 5B DC FD 		 LD DE, (PAGE)	;
 22)   1FD7 CD FD 0A    		 CALL STRG_BLKWRITE      ;BLOCK WRITE	;BLOCK WRITE
 23)   1FDA FE C8       		 CP FCMDOK	;
 24)   1FDC 20 07       		 JR NZ, SVERR	;
 25)   1FDE 3A E5 FE    		 LD A, (FID)	;
 26)   1FE1 CD EB 0A    		 CALL STRG_CLSFILE	;
 27)   1FE4 C9          		 RET         ;ON RET A=RESULT	;ON RET A=RESULT
 28)   1FE5 FE CA       		SVERR: CP FNOTFND	;
 29)   1FE7 CA 40 20    		 JP Z, FLNOTF	;
 30)   1FEA CD F0 46    		 CALL EXTERR	;
 31)   1FED 45 72 72 6F 		 DEFM  "Error Saving"	;
 31)   1FF1 72 20 53 61 		 DEFM  "Error Saving"	;
 31)   1FF5 76 69 6E 67 		 DEFM  "Error Saving"	;
 32)   1FF9 00          		 DEFB    0	;
 36)   1FFA 11 B9 FE    		@MYOS_OSLOAD: LD DE, STRGBUFF	;
 37)   1FFD 7E          		OLNXT: LD A, (HL)	;
 38)   1FFE FE 0D       		 CP 13         ;	;
 39)   2000 20 01       		 JR NZ, OLCONT	;
 40)   2002 AF          		 XOR A	;
 41)   2003 12          		OLCONT: LD (DE), a	;
 42)   2004 23          		 INC HL	;
 43)   2005 13          		 INC DE	;
 44)   2006 FE 00       		 CP 0	;
 45)   2008 20 F3       		 JR NZ, OLNXT	;
 46)   200A CD CD 0A    		 CALL STRG_OPNFILE      ;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A	;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A
 47)   200D 38 1C       		 JR C, LDERR	;
 48)   200F 2A DC FD    		 LD HL, (PAGE)	;
 49)   2012 EB          		 EX DE, HL	;
 50)   2013 01 00 00    		 LD BC, 0        ;ZERO MEANS LOAD ALL	;ZERO MEANS LOAD ALL
 51)   2016 CD 20 0B    		 CALL STRG_BLKREAD      ;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED	;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED
 52)   2019 FE C8       		 CP FCMDOK	;
 53)   201B 20 0E       		 JR NZ, LDERR	;
 54)   201D 3A E5 FE    		 LD A, (FID)	;
 55)   2020 CD EB 0A    		 CALL STRG_CLSFILE	;
 56)   2023 21 DE FD    		 LD HL, TOP       ;SAVE TOP OF BASIC	;SAVE TOP OF BASIC
 57)   2026 73          		 LD (HL), E	;
 58)   2027 23          		 INC HL	;
 59)   2028 72          		 LD (HL), D	;
 60)   2029 37          		 SCF         ;SET C = NO ERROR	;SET C = NO ERROR
 61)   202A C9          		 RET	;
 62)   202B FE CA       		LDERR: CP FNOTFND	;
 63)   202D 28 11       		 JR Z, FLNOTF	;
 64)   202F CD F0 46    		 CALL EXTERR	;
 65)   2032 45 72 72 6F 		 DEFM  "Error Loading"	;
 65)   2036 72 20 4C 6F 		 DEFM  "Error Loading"	;
 65)   203A 61 64 69 6E 		 DEFM  "Error Loading"	;
 65)   203E 67          		 DEFM  "Error Loading"	;
 66)   203F 00          		 DEFB    0	;
 67)   2040 CD F0 46    		FLNOTF: CALL EXTERR	;
 68)   2043 57 72 6F 6E 		 DEFM  "Wrong Filename"	;
 68)   2047 67 20 46 69 		 DEFM  "Wrong Filename"	;
 68)   204B 6C 65 6E 61 		 DEFM  "Wrong Filename"	;
 68)   204F 6D 65       		 DEFM  "Wrong Filename"	;
 69)   2051 00          		 DEFB    0	;
 41)   2052 C3 9B 03    		@MYOS_CLRSCN: JP OS_CLRSCR       ; CLRSCN: clears the screen.	; CLRSCN: clears the screen.
 44)   2055 7D          		 LD A, L	;
 45)   2056 32 A7 FE    		 LD (TIMECTR), A	;
 46)   2059 7C          		 LD A, H	;
 47)   205A 32 A8 FE    		 LD (TIMECTR + 1), A	;
 48)   205D 7B          		 LD A, E	;
 49)   205E 32 A9 FE    		 LD (TIMECTR + 2), A	;
 50)   2061 7A          		 LD A, D	;
 51)   2062 32 AA FE    		 LD (TIMECTR + 3), A	;
 52)   2065 C9          		 RET	;
 56)   2066 3A A7 FE    		 LD A, (TIMECTR)	;
 57)   2069 6F          		 LD L, A	;
 58)   206A 3A A8 FE    		 LD A, (TIMECTR + 1)	;
 59)   206D 67          		 LD H, A	;
 60)   206E 3A A9 FE    		 LD A, (TIMECTR + 2)	;
 61)   2071 5F          		 LD E, A	;
 62)   2072 3A AA FE    		 LD A, (TIMECTR + 3)	;
 63)   2075 57          		 LD D, A	;
 64)   2076 C9          		 RET	;
 66)   2077 63          		 LD H, E	;
 67)   2078 E5          		 PUSH HL	;
 68)   2079 CD 94 03    		 CALL OS_RMVCURS	;
 69)   207C E1          		 POP HL	;
 70)   207D 7C          		 LD A, H	;
 71)   207E 32 0D FE    		 LD (CURSORX), A	;
 72)   2081 32 F3 FE    		 LD (VGATX_X),A	;
 73)   2084 7D          		 LD A, L	;
 74)   2085 32 0E FE    		 LD (CURSORY), A	;
 75)   2088 32 F4 FE    		 LD (VGATX_Y),A	;
 76)   208B CD 8D 03    		 CALL OS_PRNCURS	;
 77)   208E C9          		 RET	;
 79)   208F 16 00       		 LD D, 0	;
 80)   2091 3A 0D FE    		 LD A, (CURSORX)	;
 82)   2094 5F          		 LD E, A	;
 83)   2095 26 00       		 LD H, 0	;
 86)   2097 CD 5B 18    		 CALL LCD_CALCLINE      ;GETS CURSORY WITH SCROLL	;GETS CURSORY WITH SCROLL
 87)   209A 6F          		 LD L, A	;
 88)   209B C9          		 RET	;
 89)   209C 06 50       		KEYGET: LD B, 80       ;SCREEN WIDTH IN CHARS	;SCREEN WIDTH IN CHARS
 91)   209E E5          		 PUSH HL	;
 92)   209F ED 62       		 SBC HL, HL        ;HL=0	;HL=0
 93)   20A1 CD 89 22    		 CALL MYOS_OSKEY	;
 94)   20A4 E1          		 POP HL	;
 95)   20A5 D8          		 RET C	;
 96)   20A6 18 F6       		 JR MYOS_OSRDCH	;
 97)   20A8 C9          		 RET	;
 99)   20A9 F5          		 PUSH AF	;
100)   20AA D5          		 PUSH DE	;
101)   20AB E5          		 PUSH HL	;
102)   20AC DD E5       		 PUSH IX	;
103)   20AE 5F          		 LD E, A	;
104)   20AF CD A8 22    		 CALL ESCTEST	;
107)   20B2 7B          		 LD A, E	;
108)   20B3 FE 20       		 CP 32	;
109)   20B5 38 0D       		 JR C, CTRCODE	;
110)   20B7 FE 7F       		 CP 127         ;BACKSPACE	;BACKSPACE
111)   20B9 C2 3D 22    		 JP NZ, PRINTIT	;
112)   20BC 3E 08       		 LD A, 8        ;DO A BACKSPACE	;DO A BACKSPACE
113)   20BE CD 7B 03    		 CALL OS_PRINTCHAR	;
114)   20C1 C3 40 22    		 JP OSWREXIT	;
115)   20C4 FE 04       		CTRCODE: CP 4       ;WRITE TEXT AT TEXT POS	;WRITE TEXT AT TEXT POS
116)   20C6 20 06       		 JR NZ, CC1	;
117)   20C8 32 16 FE    		 LD (VDUMODE), A	;
118)   20CB C3 40 22    		 JP OSWREXIT	;
119)   20CE FE 05       		CC1: CP 5        ;WRITE TEXT AT GRAPH POS	;WRITE TEXT AT GRAPH POS
120)   20D0 20 06       		 JR NZ, CC2	;
121)   20D2 32 16 FE    		 LD (VDUMODE), A	;
122)   20D5 C3 40 22    		 JP OSWREXIT	;
123)   20D8 FE 06       		CC2: CP 6        ;ENABLE OUTPUT TO SCREEN	;ENABLE OUTPUT TO SCREEN
124)   20DA 20 03       		 JR NZ, CC3	;
125)   20DC C3 40 22    		 JP OSWREXIT	;
126)   20DF FE 07       		CC3: CP 7        ;BEEP	;BEEP
127)   20E1 20 03       		 JR NZ, CC4	;
128)   20E3 C3 40 22    		 JP OSWREXIT	;
129)   20E6 FE 08       		CC4: CP 8        ;MOVE TEXT CURSOR BACK A CHAR	;MOVE TEXT CURSOR BACK A CHAR
130)   20E8 20 03       		 JR NZ, CC5	;
131)   20EA C3 3D 22    		 JP PRINTIT	;
138)   20ED FE 09       		CC5: CP 9        ;MOVE TEXT CURSOR FORWARD A CHAR	;MOVE TEXT CURSOR FORWARD A CHAR
139)   20EF 20 0F       		 JR NZ, CC6	;
140)   20F1 3A 0D FE    		 LD A, (CURSORX)	;
141)   20F4 3C          		 INC A	;
142)   20F5 FE 50       		 CP 80	;
143)   20F7 D2 40 22    		 JP NC, OSWREXIT	;
144)   20FA 32 0D FE    		 LD (CURSORX), A	;
145)   20FD C3 40 22    		 JP OSWREXIT	;
146)   2100 FE 0A       		CC6: CP 10        ;MOVE TEXT DOWN LF	;MOVE TEXT DOWN LF
147)   2102 CA 3D 22    		 JP Z, PRINTIT	;
148)   2105 FE 0B       		CC7: CP 11        ;MOVE TEXT UP	;MOVE TEXT UP
149)   2107 20 0F       		 JR NZ, CC8	;
150)   2109 3A 0E FE    		 LD A, (CURSORY)	;
151)   210C 3D          		 DEC A	;
152)   210D FE FF       		 CP 0XFF	;
153)   210F CA 40 22    		 JP Z, OSWREXIT	;
154)   2112 32 0E FE    		 LD (CURSORY), A	;
155)   2115 C3 40 22    		 JP OSWREXIT	;
156)   2118 FE 0C       		CC8: CP 12        ; CLS	; CLS
157)   211A 20 06       		 JR NZ, CC9	;
158)   211C CD 9B 03    		 CALL OS_CLRSCR	;
159)   211F C3 40 22    		 JP OSWREXIT	;
160)   2122 FE 0D       		CC9: CP 13        ;GOTO START OF LINE CR	;GOTO START OF LINE CR
161)   2124 CA 3D 22    		 JP Z, PRINTIT	;
162)   2127 FE 0E       		CC10: CP 14        ;ENABLE THE AUTOPAGING MODE	;ENABLE THE AUTOPAGING MODE
163)   2129 20 03       		 JR NZ, CC11	;
164)   212B C3 40 22    		 JP OSWREXIT	;
165)   212E FE 0F       		CC11: CP 15        ;DISABLE THE AUTOPAGING MODE	;DISABLE THE AUTOPAGING MODE
166)   2130 20 03       		 JR NZ, CC12	;
167)   2132 C3 40 22    		 JP OSWREXIT	;
168)   2135 FE 10       		CC12: CP 16        ;CLG	;CLG
169)   2137 20 06       		 JR NZ, CC13	;
170)   2139 CD E9 26    		 CALL MYOS_CLG	;
171)   213C C3 40 22    		 JP OSWREXIT	;
172)   213F FE 11       		CC13: CP 17        ; SAME AS COLOUR	; SAME AS COLOUR
173)   2141 20 09       		 JR NZ, CC14	;
175)   2143 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
176)   2145 CD 94 5E    		 CALL EXPRI	;
177)   2148 D9          		 EXX        ;l has the param  color	;l has the param  color
178)   2149 C3 40 22    		 JP OSWREXIT	;
179)   214C FE 12       		CC14: CP 18        ;SAME AS GCOL	;SAME AS GCOL
180)   214E 20 0F       		 JR NZ, CC15	;
181)   2150 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
182)   2152 CD 94 5E    		 CALL EXPRI	;
183)   2155 D9          		 EXX        ;l has the param  mode	;l has the param  mode
184)   2156 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
185)   2158 CD 94 5E    		 CALL EXPRI	;
186)   215B D9          		 EXX        ;l has the param  color	;l has the param  color
188)   215C C3 40 22    		 JP OSWREXIT	;
189)   215F FE 13       		CC15: CP 19        ;SELECT A COLOR PALLETTE???	;SELECT A COLOR PALLETTE???
190)   2161 20 0F       		 JR NZ, CC16	;
192)   2163 06 05       		 LD B, 5	;
193)   2165 C5          		CC15AGN: PUSH BC	;
194)   2166 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
195)   2168 CD 94 5E    		 CALL EXPRI	;
196)   216B D9          		 EXX        ;l has the param	;l has the param
197)   216C C1          		 POP BC	;
198)   216D 10 F6       		 DJNZ CC15AGN	;
199)   216F C3 40 22    		 JP OSWREXIT	;
200)   2172 FE 14       		CC16: CP 20        ;RESTORE THE DEFAULT LOGICAL COLORS	;RESTORE THE DEFAULT LOGICAL COLORS
201)   2174 20 03       		 JR NZ, CC17	;
203)   2176 C3 40 22    		 JP OSWREXIT	;
204)   2179 FE 15       		CC17: CP 21        ;NO OUTPUT TO SCREEN	;NO OUTPUT TO SCREEN
205)   217B 20 03       		 JR NZ, CC18	;
207)   217D C3 40 22    		 JP OSWREXIT	;
208)   2180 FE 16       		CC18: CP 22        ;LIKE MODE	;LIKE MODE
209)   2182 20 09       		 JR NZ, CC19	;
210)   2184 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
211)   2186 CD 94 5E    		 CALL EXPRI	;
212)   2189 D9          		 EXX        ;l has the param	;l has the param
213)   218A C3 40 22    		 JP OSWREXIT	;
214)   218D FE 17       		CC19: CP 23        ;Program characters and control the cursor.???	;Program characters and control the cursor.???
215)   218F 20 27       		 JR NZ, CC20	;
216)   2191 06 09       		 LD B, 9        ;9 PARAMS CHAR_NO +8 ROWS OF A CHAR	;9 PARAMS CHAR_NO +8 ROWS OF A CHAR
217)   2193 FD 7E 00    		 LD A, (IY)	;
218)   2196 FD 23       		 INC IY        ;SKIP ',' OR ';'	;SKIP ',' OR ';'
219)   2198 FE 3B       		 CP ';'        ;'	;'
220)   219A 20 01       		 JR NZ, CC19AGN	;
221)   219C 05          		 DEC B        ; IF ; THE DELIMETER THEN 2 BYTES AT START	; IF ; THE DELIMETER THEN 2 BYTES AT START
222)   219D C5          		CC19AGN: PUSH BC	;
223)   219E CD 94 5E    		 CALL EXPRI	;
224)   21A1 D9          		 EXX        ;l has the param	;l has the param
225)   21A2 FD 7E 00    		 LD A, (IY)	;
226)   21A5 FE 2C       		 CP ', '	;
227)   21A7 28 07       		 JR Z, CC19NXT0	;
228)   21A9 FE 3B       		 CP ';'        ;'	;'
229)   21AB 20 05       		 JR NZ, CC19NXT	;
230)   21AD C1          		 POP BC	;
231)   21AE 05          		 DEC B	;
232)   21AF C5          		 PUSH BC	;
233)   21B0 FD 23       		CC19NXT0: INC IY       ;SKIP ','	;SKIP ','
234)   21B2 C1          		CC19NXT: POP BC	;
235)   21B3 10 E8       		 DJNZ CC19AGN	;
236)   21B5 C3 40 22    		 JP OSWREXIT	;
237)   21B8 FE 18       		CC20: CP 24        ;Define a graphics window	;Define a graphics window
238)   21BA 20 11       		 JR NZ, CC21	;
239)   21BC FD 23       		 INC IY        ;SKIP ','	;SKIP ','
240)   21BE 06 04       		 LD B, 4        ;4 PARAMS TWO CORNERS OF A RECT	;4 PARAMS TWO CORNERS OF A RECT
241)   21C0 C5          		CC20AGN: PUSH BC	;
242)   21C1 CD 94 5E    		 CALL EXPRI	;
243)   21C4 D9          		 EXX        ;HL has the param	;HL has the param
244)   21C5 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
245)   21C7 C1          		 POP BC	;
246)   21C8 10 F6       		 DJNZ CC20AGN	;
247)   21CA C3 40 22    		 JP OSWREXIT	;
248)   21CD FE 19       		CC21: CP 25        ;Identical to PLOT.	;Identical to PLOT.
249)   21CF 20 17       		 JR NZ, CC22	;
250)   21D1 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
251)   21D3 CD 94 5E    		 CALL EXPRI	;
252)   21D6 D9          		 EXX        ;L has the param PLOTMODE	;L has the param PLOTMODE
253)   21D7 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
254)   21D9 CD 94 5E    		 CALL EXPRI	;
255)   21DC D9          		 EXX        ;HL has the param X	;HL has the param X
256)   21DD FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
257)   21DF CD 94 5E    		 CALL EXPRI	;
258)   21E2 D9          		 EXX        ;HL has the param Y	;HL has the param Y
259)   21E3 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
262)   21E5 C3 40 22    		 JP OSWREXIT	;
263)   21E8 FE 1A       		CC22: CP 26        ;Restore the default text and graphics windows.	;Restore the default text and graphics windows.
264)   21EA 20 02       		 JR NZ, CC23	;
265)   21EC 18 52       		 JR OSWREXIT	;
266)   21EE FE 1B       		CC23: CP 27        ;Send the next character to the screen.	;Send the next character to the screen.
267)   21F0 20 07       		 JR NZ, CC24	;
268)   21F2 CD 94 5E    		 CALL EXPRI	;
269)   21F5 D9          		 EXX        ;	;
270)   21F6 7D          		 LD A, L	;
271)   21F7 18 44       		 JR PRINTIT	;
272)   21F9 FE 1C       		CC24: CP 28        ;Define a text window.	;Define a text window.
273)   21FB 20 0E       		 JR NZ, CC25	;
274)   21FD 06 04       		 LD B, 4        ;4 PARAMS UPPERLEFT AND LOWERRIGHT	;4 PARAMS UPPERLEFT AND LOWERRIGHT
275)   21FF C5          		CC24AGN: PUSH BC	;
276)   2200 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
277)   2202 CD 94 5E    		 CALL EXPRI	;
278)   2205 D9          		 EXX        ;l has the param	;l has the param
279)   2206 C1          		 POP BC	;
280)   2207 10 F6       		 DJNZ CC24AGN	;
281)   2209 18 35       		 JR OSWREXIT	;
282)   220B FE 1D       		CC25: CP 29        ;Set the graphics origin.	;Set the graphics origin.
283)   220D 20 10       		 JR NZ, CC26	;
284)   220F FD 23       		 INC IY        ;SKIP ','	;SKIP ','
285)   2211 CD 94 5E    		 CALL EXPRI	;
286)   2214 D9          		 EXX        ;HL has the param X	;HL has the param X
287)   2215 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
288)   2217 CD 94 5E    		 CALL EXPRI	;
289)   221A D9          		 EXX        ;HL has the param Y	;HL has the param Y
290)   221B FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
292)   221D 18 21       		 JR OSWREXIT	;
293)   221F FE 1E       		CC26: CP 30        ;Home the text cursor to the top left of the screen.	;Home the text cursor to the top left of the screen.
294)   2221 20 08       		 JR NZ, CC27	;
295)   2223 21 00 00    		 LD HL, 0	;
296)   2226 22 0D FE    		 LD (CURSORX), HL	;
297)   2229 18 15       		 JR OSWREXIT	;
298)   222B FE 1F       		CC27: CP 31        ;Move the text cursor - identical to TAB(x,y).	;Move the text cursor - identical to TAB(x,y).
299)   222D 20 11       		 JR NZ, OSWREXIT	;
300)   222F FD 23       		 INC IY        ;SKIP ','	;SKIP ','
301)   2231 CD 94 5E    		 CALL EXPRI	;
302)   2234 D9          		 EXX        ;l has the param X	;l has the param X
303)   2235 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
304)   2237 CD 94 5E    		 CALL EXPRI	;
305)   223A D9          		 EXX        ;l has the param Y	;l has the param Y
307)   223B 18 03       		 JR OSWREXIT	;
310)   223D CD 46 22    		PRINTIT: CALL EDPUT	;
311)   2240 DD E1       		OSWREXIT: POP IX	;
312)   2242 E1          		 POP HL	;
313)   2243 D1          		 POP DE	;
314)   2244 F1          		 POP AF	;
315)   2245 C9          		 RET	;
320)   2246 3A 00 FE    		EDPUT: LD A, (FLAGS)	;
321)   2249 CB 5F       		 BIT 3, A	;
322)   224B 28 10       		 JR Z, WRCH	;
323)   224D 7B          		 LD A, E	;
324)   224E FE 20       		 CP ' '	;
325)   2250 D8          		 RET C	;
326)   2251 2A 12 FE    		 LD HL, (EDPTR)	;
327)   2254 73          		 LD (HL), E	;
328)   2255 2C          		 INC L	;
329)   2256 C8          		 RET Z	;
330)   2257 22 12 FE    		 LD (EDPTR), HL	;
331)   225A C9          		 RET	;
334)   225B 1E 3E       		 LD E, '>'	;
335)   225D 7B          		WRCH: LD A, E	;
336)   225E F5          		 PUSH AF	;
337)   225F C5          		 PUSH BC	;
338)   2260 D5          		 PUSH DE	;
339)   2261 E5          		 PUSH HL	;
340)   2262 DD E5       		 PUSH IX	;
341)   2264 FD E5       		 PUSH IY	;
342)   2266 F5          		 PUSH AF	;
343)   2267 C5          		 PUSH BC	;
344)   2268 D5          		 PUSH DE	;
345)   2269 E5          		 PUSH HL	;
346)   226A CD 94 03    		 CALL OS_RMVCURS	;
347)   226D E1          		 POP HL	;
348)   226E D1          		 POP DE	;
349)   226F C1          		 POP BC	;
350)   2270 F1          		 POP AF	;
353)   2271 CD 7B 03    		 CALL OS_PRINTCHAR	;
354)   2274 CD 8D 03    		 CALL OS_PRNCURS	;
363)   2277 FD E1       		 POP IY	;
364)   2279 DD E1       		 POP IX	;
365)   227B E1          		 POP HL	;
366)   227C D1          		 POP DE	;
367)   227D C1          		 POP BC	;
368)   227E F1          		 POP AF	;
369)   227F C9          		 RET	;
371)   2280 3A 00 FE    		TOGGLE: LD A, (FLAGS)	;
372)   2283 EE 04       		 XOR 00000100B	;
373)   2285 32 00 FE    		 LD (FLAGS), A	;
374)   2288 C9          		 RET	;
383)   2289 E5          		@MYOS_OSKEY: PUSH HL	;
384)   228A 21 15 FE    		 LD HL, INKEY	;
385)   228D 7E          		 LD A, (HL)	;
386)   228E 36 00       		 LD (HL), 0	;
387)   2290 E1          		 POP HL	;
388)   2291 B7          		 OR A	;
389)   2292 37          		 SCF	;
390)   2293 C0          		 RET NZ	;
392)   2294 CD 50 27    		 CALL GETKEYNW	;
394)   2297 D0          		 RET NC	;
395)   2298 FE 1B       		 CP ESC	;
396)   229A 37          		 SCF	;
397)   229B C0          		 RET NZ	;
398)   229C E5          		ESCSET: PUSH HL	;
399)   229D 21 00 FE    		 LD HL, FLAGS	;
400)   22A0 CB 76       		 BIT 6, (HL)        ; ESC DISABLED?	; ESC DISABLED?
401)   22A2 20 02       		 JR NZ, ESCDIS	;
402)   22A4 CB FE       		 SET 7, (HL)        ; SET ESCAPE FLAG	; SET ESCAPE FLAG
403)   22A6 E1          		ESCDIS: POP HL	;
404)   22A7 C9          		 RET	;
405)   22A8 CD 9D 06    		ESCTEST: CALL RS_RXNW	;
406)   22AB B7          		 OR A	;
407)   22AC C8          		 RET Z	;
408)   22AD FE 1B       		 CP 0x1B        ; ESC	; ESC
409)   22AF 28 EB       		 JR Z, ESCSET	;
410)   22B1 32 15 FE    		 LD (INKEY), A	;
411)   22B4 C9          		 RET	;
413)   22B5 CD A8 22    		@MYOS_TRAP: CALL ESCTEST	;
414)   22B8 3A 00 FE    		@MYOS_LTRAP: LD A, (FLAGS)	;
415)   22BB B7          		 OR A	;
416)   22BC F0          		 RET P	;
417)   22BD 21 00 FE    		ABORT: LD HL, FLAGS	;
418)   22C0 CB BE       		 RES 7, (HL)	;
419)   22C2 C3 C2 4D    		 JP ESCAPE	;
428)   22C5 F3          		 DI	;
429)   22C6 21 F6 FD    		 LD HL, RANDOM        ; SET RANDOM SEED TO NON 0	; SET RANDOM SEED TO NON 0
430)   22C9 3E 06       		 LD A, 0x06	;
431)   22CB 77          		 LD (HL), A	;
432)   22CC 3E BB       		 LD A, 0xBB	;
433)   22CE 77          		 LD (HL), A	;
434)   22CF 21 00 00    		 LD HL, 0	;
435)   22D2 22 0D FE    		 LD (CURSORX), HL       ; CURSOR X 7 Y ZEROED	; CURSOR X 7 Y ZEROED
436)   22D5 11 FF FF    		 LD DE, COL_WHITE       ; SET FCOLOR AND BCOLOR DEFAULT VALUES	; SET FCOLOR AND BCOLOR DEFAULT VALUES
437)   22D8 21 01 FE    		 LD HL, FCOLOR	;
438)   22DB 73          		 LD (HL), E	;
439)   22DC 23          		 INC HL	;
440)   22DD 72          		 LD (HL), D	;
441)   22DE 23          		 INC HL	;
442)   22DF 11 00 00    		 LD DE, COL_BLACK	;
443)   22E2 73          		 LD (HL), E	;
444)   22E3 23          		 INC HL	;
445)   22E4 72          		 LD (HL), D	;
446)   22E5 01 04 00    		 LD BC, 4        ; COPY SAME COLORS TO GRAPHICS	; COPY SAME COLORS TO GRAPHICS
447)   22E8 11 05 FE    		 LD DE, FGRCOL	;
448)   22EB 21 01 FE    		 LD HL, FCOLOR	;
449)   22EE ED B0       		 LDIR	;
450)   22F0 11 17 FE    		 LD DE, FCOLPAL	;
451)   22F3 CD FE 22    		 CALL COPYPAL	;
452)   22F6 11 37 FE    		 LD DE, BCOLPAL	;
453)   22F9 CD FE 22    		 CALL COPYPAL	;
454)   22FC 18 16       		 JR OSFINSH       ;	;
455)   22FE 21 70 23    		COPYPAL: LD HL, COL_PALET	;
456)   2301 01 20 00    		 LD BC, 16 * 2        ;SHOULD ADD 8 MORE COLORS	;SHOULD ADD 8 MORE COLORS
457)   2304 ED B0       		 LDIR	;
458)   2306 AF          		 XOR A	;
459)   2307 32 0F FE    		 LD (SCRLN), A	;
460)   230A 21 00 00    		 LD HL, 0	;
461)   230D 22 A7 FE    		 LD (TIMECTR), HL	;
462)   2310 22 A9 FE    		 LD (TIMECTR + 2), HL	;
463)   2313 C9          		 RET	;
465)   2314 CD 9B 03    		OSFINSH: CALL OS_CLRSCR	;
466)   2317 CD 2B 4C    		 CALL TELL	;
467)   231A 43 44 65 73 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
467)   231E 70 20 4D 6F 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
467)   2322 64 75 6C 61 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
467)   2326 72 20 5A 38 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
467)   232A 30 20 43 6F 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
467)   232E 6D 70 75 74 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
467)   2332 65 72 20 32 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
467)   2336 30 32 30 2D 		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
467)   233A 32 31       		 DEFM "CDesp Modular Z80 Computer 2020-21"	;
468)   233C 0A 0D       		 DEFB 0AH,0DH	;
469)   233E 41 54 4C 41 		 DEFM "ATLAS Operating System Version "	;
469)   2342 53 20 4F 70 		 DEFM "ATLAS Operating System Version "	;
469)   2346 65 72 61 74 		 DEFM "ATLAS Operating System Version "	;
469)   234A 69 6E 67 20 		 DEFM "ATLAS Operating System Version "	;
469)   234E 53 79 73 74 		 DEFM "ATLAS Operating System Version "	;
469)   2352 65 6D 20 56 		 DEFM "ATLAS Operating System Version "	;
469)   2356 65 72 73 69 		 DEFM "ATLAS Operating System Version "	;
469)   235A 6F 6E 20    		 DEFM "ATLAS Operating System Version "	;
470)   235D 30          		 DEFB MJVER	;
471)   235E 2E          		 DEFB 46	;
472)   235F 33          		 DEFB MNVER1,MNVER2	;
472)   2360 30          		 DEFB MNVER1,MNVER2	;
473)   2361 0A 0D 0A 0D 		 DEFB 0AH,0DH,0AH,0DH	;
474)   2365 00          		 DEFB 00H	;
475)   2366 AF          		 XOR A	;
476)   2367 11 FF F9    		 LD DE, STACKP - 0x100      ;DE = HIMEM	;DE = HIMEM
477)   236A 5F          		 LD E, A        ;PAGE BOUNDARY	;PAGE BOUNDARY
478)   236B 21 00 80    		 LD HL, RAMAD        ;@USER	;@USER
479)   236E FB          		 EI	;
480)   236F C9          		 RET	;
481)   2370 00 00       		COL_PALET: DW COL_BLACK	;
482)   2372 00 F8       		 DW COL_RED	;
483)   2374 C0 07       		 DW COL_GREEN	;
484)   2376 C0 FF       		 DW COL_YELLOW	;
485)   2378 3F 00       		 DW COL_BLUE	;
486)   237A 3F F8       		 DW COL_MAGENTA	;
487)   237C FF 07       		 DW COL_CYAN	;
488)   237E FF FF       		 DW COL_WHITE	;
489)   2380 00 00       		 DW COL_BLACK       ;TODO PICK 8 MORE COLORS	;TODO PICK 8 MORE COLORS
490)   2382 00 F8       		 DW COL_RED	;
491)   2384 C0 07       		 DW COL_GREEN	;
492)   2386 C0 FF       		 DW COL_YELLOW	;
493)   2388 3F 00       		 DW COL_BLUE	;
494)   238A 3F F8       		 DW COL_MAGENTA	;
495)   238C FF 07       		 DW COL_CYAN	;
496)   238E FF FF       		 DW COL_WHITE	;
502)   2390 CD ED 23    		 CALL SKIPSP	;
503)   2393 FE 0D       		 CP CR	;
504)   2395 C8          		 RET Z	;
505)   2396 FE 7C       		 CP '|'	;
506)   2398 C8          		 RET Z	;
507)   2399 FE 2E       		 CP '.'	;
508)   239B CA E0 24    		 JP Z, DOT        ;*.	;*.
509)   239E EB          		 EX DE, HL	;
510)   239F 21 FC 23    		 LD HL, COMDS	;
511)   23A2 1A          		OSCLI0: LD A, (DE)	;
512)   23A3 CD F4 23    		 CALL UPPRC	;
513)   23A6 BE          		 CP (HL)	;
514)   23A7 28 0B       		 JR Z, OSCLI2	;
515)   23A9 38 31       		 JR C, HUH	;
516)   23AB CB 7E       		OSCLI1: BIT 7, (HL)	;
517)   23AD 23          		 INC HL	;
518)   23AE 28 FB       		 JR Z, OSCLI1	;
519)   23B0 23          		 INC HL	;
520)   23B1 23          		 INC HL	;
521)   23B2 18 EE       		 JR OSCLI0	;
523)   23B4 D5          		OSCLI2: PUSH DE	;
524)   23B5 13          		OSCLI3: INC DE	;
525)   23B6 23          		 INC HL	;
526)   23B7 1A          		 LD A, (DE)	;
527)   23B8 CD F4 23    		 CALL UPPRC	;
528)   23BB FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
529)   23BD 28 0A       		 JR Z, OSCLI4	;
530)   23BF AE          		 XOR (HL)	;
531)   23C0 28 F3       		 JR Z, OSCLI3	;
532)   23C2 FE 80       		 CP 80H	;
533)   23C4 28 03       		 JR Z, OSCLI4	;
534)   23C6 D1          		 POP DE	;
535)   23C7 18 E2       		 JR OSCLI1	;
537)   23C9 F1          		OSCLI4: POP AF	;
538)   23CA 13          		 INC DE	;
539)   23CB CB 7E       		OSCLI5: BIT 7, (HL)	;
540)   23CD 23          		 INC HL	;
541)   23CE 28 FB       		 JR Z, OSCLI5	;
542)   23D0 7E          		 LD A, (HL)	;
543)   23D1 23          		 INC HL	;
544)   23D2 66          		 LD H, (HL)	;
545)   23D3 6F          		 LD L, A	;
546)   23D4 E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
547)   23D5 EB          		 EX DE, HL	;
548)   23D6 E5          		 PUSH HL	;
549)   23D7 FD E1       		 POP IY	;
550)   23D9 C3 ED 23    		 JP SKIPSP	;
552)   23DC 3E FE       		HUH: LD A, 254        ;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY	;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY
553)   23DE CD F0 46    		 CALL EXTERR	;
554)   23E1 42 61 64 20 		 DEFM 'Bad command'	;
554)   23E5 63 6F 6D 6D 		 DEFM 'Bad command'	;
554)   23E9 61 6E 64    		 DEFM 'Bad command'	;
555)   23EC 00          		 DEFB    0	;
557)   23ED 7E          		SKIPSP: LD A, (HL)	;
558)   23EE FE 20       		 CP ' '	;
559)   23F0 C0          		 RET NZ	;
560)   23F1 23          		 INC HL	;
561)   23F2 18 F9       		 JR SKIPSP	;
563)   23F4 E6 7F       		UPPRC: AND 7FH	;
564)   23F6 FE 60       		 CP '`'	;
565)   23F8 D8          		 RET C	;
566)   23F9 E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
567)   23FB C9          		 RET	;
571)   23FC 42 59       		COMDS: DEFM  "BY"	;
572)   23FE C5          		 DEFB    'E'+80H	;
573)   23FF E3 24       		 DEFW BYE	;
574)   2401 43          		 DEFM  "C"	;
575)   2402 C4          		 DEFB    'D'+80H	;
576)   2403 17 25       		 DEFW DRV_CD	;
577)   2405 44 49       		 DEFM  "DI"	;
578)   2407 D2          		 DEFB    'R'+80H	;
579)   2408 FD 24       		 DEFW DRV_DIR	;
580)   240A 46          		 DEFM  "F"	;
581)   240B D8          		 DEFB    'X'+80H	;
582)   240C E6 24       		 DEFW FX	;
583)   240E 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
583)   2412 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
583)   2416 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
584)   2419 C6          		 DEFB 'F'+80H	;
585)   241A 9B 25       		 DEFW LCD_BLINKOF	;
586)   241C 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
586)   2420 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
586)   2424 4B 4F       		 DEFM  "LCD_BLINKO"	;
587)   2426 CE          		 DEFB 'N'+80H	;
588)   2427 A1 25       		 DEFW LCD_BLINKON	;
589)   2429 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
589)   242D 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
590)   2431 D2          		 DEFB 'R'+80H	;
591)   2432 A7 25       		 DEFW LCD_CLR	;
592)   2434 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
592)   2438 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
592)   243C 4F 52 41    		 DEFM  "LCD_CURSORA"	;
593)   243F D4          		 DEFB 'T'+80H	;
594)   2440 AD 25       		 DEFW LCD_CURSAT	;
595)   2442 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
595)   2446 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
595)   244A 4F 46       		 DEFM  "LCD_CURSOF"	;
596)   244C C6          		 DEFB 'F'+80H	;
597)   244D CC 25       		 DEFW LCD_CURSOF	;
598)   244F 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
598)   2453 43 55 52 53 		 DEFM  "LCD_CURSO"	;
598)   2457 4F          		 DEFM  "LCD_CURSO"	;
599)   2458 CE          		 DEFB 'N'+80H	;
600)   2459 D2 25       		 DEFW LCD_CURSON	;
601)   245B 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
601)   245F 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
601)   2463 4F 46       		 DEFM  "LCD_DISPOF"	;
602)   2465 C6          		 DEFB 'F'+80H	;
603)   2466 D8 25       		 DEFW LCD_DISPOF	;
604)   2468 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
604)   246C 44 49 53 50 		 DEFM  "LCD_DISPO"	;
604)   2470 4F          		 DEFM  "LCD_DISPO"	;
605)   2471 CE          		 DEFB 'N'+80H	;
606)   2472 DE 25       		 DEFW LCD_DISPON	;
607)   2474 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
607)   2478 48 4F 4D    		 DEFM  "LCD_HOM"	;
608)   247B C5          		 DEFB 'E'+80H	;
609)   247C 1C 0F       		 DEFW LCD16_HOME	;
610)   247E 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
610)   2482 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
610)   2486 45 46       		 DEFM  "LCD_MOVLEF"	;
611)   2488 D4          		 DEFB 'T'+80H	;
612)   2489 EA 25       		 DEFW LCD_MOVLFT	;
613)   248B 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
613)   248F 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
613)   2493 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
614)   2496 D4          		 DEFB 'T'+80H	;
615)   2497 F0 25       		 DEFW LCD_MOVRGT	;
616)   2499 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
616)   249D 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
617)   24A1 D4          		 DEFB 'T'+80H	;
618)   24A2 F6 25       		 DEFW LCD_PRN	;
619)   24A4 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
619)   24A8 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
619)   24AC 45 46       		 DEFM  "LCD_SCRLEF"	;
620)   24AE D4          		 DEFB 'T'+80H	;
621)   24AF 67 26       		 DEFW LCD_SCRLFT	;
622)   24B1 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
622)   24B5 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
622)   24B9 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
623)   24BC D4          		 DEFB 'T'+80H	;
624)   24BD 6D 26       		 DEFW LCD_SCRRGT	;
625)   24BF 50 57       		 DEFM  "PW"	;
626)   24C1 C4          		 DEFB    'D'+80H	;
627)   24C2 E9 24       		 DEFW NIMP	;
628)   24C4 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
628)   24C8 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
628)   24CC 53          		 DEFM  "RTC_ADJUS"	;
629)   24CD D4          		 DEFB    'T'+80H	;
630)   24CE 47 25       		 DEFW RTC_ADJUST	;
631)   24D0 52 54 43 5F 		 DEFM  "RTC_GE"	;
631)   24D4 47 45       		 DEFM  "RTC_GE"	;
632)   24D6 D4          		 DEFB    'T'+80H	;
633)   24D7 75 25       		 DEFW RTC_GET	;
634)   24D9 54 59 50    		 DEFM  "TYP"	;
635)   24DC C5          		 DEFB    'E'+80H	;
636)   24DD 22 25       		 DEFW DRV_TYPFILE	;
638)   24DF FF          		 DEFB 0FFH	;
641)   24E0 C3 73 26    		DOT: JP EXTCMDRET	;
646)   24E3 C3 00 00    		BYE: JP 0	;
649)   24E6 C3 73 26    		FX: JP EXTCMDRET	;
652)   24E9 C3 73 26    		NIMP: JP EXTCMDRET        ;NOT IMPLEMENTED YET	;NOT IMPLEMENTED YET
657)   24EC CD F0 46    		DRV_ERROR: CALL EXTERR	;
658)   24EF 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
658)   24F3 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
658)   24F7 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
658)   24FB 52          		 DEFM  "STORAGE ERROR"	;
659)   24FC 00          		 DEFB    0	;
664)   24FD CD 89 0A    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
665)   2500 D2 73 26    		 JP NC, EXTCMDRET	;
666)   2503 18 E7       		 JR DRV_ERROR	;
668)   2505 CD 84 5D    		DRV_GETFNPRM: CALL EXPR       ;VARIABLE TYPE	;VARIABLE TYPE
669)   2508 08          		 EX AF, AF'        ;E NO OF BYTES ACCS THE PARAM	;E NO OF BYTES ACCS THE PARAM
670)   2509 21 00 FB    		 LD HL, ACCS	;
671)   250C 06 00       		 LD B, 0	;
672)   250E 4B          		 LD C, E	;
673)   250F 11 B9 FE    		 LD DE, STRGBUFF	;
674)   2512 ED B0       		 LDIR	;
675)   2514 AF          		 XOR A	;
676)   2515 12          		 LD (DE), A	;
677)   2516 C9          		 RET	;
680)   2517 CD 05 25    		DRV_CD: CALL DRV_GETFNPRM	;
681)   251A CD B5 0A    		 CALL STRG_DIRCHG	;
682)   251D D2 73 26    		 JP NC, EXTCMDRET	;
683)   2520 18 CA       		 JR DRV_ERROR	;
686)   2522 CD 05 25    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
687)   2525 CD CD 0A    		 CALL STRG_OPNFILE	;
688)   2528 38 C2       		 JR C, DRV_ERROR	;
689)   252A CD 55 0B    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
690)   252D 3A E5 FE    		 LD A, (FID)	;
691)   2530 CD EB 0A    		 CALL STRG_CLSFILE	;
692)   2533 C3 73 26    		 JP EXTCMDRET	;
699)   2536 CD 94 5E    		RTC_GETBASPAR: CALL EXPRI	;
700)   2539 D9          		 EXX	;
701)   253A 7D          		 LD A, L        ;A HAS THE NUMBER	;A HAS THE NUMBER
702)   253B CD F8 28    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
703)   253E FD 7E 00    		 LD A, (IY)	;
704)   2541 FE 2C       		 CP ', '	;
705)   2543 FD 23       		 INC IY	;
706)   2545 7D          		 LD A, L	;
707)   2546 C9          		 RET	;
712)   2547 0E 00       		RTC_ADJUST: LD C, 0	;
713)   2549 11 89 FE    		 LD DE, BUFFER	;
714)   254C AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
715)   254D 32 89 FE    		 LD (BUFFER), A	;
716)   2550 13          		 INC DE	;
717)   2551 C5          		RTCADJ_NXT: PUSH BC	;
718)   2552 D5          		 PUSH DE	;
719)   2553 CD 36 25    		 CALL RTC_GETBASPAR	;
720)   2556 D1          		 POP DE	;
721)   2557 C1          		 POP BC	;
722)   2558 28 0B       		 JR Z, RTCADJ_PAROK	;
724)   255A FD 2B       		 DEC IY	;
725)   255C 47          		 LD B, A        ;SAVE A	;SAVE A
726)   255D 79          		 LD A, C	;
727)   255E FE 06       		 CP 6	;
728)   2560 28 08       		 JR Z, RTCADJ_EXEC	;
730)   2562 C3 3B 27    		 JP SNTX_ERROR	;
731)   2565 0C          		RTCADJ_PAROK: INC C	;
732)   2566 12          		 LD (DE), A	;
733)   2567 13          		 INC DE	;
734)   2568 18 E7       		 JR RTCADJ_NXT	;
735)   256A 78          		RTCADJ_EXEC: LD A, B	;
736)   256B 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
737)   256C 13          		 INC DE	;
738)   256D AF          		 XOR A	;
739)   256E 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
740)   256F CD F4 0D    		 CALL DS1307_ADJUST	;
741)   2572 C3 73 26    		 JP EXTCMDRET	;
743)   2575 CD 98 0D    		RTC_GET: CALL DS1307_GETNOW	;
745)   2578 21 86 25    		 LD HL, TSTSTR	;
746)   257B 11 00 80    		 LD DE, $8000	;
747)   257E 01 14 00    		 LD BC, 20	;
748)   2581 C5          		 PUSH BC	;
749)   2582 ED B0       		 LDIR	;
750)   2584 C1          		 POP BC	;
751)   2585 C9          		 RET	;
753)   2586 31 37 2F 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
753)   258A 33 2F 32 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
753)   258E 32 31 20 31 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
753)   2592 37 3A 35 32 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
753)   2596 3A 30 33    		 TSTSTR DEFM "17/03/2021 17:52:03"	;
754)   2599 00 0D       		 DEFB 0,0x0D	;
757)   259B CD 54 0F    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
758)   259E C3 73 26    		 JP EXTCMDRET	;
760)   25A1 CD 62 0F    		LCD_BLINKON: CALL LCD16_BLINKON	;
761)   25A4 C3 73 26    		 JP EXTCMDRET	;
763)   25A7 CD 05 0F    		LCD_CLR: CALL LCD16_CLR	;
764)   25AA C3 73 26    		 JP EXTCMDRET	;
767)   25AD CD 94 5E    		 CALL EXPRI	;
768)   25B0 D9          		 EXX	;
769)   25B1 55          		 LD D, L	;
770)   25B2 D5          		 PUSH DE	;
771)   25B3 FD 7E 00    		 LD A, (IY)	;
772)   25B6 FE 2C       		 CP ', '	;
773)   25B8 28 04       		 JR Z, LCDCA_OK	;
774)   25BA D1          		 POP DE	;
775)   25BB C3 3B 27    		 JP SNTX_ERROR	;
776)   25BE FD 23       		LCDCA_OK: INC IY	;
777)   25C0 CD 94 5E    		 CALL EXPRI	;
778)   25C3 D9          		 EXX	;
779)   25C4 D1          		 POP DE	;
780)   25C5 5D          		 LD E, L	;
781)   25C6 CD 29 0F    		 CALL LCD16_SETCURS	;
782)   25C9 C3 73 26    		 JP EXTCMDRET	;
784)   25CC CD 38 0F    		LCD_CURSOF: CALL LCD16_CURSOFF	;
785)   25CF C3 73 26    		 JP EXTCMDRET	;
787)   25D2 CD 46 0F    		LCD_CURSON: CALL LCD16_CURSON	;
788)   25D5 C3 73 26    		 JP EXTCMDRET	;
790)   25D8 CD DC 0E    		LCD_DISPOF: CALL LCD16_NODISP	;
791)   25DB C3 73 26    		 JP EXTCMDRET	;
793)   25DE CD EA 0E    		LCD_DISPON: CALL LCD16_DISP	;
794)   25E1 C3 73 26    		 JP EXTCMDRET	;
796)   25E4 CD 1C 0F    		LCD_HOME: CALL LCD16_HOME	;
797)   25E7 C3 73 26    		 JP EXTCMDRET	;
799)   25EA CD 7C 0F    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
800)   25ED C3 73 26    		 JP EXTCMDRET	;
802)   25F0 CD 82 0F    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
803)   25F3 C3 73 26    		 JP EXTCMDRET	;
805)   25F6 18 20       		LCD_PRN: JR PRINT0	;
806)   25F8 06 02       		PRINT6: LD B, 2	;
807)   25FA 18 22       		 JR PRINTC	;
808)   25FC 01 00 01    		PRINT8: LD BC, 100H	;
809)   25FF 18 1D       		 JR PRINTC	;
810)   2601 21 00 FD    		PRINT9: LD HL, STAVAR	;
811)   2604 AF          		 XOR A	;
812)   2605 BE          		 CP (HL)	;
813)   2606 28 10       		 JR Z, PRINT0	;
814)   2608 3A FB FD    		 LD A, (COUNT)	;
815)   260B B7          		 OR A	;
816)   260C 28 0A       		 JR Z, PRINT0	;
817)   260E 96          		PRINTA: SUB (HL)	;
818)   260F 28 07       		 JR Z, PRINT0	;
819)   2611 30 FB       		 JR NC, PRINTA	;
820)   2613 ED 44       		 NEG	;
821)   2615 CD 2A 57    		 CALL FILL	;
822)   2618 3A 00 FD    		PRINT0: LD A, (STAVAR)	;
823)   261B 4F          		 LD C, A        ;PRINTS	;PRINTS
824)   261C 06 00       		 LD B, 0        ;PRINTF	;PRINTF
825)   261E CD C2 56    		PRINTC: CALL TERM?	;
826)   2621 28 41       		 JR Z, PRINT4	;
827)   2623 CB 80       		 RES 0, B	;
828)   2625 FD 23       		 INC IY	;
829)   2627 FE 7E       		 CP '~'	;
830)   2629 28 CD       		 JR Z, PRINT6	;
831)   262B FE 3B       		 CP ';'        ;'	;'
832)   262D 28 CD       		 JR Z, PRINT8	;
833)   262F FE 2C       		 CP ','	;
834)   2631 28 CE       		 JR Z, PRINT9	;
835)   2633 CD E3 56    		 CALL FORMAT        ;SPC, TAB, '	;SPC, TAB, '
836)   2636 28 E6       		 JR Z, PRINTC	;
837)   2638 FD 2B       		 DEC IY	;
838)   263A C5          		 PUSH BC	;
839)   263B CD 84 5D    		 CALL EXPR        ;VARIABLE TYPE	;VARIABLE TYPE
840)   263E 08          		 EX AF, AF'	;
841)   263F FA 55 26    		 JP M, PRINT3        ;STRING	;STRING
842)   2642 D1          		 POP DE	;
843)   2643 D5          		 PUSH DE	;
844)   2644 CB 4A       		 BIT 1, D	;
845)   2646 F5          		 PUSH AF	;
846)   2647 CC 96 63    		 CALL Z, STR        ;DECIMAL	;DECIMAL
847)   264A F1          		 POP AF	;
848)   264B C4 53 63    		 CALL NZ, HEXSTR       ;HEX	;HEX
849)   264E C1          		 POP BC	;
850)   264F C5          		 PUSH BC	;
851)   2650 79          		 LD A, C	;
852)   2651 93          		 SUB E	;
853)   2652 D4 2A 57    		 CALL NC, FILL        ;RIGHT JUSTIFY	;RIGHT JUSTIFY
854)   2655 C1          		PRINT3: POP BC	;
857)   2656 21 00 FB    		 LD HL, ACCS       ; L IS 00	; L IS 00
858)   2659 7D          		 LD A, L	;
859)   265A 83          		 ADD E	;
860)   265B 6F          		 LD L, A	;
861)   265C AF          		 XOR A	;
862)   265D 77          		 LD (HL), A	;
863)   265E 6F          		 LD L, A	;
864)   265F CD 0E 0F    		 CALL LCD16_PRINT       ;PRINT	;PRINT
865)   2662 18 BA       		 JR PRINTC	;
866)   2664 C3 73 26    		PRINT4: JP EXTCMDRET	;
869)   2667 CD 70 0F    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
870)   266A C3 73 26    		 JP EXTCMDRET	;
872)   266D CD 76 0F    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
873)   2670 C3 73 26    		 JP EXTCMDRET	;
877)   2673 AF          		 XOR A	;
880)   2674 C9          		 RET	;
887)   2675 FE FF       		@MYOS_OSOPEN: CP 255	;
888)   2677 28 06       		 JR Z, OPW	;
889)   2679 FE 01       		 CP 1	;
890)   267B 28 06       		 JR Z, OPRW	;
892)   267D 18 06       		 JR DOOP	;
893)   267F 3E 01       		OPW: LD A, 1	;
894)   2681 18 02       		 JR DOOP	;
895)   2683 3E 02       		OPRW: LD A, 2	;
896)   2685 F5          		DOOP: PUSH AF        ;SAVE A	;SAVE A
897)   2686 AF          		 XOR A         ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
898)   2687 12          		 LD (DE), A        ;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0	;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0
899)   2688 EB          		 EX DE, HL	;
900)   2689 ED 52       		 SBC HL, DE	;
901)   268B 23          		 INC HL         ;+1 FOR ZERO	;+1 FOR ZERO
902)   268C E5          		 PUSH HL	;
903)   268D C1          		 POP BC	;
904)   268E EB          		 EX DE, HL	;
905)   268F 11 B9 FE    		 LD DE, STRGBUFF	;
906)   2692 ED B0       		 LDIR         ;COPY FILENAME TO STRGBUFF	;COPY FILENAME TO STRGBUFF
907)   2694 F1          		 POP AF         ;RESTORE A	;RESTORE A
908)   2695 CD CD 0A    		 CALL STRG_OPNFILE	;
909)   2698 DA EC 24    		 JP C, DRV_ERROR	;
910)   269B C9          		 RET	;
914)   269C 21 B9 FE    		@MYOS_OSBPUT: LD HL, STRGBUFF	;
915)   269F 77          		 LD (HL), A        ;VALUE	;VALUE
916)   26A0 7B          		 LD A, E        ;FID	;FID
917)   26A1 EB          		 EX DE, HL	;
918)   26A2 01 01 00    		 LD BC, 1        ;NO OF BYTES TO WRITE	;NO OF BYTES TO WRITE
919)   26A5 CD FD 0A    		 CALL STRG_BLKWRITE	;
920)   26A8 DA EC 24    		 JP C, DRV_ERROR	;
921)   26AB C9          		 RET	;
925)   26AC 7B          		@MYOS_OSBGET: LD A, E       ;FID	;FID
926)   26AD 11 B9 FE    		 LD DE, STRGBUFF       ;SET BUFFER	;SET BUFFER
927)   26B0 01 01 00    		 LD BC, 1        ;NO OF BYTES TO READ	;NO OF BYTES TO READ
928)   26B3 CD 20 0B    		 CALL STRG_BLKREAD	;
929)   26B6 DA EC 24    		 JP C, DRV_ERROR	;
930)   26B9 78          		 LD A, B	;
931)   26BA 81          		 ADD C	;
932)   26BB FE 01       		 CP 1	;
933)   26BD 28 03       		 JR Z, GETISOK	;
934)   26BF 3E FF       		 LD A, 255	;
935)   26C1 C9          		 RET	;
936)   26C2 3A B9 FE    		GETISOK: LD A, (STRGBUFF)	;
937)   26C5 C9          		 RET	;
942)   26C6 7B          		@MYOS_GETPTR: LD A, E	;
943)   26C7 CD 55 0A    		 CALL STRG_GETPOS	;
944)   26CA C9          		 RET	;
949)   26CB CD 6F 0A    		@MYOS_PUTPTR: CALL STRG_SETPOS	;
950)   26CE C9          		 RET	;
955)   26CF 7B          		@MYOS_GETEXT: LD A, E	;
956)   26D0 CD 50 0A    		 CALL STRG_GETSIZE	;
957)   26D3 C9          		 RET	;
962)   26D4 7B          		@MYOS_OSSHUT: LD A, E	;
963)   26D5 CD EB 0A    		 CALL STRG_CLSFILE	;
964)   26D8 C9          		 RET	;
967)   26D9 7B          		@MYOS_OSSTAT: LD A, E	;
968)   26DA CD 3E 0A    		 CALL STRG_GETEOF	;
969)   26DD FE FF       		 CP 255         ;TEST IF -1	;TEST IF -1
970)   26DF C9          		 RET	;
974)   26E0 C9          		@MYOS_OSCALL: RET	;
977)   26E1 C9          		@MYOS_RESET: RET	;
979)   26E2 CD 94 5E    		@MYOS_MODE: CALL EXPRI       ;GET PARAM	;GET PARAM
980)   26E5 D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
981)   26E6 C3 E8 4C    		 JP XEQ	;
983)   26E9 CD D7 1D    		@MYOS_CLG: CALL GRPH_SAVECOLORS	;
984)   26EC CD 4C 19    		 CALL LCD_CLRSCR	;
985)   26EF CD EE 1D    		 CALL GRPH_RESTORECOLORS	;
986)   26F2 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
989)   26F5 DD E5       		@MYOS_GCOL: PUSH IX	;
990)   26F7 3E 01       		 LD A, 1	;
991)   26F9 CD DC 1B    		 CALL BAS_COLOUR	;
992)   26FC DD E1       		 POP IX	;
993)   26FE C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
995)   2701 DD E5       		@MYOS_COLOUR: PUSH IX	;
996)   2703 AF          		 XOR A	;
997)   2704 CD DC 1B    		 CALL BAS_COLOUR	;
998)   2707 DD E1       		 POP IX	;
999)   2709 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1001)   270C DD E5       		@MYOS_DRAW: PUSH IX	;
1002)   270E CD B5 1C    		 CALL BAS_DRAW	;
1003)   2711 DD E1       		 POP IX	;
1004)   2713 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1006)   2716 DD E5       		@MYOS_MOVE: PUSH IX	;
1007)   2718 CD DE 1C    		 CALL BAS_MOVE	;
1008)   271B DD E1       		 POP IX	;
1009)   271D C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1011)   2720 DD E5       		@MYOS_PLOT: PUSH IX	;
1012)   2722 CD 4E 1D    		 CALL BAS_PLOT	;
1013)   2725 DD E1       		 POP IX	;
1014)   2727 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1016)   272A DD E5       		@MYOS_POINT: PUSH IX	;
1017)   272C CD EA 1C    		 CALL BAS_POINT       ;RETURNS A VALUE TO BASIC	;RETURNS A VALUE TO BASIC
1018)   272F DD E1       		 POP IX	;
1019)   2731 C9          		 RET	;
1028)   2732 CD 71 1C    		@MYOS_PUTIMS: CALL GETBASICPARAMS     ;	;
1029)   2735 C3 E8 4C    		 JP XEQ	;
1031)   2738 C3 75 25    		@MYOS_GETIMS: JP RTC_GET	;
1033)   273B CD F0 46    		SNTX_ERROR: CALL EXTERR	;
1034)   273E 53 79 6E 74 		 DEFM  "Syntax error"	;
1034)   2742 61 78 20 65 		 DEFM  "Syntax error"	;
1034)   2746 72 72 6F 72 		 DEFM  "Syntax error"	;
1035)   274A 00          		 DEFB    0	;
1042)   274B CD 66 03    		GETKEY: CALL GET_CHAR	;
1043)   274E 37          		 SCF	;
1044)   274F C9          		 RET	;
1050)   2750 CD 53 03    		 CALL GET_CHARNW	;
1051)   2753 3F          		 CCF	;
1052)   2754 FE 00       		 CP 0	;
1053)   2756 C8          		 RET Z	;
1054)   2757 37          		 SCF	;
1055)   2758 C9          		 RET	;
1057)   2759 F5          		@CHKCURS: PUSH AF	;
1058)   275A 3A A7 FE    		 LD A, (TIMECTR)	;
1059)   275D CB 67       		 BIT 4, A	;
1060)   275F 28 11       		 JR Z, CCSHOW        ;IF SET SHOW	;IF SET SHOW
1061)   2761 3A 11 FE    		CCHIDE: LD A, (CURSSTAT)	;
1062)   2764 CB 4F       		 BIT 1, A	;
1063)   2766 20 19       		 JR NZ, CCEX        ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
1064)   2768 CB CF       		 SET 1, A	;
1065)   276A 32 11 FE    		 LD (CURSSTAT), A	;
1066)   276D CD 94 03    		 CALL OS_RMVCURS	;
1067)   2770 18 0F       		 JR CCEX	;
1068)   2772 3A 11 FE    		CCSHOW: LD A, (CURSSTAT)	;
1069)   2775 CB 4F       		 BIT 1, A	;
1070)   2777 28 08       		 JR Z, CCEX        ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
1071)   2779 CB 8F       		 RES 1, A	;
1072)   277B 32 11 FE    		 LD (CURSSTAT), A	;
1073)   277E CD 8D 03    		 CALL OS_PRNCURS	;
1075)   2781 F1          		CCEX: POP AF	;
1076)   2782 C9          		 RET	;
1087)   2783 3A 00 FE    		 LD A, (FLAGS)	;
1088)   2786 CB 5F       		 BIT 3, A        ;EDIT MODE?	;EDIT MODE?
1089)   2788 28 09       		 JR Z, OSLIN1	;
1090)   278A CB 9F       		 RES 3, A	;
1091)   278C 32 00 FE    		 LD (FLAGS), A	;
1092)   278F 2A 12 FE    		 LD HL, (EDPTR)	;
1093)   2792 BD          		 CP L	;
1094)   2793 3E 0D       		OSLIN1: LD A, CR	;
1095)   2795 77          		 LD (HL), A	;
1096)   2796 C4 A9 20    		 CALL NZ, MYOS_OSWRCH	;
1097)   2799 2E 00       		 LD L, 0	;
1098)   279B 4D          		 LD C, L        ;REPEAT FLAG	;REPEAT FLAG
1099)   279C 28 20       		 JR Z, OSWAIT        ;SUPPRESS UNWANTED SPACE	;SUPPRESS UNWANTED SPACE
1100)   279E 06 00       		UPDATE: LD B, 0	;
1101)   27A0 7E          		UPD1: LD A, (HL)	;
1102)   27A1 04          		 INC B	;
1103)   27A2 23          		 INC HL	;
1104)   27A3 FE 0D       		 CP CR	;
1105)   27A5 F5          		 PUSH AF	;
1106)   27A6 E5          		 PUSH HL	;
1107)   27A7 5F          		 LD E, A	;
1108)   27A8 C4 5D 22    		 CALL NZ, WRCH        ;FAST WRCH	;FAST WRCH
1109)   27AB E1          		 POP HL	;
1110)   27AC F1          		 POP AF	;
1111)   27AD 20 F1       		 JR NZ, UPD1	;
1112)   27AF 3E 20       		 LD A, ' '	;
1113)   27B1 CD A9 20    		 CALL MYOS_OSWRCH	;
1114)   27B4 1E 08       		 LD E, BS	;
1115)   27B6 E5          		UPD2: PUSH HL	;
1116)   27B7 CD 5D 22    		 CALL WRCH        ;FAST WRCH	;FAST WRCH
1117)   27BA E1          		 POP HL	;
1118)   27BB 2B          		 DEC HL	;
1119)   27BC 10 F8       		 DJNZ UPD2	;
1120)   27BE 79          		OSWAIT: LD A, C	;
1121)   27BF 05          		 DEC B	;
1122)   27C0 28 01       		 JR Z, LIMIT	;
1123)   27C2 B7          		 OR A         ;REPEAT COMMAND?	;REPEAT COMMAND?
1124)   27C3 CC 9C 20    		LIMIT: CALL Z, KEYGET        ;READ KEYBOARD	;READ KEYBOARD
1125)   27C6 4F          		 LD C, A        ;SAVE FOR REPEAT	;SAVE FOR REPEAT
1126)   27C7 11 BE 27    		 LD DE, OSWAIT        ;RETURN ADDRESS	;RETURN ADDRESS
1127)   27CA D5          		 PUSH DE	;
1128)   27CB 3A 00 FE    		 LD A, (FLAGS)	;
1129)   27CE B7          		 OR A         ;TEST FOR ESCAPE	;TEST FOR ESCAPE
1130)   27CF 79          		 LD A, C	;
1131)   27D0 FA 12 28    		 JP M, OSEXIT	;
1132)   27D3 FE 0B       		 CP 11         ;CURSOR UP     (IX-11)	;CURSOR UP     (IX-11)
1133)   27D5 CA 56 28    		 JP Z, LEFT	;
1134)   27D8 FE 0A       		 CP 10         ;CURSOR DOWN   (IX-10)	;CURSOR DOWN   (IX-10)
1135)   27DA CA 89 28    		 JP Z, RIGHT	;
1136)   27DD 06 00       		 LD B, 0	;
1137)   27DF FE 05       		 CP 5         ;CLEAR LEFT    (IX-5)	;CLEAR LEFT    (IX-5)
1138)   27E1 28 72       		 JR Z, BACK	;
1139)   27E3 FE 09       		 CP 9         ;START OF LINE (IX-9)	;START OF LINE (IX-9)
1140)   27E5 28 6F       		 JR Z, LEFT	;
1141)   27E7 FE 07       		 CP 7         ;CLEAR RIGHT   (IX-7)	;CLEAR RIGHT   (IX-7)
1142)   27E9 28 76       		 JR Z, DELETE	;
1143)   27EB FE 08       		 CP 8         ;END OF LINE   (IX-8)	;END OF LINE   (IX-8)
1144)   27ED CA 89 28    		 JP Z, RIGHT	;
1145)   27F0 0E 00       		 LD C, 0        ;INHIBIT REPEAT	;INHIBIT REPEAT
1146)   27F2 FE 10       		 CP 'P' AND 1FH	;
1147)   27F4 CA 80 22    		 JP Z, TOGGLE	;
1148)   27F7 FE 06       		 CP 6         ;DELETE LEFT   (IX-6)	;DELETE LEFT   (IX-6)
1149)   27F9 28 5A       		 JR Z, BACK	;
1150)   27FB FE 04       		 CP 4         ;CURSOR LEFT   (IX-4)	;CURSOR LEFT   (IX-4)
1151)   27FD 28 57       		 JR Z, LEFT	;
1152)   27FF FE 02       		 CP 2         ;DELETE RIGHT  (IX-2)	;DELETE RIGHT  (IX-2)
1153)   2801 28 5E       		 JR Z, DELETE	;
1154)   2803 FE 01       		 CP 1         ;INSERT SPACE  (IX-1)	;INSERT SPACE  (IX-1)
1155)   2805 28 6E       		 JR Z, INSERT	;
1156)   2807 FE 03       		 CP 3         ;CURSOR RIGHT  (IX-3)	;CURSOR RIGHT  (IX-3)
1157)   2809 28 7E       		 JR Z, RIGHT	;
1158)   280B FE 20       		 CP ' '         ;PRINTING CHARACTER	;PRINTING CHARACTER
1159)   280D 30 7F       		 JR NC, SAVECH	;
1160)   280F FE 0D       		 CP CR         ;ENTER LINE	;ENTER LINE
1161)   2811 C0          		 RET NZ	;
1162)   2812 7E          		OSEXIT: LD A, (HL)	;
1163)   2813 CD A9 20    		 CALL MYOS_OSWRCH       ;WRITE REST OF LINE	;WRITE REST OF LINE
1164)   2816 23          		 INC HL	;
1165)   2817 D6 0D       		 SUB CR	;
1166)   2819 20 F7       		 JR NZ, OSEXIT	;
1167)   281B D1          		 POP DE         ;DITCH RETURN ADDRESS	;DITCH RETURN ADDRESS
1168)   281C B9          		 CP C	;
1169)   281D C2 BD 22    		 JP NZ, ABORT        ;ESCAPE	;ESCAPE
1170)   2820 3E 0A       		 LD A, LF	;
1171)   2822 CD A9 20    		 CALL MYOS_OSWRCH	;
1172)   2825 ED 5B F4 FD 		 LD DE, (ERRLIN)	;
1173)   2829 AF          		 XOR A	;
1174)   282A 6F          		 LD L, A	;
1175)   282B 22 12 FE    		 LD (EDPTR), HL	;
1176)   282E BA          		 CP D	;
1177)   282F C0          		 RET NZ	;
1178)   2830 BB          		 CP E	;
1179)   2831 C0          		 RET NZ	;
1180)   2832 11 A2 28    		 LD DE, EDITST	;
1181)   2835 06 04       		 LD B, 4	;
1182)   2837 1A          		CMPARE: LD A, (DE)	;
1183)   2838 BE          		 CP (HL)	;
1184)   2839 3E 00       		 LD A, 0	;
1185)   283B C0          		 RET NZ	;
1186)   283C 23          		 INC HL	;
1187)   283D 13          		 INC DE	;
1188)   283E 7E          		 LD A, (HL)	;
1189)   283F FE 2E       		 CP '.'	;
1190)   2841 28 02       		 JR Z, ABBR	;
1191)   2843 10 F2       		 DJNZ CMPARE	;
1192)   2845 AF          		ABBR: XOR A	;
1193)   2846 47          		 LD B, A	;
1194)   2847 4D          		 LD C, L	;
1195)   2848 6F          		 LD L, A	;
1196)   2849 11 A6 28    		 LD DE, LISTST	;
1197)   284C EB          		 EX DE, HL	;
1198)   284D ED B0       		 LDIR	;
1199)   284F 21 00 FE    		 LD HL, FLAGS	;
1200)   2852 CB DE       		 SET 3, (HL)	;
1201)   2854 C9          		 RET	;
1203)   2855 37          		BACK: SCF         ;DELETE LEFT	;DELETE LEFT
1204)   2856 2C          		LEFT: INC L         ;CURSOR LEFT	;CURSOR LEFT
1205)   2857 2D          		 DEC L	;
1206)   2858 28 45       		 JR Z, STOP	;
1207)   285A 3E 08       		 LD A, BS	;
1208)   285C CD A9 20    		 CALL MYOS_OSWRCH	;
1209)   285F 2D          		 DEC L	;
1210)   2860 D0          		 RET NC	;
1211)   2861 7E          		DELETE: LD A, (HL)        ;DELETE RIGHT	;DELETE RIGHT
1212)   2862 FE 0D       		 CP CR	;
1213)   2864 28 39       		 JR Z, STOP	;
1214)   2866 54          		 LD D, H	;
1215)   2867 5D          		 LD E, L	;
1216)   2868 13          		DEL1: INC DE	;
1217)   2869 1A          		 LD A, (DE)	;
1218)   286A 1B          		 DEC DE	;
1219)   286B 12          		 LD (DE), A	;
1220)   286C 13          		 INC DE	;
1221)   286D FE 0D       		 CP CR	;
1222)   286F 20 F7       		 JR NZ, DEL1	;
1223)   2871 D1          		DEL2: POP DE         ;DITCH	;DITCH
1224)   2872 C3 9E 27    		 JP UPDATE	;
1226)   2875 3E 0D       		INSERT: LD A, CR        ;INSERT SPACE	;INSERT SPACE
1227)   2877 BE          		 CP (HL)	;
1228)   2878 C8          		 RET Z	;
1229)   2879 54          		 LD D, H	;
1230)   287A 1E FE       		 LD E, 254	;
1231)   287C 13          		INS1: INC DE	;
1232)   287D 12          		 LD (DE), A	;
1233)   287E 1B          		 DEC DE	;
1234)   287F 7B          		 LD A, E	;
1235)   2880 BD          		 CP L	;
1236)   2881 1B          		 DEC DE	;
1237)   2882 1A          		 LD A, (DE)	;
1238)   2883 20 F7       		 JR NZ, INS1	;
1239)   2885 36 20       		 LD (HL), ' '	;
1240)   2887 18 E8       		 JR DEL2	;
1242)   2889 7E          		RIGHT: LD A, (HL)        ;CURSOR RIGHT	;CURSOR RIGHT
1243)   288A FE 0D       		 CP CR	;
1244)   288C 28 11       		 JR Z, STOP	;
1245)   288E 56          		SAVECH: LD D, (HL)        ;PRINTING CHARACTER	;PRINTING CHARACTER
1246)   288F 77          		 LD (HL), A	;
1247)   2890 2C          		 INC L	;
1248)   2891 28 09       		 JR Z, WONTGO        ;LINE TOO LONG	;LINE TOO LONG
1249)   2893 CD A9 20    		 CALL MYOS_OSWRCH	;
1250)   2896 3E 0D       		 LD A, CR	;
1251)   2898 BA          		 CP D	;
1252)   2899 C0          		 RET NZ	;
1253)   289A 77          		 LD (HL), A	;
1254)   289B C9          		 RET	;
1256)   289C 2D          		WONTGO: DEC L	;
1257)   289D 36 0D       		 LD (HL), CR	;
1260)   289F 0E 00       		STOP: LD C, 0        ;STOP REPEAT	;STOP REPEAT
1261)   28A1 C9          		 RET	;
1264)   28A2 45 44 49 54 		EDITST: DEFM  "EDIT"	;
1265)   28A6 4C 49 53 54 		LISTST: DEFM  "LIST"	;
 18)   28AA C9          		 RET	;
 21)   28AB F5          		DELAYMICROSEC: PUSH AF	;
 22)   28AC D5          		 PUSH DE	;
 23)   28AD 1B          		 DEC DE	;
 24)   28AE D1          		 POP DE	;
 25)   28AF F1          		 POP AF	;
 26)   28B0 C9          		 RET	;
 29)   28B1 CD AB 28    		S21: CALL DELAYMICROSEC	;
 30)   28B4 10 FB       		 DJNZ S21	;
 31)   28B6 C9          		 RET	;
 35)   28B7 F5          		DELAYMILISEC: PUSH AF	;
 36)   28B8 D5          		 PUSH DE	;
 37)   28B9 11 2C 01    		 LD DE, 300       ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 38)   28BC 1B          		DEL1: DEC DE	;
 39)   28BD 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 40)   28BE B3          		 OR E	;
 41)   28BF 20 FB       		 JR NZ, DEL1	;
 42)   28C1 D1          		 POP DE	;
 43)   28C2 F1          		 POP AF	;
 44)   28C3 C9          		 RET	;
 46)   28C4 06 50       		DEL2: LD B, 80	;
 48)   28C6 CD B7 28    		S1: CALL DELAYMILISEC	;
 49)   28C9 10 FB       		 DJNZ S1	;
 50)   28CB C9          		 RET	;
 55)   28CC C5          		@DELAYSEC: PUSH BC	;
 56)   28CD 01 E8 03    		 LD BC, 1000	;
 57)   28D0 C5          		MYDLAGN: PUSH BC	;
 58)   28D1 CD B7 28    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 59)   28D4 C1          		 POP BC	;
 60)   28D5 0B          		 DEC BC	;
 61)   28D6 78          		 LD A, B	;
 62)   28D7 B1          		 OR C	;
 63)   28D8 20 F6       		 JR NZ, MYDLAGN	;
 64)   28DA C1          		 POP BC	;
 65)   28DB 10 EF       		 DJNZ DELAYSEC	;
 66)   28DD C9          		 RET	;
 71)   28DE F5          		 OUTASC PUSH AF	;
 72)   28DF D5          		 PUSH DE	;
 73)   28E0 CD 13 29    		 CALL B2Bcd	;
 74)   28E3 D1          		 POP DE	;
 75)   28E4 CD 39 29    		 CALL BCD2HA	;
 76)   28E7 F1          		 POP AF	;
 77)   28E8 C9          		 RET	;
 91)   28E9 B7          		BCD2BN: OR A	;
 92)   28EA 47          		 LD B, A	;
 93)   28EB E6 F0       		 AND $F0	;
 94)   28ED 0F          		 RRCA	;
 95)   28EE 4F          		 LD C, A	;
 96)   28EF 0F          		 RRCA	;
 97)   28F0 0F          		 RRCA	;
 98)   28F1 81          		 ADD A, C	;
 99)   28F2 4F          		 LD C, A	;
100)   28F3 78          		 LD A, B	;
101)   28F4 E6 0F       		 AND $0F	;
102)   28F6 81          		 ADD A, C	;
103)   28F7 C9          		 RET	;
118)   28F8 26 FF       		BN2BCD: LD H, $FF	;
119)   28FA 24          		D100LP: INC H	;
120)   28FB D6 64       		 SUB 100	;
121)   28FD 30 FB       		 JR NC, D100LP	;
122)   28FF C6 64       		 ADD A, 100	;
123)   2901 2E FF       		 LD L, $FF	;
124)   2903 2C          		D10LP: INC L	;
125)   2904 D6 0A       		 SUB 10	;
126)   2906 30 FB       		 JR NC, D10LP	;
127)   2908 C6 0A       		 ADD A, 10	;
128)   290A 4F          		 LD C, A	;
129)   290B 7D          		 LD A, L	;
130)   290C 07          		 RLCA	;
131)   290D 07          		 RLCA	;
132)   290E 07          		 RLCA	;
133)   290F 07          		 RLCA	;
134)   2910 B1          		 OR C	;
135)   2911 6F          		 LD L, A	;
136)   2912 C9          		 RET	;
150)   2913 01 00 10    		 LD BC, 16 * 256 + 0      ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
151)   2916 11 00 00    		 LD DE, 0	;
153)   2919 29          		 ADD HL, HL	;
154)   291A 7B          		 LD A, E	;
155)   291B 8F          		 ADC A, A	;
156)   291C 27          		 DAA	;
157)   291D 5F          		 LD E, A	;
158)   291E 7A          		 LD A, D	;
159)   291F 8F          		 ADC A, A	;
160)   2920 27          		 DAA	;
161)   2921 57          		 LD D, A	;
162)   2922 79          		 LD A, C	;
163)   2923 8F          		 ADC A, A	;
164)   2924 27          		 DAA	;
165)   2925 4F          		 LD C, A	;
166)   2926 10 F1       		 DJNZ cvtLp	;
167)   2928 EB          		 EX DE, HL	;
168)   2929 C9          		 RET	;
182)   292A B7          		BCD2BN: OR A	;
183)   292B 47          		 LD B, A	;
184)   292C E6 F0       		 AND $F0	;
185)   292E 0F          		 RRCA	;
186)   292F 4F          		 LD C, A	;
187)   2930 0F          		 RRCA	;
188)   2931 0F          		 RRCA	;
189)   2932 81          		 ADD A, C	;
190)   2933 4F          		 LD C, A	;
191)   2934 78          		 LD A, B	;
192)   2935 E6 0F       		 AND $0F	;
193)   2937 81          		 ADD A, C	;
194)   2938 C9          		 RET	;
206)   2939 79          		 LD A, C	;
207)   293A CD 66 29    		 CALL cvtUN	;
208)   293D 79          		 LD A, C	;
209)   293E CD 6A 29    		 CALL cvtLN	;
210)   2941 7C          		 LD A, H	;
211)   2942 CD 66 29    		 CALL cvtUN	;
212)   2945 7C          		 LD A, H	;
213)   2946 CD 6A 29    		 CALL cvtLN	;
214)   2949 7D          		 LD A, L	;
215)   294A CD 66 29    		 CALL cvtUN	;
216)   294D 7D          		 LD A, L	;
217)   294E 18 1A       		 JR cvtLN	;
219)   2950 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
220)   2951 1F          		 RRA	;
221)   2952 1F          		 RRA	;
222)   2953 1F          		 RRA	;
224)   2954 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
225)   2956 C6 90       		 ADD A, 90h       ; old trick	; old trick
226)   2958 27          		 DAA        ; for converting	; for converting
227)   2959 CE 40       		 ADC A, 40h       ; one nibble	; one nibble
228)   295B 27          		 DAA        ; to hex ASCII	; to hex ASCII
229)   295C 12          		 LD (DE), A	;
230)   295D 13          		 INC DE	;
231)   295E C9          		 RET	;
243)   295F 7D          		 LD A, L	;
244)   2960 CD 50 29    		 CALL cvtUN	;
245)   2963 7D          		 LD A, L	;
246)   2964 18 EE       		 JR cvtLN	;
248)   2966 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
249)   2967 1F          		 RRA	;
250)   2968 1F          		 RRA	;
251)   2969 1F          		 RRA	;
253)   296A E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
254)   296C C6 90       		 ADD A, 90h       ; old trick	; old trick
255)   296E 27          		 DAA        ; for converting	; for converting
256)   296F CE 40       		 ADC A, 40h       ; one nibble	; one nibble
257)   2971 27          		 DAA        ; to hex ASCII	; to hex ASCII
258)   2972 12          		 LD (DE), A	;
259)   2973 13          		 INC DE	;
260)   2974 C9          		 RET	;
277)   2975 F5          		 PUSH AF        ; 11 T-states	; 11 T-states
279)   2976 ED 44       		 NEG         ; 8 T-states	; 8 T-states
280)   2978 ED 44       		 NEG         ; 8 T-states	; 8 T-states
281)   297A ED 44       		 NEG         ; 8 T-states	; 8 T-states
282)   297C ED 44       		 NEG         ; 8 T-states	; 8 T-states
283)   297E 0B          		 DEC BC         ; 6 T-states	; 6 T-states
284)   297F 79          		 LD A, C        ; 9 T-states	; 9 T-states
285)   2980 B0          		 OR B         ; 4 T-states	; 4 T-states
286)   2981 C2 76 29    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
287)   2984 F1          		 POP AF         ; 10 T-states	; 10 T-states
288)   2985 C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
  6)   2986 21 00 00    		@Mult16: ld hl, 0	;
  7)   2989 78          		 ld a, b	;
  8)   298A 06 10       		 ld b, 16	;
 10)   298C 29          		 add hl, hl	;
 11)   298D CB 21       		 sla c	;
 12)   298F 17          		 rla	;
 13)   2990 30 01       		 jr nc, Mult16_NoAdd	;
 14)   2992 19          		 add hl, de	;
 16)   2993 10 F7       		 djnz Mult16_Loop	;
 17)   2995 C9          		 ret	;
 23)   2996 D5          		@Mult32: PUSH DE	;
 24)   2997 79          		 ld a, c	;
 25)   2998 48          		 ld c, b	;
 26)   2999 21 00 00    		 ld hl, 0	;
 27)   299C 06 10       		 ld b, 16	;
 29)   299E 29          		 add hl, hl	;
 30)   299F 17          		 rla	;
 31)   29A0 CB 11       		 rl c	;
 32)   29A2 30 07       		 jr nc, Mult32_NoAdd	;
 33)   29A4 19          		 add hl, de	;
 34)   29A5 CE 00       		 adc a, 0	;
 35)   29A7 D2 AB 29    		 jp nc, Mult32_NoAdd	;
 36)   29AA 0C          		 inc c	;
 38)   29AB 10 F1       		 djnz Mult32_Loop	;
 39)   29AD 41          		 ld b, c	;
 40)   29AE 4F          		 ld c, a	;
 41)   29AF D1          		 POP DE	;
 42)   29B0 C9          		 ret	;
 50)   29B1 19          		 ADD HL, DE        ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
 51)   29B2 D9          		 EXX	;
 52)   29B3 ED 5A       		 ADC HL, DE        ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
 53)   29B5 D9          		 EXX	;
 56)   29B6 C9          		 RET	;
 66)   29B7 11 40 00    		 ld de, $0040	;
 67)   29BA 7D          		 ld a, l	;
 68)   29BB 6C          		 ld l, h	;
 69)   29BC 62          		 ld h, d	;
 70)   29BD B7          		 or a	;
 71)   29BE 06 08       		 ld b, 8	;
 73)   29C0 ED 52       		 sbc hl, de	;
 74)   29C2 30 01       		 jr nc, Sqr16_Skip	;
 75)   29C4 19          		 add hl, de	;
 77)   29C5 3F          		 ccf	;
 78)   29C6 CB 12       		 rl d	;
 79)   29C8 87          		 add a, a	;
 80)   29C9 ED 6A       		 adc hl, hl	;
 81)   29CB 87          		 add a, a	;
 82)   29CC ED 6A       		 adc hl, hl	;
 83)   29CE 10 F0       		 djnz Sqr16_Loop	;
 84)   29D0 C9          		 ret	;
  9)   FE00 00          		 @FLAGS DEFS 1        ; Flags: B7=ESC PRESSED,B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 10)   FE01 00 00       		 @FCOLOR DEFS 2       ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 11)   FE03 00 00       		 @BCOLOR DEFS 2       ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 12)   FE05 00 00       		 @FGRCOL DEFS 2       ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 13)   FE07 00 00       		 @BGRCOL DEFS 2       ;BACKGROUND COLOR FOR GRAPHICS	;BACKGROUND COLOR FOR GRAPHICS
 14)   FE09 00 00       		 @FCOLTM DEFS 2       ;TEMP FOREGROUND COLOR	;TEMP FOREGROUND COLOR
 15)   FE0B 00 00       		 @BCOLTM DEFS 2       ;TEMP BACKGROUND COLOR	;TEMP BACKGROUND COLOR
 16)   FE0D 00          		 @CURSORX DEFS 1       ;0-79	;0-79
 17)   FE0E 00          		 @CURSORY DEFS 1       ;0-47	;0-47
 18)   FE0F 00          		 @SCRLN DEFS 1        ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 19)   FE10 00          		 @LASTCHAR DEFS 1      ;	;
 20)   FE11 00          		 @CURSSTAT DEFS 1       ;IF BIT 0 SET THEN SHOW ELSE HIDE,IF BIT 1 SET THEN VISIBLE ELSE HIDDEN	;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN
 21)   FE12 00 00       		 @EDPTR DEFS 2	;
 22)   FE14 00          		 @OPTVAL DEFS 1	;
 23)   FE15 00          		 @INKEY DEFS 1	;
 24)   FE16 00          		 @VDUMODE DEFS 1       ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 25)   FE17 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE23 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE27 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE33 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 26)   FE37 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE43 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE47 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE53 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 27)   FE57 00 00       		 @GR_LASTX3 DEFS 2	;
 28)   FE59 00 00       		 @GR_LASTY3 DEFS 2	;
 29)   FE5B 00 00       		 @GR_LASTX2 DEFS 2	;
 30)   FE5D 00 00       		 @GR_LASTY2 DEFS 2	;
 31)   FE5F 00 00       		 @GR_LASTX DEFS 2	;
 32)   FE61 00 00       		 @GR_LASTY DEFS 2	;
 33)   FE63 00 00       		 @GR_PARAM1 DEFS 2	;
 34)   FE65 00 00       		 @GR_PARAM2 DEFS 2	;
 35)   FE67 00 00       		 @GR_PARAM3 DEFS 2	;
 36)   FE69 00 00       		 @GR_PARAM4 DEFS 2	;
 38)   FE6B 00 00       		 @FILL_X DEFS 2	;
 39)   FE6D 00 00       		 @FILL_Y DEFS 2	;
 40)   FE6F 00 00       		 @FILL_L DEFS 2	;
 41)   FE71 00 00       		 @FILL_X1 DEFS 2	;
 42)   FE73 00 00       		 @FILL_X2 DEFS 2	;
 43)   FE75 00 00       		 @FILL_DY DEFS 2	;
 44)   FE77 00 00       		 @FILL_Q DEFS 2        ;START OF QUEUE	;START OF QUEUE
 45)   FE79 00 00       		 @FILL_IDX DEFS 2       ;INDEX OF QUEUE	;INDEX OF QUEUE
 46)   FE7B 00 00       		 @FILL_PY DEFS 2       ;FOR PUSH/POP	;FOR PUSH/POP
 47)   FE7D 00 00       		 @FILL_PXL DEFS 2	;
 48)   FE7F 00 00       		 @FILL_PXR DEFS 2	;
 49)   FE81 00 00       		 @FILL_PDY DEFS 2	;
 50)   FE83 00 00       		 @FILL_OV DEFS 2       ;OLD COLOR	;OLD COLOR
 51)   FE85 00 00       		 @FILL_OLDSP DEFS 2      ; OLD SP	; OLD SP
 52)   FE87 00          		 @LCD_DSPCTRL DEFS 1	;
 53)   FE88 00          		 @LCD_DSPMODE DEFS 1	;
 54)   FE89 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE8D 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE91 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE95 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE99 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 55)   FE9D 00          		 @FFSTAT DEFS 1        ;FOR OUTPUT FLIP FLOPS DEVEPR,DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 56)   FE9E 00          		 @KEYCTR DEFS 1        ;FOR USB KEYBOARD	;FOR USB KEYBOARD
 57)   FE9F 00          		 @SERERR DEFS 1       ;	;
 58)   FEA0 00          		 @SERER2 DEFS 1        ;AT RAM ADDRESS	;AT RAM ADDRESS
 59)   FEA1 00          		 @DISPCT DEFS 1        ;	;
 60)   FEA2 00          		 @LCDCX DEFS 1        ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 61)   FEA3 00          		 @LCDCY DEFS 1        ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 62)   FEA4 00 00       		 @PRGEX DEFS 2        ;2 BYTES	;2 BYTES
 63)   FEA6 00          		 @TVSTAT DEFS 1        ;1 BYTE	;1 BYTE
 64)   FEA7 00 00 00 00 		 @TIMECTR DEFS 4	;
 65)   FEAB 00          		 @INT2TE DEFS 1	;
 66)   FEAC 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB0 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB4 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB8 00          		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 67)   FEB9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEBD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FECD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEDD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 68)   FEE1 00 00 00 00 		 @STRGCMD DEFS 4	;
 69)   FEE5 00          		 @FID DEFS 1	;
 70)   FEE6 00          		 @SPC DEFS 1	;
 71)   FEE7 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 71)   FEEB 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 72)   FEEF 00          		 @TMPG  DEFS 1  ;TEMP PAGE FOR VIDEO TEXT VGA	;TEMP PAGE FOR VIDEO TEXT VGA
 73)   FEF0 00          		 @PGSEM DEFS 1  ;PAGE SEMAPHORE TO KEEP TRACK OF PAGE CALLS	;PAGE SEMAPHORE TO KEEP TRACK OF PAGE CALLS
 74)   FEF1 00          		 @VGAFCOL DEFS 1  ;VGA FORE COLOR	;VGA FORE COLOR
 75)   FEF2 00          		 @VGABCOL DEFS 1  ;VGA BACK COLOR	;VGA BACK COLOR
 76)   FEF3 00          		 @VGATX_X DEFS 1  ;VGA CURRENT X POS	;VGA CURRENT X POS
 77)   FEF4 00          		 @VGATX_Y DEFS 1  ;VGA CUR Y POS	;VGA CUR Y POS
