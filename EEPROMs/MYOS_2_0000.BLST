  3)   0000 00          		 NOP	;
  4)   0001 C3 00 02    		 JP START	;
  5)   0004 C3 E6 02    		 JP MENU	;
  6)   0007 25          		 VERSION DEFB $25    ; AT ADDR=7 VER 2.4	; AT ADDR=7 VER 2.4
  7)   0008 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   000C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0010 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0014 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0018 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   001C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0020 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0024 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0028 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   002C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0030 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0034 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
 10)   0038 C3 C8 09    		 JP INTSER	;
 13)   003B 00 00 00 00 		 ALIGN 256	;
 13)   003F 00 00 00 00 		 ALIGN 256	;
 13)   0043 00 00 00 00 		 ALIGN 256	;
 13)   0047 00 00 00 00 		 ALIGN 256	;
 13)   004B 00 00 00 00 		 ALIGN 256	;
 13)   004F 00 00 00 00 		 ALIGN 256	;
 13)   0053 00 00 00 00 		 ALIGN 256	;
 13)   0057 00 00 00 00 		 ALIGN 256	;
 13)   005B 00 00 00 00 		 ALIGN 256	;
 13)   005F 00 00 00 00 		 ALIGN 256	;
 13)   0063 00 00 00 00 		 ALIGN 256	;
 13)   0067 00 00 00 00 		 ALIGN 256	;
 13)   006B 00 00 00 00 		 ALIGN 256	;
 13)   006F 00 00 00 00 		 ALIGN 256	;
 13)   0073 00 00 00 00 		 ALIGN 256	;
 13)   0077 00 00 00 00 		 ALIGN 256	;
 13)   007B 00 00 00 00 		 ALIGN 256	;
 13)   007F 00 00 00 00 		 ALIGN 256	;
 13)   0083 00 00 00 00 		 ALIGN 256	;
 13)   0087 00 00 00 00 		 ALIGN 256	;
 13)   008B 00 00 00 00 		 ALIGN 256	;
 13)   008F 00 00 00 00 		 ALIGN 256	;
 13)   0093 00 00 00 00 		 ALIGN 256	;
 13)   0097 00 00 00 00 		 ALIGN 256	;
 13)   009B 00 00 00 00 		 ALIGN 256	;
 13)   009F 00 00 00 00 		 ALIGN 256	;
 13)   00A3 00 00 00 00 		 ALIGN 256	;
 13)   00A7 00 00 00 00 		 ALIGN 256	;
 13)   00AB 00 00 00 00 		 ALIGN 256	;
 13)   00AF 00 00 00 00 		 ALIGN 256	;
 13)   00B3 00 00 00 00 		 ALIGN 256	;
 13)   00B7 00 00 00 00 		 ALIGN 256	;
 13)   00BB 00 00 00 00 		 ALIGN 256	;
 13)   00BF 00 00 00 00 		 ALIGN 256	;
 13)   00C3 00 00 00 00 		 ALIGN 256	;
 13)   00C7 00 00 00 00 		 ALIGN 256	;
 13)   00CB 00 00 00 00 		 ALIGN 256	;
 13)   00CF 00 00 00 00 		 ALIGN 256	;
 13)   00D3 00 00 00 00 		 ALIGN 256	;
 13)   00D7 00 00 00 00 		 ALIGN 256	;
 13)   00DB 00 00 00 00 		 ALIGN 256	;
 13)   00DF 00 00 00 00 		 ALIGN 256	;
 13)   00E3 00 00 00 00 		 ALIGN 256	;
 13)   00E7 00 00 00 00 		 ALIGN 256	;
 13)   00EB 00 00 00 00 		 ALIGN 256	;
 13)   00EF 00 00 00 00 		 ALIGN 256	;
 13)   00F3 00 00 00 00 		 ALIGN 256	;
 13)   00F7 00 00 00 00 		 ALIGN 256	;
 13)   00FB 00 00 00 00 		 ALIGN 256	;
 13)   00FF 00          		 ALIGN 256	;
 16)   0100 C3 22 26    		 JP MYOS_CLRSCN	;
 17)   0103 C3 25 26    		 JP MYOS_PUTIME	;
 18)   0106 C3 36 26    		 JP MYOS_GETIME	;
 19)   0109 C3 47 26    		 JP MYOS_PUTCSR	;
 20)   010C C3 5F 26    		 JP MYOS_GETCSR	;
 21)   010F C3 6E 26    		 JP MYOS_OSRDCH	;
 22)   0112 C3 2B 28    		 JP MYOS_PROMPT	;
 23)   0115 C3 79 26    		 JP MYOS_OSWRCH	;
 24)   0118 C3 59 28    		 JP MYOS_OSKEY	;
 25)   011B C3 95 28    		 JP MYOS_OSINIT	;
 26)   011E C3 04 2D    		 JP MYOS_OSLINE	;
 27)   0121 C3 11 29    		 JP MYOS_OSCLI	;
 28)   0124 C3 1D 2C    		 JP MYOS_OSBPUT	;
 29)   0127 C3 2D 2C    		 JP MYOS_OSBGET	;
 30)   012A C3 5A 2C    		 JP MYOS_OSSTAT	;
 31)   012D C3 55 2C    		 JP MYOS_OSSHUT	;
 32)   0130 C3 F6 2B    		 JP MYOS_OSOPEN	;
 33)   0133 C3 61 2C    		 JP MYOS_OSCALL	;
 34)   0136 C3 8A 25    		 JP MYOS_OSSAVE	;
 35)   0139 C3 CA 25    		 JP MYOS_OSLOAD	;
 36)   013C C3 47 2C    		 JP MYOS_GETPTR	;
 37)   013F C3 4C 2C    		 JP MYOS_PUTPTR	;
 38)   0142 C3 50 2C    		 JP MYOS_GETEXT	;
 39)   0145 C3 62 2C    		 JP MYOS_RESET	;
 40)   0148 C3 85 28    		 JP MYOS_TRAP	;
 41)   014B C3 88 28    		 JP MYOS_LTRAP	;
 42)   014E C3 6A 2C    		 JP MYOS_CLG	;
 43)   0151 C3 82 2C    		 JP MYOS_COLOUR	;
 44)   0154 C3 8D 2C    		 JP MYOS_DRAW	;
 45)   0157 C3 B3 2C    		 JP MYOS_ENVEL	;
 46)   015A C3 76 2C    		 JP MYOS_GCOL	;
 47)   015D C3 63 2C    		 JP MYOS_MODE	;
 48)   0160 C3 97 2C    		 JP MYOS_MOVE	;
 49)   0163 C3 A1 2C    		 JP MYOS_PLOT	;
 50)   0166 C3 B3 2C    		 JP MYOS_SOUND	;
 51)   0169 C3 B3 2C    		 JP MYOS_ADVAL	;
 52)   016C C3 AB 2C    		 JP MYOS_POINT	;
 53)   016F C3 B9 2C    		 JP MYOS_GETIMS	;
 54)   0172 C3 B3 2C    		 JP MYOS_PUTIMS	;
 56)   0175 00 00 00 00 		 ALIGN 256	;
 56)   0179 00 00 00 00 		 ALIGN 256	;
 56)   017D 00 00 00 00 		 ALIGN 256	;
 56)   0181 00 00 00 00 		 ALIGN 256	;
 56)   0185 00 00 00 00 		 ALIGN 256	;
 56)   0189 00 00 00 00 		 ALIGN 256	;
 56)   018D 00 00 00 00 		 ALIGN 256	;
 56)   0191 00 00 00 00 		 ALIGN 256	;
 56)   0195 00 00 00 00 		 ALIGN 256	;
 56)   0199 00 00 00 00 		 ALIGN 256	;
 56)   019D 00 00 00 00 		 ALIGN 256	;
 56)   01A1 00 00 00 00 		 ALIGN 256	;
 56)   01A5 00 00 00 00 		 ALIGN 256	;
 56)   01A9 00 00 00 00 		 ALIGN 256	;
 56)   01AD 00 00 00 00 		 ALIGN 256	;
 56)   01B1 00 00 00 00 		 ALIGN 256	;
 56)   01B5 00 00 00 00 		 ALIGN 256	;
 56)   01B9 00 00 00 00 		 ALIGN 256	;
 56)   01BD 00 00 00 00 		 ALIGN 256	;
 56)   01C1 00 00 00 00 		 ALIGN 256	;
 56)   01C5 00 00 00 00 		 ALIGN 256	;
 56)   01C9 00 00 00 00 		 ALIGN 256	;
 56)   01CD 00 00 00 00 		 ALIGN 256	;
 56)   01D1 00 00 00 00 		 ALIGN 256	;
 56)   01D5 00 00 00 00 		 ALIGN 256	;
 56)   01D9 00 00 00 00 		 ALIGN 256	;
 56)   01DD 00 00 00 00 		 ALIGN 256	;
 56)   01E1 00 00 00 00 		 ALIGN 256	;
 56)   01E5 00 00 00 00 		 ALIGN 256	;
 56)   01E9 00 00 00 00 		 ALIGN 256	;
 56)   01ED 00 00 00 00 		 ALIGN 256	;
 56)   01F1 00 00 00 00 		 ALIGN 256	;
 56)   01F5 00 00 00 00 		 ALIGN 256	;
 56)   01F9 00 00 00 00 		 ALIGN 256	;
 56)   01FD 00 00 00    		 ALIGN 256	;
 41)   0200 F3          		@START: DI	;
 51)   0201 C3 45 02    		 JP BOOT        ;SKIP TESTING	;SKIP TESTING
 56)   0204 06 05       		CN1: LD B, 5	;
 57)   0206 0E 00       		AGN1: LD C, 0	;
 58)   0208 3E 00       		 LD A, 0	;
 59)   020A ED 79       		 OUT (C), A	;
 60)   020C 0E 00       		 LD C, 0	;
 61)   020E 3E FF       		 LD A, 255	;
 62)   0210 ED 79       		 OUT (C), A	;
 63)   0212 10 F2       		 DJNZ AGN1	;
 68)   0214 11 01 00    		 LD DE, 1	;
 69)   0217 3E 00       		 LD A, 0        ;WRITE 0	;WRITE 0
 70)   0219 4F          		 LD C, A	;
 71)   021A 21 00 40    		 LD HL, RAMAD	;
 72)   021D 06 08       		 LD B, 8	;
 73)   021F 77          		AGN2: LD (HL), A	;
 74)   0220 4E          		 LD C, (HL)	;
 75)   0221 B9          		 CP C	;
 76)   0222 C2 3C 02    		 JP NZ, ERR	;
 77)   0225 19          		 ADD HL, DE	;
 78)   0226 C6 20       		 ADD A, 32       ;WRITE +32	;WRITE +32
 79)   0228 4F          		 LD C, A	;
 80)   0229 10 F4       		 DJNZ AGN2	;
 82)   022B 06 05       		 LD B, 5	;
 83)   022D 0E 08       		AGN3: LD C, 00001000B       ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
 84)   022F 3E 40       		 LD A, 64	;
 85)   0231 ED 79       		 OUT (C), A	;
 86)   0233 C6 80       		 ADD A, 128	;
 87)   0235 ED 79       		 OUT (C), A	;
 88)   0237 10 F4       		 DJNZ AGN3        ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
 89)   0239 C3 45 02    		 JP BOOT	;
 92)   023C 0E 38       		ERR: LD C, 00111000B       ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
 93)   023E 3E 40       		 LD A, 64	;
 94)   0240 ED 79       		 OUT (C), A	;
 96)   0242 C3 3C 02    		 JP ERR         ;DO AGAIN PORT 1	;DO AGAIN PORT 1
103)   0245 F3          		@BOOT: DI	;
104)   0246 ED 56       		 IM 1	;
107)   0248 0E 00       		MMUSETUP:   LD C,DEVMMU	;
108)   024A AF          		  XOR A	;
109)   024B 06 00       		 LD B,0.SHL.5	;
110)   024D ED 79       		 OUT (C),A	;
111)   024F 3C          		 INC A	;
112)   0250 06 20       		 LD B,1.SHL.5	;
113)   0252 ED 79       		 OUT (C),A  	;
115)   0254 3E 0A       		 LD A,10   ;VID MEM RAM	;VID MEM RAM
116)   0256 06 40       		 LD B,2.SHL.5  	;
117)   0258 ED 79       		 OUT (C),A  	;
119)   025A 3E 0B       		 LD A,11   ;VID MEM RAM	;VID MEM RAM
120)   025C 06 60       		 LD B,3.SHL.5  	;
121)   025E ED 79       		 OUT (C),A  	;
123)   0260 3E 04       		 LD A,4	;
124)   0262 06 80       		 LD B,4.SHL.5	;
125)   0264 ED 79       		 OUT (C),A  	;
126)   0266 3C          		 INC A	;
127)   0267 06 A0       		 LD B,5.SHL.5	;
128)   0269 ED 79       		 OUT (C),A  	;
129)   026B 3C          		 INC A	;
130)   026C 06 C0       		 LD B,6.SHL.5	;
131)   026E ED 79       		 OUT (C),A  	;
132)   0270 3C          		 INC A	;
133)   0271 06 E0       		 LD B,7.SHL.5	;
134)   0273 ED 79       		 OUT (C),A   	;
136)   0275 31 FF FA    		 LD SP, STACKP	;
137)   0278 21 00 FE    		 LD HL,OSVARS       ;ZERO OS VARIABLES	;ZERO OS VARIABLES
138)   027B AF          		SI_AGN: XOR A	;
139)   027C 77          		 LD (HL),A	;
140)   027D 23          		 INC HL	;
141)   027E 7C          		 LD A,H	;
142)   027F B5          		 OR L	;
143)   0280 20 F9       		 JR NZ,SI_AGN       ;HL=0000 WHEN OVERFLOW FROM FFFF	;HL=0000 WHEN OVERFLOW FROM FFFF
144)   0282 CD 33 0A    		 CALL INITMMU       ;PUT PAGES 0..7 IN RAM BANKS 0..7	;PUT PAGES 0..7 IN RAM BANKS 0..7
145)   0285 CD 36 04    		 CALL FF_CLR	;
146)   0288 CD 5E 04    		 CALL EPROMOFF	;
147)   028B CD 08 0B    		 CALL KEYBDATON	;
150)   028E 3E 0C       		 LD A, 12        ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
151)   0290 CD 6A 0A    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
152)   0293 21 71 05    		 LD HL, STR00	;
153)   0296 CD 92 0A    		 CALL RS_TXT	;
156)   0299 CD 3A 10    		 CALL I2C_INIT        ;INITIALIZE I2C	;INITIALIZE I2C
157)   029C CD C6 11    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
158)   029F CD 9B 12    		 CALL LCD16_INIT       ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
159)   02A2 21 C0 05    		 LD HL, SVER	;
160)   02A5 CD 1C 13    		 CALL LCD16_PRINT       ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
163)   02A8 CD 15 0E    		 CALL STRG_INIT	;
164)   02AB 21 A8 05    		 LD HL, STR001	;
165)   02AE CD 92 0A    		 CALL RS_TXT	;
173)   02B1 CD ED 16    		 CALL LCD_INIT	;
174)   02B4 21 00 00    		 LD HL, COL_BLACK	;
175)   02B7 22 03 FE    		 LD (BCOLOR), HL	;
176)   02BA 21 FF FF    		 LD HL, COL_WHITE	;
177)   02BD 22 01 FE    		 LD (FCOLOR), HL	;
178)   02C0 21 5E 05    		 LD HL, STRSCR	;
179)   02C3 CD 92 0A    		 CALL RS_TXT	;
180)   02C6 CD 1C 1F    		 CALL LCD_CLRSCR	;
181)   02C9 AF          		 XOR A	;
182)   02CA 32 0F FE    		 LD (SCRLN), A	;
183)   02CD 3E 00       		 LD A, 0	;
184)   02CF 32 0D FE    		 LD (CURSORX), A	;
185)   02D2 3E 00       		 LD A, 0	;
186)   02D4 32 0E FE    		 LD (CURSORY), A	;
189)   02D7 CD 97 13    		 CALL VGA_INIT	;
190)   02DA 21 51 05    		 LD HL, TXTMES	;
191)   02DD CD 92 0A    		 CALL RS_TXT	;
196)   02E0 21 D1 05    		 LD HL,OSVERMES	;
197)   02E3 CD 9F 03    		 CALL OS_PRINTTEXT	;
203)   02E6 AF          		@MENU: XOR A	;
204)   02E7 32 0F FE    		 LD (SCRLN), A	;
205)   02EA 21 B2 04    		 LD HL, STRMN	;
206)   02ED CD 92 0A    		 CALL RS_TXT       ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
207)   02F0 21 87 05    		 LD HL, STR01	;
208)   02F3 CD 92 0A    		 CALL RS_TXT       ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
215)   02F6 3E 00       		 LD A, 0	;
216)   02F8 32 0D FE    		 LD (CURSORX), A	;
217)   02FB 32 F9 FE    		 LD (VGATX_X), A	;
218)   02FE 3E 06       		 LD A, 6	;
219)   0300 32 0E FE    		 LD (CURSORY), A	;
220)   0303 32 FA FE    		 LD (VGATX_Y), A	;
221)   0306 21 8A 04    		 LD HL, SMENU	;
222)   0309 CD 9F 03    		 CALL OS_PRINTTEXT	;
224)   030C CD 63 03    		 CALL GET_CHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
227)   030F FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
228)   0311 CC B4 03    		 CALL Z, UPLOD	;
229)   0314 FE 58       		 CP 'X'	;
230)   0316 CA AB 03    		 JP Z, EXEC	;
231)   0319 FE 54       		 CP 'T'	;
232)   031B CC 04 04    		 CALL Z, RSTST	;
233)   031E FE 59       		 CP 'Y'	;
234)   0320 CC 1A 04    		 CALL Z, RSTST2	;
235)   0323 FE 48       		 CP 'H'	;
236)   0325 CC 29 04    		 CALL Z, XMTST	;
237)   0328 FE 4A       		 CP 'J'	;
238)   032A CC E9 03    		 CALL Z, DNLOD	;
239)   032D FE 4B       		 CP 'K'	;
240)   032F CC 33 06    		 CALL Z,OS_COMMAND	;
241)   0332 FE 43       		 CP 'C'	;
242)   0334 CC 98 03    		 CALL Z, OS_CLRSCR	;
243)   0337 FE 42       		 CP 'B'	;
244)   0339 CA 3F 03    		 JP Z, GOTOBBCBASIC	;
246)   033C C3 E6 02    		 JP MENU	;
250)   033F 06 02       		@GOTOBBCBASIC: LD B,2	;
251)   0341 3E 02       		 LD A,2	;
252)   0343 CD 3F 0A    		 CALL PUTPGINBANK	;
253)   0346 06 03       		 LD B,3	;
254)   0348 3E 03       		 LD A,3	;
255)   034A CD 3F 0A    		 CALL PUTPGINBANK	;
256)   034D C3 00 40    		 JP BBCBASIC	;
262)   0350 CD DA 2C    		@GET_CHARNW: CALL CHKCURS	;
263)   0353 AF          		 XOR A	;
265)   0354 CD C5 0A    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
266)   0357 28 04       		 JR Z, CNW_TST2	;
267)   0359 CD 9C 0A    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
268)   035C C9          		 RET	;
272)   035D CD DE 0B    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
273)   0360 FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
284)   0362 C9          		 RET	;
289)   0363 CD DA 2C    		@GET_CHAR: CALL CHKCURS	;
290)   0366 AF          		 XOR A	;
292)   0367 CD C5 0A    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
293)   036A 28 04       		 JR Z, CW_TST2	;
294)   036C CD 9C 0A    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
295)   036F C9          		 RET	;
299)   0370 CD DE 0B    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
300)   0373 FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
301)   0375 28 EC       		 JR Z, GET_CHAR	;
311)   0377 C9          		 RET	;
315)   0378 F5          		@OS_PRINTCHAR: PUSH AF	;
316)   0379 CD 36 1D    		 CALL LCD_PRCH	;
317)   037C F1          		 POP AF	;
318)   037D CD CC 14    		 CALL VGA_PRCH	;
319)   0380 C9          		 RET	;
323)   0381 E5          		@OS_MSG: PUSH HL	;
324)   0382 CD 5C 1F    		 CALL LCD_MSG	;
325)   0385 E1          		 POP HL	;
326)   0386 CD 5B 15    		 CALL VGA_PRINT	;
327)   0389 C9          		 RET	;
329)   038A CD DA 1E    		@OS_PRNCURS: CALL LCD_PRNCURS	;
330)   038D CD 49 15    		 CALL VGA_PRNCURS	;
331)   0390 C9          		 RET	;
333)   0391 CD D5 1E    		@OS_RMVCURS: CALL LCD_RMVCURS	;
334)   0394 CD 41 15    		 CALL VGA_RMVCURS	;
335)   0397 C9          		 RET	;
337)   0398 CD 1C 1F    		@OS_CLRSCR: CALL LCD_CLRSCR	;
338)   039B CD 57 14    		 CALL VGA_TXTCLR	;
339)   039E C9          		 RET	;
342)   039F 7E          		@OS_PRINTTEXT: LD A,(HL)	;
343)   03A0 FE 00       		 CP 0	;
344)   03A2 C8          		 RET Z	;
345)   03A3 E5          		 PUSH HL	;
346)   03A4 CD 78 03    		 CALL OS_PRINTCHAR	;
347)   03A7 E1          		 POP HL	;
348)   03A8 23          		 INC HL	;
349)   03A9 18 F4       		 JR OS_PRINTTEXT 	;
360)   03AB 3E 05       		 LD A, 5	;
361)   03AD CD 2B 2E    		 CALL SCPRN	;
363)   03B0 2A A4 FE    		 LD HL, (PRGEX)	;
370)   03B3 E9          		 JP (HL)	;
377)   03B4 F3          		UPLOD: DI	;
382)   03B5 CD 9C 0A    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
383)   03B8 6F          		 LD L, A	;
384)   03B9 CD 9C 0A    		 CALL RS_RX	;
385)   03BC 67          		 LD H, A	;
386)   03BD CD 9C 0A    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
387)   03C0 4F          		 LD C, A	;
388)   03C1 CD 9C 0A    		 CALL RS_RX	;
389)   03C4 47          		 LD B, A	;
391)   03C5 22 A4 FE    		 LD (PRGEX), HL	;
392)   03C8 3A A5 FE    		 LD A, (PRGEX + 1)	;
400)   03CB FE 80       		 CP $80	;
401)   03CD DC 66 04    		 CALL C, EPROMON       ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
403)   03D0 E5          		NORWR: PUSH HL	;
404)   03D1 CD 9C 0A    		NXB: CALL RS_RX	;
405)   03D4 77          		 LD (HL), A	;
406)   03D5 23          		 INC HL	;
407)   03D6 0B          		 DEC BC	;
408)   03D7 78          		 LD A, B	;
409)   03D8 B1          		 OR C	;
410)   03D9 20 F6       		 JR NZ, NXB       ;LOOP ALL BYTES	;LOOP ALL BYTES
411)   03DB CD 5E 04    		 CALL EPROMOFF	;
416)   03DE 3E 05       		 LD A, 5	;
417)   03E0 CD 2B 2E    		 CALL SCPRN	;
418)   03E3 CD 38 2E    		 CALL DELAY	;
420)   03E6 E1          		 POP HL	;
423)   03E7 FB          		 EI	;
424)   03E8 C9          		 RET	;
435)   03E9 CD 9C 0A    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
436)   03EC 6F          		 LD L, A	;
437)   03ED CD 9C 0A    		 CALL RS_RX	;
438)   03F0 67          		 LD H, A	;
439)   03F1 CD 9C 0A    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
440)   03F4 4F          		 LD C, A	;
441)   03F5 CD 9C 0A    		 CALL RS_RX	;
442)   03F8 47          		 LD B, A	;
444)   03F9 7E          		NXB3: LD A, (HL)	;
445)   03FA CD 83 0A    		 CALL RS_TX       ;SEND BYTE	;SEND BYTE
446)   03FD 23          		 INC HL	;
447)   03FE 0B          		 DEC BC	;
448)   03FF 78          		 LD A, B	;
449)   0400 B1          		 OR C	;
450)   0401 20 F6       		 JR NZ, NXB3       ;LOOP ALL BYTES	;LOOP ALL BYTES
451)   0403 C9          		 RET	;
453)   0404 00          		RSTST: NOP        ;GET A KEY FROM RS232	;GET A KEY FROM RS232
454)   0405 06 0A       		 LD B, 10	;
455)   0407 C5          		TEN: PUSH BC	;
456)   0408 CD 9C 0A    		 CALL RS_RX	;
458)   040B CD 83 0A    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
460)   040E 3E 20       		 LD A, ' '	;
462)   0410 3E 52       		 LD A, 'R'	;
465)   0412 CD 45 2E    		 CALL DEL2	;
467)   0415 C1          		 POP BC	;
468)   0416 10 EF       		 DJNZ TEN	;
470)   0418 AF          		 XOR A	;
471)   0419 C9          		 RET	;
473)   041A 00          		RSTST2: NOP        ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
474)   041B 06 FF       		 LD B, 255	;
475)   041D C5          		TEN2: PUSH BC	;
476)   041E CD 9C 0A    		 CALL RS_RX	;
478)   0421 CD 83 0A    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
480)   0424 C1          		 POP BC	;
481)   0425 10 F6       		 DJNZ TEN2	;
482)   0427 AF          		 XOR A	;
483)   0428 C9          		 RET	;
486)   0429 00          		XMTST: NOP        ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
487)   042A 06 FF       		 LD B, 255	;
488)   042C C5          		TEN3: PUSH BC	;
489)   042D 78          		 LD A, B	;
490)   042E CD 83 0A    		 CALL RS_TX       ;SEND  THE BYTE	;SEND  THE BYTE
491)   0431 C1          		 POP BC	;
492)   0432 10 F8       		 DJNZ TEN3	;
493)   0434 AF          		 XOR A	;
494)   0435 C9          		 RET	;
500)   0436 AF          		 XOR A	;
501)   0437 32 9D FE    		 LD (FFSTAT), A	;
502)   043A C9          		 RET	;
505)   043B 04          		@FF_OFF: INC B        ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
506)   043C AF          		 XOR A	;
507)   043D 37          		 SCF	;
508)   043E 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
509)   043F 10 FD       		 DJNZ SBAGN	;
510)   0441 2F          		 CPL         ;INVERSE BITS ON A	;INVERSE BITS ON A
511)   0442 47          		 LD B, A	;
512)   0443 3A 9D FE    		 LD A, (FFSTAT)	;
513)   0446 A0          		 AND B         ;ZERO THE BIT	;ZERO THE BIT
514)   0447 32 9D FE    		 LD (FFSTAT), A	;
515)   044A D3 08       		 OUT (DEVFFS), A	;
516)   044C C9          		 RET	;
519)   044D 04          		@FF_ON: INC B         ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
520)   044E AF          		 XOR A	;
521)   044F 37          		 SCF	;
522)   0450 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
523)   0451 10 FD       		 DJNZ SBAGN	;
524)   0453 47          		 LD B, A	;
525)   0454 3A 9D FE    		 LD A, (FFSTAT)	;
526)   0457 B0          		 OR B         ;SET THE BIT	;SET THE BIT
527)   0458 32 9D FE    		 LD (FFSTAT), A	;
528)   045B D3 08       		 OUT (DEVFFS), A	;
529)   045D C9          		 RET	;
531)   045E C5          		@EPROMOFF: PUSH BC	;
532)   045F 06 00       		 LD B, 0	;
533)   0461 CD 3B 04    		 CALL FF_OFF	;
534)   0464 C1          		 POP BC	;
535)   0465 C9          		 RET	;
537)   0466 C5          		@EPROMON: PUSH BC	;
538)   0467 06 00       		 LD B, 0	;
539)   0469 CD 4D 04    		 CALL FF_ON	;
540)   046C C1          		 POP BC	;
541)   046D C9          		 RET	;
547)   046E F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
548)   046F 26 00       		 LD H, 0	;
549)   0471 6F          		 LD L, A	;
550)   0472 11 AC FE    		 LD DE, MYNUM	;
551)   0475 CD 5F 2E    		 CALL OUTASC	;
553)   0478 3E 0A       		 LD A, 10	;
554)   047A 12          		 LD (DE), A	;
555)   047B 13          		 INC DE	;
556)   047C 3E 0D       		 LD A, 13	;
557)   047E 12          		 LD (DE), A	;
558)   047F 13          		 INC DE	;
559)   0480 AF          		 XOR A	;
560)   0481 12          		 LD (DE), A	;
562)   0482 21 AC FE    		 LD HL, MYNUM	;
563)   0485 CD 92 0A    		 CALL RS_TXT	;
564)   0488 F1          		 POP AF	;
565)   0489 C9          		 RET	;
572)   048A 55 3A 55 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
572)   048E 20 4A 3A 44 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
572)   0492 4E 20 58 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
572)   0496 52 55 4E 20 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
572)   049A 43 3A 43 4C 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
572)   049E 53 20 42 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
572)   04A2 42 41 53 49 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
572)   04A6 43 20 4B 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
572)   04AA 43 4D 44 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
572)   04AE 52 4D 54    		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT"	;
573)   04B1 00          		 DB 0	;
575)   04B2 0A 0D       		STRMN: DB 10,13	;
577)   04B4 55 3A 55 50 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04B8 4C 4F 41 44 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04BC 20 4A 3A 44 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04C0 4F 57 4E 4C 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04C4 44 20 58 3A 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04C8 52 55 4E 20 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04CC 43 3A 43 4C 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04D0 53 20 42 3A 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04D4 42 41 53 49 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04D8 43 20 4B 3A 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04DC 43 4D 44 20 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04E0 50 52 4F 4D 		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
577)   04E4 50 54       		 DEFM "U:UPLOAD J:DOWNLD X:RUN C:CLS B:BASIC K:CMD PROMPT"	;
578)   04E6 0A 0D 00    		 DB 10,13,0	;
581)   04E9 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
581)   04ED 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
581)   04F1 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
581)   04F5 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
582)   04F8 00          		 DB 0	;
584)   04F9 52 53 32 33 		STR1: DEFM "RS232 INIT"	;
584)   04FD 32 20 49 4E 		STR1: DEFM "RS232 INIT"	;
584)   0501 49 54       		STR1: DEFM "RS232 INIT"	;
585)   0503 00          		 DB 0	;
587)   0504 50 52 4F 47 		STR2: DEFM "PROGRAM HALTED"	;
587)   0508 52 41 4D 20 		STR2: DEFM "PROGRAM HALTED"	;
587)   050C 48 41 4C 54 		STR2: DEFM "PROGRAM HALTED"	;
587)   0510 45 44       		STR2: DEFM "PROGRAM HALTED"	;
588)   0512 00          		 DB 0	;
590)   0513 57 41 49 54 		STR02: DEFM "WAITING..."	;
590)   0517 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
590)   051B 2E 2E       		STR02: DEFM "WAITING..."	;
591)   051D 00          		 DB 0	;
593)   051E 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
593)   0522 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
593)   0526 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
593)   052A 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
594)   052C 00          		 DB 0	;
596)   052D 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
596)   0531 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
596)   0535 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
597)   0539 00          		 DB 0	;
599)   053A 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
599)   053E 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
599)   0542 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
600)   0545 00          		 DB 0	;
602)   0546 49 4D 41 47 		STIMG: DEFM "IMAGE COPY"	;
602)   054A 45 20 43 4F 		STIMG: DEFM "IMAGE COPY"	;
602)   054E 50 59       		STIMG: DEFM "IMAGE COPY"	;
603)   0550 00          		 DB 0	;
605)   0551 53 43 52 45 		TXTMES: DEFM "SCREEN READY"	;
605)   0555 45 4E 20 52 		TXTMES: DEFM "SCREEN READY"	;
605)   0559 45 41 44 59 		TXTMES: DEFM "SCREEN READY"	;
606)   055D 00          		 DB 0	;
608)   055E 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
608)   0562 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
608)   0566 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
608)   056A 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
609)   056E 0A 0D 00    		 DB 10,13,0	;
611)   0571 0A 0D       		STR00: DB 10,13	;
612)   0573 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
612)   0577 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
612)   057B 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
612)   057F 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
612)   0583 44          		 DEFM "RS232 INITIALIZED"	;
613)   0584 0A 0D 00    		 DB 10,13,0	;
615)   0587 0A 0D       		STR01: DB 10,13	;
616)   0589 57 41 49 54 		 DEFM "WAITING..."	;
616)   058D 49 4E 47 2E 		 DEFM "WAITING..."	;
616)   0591 2E 2E       		 DEFM "WAITING..."	;
617)   0593 0A 0D 00    		 DB 10,13,0	;
618)   0596 00          		 DB 0	;
620)   0597 0A 0D       		STR06: DB 10,13	;
621)   0599 4B 45 59 20 		 DEFM "KEY PRESSED"	;
621)   059D 50 52 45 53 		 DEFM "KEY PRESSED"	;
621)   05A1 53 45 44    		 DEFM "KEY PRESSED"	;
622)   05A4 0A 0D 00    		 DB 10,13,0	;
623)   05A7 00          		 DB 0	;
625)   05A8 0A 0D       		STR001: DB 10,13	;
626)   05AA 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
626)   05AE 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
626)   05B2 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
626)   05B6 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
626)   05BA 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
627)   05BD 0A 0D 00    		 DB 10,13,0	;
629)   05C0 41 54 4C 41 		SVER: DEFM "ATLAS OS VER"	;
629)   05C4 53 20 4F 53 		SVER: DEFM "ATLAS OS VER"	;
629)   05C8 20 56 45 52 		SVER: DEFM "ATLAS OS VER"	;
630)   05CC 30          		 DEFB MJVER	;
631)   05CD 2E          		 DEFB 46	;
632)   05CE 33 32       		 DEFB MNVER1,MNVER2	;
633)   05D0 00          		 DEFB 0	;
635)   05D1 41 54 4C 41 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
635)   05D5 53 20 4D 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
635)   05D9 64 75 6C 61 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
635)   05DD 72 20 5A 38 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
635)   05E1 30 20 43 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
635)   05E5 6D 70 75 74 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
635)   05E9 65 72       		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
636)   05EB 0A 0D       		 DEFB 0AH,0DH	;
637)   05ED 4F 70 65 72 		 DEFM "Operating System Version "  	;
637)   05F1 61 74 69 6E 		 DEFM "Operating System Version "  	;
637)   05F5 67 20 53 79 		 DEFM "Operating System Version "  	;
637)   05F9 73 74 65 6D 		 DEFM "Operating System Version "  	;
637)   05FD 20 56 65 72 		 DEFM "Operating System Version "  	;
637)   0601 73 69 6F 6E 		 DEFM "Operating System Version "  	;
637)   0605 20          		 DEFM "Operating System Version "  	;
638)   0606 30          		 DEFB MJVER	;
639)   0607 2E          		 DEFB 46	;
640)   0608 33 32       		 DEFB MNVER1,MNVER2	;
641)   060A 0A 0D       		 DEFB 0AH,0DH	;
642)   060C 43 44 65 73 		 DEFM "CDesp 2020-21"	;
642)   0610 70 20 32 30 		 DEFM "CDesp 2020-21"	;
642)   0614 32 30 2D 32 		 DEFM "CDesp 2020-21"	;
642)   0618 31          		 DEFM "CDesp 2020-21"	;
643)   0619 0A 0D       		 DEFB 0AH,0DH    	;
644)   061B 52 41 4D 3A 		 DEFM "RAM: 4000h,TOP: FA00h"	;
644)   061F 20 34 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
644)   0623 30 68 2C 54 		 DEFM "RAM: 4000h,TOP: FA00h"	;
644)   0627 4F 50 3A 20 		 DEFM "RAM: 4000h,TOP: FA00h"	;
644)   062B 46 41 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
644)   062F 68          		 DEFM "RAM: 4000h,TOP: FA00h"	;
645)   0630 0A 0D       		 DEFB 0AH,0DH	;
646)   0632 00          		 DEFB 00H	;
 11)   0633 3E 0F       		@OS_COMMAND:   LD A, VGA_WHITE	;
 12)   0635 32 F7 FE    		 LD (VGAFCOL), A	;
 13)   0638 3E 04       		 LD A, VGA_NAVY	;
 14)   063A 32 F8 FE    		 LD (VGABCOL), A	;
 17)   063D 3A 0D FE    		OS_CMDGET:     LD A,(CURSORX)	;
 18)   0640 67          		               LD H,A	;
 19)   0641 3A 0E FE    		               LD A,(CURSORY)	;
 20)   0644 84          		               ADD H	;
 21)   0645 FE 00       		               CP 0	;
 22)   0647 28 0C       		               JR Z,CGSKP	;
 23)   0649 3E 0D       		               LD A,CR	;
 24)   064B CD 78 03    		               CALL OS_PRINTCHAR	;
 25)   064E AF          		               XOR A	;
 26)   064F 32 0D FE    		 LD (CURSORX), A	;
 27)   0652 32 F9 FE    		 LD (VGATX_X), A	;
 28)   0655 3E 23       		CGSKP:         LD A,'#'        ;PROMPT	;PROMPT
 29)   0657 CD 78 03    		               CALL OS_PRINTCHAR	;
 30)   065A 21 FD FE    		               LD HL,COMDBUF	;
 31)   065D E5          		CGNXCHAR:      PUSH HL	;
 32)   065E CD 63 03    		               CALL GET_CHAR	;
 33)   0661 E1          		               POP HL	;
 34)   0662 FE 00       		               CP 0	;
 35)   0664 28 F7       		               JR Z,CGNXCHAR 	;
 36)   0666 FE 20       		               CP 32	;
 37)   0668 30 28       		               JR NC,CGSVCHAR	;
 38)   066A E5          		               PUSH HL	;
 39)   066B F5          		               PUSH AF	;
 40)   066C CD 91 03    		               CALL OS_RMVCURS         ;REMOVE CURSOR	;REMOVE CURSOR
 41)   066F F1          		               POP AF	;
 42)   0670 E1          		               POP HL	;
 44)   0671 FE 06       		               CP 6                    ;BACKSPACE	;BACKSPACE
 45)   0673 20 17       		               JR NZ,CGTSTCH1                	;
 47)   0675 2B          		               DEC HL                	;
 48)   0676 3A F9 FE    		               LD A,(VGATX_X)	;
 49)   0679 FE 01       		               CP 1                  ;CHECK START OF LINE	;CHECK START OF LINE
 50)   067B 20 05       		               JR NZ,CGBS	;
 51)   067D 21 FD FE    		               LD HL,COMDBUF           ;WE AR AT START	;WE AR AT START
 52)   0680 18 DB       		               JR CGNXCHAR	;
 54)   0682 3E 08       		CGBS:          LD A,8	;
 55)   0684 CD 99 06    		               CALL CGDOPRNCH	;
 56)   0687 3E 00       		               LD A,0	;
 57)   0689 77          		               LD (HL),A	;
 58)   068A 18 D1       		               JR CGNXCHAR	;
 59)   068C FE 0D       		CGTSTCH1:      CP CR                   ;ENTER	;ENTER
 60)   068E 28 11       		               JR Z,CGDOCMD            ;EXECUTE THE COMMAND	;EXECUTE THE COMMAND
 61)   0690 18 CB       		               JR CGNXCHAR             ;NO MORE TESTING NO PRINATBLE CHARS	;NO MORE TESTING NO PRINATBLE CHARS
 62)   0692 CD 99 06    		CGSVCHAR:      CALL CGDOPRNCH          ;SAVE CHAR TO BUFFER	;SAVE CHAR TO BUFFER
 63)   0695 77          		               LD (HL),A	;
 64)   0696 23          		               INC HL	;
 65)   0697 18 C4       		               JR CGNXCHAR	;
 66)   0699 E5          		CGDOPRNCH:     PUSH HL	;
 67)   069A F5          		               PUSH AF	;
 68)   069B CD 78 03    		               CALL OS_PRINTCHAR	;
 69)   069E F1          		               POP AF	;
 70)   069F E1          		               POP HL	;
 71)   06A0 C9          		               RET	;
 72)   06A1 CD 99 06    		CGDOCMD:       CALL CGDOPRNCH	;
 73)   06A4 AF          		               XOR A	;
 74)   06A5 77          		               LD (HL),A	;
 75)   06A6 21 FD FE    		               LD HL,COMDBUF	;
 82)   06A9 CD 01 07    		 CALL SKIPSP	;
 83)   06AC FE 0D       		 CP CR	;
 84)   06AE C8          		 RET Z	;
 85)   06AF FE 7C       		 CP '|'	;
 86)   06B1 C8          		 RET Z	;
 89)   06B2 EB          		 EX DE, HL	;
 90)   06B3 21 10 07    		 LD HL, COMDS	;
 91)   06B6 1A          		OSCLI0: LD A, (DE)	;
 92)   06B7 CD 08 07    		 CALL UPPRC	;
 93)   06BA BE          		 CP (HL)	;
 94)   06BB 28 0B       		 JR Z, OSCLI2	;
 95)   06BD 38 31       		 JR C, HUH	;
 96)   06BF CB 7E       		OSCLI1: BIT 7, (HL)	;
 97)   06C1 23          		 INC HL	;
 98)   06C2 28 FB       		 JR Z, OSCLI1	;
 99)   06C4 23          		 INC HL	;
100)   06C5 23          		 INC HL	;
101)   06C6 18 EE       		 JR OSCLI0	;
103)   06C8 D5          		OSCLI2: PUSH DE	;
104)   06C9 13          		OSCLI3: INC DE	;
105)   06CA 23          		 INC HL	;
106)   06CB 1A          		 LD A, (DE)	;
107)   06CC CD 08 07    		 CALL UPPRC	;
108)   06CF FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
109)   06D1 28 0A       		 JR Z, OSCLI4	;
110)   06D3 AE          		 XOR (HL)	;
111)   06D4 28 F3       		 JR Z, OSCLI3	;
112)   06D6 FE 80       		 CP 80H	;
113)   06D8 28 03       		 JR Z, OSCLI4	;
114)   06DA D1          		 POP DE	;
115)   06DB 18 E2       		 JR OSCLI1	;
117)   06DD F1          		OSCLI4: POP AF	;
118)   06DE 13          		 INC DE	;
119)   06DF CB 7E       		OSCLI5: BIT 7, (HL)	;
120)   06E1 23          		 INC HL	;
121)   06E2 28 FB       		 JR Z, OSCLI5	;
122)   06E4 7E          		 LD A, (HL)	;
123)   06E5 23          		 INC HL	;
124)   06E6 66          		 LD H, (HL)	;
125)   06E7 6F          		 LD L, A	;
126)   06E8 E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
127)   06E9 EB          		 EX DE, HL	;
128)   06EA E5          		 PUSH HL	;
129)   06EB FD E1       		 POP IY	;
130)   06ED C3 01 07    		 JP SKIPSP	;
132)   06F0 3E FE       		HUH: LD A, 254        	;
133)   06F2 CD 05 08    		 CALL OSERROR	;
134)   06F5 42 61 64 20 		 DEFM 'Bad command'	;
134)   06F9 63 6F 6D 6D 		 DEFM 'Bad command'	;
134)   06FD 61 6E 64    		 DEFM 'Bad command'	;
135)   0700 00          		 DEFB    0	;
137)   0701 7E          		SKIPSP: LD A, (HL)	;
138)   0702 FE 20       		 CP ' '	;
139)   0704 C0          		 RET NZ	;
140)   0705 23          		 INC HL	;
141)   0706 18 F9       		 JR SKIPSP	;
143)   0708 E6 7F       		UPPRC: AND 7FH	;
144)   070A FE 60       		 CP '`'	;
145)   070C D8          		 RET C	;
146)   070D E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
147)   070F C9          		 RET	;
151)   0710 42 59       		COMDS: DEFM  "BY"	;
152)   0712 C5          		 DEFB    'E'+80H	;
153)   0713 1F 08       		 DEFW BYE	;
154)   0715 43          		 DEFM  "C"	;
155)   0716 C4          		 DEFB    'D'+80H	;
156)   0717 D8 08       		 DEFW DRV_CD	;
157)   0719 43 4C       		               DEFM "CL"	;
158)   071B D3          		               DEFB 'S'+80H	;
159)   071C 22 08       		               DEFW DOCLS	;
160)   071E 44 49       		 DEFM "DI"	;
161)   0720 D2          		 DEFB 'R'+80H	;
162)   0721 C2 08       		 DEFW DRV_DIR	;
163)   0723 45 58 45    		               DEFM "EXE"	;
164)   0726 C3          		               DEFB 'C'+80H	;
165)   0727 61 08       		               DEFW DOEXEC	;
166)   0729 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
166)   072D 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
166)   0731 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
167)   0734 C6          		 DEFB 'F'+80H	;
168)   0735 5A 09       		 DEFW LCD_BLINKOF	;
169)   0737 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
169)   073B 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
169)   073F 4B 4F       		 DEFM  "LCD_BLINKO"	;
170)   0741 CE          		 DEFB 'N'+80H	;
171)   0742 60 09       		 DEFW LCD_BLINKON	;
172)   0744 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
172)   0748 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
173)   074C D2          		 DEFB 'R'+80H	;
174)   074D 66 09       		 DEFW LCD_CLR	;
175)   074F 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
175)   0753 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
175)   0757 4F 52 41    		 DEFM  "LCD_CURSORA"	;
176)   075A D4          		 DEFB 'T'+80H	;
177)   075B 6C 09       		 DEFW LCD_CURSAT	;
178)   075D 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
178)   0761 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
178)   0765 4F 46       		 DEFM  "LCD_CURSOF"	;
179)   0767 C6          		 DEFB 'F'+80H	;
180)   0768 89 09       		 DEFW LCD_CURSOF	;
181)   076A 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
181)   076E 43 55 52 53 		 DEFM  "LCD_CURSO"	;
181)   0772 4F          		 DEFM  "LCD_CURSO"	;
182)   0773 CE          		 DEFB 'N'+80H	;
183)   0774 8F 09       		 DEFW LCD_CURSON	;
184)   0776 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
184)   077A 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
184)   077E 4F 46       		 DEFM  "LCD_DISPOF"	;
185)   0780 C6          		 DEFB 'F'+80H	;
186)   0781 95 09       		 DEFW LCD_DISPOF	;
187)   0783 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
187)   0787 44 49 53 50 		 DEFM  "LCD_DISPO"	;
187)   078B 4F          		 DEFM  "LCD_DISPO"	;
188)   078C CE          		 DEFB 'N'+80H	;
189)   078D 9B 09       		 DEFW LCD_DISPON	;
190)   078F 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
190)   0793 48 4F 4D    		 DEFM  "LCD_HOM"	;
191)   0796 C5          		 DEFB 'E'+80H	;
192)   0797 2A 13       		 DEFW LCD16_HOME	;
193)   0799 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
193)   079D 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
193)   07A1 45 46       		 DEFM  "LCD_MOVLEF"	;
194)   07A3 D4          		 DEFB 'T'+80H	;
195)   07A4 A7 09       		 DEFW LCD_MOVLFT	;
196)   07A6 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
196)   07AA 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
196)   07AE 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
197)   07B1 D4          		 DEFB 'T'+80H	;
198)   07B2 AD 09       		 DEFW LCD_MOVRGT	;
199)   07B4 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
199)   07B8 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
200)   07BC D4          		 DEFB 'T'+80H	;
201)   07BD B3 09       		 DEFW LCD_PRN	;
202)   07BF 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
202)   07C3 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
202)   07C7 45 46       		 DEFM  "LCD_SCRLEF"	;
203)   07C9 D4          		 DEFB 'T'+80H	;
204)   07CA BC 09       		 DEFW LCD_SCRLFT	;
205)   07CC 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
205)   07D0 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
205)   07D4 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
206)   07D7 D4          		 DEFB 'T'+80H	;
207)   07D8 C2 09       		 DEFW LCD_SCRRGT	;
208)   07DA 50 57       		 DEFM  "PW"	;
209)   07DC C4          		 DEFB    'D'+80H	;
210)   07DD 1C 08       		 DEFW NIMP	;
211)   07DF 52 45 53 45 		 DEFM  "RESE"	;
212)   07E3 D4          		 DEFB    'T'+80H	;
213)   07E4 28 08       		 DEFW DORESET	;
214)   07E6 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
214)   07EA 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
214)   07EE 53          		 DEFM  "RTC_ADJUS"	;
215)   07EF D4          		 DEFB    'T'+80H                	;
216)   07F0 06 09       		 DEFW RTC_ADJUST	;
217)   07F2 52 54 43 5F 		 DEFM  "RTC_GE"	;
217)   07F6 47 45       		 DEFM  "RTC_GE"	;
218)   07F8 D4          		 DEFB    'T'+80H	;
219)   07F9 34 09       		 DEFW RTC_GET	;
220)   07FB 54 59 50    		 DEFM  "TYP"	;
221)   07FE C5          		 DEFB    'E'+80H	;
222)   07FF E3 08       		 DEFW DRV_TYPFILE	;
224)   0801 FF          		 DEFB 0FFH	;
230)   0802 C3 3D 06    		OSCMDFIN:      JP OS_CMDGET	;
232)   0805 E1          		OSERROR:       POP HL	;
233)   0806 CD 9F 03    		               CALL OS_PRINTTEXT	;
234)   0809 C3 3D 06    		               JP OS_CMDGET	;
236)   080C CD 05 08    		SNTX_ERROR: CALL OSERROR	;
237)   080F 53 79 6E 74 		 DEFM  "Syntax error"	;
237)   0813 61 78 20 65 		 DEFM  "Syntax error"	;
237)   0817 72 72 6F 72 		 DEFM  "Syntax error"	;
238)   081B 00          		 DEFB    0	;
240)   081C C3 02 08    		NIMP           JP OSCMDFIN	;
242)   081F C3 E6 02    		BYE: JP MENU	;
244)   0822 CD 98 03    		DOCLS:         CALL OS_CLRSCR	;
245)   0825 C3 02 08    		               JP OSCMDFIN	;
248)   0828 C3 00 00    		DORESET: JP 0	;
251)   082B CD 05 08    		HEXERROR:      CALL OSERROR	;
252)   082E 4E 4F 54 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
252)   0832 41 20 56 41 		               DEFM "NOT A VALID HEX ADDRESS"	;
252)   0836 4C 49 44 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
252)   083A 48 45 58 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
252)   083E 41 44 44 52 		               DEFM "NOT A VALID HEX ADDRESS"	;
252)   0842 45 53 53    		               DEFM "NOT A VALID HEX ADDRESS"	;
253)   0845 00          		               DEFB 0	;
257)   0846 7E          		PRSADDR:       LD A,(HL)	;
258)   0847 FE 00       		               CP 0	;
259)   0849 28 14       		               JR Z,PSADEX	;
260)   084B FE 2E       		               CP '.'	;
261)   084D 28 03       		               JR Z,PSADGTIT	;
262)   084F 23          		               INC HL	;
263)   0850 18 F4       		               JR PRSADDR	;
266)   0852 23          		PSADGTIT:      INC HL	;
267)   0853 CD 1E 2F    		               CALL IsStrHex   ;CHECK IF VALID HEX	;CHECK IF VALID HEX
268)   0856 20 D3       		               JR NZ,HEXERROR	;
270)   0858 CD 57 2F    		               CALL Read16bit	;
271)   085B 60          		               LD H,B	;
272)   085C 69          		               LD L,C	;
273)   085D AF          		               XOR A           ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
274)   085E C9          		               RET	;
275)   085F 37          		PSADEX:        SCF             ;SET CARRY FLAG ON ERROR	;SET CARRY FLAG ON ERROR
276)   0860 C9          		               RET                	;
280)   0861 CD CA 08    		DOEXEC:        CALL DRV_GETFNPRM	;
281)   0864 2B          		               DEC HL	;
282)   0865 2B          		               DEC HL	;
283)   0866 2B          		               DEC HL	;
284)   0867 2B          		               DEC HL	;
285)   0868 2B          		               DEC HL	;
286)   0869 CD 46 08    		               CALL PRSADDR	;
287)   086C DA 02 08    		               JP C,OSCMDFIN           ;ERROR ON PARSING HEX ADDRESS	;ERROR ON PARSING HEX ADDRESS
288)   086F E5          		               PUSH HL                 ;SAVE HEX ADDR	;SAVE HEX ADDR
289)   0870 CD DB 0E    		 CALL STRG_OPNFILE	;
290)   0873 E1          		               POP HL	;
291)   0874 38 3B       		 JR C, DRV_ERROR         ;ERROR ON FILE OPENING	;ERROR ON FILE OPENING
292)   0876 E5          		               PUSH HL                 ;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN	;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN
293)   0877 54          		               LD D,H	;
294)   0878 5D          		               LD E,L	;
295)   0879 01 00 00    		               LD BC,0                 ;LOAD ALL BYTES	;LOAD ALL BYTES
296)   087C CD 2E 0F    		               CALL STRG_BLKREAD	;
297)   087F 3A E5 FE    		 LD A, (FID)	;
298)   0882 CD F9 0E    		 CALL STRG_CLSFILE       ;CLOSE FILE	;CLOSE FILE
299)   0885 C9          		               RET                     ;EXECUTE CODE AT HEX ADDR	;EXECUTE CODE AT HEX ADDR
305)   0886 FD E5       		PARSCMD:       PUSH IY	;
306)   0888 E1          		               POP HL	;
307)   0889 CD 01 07    		               CALL SKIPSP	;
308)   088C E5          		               PUSH HL	;
309)   088D 1E 00       		               LD E,0	;
310)   088F 7E          		PCNXT:         LD A,(HL)	;
311)   0890 FE 20       		               CP ' '	;
312)   0892 28 10       		               JR Z,PCEXT	;
313)   0894 FE 2C       		               CP ','	;
314)   0896 28 0C       		               JR Z,PCEXT	;
315)   0898 FE 0D       		               CP 13	;
316)   089A 28 08       		               JR Z,PCEXT	;
317)   089C FE 00       		               CP 0	;
318)   089E 28 04       		               JR Z,PCEXT	;
319)   08A0 23          		               INC HL	;
320)   08A1 1C          		               INC E	;
321)   08A2 18 EB       		               JR PCNXT	;
322)   08A4 E5          		PCEXT:         PUSH HL	;
323)   08A5 FD E1       		               POP IY          ;IY AT THE END OF PARAM	;IY AT THE END OF PARAM
324)   08A7 E1          		               POP HL          ;HL AT THE START OF PARAM	;HL AT THE START OF PARAM
325)   08A8 C9          		               RET                	;
328)   08A9 CD 86 08    		PARSCMDI:      CALL PARSCMD	;
330)   08AC CD 07 2F    		               CALL STRTOB     ;CONVERT TO BYTE ON A	;CONVERT TO BYTE ON A
331)   08AF 6F          		               LD L,A	;
332)   08B0 C9          		               RET	;
340)   08B1 CD 05 08    		DRV_ERROR: CALL OSERROR	;
341)   08B4 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
341)   08B8 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
341)   08BC 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
341)   08C0 52          		 DEFM  "STORAGE ERROR"	;
342)   08C1 00          		 DEFB    0	;
347)   08C2 CD 97 0E    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
348)   08C5 D2 02 08    		 JP NC, OSCMDFIN	;
349)   08C8 18 E7       		 JR DRV_ERROR	;
351)   08CA CD 86 08    		DRV_GETFNPRM: CALL PARSCMD       	;
352)   08CD 06 00       		 LD B, 0	;
353)   08CF 4B          		 LD C, E	;
354)   08D0 11 B9 FE    		 LD DE, STRGBUFF	;
355)   08D3 ED B0       		 LDIR	;
356)   08D5 AF          		 XOR A	;
357)   08D6 12          		 LD (DE), A	;
358)   08D7 C9          		 RET	;
361)   08D8 CD CA 08    		DRV_CD: CALL DRV_GETFNPRM	;
362)   08DB CD C3 0E    		 CALL STRG_DIRCHG	;
363)   08DE D2 02 08    		 JP NC, OSCMDFIN	;
364)   08E1 18 CE       		 JR DRV_ERROR	;
367)   08E3 CD CA 08    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
368)   08E6 CD DB 0E    		 CALL STRG_OPNFILE	;
369)   08E9 38 C6       		 JR C, DRV_ERROR	;
370)   08EB CD 63 0F    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
371)   08EE 3A E5 FE    		 LD A, (FID)	;
372)   08F1 CD F9 0E    		 CALL STRG_CLSFILE	;
373)   08F4 C3 02 08    		 JP OSCMDFIN	;
380)   08F7 CD A9 08    		RTC_GETPARBCD: CALL PARSCMDI	;
381)   08FA CD 79 2E    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
382)   08FD FD 7E 00    		 LD A, (IY)	;
383)   0900 FE 2C       		 CP ','	;
384)   0902 FD 23       		 INC IY	;
385)   0904 7D          		 LD A, L	;
386)   0905 C9          		 RET	;
391)   0906 0E 00       		RTC_ADJUST: LD C, 0	;
392)   0908 11 89 FE    		 LD DE, BUFFER	;
393)   090B AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
394)   090C 32 89 FE    		 LD (BUFFER), A	;
395)   090F 13          		 INC DE	;
396)   0910 C5          		RTCADJ_NXT: PUSH BC	;
397)   0911 D5          		 PUSH DE	;
398)   0912 CD F7 08    		 CALL RTC_GETPARBCD	;
399)   0915 D1          		 POP DE	;
400)   0916 C1          		 POP BC	;
401)   0917 28 0B       		 JR Z, RTCADJ_PAROK	;
403)   0919 FD 2B       		 DEC IY	;
404)   091B 47          		 LD B, A        ;SAVE A	;SAVE A
405)   091C 79          		 LD A, C	;
406)   091D FE 06       		 CP 6	;
407)   091F 28 08       		 JR Z, RTCADJ_EXEC	;
409)   0921 C3 0C 08    		 JP SNTX_ERROR	;
410)   0924 0C          		RTCADJ_PAROK: INC C	;
411)   0925 12          		 LD (DE), A	;
412)   0926 13          		 INC DE	;
413)   0927 18 E7       		 JR RTCADJ_NXT	;
414)   0929 78          		RTCADJ_EXEC: LD A, B	;
415)   092A 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
416)   092B 13          		 INC DE	;
417)   092C AF          		 XOR A	;
418)   092D 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
419)   092E CD 02 12    		 CALL DS1307_ADJUST	;
420)   0931 C3 02 08    		 JP OSCMDFIN	;
422)   0934 CD A6 11    		RTC_GET: CALL DS1307_GETNOW	;
424)   0937 21 45 09    		 LD HL, TSTSTR	;
425)   093A 11 89 FE    		 LD DE, BUFFER	;
426)   093D 01 14 00    		 LD BC, 20	;
427)   0940 C5          		 PUSH BC	;
428)   0941 ED B0       		 LDIR	;
429)   0943 C1          		 POP BC	;
430)   0944 C9          		 RET	;
432)   0945 31 37 2F 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
432)   0949 33 2F 32 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
432)   094D 32 31 20 31 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
432)   0951 37 3A 35 32 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
432)   0955 3A 30 33    		 TSTSTR DEFM "17/03/2021 17:52:03"	;
433)   0958 00 0D       		 DEFB 0,0x0D	;
437)   095A CD 62 13    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
438)   095D C3 02 08    		 JP OSCMDFIN	;
440)   0960 CD 70 13    		LCD_BLINKON: CALL LCD16_BLINKON	;
441)   0963 C3 02 08    		 JP OSCMDFIN	;
443)   0966 CD 13 13    		LCD_CLR: CALL LCD16_CLR	;
444)   0969 C3 02 08    		 JP OSCMDFIN	;
446)   096C CD A9 08    		LCD_CURSAT: CALL PARSCMDI     ;TAKE PARAMS D COL E ROW  	;TAKE PARAMS D COL E ROW
447)   096F 55          		 LD D, L	;
448)   0970 D5          		 PUSH DE                                                 ;SAVE PARAM D	;SAVE PARAM D
449)   0971 FD 7E 00    		 LD A, (IY)	;
450)   0974 FE 2C       		 CP ', '	;
451)   0976 28 04       		 JR Z, LCDCA_OK	;
452)   0978 D1          		 POP DE	;
453)   0979 C3 0C 08    		 JP SNTX_ERROR	;
454)   097C FD 23       		LCDCA_OK: INC IY	;
455)   097E CD A9 08    		 CALL PARSCMDI	;
456)   0981 D1          		               POP DE                                                  ;RESTORE PARAM D	;RESTORE PARAM D
457)   0982 5D          		 LD E, L	;
458)   0983 CD 37 13    		 CALL LCD16_SETCURS	;
459)   0986 C3 02 08    		 JP OSCMDFIN	;
461)   0989 CD 46 13    		LCD_CURSOF: CALL LCD16_CURSOFF	;
462)   098C C3 02 08    		 JP OSCMDFIN	;
464)   098F CD 54 13    		LCD_CURSON: CALL LCD16_CURSON	;
465)   0992 C3 02 08    		 JP OSCMDFIN	;
467)   0995 CD EA 12    		LCD_DISPOF: CALL LCD16_NODISP	;
468)   0998 C3 02 08    		 JP OSCMDFIN	;
470)   099B CD F8 12    		LCD_DISPON: CALL LCD16_DISP	;
471)   099E C3 02 08    		 JP OSCMDFIN	;
473)   09A1 CD 2A 13    		LCD_HOME: CALL LCD16_HOME	;
474)   09A4 C3 02 08    		 JP OSCMDFIN	;
476)   09A7 CD 8A 13    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
477)   09AA C3 02 08    		 JP OSCMDFIN	;
479)   09AD CD 90 13    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
480)   09B0 C3 02 08    		 JP OSCMDFIN	;
482)   09B3 CD 86 08    		LCD_PRN: CALL PARSCMD	;
483)   09B6 CD 1C 13    		               CALL LCD16_PRINT	;
484)   09B9 C3 02 08    		               JP OSCMDFIN	;
487)   09BC CD 7E 13    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
488)   09BF C3 02 08    		 JP OSCMDFIN	;
490)   09C2 CD 84 13    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
491)   09C5 C3 02 08    		 JP OSCMDFIN	;
  2)   09C8 E5          		 PUSH HL	;
  3)   09C9 F5          		 PUSH AF	;
  4)   09CA C5          		 PUSH BC	;
  5)   09CB DD E5       		 PUSH IX	;
  9)   09CD DB 18       		 IN A, (DEVINP)	;
 10)   09CF 2F          		 CPL	;
 11)   09D0 E6 07       		 AND 0X07       ;BITS 0-2	;BITS 0-2
 12)   09D2 3D          		 DEC A         ;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE	;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE
 13)   09D3 DD 21 F1 09 		 LD IX, MYINTADDR	;
 14)   09D7 06 00       		 LD B, 0	;
 15)   09D9 4F          		 LD C, A	;
 16)   09DA CB 21       		 SLA C        ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 17)   09DC DD 09       		 ADD IX, BC	;
 18)   09DE DD 6E 00    		 LD L, (IX)	;
 19)   09E1 DD 66 01    		 LD H, (IX + 1)	;
 20)   09E4 01 E9 09    		 LD BC, IS_EX	;
 21)   09E7 C5          		 PUSH BC        ;RETURN ADDRESS	;RETURN ADDRESS
 22)   09E8 E9          		 JP (HL)        ;JP TO HL	;JP TO HL
 24)   09E9 DD E1       		IS_EX: POP IX	;
 25)   09EB C1          		 POP BC	;
 26)   09EC F1          		 POP AF	;
 27)   09ED E1          		 POP HL	;
 28)   09EE FB          		 EI	;
 29)   09EF ED 4D       		 RETI	;
 31)   09F1 0D 0A       		MYINTADDR: DEFW INT_TIMER	;
 32)   09F3 01 0A       		 DEFW SAVETE	;
 33)   09F5 0A 0A       		 DEFW DOCLRINT	;
 34)   09F7 0A 0A       		 DEFW DOCLRINT	;
 35)   09F9 0A 0A       		 DEFW DOCLRINT	;
 36)   09FB 0A 0A       		 DEFW DOCLRINT	;
 37)   09FD 0A 0A       		 DEFW DOCLRINT	;
 38)   09FF 0A 0A       		 DEFW DOCLRINT	;
 40)   0A01 D3 40       		SAVETE: OUT (DEVINT), A       ;CLEAR THE INTERRUPT	;CLEAR THE INTERRUPT
 41)   0A03 21 AB FE    		 LD HL, INT2TE        ;TEARING EFFECT	;TEARING EFFECT
 42)   0A06 3E 01       		 LD A, 1	;
 43)   0A08 77          		 LD (HL),A        ;	;
 44)   0A09 C9          		 RET	;
 47)   0A0A D3 40       		DOCLRINT: OUT (DEVINT), A	;
 48)   0A0C C9          		 RET	;
 50)   0A0D D3 40       		INT_TIMER: OUT (DEVINT), A	;
 51)   0A0F 21 A7 FE    		 LD HL, TIMECTR	;
 52)   0A12 34          		 INC (HL)	;
 53)   0A13 7E          		 LD A, (HL)	;
 54)   0A14 FE 00       		 CP 0	;
 55)   0A16 C0          		 RET NZ	;
 56)   0A17 23          		 INC HL	;
 57)   0A18 34          		 INC (HL)	;
 58)   0A19 7E          		 LD A, (HL)	;
 59)   0A1A FE 00       		 CP 0	;
 60)   0A1C C0          		 RET NZ	;
 61)   0A1D 23          		 INC HL	;
 62)   0A1E 34          		 INC (HL)	;
 63)   0A1F 7E          		 LD A, (HL)	;
 64)   0A20 FE 00       		 CP 0	;
 65)   0A22 C0          		 RET NZ	;
 66)   0A23 23          		 INC HL	;
 67)   0A24 34          		 INC (HL)	;
 68)   0A25 7E          		 LD A, (HL)	;
 69)   0A26 FE 00       		 CP 0	;
 70)   0A28 C0          		 RET NZ	;
 72)   0A29 21 00 00    		 LD HL, 0	;
 73)   0A2C 22 A7 FE    		 LD (TIMECTR), HL	;
 74)   0A2F 22 A9 FE    		 LD (TIMECTR + 2), HL	;
 75)   0A32 C9          		 RET	;
  9)   0A33 21 E7 FE    		INITMMU:       LD HL,BANKS	;
 10)   0A36 06 08       		               LD B,8	;
 11)   0A38 AF          		               XOR A	;
 12)   0A39 77          		INM_AGN:       LD (HL),A	;
 13)   0A3A 3C          		               INC A	;
 14)   0A3B 23          		 INC HL	;
 15)   0A3C 10 FB       		               DJNZ INM_AGN	;
 16)   0A3E C9          		               RET                	;
 22)   0A3F 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 23)   0A40 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 24)   0A41 FE 02       		 CP 2	;
 25)   0A43 D8          		 RET C         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 26)   0A44 FE 07       		 CP 7	;
 27)   0A46 C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 28)   0A47 21 E7 FE    		 LD HL, BANKS	;
 29)   0A4A 16 00       		 LD D, 0	;
 30)   0A4C 5F          		 LD E, A	;
 31)   0A4D 19          		 ADD HL, DE	;
 32)   0A4E 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 33)   0A4F 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 34)   0A50 0E 00       		 LD C, DEVMMU	;
 35)   0A52 58          		 LD E,B	;
 36)   0A53 CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 37)   0A55 CB 20       		 SLA B	;
 38)   0A57 CB 20       		 SLA B	;
 39)   0A59 CB 20       		 SLA B	;
 40)   0A5B CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 41)   0A5D ED 79       		 OUT (C), A	;
 42)   0A5F 43          		 LD B,E	;
 43)   0A60 C9          		 RET	;
 48)   0A61 21 E7 FE    		GETPGINBANK:   LD HL,BANKS	;
 49)   0A64 16 00       		               LD D,0	;
 50)   0A66 58          		               LD E,B	;
 51)   0A67 19          		               ADD HL,DE	;
 52)   0A68 7E          		               LD A,(HL)	;
 53)   0A69 C9          		               RET	;
 15)   0A6A 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   0A6A 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   0A6A 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   0A6A 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   0A6A 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   0A6A 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   0A6A 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 44)   0A6A 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   0A6A 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   0A6A 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   0A6A 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   0A6A 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   0A6A F5          		RS_INI: PUSH AF	;
 63)   0A6B 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 64)   0A6D D3 23       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 73)   0A6F F1          		 POP AF	;
 74)   0A70 D3 20       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 75)   0A72 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   0A74 D3 21       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 77)   0A76 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   0A78 D3 23       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 80)   0A7A 3E 00       		 LD A, 0	;
 81)   0A7C D3 22       		 OUT (FCR), A        ;//was commented	;//was commented
 82)   0A7E 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   0A80 D3 21       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 84)   0A82 C9          		 RET	;
 87)   0A83 CD 89 0A    		RS_TX: CALL RSTXRD	;
 88)   0A86 D3 20       		 OUT (THR), A	;
 90)   0A88 C9          		 RET	;
 94)   0A89 F5          		RSTXRD: PUSH AF	;
 95)   0A8A DB 25       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 96)   0A8C CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   0A8E 28 FA       		 JR Z, RSTXLP	;
 98)   0A90 F1          		 POP AF	;
 99)   0A91 C9          		 RET	;
102)   0A92 7E          		RS_TXT: LD A, (HL)	;
103)   0A93 23          		 INC HL	;
104)   0A94 FE 00       		 CP 0	;
105)   0A96 C8          		 RET Z	;
106)   0A97 CD 83 0A    		 CALL RS_TX	;
107)   0A9A 18 F6       		 JR RS_TXT	;
114)   0A9C F3          		RS_RX: DI	;
115)   0A9D 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   0A9F D3 24       		 OUT (MCR), A	;
117)   0AA1 CD BA 0A    		 CALL RSRXRD	;
118)   0AA4 AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   0AA5 D3 24       		 OUT (MCR), A	;
121)   0AA7 DB 20       		 IN A, (RBR)	;
122)   0AA9 FB          		 EI	;
123)   0AAA C9          		 RET	;
125)   0AAB 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   0AAD D3 24       		 OUT (MCR), A	;
127)   0AAF DB 25       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
128)   0AB1 CB 47       		 BIT 0, A	;
129)   0AB3 28 03       		 JR Z, RS_NOCHAR	;
130)   0AB5 F3          		 DI	;
131)   0AB6 18 EC       		 JR RS_GTCH	;
132)   0AB8 AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
133)   0AB9 C9          		 RET	;
140)   0ABA F3          		RSRXRD: DI	;
141)   0ABB F5          		 PUSH AF	;
142)   0ABC DB 25       		RSRXLP: IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
143)   0ABE CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
144)   0AC0 28 FA       		 JR Z, RSRXLP	;
145)   0AC2 F1          		 POP AF	;
146)   0AC3 FB          		 EI	;
147)   0AC4 C9          		 RET	;
151)   0AC5 DB 25       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
152)   0AC7 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
153)   0AC9 C9          		 RET	;
155)   0ACA F5          		SHLCD: PUSH AF	;
157)   0ACB F1          		 POP AF	;
159)   0ACC C9          		 RET	;
163)   0ACD F5          		CHKERR: PUSH AF	;
164)   0ACE E5          		 PUSH HL	;
165)   0ACF C5          		 PUSH BC	;
166)   0AD0 DB 25       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
167)   0AD2 CB 67       		 BIT 4, A	;
168)   0AD4 28 04       		 JR Z, LBLPE	;
169)   0AD6 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
170)   0AD8 18 1A       		 JR EXIT	;
171)   0ADA CB 57       		LBLPE: BIT 2, A	;
172)   0ADC 28 04       		 JR Z, LBLFE	;
173)   0ADE 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
174)   0AE0 18 12       		 JR EXIT	;
175)   0AE2 CB 5F       		LBLFE: BIT 3, A	;
176)   0AE4 28 04       		 JR Z, LBLOE	;
177)   0AE6 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
178)   0AE8 18 0A       		 JR EXIT	;
179)   0AEA CB 4F       		LBLOE: BIT 1, A	;
180)   0AEC 28 04       		 JR Z, LBLNE	;
181)   0AEE 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
182)   0AF0 18 02       		 JR EXIT	;
183)   0AF2 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
184)   0AF4 21 9F FE    		EXIT: LD HL, SERERR	;
185)   0AF7 77          		 LD (HL), A	;
187)   0AF8 C1          		 POP BC	;
188)   0AF9 E1          		 POP HL	;
189)   0AFA F1          		 POP AF	;
190)   0AFB C9          		 RET	;
 15)   0AFC 	            		 DEVKBI EQU DEVINP      ; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP	; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP
 21)   0AFC 06 01       		@KEYBCLKON: LD B, UKB_OUT_CLK	;
 22)   0AFE CD 3B 04    		 CALL FF_OFF	;
 23)   0B01 C9          		 RET	;
 25)   0B02 06 01       		@KEYBCLKOFF: LD B, UKB_OUT_CLK	;
 26)   0B04 CD 4D 04    		 CALL FF_ON	;
 27)   0B07 C9          		 RET	;
 29)   0B08 06 02       		@KEYBDATON: LD B, UKB_OUT_DAT	;
 30)   0B0A CD 3B 04    		 CALL FF_OFF	;
 31)   0B0D C9          		 RET	;
 33)   0B0E 06 02       		@KEYBDATOFF: LD B, UKB_OUT_DAT	;
 34)   0B10 CD 4D 04    		 CALL FF_ON	;
 35)   0B13 C9          		 RET	;
 37)   0B14 CD FC 0A    		PS2ISK: CALL KEYBCLKON        ;KEYBOARD ENABLED	;KEYBOARD ENABLED
 38)   0B17 06 46       		 LD B, SAMP        ;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)	;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)
 39)   0B19 DB 18       		CHAG: IN A, (DEVKBI)	;
 40)   0B1B 57          		 LD D, A	;
 41)   0B1C CB 77       		 BIT UKB_IN_CLK, A      ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 42)   0B1E 28 08       		 JR Z, KEYOK	;
 43)   0B20 10 F7       		 DJNZ CHAG	;
 45)   0B22 3E 01       		PS2NTP: LD A, 1        ;SET A TO 1 MEANS NO KEY AVAILABLE	;SET A TO 1 MEANS NO KEY AVAILABLE
 46)   0B24 CD 02 0B    		 CALL KEYBCLKOFF	;
 47)   0B27 C9          		 RET	;
 48)   0B28 AF          		KEYOK: XOR A        ;SET A TO 0 MEANS WE HAVE A KEY	;SET A TO 0 MEANS WE HAVE A KEY
 49)   0B29 C9          		 RET	;
 52)   0B2A 06 46       		WAITFORHIGH: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 53)   0B2C B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 54)   0B2D DB 18       		WH1: IN A, (DEVKBI)	;
 55)   0B2F 57          		 LD D, A	;
 56)   0B30 CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 57)   0B32 C0          		 RET NZ	;
 58)   0B33 10 F8       		 DJNZ WH1	;
 59)   0B35 37          		 SCF	;
 60)   0B36 C9          		 RET	;
 62)   0B37 06 46       		WAITFORLOW1: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 63)   0B39 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 64)   0B3A DB 18       		WL1: IN A, (DEVKBI)	;
 65)   0B3C 57          		 LD D, A	;
 66)   0B3D CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 67)   0B3F C8          		 RET Z	;
 68)   0B40 10 F8       		 DJNZ WL1	;
 69)   0B42 37          		 SCF	;
 70)   0B43 C9          		 RET	;
 72)   0B44 CD 37 0B    		WAITFORLOW: CALL WAITFORLOW1	;
 73)   0B47 D8          		 RET C	;
 74)   0B48 DB 18       		 IN A, (DEVKBI)        ;SOME MORE TIMES TO BE SURE	;SOME MORE TIMES TO BE SURE
 75)   0B4A DB 18       		 IN A, (DEVKBI)	;
 76)   0B4C 57          		 LD D, A	;
 77)   0B4D C9          		 RET	;
 79)   0B4E F3          		@NEWBYTE: DI	;
 80)   0B4F 7A          		 LD A, D        ;BIT 7 HAS THE DATA	;BIT 7 HAS THE DATA
 81)   0B50 CB 7F       		 BIT UKB_IN_DAT, A	;
 82)   0B52 20 2D       		 JR NZ, ERROR0       ;ALWAYS START WITH 0	;ALWAYS START WITH 0
 83)   0B54 06 08       		 LD B, 8	;
 84)   0B56 48          		NXTBIT: LD C, B        ;SAVE B	;SAVE B
 85)   0B57 CD 2A 0B    		 CALL WAITFORHIGH	;
 86)   0B5A D8          		 RET C	;
 87)   0B5B CD 44 0B    		 CALL WAITFORLOW	;
 88)   0B5E D8          		 RET C	;
 89)   0B5F CB 27       		 SLA A        ;BIT 7=DATA IS ON C FLAG	;BIT 7=DATA IS ON C FLAG
 90)   0B61 CB 1B       		 RR E        ;CARRY GOES TO BIT 7 OF E	;CARRY GOES TO BIT 7 OF E
 91)   0B63 41          		 LD B, C        ;RESTORE C	;RESTORE C
 92)   0B64 10 F0       		 DJNZ NXTBIT	;
 93)   0B66 CD 2A 0B    		 CALL WAITFORHIGH	;
 94)   0B69 D8          		 RET C	;
 95)   0B6A CD 44 0B    		 CALL WAITFORLOW	;
 96)   0B6D D8          		 RET C	;
 98)   0B6E CD 2A 0B    		 CALL WAITFORHIGH	;
 99)   0B71 D8          		 RET C	;
100)   0B72 CD 44 0B    		 CALL WAITFORLOW	;
101)   0B75 D8          		 RET C	;
102)   0B76 CB 7F       		 BIT UKB_IN_DAT, A	;
103)   0B78 28 10       		 JR Z, ERROR1       ;ALWAYS ENDS WITH 1	;ALWAYS ENDS WITH 1
104)   0B7A CD 2A 0B    		 CALL WAITFORHIGH       ;WAIT FOR END OF TRANSMITION	;WAIT FOR END OF TRANSMITION
105)   0B7D D8          		 RET C	;
107)   0B7E 7B          		 LD A, E	;
108)   0B7F FB          		 EI	;
109)   0B80 C9          		 RET	;
110)   0B81 21 96 0B    		ERROR0: LD HL, MSER4	;
111)   0B84 CD 92 0A    		 CALL RS_TXT	;
112)   0B87 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
113)   0B88 FB          		 EI	;
114)   0B89 C9          		 RET	;
115)   0B8A D5          		ERROR1: PUSH DE	;
116)   0B8B 21 AB 0B    		 LD HL, MSER5	;
117)   0B8E CD 92 0A    		 CALL RS_TXT	;
118)   0B91 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
119)   0B92 D1          		 POP DE	;
120)   0B93 7B          		 LD A, E        ;MAYBE IGNORE THIS	;MAYBE IGNORE THIS
121)   0B94 FB          		 EI	;
122)   0B95 C9          		 RET	;
123)   0B96 4B 42 5F 45 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0B9A 52 52 3A 20 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0B9E 53 54 41 52 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0BA2 54 20 42 49 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   0BA6 54 2E       		MSER4: DEFM "KB_ERR: START BIT."	;
124)   0BA8 0A 0D 00    		 DB 10,13,0	;
125)   0BAB 4B 42 5F 45 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   0BAF 52 52 3A 20 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   0BB3 53 54 4F 50 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   0BB7 20 42 49 54 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   0BBB 2E          		MSER5: DEFM "KB_ERR: STOP BIT."	;
126)   0BBC 0A 0D 00    		 DB 10,13,0	;
128)   0BBF 01 0A 00    		PS2KEY: LD BC, 10	;
129)   0BC2 0B          		PS2AGN: DEC BC	;
130)   0BC3 78          		 LD A, B	;
131)   0BC4 B1          		 OR C	;
132)   0BC5 28 0F       		 JR Z, PS2TIMEOUT	;
133)   0BC7 C5          		 PUSH BC	;
134)   0BC8 CD 14 0B    		 CALL PS2ISK	;
135)   0BCB B7          		 OR A	;
136)   0BCC C1          		 POP BC	;
137)   0BCD 20 F3       		 JR NZ, PS2AGN       ;NO KEY YET	;NO KEY YET
138)   0BCF CD 4E 0B    		READKEY: CALL NEWBYTE      ;D HAS THE LAST INPUT	;D HAS THE LAST INPUT
139)   0BD2 38 02       		 JR C, PS2TIMEOUT      ;ERROR SO INVALIDATE A	;ERROR SO INVALIDATE A
140)   0BD4 18 02       		 JR PS2EX	;
141)   0BD6 AF          		PS2TIMEOUT: XOR A       ;0 CODE IS INVALID	;0 CODE IS INVALID
142)   0BD7 FB          		 EI	;
143)   0BD8 F5          		PS2EX: PUSH AF	;
144)   0BD9 CD 02 0B    		 CALL KEYBCLKOFF	;
145)   0BDC F1          		 POP AF	;
146)   0BDD C9          		 RET	;
149)   0BDE CD E6 0B    		READCHAR: CALL GTKEY	;
150)   0BE1 C8          		 RET Z	;
151)   0BE2 CD A5 0C    		 CALL PS2LOK	;
152)   0BE5 C9          		 RET	;
155)   0BE6 CD BF 0B    		@GTKEY: CALL PS2KEY       ;GET A KEY FROM PS2	;GET A KEY FROM PS2
156)   0BE9 FE E1       		 CP $E1         ;BREAK KEY	;BREAK KEY
157)   0BEB CC 12 0C    		 CALL Z, GTBRK	;
158)   0BEE FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
159)   0BF0 CC 56 0C    		 CALL Z, GTREL	;
160)   0BF3 FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
161)   0BF5 CC 1C 0C    		 CALL Z, GTEXT	;
164)   0BF8 FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
165)   0BFA CC 81 0C    		 CALL Z, SHFTOG	;
166)   0BFD FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
167)   0BFF CC 81 0C    		 CALL Z, SHFTOG	;
168)   0C02 FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
169)   0C04 CC 8A 0C    		 CALL Z, CTRTOG	;
170)   0C07 FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
171)   0C09 CC 93 0C    		 CALL Z, ALTTOG	;
172)   0C0C FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
173)   0C0E CC 9C 0C    		 CALL Z, CAPSTOG	;
176)   0C11 C9          		 RET	;
178)   0C12 CD BF 0B    		GTBRK: CALL PS2KEY       ;$14 OR $F0	;$14 OR $F0
179)   0C15 FE F0       		 CP $F0	;
180)   0C17 C8          		 RET Z	;
181)   0C18 CD BF 0B    		 CALL PS2KEY       ;$77	;$77
182)   0C1B C9          		 RET	;
184)   0C1C CD BF 0B    		GTEXT: CALL PS2KEY       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
185)   0C1F FE 6B       		 CP $6B         ;LEFT	;LEFT
186)   0C21 C8          		 RET Z	;
187)   0C22 FE 72       		 CP $72        ;DOWN	;DOWN
188)   0C24 C8          		 RET Z	;
189)   0C25 FE 74       		 CP $74        ;RIGHT	;RIGHT
190)   0C27 C8          		 RET Z	;
191)   0C28 FE 75       		 CP $75        ;UP	;UP
192)   0C2A C8          		 RET Z	;
193)   0C2B FE 70       		 CP $70        ;INSERT	;INSERT
194)   0C2D C8          		 RET Z	;
195)   0C2E FE 6C       		 CP $6C        ;HOME	;HOME
196)   0C30 C8          		 RET Z	;
197)   0C31 FE 7D       		 CP $7D        ;PG UP	;PG UP
198)   0C33 C8          		 RET Z	;
199)   0C34 FE 7A       		 CP $7A        ;PG DN	;PG DN
200)   0C36 C8          		 RET Z	;
201)   0C37 FE 69       		 CP $69        ;END	;END
202)   0C39 C8          		 RET Z	;
203)   0C3A FE 71       		 CP $71        ;DEL	;DEL
204)   0C3C C8          		 RET Z	;
205)   0C3D FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
206)   0C3F C8          		 RET Z	;
207)   0C40 FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
208)   0C42 C8          		 RET Z	;
209)   0C43 FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
210)   0C45 C8          		 RET Z	;
211)   0C46 FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
212)   0C48 C8          		 RET Z	;
213)   0C49 FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
214)   0C4B C8          		 RET Z	;
215)   0C4C FE F0       		 CP $F0	;
216)   0C4E C2 54 0C    		 JP NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
217)   0C51 CD BF 0B    		 CALL PS2KEY       ; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT	; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT
219)   0C54 AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
220)   0C55 C9          		 RET	;
223)   0C56 CD BF 0B    		GTREL: CALL PS2KEY       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
224)   0C59 FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
225)   0C5B CC 6F 0C    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
226)   0C5E FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
227)   0C60 CC 75 0C    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
228)   0C63 FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
229)   0C65 CC 7B 0C    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
230)   0C68 FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
231)   0C6A CC 6F 0C    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
232)   0C6D AF          		 XOR A         ; NO KEY	; NO KEY
233)   0C6E C9          		 RET	;
235)   0C6F 21 9E FE    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
236)   0C72 CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
237)   0C74 C9          		 RET	;
239)   0C75 21 9E FE    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
240)   0C78 CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
241)   0C7A C9          		 RET	;
243)   0C7B 21 9E FE    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
244)   0C7E CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
245)   0C80 C9          		 RET	;
247)   0C81 21 9E FE    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
248)   0C84 3E 40       		 LD A, $40       ; MASK	; MASK
249)   0C86 AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
250)   0C87 77          		 LD (HL), A       ; SAVE	; SAVE
251)   0C88 AF          		 XOR A         ; NO KEY	; NO KEY
252)   0C89 C9          		 RET	;
254)   0C8A 21 9E FE    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
255)   0C8D 3E 80       		 LD A, $80       ; MASK	; MASK
256)   0C8F AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
257)   0C90 77          		 LD (HL), A       ; SAVE	; SAVE
258)   0C91 AF          		 XOR A         ; NO KEY	; NO KEY
259)   0C92 C9          		 RET	;
261)   0C93 21 9E FE    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
262)   0C96 3E 20       		 LD A, $20	;
263)   0C98 AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
264)   0C99 77          		 LD (HL), A       ; SAVE	; SAVE
265)   0C9A AF          		 XOR A         ; NO KEY	; NO KEY
266)   0C9B C9          		 RET	;
268)   0C9C 21 9E FE    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
269)   0C9F 3E 10       		 LD A, $10	;
270)   0CA1 AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
271)   0CA2 77          		 LD (HL), A       ; SAVE	; SAVE
272)   0CA3 AF          		 XOR A         ; NO KEY	; NO KEY
273)   0CA4 C9          		 RET	;
276)   0CA5 21 9E FE    		@PS2LOK: LD HL, KEYCTR	;
277)   0CA8 47          		 LD B, A        ; SAVE A	; SAVE A
278)   0CA9 7E          		 LD A, (HL)       ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
279)   0CAA 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
280)   0CAB CB 1F       		 RR A	;
281)   0CAD CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
282)   0CAF A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
283)   0CB0 CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED	;CHECK IF BIT 4 IS 0 = UNSHIFTED
284)   0CB2 78          		 LD A, B        ;RESTORE A	;RESTORE A
289)   0CB3 21 C1 0C    		 LD HL, PS2TAB1       ;UNSHIFTED	;UNSHIFTED
290)   0CB6 28 03       		 JR Z, PLK1	;
291)   0CB8 21 6B 0D    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
292)   0CBB 06 00       		PLK1: LD B, 0	;
293)   0CBD 4F          		 LD C, A	;
294)   0CBE 09          		 ADD HL, BC	;
295)   0CBF 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
296)   0CC0 C9          		 RET	;
300)   0CC1 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
300)   0CC5 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
300)   0CC9 00 00       		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
301)   0CCB 00 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0CCF 60 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0CD3 00 00       		 DB 0,0,0,0,'`',0,0,0,0,0	;
302)   0CD5 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   0CD9 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   0CDD 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   0CDF 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
303)   0CE3 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
303)   0CE7 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
304)   0CE9 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0CED 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0CF1 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   0CF3 62 68 67 6D 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   0CF7 36 00 00 2C 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   0CFB 6D 6A       		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   0CFD 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
306)   0D01 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
306)   0D05 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
307)   0D07 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
307)   0D0B 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
307)   0D0F 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
308)   0D11 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
308)   0D15 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
308)   0D19 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
309)   0D1B 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
309)   0D1F 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
309)   0D23 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
310)   0D25 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
310)   0D29 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
310)   0D2D 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
311)   0D2F 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
311)   0D33 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
311)   0D37 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
312)   0D39 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
312)   0D3D 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
312)   0D41 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
313)   0D43 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
313)   0D47 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
313)   0D4B 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
314)   0D4D 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
314)   0D51 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
314)   0D55 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
315)   0D57 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
315)   0D5B 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
315)   0D5F 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
316)   0D61 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
316)   0D65 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
316)   0D69 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
319)   0D6B 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
319)   0D6F 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
319)   0D73 00 00       		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
320)   0D75 00 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
320)   0D79 7E 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
320)   0D7D 00 00       		 DB 0,0,0,0,'~',0,0,0,0,0	;
321)   0D7F 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   0D83 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   0D87 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   0D89 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
322)   0D8D 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
322)   0D91 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
323)   0D93 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   0D97 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   0D9B 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   0D9D 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
324)   0DA1 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
324)   0DA5 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
325)   0DA7 55 26 2A 00 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
325)   0DAB 00 3C 4B 49 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
325)   0DAF 4F 29       		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
326)   0DB1 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
326)   0DB5 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
326)   0DB9 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
327)   0DBB 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
327)   0DBF 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
327)   0DC3 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
328)   0DC5 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
328)   0DC9 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
328)   0DCD 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
329)   0DCF 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
329)   0DD3 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
329)   0DD7 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
330)   0DD9 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
330)   0DDD 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
330)   0DE1 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
331)   0DE3 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
331)   0DE7 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
331)   0DEB 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
332)   0DED 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
332)   0DF1 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
332)   0DF5 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
333)   0DF7 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
333)   0DFB 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
333)   0DFF 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
334)   0E01 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
334)   0E05 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
334)   0E09 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
335)   0E0B 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
335)   0E0F 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
335)   0E13 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 46)   0E15 3E 03       		STRG_INIT: LD A, 3       ;38400 BPS	;38400 BPS
 47)   0E17 CD A1 0F    		 CALL STOR_INI	;
 48)   0E1A C9          		 RET	;
 51)   0E1B 21 E1 FE    		NEWCMD: LD HL, STRGCMD	;
 52)   0E1E 77          		 LD (HL), A	;
 53)   0E1F 23          		 INC HL	;
 54)   0E20 E5          		 PUSH HL	;
 55)   0E21 AF          		 XOR A	;
 56)   0E22 06 03       		 LD B, 3	;
 57)   0E24 77          		CCAGN: LD (HL), A	;
 58)   0E25 23          		 INC HL	;
 59)   0E26 10 FC       		 DJNZ CCAGN	;
 60)   0E28 E1          		 POP HL         ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 61)   0E29 C9          		 RET	;
 64)   0E2A CD 02 10    		SENDCMD: CALL FLUSHREC	;
 65)   0E2D 21 E1 FE    		 LD HL, STRGCMD	;
 66)   0E30 06 04       		 LD B, 4	;
 67)   0E32 7E          		NXTBT: LD A, (HL)	;
 68)   0E33 CD D1 0F    		 CALL STOR_TX	;
 69)   0E36 23          		 INC HL	;
 70)   0E37 10 F9       		 DJNZ NXTBT	;
 71)   0E39 C9          		 RET	;
 73)   0E3A 3E 01       		STRG_OPENCRD: LD A, OPENCARD	;
 74)   0E3C CD 1B 0E    		 CALL NEWCMD	;
 75)   0E3F CD 2A 0E    		 CALL SENDCMD	;
 76)   0E42 CD 45 2E    		 CALL DEL2	;
 77)   0E45 CD E4 0F    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
 78)   0E48 FE C9       		 CP FCMDOKTST	;
 79)   0E4A 3F          		 CCF	;
 80)   0E4B C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
 85)   0E4C F5          		STRG_GETEOF: PUSH AF	;
 86)   0E4D 3E 0D       		 LD A, ENDOFFILE	;
 87)   0E4F CD 1B 0E    		 CALL NEWCMD	;
 88)   0E52 F1          		 POP AF	;
 89)   0E53 77          		 LD (HL), A       ;FID	;FID
 90)   0E54 CD 2A 0E    		 CALL SENDCMD	;
 92)   0E57 CD E4 0F    		 CALL STOR_RX       ;GET EOF	;GET EOF
 93)   0E5A FE C9       		 CP FCMDOKTST	;
 94)   0E5C 3F          		 CCF	;
 95)   0E5D C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
100)   0E5E F5          		STRG_GETSIZE: PUSH AF	;
101)   0E5F 3E 0C       		 LD A, FILESIZE	;
102)   0E61 18 03       		 JR GT2BYTES	;
107)   0E63 F5          		STRG_GETPOS: PUSH AF	;
108)   0E64 3E 09       		 LD A, POSITIONG	;
109)   0E66 CD 1B 0E    		GT2BYTES: CALL NEWCMD	;
110)   0E69 F1          		 POP AF	;
111)   0E6A 77          		 LD (HL), A       ;FID	;FID
112)   0E6B CD 2A 0E    		 CALL SENDCMD	;
114)   0E6E CD E4 0F    		 CALL STOR_RX       ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
115)   0E71 67          		 LD H, A	;
116)   0E72 CD E4 0F    		 CALL STOR_RX       ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
117)   0E75 6F          		 LD L, A	;
118)   0E76 CD E4 0F    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
119)   0E79 FE C9       		 CP FCMDOKTST	;
120)   0E7B 3F          		 CCF	;
121)   0E7C C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
127)   0E7D EB          		STRG_SETPOS: EX DE, HL	;
128)   0E7E F5          		 PUSH AF	;
129)   0E7F 3E 08       		 LD A, POSITIONS	;
130)   0E81 CD 1B 0E    		 CALL NEWCMD	;
131)   0E84 F1          		 POP AF	;
132)   0E85 77          		 LD (HL), A       ;FID	;FID
133)   0E86 23          		 INC HL	;
134)   0E87 72          		 LD (HL), D       ;NEW POS ON DE	;NEW POS ON DE
135)   0E88 23          		 INC HL	;
136)   0E89 73          		 LD (HL), E	;
137)   0E8A CD 2A 0E    		 CALL SENDCMD	;
138)   0E8D CD 45 2E    		 CALL DEL2	;
139)   0E90 CD E4 0F    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
140)   0E93 FE C9       		 CP FCMDOKTST	;
141)   0E95 3F          		 CCF	;
142)   0E96 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
147)   0E97 3E 0A       		STRG_DIRLIST: LD A, LISTDIR	;
148)   0E99 CD 1B 0E    		 CALL NEWCMD	;
149)   0E9C CD 2A 0E    		 CALL SENDCMD	;
150)   0E9F CD 45 2E    		 CALL DEL2	;
152)   0EA2 11 B9 FE    		 LD DE, STRGBUFF	;
153)   0EA5 CD E4 0F    		NXTCHR: CALL STOR_RX	;
154)   0EA8 FE FF       		 CP 255	;
155)   0EAA 28 05       		 JR Z, DIROUT	;
157)   0EAC CD 78 03    		 CALL OS_PRINTCHAR	;
158)   0EAF 18 F4       		 JR NXTCHR	;
159)   0EB1 CD 45 2E    		DIROUT: CALL DEL2	;
160)   0EB4 CD E4 0F    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
161)   0EB7 FE C9       		 CP FCMDOKTST	;
162)   0EB9 3F          		 CCF	;
163)   0EBA C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
167)   0EBB CD DA 0F    		SENDFNAME: CALL STOR_TXT      ;SEND FILENAME	;SEND FILENAME
168)   0EBE AF          		 XOR A	;
169)   0EBF CD D1 0F    		 CALL STOR_TX	;
170)   0EC2 C9          		 RET	;
173)   0EC3 3E 0B       		STRG_DIRCHG: LD A, CHANGEDIR	;
174)   0EC5 CD 1B 0E    		 CALL NEWCMD	;
175)   0EC8 CD 2A 0E    		 CALL SENDCMD	;
176)   0ECB 21 B9 FE    		 LD HL, STRGBUFF	;
177)   0ECE CD BB 0E    		 CALL SENDFNAME	;
178)   0ED1 CD 45 2E    		 CALL DEL2	;
179)   0ED4 CD E4 0F    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
180)   0ED7 FE C9       		 CP FCMDOKTST	;
181)   0ED9 3F          		 CCF	;
182)   0EDA C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
186)   0EDB F5          		STRG_OPNFILE: PUSH AF	;
187)   0EDC 3E 02       		 LD A, OPENFILE	;
188)   0EDE CD 1B 0E    		 CALL NEWCMD	;
189)   0EE1 F1          		 POP AF	;
190)   0EE2 77          		 LD (HL), A       ;FID	;FID
191)   0EE3 CD 2A 0E    		 CALL SENDCMD	;
192)   0EE6 21 B9 FE    		 LD HL, STRGBUFF	;
193)   0EE9 CD BB 0E    		 CALL SENDFNAME	;
194)   0EEC CD 45 2E    		 CALL DEL2	;
195)   0EEF CD E4 0F    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
197)   0EF2 32 E5 FE    		 LD (FID), A	;
198)   0EF5 FE C9       		 CP FCMDOKTST	;
199)   0EF7 3F          		 CCF	;
200)   0EF8 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
203)   0EF9 F5          		STRG_CLSFILE: PUSH AF	;
204)   0EFA 3E 03       		 LD A, CLOSEFILE	;
205)   0EFC CD 1B 0E    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
206)   0EFF F1          		 POP AF	;
207)   0F00 77          		 LD (HL), A       ;FID	;FID
208)   0F01 CD 2A 0E    		 CALL SENDCMD	;
209)   0F04 CD E4 0F    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
210)   0F07 FE C9       		 CP FCMDOKTST	;
211)   0F09 3F          		 CCF	;
212)   0F0A C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
218)   0F0B F5          		STRG_BLKWRITE: PUSH AF	;
219)   0F0C 3E 07       		 LD A, WRITEBLOCK	;
220)   0F0E CD 1B 0E    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
221)   0F11 F1          		 POP AF	;
222)   0F12 77          		 LD (HL), A       ;FID	;FID
223)   0F13 23          		 INC HL	;
225)   0F14 78          		 LD A, B        ;BYTES HI	;BYTES HI
226)   0F15 77          		 LD (HL), A	;
227)   0F16 23          		 INC HL	;
228)   0F17 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
229)   0F18 77          		 LD (HL), A	;
230)   0F19 CD 2A 0E    		 CALL SENDCMD        ;SEND BLOCKWRITE COMMAND BC BYTES	;SEND BLOCKWRITE COMMAND BC BYTES
231)   0F1C EB          		 EX DE, HL	;
232)   0F1D 7E          		BWNXCH: LD A, (HL)	;
233)   0F1E CD D1 0F    		 CALL STOR_TX	;
234)   0F21 23          		 INC HL	;
235)   0F22 0B          		 DEC BC	;
236)   0F23 78          		 LD A, B	;
237)   0F24 B1          		 OR C	;
238)   0F25 20 F6       		 JR NZ, BWNXCH	;
239)   0F27 CD E4 0F    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
240)   0F2A FE C9       		 CP FCMDOKTST	;
241)   0F2C 3F          		 CCF	;
242)   0F2D C9          		 RET	;
250)   0F2E F5          		STRG_BLKREAD: PUSH AF	;
251)   0F2F 3E 06       		 LD A, READBLOCK	;
252)   0F31 CD 1B 0E    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
253)   0F34 F1          		 POP AF	;
254)   0F35 77          		 LD (HL), A       ;FID	;FID
255)   0F36 23          		 INC HL	;
256)   0F37 78          		 LD A, B        ;BYTES HI	;BYTES HI
257)   0F38 77          		 LD (HL), A	;
258)   0F39 23          		 INC HL	;
259)   0F3A 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
260)   0F3B 77          		 LD (HL), A	;
261)   0F3C CD 2A 0E    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
262)   0F3F CD 45 2E    		 CALL DEL2 	;
263)   0F42 CD E4 0F    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
264)   0F45 47          		 LD B, A	;
265)   0F46 CD E4 0F    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
266)   0F49 4F          		 LD C, A	;
267)   0F4A 78          		 LD A, B	;
268)   0F4B B1          		 OR C	;
269)   0F4C 28 13       		 JR Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
271)   0F4E C5          		 PUSH BC        ;SAVE BYTES TO RECEIVE	;SAVE BYTES TO RECEIVE
272)   0F4F CD E4 0F    		OFNXCH: CALL STOR_RX	;
273)   0F52 12          		 LD (DE), A	;
274)   0F53 13          		 INC DE	;
275)   0F54 0B          		 DEC BC	;
276)   0F55 78          		 LD A, B	;
277)   0F56 B1          		 OR C	;
278)   0F57 20 F6       		 JR NZ, OFNXCH	;
279)   0F59 CD E4 0F    		OFEXIT: CALL STOR_RX        ;GET RESULT	;GET RESULT
280)   0F5C C1          		 POP BC         ;TOTAL BYTES RECEIVED	;TOTAL BYTES RECEIVED
281)   0F5D FE C9       		 CP FCMDOKTST	;
282)   0F5F 3F          		 CCF	;
283)   0F60 C9          		 RET	;
285)   0F61 18 F6       		 JR OFEXIT	;
289)   0F63 F5          		STRG_TPFILE: PUSH AF	;
290)   0F64 3E 06       		 LD A, READBLOCK	;
291)   0F66 CD 1B 0E    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
292)   0F69 F1          		 POP AF	;
293)   0F6A 77          		 LD (HL), A       ;FID	;FID
294)   0F6B 23          		 INC HL	;
295)   0F6C 78          		 LD A, B        ;BYTES HI	;BYTES HI
296)   0F6D 77          		 LD (HL), A	;
297)   0F6E 23          		 INC HL	;
298)   0F6F 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
299)   0F70 77          		 LD (HL), A	;
300)   0F71 CD 2A 0E    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
301)   0F74 CD 45 2E    		 CALL DEL2	;
302)   0F77 CD E4 0F    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
303)   0F7A 47          		 LD B, A	;
304)   0F7B CD E4 0F    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
305)   0F7E 4F          		 LD C, A	;
306)   0F7F 78          		 LD A, B	;
307)   0F80 B1          		 OR C	;
308)   0F81 CA 61 0F    		 JP Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
310)   0F84 3E 0D       		 LD A, 13	;
311)   0F86 C5          		 PUSH BC	;
312)   0F87 CD 78 03    		 CALL OS_PRINTCHAR	;
313)   0F8A C1          		 POP BC	;
314)   0F8B CD E4 0F    		TFOFNXCH: CALL STOR_RX       ;GET THE CHAR	;GET THE CHAR
315)   0F8E C5          		 PUSH BC	;
316)   0F8F CD 78 03    		 CALL OS_PRINTCHAR       ;PRINT TO SCREEN	;PRINT TO SCREEN
317)   0F92 C1          		 POP BC	;
318)   0F93 0B          		 DEC BC	;
319)   0F94 78          		 LD A, B	;
320)   0F95 B1          		 OR C	;
321)   0F96 20 F3       		 JR NZ, TFOFNXCH	;
322)   0F98 CD E4 0F    		TFOFEXIT: CALL STOR_RX       ;GET RESULT	;GET RESULT
323)   0F9B FE C9       		 CP FCMDOKTST	;
324)   0F9D 3F          		 CCF	;
325)   0F9E C9          		 RET         ;C SET IF ERROR	;C SET IF ERROR
328)   0F9F 18 F7       		 JR TFOFEXIT	;
350)   0FA1 	            		 RBR EQU DEVSTOR+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
351)   0FA1 	            		 THR EQU DEVSTOR+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
352)   0FA1 	            		 IER EQU DEVSTOR+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
357)   0FA1 	            		 IIR EQU DEVSTOR+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
362)   0FA1 	            		 FCR EQU DEVSTOR+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
370)   0FA1 	            		 LCR EQU DEVSTOR+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
378)   0FA1 	            		 MCR EQU DEVSTOR+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
379)   0FA1 	            		 LSR EQU DEVSTOR+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
388)   0FA1 	            		 MSR EQU DEVSTOR+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
389)   0FA1 	            		 SCR EQU DEVSTOR+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
390)   0FA1 	            		 DLL EQU DEVSTOR+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
391)   0FA1 	            		 DLM EQU DEVSTOR+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
395)   0FA1 F5          		STOR_INI: PUSH AF	;
396)   0FA2 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
397)   0FA4 D3 33       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
405)   0FA6 F1          		 POP AF	;
406)   0FA7 D3 30       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
407)   0FA9 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
408)   0FAB D3 31       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
409)   0FAD 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
410)   0FAF D3 33       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
412)   0FB1 3E 00       		 LD A, 0	;
413)   0FB3 D3 32       		 OUT (FCR), A        ;//was commented	;//was commented
414)   0FB5 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
415)   0FB7 D3 31       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
416)   0FB9 AF          		 XOR A         ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
417)   0FBA D3 34       		 OUT (MCR), A	;
418)   0FBC C9          		 RET	;
424)   0FBD F5          		STORTXRD: PUSH AF	;
425)   0FBE DB 35       		STORTXLP: IN A, (LSR)       ; fetch the control register	; fetch the control register
426)   0FC0 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
427)   0FC2 28 FA       		 JR Z, STORTXLP	;
428)   0FC4 F1          		 POP AF	;
429)   0FC5 C9          		 RET	;
432)   0FC6 F5          		WAITCTSLOW: PUSH AF	;
433)   0FC7 DB 36       		TSTAGN: IN A, (MSR)	;
434)   0FC9 CB 67       		 BIT 4, A        ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
435)   0FCB 20 02       		 JR NZ, WCLEX	;
436)   0FCD 18 F8       		 JR TSTAGN	;
437)   0FCF F1          		WCLEX: POP AF	;
438)   0FD0 C9          		 RET	;
444)   0FD1 CD C6 0F    		 CALL WAITCTSLOW	;
449)   0FD4 CD BD 0F    		 CALL STORTXRD	;
454)   0FD7 D3 30       		 OUT (THR), A	;
455)   0FD9 C9          		 RET	;
458)   0FDA 7E          		STOR_TXT: LD A, (HL)	;
459)   0FDB 23          		 INC HL	;
460)   0FDC FE 00       		 CP 0	;
461)   0FDE C8          		 RET Z	;
462)   0FDF CD D1 0F    		 CALL STOR_TX	;
463)   0FE2 18 F6       		 JR STOR_TXT	;
470)   0FE4 F3          		STOR_RX: DI	;
471)   0FE5 3E 02       		 LD A, 2        ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
472)   0FE7 D3 34       		 OUT (MCR), A	;
473)   0FE9 CD 0D 10    		 CALL STORRXRD	;
474)   0FEC AF          		STOR_GTCH: XOR A        ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
475)   0FED D3 34       		 OUT (MCR), A	;
476)   0FEF DB 30       		 IN A, (RBR)	;
477)   0FF1 FB          		 EI	;
478)   0FF2 C9          		 RET	;
480)   0FF3 3E 02       		STOR_RXNW: LD A, 2       ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
481)   0FF5 D3 34       		 OUT (MCR), A	;
482)   0FF7 DB 35       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
483)   0FF9 CB 47       		 BIT 0, A	;
484)   0FFB 28 03       		 JR Z, STOR_NOCHAR	;
485)   0FFD F3          		 DI	;
486)   0FFE 18 EC       		 JR STOR_GTCH	;
487)   1000 AF          		STOR_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
488)   1001 C9          		 RET	;
490)   1002 06 0A       		FLUSHREC: LD B, 10	;
491)   1004 CD F3 0F    		FRAGN: CALL STOR_RXNW	;
492)   1007 10 FB       		 DJNZ FRAGN	;
493)   1009 AF          		 XOR A	;
494)   100A D3 34       		 OUT (MCR), A	;
495)   100C C9          		 RET	;
501)   100D F3          		STORRXRD: DI	;
502)   100E F5          		 PUSH AF	;
503)   100F DB 35       		STORRXLP: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
504)   1011 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
505)   1013 28 FA       		 JR Z, STORRXLP	;
506)   1015 F1          		 POP AF	;
507)   1016 FB          		 EI	;
508)   1017 C9          		 RET	;
512)   1018 DB 35       		STOR_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
513)   101A CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
514)   101C C9          		 RET	;
  8)   101D 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  9)   101D 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
 10)   101D 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 11)   101D 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 12)   101D 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 57)   101D C5          		I2C_RDSTAT_WT: PUSH BC	;
 58)   101E 01 00 20    		 LD BC, $2000	;
 59)   1021 DB 4B       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 60)   1023 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 61)   1025 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 62)   1027 0B          		 DEC BC	;
 63)   1028 78          		 LD A, B	;
 64)   1029 B1          		 OR C	;
 65)   102A 20 F5       		 JR NZ, I2CRWT_AGN	;
 66)   102C C1          		I2CRWT_OK: POP BC	;
 67)   102D DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 68)   102F C9          		 RET	;
 70)   1030 DB 4B       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 71)   1032 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 72)   1034 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 73)   1036 C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 74)   1037 DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 75)   1039 C9          		 RET	;
 78)   103A 3E 01       		I2C_INIT: LD A, I2CADR	;
 79)   103C D3 48       		 OUT (DI2C_INDPTR), A	;
 80)   103E 3E E0       		 LD A, $E0	;
 81)   1040 D3 4A       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 83)   1042 3E 40       		 LD A, $40        ;INIT	;INIT
 84)   1044 D3 4B       		 OUT (DI2C_CON), A      ;	;
 85)   1046 06 FA       		 LD B, 250	;
 86)   1048 CD 32 2E    		 CALL DELAYMICRO	;
 87)   104B 06 FA       		 LD B, 250	;
 88)   104D CD 32 2E    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 93)   1050 3E 06       		 LD A, I2CMODE	;
 94)   1052 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 95)   1054 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 96)   1056 D3 4A       		 OUT (DI2C_INDIR), A	;
 97)   1058 3E 02       		 LD A, I2CSCLL	;
 98)   105A D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 99)   105C 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
100)   105E D3 4A       		 OUT (DI2C_INDIR), A	;
101)   1060 3E 03       		 LD A, I2CSCLH	;
102)   1062 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
103)   1064 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
104)   1066 D3 4A       		 OUT (DI2C_INDIR), A	;
106)   1068 C9          		 RET	;
113)   1069 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
114)   106B D3 4B       		 OUT (DI2C_CON), A	;
115)   106D CD 1D 10    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
116)   1070 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
117)   1071 FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
118)   1073 28 21       		 JR Z, WRB_S1	;
119)   1075 FE 10       		 CP MASTER_RESTART_TXed	;
120)   1077 28 1D       		 JR Z, WRB_S1	;
121)   1079 FE 28       		 CP MASTER_DATA_W_ACK	;
122)   107B 28 26       		 JR Z, WRB_S2	;
123)   107D FE 18       		 CP MASTER_SLA_W_ACK	;
124)   107F 28 23       		 JR Z, WRB_S3	;
125)   1081 FE 20       		 CP MASTER_SLA_W_NAK	;
126)   1083 28 2D       		 JR Z, WRB_EXIT	;
127)   1085 FE 30       		 CP MASTER_DATA_W_NAK	;
128)   1087 28 29       		 JR Z, WRB_EXIT	;
129)   1089 FE 38       		 CP MASTER_ARB_LOST	;
130)   108B C8          		 RET Z	;
131)   108C FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
132)   108E C8          		 RET Z	;
133)   108F FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
134)   1091 C8          		 RET Z	;
135)   1092 FE D8       		 CP SLAVE_GENERALCALL_AL	;
136)   1094 C8          		 RET Z	;
137)   1095 C9          		 RET	;
139)   1096 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
140)   1097 CB 27       		 SLA A	;
141)   1099 E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
142)   109B D3 49       		 OUT (DI2C_DAT), A	;
143)   109D 3E 40       		 LD A, $40	;
144)   109F D3 4B       		 OUT (DI2C_CON), A	;
145)   10A1 18 CA       		 JR WRB_LP1	;
146)   10A3 0B          		WRB_S2: DEC BC	;
147)   10A4 78          		WRB_S3: LD A, B	;
148)   10A5 B1          		 OR C	;
149)   10A6 28 0A       		 JR Z, WRB_EXIT	;
150)   10A8 7E          		 LD A, (HL)	;
151)   10A9 23          		 INC HL	;
152)   10AA D3 49       		 OUT (DI2C_DAT), A	;
153)   10AC 3E 40       		 LD A, $40	;
154)   10AE D3 4B       		 OUT (DI2C_CON), A	;
155)   10B0 18 BB       		 JR WRB_LP1	;
157)   10B2 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
158)   10B4 D3 4B       		 OUT (DI2C_CON), A	;
159)   10B6 78          		 LD A, B	;
160)   10B7 B1          		 OR C	;
161)   10B8 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
167)   10B9 78          		I2C_RD_BYTE: LD A, B	;
168)   10BA B1          		 OR C	;
169)   10BB C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
170)   10BC 3E 60       		 LD A, $60	;
171)   10BE D3 4B       		 OUT (DI2C_CON), A	;
172)   10C0 CD 1D 10    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
173)   10C3 1E 00       		 LD E, 0	;
174)   10C5 FE 08       		 CP MASTER_START_TXed	;
175)   10C7 28 1F       		 JR Z, RDB_S1	;
177)   10C9 28 1D       		 JR Z, RDB_S1	;
178)   10CB FE 58       		 CP MASTER_DATA_R_NAK	;
179)   10CD 28 26       		 JR Z, RDB_S2	;
180)   10CF FE 50       		 CP MASTER_DATA_R_ACK	;
181)   10D1 28 24       		 JR Z, RDB_S3	;
182)   10D3 FE 40       		 CP MASTER_SLA_R_ACK	;
183)   10D5 28 25       		 JR Z, RDB_S4	;
184)   10D7 FE 48       		 CP MASTER_SLA_R_NAK	;
185)   10D9 28 38       		 JR Z, RDB_EXIT	;
186)   10DB FE 38       		 CP MASTER_ARB_LOST	;
187)   10DD C8          		 RET Z	;
188)   10DE FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
189)   10E0 C8          		 RET Z	;
190)   10E1 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
191)   10E3 C8          		 RET Z	;
192)   10E4 FE D8       		 CP SLAVE_GENERALCALL_AL	;
193)   10E6 C8          		 RET Z	;
194)   10E7 C9          		 RET	;
197)   10E8 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
198)   10E9 CB 27       		 SLA A	;
199)   10EB F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
200)   10ED D3 49       		 OUT (DI2C_DAT), A	;
201)   10EF 3E 40       		 LD A, $40	;
202)   10F1 D3 4B       		 OUT (DI2C_CON), A	;
203)   10F3 18 CB       		 JR RDB_LP1	;
204)   10F5 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
205)   10F7 DB 49       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
206)   10F9 77          		 LD (HL), A	;
207)   10FA 23          		 INC HL	;
208)   10FB 0B          		 DEC BC	;
209)   10FC 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
210)   10FD B1          		 OR C	;
211)   10FE 28 13       		 JR Z, RDB_EXIT	;
212)   1100 7B          		 LD A, E	;
213)   1101 FE 01       		 CP 1	;
214)   1103 28 0E       		 JR Z, RDB_EXIT	;
215)   1105 78          		 LD A, B	;
216)   1106 81          		 ADD C	;
217)   1107 FE 01       		 CP 1	;
218)   1109 3E 40       		 LD A, $40	;
219)   110B 28 02       		 JR Z, RDB_NXT1	;
220)   110D 3E C0       		 LD A, $C0	;
221)   110F D3 4B       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
222)   1111 18 AD       		 JR RDB_LP1	;
224)   1113 3E 50       		RDB_EXIT: LD A, $50	;
225)   1115 D3 4B       		 OUT (DI2C_CON), A	;
226)   1117 78          		 LD A, B	;
227)   1118 B1          		 OR C	;
228)   1119 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
 26)   111A 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 26)   111E 61 79       		 SUN DEFM  "Sunday"	;
 27)   1120 00          		 DB 0	;
 28)   1121 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 28)   1125 61 79       		 MON DEFM  "Monday"	;
 29)   1127 00          		 DB 0	;
 30)   1128 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 30)   112C 64 61 79    		 TUE DEFM  "Tuesday"	;
 31)   112F 00          		 DB 0	;
 32)   1130 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 32)   1134 65 73 64 61 		 WED DEFM  "Wednesday"	;
 32)   1138 79          		 WED DEFM  "Wednesday"	;
 33)   1139 00          		 DB 0	;
 34)   113A 54 68 75 72 		 THU DEFM  "Thursday"	;
 34)   113E 73 64 61 79 		 THU DEFM  "Thursday"	;
 35)   1142 00          		 DB 0	;
 36)   1143 46 72 69 64 		 FRI DEFM  "Friday"	;
 36)   1147 61 79       		 FRI DEFM  "Friday"	;
 37)   1149 00          		 DB 0	;
 38)   114A 53 61 74 75 		 SAT DEFM  "Saturday"	;
 38)   114E 72 64 61 79 		 SAT DEFM  "Saturday"	;
 39)   1152 00          		 DB 0	;
 41)   1153 1A 11       		 DAYS DEFW SUN	;
 42)   1155 21 11       		 DEFW MON	;
 43)   1157 28 11       		 DEFW TUE	;
 44)   1159 30 11       		 DEFW WED	;
 45)   115B 3A 11       		 DEFW THU	;
 46)   115D 43 11       		 DEFW FRI	;
 47)   115F 4A 11       		 DEFW SAT	;
 49)   1161 45 52 52 4F 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   1165 52 20 4F 4E 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   1169 20 52 45 43 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   116D 45 49 56 49 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   1171 4E 47       		 MESERR DEFM "ERROR ON RECEIVING"	;
 50)   1173 0A 0D 00    		 DEFB 10,13,0	;
 52)   1176 45 52 52 4F 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   117A 52 20 4F 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   117E 20 53 45 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   1182 44 49 4E 47 		 MESERR0 DEFM "ERROR ON SENDING"	;
 53)   1186 0A 0D 00    		 DEFB 10,13,0	;
 55)   1189 7B          		SHERR0: LD A, E	;
 56)   118A C5          		 PUSH BC	;
 57)   118B CD 6E 04    		 CALL SOUTAS	;
 58)   118E C1          		 POP BC	;
 59)   118F 79          		 LD A, C	;
 60)   1190 CD 6E 04    		 CALL SOUTAS	;
 62)   1193 21 76 11    		 LD HL, MESERR0	;
 63)   1196 CD 92 0A    		 CALL RS_TXT	;
 64)   1199 C9          		 RET	;
 67)   119A 79          		SHERR: LD A, C	;
 68)   119B CD 6E 04    		 CALL SOUTAS	;
 69)   119E 21 61 11    		 LD HL, MESERR	;
 70)   11A1 CD 92 0A    		 CALL RS_TXT	;
 71)   11A4 37          		 SCF	;
 72)   11A5 C9          		 RET	;
 75)   11A6 21 89 FE    		@DS1307_GETNOW: LD HL, BUFFER	;
 76)   11A9 AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 77)   11AA 77          		 LD (HL), A	;
 78)   11AB 16 68       		 LD D, DS1307_ADDRESS	;
 79)   11AD 01 01 00    		 LD BC, 1	;
 80)   11B0 CD 69 10    		 CALL I2C_WRITE	;
 81)   11B3 C2 89 11    		 JP NZ, SHERR0	;
 83)   11B6 21 89 FE    		 LD HL, BUFFER	;
 84)   11B9 16 68       		 LD D, DS1307_ADDRESS	;
 85)   11BB 01 07 00    		 LD BC, 7	;
 86)   11BE CD B9 10    		 CALL I2C_READ	;
 87)   11C1 C2 9A 11    		 JP NZ, SHERR	;
 88)   11C4 AF          		 XOR A	;
 89)   11C5 C9          		 RET	;
 95)   11C6 11 89 FE    		 LD DE, BUFFER	;
 96)   11C9 AF          		 XOR A	;
 97)   11CA 12          		 LD (DE), A	;
 98)   11CB 13          		 INC DE	;
 99)   11CC 3E 0A       		 LD A, 10       ; 10 SECS	; 10 SECS
100)   11CE CD 79 2E    		 CALL BN2BCD	;
101)   11D1 7D          		 LD A, L	;
102)   11D2 12          		 LD (DE), A	;
103)   11D3 13          		 INC DE	;
104)   11D4 3E 22       		 LD A, 34       ; 28 MINS	; 28 MINS
105)   11D6 CD 79 2E    		 CALL BN2BCD	;
106)   11D9 7D          		 LD A, L	;
107)   11DA 12          		 LD (DE), A	;
108)   11DB 13          		 INC DE	;
109)   11DC 3E 12       		 LD A, 18       ; 19 HOURS	; 19 HOURS
110)   11DE CD 79 2E    		 CALL BN2BCD	;
111)   11E1 7D          		 LD A, L	;
112)   11E2 12          		 LD (DE), A	;
113)   11E3 13          		 INC DE	;
114)   11E4 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
115)   11E6 12          		 LD (DE), A	;
116)   11E7 13          		 INC DE	;
117)   11E8 3E 12       		 LD A, 18       ; 8 DAY	; 8 DAY
118)   11EA CD 79 2E    		 CALL BN2BCD	;
119)   11ED 7D          		 LD A, L	;
120)   11EE 12          		 LD (DE), A	;
121)   11EF 13          		 INC DE	;
122)   11F0 3E 02       		 LD A, 02       ; 10 MONTH	; 10 MONTH
123)   11F2 CD 79 2E    		 CALL BN2BCD	;
124)   11F5 7D          		 LD A, L	;
125)   11F6 12          		 LD (DE), A	;
126)   11F7 13          		 INC DE	;
127)   11F8 3E 15       		 LD A, 21       ; 21 YEAR (2020)	; 21 YEAR (2020)
128)   11FA CD 79 2E    		 CALL BN2BCD	;
129)   11FD 7D          		 LD A, L	;
130)   11FE 12          		 LD (DE), A	;
131)   11FF 13          		 INC DE	;
132)   1200 AF          		 XOR A	;
133)   1201 12          		 LD (DE), A	;
146)   1202 21 89 FE    		@DS1307_ADJUST: LD HL, BUFFER	;
147)   1205 16 68       		 LD D, DS1307_ADDRESS	;
148)   1207 01 09 00    		 LD BC, 9	;
149)   120A CD 69 10    		 CALL I2C_WRITE	;
150)   120D C2 89 11    		 JP NZ, SHERR0	;
151)   1210 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
152)   1213 CD F6 2E    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
153)   1216 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
154)   1219 CD F6 2E    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
155)   121C C9          		 RET	;
159)   121D 21 89 FE    		@DS1307_SETSQ: LD HL, BUFFER	;
160)   1220 E5          		 PUSH HL	;
161)   1221 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
162)   1223 77          		 LD (HL), A	;
163)   1224 23          		 INC HL	;
164)   1225 7A          		 LD A, D	;
165)   1226 77          		 LD (HL), A	;
166)   1227 E1          		 POP HL	;
167)   1228 16 68       		 LD D, DS1307_ADDRESS	;
168)   122A 01 02 00    		 LD BC, 2	;
169)   122D CD 69 10    		 CALL I2C_WRITE	;
170)   1230 C2 89 11    		 JP NZ, SHERR0	;
171)   1233 C9          		 RET	;
105)   1234 00          		 LCD_DSPMODE  DB 0	;
106)   1235 00          		 LCD_DSPCTRL  DB 0	;
111)   1236 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
113)   1238 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
114)   1239 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
115)   123B CB E2       		 SET D4, D	;
116)   123D 0F          		LWNXT1: RRCA	;
117)   123E 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
118)   1240 CB EA       		 SET D5, D	;
119)   1242 0F          		LWNXT2: RRCA	;
120)   1243 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
121)   1245 CB F2       		 SET D6, D	;
122)   1247 0F          		LWNXT3: RRCA	;
123)   1248 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
124)   124A CB FA       		 SET D7, D	;
125)   124C 7B          		LWNXT4: LD A, E	;
126)   124D 0F          		 RRCA	;
127)   124E 30 02       		 JR NC, LWNXT5	;
128)   1250 CB C2       		 SET RS, D	;
131)   1252 CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
132)   1254 7A          		 LD A, D	;
133)   1255 CD 5F 12    		 CALL LCD16_I2CSEND	;
134)   1258 CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
135)   125A 7A          		 LD A, D	;
136)   125B CD 5F 12    		 CALL LCD16_I2CSEND	;
137)   125E C9          		 RET	;
141)   125F D5          		LCD16_I2CSEND: PUSH DE	;
142)   1260 E5          		 PUSH HL	;
143)   1261 21 89 FE    		 LD HL, BUFFER	;
144)   1264 77          		 LD (HL), A	;
145)   1265 16 27       		 LD D, LCDADDR	;
146)   1267 01 01 00    		 LD BC, 1	;
147)   126A CD 69 10    		 CALL I2C_WRITE	;
148)   126D E1          		 POP HL	;
149)   126E D1          		 POP DE	;
150)   126F C9          		 RET	;
154)   1270 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
155)   1271 7B          		 LD A, E	;
156)   1272 0F          		 RRCA	;
157)   1273 38 07       		 JR C, ISCMDDATA	;
158)   1275 0F          		 RRCA	;
159)   1276 30 04       		 JR NC, ISCMDDATA	;
161)   1278 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
162)   127A 18 0E       		 JR LCSD_4BIT	;
163)   127C 7A          		ISCMDDATA: LD A, D	;
164)   127D CB 3F       		 SRL A	;
165)   127F CB 3F       		 SRL A	;
166)   1281 CB 3F       		 SRL A	;
167)   1283 CB 3F       		 SRL A	;
168)   1285 D5          		 PUSH DE	;
169)   1286 CD 36 12    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
170)   1289 D1          		 POP DE	;
171)   128A 7A          		LCSD_4BIT: LD A, D	;
172)   128B E6 0F       		 AND $0F	;
173)   128D CD 36 12    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
174)   1290 C9          		 RET	;
179)   1291 1E 00       		LCD16_COMMD: LD E, COMMAND	;
180)   1293 C3 70 12    		 JP LCD16_SEND	;
183)   1296 1E 01       		LCD16_DATA: LD E, LCD_DATA	;
184)   1298 C3 70 12    		 JP LCD16_SEND	;
188)   129B 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
189)   129D 1E 02       		 LD E, FOUR_BITS	;
190)   129F CD 70 12    		 CALL LCD16_SEND	;
191)   12A2 01 00 30    		 LD BC, $3000	;
192)   12A5 CD F6 2E    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
193)   12A8 3E 03       		 LD A, 3	;
194)   12AA 1E 02       		 LD E, FOUR_BITS	;
195)   12AC CD 70 12    		 CALL LCD16_SEND	;
196)   12AF 01 00 30    		 LD BC, $3000	;
197)   12B2 CD F6 2E    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
198)   12B5 3E 03       		 LD A, 3	;
199)   12B7 1E 02       		 LD E, FOUR_BITS	;
200)   12B9 CD 70 12    		 CALL LCD16_SEND	;
201)   12BC 01 00 30    		 LD BC, $3000	;
202)   12BF CD F6 2E    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
203)   12C2 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
204)   12C4 1E 02       		 LD E, FOUR_BITS	;
205)   12C6 CD 70 12    		 CALL LCD16_SEND	;
206)   12C9 01 00 30    		 LD BC, $3000	;
207)   12CC CD F6 2E    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
209)   12CF 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
210)   12D1 CD 91 12    		 CALL LCD16_COMMD	;
211)   12D4 3E 04       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
212)   12D6 32 35 12    		 LD (LCD_DSPCTRL), A	;
213)   12D9 CD F8 12    		 CALL LCD16_DISP	;
214)   12DC CD 13 13    		 CALL LCD16_CLR	;
215)   12DF 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
216)   12E1 32 34 12    		 LD (LCD_DSPMODE), A	;
217)   12E4 F6 04       		 OR LCD_ENTRYMODESET	;
218)   12E6 CD 91 12    		 CALL LCD16_COMMD	;
219)   12E9 C9          		 RET	;
221)   12EA 3A 35 12    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
222)   12ED CB A7       		 RES LCD_DISPLAYON, A	;
223)   12EF 32 35 12    		 LD (LCD_DSPCTRL), A	;
224)   12F2 F6 08       		 OR LCD_DISPLAYCONTROL	;
225)   12F4 CD 91 12    		 CALL LCD16_COMMD	;
226)   12F7 C9          		 RET	;
227)   12F8 3A 35 12    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
228)   12FB F6 04       		 OR LCD_DISPLAYON	;
229)   12FD 32 35 12    		 LD (LCD_DSPCTRL), A	;
230)   1300 F6 08       		 OR LCD_DISPLAYCONTROL	;
231)   1302 CD 91 12    		 CALL LCD16_COMMD	;
232)   1305 C9          		 RET	;
234)   1306 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
235)   1309 C5          		LCLR_AGN1: PUSH BC	;
236)   130A CD 32 2E    		 CALL DELAYMICRO	;
237)   130D C1          		 POP BC	;
238)   130E 0D          		 DEC C	;
239)   130F E2 09 13    		 JP PO, LCLR_AGN1	;
240)   1312 C9          		 RET	;
242)   1313 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
243)   1315 CD 91 12    		 CALL LCD16_COMMD	;
244)   1318 CD 06 13    		 CALL LCDDELAY	;
245)   131B C9          		 RET	;
248)   131C 7E          		@LCD16_PRINT: LD A, (HL)	;
249)   131D FE 00       		 CP 0	;
250)   131F C8          		 RET Z	;
251)   1320 CD 96 12    		 CALL LCD16_DATA	;
252)   1323 23          		 INC HL	;
253)   1324 18 F6       		 JR LCD16_PRINT	;
256)   1326 CD 96 12    		@LCD16_PRCHR: CALL LCD16_DATA	;
257)   1329 C9          		 RET	;
259)   132A 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
260)   132C CD 91 12    		 CALL LCD16_COMMD	;
261)   132F CD 06 13    		 CALL LCDDELAY	;
262)   1332 C9          		 RET	;
265)   1333 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
266)   1337 06 00       		@LCD16_SETCURS: LD B, 0	;
267)   1339 4B          		 LD C, E	;
268)   133A 21 33 13    		 LD HL, ROWOFFSET	;
269)   133D 09          		 ADD HL, BC	;
270)   133E 7E          		 LD A, (HL)	;
271)   133F 82          		 ADD D	;
272)   1340 F6 80       		 OR LCD_SETDDRAMADDR	;
273)   1342 CD 91 12    		 CALL LCD16_COMMD	;
274)   1345 C9          		 RET	;
276)   1346 3A 35 12    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
277)   1349 CB 97       		 RES LCD_CURSORON, A	;
278)   134B 32 35 12    		 LD (LCD_DSPCTRL), A	;
279)   134E F6 08       		 OR LCD_DISPLAYCONTROL	;
280)   1350 CD 91 12    		 CALL LCD16_COMMD	;
281)   1353 C9          		 RET	;
284)   1354 3A 35 12    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
285)   1357 F6 02       		 OR LCD_CURSORON	;
286)   1359 32 35 12    		 LD (LCD_DSPCTRL), A	;
287)   135C F6 08       		 OR LCD_DISPLAYCONTROL	;
288)   135E CD 91 12    		 CALL LCD16_COMMD	;
289)   1361 C9          		 RET	;
291)   1362 3A 35 12    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
292)   1365 CB 8F       		 RES LCD_BLINKON, A	;
293)   1367 32 35 12    		 LD (LCD_DSPCTRL), A	;
294)   136A F6 08       		 OR LCD_DISPLAYCONTROL	;
295)   136C CD 91 12    		 CALL LCD16_COMMD	;
296)   136F C9          		 RET	;
299)   1370 3A 35 12    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
300)   1373 F6 01       		 OR LCD_BLINKON	;
301)   1375 32 35 12    		 LD (LCD_DSPCTRL), A	;
302)   1378 F6 08       		 OR LCD_DISPLAYCONTROL	;
303)   137A CD 91 12    		 CALL LCD16_COMMD	;
304)   137D C9          		 RET	;
306)   137E 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
307)   1380 CD 91 12    		 CALL LCD16_COMMD	;
308)   1383 C9          		 RET	;
310)   1384 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
311)   1386 CD 91 12    		 CALL LCD16_COMMD	;
312)   1389 C9          		 RET	;
314)   138A 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
315)   138C CD 91 12    		 CALL LCD16_COMMD	;
316)   138F C9          		 RET	;
318)   1390 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
319)   1392 CD 91 12    		 CALL LCD16_COMMD	;
320)   1395 C9          		 RET	;
326)   1396 C9          		 RET	;
 46)   1397 0E 01       		VGA_INIT: LD C, 01B       ;LOW RES TEXT SCREEN	;LOW RES TEXT SCREEN
 47)   1399 CD 9D 13    		 CALL VGA_SETCONF	;
 48)   139C C9          		 RET	;
 52)   139D E5          		VGA_SETCONF: PUSH HL	;
 53)   139E 06 04       		 LD B, 4        ;8000h	;8000h
 54)   13A0 CD 61 0A    		 CALL GETPGINBANK	;
 55)   13A3 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
 56)   13A4 C5          		 PUSH BC        ;SAVE SCREEN CODE	;SAVE SCREEN CODE
 57)   13A5 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
 58)   13A7 CD 3F 0A    		 CALL PUTPGINBANK	;
 59)   13AA C1          		 POP BC	;
 60)   13AB 79          		 LD A, C	;
 61)   13AC 21 F8 1F    		 LD HL, CONFADDR	;
 62)   13AF 11 00 80    		 LD DE, $8000	;
 63)   13B2 B7          		 OR A	;
 64)   13B3 ED 5A       		 ADC HL, DE	;
 65)   13B5 77          		 LD (HL), A	;
 66)   13B6 F1          		 POP AF	;
 67)   13B7 C5          		 PUSH BC	;
 68)   13B8 CD 3F 0A    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
 69)   13BB C1          		 POP BC	;
 70)   13BC E1          		 POP HL	;
 71)   13BD 79          		 LD A, C        ;SCREEN MODE	;SCREEN MODE
 72)   13BE CB 47       		 BIT 0, A	;
 73)   13C0 C2 27 14    		 JP NZ, VGA_TXTINIT	;
 74)   13C3 C3 38 16    		 JP VGA_GRPHINIT	;
 78)   13C6 E5          		VGA_GETCONF: PUSH HL	;
 79)   13C7 06 04       		 LD B, 4        ;8000h	;8000h
 80)   13C9 CD 61 0A    		 CALL GETPGINBANK	;
 81)   13CC F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
 82)   13CD 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
 83)   13CF CD 3F 0A    		 CALL PUTPGINBANK	;
 84)   13D2 21 F8 1F    		 LD HL, CONFADDR	;
 85)   13D5 11 00 80    		 LD DE, $8000	;
 86)   13D8 B7          		 OR A	;
 87)   13D9 ED 5A       		 ADC HL, DE	;
 88)   13DB 7E          		 LD A, (HL)	;
 89)   13DC 4F          		 LD C, A	;
 90)   13DD F1          		 POP AF	;
 91)   13DE C5          		 PUSH BC	;
 92)   13DF CD 3F 0A    		 CALL PUTPGINBANK	;
 93)   13E2 C1          		 POP BC	;
 94)   13E3 E1          		 POP HL	;
 95)   13E4 79          		 LD A, C	;
 96)   13E5 C9          		 RET	;
107)   13E6 3A F3 FE    		VGA_GETPAGE: LD A, (PGSEM)	;
108)   13E9 3C          		 INC A	;
109)   13EA 32 F3 FE    		 LD (PGSEM), A	;
110)   13ED FE 01       		 CP 1	;
111)   13EF C0          		 RET NZ	;
112)   13F0 E5          		 PUSH HL	;
113)   13F1 06 04       		 LD B, 4        ;8000h	;8000h
114)   13F3 CD 61 0A    		 CALL GETPGINBANK	;
115)   13F6 32 EF FE    		 LD (TMPG), A        ;SAVE OLD PAGE	;SAVE OLD PAGE
116)   13F9 3E 08       		 LD A, 8        ;PAGE 8	;PAGE 8
117)   13FB CD 3F 0A    		 CALL PUTPGINBANK	;
118)   13FE E1          		 POP HL	;
119)   13FF C9          		 RET	;
123)   1400 3A F3 FE    		VGA_RMVPAGE: LD A, (PGSEM)	;
124)   1403 3D          		 DEC A	;
125)   1404 32 F3 FE    		 LD (PGSEM), A	;
126)   1407 FE 00       		 CP 0	;
127)   1409 C0          		 RET NZ	;
128)   140A E5          		 PUSH HL	;
129)   140B 06 04       		 LD B, 4	;
130)   140D 3A EF FE    		 LD A, (TMPG)	;
131)   1410 CD 3F 0A    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
132)   1413 E1          		 POP HL	;
133)   1414 C9          		 RET	;
135)   1415 CD E6 13    		VGA_SETFONT: CALL VGA_GETPAGE	;
136)   1418 21 00 36    		 LD HL, FONT_ADDR	;
137)   141B 11 00 90    		 LD DE, $9000        ;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000	;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000
138)   141E 01 00 0A    		 LD BC 2560	;
139)   1421 ED B0       		 LDIR         ;TRANSFER	;TRANSFER
140)   1423 CD 00 14    		 CALL VGA_RMVPAGE	;
141)   1426 C9          		 RET	;
144)   1427 AF          		VGA_TXTINIT: XOR A	;
145)   1428 32 F3 FE    		 LD (PGSEM), A	;
146)   142B 32 EF FE    		 LD (TMPG), A	;
147)   142E 3E 0B       		 LD A, VGA_YELLOW	;
148)   1430 32 F7 FE    		 LD (VGAFCOL), A	;
149)   1433 3E 04       		 LD A, VGA_NAVY	;
150)   1435 32 F8 FE    		 LD (VGABCOL), A	;
151)   1438 79          		 LD A, C	;
152)   1439 16 28       		 LD D, 40	;
153)   143B 1E 14       		 LD E, 20	;
154)   143D FE 01       		 CP 1         ;LOW RES TEXT MODE	;LOW RES TEXT MODE
155)   143F 28 04       		 JR Z, VGTI_NX	;
157)   1441 16 50       		 LD D, 80	;
158)   1443 1E 28       		 LD E, 40	;
159)   1445 7A          		VGTI_NX: LD A, D	;
160)   1446 32 FB FE    		 LD (VGAMAXX), A	;
161)   1449 7B          		 LD A, E	;
162)   144A 32 FC FE    		 LD (VGAMAXY), A	;
163)   144D AF          		 XOR A	;
164)   144E 32 F9 FE    		 LD (VGATX_X), A	;
165)   1451 32 FA FE    		 LD (VGATX_Y), A	;
166)   1454 CD 15 14    		 CALL VGA_SETFONT       ;SET THE FONT ON VIDEO MEM	;SET THE FONT ON VIDEO MEM
169)   1457 3A FB FE    		VGA_TXTCLR: LD A, (VGAMAXX)	;
170)   145A 67          		 LD H, A	;
171)   145B 3A FC FE    		 LD A, (VGAMAXY)	;
172)   145E 5F          		 LD E, A	;
173)   145F CD 2A 30    		 CALL MULT8	;
174)   1462 E5          		 PUSH HL	;
175)   1463 CD E6 13    		 CALL VGA_GETPAGE	;
176)   1466 C1          		 POP BC         ;TOTAL BYTES	;TOTAL BYTES
177)   1467 21 00 80    		 LD HL, $8000        ;BANK4	;BANK4
178)   146A 11 00 84    		 LD DE, $8400        ;COLOR INFO	;COLOR INFO
179)   146D C3 7C 14    		 JP VGAC_AGN	;
186)   1470 CD E6 13    		VGA_CLR: CALL VGA_GETPAGE	;
187)   1473 01 20 03    		 LD BC, 800	;
188)   1476 21 00 80    		 LD HL, $8000        ;DEL CHARS	;DEL CHARS
189)   1479 11 00 84    		 LD DE, $8400	;
190)   147C 3E 20       		VGAC_AGN: LD A, 32	;
191)   147E 77          		 LD (HL), A	;
192)   147F 3A F8 FE    		 LD A, (VGABCOL)	;
193)   1482 CB 27       		 SLA A	;
194)   1484 CB 27       		 SLA A	;
195)   1486 CB 27       		 SLA A	;
196)   1488 CB 27       		 SLA A	;
197)   148A 12          		 LD (DE), A	;
198)   148B 23          		 INC HL	;
199)   148C 13          		 INC DE	;
200)   148D 0B          		 DEC BC	;
201)   148E 78          		 LD A, B	;
202)   148F B1          		 OR C	;
203)   1490 20 EA       		 JR NZ, VGAC_AGN	;
204)   1492 AF          		 XOR A	;
205)   1493 32 F9 FE    		 LD (VGATX_X), A	;
206)   1496 32 FA FE    		 LD (VGATX_Y), A	;
207)   1499 CD 00 14    		 CALL VGA_RMVPAGE	;
208)   149C C9          		 RET	;
212)   149D 3A F7 FE    		VGA_GETCOL: LD A, (VGAFCOL)      ;GET COLOR INFO	;GET COLOR INFO
213)   14A0 47          		 LD B, A	;
214)   14A1 3A F8 FE    		 LD A, (VGABCOL)	;
215)   14A4 CB 27       		 SLA A	;
216)   14A6 CB 27       		 SLA A	;
217)   14A8 CB 27       		 SLA A	;
218)   14AA CB 27       		 SLA A	;
219)   14AC B0          		 OR B         ;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR	;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR
220)   14AD C9          		 RET	;
225)   14AE F5          		VGA_CALC_VIDAD: PUSH AF	;
226)   14AF 06 00       		 LD B, 0	;
227)   14B1 3A FA FE    		 LD A, (VGATX_Y)	;
228)   14B4 4F          		 LD C, A	;
229)   14B5 21 00 80    		 LD HL, $8000	;
230)   14B8 11 28 00    		 LD DE, 40	;
231)   14BB 78          		VGCLC_AGN: LD A, B	;
232)   14BC B1          		 OR C	;
233)   14BD 28 04       		 JR Z, VGCLC_DOX	;
234)   14BF 19          		 ADD HL, DE	;
235)   14C0 0B          		 DEC BC	;
236)   14C1 18 F8       		 JR VGCLC_AGN	;
237)   14C3 06 00       		VGCLC_DOX: LD B, 0	;
238)   14C5 3A F9 FE    		 LD A, (VGATX_X)	;
239)   14C8 4F          		 LD C, A	;
240)   14C9 09          		 ADD HL, BC	;
241)   14CA F1          		 POP AF	;
242)   14CB C9          		 RET	;
246)   14CC F5          		VGA_PRCH: PUSH AF	;
247)   14CD CD E6 13    		 CALL VGA_GETPAGE	;
248)   14D0 F1          		 POP AF	;
249)   14D1 FE 1F       		 CP 31	;
250)   14D3 DC F9 14    		 CALL C, VGA_NOTVISCH	;
251)   14D6 28 06       		 JR Z, PRCH_EX        ;EXIT IF CHAR WAS HANDLED	;EXIT IF CHAR WAS HANDLED
252)   14D8 CD E2 14    		 CALL VGA_DOPRNCH       ;PRINT THE CHAR	;PRINT THE CHAR
253)   14DB CD 6D 15    		 CALL VGA_TXFORW       ;TEXT FORWARD	;TEXT FORWARD
254)   14DE CD 00 14    		PRCH_EX: CALL VGA_RMVPAGE	;
255)   14E1 C9          		 RET	;
258)   14E2 E5          		VGA_DOPRNCH: PUSH HL	;
259)   14E3 F5          		 PUSH AF	;
260)   14E4 CD E6 13    		 CALL VGA_GETPAGE	;
261)   14E7 CD AE 14    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
262)   14EA F1          		 POP AF	;
263)   14EB 77          		 LD (HL), A        ;PUT CHAR ON SCREEN	;PUT CHAR ON SCREEN
264)   14EC 11 00 04    		 LD DE, $400	;
265)   14EF 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
266)   14F0 CD 9D 14    		 CALL VGA_GETCOL       ;GET CURRENT COLOR	;GET CURRENT COLOR
267)   14F3 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
268)   14F4 E1          		 POP HL	;
269)   14F5 CD 00 14    		 CALL VGA_RMVPAGE	;
270)   14F8 C9          		 RET	;
274)   14F9 FE 08       		VGA_NOTVISCH: CP 8        ;BACKSPACE	;BACKSPACE
275)   14FB 20 11       		 JR NZ, NX1	;
276)   14FD 3A F9 FE    		 LD A, (VGATX_X)	;
277)   1500 FE 00       		 CP 0         ;COL 0 HAS THE PROMPT	;COL 0 HAS THE PROMPT
278)   1502 C8          		 RET Z         ;DO NOT PRINT ANYTHING	;DO NOT PRINT ANYTHING
279)   1503 3D          		 DEC A	;
280)   1504 32 F9 FE    		 LD (VGATX_X), A	;
281)   1507 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
282)   1509 CD E2 14    		 CALL VGA_DOPRNCH       ;	;
283)   150C AF          		 XOR A         ;CLEAR ZERO	;CLEAR ZERO
284)   150D C9          		 RET	;
285)   150E FE 0A       		NX1: CP 10         ;JUST IGNORE IT	;JUST IGNORE IT
286)   1510 C8          		 RET Z	;
287)   1511 FE 0D       		 CP 13         ;CR =NEW LINE	;CR =NEW LINE
288)   1513 20 07       		 JR NZ, NX2	;
289)   1515 CD 7C 15    		 CALL VGDOY        ;ADD 1 TO TY	;ADD 1 TO TY
290)   1518 32 F9 FE    		 LD (VGATX_X), A       ;ZF IS SET	;ZF IS SET
291)   151B C9          		 RET	;
292)   151C AF          		NX2: XOR A         ;NC MEANS WE DON'T PRINT	;NC MEANS WE DON'T PRINT
293)   151D C9          		 RET	;
297)   151E F5          		VGA_DOCHCLR: PUSH AF	;
298)   151F CD E6 13    		 CALL VGA_GETPAGE	;
299)   1522 CD AE 14    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
300)   1525 11 00 04    		 LD DE, $400	;
301)   1528 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
302)   1529 F1          		 POP AF	;
303)   152A 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
304)   152B CD 00 14    		 CALL VGA_RMVPAGE	;
305)   152E C9          		 RET	;
308)   152F CD E6 13    		VGA_GETCHAR: CALL VGA_GETPAGE	;
309)   1532 CD AE 14    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDR ON HL	;CALC VIDEO ADDR ON HL
310)   1535 7E          		 LD A, (HL)	;
311)   1536 11 00 04    		 LD DE, $400	;
312)   1539 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
313)   153A 57          		 LD D, A	;
314)   153B 7E          		 LD A, (HL)	;
315)   153C 5F          		 LD E, A	;
316)   153D CD 00 14    		 CALL VGA_RMVPAGE	;
317)   1540 C9          		 RET	;
320)   1541 CD 2F 15    		VGA_RMVCURS: CALL VGA_GETCHAR	;
321)   1544 7A          		 LD A, D	;
322)   1545 CD E2 14    		 CALL VGA_DOPRNCH	;
323)   1548 C9          		 RET	;
324)   1549 CD E6 13    		VGA_PRNCURS: CALL VGA_GETPAGE	;
325)   154C CD 2F 15    		 CALL VGA_GETCHAR       ; E HAVE THE COLOR INFO	; E HAVE THE COLOR INFO
326)   154F 7B          		 LD A, E	;
327)   1550 0F          		 RRCA         ;CHANGE FORE AND BACK COLOR INFO	;CHANGE FORE AND BACK COLOR INFO
328)   1551 0F          		 RRCA	;
329)   1552 0F          		 RRCA	;
330)   1553 0F          		 RRCA	;
331)   1554 CD 1E 15    		 CALL VGA_DOCHCLR       ;CHANGE THE COLOR	;CHANGE THE COLOR
332)   1557 CD 00 14    		 CALL VGA_RMVPAGE	;
333)   155A C9          		 RET	;
336)   155B CD E6 13    		VGA_PRINT: CALL VGA_GETPAGE	;
337)   155E 7E          		VGAP_AGN: LD A, (HL)	;
338)   155F FE 00       		 CP 0	;
339)   1561 28 06       		 JR Z, VGAP_EX	;
340)   1563 CD CC 14    		 CALL VGA_PRCH	;
341)   1566 23          		 INC HL	;
342)   1567 18 F5       		 JR VGAP_AGN	;
343)   1569 CD 00 14    		VGAP_EX: CALL VGA_RMVPAGE	;
344)   156C C9          		 RET	;
347)   156D F5          		VGA_TXFORW: PUSH AF	;
348)   156E 3A F9 FE    		 LD A, (VGATX_X)	;
349)   1571 3C          		 INC A	;
350)   1572 FE 28       		 CP 40	;
351)   1574 CC 7C 15    		 CALL Z, VGDOY	;
352)   1577 32 F9 FE    		 LD (VGATX_X), A	;
353)   157A F1          		 POP AF	;
354)   157B C9          		 RET	;
355)   157C 3A FA FE    		VGDOY: LD A, (VGATX_Y)	;
356)   157F 3C          		 INC A	;
357)   1580 FE 14       		 CP 20	;
358)   1582 CC 8A 15    		 CALL Z, DOSCRL	;
359)   1585 32 FA FE    		 LD (VGATX_Y), A	;
360)   1588 AF          		 XOR A	;
361)   1589 C9          		 RET	;
363)   158A CD AA 15    		DOSCRL: CALL DOSCRL_COL       ;SCROLL COLORS	;SCROLL COLORS
364)   158D CD 91 15    		 CALL DOSCRL_TXT       ;SCROLL TEXT	;SCROLL TEXT
365)   1590 C9          		 RET	;
366)   1591 21 28 80    		DOSCRL_TXT: LD HL, $8028       ;LINE 1	;LINE 1
367)   1594 11 00 80    		 LD DE, $8000        ;LINE 0	;LINE 0
368)   1597 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
369)   159A ED B0       		 LDIR	;
370)   159C 3E 20       		 LD A, 32	;
371)   159E 21 F8 82    		 LD HL, $82F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
372)   15A1 06 28       		 LD B, 40	;
373)   15A3 77          		DOS_AGN: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
374)   15A4 23          		 INC HL	;
375)   15A5 10 FC       		 DJNZ, DOS_AGN	;
376)   15A7 3E 13       		 LD A, 19        ;SET TO LAST LINE	;SET TO LAST LINE
377)   15A9 C9          		 RET	;
379)   15AA 21 28 84    		DOSCRL_COL: LD HL, $8428       ;LINE 1	;LINE 1
380)   15AD 11 00 84    		 LD DE, $8400        ;LINE 0	;LINE 0
381)   15B0 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
382)   15B3 ED B0       		 LDIR	;
383)   15B5 CD 9D 14    		 CALL VGA_GETCOL       ;SET DEFAULT COLOR	;SET DEFAULT COLOR
384)   15B8 21 F8 86    		 LD HL, $86F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
385)   15BB 06 28       		 LD B, 40	;
386)   15BD 77          		DOS_AGNCL: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
387)   15BE 23          		 INC HL	;
388)   15BF 10 FC       		 DJNZ, DOS_AGNCL	;
389)   15C1 C9          		 RET	;
399)   15C2 3A F3 FE    		 LD A, (PGSEM)	;
400)   15C5 3C          		 INC A	;
401)   15C6 32 F3 FE    		 LD (PGSEM), A	;
402)   15C9 FE 01       		 CP 1	;
403)   15CB C0          		 RET NZ	;
404)   15CC E5          		 PUSH HL	;
405)   15CD 06 05       		 LD B, 5        ;A000h	;A000h
406)   15CF CD 61 0A    		 CALL GETPGINBANK	;
407)   15D2 32 EF FE    		 LD (TMPG), A	;
408)   15D5 06 06       		 LD B, 6        ;A000h	;A000h
409)   15D7 CD 61 0A    		 CALL GETPGINBANK	;
410)   15DA 32 F0 FE    		 LD (TMPG + 1), A	;
412)   15DD 3E 08       		 LD A, 8	;
413)   15DF 06 05       		 LD B, 5	;
414)   15E1 CD 3F 0A    		 CALL PUTPGINBANK	;
416)   15E4 3E 09       		 LD A, 9	;
417)   15E6 06 06       		 LD B, 6	;
418)   15E8 CD 3F 0A    		 CALL PUTPGINBANK	;
419)   15EB E1          		 POP HL	;
420)   15EC C9          		 RET	;
426)   15ED 3A F3 FE    		 LD A, (PGSEM)	;
427)   15F0 3C          		 INC A	;
428)   15F1 32 F3 FE    		 LD (PGSEM), A	;
429)   15F4 FE 01       		 CP 1	;
430)   15F6 C0          		 RET NZ	;
431)   15F7 E5          		 PUSH HL	;
432)   15F8 06 05       		 LD B, 5        ;A000h	;A000h
433)   15FA CD 61 0A    		 CALL GETPGINBANK	;
434)   15FD 32 EF FE    		 LD (TMPG), A	;
435)   1600 06 06       		 LD B, 6        ;A000h	;A000h
436)   1602 CD 61 0A    		 CALL GETPGINBANK	;
437)   1605 32 F0 FE    		 LD (TMPG + 1), A	;
439)   1608 3E 0A       		 LD A, 10	;
440)   160A 06 05       		 LD B, 5	;
441)   160C CD 3F 0A    		 CALL PUTPGINBANK	;
443)   160F 3E 0B       		 LD A, 11	;
444)   1611 06 06       		 LD B, 6	;
445)   1613 CD 3F 0A    		 CALL PUTPGINBANK	;
446)   1616 E1          		 POP HL	;
447)   1617 C9          		 RET	;
452)   1618 3A F3 FE    		VGA_RMVGRPG: LD A, (PGSEM)	;
453)   161B FE 00       		 CP 0	;
454)   161D C8          		 RET Z	;
455)   161E 3D          		 DEC A	;
456)   161F 32 F3 FE    		 LD (PGSEM), A	;
457)   1622 FE 00       		 CP 0	;
458)   1624 C0          		 RET NZ	;
459)   1625 E5          		 PUSH HL	;
460)   1626 06 05       		 LD B, 5	;
461)   1628 3A EF FE    		 LD A, (TMPG)	;
462)   162B CD 3F 0A    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
463)   162E 06 06       		 LD B, 6	;
464)   1630 3A F0 FE    		 LD A, (TMPG + 1)	;
465)   1633 CD 3F 0A    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
466)   1636 E1          		 POP HL	;
467)   1637 C9          		 RET	;
470)   1638 C9          		VGA_GRPHINIT: RET	;
476)   1639 E5          		 PUSH HL	;
477)   163A F5          		 PUSH AF	;
478)   163B 7B          		 LD A, E	;
479)   163C FE 66       		 CP 102	;
480)   163E 38 27       		 JR C, PPNXT0        ;LESS THAN 102	;LESS THAN 102
481)   1640 20 16       		 JR NZ, NXTBNK        ;MORE THAN 102	;MORE THAN 102
482)   1642 E5          		 PUSH HL        ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES	;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
483)   1643 01 80 00    		 LD BC, 128	;
484)   1646 B7          		 OR A	;
485)   1647 ED 42       		 SBC HL, BC	;
486)   1649 47          		 LD B, A	;
487)   164A 7C          		 LD A, H	;
488)   164B B7          		 OR A         ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128	; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
489)   164C 78          		 LD A, B	;
490)   164D E1          		 POP HL	;
491)   164E 20 17       		 JR NZ, PPNXT0	;
493)   1650 3E 67       		 LD A, 103        ;WE ARE AT LINE ZERO ON 2ND BANK	;WE ARE AT LINE ZERO ON 2ND BANK
494)   1652 11 40 01    		 LD DE, 129 + 191	;
495)   1655 B7          		 OR A	;
496)   1656 ED 52       		 SBC HL, DE        ;	;
497)   1658 D6 67       		NXTBNK: SUB 103        ;SKIP 102 ROWS	;SKIP 102 ROWS
498)   165A 11 C0 00    		 LD DE, 192        ;320-128	;320-128
499)   165D B7          		 OR A	;
500)   165E ED 5A       		 ADC HL, DE	;
501)   1660 F5          		 PUSH AF	;
503)   1661 CD ED 15    		 CALL VGA_SETGRPGHI	;
505)   1664 F1          		 POP AF         ;A HAS THE ROWS ON 2ND 16K	;A HAS THE ROWS ON 2ND 16K
506)   1665 18 05       		 JR PPNXT1	;
507)   1667 F5          		PPNXT0: PUSH AF        ;A=E=ROW=Y	;A=E=ROW=Y
508)   1668 CD C2 15    		 CALL VGA_SETGRPGLO	;
509)   166B F1          		 POP AF	;
510)   166C 11 00 A0    		PPNXT1: LD DE, BASEADDR	;
512)   166F CB 3C       		 SRL H	;
513)   1671 CB 1D       		 RR L	;
514)   1673 19          		 ADD HL, DE        ;FIND COLUMN	;FIND COLUMN
515)   1674 11 A0 00    		 LD DE, 160	;
516)   1677 B7          		DONXTROW: OR A        ;CHECK ROW=0	;CHECK ROW=0
517)   1678 28 04       		 JR Z, DOPLOTPX	;
518)   167A 19          		 ADD HL, DE	;
519)   167B 3D          		 DEC A	;
520)   167C 18 F9       		 JR DONXTROW	;
521)   167E C1          		DOPLOTPX: POP BC        ;B HAS THE COLOR	;B HAS THE COLOR
522)   167F D1          		 POP DE         ;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL
523)   1680 7E          		 LD A, (HL)        ;GET PIXEL BYTE	;GET PIXEL BYTE
524)   1681 CB 43       		 BIT 0, E        ;CHECK X IS EVEN OR ODD	;CHECK X IS EVEN OR ODD
525)   1683 28 04       		 JR Z, DOEVEN        ;EVEN	;EVEN
527)   1685 E6 F0       		 AND $F0        ;CLEAR RIGHT 4 BITS	;CLEAR RIGHT 4 BITS
528)   1687 18 0A       		 JR DPEXIT	;
530)   1689 CB 00       		DOEVEN: RLC B	;
531)   168B CB 00       		 RLC B	;
532)   168D CB 00       		 RLC B	;
533)   168F CB 00       		 RLC B	;
534)   1691 E6 0F       		 AND $0F        ;ZERO LEFT	;ZERO LEFT
535)   1693 B0          		DPEXIT: OR B         ;MIX PIXELS	;MIX PIXELS
536)   1694 77          		 LD (HL), A	;
537)   1695 CD 18 16    		 CALL VGA_RMVGRPG	;
538)   1698 C9          		 RET	;
541)   1699 CD C2 15    		VGA_GRCLS: CALL VGA_SETGRPGLO	;
542)   169C 11 00 A0    		 LD DE, $A000	;
543)   169F 01 00 40    		 LD BC, 16384        ;BYTES ON 1ST 16K	;BYTES ON 1ST 16K
544)   16A2 21 01 00    		 LD HL, 1	;
545)   16A5 3E 00       		 LD A, $00        ;RED - RED	;RED - RED
546)   16A7 CD C2 16    		 CALL FILLBTS	;
547)   16AA CD 18 16    		 CALL VGA_RMVGRPG	;
548)   16AD CD C2 15    		 CALL VGA_SETGRPGLO	;
549)   16B0 11 00 A0    		 LD DE, $A000	;
550)   16B3 21 01 00    		 LD HL, 1	;
551)   16B6 01 00 3D    		 LD BC, 15616        ;BYTES ON 2ND 16K	;BYTES ON 2ND 16K
552)   16B9 3E 00       		 LD A, $00        ;RED - RED	;RED - RED
553)   16BB CD C2 16    		 CALL FILLBTS	;
554)   16BE CD 18 16    		 CALL VGA_RMVGRPG	;
555)   16C1 C9          		 RET         ;TO MENU	;TO MENU
557)   16C2 C5          		FILLBTS: PUSH BC	;
558)   16C3 12          		AGN1: LD (DE), A	;
559)   16C4 13          		 INC DE	;
560)   16C5 0B          		 DEC BC	;
561)   16C6 67          		 LD H, A	;
562)   16C7 78          		 LD A, B	;
563)   16C8 B1          		 OR C	;
564)   16C9 7C          		 LD A, H	;
565)   16CA 20 F7       		 JR NZ, AGN1	;
566)   16CC 2D          		 DEC L	;
567)   16CD 7D          		 LD A, L	;
568)   16CE B7          		 OR A	;
569)   16CF 7C          		 LD A, H	;
570)   16D0 C1          		 POP BC	;
571)   16D1 20 EF       		 JR NZ, FILLBTS	;
572)   16D3 C9          		 RET	;
 16)   16D4 	            		 LCD_RS EQU DEVTFT       ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   16D4 	            		 LCD_CS EQU DEVTFT+1       ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   16D4 7B          		 LD A, E	;
 32)   16D5 D3 11       		 OUT (LCD_CS), A	;
 37)   16D7 DB 11       		 IN A, (LCD_CS)	;
 38)   16D9 C9          		 RET	;
 45)   16DA 7A          		 LD A, D	;
 46)   16DB D3 11       		 OUT (LCD_CS), A	;
 47)   16DD C9          		 RET	;
 53)   16DE 7A          		 LD A, D	;
 54)   16DF D3 10       		 OUT (LCD_RS), A	;
 55)   16E1 C9          		 RET	;
 62)   16E2 AF          		 XOR A	;
 63)   16E3 D3 10       		 OUT (LCD_RS), A       ;RS LOW = COMMAND BYTE	;RS LOW = COMMAND BYTE
 64)   16E5 CD DA 16    		 CALL LCD_WR_BUS	;
 65)   16E8 3E 01       		 LD A, 1	;
 66)   16EA D3 10       		 OUT (LCD_RS), A       ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   16EC C9          		 RET	;
 71)   16ED 16 E2       		 LD D, 0xE2        ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   16EF CD DE 16    		 CALL LCD_WR_COM       ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   16F2 16 23       		 LD D, 0x23        ;1E	;1E
 74)   16F4 CD DA 16    		 CALL LCD_WR_DAT	;
 75)   16F7 16 02       		 LD D, 0x02	;
 76)   16F9 CD DA 16    		 CALL LCD_WR_DAT	;
 77)   16FC 16 54       		 LD D, 0x54	;
 78)   16FE CD DA 16    		 CALL LCD_WR_DAT	;
 79)   1701 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 80)   1703 CD DE 16    		 CALL LCD_WR_COM	;
 81)   1706 16 01       		 LD D, 0x01	;
 82)   1708 CD DA 16    		 CALL LCD_WR_DAT	;
 83)   170B 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 84)   170D CD 32 2E    		 CALL DELAYMICRO	;
 85)   1710 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 86)   1712 CD DE 16    		 CALL LCD_WR_COM	;
 87)   1715 16 03       		 LD D, 0x03	;
 88)   1717 CD DA 16    		 CALL LCD_WR_DAT	;
 89)   171A 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 90)   171C CD 32 2E    		 CALL DELAYMICRO	;
 92)   171F 16 01       		 LD D, 0x01        ; software reset	; software reset
 93)   1721 CD DE 16    		 CALL LCD_WR_COM	;
 94)   1724 06 14       		 LD B, 20        ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   1726 CD 32 2E    		 CALL DELAYMICRO	;
 96)   1729 16 E6       		 LD D, 0xE6        ;PLL setting for PCLK, depends on resolution	;PLL setting for PCLK, depends on resolution
 97)   172B CD DE 16    		 CALL LCD_WR_COM	;
 98)   172E 16 03       		 LD D, 0x03	;
 99)   1730 CD DA 16    		 CALL LCD_WR_DAT	;
100)   1733 16 33       		 LD D, 0x33        ;FF	;FF
101)   1735 CD DA 16    		 CALL LCD_WR_DAT	;
102)   1738 16 33       		 LD D, 0x33        ;FF	;FF
103)   173A CD DA 16    		 CALL LCD_WR_DAT	;
105)   173D 16 B0       		 LD D, 0xB0        ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   173F CD DE 16    		 CALL LCD_WR_COM	;
107)   1742 16 20       		 LD D, 0x20	;
108)   1744 CD DA 16    		 CALL LCD_WR_DAT	;
109)   1747 16 00       		 LD D, 0x00	;
110)   1749 CD DA 16    		 CALL LCD_WR_DAT	;
111)   174C 16 03       		 LD D, 0x03        ;Set HDP  799	;Set HDP  799
112)   174E CD DA 16    		 CALL LCD_WR_DAT	;
113)   1751 16 1F       		 LD D, 0x1F	;
114)   1753 CD DA 16    		 CALL LCD_WR_DAT	;
115)   1756 16 01       		 LD D, 0x01        ;Set VDP  479	;Set VDP  479
116)   1758 CD DA 16    		 CALL LCD_WR_DAT	;
117)   175B 16 DF       		 LD D, 0xDF	;
118)   175D CD DA 16    		 CALL LCD_WR_DAT	;
119)   1760 16 00       		 LD D, 0x00	;
120)   1762 CD DA 16    		 CALL LCD_WR_DAT	;
123)   1765 16 B4       		 LD D, 0xB4        ;HSYNC	;HSYNC
124)   1767 CD DE 16    		 CALL LCD_WR_COM	;
125)   176A 16 04       		 LD D, 0x04        ;03         ;Set HT 928	;03         ;Set HT 928
126)   176C CD DA 16    		 CALL LCD_WR_DAT	;
127)   176F 16 1F       		 LD D, 0x1F        ;A0	;A0
128)   1771 CD DA 16    		 CALL LCD_WR_DAT	;
129)   1774 16 00       		 LD D, 0x00        ;Set HPS  46	;Set HPS  46
130)   1776 CD DA 16    		 CALL LCD_WR_DAT	;
131)   1779 16 D2       		 LD D, 0xD2        ;2E	;2E
132)   177B CD DA 16    		 CALL LCD_WR_DAT	;
133)   177E 16 00       		 LD D, 0x00        ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   1780 CD DA 16    		 CALL LCD_WR_DAT	;
135)   1783 16 00       		 LD D, 0x00        ;Set LPS  15	;Set LPS  15
136)   1785 CD DA 16    		 CALL LCD_WR_DAT	;
137)   1788 16 00       		 LD D, 0x00        ;0F	;0F
138)   178A CD DA 16    		 CALL LCD_WR_DAT	;
139)   178D 16 00       		 LD D, 0x00	;
140)   178F CD DA 16    		 CALL LCD_WR_DAT	;
142)   1792 16 B6       		 LD D, 0xB6        ;VSYNC	;VSYNC
143)   1794 CD DE 16    		 CALL LCD_WR_COM	;
144)   1797 16 02       		 LD D, 0x02        ;Set VT 525	;Set VT 525
145)   1799 CD DA 16    		 CALL LCD_WR_DAT	;
146)   179C 16 0C       		 LD D, 0x0C        ;0D	;0D
147)   179E CD DA 16    		 CALL LCD_WR_DAT	;
148)   17A1 16 00       		 LD D, 0x00        ;Set VPS  16	;Set VPS  16
149)   17A3 CD DA 16    		 CALL LCD_WR_DAT	;
150)   17A6 16 22       		 LD D, 0x22        ;10	;10
151)   17A8 CD DA 16    		 CALL LCD_WR_DAT	;
152)   17AB 16 00       		 LD D, 0x00        ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   17AD CD DA 16    		 CALL LCD_WR_DAT	;
154)   17B0 16 00       		 LD D, 0x00        ;Set FPS  8	;Set FPS  8
155)   17B2 CD DA 16    		 CALL LCD_WR_DAT	;
156)   17B5 16 00       		 LD D, 0x00        ; 08	; 08
157)   17B7 CD DA 16    		 CALL LCD_WR_DAT	;
159)   17BA 16 B8       		 LD D, 0xB8	;
160)   17BC CD DE 16    		 CALL LCD_WR_COM	;
161)   17BF 16 0F       		 LD D, 0x0F        ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   17C1 CD DA 16    		 CALL LCD_WR_DAT	;
163)   17C4 16 01       		 LD D, 0x01        ;GPIO0 normal	;GPIO0 normal
164)   17C6 CD DA 16    		 CALL LCD_WR_DAT	;
166)   17C9 16 BA       		 LD D, 0xBA	;
167)   17CB CD DE 16    		 CALL LCD_WR_COM	;
168)   17CE 16 01       		 LD D, 0x01        ;0F	;0F
169)   17D0 CD DA 16    		 CALL LCD_WR_DAT       ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   17D3 16 36       		 LD D, 0x36        ;rotation	;rotation
172)   17D5 CD DE 16    		 CALL LCD_WR_COM	;
173)   17D8 16 08       		 LD D, 0x08        ;2A	;2A
174)   17DA CD DA 16    		 CALL LCD_WR_DAT	;
176)   17DD 16 F0       		 LD D, 0xF0        ;pixel data interface	;pixel data interface
177)   17DF CD DE 16    		 CALL LCD_WR_COM	;
178)   17E2 16 06       		 LD D, 0x06        ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   17E4 CD DA 16    		 CALL LCD_WR_DAT	;
181)   17E7 06 05       		 LD B, 5        ;delay(5);	;delay(5);
182)   17E9 CD 32 2E    		 CALL DELAYMICRO	;
184)   17EC 16 BC       		 LD D, 0xBC        ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   17EE CD DE 16    		 CALL LCD_WR_COM	;
186)   17F1 16 40       		 LD D, 0x40	;
187)   17F3 CD DA 16    		 CALL LCD_WR_DAT	;
188)   17F6 16 80       		 LD D, 0x80	;
189)   17F8 CD DA 16    		 CALL LCD_WR_DAT	;
190)   17FB 16 40       		 LD D, 0x40	;
191)   17FD CD DA 16    		 CALL LCD_WR_DAT	;
192)   1800 16 01       		 LD D, 0x01	;
193)   1802 CD DA 16    		 CALL LCD_WR_DAT	;
194)   1805 06 05       		 LD B, 5        ;delay(5);	;delay(5);
195)   1807 CD 32 2E    		 CALL DELAYMICRO	;
197)   180A 16 35       		 LD D, 0x35        ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   180C CD DE 16    		 CALL LCD_WR_COM	;
199)   180F 16 00       		 LD D, 0x00        ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   1811 CD DA 16    		 CALL LCD_WR_DAT	;
202)   1814 16 29       		 LD D, 0x29        ;display on	;display on
203)   1816 CD DE 16    		 CALL LCD_WR_COM	;
204)   1819 16 BE       		 LD D, 0xBE        ;set PWM for B/L	;set PWM for B/L
205)   181B CD DE 16    		 CALL LCD_WR_COM	;
206)   181E 16 06       		 LD D, 0x06	;
207)   1820 CD DA 16    		 CALL LCD_WR_DAT	;
208)   1823 16 F0       		 LD D, 0xF0	;
209)   1825 CD DA 16    		 CALL LCD_WR_DAT	;
210)   1828 16 01       		 LD D, 0x01	;
211)   182A CD DA 16    		 CALL LCD_WR_DAT	;
212)   182D 16 F0       		 LD D, 0xF0	;
213)   182F CD DA 16    		 CALL LCD_WR_DAT	;
214)   1832 16 00       		 LD D, 0x00	;
215)   1834 CD DA 16    		 CALL LCD_WR_DAT	;
216)   1837 16 00       		 LD D, 0x00	;
217)   1839 CD DA 16    		 CALL LCD_WR_DAT	;
219)   183C 16 D0       		 LD D, 0xD0	;
220)   183E CD DE 16    		 CALL LCD_WR_COM	;
221)   1841 16 0D       		 LD D, 0x0D	;
222)   1843 CD DA 16    		 CALL LCD_WR_DAT	;
225)   1846 21 00 00    		 LD HL, 0	;
226)   1849 E5          		 PUSH HL	;
227)   184A E5          		 PUSH HL	;
228)   184B 21 1F 03    		 LD HL, 799	;
229)   184E E5          		 PUSH HL	;
230)   184F 21 DF 01    		 LD HL, 479	;
231)   1852 E5          		 PUSH HL	;
232)   1853 CD 57 18    		 CALL LCD_SETXY	;
233)   1856 C9          		 RET	;
250)   1857 DD 21 02 00 		 LD IX, 2	;
251)   185B DD 39       		 ADD IX, SP	;
252)   185D 16 2A       		 LD D, 0x2A        ;SEND IX PARAMS	;SEND IX PARAMS
253)   185F CD DE 16    		 CALL LCD_WR_COM	;
254)   1862 DD 56 07    		 LD D, (IX + 7)	;
255)   1865 CD DA 16    		 CALL LCD_WR_DAT	;
256)   1868 DD 56 06    		 LD D, (IX + 6)	;
257)   186B CD DA 16    		 CALL LCD_WR_DAT	;
258)   186E DD 56 03    		 LD D, (IX + 3)	;
259)   1871 CD DA 16    		 CALL LCD_WR_DAT	;
260)   1874 DD 56 02    		 LD D, (IX + 2)	;
261)   1877 CD DA 16    		 CALL LCD_WR_DAT	;
262)   187A 16 2B       		 LD D, 0x2B        ;SEND Y PARAMS	;SEND Y PARAMS
263)   187C CD DE 16    		 CALL LCD_WR_COM	;
264)   187F DD 56 05    		 LD D, (IX + 5)	;
265)   1882 CD DA 16    		 CALL LCD_WR_DAT	;
266)   1885 DD 56 04    		 LD D, (IX + 4)	;
267)   1888 CD DA 16    		 CALL LCD_WR_DAT	;
268)   188B DD 56 01    		 LD D, (IX + 1)	;
269)   188E CD DA 16    		 CALL LCD_WR_DAT	;
270)   1891 DD 56 00    		 LD D, (IX)	;
271)   1894 CD DA 16    		 CALL LCD_WR_DAT	;
272)   1897 16 2C       		 LD D, 0x2C        ;SEND DATA	;SEND DATA
273)   1899 CD DE 16    		 CALL LCD_WR_COM	;
274)   189C D1          		 POP DE	;
275)   189D 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   18A0 39          		 ADD HL, SP	;
277)   18A1 F9          		 LD SP, HL	;
278)   18A2 EB          		 EX DE, HL	;
279)   18A3 E9          		 JP (HL)	;
285)   18A4 54          		 LD D, H	;
286)   18A5 CD DA 16    		 CALL LCD_WR_DAT	;
287)   18A8 55          		 LD D, L	;
288)   18A9 CD DA 16    		 CALL LCD_WR_DAT	;
289)   18AC C9          		 RET	;
294)   18AD 16 2E       		 LD D, 0x2E        ;READ DATA	;READ DATA
295)   18AF CD DE 16    		 CALL LCD_WR_COM	;
296)   18B2 CD D7 16    		@LCD_GTPXL: CALL LCD_RD_DAT	;
297)   18B5 67          		 LD H, A	;
298)   18B6 CD D7 16    		 CALL LCD_RD_DAT	;
299)   18B9 6F          		 LD L, A	;
300)   18BA C9          		 RET	;
306)   18BB DD E5       		@LCD_READPIXEL: PUSH IX       ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   18BD DD 21 04 00 		 LD IX, 4        ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   18C1 DD 39       		 ADD IX, SP	;
309)   18C3 DD 66 03    		 LD H, (IX + 3)        ;X	;X
310)   18C6 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
311)   18C9 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
312)   18CC DD 5E 00    		 LD E, (IX)        ;Y	;Y
313)   18CF E5          		 PUSH HL	;
314)   18D0 D5          		 PUSH DE	;
315)   18D1 E5          		 PUSH HL	;
316)   18D2 D5          		 PUSH DE	;
317)   18D3 CD 57 18    		 CALL LCD_SETXY	;
318)   18D6 CD AD 18    		 CALL LCD_GETPIXEL	;
319)   18D9 E5          		 PUSH HL	;
320)   18DA CD 0C 19    		 CALL LCD_CLRXY	;
321)   18DD D1          		 POP DE         ;RESULT COLOR	;RESULT COLOR
322)   18DE DD E1       		 POP IX	;
323)   18E0 C1          		 POP BC         ;RET ADDR	;RET ADDR
324)   18E1 21 04 00    		 LD HL, 2 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   18E4 39          		 ADD HL, SP	;
326)   18E5 F9          		 LD SP, HL	;
327)   18E6 EB          		 EX DE, HL        ;HL RESULT	;HL RESULT
328)   18E7 C5          		 PUSH BC        ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   18E8 C9          		 RET	;
333)   18E9 DD 21 02 00 		 LD IX, 2        ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   18ED DD 39       		 ADD IX, SP	;
335)   18EF DD 66 03    		 LD H, (IX + 3)        ;X	;X
336)   18F2 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
337)   18F5 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
338)   18F8 DD 5E 00    		 LD E, (IX)        ;Y	;Y
339)   18FB E5          		 PUSH HL	;
340)   18FC D5          		 PUSH DE	;
341)   18FD E5          		 PUSH HL	;
342)   18FE D5          		 PUSH DE	;
343)   18FF CD 57 18    		 CALL LCD_SETXY	;
344)   1902 2A 01 FE    		 LD HL, (FCOLOR)	;
345)   1905 CD A4 18    		 CALL LCD_SETPIXEL	;
346)   1908 CD 0C 19    		 CALL LCD_CLRXY	;
347)   190B C9          		 RET	;
350)   190C 21 00 00    		 LD HL, 0	;
351)   190F E5          		 PUSH HL	;
352)   1910 E5          		 PUSH HL	;
353)   1911 21 1F 03    		 LD HL, LCD_WIDTH	;
354)   1914 E5          		 PUSH HL	;
355)   1915 21 DF 01    		 LD HL, LCD_HEIGHT	;
356)   1918 E5          		 PUSH HL	;
357)   1919 CD 57 18    		 CALL LCD_SETXY	;
358)   191C C9          		 RET	;
362)   191D DD 21 02 00 		 LD IX, 2	;
363)   1921 DD 39       		 ADD IX, SP	;
364)   1923 DD 66 05    		 LD H, (IX + 5)        ;X	;X
365)   1926 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
366)   1929 DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
367)   192C DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
368)   192F DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
369)   1932 DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
372)   1935 E5          		 PUSH HL	;
373)   1936 21 00 00    		 LD HL, 0	;
374)   1939 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
375)   193A ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
376)   193C 38 0A       		 JR C, POSH1	;
377)   193E AF          		 XOR A         ;l=-l	;l=-l
378)   193F 91          		 SUB C	;
379)   1940 4F          		 LD C, A	;
380)   1941 9F          		 SBC A, A	;
381)   1942 90          		 SUB B	;
382)   1943 47          		 LD B, A	;
383)   1944 E1          		 POP HL	;
384)   1945 ED 42       		 SBC HL, BC        ;x -= l;	;x -= l;
385)   1947 E5          		 PUSH HL	;
386)   1948 E1          		POSH1: POP HL	;
387)   1949 E5          		 PUSH HL	;
388)   194A D5          		 PUSH DE	;
389)   194B 09          		 ADD HL, BC	;
390)   194C E5          		 PUSH HL	;
391)   194D D5          		 PUSH DE	;
392)   194E CD 57 18    		 CALL LCD_SETXY        ;setXY(x, y, x+l, y);	;setXY(x, y, x+l, y);
393)   1951 2A 01 FE    		 LD HL, (FCOLOR)	;
394)   1954 CD A4 18    		NXTH1: CALL LCD_SETPIXEL	;
395)   1957 0B          		 DEC BC	;
396)   1958 79          		 LD A, C	;
397)   1959 B0          		 OR B	;
398)   195A 20 F8       		 JR NZ, NXTH1	;
399)   195C CD 0C 19    		 CALL LCD_CLRXY	;
400)   195F D1          		 POP DE	;
401)   1960 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
402)   1963 39          		 ADD HL, SP	;
403)   1964 F9          		 LD SP, HL	;
404)   1965 EB          		 EX DE, HL	;
405)   1966 E9          		 JP (HL)	;
411)   1967 DD 21 02 00 		 LD IX, 2	;
412)   196B DD 39       		 ADD IX, SP	;
413)   196D DD 56 05    		 LD D, (IX + 5)        ;X	;X
414)   1970 DD 5E 04    		 LD E, (IX + 4)        ;X	;X
415)   1973 DD 66 03    		 LD H, (IX + 3)        ;Y	;Y
416)   1976 DD 6E 02    		 LD L, (IX + 2)        ;Y	;Y
417)   1979 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
418)   197C DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
419)   197F E5          		 PUSH HL	;
420)   1980 21 00 00    		 LD HL, 0	;
421)   1983 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
422)   1984 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
423)   1986 38 0A       		 JR C, POSV1	;
424)   1988 AF          		 XOR A         ;l=-l	;l=-l
425)   1989 91          		 SUB C	;
426)   198A 4F          		 LD C, A	;
427)   198B 9F          		 SBC A, A	;
428)   198C 90          		 SUB B	;
429)   198D 47          		 LD B, A	;
430)   198E E1          		 POP HL	;
431)   198F ED 42       		 SBC HL, BC        ;Y -= l;	;Y -= l;
432)   1991 E5          		 PUSH HL	;
433)   1992 E1          		POSV1: POP HL	;
434)   1993 D5          		 PUSH DE	;
435)   1994 E5          		 PUSH HL	;
436)   1995 D5          		 PUSH DE	;
437)   1996 09          		 ADD HL, BC	;
438)   1997 E5          		 PUSH HL	;
439)   1998 CD 57 18    		 CALL LCD_SETXY        ;setXY(x, y, x, y+l);	;setXY(x, y, x, y+l);
440)   199B 2A 01 FE    		 LD HL, (FCOLOR)	;
441)   199E CD A4 18    		NXTV1: CALL LCD_SETPIXEL	;
442)   19A1 0B          		 DEC BC	;
443)   19A2 79          		 LD A, C	;
444)   19A3 B0          		 OR B	;
445)   19A4 20 F8       		 JR NZ, NXTV1	;
446)   19A6 CD 0C 19    		 CALL LCD_CLRXY	;
447)   19A9 D1          		 POP DE	;
448)   19AA 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
449)   19AD 39          		 ADD HL, SP	;
450)   19AE F9          		 LD SP, HL	;
451)   19AF EB          		 EX DE, HL	;
452)   19B0 E9          		 JP (HL)	;
456)   19B1 DD 21 02 00 		 LD IX, 2	;
457)   19B5 DD 39       		 ADD IX, SP	;
467)   19B7 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
468)   19BA DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
469)   19BD DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
470)   19C0 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
471)   19C3 B7          		 OR A	;
472)   19C4 ED 52       		 SBC HL, DE	;
473)   19C6 20 17       		 JR NZ, YNOTEQ	;
475)   19C8 DD 46 07    		 LD B, (IX + 7)        ;X1	;X1
476)   19CB DD 4E 06    		 LD C, (IX + 6)        ;X1	;X1
477)   19CE C5          		 PUSH BC        ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
478)   19CF D5          		 PUSH DE        ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
479)   19D0 DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
480)   19D3 DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
481)   19D6 ED 42       		 SBC HL, BC        ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
482)   19D8 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
483)   19D9 CD 1D 19    		 CALL LCD_DRAWHLINE	;
484)   19DC C3 8C 1B    		 JP DLNEX	;
486)   19DF DD 66 07    		 LD H, (IX + 7)        ;X1	;X1
487)   19E2 DD 6E 06    		 LD L, (IX + 6)        ;X1	;X1
488)   19E5 DD 56 03    		 LD D, (IX + 3)        ;X2	;X2
489)   19E8 DD 5E 02    		 LD E, (IX + 2)        ;X2	;X2
490)   19EB B7          		 OR A	;
491)   19EC ED 52       		 SBC HL, DE	;
492)   19EE 20 17       		 JR NZ, XNOTEQ	;
494)   19F0 D5          		 PUSH DE        ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
495)   19F1 DD 46 05    		 LD B, (IX + 5)        ;Y1	;Y1
496)   19F4 DD 4E 04    		 LD C, (IX + 4)        ;Y1	;Y1
497)   19F7 C5          		 PUSH BC        ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
498)   19F8 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
499)   19FB DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
500)   19FE ED 42       		 SBC HL, BC        ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
501)   1A00 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
502)   1A01 CD 67 19    		 CALL LCD_DRAWVLINE	;
503)   1A04 C3 8C 1B    		 JP DLNEX	;
506)   1A07 38 04       		 JR C, X2GTX1	;
508)   1A09 AF          		 XOR A	;
509)   1A0A 3D          		 DEC A         ;XSTEP=-1	;XSTEP=-1
510)   1A0B 18 0D       		 JR DLNXT1	;
513)   1A0D D5          		 PUSH DE	;
514)   1A0E E1          		 POP HL	;
515)   1A0F DD 56 07    		 LD D, (IX + 7)        ;X1	;X1
516)   1A12 DD 5E 06    		 LD E, (IX + 6)        ;X1	;X1
517)   1A15 B7          		 OR A	;
518)   1A16 ED 52       		 SBC HL, DE        ;X2-X1 ON HL	;X2-X1 ON HL
520)   1A18 3E 01       		 LD A, 1        ;XSTEP=1	;XSTEP=1
522)   1A1A 06 00       		 LD B, 0	;
523)   1A1C 0E 00       		 LD C, 0	;
524)   1A1E C5          		 PUSH BC        ;T	;T
525)   1A1F E5          		 PUSH HL        ;DX	;DX
526)   1A20 FE 01       		 CP 1	;
527)   1A22 28 02       		 JR Z, DLXMINUS1	;
528)   1A24 06 FF       		 LD B, 0XFF	;
529)   1A26 4F          		DLXMINUS1: LD C, A	;
530)   1A27 C5          		 PUSH BC        ;XSTEP	;XSTEP
531)   1A28 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
532)   1A2B DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
533)   1A2E DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
534)   1A31 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
535)   1A34 B7          		 OR A	;
536)   1A35 ED 52       		 SBC HL, DE	;
537)   1A37 38 04       		 JR C, Y2GTY1        ;HL=Y1-Y2	;HL=Y1-Y2
538)   1A39 AF          		 XOR A	;
539)   1A3A 3D          		 DEC A         ;YSTEP=-1	;YSTEP=-1
540)   1A3B 18 0F       		 JR DLNXT2	;
543)   1A3D D5          		 PUSH DE	;
544)   1A3E E1          		 POP HL	;
545)   1A3F DD 56 05    		 LD D, (IX + 5)        ;Y1	;Y1
546)   1A42 DD 5E 04    		 LD E, (IX + 4)        ;Y1	;Y1
547)   1A45 B7          		 OR A	;
548)   1A46 ED 52       		 SBC HL, DE        ;HL=Y2-Y1    HL=DY	;HL=Y2-Y1    HL=DY
549)   1A48 06 00       		 LD B, 0	;
550)   1A4A 3E 01       		 LD A, 1        ;YSTEP=1	;YSTEP=1
552)   1A4C FE 01       		 CP 1	;
553)   1A4E 28 02       		 JR Z, DLYMINUS1	;
554)   1A50 06 FF       		 LD B, 0XFF	;
556)   1A52 4F          		 LD C, A	;
557)   1A53 E5          		 PUSH HL        ;DY	;DY
558)   1A54 C5          		 PUSH BC        ;YSTEP	;YSTEP
559)   1A55 FD 21 00 00 		 LD IY, 0	;
560)   1A59 FD 39       		 ADD IY, SP	;
575)   1A5B FD 56 07    		 LD D, (IY + 7)        ;DX	;DX
576)   1A5E FD 5E 06    		 LD E, (IY + 6)        ;DX	;DX
577)   1A61 B7          		 OR A	;
578)   1A62 ED 52       		 SBC HL, DE        ;DY-DX	;DY-DX
579)   1A64 DA F9 1A    		 JP C, DXGTDY	;
580)   1A67 CA F9 1A    		 JP Z, DXGTDY	;
582)   1A6A 19          		 ADD HL, DE        ;HL=DY	;HL=DY
583)   1A6B 44          		 LD B, H	;
584)   1A6C 4D          		 LD C, L	;
585)   1A6D CB 38       		 SRL B	;
586)   1A6F CB 19       		 RR C         ;(dy >> 1)	;(dy >> 1)
587)   1A71 21 00 00    		 LD HL, 0	;
588)   1A74 ED 42       		 SBC HL, BC        ;t = - (dy >> 1);	;t = - (dy >> 1);
589)   1A76 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
590)   1A79 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
592)   1A7C DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
593)   1A7F DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
594)   1A82 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
595)   1A85 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
596)   1A88 D5          		 PUSH DE	;
597)   1A89 DD E5       		 PUSH IX	;
598)   1A8B E5          		 PUSH HL	;
599)   1A8C D5          		 PUSH DE	;
600)   1A8D E5          		 PUSH HL	;
601)   1A8E D5          		 PUSH DE	;
602)   1A8F CD 57 18    		 CALL LCD_SETXY	;
603)   1A92 2A 01 FE    		 LD HL, (FCOLOR)	;
604)   1A95 CD A4 18    		 CALL LCD_SETPIXEL	;
605)   1A98 DD E1       		 POP IX	;
606)   1A9A D1          		 POP DE	;
607)   1A9B DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
608)   1A9E DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
609)   1AA1 ED 52       		 SBC HL, DE        ; ROW=Y2	; ROW=Y2
610)   1AA3 CA 87 1B    		 JP Z, DLEXIT	;
611)   1AA6 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
612)   1AA9 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
613)   1AAC EB          		 EX DE, HL	;
614)   1AAD 09          		 ADD HL, BC        ;row += ystep;	;row += ystep;
615)   1AAE DD 74 05    		 LD (IX + 5), H        ;SAVE ROW	;SAVE ROW
616)   1AB1 DD 75 04    		 LD (IX + 4), L        ;	;
618)   1AB4 FD 56 09    		 LD D, (IY + 9)        ; T	; T
619)   1AB7 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
620)   1ABA FD 66 07    		 LD H, (IY + 7)        ;DX	;DX
621)   1ABD FD 6E 06    		 LD L, (IY + 6)        ;DX	;DX
622)   1AC0 19          		 ADD HL, DE	;
623)   1AC1 FD 74 09    		 LD (IY + 9), H        ;t += dx;	;t += dx;
624)   1AC4 FD 75 08    		 LD (IY + 8), L	;
625)   1AC7 EB          		 EX DE, HL	;
626)   1AC8 21 00 80    		 LD HL, $8000	;
627)   1ACB ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
628)   1ACD 38 AD       		 JR C, DLAGN1        ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
629)   1ACF FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
630)   1AD2 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
631)   1AD5 DD 66 07    		 LD H, (IX + 7)        ;COL HI	;COL HI
632)   1AD8 DD 6E 06    		 LD L, (IX + 6)        ;COL LO	;COL LO
633)   1ADB 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
634)   1ADC DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
635)   1ADF DD 75 06    		 LD (IX + 6), L        ;	;
637)   1AE2 FD 66 09    		 LD H, (IY + 9)        ; T	; T
638)   1AE5 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
639)   1AE8 FD 46 03    		 LD B, (IY + 3)        ;DY	;DY
640)   1AEB FD 4E 02    		 LD C, (IY + 2)        ;DY	;DY
641)   1AEE ED 42       		 SBC HL, BC	;
642)   1AF0 FD 74 09    		 LD (IY + 9), H        ;t -= dY;	;t -= dY;
643)   1AF3 FD 75 08    		 LD (IY + 8), L	;
644)   1AF6 C3 7C 1A    		 JP DLAGN1	;
646)   1AF9 19          		 ADD HL, DE        ;HL=DY DE=DX	;HL=DY DE=DX
647)   1AFA 42          		 LD B, D	;
648)   1AFB 4B          		 LD C, E	;
649)   1AFC CB 38       		 SRL B	;
650)   1AFE CB 19       		 RR C         ;(dX >> 1)	;(dX >> 1)
651)   1B00 21 00 00    		 LD HL, 0	;
652)   1B03 ED 42       		 SBC HL, BC        ;t = - (dX >> 1);	;t = - (dX >> 1);
653)   1B05 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
654)   1B08 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
656)   1B0B DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
657)   1B0E DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
658)   1B11 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
659)   1B14 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
660)   1B17 E5          		 PUSH HL        ;SAVE COL	;SAVE COL
661)   1B18 DD E5       		 PUSH IX	;
662)   1B1A E5          		 PUSH HL	;
663)   1B1B D5          		 PUSH DE	;
664)   1B1C E5          		 PUSH HL	;
665)   1B1D D5          		 PUSH DE	;
666)   1B1E CD 57 18    		 CALL LCD_SETXY	;
667)   1B21 2A 01 FE    		 LD HL, (FCOLOR)	;
668)   1B24 CD A4 18    		 CALL LCD_SETPIXEL	;
669)   1B27 DD E1       		 POP IX	;
670)   1B29 D1          		 POP DE         ;RETRIEVE COL	;RETRIEVE COL
671)   1B2A DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
672)   1B2D DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
673)   1B30 ED 52       		 SBC HL, DE        ; COL=X2?	; COL=X2?
674)   1B32 28 53       		 JR Z, DLEXIT	;
675)   1B34 EB          		 EX DE, HL        ;HL=COL	;HL=COL
676)   1B35 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
677)   1B38 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
678)   1B3B 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
679)   1B3C DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
680)   1B3F DD 75 06    		 LD (IX + 6), L        ;	;
681)   1B42 FD 56 09    		 LD D, (IY + 9)        ; T	; T
682)   1B45 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
683)   1B48 FD 66 03    		 LD H, (IY + 3)        ;DY	;DY
684)   1B4B FD 6E 02    		 LD L, (IY + 2)        ;DY	;DY
685)   1B4E 19          		 ADD HL, DE	;
686)   1B4F FD 74 09    		 LD (IY + 9), H        ;t += dY;	;t += dY;
687)   1B52 FD 75 08    		 LD (IY + 8), L	;
688)   1B55 EB          		 EX DE, HL        ;T=DE	;T=DE
689)   1B56 21 00 80    		 LD HL, $8000	;
690)   1B59 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
691)   1B5B 38 AE       		 JR C, DLAGN2        ;CARRY SET IF NEGATIVE	;CARRY SET IF NEGATIVE
692)   1B5D FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
693)   1B60 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
694)   1B63 DD 66 05    		 LD H, (IX + 5)        ;ROW HI	;ROW HI
695)   1B66 DD 6E 04    		 LD L, (IX + 4)        ;ROW LO	;ROW LO
696)   1B69 09          		 ADD HL, BC        ;ROW += Ystep;	;ROW += Ystep;
697)   1B6A DD 74 05    		 LD (IX + 5), H        ;SAVE COL	;SAVE COL
698)   1B6D DD 75 04    		 LD (IX + 4), L        ;	;
700)   1B70 FD 66 09    		 LD H, (IY + 9)        ; T	; T
701)   1B73 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
702)   1B76 FD 46 07    		 LD B, (IY + 7)        ;DX	;DX
703)   1B79 FD 4E 06    		 LD C, (IY + 6)        ;DX	;DX
704)   1B7C ED 42       		 SBC HL, BC	;
705)   1B7E FD 74 09    		 LD (IY + 9), H        ;t -= dX;	;t -= dX;
706)   1B81 FD 75 08    		 LD (IY + 8), L	;
707)   1B84 C3 0B 1B    		 JP DLAGN2	;
710)   1B87 21 0A 00    		 LD HL, 5 * 2        ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
711)   1B8A 39          		 ADD HL, SP        ;	;
712)   1B8B F9          		 LD SP, HL	;
713)   1B8C D1          		DLNEX: POP DE         ;RET ADDR	;RET ADDR
714)   1B8D 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
715)   1B90 39          		 ADD HL, SP	;
716)   1B91 F9          		 LD SP, HL	;
717)   1B92 EB          		 EX DE, HL	;
718)   1B93 E9          		 JP (HL)	;
723)   1B94 C5          		@PLOTP: PUSH BC        ;SAVE BC	;SAVE BC
724)   1B95 DD E5       		 PUSH IX	;
726)   1B97 D5          		 PUSH DE	;
727)   1B98 E5          		 PUSH HL	;
728)   1B99 D5          		 PUSH DE	;
729)   1B9A E5          		 PUSH HL	;
730)   1B9B CD 57 18    		 CALL LCD_SETXY	;
731)   1B9E 2A 01 FE    		 LD HL, (FCOLOR)	;
732)   1BA1 CD A4 18    		 CALL LCD_SETPIXEL	;
734)   1BA4 DD E1       		 POP IX	;
735)   1BA6 C1          		 POP BC         ;RESTORE BC	;RESTORE BC
736)   1BA7 C9          		 RET	;
741)   1BA8 E1          		 POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
742)   1BA9 D5          		 PUSH DE        ;F VAR	;F VAR
743)   1BAA D5          		 PUSH DE        ;DDF_X	;DDF_X
744)   1BAB D5          		 PUSH DE        ;DDF_Y	;DDF_Y
745)   1BAC D5          		 PUSH DE        ;X1	;X1
746)   1BAD D5          		 PUSH DE        ;Y1	;Y1
747)   1BAE E5          		 PUSH HL        ;RET ADDR	;RET ADDR
748)   1BAF DD 21 02 00 		 LD IX, 2	;
749)   1BB3 DD 39       		 ADD IX, SP	;
767)   1BB5 AF          		 XOR A	;
768)   1BB6 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
769)   1BB9 DD 5E 0A    		 LD E, (IX + 10)       ;R	;R
770)   1BBC DD 72 01    		 LD (IX + 1), D        ;Y1=R	;Y1=R
771)   1BBF DD 73 00    		 LD (IX + 0), E	;
772)   1BC2 21 01 00    		 LD HL, 1	;
773)   1BC5 DD 74 07    		 LD (IX + 7), H        ;DDF_X=1	;DDF_X=1
774)   1BC8 DD 75 06    		 LD (IX + 6), L	;
775)   1BCB DD 74 03    		 LD (IX + 3), H        ;X1=0	;X1=0
776)   1BCE DD 74 02    		 LD (IX + 2), H	;
777)   1BD1 ED 52       		 SBC HL, DE	;
778)   1BD3 DD 74 09    		 LD (IX + 9), H        ;F	;F
779)   1BD6 DD 75 08    		 LD (IX + 8), L        ;F	;F
781)   1BD9 EB          		 EX DE, HL        ;HL=RADIUS	;HL=RADIUS
782)   1BDA 29          		 ADD HL, HL        ;2*R	;2*R
783)   1BDB EB          		 EX DE, HL	;
784)   1BDC 21 00 00    		 LD HL, 0	;
785)   1BDF ED 52       		 SBC HL, DE        ;-2*R	;-2*R
786)   1BE1 DD 74 05    		 LD (IX + 5), H	;
787)   1BE4 DD 75 04    		 LD (IX + 4), L        ;DDF_Y	;DDF_Y
789)   1BE7 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
790)   1BEA DD 6E 0C    		 LD L, (IX + 12)	;
791)   1BED E5          		 PUSH HL        ;SAVE Y	;SAVE Y
792)   1BEE DD 56 0B    		 LD D, (IX + 11)       ;R	;R
793)   1BF1 DD 5E 0A    		 LD E, (IX + 10)	;
794)   1BF4 D5          		 PUSH DE        ;SAVE R	;SAVE R
795)   1BF5 19          		 ADD HL, DE        ;Y+R	;Y+R
796)   1BF6 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
797)   1BF9 DD 5E 0E    		 LD E, (IX + 14)	;
798)   1BFC D5          		 PUSH DE        ;SAVE X	;SAVE X
800)   1BFD CD 94 1B    		 CALL PLOTP	;
802)   1C00 D1          		 POP DE         ;GET X	;GET X
803)   1C01 C1          		 POP BC         ;GET R	;GET R
804)   1C02 E1          		 POP HL         ;GET Y	;GET Y
805)   1C03 E5          		 PUSH HL        ;SAVE VARS	;SAVE VARS
806)   1C04 C5          		 PUSH BC	;
807)   1C05 D5          		 PUSH DE	;
808)   1C06 AF          		 XOR A	;
809)   1C07 ED 42       		 SBC HL, BC        ;	;
811)   1C09 CD 94 1B    		 CALL PLOTP	;
813)   1C0C E1          		 POP HL         ;GET X	;GET X
814)   1C0D C1          		 POP BC         ;GET R	;GET R
815)   1C0E D1          		 POP DE         ;GET Y	;GET Y
816)   1C0F D5          		 PUSH DE        ;SAVE VARS	;SAVE VARS
817)   1C10 C5          		 PUSH BC	;
818)   1C11 E5          		 PUSH HL	;
819)   1C12 AF          		 XOR A	;
820)   1C13 ED 4A       		 ADC HL, BC	;
821)   1C15 EB          		 EX DE, HL	;
823)   1C16 CD 94 1B    		 CALL PLOTP	;
825)   1C19 E1          		 POP HL         ;GET X	;GET X
826)   1C1A C1          		 POP BC         ;GET R	;GET R
827)   1C1B D1          		 POP DE         ;GET Y	;GET Y
828)   1C1C AF          		 XOR A	;
829)   1C1D ED 42       		 SBC HL, BC	;
830)   1C1F EB          		 EX DE, HL	;
832)   1C20 CD 94 1B    		 CALL PLOTP	;
835)   1C23 DD 66 03    		CIRC_AGN: LD H, (IX + 3)       ;X1	;X1
836)   1C26 DD 6E 02    		 LD L, (IX + 2)        ;X1	;X1
837)   1C29 DD 56 01    		 LD D, (IX + 1)        ;Y1	;Y1
838)   1C2C DD 5E 00    		 LD E, (IX + 0)        ;Y1	;Y1
839)   1C2F AF          		 XOR A	;
840)   1C30 ED 52       		 SBC HL, DE	;
841)   1C32 D2 21 1D    		 JP NC, CIRC_EXIT	;
843)   1C35 19          		 ADD HL, DE	;
844)   1C36 E5          		 PUSH HL        ;SAVE X1	;SAVE X1
845)   1C37 D5          		 PUSH DE        ;SAVE Y1	;SAVE Y1
846)   1C38 21 00 00    		 LD HL, 0	;
847)   1C3B AF          		 XOR A	;
850)   1C3C DD 7E 09    		 LD A, (IX + 9)        ;F HI BYTE	;F HI BYTE
851)   1C3F FE 50       		 CP 80	;
852)   1C41 30 26       		 JR NC, CIRC_SKIP	;
853)   1C43 28 24       		 JR Z, CIRC_SKIP	;
857)   1C45 D1          		 POP DE         ;Y1	;Y1
858)   1C46 1B          		 DEC DE	;
859)   1C47 DD 72 01    		 LD (IX + 1), D        ;SAVE Y1	;SAVE Y1
860)   1C4A DD 73 00    		 LD (IX + 0), E	;
861)   1C4D D5          		 PUSH DE        ;Y1	;Y1
862)   1C4E DD 66 05    		 LD H, (IX + 5)        ;DDF_Y	;DDF_Y
863)   1C51 DD 6E 04    		 LD L, (IX + 4)	;
864)   1C54 23          		 INC HL	;
865)   1C55 23          		 INC HL	;
866)   1C56 DD 74 05    		 LD (IX + 5), H        ;SAVE DDF_Y	;SAVE DDF_Y
867)   1C59 DD 75 04    		 LD (IX + 4), L	;
868)   1C5C DD 56 09    		 LD D, (IX + 9)        ;F	;F
869)   1C5F DD 5E 08    		 LD E, (IX + 8)	;
870)   1C62 19          		 ADD HL, DE	;
871)   1C63 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
872)   1C66 DD 75 08    		 LD (IX + 8), L	;
876)   1C69 C1          		 POP BC         ;Y1	;Y1
877)   1C6A E1          		 POP HL         ;X1	;X1
878)   1C6B 23          		 INC HL	;
879)   1C6C DD 74 03    		 LD (IX + 3), H        ;SAVE X1	;SAVE X1
880)   1C6F DD 75 02    		 LD (IX + 2), L	;
881)   1C72 E5          		 PUSH HL        ;X1	;X1
882)   1C73 DD 66 07    		 LD H, (IX + 7)        ;DDF_X	;DDF_X
883)   1C76 DD 6E 06    		 LD L, (IX + 6)	;
884)   1C79 23          		 INC HL	;
885)   1C7A 23          		 INC HL	;
886)   1C7B DD 74 07    		 LD (IX + 7), H        ;SAVE DDF_X	;SAVE DDF_X
887)   1C7E DD 75 06    		 LD (IX + 6), L	;
888)   1C81 DD 56 09    		 LD D, (IX + 9)        ;F	;F
889)   1C84 DD 5E 08    		 LD E, (IX + 8)	;
890)   1C87 19          		 ADD HL, DE	;
891)   1C88 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
892)   1C8B DD 75 08    		 LD (IX + 8), L	;
895)   1C8E E1          		 POP HL         ;X1	;X1
896)   1C8F E5          		 PUSH HL	;
897)   1C90 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
898)   1C93 DD 5E 0E    		 LD E, (IX + 14)	;
899)   1C96 D5          		 PUSH DE	;
900)   1C97 19          		 ADD HL, DE	;
901)   1C98 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
902)   1C99 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
903)   1C9C DD 6E 0C    		 LD L, (IX + 12)	;
904)   1C9F 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
906)   1CA0 CD 94 1B    		 CALL PLOTP	;
908)   1CA3 E1          		 POP HL         ;X	;X
909)   1CA4 D1          		 POP DE         ;X1	;X1
910)   1CA5 D5          		 PUSH DE	;
911)   1CA6 E5          		 PUSH HL	;
912)   1CA7 AF          		 XOR A	;
913)   1CA8 ED 52       		 SBC HL, DE	;
914)   1CAA EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
915)   1CAB DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
916)   1CAE DD 6E 0C    		 LD L, (IX + 12)	;
917)   1CB1 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
919)   1CB2 CD 94 1B    		 CALL PLOTP	;
921)   1CB5 E1          		 POP HL         ;X	;X
922)   1CB6 D1          		 POP DE         ;X1	;X1
923)   1CB7 D5          		 PUSH DE	;
924)   1CB8 E5          		 PUSH HL	;
925)   1CB9 19          		 ADD HL, DE	;
926)   1CBA EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
927)   1CBB DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
928)   1CBE DD 6E 0C    		 LD L, (IX + 12)	;
929)   1CC1 AF          		 XOR A	;
930)   1CC2 ED 42       		 SBC HL, BC        ;HL=Y+Y1	;HL=Y+Y1
932)   1CC4 CD 94 1B    		 CALL PLOTP	;
934)   1CC7 E1          		 POP HL         ;X	;X
935)   1CC8 D1          		 POP DE         ;X1	;X1
936)   1CC9 D5          		 PUSH DE	;
937)   1CCA E5          		 PUSH HL	;
938)   1CCB AF          		 XOR A	;
939)   1CCC ED 52       		 SBC HL, DE	;
940)   1CCE EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
941)   1CCF DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
942)   1CD2 DD 6E 0C    		 LD L, (IX + 12)	;
943)   1CD5 AF          		 XOR A	;
944)   1CD6 ED 42       		 SBC HL, BC        ;HL=Y-Y1	;HL=Y-Y1
946)   1CD8 CD 94 1B    		 CALL PLOTP	;
948)   1CDB E1          		 POP HL         ;X	;X
949)   1CDC D1          		 POP DE         ;X1	;X1
950)   1CDD C5          		 PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
951)   1CDE E5          		 PUSH HL        ;SAVE X	;SAVE X
952)   1CDF D5          		 PUSH DE        ;SAVE X1	;SAVE X1
953)   1CE0 09          		 ADD HL, BC        ;	;
954)   1CE1 C1          		 POP BC         ;BC=X1	;BC=X1
955)   1CE2 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
956)   1CE3 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
957)   1CE6 DD 6E 0C    		 LD L, (IX + 12)	;
958)   1CE9 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
960)   1CEA CD 94 1B    		 CALL PLOTP	;
962)   1CED E1          		 POP HL         ;X	;X
963)   1CEE D1          		 POP DE         ;Y1	;Y1
964)   1CEF D5          		 PUSH DE	;
965)   1CF0 E5          		 PUSH HL	;
966)   1CF1 AF          		 XOR A	;
967)   1CF2 ED 52       		 SBC HL, DE	;
968)   1CF4 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
969)   1CF5 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
970)   1CF8 DD 6E 0C    		 LD L, (IX + 12)	;
971)   1CFB 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
973)   1CFC CD 94 1B    		 CALL PLOTP	;
975)   1CFF E1          		 POP HL         ;X	;X
976)   1D00 D1          		 POP DE         ;Y1	;Y1
977)   1D01 D5          		 PUSH DE	;
978)   1D02 E5          		 PUSH HL	;
979)   1D03 19          		 ADD HL, DE	;
980)   1D04 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
981)   1D05 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
982)   1D08 DD 6E 0C    		 LD L, (IX + 12)	;
983)   1D0B AF          		 XOR A	;
984)   1D0C ED 42       		 SBC HL, BC        ;HL=Y-X1	;HL=Y-X1
985)   1D0E E5          		 PUSH HL	;
987)   1D0F CD 94 1B    		 CALL PLOTP	;
989)   1D12 C1          		 POP BC         ;Y-X1	;Y-X1
990)   1D13 E1          		 POP HL         ;X	;X
991)   1D14 D1          		 POP DE         ;Y1	;Y1
992)   1D15 AF          		 XOR A	;
993)   1D16 ED 52       		 SBC HL, DE	;
994)   1D18 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
995)   1D19 C5          		 PUSH BC	;
996)   1D1A E1          		 POP HL         ;HL=Y-X1	;HL=Y-X1
998)   1D1B CD 94 1B    		 CALL PLOTP	;
999)   1D1E C3 23 1C    		 JP CIRC_AGN	;
1000)   1D21 CD 0C 19    		CIRC_EXIT: CALL LCD_CLRXY	;
1001)   1D24 D1          		 POP DE         ;GET RET ADDR	;GET RET ADDR
1002)   1D25 21 10 00    		 LD HL, 8 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
1003)   1D28 39          		 ADD HL, SP        ;	;
1004)   1D29 F9          		 LD SP, HL	;
1005)   1D2A EB          		 EX DE, HL	;
1006)   1D2B E9          		 JP (HL)	;
1013)   1D2C D9          		 EXX	;
1014)   1D2D D1          		 POP DE         ;save return addr to de'	;save return addr to de'
1015)   1D2E D9          		 EXX	;
1016)   1D2F CD EE 1F    		 CALL _FILL	;
1017)   1D32 D9          		 EXX	;
1018)   1D33 D5          		 PUSH DE        ;restore return addr from de'	;restore return addr from de'
1019)   1D34 D9          		 EXX	;
1020)   1D35 C9          		 RET	;
1026)   1D36 FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
1027)   1D38 28 0D       		 JR Z, PRCHOS_DOBCKSPC	;
1028)   1D3A FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
1029)   1D3C C8          		 RET Z	;
1030)   1D3D FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
1031)   1D3F 20 5C       		 JR NZ, PRCH_DOPRN	;
1032)   1D41 21 0D FE    		 LD HL, CURSORX	;
1033)   1D44 C3 B6 1E    		 JP PRCH_NEWLN	;
1035)   1D47 21 0D FE    		 LD HL, CURSORX	;
1036)   1D4A 7E          		 LD A, (HL)    	;
1037)   1D4B FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1038)   1D4D C8          		 RET Z	;
1039)   1D4E 35          		 DEC (HL)	;
1040)   1D4F E5          		 PUSH HL	;
1041)   1D50 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
1042)   1D52 CD 9D 1D    		 CALL PRCH_DOPRN 	;
1043)   1D55 E1          		 POP HL	;
1044)   1D56 35          		 DEC (HL)	;
1045)   1D57 C9          		 RET	;
1054)   1D58 FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
1055)   1D5A 28 0D       		 JR Z, PRCH_DOBCKSPC	;
1056)   1D5C FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
1057)   1D5E C8          		 RET Z	;
1058)   1D5F FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
1059)   1D61 20 3A       		 JR NZ, PRCH_DOPRN	;
1060)   1D63 21 0D FE    		 LD HL, CURSORX	;
1061)   1D66 C3 B6 1E    		 JP PRCH_NEWLN	;
1063)   1D69 21 0D FE    		 LD HL, CURSORX	;
1064)   1D6C 7E          		 LD A, (HL)  	;
1065)   1D6D 38 05       		 JR C, DOREALBCKSPC	;
1067)   1D6F FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1068)   1D71 C8          		 RET Z	;
1069)   1D72 35          		 DEC (HL)	;
1070)   1D73 C9          		 RET	;
1072)   1D74 FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1073)   1D76 28 0A       		 JR Z, PRCH_DOBCKSPC2       ;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER	;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER
1074)   1D78 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1075)   1D79 E5          		 PUSH HL	;
1076)   1D7A 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
1077)   1D7C CD 9D 1D    		 CALL PRCH_DOPRN       ;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN	;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN
1078)   1D7F E1          		 POP HL	;
1079)   1D80 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1080)   1D81 B7          		 OR A	;
1084)   1D82 DD 21 02 00 		 LD IX, 2	;
1085)   1D86 DD 39       		 ADD IX, SP	;
1086)   1D88 DD 66 01    		 LD H, (IX + 1)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1087)   1D8B DD 6E 00    		 LD L, (IX)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1088)   1D8E 3E 00       		 LD A, 0        ;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG	;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG
1089)   1D90 28 02       		 JR Z, PRCH_SKIP1       ;WE ARE ON COLUMN 1	;WE ARE ON COLUMN 1
1090)   1D92 2B          		 DEC HL         ;PREVIOUS POSITION DELETE BACKSPACE	;PREVIOUS POSITION DELETE BACKSPACE
1091)   1D93 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1093)   1D94 2B          		 DEC HL         ;PREVIOUS POSITION DELETE PREVIOUS CHAR	;PREVIOUS POSITION DELETE PREVIOUS CHAR
1094)   1D95 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1095)   1D96 DD 74 01    		 LD (IX + 1), H        ;PUT POSITION BACK ON STACK IT WILL POPED	;PUT POSITION BACK ON STACK IT WILL POPED
1096)   1D99 DD 75 00    		 LD (IX), L	;
1097)   1D9C C9          		 RET	;
1100)   1D9D F5          		 PUSH AF        ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
1101)   1D9E 32 10 FE    		 LD (LASTCHAR), A       ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
1105)   1DA1 3A 16 FE    		 LD A, (VDUMODE)	;
1106)   1DA4 FE 05       		 CP 5	;
1107)   1DA6 20 19       		 JR NZ, VDU4	;
1108)   1DA8 2A 5F FE    		 LD HL, (GR_LASTX)	;
1109)   1DAB E5          		 PUSH HL	;
1110)   1DAC ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
1111)   1DB0 D5          		 PUSH DE	;
1112)   1DB1 01 07 00    		 LD BC, FONT_WIDTH - 1	;
1113)   1DB4 09          		 ADD HL, BC	;
1114)   1DB5 E5          		 PUSH HL	;
1115)   1DB6 01 09 00    		 LD BC, FONT_HEIGHT - 1	;
1116)   1DB9 EB          		 EX DE, HL	;
1117)   1DBA 09          		 ADD HL, BC	;
1118)   1DBB E5          		 PUSH HL	;
1119)   1DBC CD 57 18    		 CALL LCD_SETXY	;
1120)   1DBF 18 34       		 JR PRCHDO	;
1121)   1DC1 3A 0D FE    		VDU4: LD A, (CURSORX)	;
1122)   1DC4 06 08       		 LD B, FONT_WIDTH	;
1123)   1DC6 16 00       		 LD D, 0	;
1124)   1DC8 5F          		 LD E, A	;
1125)   1DC9 21 00 00    		 LD HL, 0	;
1126)   1DCC B7          		 OR A         ; CLEAR CARRY	; CLEAR CARRY
1128)   1DCD ED 5A       		 ADC HL, DE	;
1129)   1DCF 10 FC       		 DJNZ PRCH_AGN1        ;HL=DE*B	;HL=DE*B
1130)   1DD1 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1131)   1DD2 11 08 00    		 LD DE, FONT_WIDTH	;
1132)   1DD5 ED 5A       		 ADC HL, DE	;
1133)   1DD7 2B          		 DEC HL	;
1134)   1DD8 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1136)   1DD9 CD 2B 1E    		 CALL LCD_CALCLINE       ;SCROLL CALC	;SCROLL CALC
1137)   1DDC 06 0A       		 LD B, FONT_HEIGHT	;
1138)   1DDE 16 00       		 LD D, 0	;
1139)   1DE0 5F          		 LD E, A	;
1140)   1DE1 21 00 00    		 LD HL, 0	;
1142)   1DE4 ED 5A       		 ADC HL, DE	;
1143)   1DE6 10 FC       		 DJNZ PRCH_AGN2	;
1144)   1DE8 D1          		 POP DE         ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
1145)   1DE9 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1146)   1DEA D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1147)   1DEB 11 0A 00    		 LD DE, FONT_HEIGHT	;
1148)   1DEE ED 5A       		 ADC HL, DE        ;CALC 4TH PARAM	;CALC 4TH PARAM
1149)   1DF0 2B          		 DEC HL         ;4TH PARAM -1	;4TH PARAM -1
1150)   1DF1 E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1151)   1DF2 CD 57 18    		 CALL LCD_SETXY	;
1152)   1DF5 F1          		PRCHDO: POP AF         ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
1153)   1DF6 B7          		 OR A	;
1154)   1DF7 21 00 36    		 LD HL, FONT_ADDR	;
1155)   1DFA 16 00       		 LD D, 0	;
1156)   1DFC 5F          		 LD E, A	;
1157)   1DFD ED 5A       		 ADC HL, DE        ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
1158)   1DFF E5          		 PUSH HL	;
1159)   1E00 D1          		 POP DE         ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
1160)   1E01 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
1162)   1E03 1A          		 LD A, (DE)        ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1163)   1E04 06 08       		 LD B, FONT_WIDTH	;
1165)   1E06 CB 27       		 SLA A         ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1166)   1E08 38 05       		 JR C, FORECOLOR	;
1167)   1E0A 2A 03 FE    		 LD HL, (BCOLOR)	;
1168)   1E0D 18 03       		 JR PRCH_CONT	;
1170)   1E0F 2A 01 FE    		 LD HL, (FCOLOR)	;
1172)   1E12 F5          		 PUSH AF	;
1173)   1E13 D5          		 PUSH DE        ;TODO:PROBABLY NOT NEEDED HERE	;TODO:PROBABLY NOT NEEDED HERE
1174)   1E14 CD A4 18    		 CALL LCD_SETPIXEL	;
1175)   1E17 D1          		 POP DE	;
1176)   1E18 F1          		 POP AF	;
1177)   1E19 10 EB       		 DJNZ PRCH_AGN4	;
1178)   1E1B 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1179)   1E1C 0D          		 DEC C	;
1180)   1E1D 20 E4       		 JR NZ, PRCH_AGN3	;
1182)   1E1F 21 0D FE    		 LD HL, CURSORX	;
1183)   1E22 7E          		 LD A, (HL)	;
1184)   1E23 3C          		 INC A	;
1185)   1E24 FE 50       		 CP 80	;
1186)   1E26 CA B6 1E    		 JP Z, PRCH_NEWLN       ;NEW LINE	;NEW LINE
1187)   1E29 77          		 LD (HL), A	;
1188)   1E2A C9          		 RET	;
1191)   1E2B 3A 0F FE    		@LCD_CALCLINE: LD A, (SCRLN)	;
1192)   1E2E 57          		 LD D, A	;
1193)   1E2F 3A 0E FE    		 LD A, (CURSORY)       ;480/10 MAKES 48 LINES	;480/10 MAKES 48 LINES
1194)   1E32 82          		 ADD A, D	;
1195)   1E33 FE 30       		 CP TOTLINES	;
1196)   1E35 D8          		 RET C	;
1198)   1E36 D6 30       		 SUB TOTLINES	;
1199)   1E38 C9          		 RET	;
1204)   1E39 16 33       		LCD_SETSCROLL: LD D, 0x33	;
1205)   1E3B CD DE 16    		 CALL LCD_WR_COM	;
1206)   1E3E 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
1207)   1E40 CD DA 16    		 CALL LCD_WR_DAT	;
1208)   1E43 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
1209)   1E45 CD DA 16    		 CALL LCD_WR_DAT	;
1210)   1E48 16 01       		 LD D, 0X01        ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
1211)   1E4A CD DA 16    		 CALL LCD_WR_DAT	;
1212)   1E4D 16 E0       		 LD D, 0XE0        ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
1213)   1E4F CD DA 16    		 CALL LCD_WR_DAT	;
1214)   1E52 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
1215)   1E54 CD DA 16    		 CALL LCD_WR_DAT	;
1216)   1E57 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
1217)   1E59 CD DA 16    		 CALL LCD_WR_DAT	;
1218)   1E5C AF          		 XOR A	;
1219)   1E5D 32 0F FE    		 LD (SCRLN), A	;
1220)   1E60 C9          		 RET	;
1223)   1E61 3A 0F FE    		@LCD_DOSCROLL: LD A, (SCRLN)	;
1224)   1E64 3C          		 INC A	;
1225)   1E65 FE 30       		 CP TOTLINES	;
1226)   1E67 38 02       		 JR C, DS_NXT	;
1227)   1E69 D6 30       		 SUB TOTLINES	;
1228)   1E6B 32 0F FE    		DS_NXT: LD (SCRLN), A	;
1229)   1E6E 6F          		 LD L, A	;
1230)   1E6F 26 00       		 LD H, 0	;
1231)   1E71 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1232)   1E72 29          		 ADD HL, HL	;
1233)   1E73 29          		 ADD HL, HL	;
1234)   1E74 5F          		 LD E, A	;
1235)   1E75 16 00       		 LD D, 0	;
1236)   1E77 19          		 ADD HL, DE	;
1237)   1E78 19          		 ADD HL, DE	;
1238)   1E79 16 37       		 LD D, 0x37	;
1239)   1E7B CD DE 16    		 CALL LCD_WR_COM	;
1240)   1E7E 54          		 LD D, H        ;NEW TOP SCROLL LINE BYTES HIGH (1-480)	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
1241)   1E7F CD DA 16    		 CALL LCD_WR_DAT	;
1242)   1E82 55          		 LD D, L        ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
1243)   1E83 CD DA 16    		 CALL LCD_WR_DAT	;
1244)   1E86 C9          		 RET	;
1247)   1E87 11 00 00    		@LCD_CLRTXTLN: LD DE, 0	;
1249)   1E8A D5          		 PUSH DE	;
1250)   1E8B 6F          		 LD L, A	;
1251)   1E8C 26 00       		 LD H, 0	;
1252)   1E8E 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1253)   1E8F 29          		 ADD HL, HL	;
1254)   1E90 29          		 ADD HL, HL	;
1255)   1E91 5F          		 LD E, A	;
1256)   1E92 16 00       		 LD D, 0	;
1257)   1E94 19          		 ADD HL, DE	;
1258)   1E95 19          		 ADD HL, DE	;
1260)   1E96 E5          		 PUSH HL	;
1261)   1E97 11 0A 00    		 LD DE, FONT_HEIGHT	;
1262)   1E9A 19          		 ADD HL, DE	;
1264)   1E9B EB          		 EX DE, HL	;
1265)   1E9C 21 1F 03    		 LD HL, LCD_WIDTH	;
1267)   1E9F E5          		 PUSH HL	;
1268)   1EA0 D5          		 PUSH DE        ;PARAM4	;PARAM4
1269)   1EA1 CD 57 18    		 CALL LCD_SETXY	;
1270)   1EA4 01 40 1F    		 LD BC, 8000        ; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
1271)   1EA7 2A 03 FE    		 LD HL, (BCOLOR)	;
1272)   1EAA CD A4 18    		CTL_AGN: CALL LCD_SETPIXEL      ;DESTROYS D,A	;DESTROYS D,A
1273)   1EAD 0B          		 DEC BC	;
1274)   1EAE 78          		 LD A, B	;
1275)   1EAF B1          		 OR C	;
1276)   1EB0 20 F8       		 JR NZ, CTL_AGN	;
1277)   1EB2 CD 0C 19    		 CALL LCD_CLRXY	;
1278)   1EB5 C9          		 RET	;
1282)   1EB6 AF          		 XOR A	;
1283)   1EB7 77          		 LD (HL), A	;
1284)   1EB8 23          		 INC HL	;
1285)   1EB9 7E          		 LD A, (HL)	;
1286)   1EBA 3C          		 INC A	;
1288)   1EBB FE 30       		 CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
1289)   1EBD 28 02       		 JR Z, PRCH_SCROLL	;
1290)   1EBF 77          		 LD (HL), A	;
1291)   1EC0 C9          		 RET	;
1293)   1EC1 F5          		PRCH_SCROLL: PUSH AF	;
1294)   1EC2 E5          		 PUSH HL	;
1296)   1EC3 3A 0F FE    		 LD A, (SCRLN)	;
1297)   1EC6 CD 87 1E    		 CALL LCD_CLRTXTLN	;
1299)   1EC9 CD 61 1E    		 CALL LCD_DOSCROLL	;
1300)   1ECC E1          		 POP HL	;
1301)   1ECD F1          		 POP AF	;
1303)   1ECE 3D          		 DEC A	;
1304)   1ECF 77          		 LD (HL), A        ;CURSORY	;CURSORY
1305)   1ED0 AF          		 XOR A	;
1306)   1ED1 32 0D FE    		 LD (CURSORX), A	;
1307)   1ED4 C9          		 RET	;
1322)   1ED5 2A 03 FE    		 LD HL, (BCOLOR)       ;	;
1323)   1ED8 18 03       		 JR LCD_SETCURS	;
1334)   1EDA 2A 01 FE    		 LD HL, (FCOLOR)       ;COLOR PARAM	;COLOR PARAM
1337)   1EDD E5          		 PUSH HL        ;COLOR PARAM	;COLOR PARAM
1338)   1EDE 3A 0D FE    		 LD A, (CURSORX)	;
1339)   1EE1 06 08       		 LD B, FONT_WIDTH	;
1340)   1EE3 16 00       		 LD D, 0	;
1341)   1EE5 5F          		 LD E, A	;
1342)   1EE6 21 00 00    		 LD HL, 0	;
1343)   1EE9 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
1345)   1EEA ED 5A       		 ADC HL, DE	;
1346)   1EEC 10 FC       		 DJNZ SCUR_AGN1        ;HL = DE * B	;HL = DE * B
1347)   1EEE E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1348)   1EEF 01 08 00    		 LD BC, FONT_WIDTH	;
1349)   1EF2 ED 4A       		 ADC HL, BC        ;NEXT CHAR	;NEXT CHAR
1350)   1EF4 2B          		 DEC HL         ;MINUS 1	;MINUS 1
1351)   1EF5 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1353)   1EF6 CD 2B 1E    		 CALL LCD_CALCLINE	;
1354)   1EF9 06 0A       		 LD B, FONT_HEIGHT	;
1355)   1EFB 16 00       		 LD D, 0	;
1356)   1EFD 5F          		 LD E, A	;
1357)   1EFE 21 00 00    		 LD HL, 0	;
1359)   1F01 ED 5A       		 ADC HL, DE	;
1360)   1F03 10 FC       		 DJNZ SCUR_AGN2        ;HL=B*DE	;HL=B*DE
1361)   1F05 0E 08       		 LD C, FONT_HEIGHT - 2       ;2 PIXEL HEIGTH CURSOR	;2 PIXEL HEIGTH CURSOR
1362)   1F07 06 00       		 LD B, 0	;
1363)   1F09 ED 4A       		 ADC HL, BC        ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
1364)   1F0B D1          		 POP DE         ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
1365)   1F0C E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1366)   1F0D D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1368)   1F0E 23          		 INC HL         ; Y2 ADD THE LAST +2 PIXELS	; Y2 ADD THE LAST +2 PIXELS
1369)   1F0F E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1370)   1F10 CD 57 18    		 CALL LCD_SETXY	;
1372)   1F13 E1          		 POP HL         ;GET THE COLOR	;GET THE COLOR
1373)   1F14 06 10       		 LD B, 2 * FONT_WIDTH       ;2*8=16	;2*8=16
1375)   1F16 CD A4 18    		 CALL LCD_SETPIXEL       ;DESTROYS D,A	;DESTROYS D,A
1376)   1F19 10 FB       		 DJNZ SCUR_AGN3	;
1381)   1F1B C9          		 RET	;
1384)   1F1C CD 0C 19    		 CALL LCD_CLRXY        ;	;
1385)   1F1F 2A 03 FE    		 LD HL, (BCOLOR)	;
1387)   1F22 01 E0 01    		 LD BC, LCD_HEIGHT + 1	;
1388)   1F25 C5          		CS_AGNA2: PUSH BC	;
1389)   1F26 01 20 03    		 LD BC, LCD_WIDTH + 1	;
1390)   1F29 CD A4 18    		CS_AGNA1: CALL LCD_SETPIXEL      ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1391)   1F2C 0B          		 DEC BC	;
1392)   1F2D 78          		 LD A, B	;
1393)   1F2E B1          		 OR C	;
1394)   1F2F 20 F8       		 JR NZ, CS_AGNA1	;
1395)   1F31 C1          		 POP BC	;
1396)   1F32 0B          		 DEC BC	;
1397)   1F33 78          		 LD A, B	;
1398)   1F34 B1          		 OR C	;
1399)   1F35 20 EE       		 JR NZ, CS_AGNA2	;
1400)   1F37 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1401)   1F3A 22 0D FE    		 LD (CURSORX), HL	;
1402)   1F3D C9          		 RET	;
1407)   1F3E 06 DF       		 LD B, LCD_HEIGHT.AND.0xFF      ;lsb	;lsb
1408)   1F40 0E 02       		 LD C, LCD_HEIGHT.SHR.8 + 1      ;MSB+1	;MSB+1
1410)   1F42 C5          		 PUSH BC	;
1412)   1F43 06 1F       		 LD B, LCD_WIDTH.AND.0xFF      ;lsb	;lsb
1413)   1F45 0E 04       		 LD C, LCD_WIDTH.SHR.8 + 1      ;MSV+1	;MSV+1
1415)   1F47 CD A4 18    		 CALL LCD_SETPIXEL       ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1416)   1F4A 10 FB       		 DJNZ CS_AGN1	;
1417)   1F4C 0D          		 DEC C	;
1418)   1F4D 20 F8       		 JR NZ, CS_AGN1	;
1419)   1F4F C1          		 POP BC	;
1420)   1F50 10 F0       		 DJNZ CS_AGN2	;
1421)   1F52 0D          		 DEC C	;
1422)   1F53 20 ED       		 JR NZ, CS_AGN2	;
1423)   1F55 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1424)   1F58 22 0D FE    		 LD (CURSORX), HL	;
1425)   1F5B C9          		 RET	;
1431)   1F5C 7E          		 LD A, (HL)	;
1432)   1F5D FE 00       		 CP 0	;
1433)   1F5F C8          		 RET Z	;
1434)   1F60 E5          		 PUSH HL	;
1435)   1F61 CD 58 1D    		 CALL LCD_PRINTCHAR	;
1436)   1F64 E1          		 POP HL	;
1437)   1F65 23          		 INC HL	;
1438)   1F66 18 F4       		 JR LCD_MSG	;
  3)   1F68 AF          		NEGHL: xor a	;
  4)   1F69 95          		 sub l	;
  5)   1F6A 6F          		 ld l, a	;
  6)   1F6B 9F          		 sbc a, a	;
  7)   1F6C 94          		 sub h	;
  8)   1F6D 67          		 ld h, a	;
  9)   1F6E C9          		 RET	;
 13)   1F6F 2A 79 FE    		 LD HL, (FILL_IDX)	;
 14)   1F72 01 58 02    		 LD BC, MAXQ	;
 15)   1F75 A7          		 AND A	;
 16)   1F76 ED 42       		 SBC HL, BC	;
 17)   1F78 D0          		 RET NC     ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 18)   1F79 2A 7B FE    		 LD HL, (FILL_PY)	;
 19)   1F7C ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 20)   1F80 19          		 ADD HL, DE	;
 21)   1F81 7C          		 LD A, H	;
 22)   1F82 FE 80       		 CP 80H	;
 23)   1F84 D0          		 RET NC     ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 24)   1F85 11 1F 03    		 LD DE, LCD_WIDTH	;
 25)   1F88 ED 52       		 SBC HL, DE	;
 26)   1F8A D0          		 RET NC      ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 28)   1F8B 2A 77 FE    		 LD HL, (FILL_Q)	;
 29)   1F8E ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 30)   1F92 78          		 LD A, B	;
 31)   1F93 B1          		 OR C       ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 32)   1F94 28 08       		 JR Z, QPS_NXT1	;
 33)   1F96 EB          		 EX DE, HL	;
 34)   1F97 C5          		 PUSH BC	;
 35)   1F98 E1          		 POP HL	;
 36)   1F99 29          		 ADD HL, HL	;
 37)   1F9A 29          		 ADD HL, HL	;
 38)   1F9B 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 39)   1F9C EB          		 EX DE, HL	;
 40)   1F9D 19          		 ADD HL, DE	;
 42)   1F9E 11 7B FE    		 LD DE, FILL_PY	;
 43)   1FA1 EB          		 EX DE, HL      ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 44)   1FA2 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 45)   1FA5 ED B0       		 LDIR       ;COPY	;COPY
 46)   1FA7 2A 79 FE    		 LD HL, (FILL_IDX)	;
 47)   1FAA 23          		 INC HL	;
 48)   1FAB 22 79 FE    		 LD (FILL_IDX), HL	;
 49)   1FAE C9          		QPS_EXT: RET	;
 51)   1FAF 2A 77 FE    		QPOP: LD HL, (FILL_Q)	;
 52)   1FB2 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 53)   1FB6 0B          		 DEC BC	;
 54)   1FB7 C5          		 PUSH BC	;
 55)   1FB8 78          		 LD A, B	;
 56)   1FB9 B1          		 OR C       ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 57)   1FBA 28 08       		 JR Z, QPP_NXT1	;
 58)   1FBC EB          		 EX DE, HL	;
 59)   1FBD C5          		 PUSH BC	;
 60)   1FBE E1          		 POP HL	;
 61)   1FBF 29          		 ADD HL, HL	;
 62)   1FC0 29          		 ADD HL, HL	;
 63)   1FC1 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 64)   1FC2 EB          		 EX DE, HL	;
 65)   1FC3 19          		 ADD HL, DE	;
 66)   1FC4 C1          		QPP_NXT1: POP BC	;
 67)   1FC5 ED 43 79 FE 		 LD (FILL_IDX), BC	;
 69)   1FC9 11 7B FE    		 LD DE, FILL_PY     ;ORIGIN=QUEUE DEST=FILL_PY	;ORIGIN=QUEUE DEST=FILL_PY
 70)   1FCC 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 71)   1FCF ED B0       		 LDIR       ;COPY	;COPY
 72)   1FD1 2A 7D FE    		 LD HL, (FILL_PXL)	;
 73)   1FD4 22 71 FE    		 LD (FILL_X1), HL	;
 74)   1FD7 2A 7F FE    		 LD HL, (FILL_PXR)	;
 75)   1FDA 22 73 FE    		 LD (FILL_X2), HL	;
 76)   1FDD ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 77)   1FE1 ED 53 75 FE 		 LD (FILL_DY), DE	;
 78)   1FE5 2A 7B FE    		 LD HL, (FILL_PY)	;
 79)   1FE8 A7          		 AND A	;
 80)   1FE9 19          		 ADD HL, DE	;
 81)   1FEA 22 6D FE    		 LD (FILL_Y), HL	;
 89)   1FED C9          		 RET	;
 91)   1FEE E1          		@_FILL: POP HL     ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 92)   1FEF D1          		 POP DE      ;Y	;Y
 93)   1FF0 C1          		 POP BC      ;X	;X
 94)   1FF1 E5          		 PUSH HL      ;RET ADDR TO SP	;RET ADDR TO SP
 95)   1FF2 ED 43 6B FE 		 LD (FILL_X), BC	;
 96)   1FF6 ED 53 6D FE 		 LD (FILL_Y), DE	;
 97)   1FFA ED 73 85 FE 		 LD (FILL_OLDSP), SP	;
 98)   1FFE 21 3E ED    		 LD HL, - ((MAXQ * 8) + 2)  ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
 99)   2001 39          		 ADD HL, SP	;
100)   2002 F9          		 LD SP, HL      ;NEW SP	;NEW SP
103)   2003 22 77 FE    		 LD (FILL_Q), HL     ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
104)   2006 21 00 00    		 LD HL, 0	;
105)   2009 22 79 FE    		 LD (FILL_IDX), HL    ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
109)   200C 2A 6B FE    		 LD HL, (FILL_X)    ;	;
110)   200F E5          		 PUSH HL	;
111)   2010 2A 6D FE    		 LD HL, (FILL_y)    ;	;
112)   2013 E5          		 PUSH HL	;
113)   2014 CD BB 18    		 CALL LCD_READPIXEL	;
114)   2017 22 83 FE    		 LD (FILL_OV), HL	;
116)   201A ED 5B 01 FE 		 LD DE, (FCOLOR)	;
117)   201E A7          		 AND A	;
118)   201F ED 52       		 SBC HL, DE      ;CHK OV=NV	;CHK OV=NV
119)   2021 CA A6 21    		 JP Z, FL_EXIT	;
120)   2024 2A 6B FE    		 LD HL, (FILL_X)	;
121)   2027 7C          		 LD A, H	;
122)   2028 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
123)   202A D2 A6 21    		 JP NC, FL_EXIT	;
124)   202D 11 1F 03    		 LD DE, LCD_WIDTH	;
125)   2030 A7          		 AND A	;
126)   2031 ED 52       		 SBC HL, DE      ;CHK>799	;CHK>799
127)   2033 D2 A6 21    		 JP NC, FL_EXIT	;
128)   2036 2A 6D FE    		 LD HL, (FILL_Y)	;
129)   2039 7C          		 LD A, H	;
130)   203A FE 80       		 CP 0x80      ;CHK <0	;CHK <0
131)   203C D2 A6 21    		 JP NC, FL_EXIT	;
132)   203F 11 DF 01    		 LD DE, LCD_HEIGHT	;
133)   2042 A7          		 AND A	;
134)   2043 ED 52       		 SBC HL, DE      ;CHK>480	;CHK>480
135)   2045 D2 A6 21    		 JP NC, FL_EXIT	;
137)   2048 2A 6D FE    		 LD HL, (FILL_Y)	;
138)   204B 22 7B FE    		 LD (FILL_PY), HL	;
139)   204E 2A 6B FE    		 LD HL, (FILL_X)	;
140)   2051 22 7D FE    		 LD (FILL_PXL), HL	;
141)   2054 22 7F FE    		 LD (FILL_PXR), HL	;
142)   2057 21 01 00    		 LD HL, 1	;
143)   205A 22 81 FE    		 LD (FILL_PDY), HL	;
144)   205D CD 6F 1F    		 CALL QPUSH      ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
146)   2060 2A 6D FE    		 LD HL, (FILL_Y)	;
147)   2063 23          		 INC HL	;
148)   2064 22 7B FE    		 LD (FILL_PY), HL	;
149)   2067 21 FF FF    		 LD HL, - 1	;
150)   206A 22 81 FE    		 LD (FILL_PDY), HL	;
151)   206D CD 6F 1F    		 CALL QPUSH	;
153)   2070 ED 5B 79 FE 		 LD DE, (FILL_IDX)	;
154)   2074 7A          		 LD A, D	;
155)   2075 B3          		 OR E	;
156)   2076 CA A6 21    		 JP Z, FL_EXIT     ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
160)   2079 CD AF 1F    		 CALL QPOP      ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
163)   207C 2A 71 FE    		 LD HL, (FILL_X1)	;
164)   207F 22 6B FE    		 LD (FILL_X), HL	;
165)   2082 7C          		FL_LP1: LD A, H	;
166)   2083 FE 80       		 CP 0x80      ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
167)   2085 D2 AD 20    		 JP NC, FL_NXT1	;
168)   2088 ED 5B 6D FE 		 LD DE, (FILL_Y)	;
169)   208C E5          		 PUSH HL	;
170)   208D D5          		 PUSH DE	;
171)   208E CD BB 18    		 CALL LCD_READPIXEL	;
172)   2091 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
173)   2095 A7          		 AND A	;
174)   2096 ED 52       		 SBC HL, DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
175)   2098 C2 AD 20    		 JP NZ, FL_NXT1	;
176)   209B ED 5B 6B FE 		 LD DE, (FILL_X)	;
177)   209F 2A 6D FE    		 LD HL, (FILL_Y)	;
178)   20A2 D5          		 PUSH DE	;
179)   20A3 CD 94 1B    		 CALL PLOTP	;
180)   20A6 E1          		 POP HL	;
181)   20A7 2B          		 DEC HL	;
182)   20A8 22 6B FE    		 LD (FILL_X), HL	;
183)   20AB 18 D5       		 JR FL_LP1	;
187)   20AD 2A 6B FE    		 LD HL, (FILL_X)	;
188)   20B0 ED 5B 71 FE 		 LD DE, (FILL_X1)	;
189)   20B4 7C          		 LD A, H	;
190)   20B5 FE 80       		 CP 80H	;
191)   20B7 30 08       		 JR NC, FL_NXT1A     ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
192)   20B9 A7          		 AND A	;
193)   20BA ED 52       		 SBC HL, DE      ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
194)   20BC D2 64 21    		 JP NC, FL_SKIP     ;C IF DE>HL X1>X, NC IF X>=X1	;C IF DE>HL X1>X, NC IF X>=X1
195)   20BF ED 5A       		 ADC HL, DE	;
198)   20C1 23          		 INC HL	;
199)   20C2 22 6F FE    		 LD (FILL_L), HL	;
202)   20C5 A7          		 AND A	;
203)   20C6 ED 52       		 SBC HL, DE      ;CHK L-X1	;CHK L-X1
204)   20C8 30 1E       		 JR NC, FL_NXT2     ;C IF DE>HL X1>L	;C IF DE>HL X1>L
205)   20CA 28 1C       		 JR Z, FL_NXT2	;
206)   20CC ED 5A       		 ADC HL, DE	;
207)   20CE 22 7D FE    		 LD (FILL_PXL), HL    ;L	;L
208)   20D1 2A 6D FE    		 LD HL, (FILL_Y)	;
209)   20D4 22 7B FE    		 LD (FILL_PY), HL	;
210)   20D7 1B          		 DEC DE	;
211)   20D8 ED 53 7F FE 		 LD (FILL_PXR), DE	;
212)   20DC 2A 75 FE    		 LD HL, (FILL_DY)	;
213)   20DF CD 68 1F    		 CALL NEGHL	;
214)   20E2 22 81 FE    		 LD (FILL_PDY), HL	;
215)   20E5 CD 6F 1F    		 CALL QPUSH	;
219)   20E8 2A 71 FE    		 LD HL, (FILL_X1)     ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
220)   20EB 23          		 INC HL	;
221)   20EC 22 6B FE    		 LD (FILL_X), HL	;
225)   20EF 11 1F 03    		 LD DE, LCD_WIDTH	;
226)   20F2 A7          		 AND A	;
227)   20F3 EB          		 EX DE, HL	;
228)   20F4 ED 52       		 SBC HL, DE      ;800-(X=DE)	;800-(X=DE)
229)   20F6 38 24       		 JR C, FL_NXT3     ;C IF X>800	;C IF X>800
230)   20F8 EB          		 EX DE, HL      ;HL=X	;HL=X
231)   20F9 E5          		 PUSH HL	;
232)   20FA 2A 6D FE    		 LD HL, (FILL_Y)	;
233)   20FD E5          		 PUSH HL	;
234)   20FE CD BB 18    		 CALL LCD_READPIXEL	;
235)   2101 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
236)   2105 A7          		 AND A	;
237)   2106 ED 52       		 SBC HL, DE      ;PIXELREAD=OV	;PIXELREAD=OV
238)   2108 20 12       		 JR NZ, FL_NXT3	;
239)   210A ED 5B 6B FE 		 LD DE, (FILL_X)	;
240)   210E 2A 6D FE    		 LD HL, (FILL_Y)	;
241)   2111 D5          		 PUSH DE	;
242)   2112 CD 94 1B    		 CALL PLOTP	;
243)   2115 E1          		 POP HL	;
244)   2116 23          		 INC HL	;
245)   2117 22 6B FE    		 LD (FILL_X), HL	;
246)   211A 18 D3       		 JR FL_LP2	;
249)   211C 2A 6D FE    		 LD HL, (FILL_Y)	;
250)   211F 22 7B FE    		 LD (FILL_PY), HL	;
251)   2122 2A 6F FE    		 LD HL, (FILL_L)	;
252)   2125 22 7D FE    		 LD (FILL_PXL), HL	;
253)   2128 2A 6B FE    		 LD HL, (FILL_X)	;
254)   212B 2B          		 DEC HL	;
255)   212C 22 7F FE    		 LD (FILL_PXR), HL	;
256)   212F 2A 75 FE    		 LD HL, (FILL_DY)	;
257)   2132 22 81 FE    		 LD (FILL_PDY), HL	;
258)   2135 CD 6F 1F    		 CALL QPUSH	;
260)   2138 2A 6B FE    		 LD HL, (FILL_X)	;
261)   213B ED 5B 73 FE 		 LD DE, (FILL_X2)	;
262)   213F 13          		 INC DE	;
263)   2140 A7          		 AND A	;
264)   2141 ED 52       		 SBC HL, DE      ;X-(X2+1) C IF X2+1>X	;X-(X2+1) C IF X2+1>X
265)   2143 38 1F       		 JR C, FL_NXT4	;
266)   2145 28 1D       		 JR Z, FL_NXT4	;
267)   2147 2A 6D FE    		 LD HL, (FILL_Y)	;
268)   214A 22 7B FE    		 LD (FILL_PY), HL	;
269)   214D ED 53 7D FE 		 LD (FILL_PXL), DE	;
270)   2151 2A 6B FE    		 LD HL, (FILL_X)    ;	;
271)   2154 2B          		 DEC HL	;
272)   2155 22 7F FE    		 LD (FILL_PXR), HL	;
273)   2158 2A 75 FE    		 LD HL, (FILL_DY)	;
274)   215B CD 68 1F    		 CALL NEGHL	;
275)   215E 22 81 FE    		 LD (FILL_PDY), HL	;
276)   2161 CD 6F 1F    		 CALL QPUSH	;
279)   2164 2A 6B FE    		 LD HL, (FILL_X)	;
280)   2167 23          		 INC HL	;
281)   2168 22 6B FE    		 LD (FILL_X), HL	;
282)   216B ED 5B 73 FE 		FL_LP3: LD DE, (FILL_X2)	;
283)   216F A7          		 AND A	;
284)   2170 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
285)   2171 ED 52       		 SBC HL, DE      ;C IF DE>HL X>X2	;C IF DE>HL X>X2
286)   2173 38 1C       		 JR C, FL_NXT5	;
287)   2175 19          		 ADD HL, DE      ;	;
288)   2176 EB          		 EX DE, HL      ;X=HL X2=DE	;X=HL X2=DE
289)   2177 E5          		 PUSH HL	;
290)   2178 2A 6D FE    		 LD HL, (FILL_Y)	;
291)   217B E5          		 PUSH HL	;
292)   217C CD BB 18    		 CALL LCD_READPIXEL	;
293)   217F ED 5B 83 FE 		 LD DE, (FILL_OV)	;
294)   2183 A7          		 AND A	;
295)   2184 ED 52       		 SBC HL, DE      ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
296)   2186 28 09       		 JR Z, FL_NXT5	;
297)   2188 2A 6B FE    		 LD HL, (FILL_X)	;
298)   218B 23          		 INC HL	;
299)   218C 22 6B FE    		 LD (FILL_X), HL	;
300)   218F 18 DA       		 JR FL_LP3	;
303)   2191 2A 6B FE    		 LD HL, (FILL_X)	;
304)   2194 22 6F FE    		 LD (FILL_L), HL	;
306)   2197 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
307)   219B A7          		 AND A	;
308)   219C EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
309)   219D ED 52       		 SBC HL, DE      ;X2-X C IF X>X2	;X2-X C IF X>X2
310)   219F EB          		 EX DE, HL      ;X=HL X2-X=DE	;X=HL X2-X=DE
311)   21A0 DA 70 20    		 JP C, FL_LP0    ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
312)   21A3 C3 EF 20    		 JP FL_LP2      ;GOTO DO WHILE	;GOTO DO WHILE
315)   21A6 21 C2 12    		FL_EXIT: LD HL, (MAXQ * 8) + 2  ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
316)   21A9 39          		 ADD HL, SP	;
317)   21AA F9          		 LD SP, HL      ;NEW SP	;NEW SP
318)   21AB C9          		 RET	;
  9)   21AC FE 01       		 CP 1         ;IS IT FOR GRAPHICS?	;IS IT FOR GRAPHICS?
 10)   21AE 28 0E       		 JR Z, GRCOLS	;
 11)   21B0 21 03 FE    		 LD HL, BCOLOR	;
 12)   21B3 22 69 FE    		 LD (GR_PARAM4), HL	;
 13)   21B6 21 01 FE    		 LD HL, FCOLOR	;
 14)   21B9 22 67 FE    		 LD (GR_PARAM3), HL	;
 15)   21BC 18 0C       		 JR BS_DOCOL	;
 16)   21BE 21 07 FE    		GRCOLS: LD HL, BGRCOL	;
 17)   21C1 22 69 FE    		 LD (GR_PARAM4), HL	;
 18)   21C4 21 05 FE    		 LD HL, FGRCOL	;
 19)   21C7 22 67 FE    		 LD (GR_PARAM3), HL	;
 20)   21CA CD 94 5E    		BS_DOCOL: CALL EXPRI       ;GET 1ST PARAM	;GET 1ST PARAM
 21)   21CD D9          		 EXX	;
 22)   21CE FD 7E 00    		 LD A, (IY)	;
 23)   21D1 FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
 24)   21D3 28 32       		 JR Z, COLSEL	;
 25)   21D5 FE 3A       		 CP ':'	;
 26)   21D7 28 2E       		 JR Z, COLSEL	;
 27)   21D9 FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
 28)   21DB C2 7A 25    		 JP NZ, GRPHERR	;
 30)   21DE E5          		 PUSH HL        ;SAVE 1ST PARAM	;SAVE 1ST PARAM
 31)   21DF FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
 32)   21E1 CD 94 5E    		 CALL EXPRI        ;GET 2ND PARAM	;GET 2ND PARAM
 33)   21E4 D9          		 EXX	;
 34)   21E5 D1          		 POP DE         ;RESTORE 1ST PARAM ON DE HL HAS THE 2ND	;RESTORE 1ST PARAM ON DE HL HAS THE 2ND
 35)   21E6 7B          		 LD A, E	;
 36)   21E7 D6 80       		 SUB 128	;
 37)   21E9 38 07       		 JR C, COLFC	;
 38)   21EB 5F          		 LD E, A	;
 39)   21EC DD 21 37 FE 		 LD IX, BCOLPAL	;
 40)   21F0 18 04       		 JR DOPALCOL	;
 41)   21F2 DD 21 17 FE 		COLFC: LD IX, FCOLPAL	;
 43)   21F6 7B          		 LD A, E	;
 44)   21F7 FE 0F       		 CP 15         ;MAX 16 COLORS	;MAX 16 COLORS
 45)   21F9 D2 7A 25    		 JP NC, GRPHERR	;
 46)   21FC DD 19       		 ADD IX, DE	;
 47)   21FE DD 19       		 ADD IX, DE        ;2*DE CAUSE ITS A 2 BYTE ARRAY	;2*DE CAUSE ITS A 2 BYTE ARRAY
 48)   2200 DD 75 00    		 LD (IX), L        ;SAVE THE NEW COLOR	;SAVE THE NEW COLOR
 49)   2203 DD 74 01    		 LD (IX + 1), H	;
 50)   2206 C9          		 RET	;
 53)   2207 E5          		 PUSH HL	;
 54)   2208 D1          		 POP DE	;
 55)   2209 7B          		 LD A, E	;
 56)   220A D6 80       		 SUB 128        ;CHECK MSB	;CHECK MSB
 57)   220C 38 11       		 JR C, CFC	;
 58)   220E 5F          		 LD E, A	;
 59)   220F DD 21 69 FE 		 LD IX, GR_PARAM4	;
 60)   2213 DD 6E 00    		 LD L, (IX)	;
 61)   2216 DD 66 01    		 LD H, (IX + 1)	;
 62)   2219 DD 21 37 FE 		 LD IX, BCOLPAL        ;BACKCOLOR	;BACKCOLOR
 63)   221D 18 0E       		 JR SFC	;
 64)   221F DD 21 67 FE 		CFC: LD IX, GR_PARAM3	;
 65)   2223 DD 6E 00    		 LD L, (IX)	;
 66)   2226 DD 66 01    		 LD H, (IX + 1)	;
 67)   2229 DD 21 17 FE 		 LD IX, FCOLPAL        ;FRONTCOLOR	;FRONTCOLOR
 68)   222D 7B          		SFC: LD A, E	;
 69)   222E FE 10       		 CP 16         ;MAX 16 COLORS	;MAX 16 COLORS
 70)   2230 D2 7A 25    		 JP NC, GRPHERR	;
 71)   2233 DD 19       		 ADD IX, DE	;
 72)   2235 DD 19       		 ADD IX, DE	;
 73)   2237 DD 56 00    		 LD D, (IX)	;
 74)   223A DD 5E 01    		 LD E, (IX + 1)	;
 75)   223D 72          		 LD (HL), D        ;SAVE AGAIN	;SAVE AGAIN
 76)   223E 23          		 INC HL	;
 77)   223F 73          		 LD (HL), E	;
 78)   2240 C9          		 RET	;
 84)   2241 AF          		 XOR A	;
 85)   2242 21 63 FE    		 LD HL, GR_PARAM1	;
 87)   2245 F5          		 PUSH AF	;
 88)   2246 E5          		 PUSH HL	;
 89)   2247 CD 94 5E    		 CALL EXPRI        ;GET 1ST PARAM	;GET 1ST PARAM
 90)   224A D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
 91)   224B D1          		 POP DE         ;GET PARAM ADDRESS	;GET PARAM ADDRESS
 92)   224C EB          		 EX DE, HL	;
 93)   224D 73          		 LD (HL), E	;
 94)   224E 23          		 INC HL	;
 95)   224F 72          		 LD (HL), D	;
 96)   2250 23          		 INC HL         ;PARAM SAVED	;PARAM SAVED
 97)   2251 F1          		 POP AF	;
 98)   2252 3C          		 INC A	;
 99)   2253 FE 04       		 CP 4	;
100)   2255 C8          		 RET Z	;
101)   2256 F5          		 PUSH AF	;
102)   2257 FD 7E 00    		 LD A, (IY)	;
103)   225A FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
104)   225C 28 0D       		 JR Z, NOMORE	;
105)   225E FE 3A       		 CP ':'         ;FINISHED COMD LINE	;FINISHED COMD LINE
106)   2260 28 09       		 JR Z, NOMORE	;
107)   2262 FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
108)   2264 20 05       		 JR NZ, NOMORE	;
109)   2266 FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
110)   2268 F1          		 POP AF	;
111)   2269 18 DA       		 JR GBP_NXT	;
112)   226B F1          		NOMORE: POP AF	;
113)   226C C9          		 RET	;
118)   226D 01 08 00    		 LD BC, 8        ;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD	;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD
119)   2270 11 57 FE    		 LD DE, GR_LASTX3	;
120)   2273 21 5B FE    		 LD HL, GR_LASTX2	;
121)   2276 ED B0       		 LDIR	;
122)   2278 2A 63 FE    		 LD HL, (GR_PARAM1)	;
123)   227B 22 5F FE    		 LD (GR_LASTX), HL       ;SAVE TO LAST	;SAVE TO LAST
124)   227E 2A 65 FE    		 LD HL, (GR_PARAM2)	;
125)   2281 22 61 FE    		 LD (GR_LASTY), HL       ;SAVE TO LAST	;SAVE TO LAST
126)   2284 C9          		 RET	;
130)   2285 CD 41 22    		 CALL GETBASICPARAMS	;
131)   2288 FE 02       		 CP 2	;
132)   228A C2 7A 25    		 JP NZ, GRPHERR	;
133)   228D CD A7 23    		BAS_DODRAW: CALL GRPH_SAVECOLORS	;
134)   2290 FD E5       		 PUSH IY	;
137)   2292 2A 5F FE    		 LD HL, (GR_LASTX)	;
138)   2295 E5          		 PUSH HL	;
139)   2296 2A 61 FE    		 LD HL, (GR_LASTY)	;
140)   2299 E5          		 PUSH HL	;
141)   229A CD 6D 22    		 CALL GRPH_SAVELASTPOS	;
142)   229D 2A 63 FE    		 LD HL, (GR_PARAM1)	;
143)   22A0 E5          		 PUSH HL	;
144)   22A1 2A 65 FE    		 LD HL, (GR_PARAM2)	;
145)   22A4 E5          		 PUSH HL	;
146)   22A5 CD B1 19    		 CALL LCD_DRAWLINE	;
148)   22A8 FD E1       		 POP IY	;
149)   22AA CD BE 23    		 CALL GRPH_RESTORECOLORS	;
150)   22AD C9          		 RET         ;RETURN TO BASIC	;RETURN TO BASIC
154)   22AE CD 41 22    		@BAS_MOVE: CALL GETBASICPARAMS	;
155)   22B1 FE 02       		 CP 2	;
156)   22B3 C2 7A 25    		 JP NZ, GRPHERR	;
158)   22B6 CD 6D 22    		 CALL GRPH_SAVELASTPOS	;
159)   22B9 C9          		 RET	;
165)   22BA CD 41 22    		@BAS_POINT: CALL GETBASICPARAMS	;
166)   22BD FE 02       		 CP 2	;
167)   22BF C2 7A 25    		 JP NZ, GRPHERR	;
170)   22C2 2A 63 FE    		 LD HL, (GR_PARAM1)	;
171)   22C5 E5          		 PUSH HL	;
172)   22C6 2A 65 FE    		 LD HL, (GR_PARAM2)	;
173)   22C9 E5          		 PUSH HL	;
174)   22CA CD BB 18    		 CALL LCD_READPIXEL	;
178)   22CD FD 7E 00    		 LD A, (IY)	;
179)   22D0 FE 29       		 CP ')'	;
180)   22D2 C2 7A 25    		 JP NZ, GRPHERR	;
181)   22D5 FD 23       		 INC IY	;
184)   22D7 01 00 00    		 LD BC, 0	;
185)   22DA F3          		 DI	;
186)   22DB E5          		 PUSH HL	;
187)   22DC D9          		 EXX	;
188)   22DD E1          		 POP HL	;
189)   22DE D9          		 EXX	;
190)   22DF 21 00 00    		 LD HL, 0	;
191)   22E2 FB          		 EI	;
192)   22E3 C9          		 RET	;
198)   22E4 FE 00       		GRPH_GETGROUP: CP 0	;
200)   22E6 21 EA 24    		 LD HL, PLOT00	;
201)   22E9 C8          		 RET Z	;
202)   22EA FE 0A       		 CP 80.SHR.3	;
203)   22EC 21 FA 24    		 LD HL, PLOT80	;
204)   22EF C8          		 RET Z	;
205)   22F0 FE 0C       		 CP 96.SHR.3	;
206)   22F2 21 0A 25    		 LD HL, PLOT96	;
207)   22F5 C8          		 RET Z	;
208)   22F6 FE 10       		 CP 128.SHR.3	;
209)   22F8 21 1A 25    		 LD HL, PLOT128	;
210)   22FB C8          		 RET Z	;
211)   22FC FE 12       		 CP 144.SHR.3	;
212)   22FE 21 2A 25    		 LD HL, PLOT144	;
213)   2301 C8          		 RET Z	;
214)   2302 FE 13       		 CP 152.SHR.3	;
215)   2304 21 3A 25    		 LD HL, PLOT152	;
216)   2307 C8          		 RET Z	;
217)   2308 FE 14       		 CP 160.SHR.3	;
218)   230A 21 4A 25    		 LD HL, PLOT160	;
219)   230D C8          		 RET Z	;
220)   230E FE 18       		 CP 192.SHR.3	;
221)   2310 21 5A 25    		 LD HL, PLOT192	;
222)   2313 C8          		 RET Z	;
223)   2314 FE 19       		 CP 200.SHR.3	;
224)   2316 21 6A 25    		 LD HL, PLOT200	;
225)   2319 C8          		 RET Z	;
226)   231A 21 00 00    		 LD HL, 0	;
227)   231D C9          		 RET	;
230)   231E CD 41 22    		@BAS_PLOT: CALL GETBASICPARAMS	;
231)   2321 FE 03       		 CP 3	;
232)   2323 C2 7A 25    		 JP NZ, GRPHERR	;
233)   2326 3A 63 FE    		 LD A, (GR_PARAM1)	;
235)   2329 01 04 00    		 LD BC, 4	;
236)   232C 21 65 FE    		 LD HL, GR_PARAM2	;
237)   232F 11 63 FE    		 LD DE, GR_PARAM1	;
238)   2332 ED B0       		 LDIR	;
239)   2334 47          		 LD B, A        ;COMMAND GROUP 5 BITS	;COMMAND GROUP 5 BITS
240)   2335 CB 38       		 SRL B	;
241)   2337 CB 38       		 SRL B	;
242)   2339 CB 38       		 SRL B	;
243)   233B E6 07       		 AND 7	;
244)   233D 4F          		 LD C, A        ;SPECIFIC COMMAND IN GROUP	;SPECIFIC COMMAND IN GROUP
245)   233E 78          		 LD A, B	;
246)   233F CD E4 22    		 CALL GRPH_GETGROUP	;
247)   2342 7C          		 LD A, H	;
248)   2343 FE 00       		 CP 0	;
249)   2345 C8          		 RET Z        ;RET IF HL=0 GROUP NOT IMPLEMENTED	;RET IF HL=0 GROUP NOT IMPLEMENTED
250)   2346 06 00       		 LD B, 0	;
251)   2348 CB 21       		 SLA C         ;C=C*2 2BYTE ADDRESSES	;C=C*2 2BYTE ADDRESSES
252)   234A 09          		 ADD HL, BC        ;C IS 0-7 SPECIFIC COMMD	;C IS 0-7 SPECIFIC COMMD
253)   234B 5E          		 LD E, (HL)	;
254)   234C 23          		 INC HL	;
255)   234D 56          		 LD D, (HL)	;
256)   234E EB          		 EX DE, HL	;
257)   234F E9          		 JP (HL)	;
259)   2350 AF          		GRPH_NOTIMPL: XOR A	;
260)   2351 CD F0 46    		 CALL EXTERR	;
261)   2354 4E 4F 54 20 		 DEFM 'NOT IMPLEMENTED'	;
261)   2358 49 4D 50 4C 		 DEFM 'NOT IMPLEMENTED'	;
261)   235C 45 4D 45 4E 		 DEFM 'NOT IMPLEMENTED'	;
261)   2360 54 45 44    		 DEFM 'NOT IMPLEMENTED'	;
262)   2363 00          		 DEFB    0	;
266)   2364 2A 63 FE    		GRPH_CALCREL: LD HL, (GR_PARAM1)	;
267)   2367 ED 5B 5F FE 		 LD DE, (GR_LASTX)	;
268)   236B 19          		 ADD HL, DE	;
269)   236C 22 63 FE    		 LD (GR_PARAM1), HL	;
270)   236F 2A 65 FE    		 LD HL, (GR_PARAM2)	;
271)   2372 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
272)   2376 19          		 ADD HL, DE	;
273)   2377 22 65 FE    		 LD (GR_PARAM2), HL	;
274)   237A C9          		 RET	;
277)   237B CD 64 23    		 CALL GRPH_CALCREL	;
278)   237E CD 6D 22    		 CALL GRPH_SAVELASTPOS	;
279)   2381 C9          		 RET	;
282)   2382 CD 64 23    		 CALL GRPH_CALCREL	;
283)   2385 CD 8D 22    		 CALL BAS_DODRAW	;
284)   2388 C9          		 RET	;
287)   2389 2A 01 FE    		 LD HL, (FCOLOR)	;
288)   238C E5          		 PUSH HL	;
289)   238D 2A 03 FE    		 LD HL, (BCOLOR)	;
290)   2390 22 01 FE    		 LD (FCOLOR), HL	;
291)   2393 E1          		 POP HL	;
292)   2394 22 03 FE    		 LD (BCOLOR), HL	;
293)   2397 C9          		 RET	;
296)   2398 2A 05 FE    		 LD HL, (FGRCOL)	;
297)   239B E5          		 PUSH HL	;
298)   239C 2A 07 FE    		 LD HL, (BGRCOL)	;
299)   239F 22 05 FE    		 LD (FGRCOL), HL	;
300)   23A2 E1          		 POP HL	;
301)   23A3 22 07 FE    		 LD (BGRCOL), HL	;
302)   23A6 C9          		 RET	;
306)   23A7 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
307)   23AA 21 01 FE    		 LD HL, FCOLOR	;
308)   23AD 11 09 FE    		 LD DE, FCOLTM	;
309)   23B0 ED B0       		 LDIR	;
310)   23B2 01 04 00    		 LD BC, 4       ;2 FGRCOL + 2 BGRCOL	;2 FGRCOL + 2 BGRCOL
311)   23B5 21 05 FE    		 LD HL, FGRCOL	;
312)   23B8 11 01 FE    		 LD DE, FCOLOR	;
313)   23BB ED B0       		 LDIR	;
314)   23BD C9          		 RET	;
318)   23BE 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
319)   23C1 21 09 FE    		 LD HL, FCOLTM	;
320)   23C4 11 01 FE    		 LD DE, FCOLOR	;
321)   23C7 ED B0       		 LDIR	;
322)   23C9 C9          		 RET	;
326)   23CA CD 98 23    		 CALL GRPH_SWAPGRCOLS	;
327)   23CD CD 64 23    		 CALL GRPH_CALCREL	;
328)   23D0 CD 8D 22    		 CALL BAS_DODRAW	;
329)   23D3 CD 98 23    		 CALL GRPH_SWAPGRCOLS	;
330)   23D6 C9          		 RET	;
333)   23D7 CD 98 23    		 CALL GRPH_SWAPGRCOLS	;
334)   23DA CD 8D 22    		 CALL BAS_DODRAW	;
335)   23DD CD 98 23    		 CALL GRPH_SWAPGRCOLS	;
336)   23E0 C9          		 RET	;
339)   23E1 CD 8D 22    		 CALL BAS_DODRAW       ;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT	;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT
340)   23E4 2A 57 FE    		 LD HL, (GR_LASTX3)	;
341)   23E7 22 63 FE    		 LD (GR_PARAM1), HL	;
342)   23EA 2A 59 FE    		 LD HL, (GR_LASTY3)	;
343)   23ED 22 65 FE    		 LD (GR_PARAM2), HL	;
344)   23F0 CD 8D 22    		 CALL BAS_DODRAW       ;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT	;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT
345)   23F3 2A 57 FE    		 LD HL, (GR_LASTX3)	;
346)   23F6 22 63 FE    		 LD (GR_PARAM1), HL	;
347)   23F9 2A 59 FE    		 LD HL, (GR_LASTY3)	;
348)   23FC 22 65 FE    		 LD (GR_PARAM2), HL	;
349)   23FF CD 8D 22    		 CALL BAS_DODRAW       ;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT	;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT
350)   2402 01 04 00    		 LD BC, 4	;
351)   2405 21 57 FE    		 LD HL, GR_LASTX3	;
352)   2408 11 5F FE    		 LD DE, GR_LASTX	;
353)   240B ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
354)   240D C9          		 RET	;
356)   240E CD 98 23    		GRPH_TRIANGLEBC: CALL GRPH_SWAPGRCOLS	;
357)   2411 CD E1 23    		 CALL GRPH_TRIANGLE	;
358)   2414 CD 98 23    		 CALL GRPH_SWAPGRCOLS	;
359)   2417 C9          		 RET	;
362)   2418 21 63 FE    		GRPH_RECT: LD HL, GR_PARAM1	;
363)   241B 11 67 FE    		 LD DE, GR_PARAM3	;
364)   241E 01 04 00    		 LD BC, 4	;
365)   2421 ED B0       		 LDIR         ;COPY PARAM1,2 TO 3,4	;COPY PARAM1,2 TO 3,4
366)   2423 2A 61 FE    		 LD HL, (GR_LASTY)	;
367)   2426 E5          		 PUSH HL        ;PT1_Y	;PT1_Y
368)   2427 2A 5F FE    		 LD HL, (GR_LASTX)	;
369)   242A E5          		 PUSH HL        ;PT1_X	;PT1_X
370)   242B 2A 61 FE    		 LD HL, (GR_LASTY)	;
371)   242E 22 65 FE    		 LD (GR_PARAM2), HL	;
372)   2431 CD 8D 22    		 CALL BAS_DODRAW       ;PT1_X,PT1_Y TO PT2_X,PT1_Y	;PT1_X,PT1_Y TO PT2_X,PT1_Y
373)   2434 2A 69 FE    		 LD HL, (GR_PARAM4)	;
374)   2437 22 65 FE    		 LD (GR_PARAM2), HL	;
375)   243A CD 8D 22    		 CALL BAS_DODRAW       ;PT2_X,PT1_Y TO PT2_X,PT2_Y	;PT2_X,PT1_Y TO PT2_X,PT2_Y
376)   243D E1          		 POP HL         ;PT1_X	;PT1_X
377)   243E 22 63 FE    		 LD (GR_PARAM1), HL	;
378)   2441 CD 8D 22    		 CALL BAS_DODRAW       ;PT2_X,PT2_Y TO PT1_X,PT2_Y	;PT2_X,PT2_Y TO PT1_X,PT2_Y
379)   2444 E1          		 POP HL         ;PT1_Y	;PT1_Y
380)   2445 22 65 FE    		 LD (GR_PARAM2), HL	;
381)   2448 CD 8D 22    		 CALL BAS_DODRAW       ;PT1_X,PT2_Y TO PT1_X,PT1_Y	;PT1_X,PT2_Y TO PT1_X,PT1_Y
382)   244B 01 04 00    		 LD BC, 4	;
383)   244E 21 67 FE    		 LD HL, GR_PARAM3	;
384)   2451 11 5F FE    		 LD DE, GR_LASTX	;
385)   2454 ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
386)   2456 C9          		 RET	;
388)   2457 CD 98 23    		GRPH_RECTBC: CALL GRPH_SWAPGRCOLS	;
389)   245A CD 18 24    		 CALL GRPH_RECT	;
390)   245D CD 98 23    		 CALL GRPH_SWAPGRCOLS	;
391)   2460 C9          		 RET	;
394)   2461 CD A7 23    		GRPH_CIRCREL: CALL GRPH_SAVECOLORS	;
395)   2464 2A 63 FE    		 LD HL, (GR_PARAM1)	;
396)   2467 7C          		 LD A, H	;
397)   2468 B5          		 OR L	;
398)   2469 20 06       		 JR NZ, CIRE_DOIT	;
399)   246B 2A 65 FE    		 LD HL, (GR_PARAM2)	;
400)   246E 7C          		 LD A, H	;
401)   246F B5          		 OR L	;
402)   2470 C8          		 RET Z         ; RETURN IF BOTH PARAMS ARE ZERO	; RETURN IF BOTH PARAMS ARE ZERO
403)   2471 ED 5B 5F FE 		CIRE_DOIT: LD DE, (GR_LASTX)	;
404)   2475 D5          		 PUSH DE	;
405)   2476 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
406)   247A D5          		 PUSH DE	;
407)   247B E5          		 PUSH HL	;
408)   247C CD A8 1B    		 CALL LCD_CIRCLE	;
409)   247F CD BE 23    		 CALL GRPH_RESTORECOLORS	;
410)   2482 C9          		 RET	;
412)   2483 CD 98 23    		GRPH_CIRCRELBC: CALL GRPH_SWAPGRCOLS	;
413)   2486 CD 61 24    		 CALL GRPH_CIRCREL	;
414)   2489 CD 98 23    		 CALL GRPH_SWAPGRCOLS	;
415)   248C C9          		 RET	;
421)   248D C9          		GRPH_CIRCLE: RET	;
422)   248E 2A 5F FE    		 LD HL, (GR_LASTX)	;
423)   2491 ED 5B 63 FE 		 LD DE, (GR_PARAM1)	;
424)   2495 AF          		 XOR A	;
425)   2496 ED 42       		 SBC HL, BC	;
426)   2498 22 67 FE    		 LD (GR_PARAM3), HL       ;X2-X1	;X2-X1
427)   249B 2A 61 FE    		 LD HL, (GR_LASTY)	;
428)   249E ED 5B 65 FE 		 LD DE, (GR_PARAM2)	;
429)   24A2 AF          		 XOR A	;
430)   24A3 ED 42       		 SBC HL, BC	;
431)   24A5 22 69 FE    		 LD (GR_PARAM4), HL       ;Y2-Y1	;Y2-Y1
433)   24A8 ED 4B 67 FE 		 LD BC, (GR_PARAM3)	;
434)   24AC C5          		 PUSH BC	;
435)   24AD D1          		 POP DE	;
436)   24AE CD 52 30    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
437)   24B1 D9          		 EXX	;
438)   24B2 C5          		 PUSH BC	;
439)   24B3 D1          		 POP DE	;
440)   24B4 D9          		 EXX	;
441)   24B5 E5          		 PUSH HL        ;DE LOW	;DE LOW
442)   24B6 ED 4B 69 FE 		 LD BC, (GR_PARAM4)	;
443)   24BA C5          		 PUSH BC	;
444)   24BB D1          		 POP DE	;
445)   24BC CD 52 30    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
446)   24BF D9          		 EXX	;
447)   24C0 C5          		 PUSH BC	;
448)   24C1 E1          		 POP HL	;
449)   24C2 D9          		 EXX	;
450)   24C3 D1          		 POP DE	;
452)   24C4 CD 6D 30    		 CALL ADD32	;
456)   24C7 C9          		 RET	;
458)   24C8 CD 98 23    		GRPH_CIRCLEBC: CALL GRPH_SWAPGRCOLS	;
459)   24CB CD 8D 24    		 CALL GRPH_CIRCLE	;
460)   24CE CD 98 23    		 CALL GRPH_SWAPGRCOLS	;
461)   24D1 C9          		 RET	;
465)   24D2 CD 98 23    		GRPH_FILL: CALL GRPH_SWAPGRCOLS	;
466)   24D5 CD A7 23    		 CALL GRPH_SAVECOLORS	;
467)   24D8 2A 63 FE    		 LD HL, (GR_PARAM1)	;
468)   24DB E5          		 PUSH HL	;
469)   24DC 2A 65 FE    		 LD HL, (GR_PARAM2)	;
470)   24DF E5          		 PUSH HL	;
471)   24E0 CD 2C 1D    		 CALL LCD_FILL	;
472)   24E3 CD BE 23    		 CALL GRPH_RESTORECOLORS	;
473)   24E6 CD 98 23    		 CALL GRPH_SWAPGRCOLS	;
474)   24E9 C9          		 RET	;
476)   24EA 7B 23       		PLOT00: DW GRPH_MOVEREL	;
477)   24EC 82 23       		 DW GRPH_LINEREL	;
478)   24EE 50 23       		 DW GRPH_NOTIMPL	;
479)   24F0 CA 23       		 DW GRPH_LINERELBC	;
480)   24F2 6D 22       		 DW GRPH_SAVELASTPOS	;
481)   24F4 8D 22       		 DW BAS_DODRAW	;
482)   24F6 50 23       		 DW GRPH_NOTIMPL	;
483)   24F8 D7 23       		 DW GRPH_DRAWBC	;
485)   24FA 50 23       		PLOT80: DW GRPH_NOTIMPL	;
486)   24FC E1 23       		 DW GRPH_TRIANGLE	;
487)   24FE 50 23       		 DW GRPH_NOTIMPL	;
488)   2500 0E 24       		 DW GRPH_TRIANGLEBC	;
489)   2502 50 23       		 DW GRPH_NOTIMPL	;
490)   2504 E1 23       		 DW GRPH_TRIANGLE	;
491)   2506 50 23       		 DW GRPH_NOTIMPL	;
492)   2508 0E 24       		 DW GRPH_TRIANGLEBC	;
494)   250A 50 23       		PLOT96: DW GRPH_NOTIMPL	;
495)   250C 18 24       		 DW GRPH_RECT	;
496)   250E 50 23       		 DW GRPH_NOTIMPL	;
497)   2510 57 24       		 DW GRPH_RECTBC	;
498)   2512 50 23       		 DW GRPH_NOTIMPL	;
499)   2514 18 24       		 DW GRPH_RECT	;
500)   2516 50 23       		 DW GRPH_NOTIMPL	;
501)   2518 57 24       		 DW GRPH_RECTBC	;
503)   251A 50 23       		PLOT128: DW GRPH_NOTIMPL	;
504)   251C D2 24       		 DW GRPH_FILL	;
505)   251E 50 23       		 DW GRPH_NOTIMPL	;
506)   2520 50 23       		 DW GRPH_NOTIMPL	;
507)   2522 50 23       		 DW GRPH_NOTIMPL	;
508)   2524 50 23       		 DW GRPH_NOTIMPL	;
509)   2526 50 23       		 DW GRPH_NOTIMPL	;
510)   2528 50 23       		 DW GRPH_NOTIMPL	;
512)   252A 61 24       		PLOT144: DW GRPH_CIRCREL	;
513)   252C 61 24       		 DW GRPH_CIRCREL	;
514)   252E 50 23       		 DW GRPH_NOTIMPL	;
515)   2530 83 24       		 DW GRPH_CIRCRELBC	;
516)   2532 8D 24       		 DW GRPH_CIRCLE	;
517)   2534 8D 24       		 DW GRPH_CIRCLE	;
518)   2536 50 23       		 DW GRPH_NOTIMPL	;
519)   2538 C8 24       		 DW GRPH_CIRCLEBC	;
521)   253A 50 23       		PLOT152: DW GRPH_NOTIMPL	;
522)   253C 50 23       		 DW GRPH_NOTIMPL	;
523)   253E 50 23       		 DW GRPH_NOTIMPL	;
524)   2540 50 23       		 DW GRPH_NOTIMPL	;
525)   2542 50 23       		 DW GRPH_NOTIMPL	;
526)   2544 50 23       		 DW GRPH_NOTIMPL	;
527)   2546 50 23       		 DW GRPH_NOTIMPL	;
528)   2548 50 23       		 DW GRPH_NOTIMPL	;
530)   254A 50 23       		PLOT160: DW GRPH_NOTIMPL	;
531)   254C 50 23       		 DW GRPH_NOTIMPL	;
532)   254E 50 23       		 DW GRPH_NOTIMPL	;
533)   2550 50 23       		 DW GRPH_NOTIMPL	;
534)   2552 50 23       		 DW GRPH_NOTIMPL	;
535)   2554 50 23       		 DW GRPH_NOTIMPL	;
536)   2556 50 23       		 DW GRPH_NOTIMPL	;
537)   2558 50 23       		 DW GRPH_NOTIMPL	;
539)   255A 50 23       		PLOT192: DW GRPH_NOTIMPL	;
540)   255C 50 23       		 DW GRPH_NOTIMPL	;
541)   255E 50 23       		 DW GRPH_NOTIMPL	;
542)   2560 50 23       		 DW GRPH_NOTIMPL	;
543)   2562 50 23       		 DW GRPH_NOTIMPL	;
544)   2564 50 23       		 DW GRPH_NOTIMPL	;
545)   2566 50 23       		 DW GRPH_NOTIMPL	;
546)   2568 50 23       		 DW GRPH_NOTIMPL	;
548)   256A 50 23       		PLOT200: DW GRPH_NOTIMPL	;
549)   256C 50 23       		 DW GRPH_NOTIMPL	;
550)   256E 50 23       		 DW GRPH_NOTIMPL	;
551)   2570 50 23       		 DW GRPH_NOTIMPL	;
552)   2572 50 23       		 DW GRPH_NOTIMPL	;
553)   2574 50 23       		 DW GRPH_NOTIMPL	;
554)   2576 50 23       		 DW GRPH_NOTIMPL	;
555)   2578 50 23       		 DW GRPH_NOTIMPL	;
558)   257A AF          		 XOR A	;
559)   257B CD F0 46    		 CALL EXTERR	;
560)   257E 70 61 72 61 		 DEFM 'param error'	;
560)   2582 6D 20 65 72 		 DEFM 'param error'	;
560)   2586 72 6F 72    		 DEFM 'param error'	;
561)   2589 00          		 DEFB    0	;
  6)   258A 11 B9 FE    		@MYOS_OSSAVE: LD DE, STRGBUFF	;
  7)   258D 7E          		OSNXT: LD A, (HL)        ;hl = ACCS =FILENAME ENDS WITH 0X0D	;hl = ACCS =FILENAME ENDS WITH 0X0D
  8)   258E FE 0D       		 CP 13         ;	;
  9)   2590 20 01       		 JR NZ, OSCONT	;
 10)   2592 AF          		 XOR A	;
 11)   2593 12          		OSCONT: LD (DE), A	;
 12)   2594 23          		 INC HL	;
 13)   2595 13          		 INC DE	;
 14)   2596 FE 00       		 CP 0	;
 15)   2598 20 F3       		 JR NZ, OSNXT	;
 16)   259A 3E 04       		 LD A, 4        ;OPEN FILE FOR WRITE AND CREATE IT	;OPEN FILE FOR WRITE AND CREATE IT
 17)   259C C5          		 PUSH BC	;
 18)   259D CD DB 0E    		 CALL STRG_OPNFILE       ;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A	;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A
 19)   25A0 C1          		 POP BC         ;bc = length of program	;bc = length of program
 20)   25A1 38 12       		 JR C, SVERR	;
 21)   25A3 ED 5B DC FD 		 LD DE, (PAGE)	;
 22)   25A7 CD 0B 0F    		 CALL STRG_BLKWRITE      ;BLOCK WRITE	;BLOCK WRITE
 23)   25AA FE C8       		 CP FCMDOK	;
 24)   25AC 20 07       		 JR NZ, SVERR	;
 25)   25AE 3A E5 FE    		 LD A, (FID)	;
 26)   25B1 CD F9 0E    		 CALL STRG_CLSFILE	;
 27)   25B4 C9          		 RET         ;ON RET A=RESULT	;ON RET A=RESULT
 28)   25B5 FE CA       		SVERR: CP FNOTFND	;
 29)   25B7 CA 10 26    		 JP Z, FLNOTF	;
 30)   25BA CD F0 46    		 CALL EXTERR	;
 31)   25BD 45 72 72 6F 		 DEFM  "Error Saving"	;
 31)   25C1 72 20 53 61 		 DEFM  "Error Saving"	;
 31)   25C5 76 69 6E 67 		 DEFM  "Error Saving"	;
 32)   25C9 00          		 DEFB    0	;
 36)   25CA 11 B9 FE    		@MYOS_OSLOAD: LD DE, STRGBUFF	;
 37)   25CD 7E          		OLNXT: LD A, (HL)	;
 38)   25CE FE 0D       		 CP 13         ;	;
 39)   25D0 20 01       		 JR NZ, OLCONT	;
 40)   25D2 AF          		 XOR A	;
 41)   25D3 12          		OLCONT: LD (DE), a	;
 42)   25D4 23          		 INC HL	;
 43)   25D5 13          		 INC DE	;
 44)   25D6 FE 00       		 CP 0	;
 45)   25D8 20 F3       		 JR NZ, OLNXT	;
 46)   25DA CD DB 0E    		 CALL STRG_OPNFILE      ;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A	;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A
 47)   25DD 38 1C       		 JR C, LDERR	;
 48)   25DF 2A DC FD    		 LD HL, (PAGE)	;
 49)   25E2 EB          		 EX DE, HL	;
 50)   25E3 01 00 00    		 LD BC, 0        ;ZERO MEANS LOAD ALL	;ZERO MEANS LOAD ALL
 51)   25E6 CD 2E 0F    		 CALL STRG_BLKREAD      ;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED	;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED
 52)   25E9 FE C8       		 CP FCMDOK	;
 53)   25EB 20 0E       		 JR NZ, LDERR	;
 54)   25ED 3A E5 FE    		 LD A, (FID)	;
 55)   25F0 CD F9 0E    		 CALL STRG_CLSFILE	;
 56)   25F3 21 DE FD    		 LD HL, TOP       ;SAVE TOP OF BASIC	;SAVE TOP OF BASIC
 57)   25F6 73          		 LD (HL), E	;
 58)   25F7 23          		 INC HL	;
 59)   25F8 72          		 LD (HL), D	;
 60)   25F9 37          		 SCF         ;SET C = NO ERROR	;SET C = NO ERROR
 61)   25FA C9          		 RET	;
 62)   25FB FE CA       		LDERR: CP FNOTFND	;
 63)   25FD 28 11       		 JR Z, FLNOTF	;
 64)   25FF CD F0 46    		 CALL EXTERR	;
 65)   2602 45 72 72 6F 		 DEFM  "Error Loading"	;
 65)   2606 72 20 4C 6F 		 DEFM  "Error Loading"	;
 65)   260A 61 64 69 6E 		 DEFM  "Error Loading"	;
 65)   260E 67          		 DEFM  "Error Loading"	;
 66)   260F 00          		 DEFB    0	;
 67)   2610 CD F0 46    		FLNOTF: CALL EXTERR	;
 68)   2613 57 72 6F 6E 		 DEFM  "Wrong Filename"	;
 68)   2617 67 20 46 69 		 DEFM  "Wrong Filename"	;
 68)   261B 6C 65 6E 61 		 DEFM  "Wrong Filename"	;
 68)   261F 6D 65       		 DEFM  "Wrong Filename"	;
 69)   2621 00          		 DEFB    0	;
 41)   2622 C3 98 03    		@MYOS_CLRSCN: JP OS_CLRSCR       ; CLRSCN: clears the screen.	; CLRSCN: clears the screen.
 44)   2625 7D          		 LD A, L	;
 45)   2626 32 A7 FE    		 LD (TIMECTR), A	;
 46)   2629 7C          		 LD A, H	;
 47)   262A 32 A8 FE    		 LD (TIMECTR + 1), A	;
 48)   262D 7B          		 LD A, E	;
 49)   262E 32 A9 FE    		 LD (TIMECTR + 2), A	;
 50)   2631 7A          		 LD A, D	;
 51)   2632 32 AA FE    		 LD (TIMECTR + 3), A	;
 52)   2635 C9          		 RET	;
 56)   2636 3A A7 FE    		 LD A, (TIMECTR)	;
 57)   2639 6F          		 LD L, A	;
 58)   263A 3A A8 FE    		 LD A, (TIMECTR + 1)	;
 59)   263D 67          		 LD H, A	;
 60)   263E 3A A9 FE    		 LD A, (TIMECTR + 2)	;
 61)   2641 5F          		 LD E, A	;
 62)   2642 3A AA FE    		 LD A, (TIMECTR + 3)	;
 63)   2645 57          		 LD D, A	;
 64)   2646 C9          		 RET	;
 66)   2647 63          		 LD H, E	;
 67)   2648 E5          		 PUSH HL	;
 68)   2649 CD 91 03    		 CALL OS_RMVCURS	;
 69)   264C E1          		 POP HL	;
 70)   264D 7C          		 LD A, H	;
 71)   264E 32 0D FE    		 LD (CURSORX), A	;
 72)   2651 32 F9 FE    		 LD (VGATX_X),A	;
 73)   2654 7D          		 LD A, L	;
 74)   2655 32 0E FE    		 LD (CURSORY), A	;
 75)   2658 32 FA FE    		 LD (VGATX_Y),A	;
 76)   265B CD 8A 03    		 CALL OS_PRNCURS	;
 77)   265E C9          		 RET	;
 79)   265F 16 00       		 LD D, 0	;
 80)   2661 3A 0D FE    		 LD A, (CURSORX)	;
 82)   2664 5F          		 LD E, A	;
 83)   2665 26 00       		 LD H, 0	;
 86)   2667 CD 2B 1E    		 CALL LCD_CALCLINE      ;GETS CURSORY WITH SCROLL	;GETS CURSORY WITH SCROLL
 87)   266A 6F          		 LD L, A	;
 88)   266B C9          		 RET	;
 89)   266C 06 50       		KEYGET: LD B, 80       ;SCREEN WIDTH IN CHARS	;SCREEN WIDTH IN CHARS
 91)   266E E5          		 PUSH HL	;
 92)   266F ED 62       		 SBC HL, HL        ;HL=0	;HL=0
 93)   2671 CD 59 28    		 CALL MYOS_OSKEY	;
 94)   2674 E1          		 POP HL	;
 95)   2675 D8          		 RET C	;
 96)   2676 18 F6       		 JR MYOS_OSRDCH	;
 97)   2678 C9          		 RET	;
 99)   2679 F5          		 PUSH AF	;
100)   267A D5          		 PUSH DE	;
101)   267B E5          		 PUSH HL	;
102)   267C DD E5       		 PUSH IX	;
103)   267E 5F          		 LD E, A	;
104)   267F CD 78 28    		 CALL ESCTEST	;
107)   2682 7B          		 LD A, E	;
108)   2683 FE 20       		 CP 32	;
109)   2685 38 0D       		 JR C, CTRCODE	;
110)   2687 FE 7F       		 CP 127         ;BACKSPACE	;BACKSPACE
111)   2689 C2 0D 28    		 JP NZ, PRINTIT	;
112)   268C 3E 08       		 LD A, 8        ;DO A BACKSPACE	;DO A BACKSPACE
113)   268E CD 78 03    		 CALL OS_PRINTCHAR	;
114)   2691 C3 10 28    		 JP OSWREXIT	;
115)   2694 FE 04       		CTRCODE: CP 4       ;WRITE TEXT AT TEXT POS	;WRITE TEXT AT TEXT POS
116)   2696 20 06       		 JR NZ, CC1	;
117)   2698 32 16 FE    		 LD (VDUMODE), A	;
118)   269B C3 10 28    		 JP OSWREXIT	;
119)   269E FE 05       		CC1: CP 5        ;WRITE TEXT AT GRAPH POS	;WRITE TEXT AT GRAPH POS
120)   26A0 20 06       		 JR NZ, CC2	;
121)   26A2 32 16 FE    		 LD (VDUMODE), A	;
122)   26A5 C3 10 28    		 JP OSWREXIT	;
123)   26A8 FE 06       		CC2: CP 6        ;ENABLE OUTPUT TO SCREEN	;ENABLE OUTPUT TO SCREEN
124)   26AA 20 03       		 JR NZ, CC3	;
125)   26AC C3 10 28    		 JP OSWREXIT	;
126)   26AF FE 07       		CC3: CP 7        ;BEEP	;BEEP
127)   26B1 20 03       		 JR NZ, CC4	;
128)   26B3 C3 10 28    		 JP OSWREXIT	;
129)   26B6 FE 08       		CC4: CP 8        ;MOVE TEXT CURSOR BACK A CHAR	;MOVE TEXT CURSOR BACK A CHAR
130)   26B8 20 03       		 JR NZ, CC5	;
131)   26BA C3 0D 28    		 JP PRINTIT	;
138)   26BD FE 09       		CC5: CP 9        ;MOVE TEXT CURSOR FORWARD A CHAR	;MOVE TEXT CURSOR FORWARD A CHAR
139)   26BF 20 0F       		 JR NZ, CC6	;
140)   26C1 3A 0D FE    		 LD A, (CURSORX)	;
141)   26C4 3C          		 INC A	;
142)   26C5 FE 50       		 CP 80	;
143)   26C7 D2 10 28    		 JP NC, OSWREXIT	;
144)   26CA 32 0D FE    		 LD (CURSORX), A	;
145)   26CD C3 10 28    		 JP OSWREXIT	;
146)   26D0 FE 0A       		CC6: CP 10        ;MOVE TEXT DOWN LF	;MOVE TEXT DOWN LF
147)   26D2 CA 0D 28    		 JP Z, PRINTIT	;
148)   26D5 FE 0B       		CC7: CP 11        ;MOVE TEXT UP	;MOVE TEXT UP
149)   26D7 20 0F       		 JR NZ, CC8	;
150)   26D9 3A 0E FE    		 LD A, (CURSORY)	;
151)   26DC 3D          		 DEC A	;
152)   26DD FE FF       		 CP 0XFF	;
153)   26DF CA 10 28    		 JP Z, OSWREXIT	;
154)   26E2 32 0E FE    		 LD (CURSORY), A	;
155)   26E5 C3 10 28    		 JP OSWREXIT	;
156)   26E8 FE 0C       		CC8: CP 12        ; CLS	; CLS
157)   26EA 20 06       		 JR NZ, CC9	;
158)   26EC CD 98 03    		 CALL OS_CLRSCR	;
159)   26EF C3 10 28    		 JP OSWREXIT	;
160)   26F2 FE 0D       		CC9: CP 13        ;GOTO START OF LINE CR	;GOTO START OF LINE CR
161)   26F4 CA 0D 28    		 JP Z, PRINTIT	;
162)   26F7 FE 0E       		CC10: CP 14        ;ENABLE THE AUTOPAGING MODE	;ENABLE THE AUTOPAGING MODE
163)   26F9 20 03       		 JR NZ, CC11	;
164)   26FB C3 10 28    		 JP OSWREXIT	;
165)   26FE FE 0F       		CC11: CP 15        ;DISABLE THE AUTOPAGING MODE	;DISABLE THE AUTOPAGING MODE
166)   2700 20 03       		 JR NZ, CC12	;
167)   2702 C3 10 28    		 JP OSWREXIT	;
168)   2705 FE 10       		CC12: CP 16        ;CLG	;CLG
169)   2707 20 06       		 JR NZ, CC13	;
170)   2709 CD 6A 2C    		 CALL MYOS_CLG	;
171)   270C C3 10 28    		 JP OSWREXIT	;
172)   270F FE 11       		CC13: CP 17        ; SAME AS COLOUR	; SAME AS COLOUR
173)   2711 20 09       		 JR NZ, CC14	;
175)   2713 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
176)   2715 CD 94 5E    		 CALL EXPRI	;
177)   2718 D9          		 EXX        ;l has the param  color	;l has the param  color
178)   2719 C3 10 28    		 JP OSWREXIT	;
179)   271C FE 12       		CC14: CP 18        ;SAME AS GCOL	;SAME AS GCOL
180)   271E 20 0F       		 JR NZ, CC15	;
181)   2720 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
182)   2722 CD 94 5E    		 CALL EXPRI	;
183)   2725 D9          		 EXX        ;l has the param  mode	;l has the param  mode
184)   2726 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
185)   2728 CD 94 5E    		 CALL EXPRI	;
186)   272B D9          		 EXX        ;l has the param  color	;l has the param  color
188)   272C C3 10 28    		 JP OSWREXIT	;
189)   272F FE 13       		CC15: CP 19        ;SELECT A COLOR PALLETTE???	;SELECT A COLOR PALLETTE???
190)   2731 20 0F       		 JR NZ, CC16	;
192)   2733 06 05       		 LD B, 5	;
193)   2735 C5          		CC15AGN: PUSH BC	;
194)   2736 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
195)   2738 CD 94 5E    		 CALL EXPRI	;
196)   273B D9          		 EXX        ;l has the param	;l has the param
197)   273C C1          		 POP BC	;
198)   273D 10 F6       		 DJNZ CC15AGN	;
199)   273F C3 10 28    		 JP OSWREXIT	;
200)   2742 FE 14       		CC16: CP 20        ;RESTORE THE DEFAULT LOGICAL COLORS	;RESTORE THE DEFAULT LOGICAL COLORS
201)   2744 20 03       		 JR NZ, CC17	;
203)   2746 C3 10 28    		 JP OSWREXIT	;
204)   2749 FE 15       		CC17: CP 21        ;NO OUTPUT TO SCREEN	;NO OUTPUT TO SCREEN
205)   274B 20 03       		 JR NZ, CC18	;
207)   274D C3 10 28    		 JP OSWREXIT	;
208)   2750 FE 16       		CC18: CP 22        ;LIKE MODE	;LIKE MODE
209)   2752 20 09       		 JR NZ, CC19	;
210)   2754 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
211)   2756 CD 94 5E    		 CALL EXPRI	;
212)   2759 D9          		 EXX        ;l has the param	;l has the param
213)   275A C3 10 28    		 JP OSWREXIT	;
214)   275D FE 17       		CC19: CP 23        ;Program characters and control the cursor.???	;Program characters and control the cursor.???
215)   275F 20 27       		 JR NZ, CC20	;
216)   2761 06 09       		 LD B, 9        ;9 PARAMS CHAR_NO +8 ROWS OF A CHAR	;9 PARAMS CHAR_NO +8 ROWS OF A CHAR
217)   2763 FD 7E 00    		 LD A, (IY)	;
218)   2766 FD 23       		 INC IY        ;SKIP ',' OR ';'	;SKIP ',' OR ';'
219)   2768 FE 3B       		 CP ';'        ;'	;'
220)   276A 20 01       		 JR NZ, CC19AGN	;
221)   276C 05          		 DEC B        ; IF ; THE DELIMETER THEN 2 BYTES AT START	; IF ; THE DELIMETER THEN 2 BYTES AT START
222)   276D C5          		CC19AGN: PUSH BC	;
223)   276E CD 94 5E    		 CALL EXPRI	;
224)   2771 D9          		 EXX        ;l has the param	;l has the param
225)   2772 FD 7E 00    		 LD A, (IY)	;
226)   2775 FE 2C       		 CP ', '	;
227)   2777 28 07       		 JR Z, CC19NXT0	;
228)   2779 FE 3B       		 CP ';'        ;'	;'
229)   277B 20 05       		 JR NZ, CC19NXT	;
230)   277D C1          		 POP BC	;
231)   277E 05          		 DEC B	;
232)   277F C5          		 PUSH BC	;
233)   2780 FD 23       		CC19NXT0: INC IY       ;SKIP ','	;SKIP ','
234)   2782 C1          		CC19NXT: POP BC	;
235)   2783 10 E8       		 DJNZ CC19AGN	;
236)   2785 C3 10 28    		 JP OSWREXIT	;
237)   2788 FE 18       		CC20: CP 24        ;Define a graphics window	;Define a graphics window
238)   278A 20 11       		 JR NZ, CC21	;
239)   278C FD 23       		 INC IY        ;SKIP ','	;SKIP ','
240)   278E 06 04       		 LD B, 4        ;4 PARAMS TWO CORNERS OF A RECT	;4 PARAMS TWO CORNERS OF A RECT
241)   2790 C5          		CC20AGN: PUSH BC	;
242)   2791 CD 94 5E    		 CALL EXPRI	;
243)   2794 D9          		 EXX        ;HL has the param	;HL has the param
244)   2795 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
245)   2797 C1          		 POP BC	;
246)   2798 10 F6       		 DJNZ CC20AGN	;
247)   279A C3 10 28    		 JP OSWREXIT	;
248)   279D FE 19       		CC21: CP 25        ;Identical to PLOT.	;Identical to PLOT.
249)   279F 20 17       		 JR NZ, CC22	;
250)   27A1 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
251)   27A3 CD 94 5E    		 CALL EXPRI	;
252)   27A6 D9          		 EXX        ;L has the param PLOTMODE	;L has the param PLOTMODE
253)   27A7 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
254)   27A9 CD 94 5E    		 CALL EXPRI	;
255)   27AC D9          		 EXX        ;HL has the param X	;HL has the param X
256)   27AD FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
257)   27AF CD 94 5E    		 CALL EXPRI	;
258)   27B2 D9          		 EXX        ;HL has the param Y	;HL has the param Y
259)   27B3 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
262)   27B5 C3 10 28    		 JP OSWREXIT	;
263)   27B8 FE 1A       		CC22: CP 26        ;Restore the default text and graphics windows.	;Restore the default text and graphics windows.
264)   27BA 20 02       		 JR NZ, CC23	;
265)   27BC 18 52       		 JR OSWREXIT	;
266)   27BE FE 1B       		CC23: CP 27        ;Send the next character to the screen.	;Send the next character to the screen.
267)   27C0 20 07       		 JR NZ, CC24	;
268)   27C2 CD 94 5E    		 CALL EXPRI	;
269)   27C5 D9          		 EXX        ;	;
270)   27C6 7D          		 LD A, L	;
271)   27C7 18 44       		 JR PRINTIT	;
272)   27C9 FE 1C       		CC24: CP 28        ;Define a text window.	;Define a text window.
273)   27CB 20 0E       		 JR NZ, CC25	;
274)   27CD 06 04       		 LD B, 4        ;4 PARAMS UPPERLEFT AND LOWERRIGHT	;4 PARAMS UPPERLEFT AND LOWERRIGHT
275)   27CF C5          		CC24AGN: PUSH BC	;
276)   27D0 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
277)   27D2 CD 94 5E    		 CALL EXPRI	;
278)   27D5 D9          		 EXX        ;l has the param	;l has the param
279)   27D6 C1          		 POP BC	;
280)   27D7 10 F6       		 DJNZ CC24AGN	;
281)   27D9 18 35       		 JR OSWREXIT	;
282)   27DB FE 1D       		CC25: CP 29        ;Set the graphics origin.	;Set the graphics origin.
283)   27DD 20 10       		 JR NZ, CC26	;
284)   27DF FD 23       		 INC IY        ;SKIP ','	;SKIP ','
285)   27E1 CD 94 5E    		 CALL EXPRI	;
286)   27E4 D9          		 EXX        ;HL has the param X	;HL has the param X
287)   27E5 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
288)   27E7 CD 94 5E    		 CALL EXPRI	;
289)   27EA D9          		 EXX        ;HL has the param Y	;HL has the param Y
290)   27EB FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
292)   27ED 18 21       		 JR OSWREXIT	;
293)   27EF FE 1E       		CC26: CP 30        ;Home the text cursor to the top left of the screen.	;Home the text cursor to the top left of the screen.
294)   27F1 20 08       		 JR NZ, CC27	;
295)   27F3 21 00 00    		 LD HL, 0	;
296)   27F6 22 0D FE    		 LD (CURSORX), HL	;
297)   27F9 18 15       		 JR OSWREXIT	;
298)   27FB FE 1F       		CC27: CP 31        ;Move the text cursor - identical to TAB(x,y).	;Move the text cursor - identical to TAB(x,y).
299)   27FD 20 11       		 JR NZ, OSWREXIT	;
300)   27FF FD 23       		 INC IY        ;SKIP ','	;SKIP ','
301)   2801 CD 94 5E    		 CALL EXPRI	;
302)   2804 D9          		 EXX        ;l has the param X	;l has the param X
303)   2805 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
304)   2807 CD 94 5E    		 CALL EXPRI	;
305)   280A D9          		 EXX        ;l has the param Y	;l has the param Y
307)   280B 18 03       		 JR OSWREXIT	;
310)   280D CD 16 28    		PRINTIT: CALL EDPUT	;
311)   2810 DD E1       		OSWREXIT: POP IX	;
312)   2812 E1          		 POP HL	;
313)   2813 D1          		 POP DE	;
314)   2814 F1          		 POP AF	;
315)   2815 C9          		 RET	;
320)   2816 3A 00 FE    		EDPUT: LD A, (FLAGS)	;
321)   2819 CB 5F       		 BIT 3, A	;
322)   281B 28 10       		 JR Z, WRCH	;
323)   281D 7B          		 LD A, E	;
324)   281E FE 20       		 CP ' '	;
325)   2820 D8          		 RET C	;
326)   2821 2A 12 FE    		 LD HL, (EDPTR)	;
327)   2824 73          		 LD (HL), E	;
328)   2825 2C          		 INC L	;
329)   2826 C8          		 RET Z	;
330)   2827 22 12 FE    		 LD (EDPTR), HL	;
331)   282A C9          		 RET	;
334)   282B 1E 3E       		 LD E, '>'	;
335)   282D 7B          		WRCH: LD A, E	;
336)   282E F5          		 PUSH AF	;
337)   282F C5          		 PUSH BC	;
338)   2830 D5          		 PUSH DE	;
339)   2831 E5          		 PUSH HL	;
340)   2832 DD E5       		 PUSH IX	;
341)   2834 FD E5       		 PUSH IY	;
342)   2836 F5          		 PUSH AF	;
343)   2837 C5          		 PUSH BC	;
344)   2838 D5          		 PUSH DE	;
345)   2839 E5          		 PUSH HL	;
346)   283A CD 91 03    		 CALL OS_RMVCURS	;
347)   283D E1          		 POP HL	;
348)   283E D1          		 POP DE	;
349)   283F C1          		 POP BC	;
350)   2840 F1          		 POP AF	;
353)   2841 CD 78 03    		 CALL OS_PRINTCHAR	;
354)   2844 CD 8A 03    		 CALL OS_PRNCURS	;
363)   2847 FD E1       		 POP IY	;
364)   2849 DD E1       		 POP IX	;
365)   284B E1          		 POP HL	;
366)   284C D1          		 POP DE	;
367)   284D C1          		 POP BC	;
368)   284E F1          		 POP AF	;
369)   284F C9          		 RET	;
371)   2850 3A 00 FE    		TOGGLE: LD A, (FLAGS)	;
372)   2853 EE 04       		 XOR 00000100B	;
373)   2855 32 00 FE    		 LD (FLAGS), A	;
374)   2858 C9          		 RET	;
383)   2859 E5          		@MYOS_OSKEY: PUSH HL	;
384)   285A 21 15 FE    		 LD HL, INKEY	;
385)   285D 7E          		 LD A, (HL)	;
386)   285E 36 00       		 LD (HL), 0	;
387)   2860 E1          		 POP HL	;
388)   2861 B7          		 OR A	;
389)   2862 37          		 SCF	;
390)   2863 C0          		 RET NZ	;
392)   2864 CD D1 2C    		 CALL GETKEYNW	;
394)   2867 D0          		 RET NC	;
395)   2868 FE 1B       		 CP ESC	;
396)   286A 37          		 SCF	;
397)   286B C0          		 RET NZ	;
398)   286C E5          		ESCSET: PUSH HL	;
399)   286D 21 00 FE    		 LD HL, FLAGS	;
400)   2870 CB 76       		 BIT 6, (HL)        ; ESC DISABLED?	; ESC DISABLED?
401)   2872 20 02       		 JR NZ, ESCDIS	;
402)   2874 CB FE       		 SET 7, (HL)        ; SET ESCAPE FLAG	; SET ESCAPE FLAG
403)   2876 E1          		ESCDIS: POP HL	;
404)   2877 C9          		 RET	;
405)   2878 CD AB 0A    		ESCTEST: CALL RS_RXNW	;
406)   287B B7          		 OR A	;
407)   287C C8          		 RET Z	;
408)   287D FE 1B       		 CP 0x1B        ; ESC	; ESC
409)   287F 28 EB       		 JR Z, ESCSET	;
410)   2881 32 15 FE    		 LD (INKEY), A	;
411)   2884 C9          		 RET	;
413)   2885 CD 78 28    		@MYOS_TRAP: CALL ESCTEST	;
414)   2888 3A 00 FE    		@MYOS_LTRAP: LD A, (FLAGS)	;
415)   288B B7          		 OR A	;
416)   288C F0          		 RET P	;
417)   288D 21 00 FE    		ABORT: LD HL, FLAGS	;
418)   2890 CB BE       		 RES 7, (HL)	;
419)   2892 C3 C2 4D    		 JP ESCAPE	;
428)   2895 F3          		 DI	;
429)   2896 21 F6 FD    		 LD HL, RANDOM        ; SET RANDOM SEED TO NON 0	; SET RANDOM SEED TO NON 0
430)   2899 3E 06       		 LD A, 0x06	;
431)   289B 77          		 LD (HL), A	;
432)   289C 3E BB       		 LD A, 0xBB	;
433)   289E 77          		 LD (HL), A	;
434)   289F 21 00 00    		 LD HL, 0	;
435)   28A2 22 0D FE    		 LD (CURSORX), HL       ; CURSOR X 7 Y ZEROED	; CURSOR X 7 Y ZEROED
436)   28A5 11 FF FF    		 LD DE, COL_WHITE       ; SET FCOLOR AND BCOLOR DEFAULT VALUES	; SET FCOLOR AND BCOLOR DEFAULT VALUES
437)   28A8 21 01 FE    		 LD HL, FCOLOR	;
438)   28AB 73          		 LD (HL), E	;
439)   28AC 23          		 INC HL	;
440)   28AD 72          		 LD (HL), D	;
441)   28AE 23          		 INC HL	;
442)   28AF 11 00 00    		 LD DE, COL_BLACK	;
443)   28B2 73          		 LD (HL), E	;
444)   28B3 23          		 INC HL	;
445)   28B4 72          		 LD (HL), D	;
446)   28B5 01 04 00    		 LD BC, 4        ; COPY SAME COLORS TO GRAPHICS	; COPY SAME COLORS TO GRAPHICS
447)   28B8 11 05 FE    		 LD DE, FGRCOL	;
448)   28BB 21 01 FE    		 LD HL, FCOLOR	;
449)   28BE ED B0       		 LDIR	;
450)   28C0 11 17 FE    		 LD DE, FCOLPAL	;
451)   28C3 CD CE 28    		 CALL COPYPAL	;
452)   28C6 11 37 FE    		 LD DE, BCOLPAL	;
453)   28C9 CD CE 28    		 CALL COPYPAL	;
454)   28CC 18 16       		 JR OSFINSH       ;	;
455)   28CE 21 F1 28    		COPYPAL: LD HL, COL_PALET	;
456)   28D1 01 20 00    		 LD BC, 16 * 2        ;SHOULD ADD 8 MORE COLORS	;SHOULD ADD 8 MORE COLORS
457)   28D4 ED B0       		 LDIR	;
458)   28D6 AF          		 XOR A	;
459)   28D7 32 0F FE    		 LD (SCRLN), A	;
460)   28DA 21 00 00    		 LD HL, 0	;
461)   28DD 22 A7 FE    		 LD (TIMECTR), HL	;
462)   28E0 22 A9 FE    		 LD (TIMECTR + 2), HL	;
463)   28E3 C9          		 RET	;
465)   28E4 CD 98 03    		OSFINSH: CALL OS_CLRSCR	;
466)   28E7 AF          		 XOR A	;
467)   28E8 11 FF F9    		 LD DE, STACKP - 0x100      ;DE = HIMEM	;DE = HIMEM
468)   28EB 5F          		 LD E, A        ;PAGE BOUNDARY	;PAGE BOUNDARY
469)   28EC 21 00 80    		 LD HL, RAMADBBC       ;@USER	;@USER
470)   28EF FB          		 EI	;
471)   28F0 C9          		 RET	;
472)   28F1 00 00       		COL_PALET: DW COL_BLACK	;
473)   28F3 00 F8       		 DW COL_RED	;
474)   28F5 C0 07       		 DW COL_GREEN	;
475)   28F7 C0 FF       		 DW COL_YELLOW	;
476)   28F9 3F 00       		 DW COL_BLUE	;
477)   28FB 3F F8       		 DW COL_MAGENTA	;
478)   28FD FF 07       		 DW COL_CYAN	;
479)   28FF FF FF       		 DW COL_WHITE	;
480)   2901 00 00       		 DW COL_BLACK       ;TODO PICK 8 MORE COLORS	;TODO PICK 8 MORE COLORS
481)   2903 00 F8       		 DW COL_RED	;
482)   2905 C0 07       		 DW COL_GREEN	;
483)   2907 C0 FF       		 DW COL_YELLOW	;
484)   2909 3F 00       		 DW COL_BLUE	;
485)   290B 3F F8       		 DW COL_MAGENTA	;
486)   290D FF 07       		 DW COL_CYAN	;
487)   290F FF FF       		 DW COL_WHITE	;
493)   2911 CD 6E 29    		 CALL SKIPSP	;
494)   2914 FE 0D       		 CP CR	;
495)   2916 C8          		 RET Z	;
496)   2917 FE 7C       		 CP '|'	;
497)   2919 C8          		 RET Z	;
498)   291A FE 2E       		 CP '.'	;
499)   291C CA 61 2A    		 JP Z, DOT        ;*.	;*.
500)   291F EB          		 EX DE, HL	;
501)   2920 21 7D 29    		 LD HL, COMDS	;
502)   2923 1A          		OSCLI0: LD A, (DE)	;
503)   2924 CD 75 29    		 CALL UPPRC	;
504)   2927 BE          		 CP (HL)	;
505)   2928 28 0B       		 JR Z, OSCLI2	;
506)   292A 38 31       		 JR C, HUH	;
507)   292C CB 7E       		OSCLI1: BIT 7, (HL)	;
508)   292E 23          		 INC HL	;
509)   292F 28 FB       		 JR Z, OSCLI1	;
510)   2931 23          		 INC HL	;
511)   2932 23          		 INC HL	;
512)   2933 18 EE       		 JR OSCLI0	;
514)   2935 D5          		OSCLI2: PUSH DE	;
515)   2936 13          		OSCLI3: INC DE	;
516)   2937 23          		 INC HL	;
517)   2938 1A          		 LD A, (DE)	;
518)   2939 CD 75 29    		 CALL UPPRC	;
519)   293C FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
520)   293E 28 0A       		 JR Z, OSCLI4	;
521)   2940 AE          		 XOR (HL)	;
522)   2941 28 F3       		 JR Z, OSCLI3	;
523)   2943 FE 80       		 CP 80H	;
524)   2945 28 03       		 JR Z, OSCLI4	;
525)   2947 D1          		 POP DE	;
526)   2948 18 E2       		 JR OSCLI1	;
528)   294A F1          		OSCLI4: POP AF	;
529)   294B 13          		 INC DE	;
530)   294C CB 7E       		OSCLI5: BIT 7, (HL)	;
531)   294E 23          		 INC HL	;
532)   294F 28 FB       		 JR Z, OSCLI5	;
533)   2951 7E          		 LD A, (HL)	;
534)   2952 23          		 INC HL	;
535)   2953 66          		 LD H, (HL)	;
536)   2954 6F          		 LD L, A	;
537)   2955 E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
538)   2956 EB          		 EX DE, HL	;
539)   2957 E5          		 PUSH HL	;
540)   2958 FD E1       		 POP IY	;
541)   295A C3 6E 29    		 JP SKIPSP	;
543)   295D 3E FE       		HUH: LD A, 254        ;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY	;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY
544)   295F CD F0 46    		 CALL EXTERR	;
545)   2962 42 61 64 20 		 DEFM 'Bad command'	;
545)   2966 63 6F 6D 6D 		 DEFM 'Bad command'	;
545)   296A 61 6E 64    		 DEFM 'Bad command'	;
546)   296D 00          		 DEFB    0	;
548)   296E 7E          		SKIPSP: LD A, (HL)	;
549)   296F FE 20       		 CP ' '	;
550)   2971 C0          		 RET NZ	;
551)   2972 23          		 INC HL	;
552)   2973 18 F9       		 JR SKIPSP	;
554)   2975 E6 7F       		UPPRC: AND 7FH	;
555)   2977 FE 60       		 CP '`'	;
556)   2979 D8          		 RET C	;
557)   297A E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
558)   297C C9          		 RET	;
562)   297D 42 59       		COMDS: DEFM  "BY"	;
563)   297F C5          		 DEFB    'E'+80H	;
564)   2980 64 2A       		 DEFW BYE	;
565)   2982 43          		 DEFM  "C"	;
566)   2983 C4          		 DEFB    'D'+80H	;
567)   2984 98 2A       		 DEFW DRV_CD	;
568)   2986 44 49       		 DEFM  "DI"	;
569)   2988 D2          		 DEFB    'R'+80H	;
570)   2989 7E 2A       		 DEFW DRV_DIR	;
571)   298B 46          		 DEFM  "F"	;
572)   298C D8          		 DEFB    'X'+80H	;
573)   298D 67 2A       		 DEFW FX	;
574)   298F 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
574)   2993 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
574)   2997 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
575)   299A C6          		 DEFB 'F'+80H	;
576)   299B 1C 2B       		 DEFW LCD_BLINKOF	;
577)   299D 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
577)   29A1 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
577)   29A5 4B 4F       		 DEFM  "LCD_BLINKO"	;
578)   29A7 CE          		 DEFB 'N'+80H	;
579)   29A8 22 2B       		 DEFW LCD_BLINKON	;
580)   29AA 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
580)   29AE 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
581)   29B2 D2          		 DEFB 'R'+80H	;
582)   29B3 28 2B       		 DEFW LCD_CLR	;
583)   29B5 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
583)   29B9 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
583)   29BD 4F 52 41    		 DEFM  "LCD_CURSORA"	;
584)   29C0 D4          		 DEFB 'T'+80H	;
585)   29C1 2E 2B       		 DEFW LCD_CURSAT	;
586)   29C3 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
586)   29C7 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
586)   29CB 4F 46       		 DEFM  "LCD_CURSOF"	;
587)   29CD C6          		 DEFB 'F'+80H	;
588)   29CE 4D 2B       		 DEFW LCD_CURSOF	;
589)   29D0 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
589)   29D4 43 55 52 53 		 DEFM  "LCD_CURSO"	;
589)   29D8 4F          		 DEFM  "LCD_CURSO"	;
590)   29D9 CE          		 DEFB 'N'+80H	;
591)   29DA 53 2B       		 DEFW LCD_CURSON	;
592)   29DC 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
592)   29E0 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
592)   29E4 4F 46       		 DEFM  "LCD_DISPOF"	;
593)   29E6 C6          		 DEFB 'F'+80H	;
594)   29E7 59 2B       		 DEFW LCD_DISPOF	;
595)   29E9 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
595)   29ED 44 49 53 50 		 DEFM  "LCD_DISPO"	;
595)   29F1 4F          		 DEFM  "LCD_DISPO"	;
596)   29F2 CE          		 DEFB 'N'+80H	;
597)   29F3 5F 2B       		 DEFW LCD_DISPON	;
598)   29F5 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
598)   29F9 48 4F 4D    		 DEFM  "LCD_HOM"	;
599)   29FC C5          		 DEFB 'E'+80H	;
600)   29FD 2A 13       		 DEFW LCD16_HOME	;
601)   29FF 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
601)   2A03 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
601)   2A07 45 46       		 DEFM  "LCD_MOVLEF"	;
602)   2A09 D4          		 DEFB 'T'+80H	;
603)   2A0A 6B 2B       		 DEFW LCD_MOVLFT	;
604)   2A0C 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
604)   2A10 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
604)   2A14 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
605)   2A17 D4          		 DEFB 'T'+80H	;
606)   2A18 71 2B       		 DEFW LCD_MOVRGT	;
607)   2A1A 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
607)   2A1E 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
608)   2A22 D4          		 DEFB 'T'+80H	;
609)   2A23 77 2B       		 DEFW LCD_PRN	;
610)   2A25 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
610)   2A29 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
610)   2A2D 45 46       		 DEFM  "LCD_SCRLEF"	;
611)   2A2F D4          		 DEFB 'T'+80H	;
612)   2A30 E8 2B       		 DEFW LCD_SCRLFT	;
613)   2A32 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
613)   2A36 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
613)   2A3A 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
614)   2A3D D4          		 DEFB 'T'+80H	;
615)   2A3E EE 2B       		 DEFW LCD_SCRRGT	;
616)   2A40 50 57       		 DEFM  "PW"	;
617)   2A42 C4          		 DEFB    'D'+80H	;
618)   2A43 6A 2A       		 DEFW NIMP	;
619)   2A45 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
619)   2A49 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
619)   2A4D 53          		 DEFM  "RTC_ADJUS"	;
620)   2A4E D4          		 DEFB    'T'+80H	;
621)   2A4F C8 2A       		 DEFW RTC_ADJUST	;
622)   2A51 52 54 43 5F 		 DEFM  "RTC_GE"	;
622)   2A55 47 45       		 DEFM  "RTC_GE"	;
623)   2A57 D4          		 DEFB    'T'+80H	;
624)   2A58 F6 2A       		 DEFW RTC_GET	;
625)   2A5A 54 59 50    		 DEFM  "TYP"	;
626)   2A5D C5          		 DEFB    'E'+80H	;
627)   2A5E A3 2A       		 DEFW DRV_TYPFILE	;
629)   2A60 FF          		 DEFB 0FFH	;
632)   2A61 C3 F4 2B    		DOT: JP EXTCMDRET	;
637)   2A64 C3 00 00    		BYE: JP 0	;
640)   2A67 C3 F4 2B    		FX: JP EXTCMDRET	;
643)   2A6A C3 F4 2B    		NIMP: JP EXTCMDRET        ;NOT IMPLEMENTED YET	;NOT IMPLEMENTED YET
648)   2A6D CD F0 46    		DRV_ERROR: CALL EXTERR	;
649)   2A70 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
649)   2A74 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
649)   2A78 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
649)   2A7C 52          		 DEFM  "STORAGE ERROR"	;
650)   2A7D 00          		 DEFB    0	;
655)   2A7E CD 97 0E    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
656)   2A81 D2 F4 2B    		 JP NC, EXTCMDRET	;
657)   2A84 18 E7       		 JR DRV_ERROR	;
659)   2A86 CD 84 5D    		DRV_GETFNPRM: CALL EXPR       ;VARIABLE TYPE	;VARIABLE TYPE
660)   2A89 08          		 EX AF, AF'        ;E NO OF BYTES ACCS THE PARAM	;E NO OF BYTES ACCS THE PARAM
661)   2A8A 21 00 FB    		 LD HL, ACCS	;
662)   2A8D 06 00       		 LD B, 0	;
663)   2A8F 4B          		 LD C, E	;
664)   2A90 11 B9 FE    		 LD DE, STRGBUFF	;
665)   2A93 ED B0       		 LDIR	;
666)   2A95 AF          		 XOR A	;
667)   2A96 12          		 LD (DE), A	;
668)   2A97 C9          		 RET	;
671)   2A98 CD 86 2A    		DRV_CD: CALL DRV_GETFNPRM	;
672)   2A9B CD C3 0E    		 CALL STRG_DIRCHG	;
673)   2A9E D2 F4 2B    		 JP NC, EXTCMDRET	;
674)   2AA1 18 CA       		 JR DRV_ERROR	;
677)   2AA3 CD 86 2A    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
678)   2AA6 CD DB 0E    		 CALL STRG_OPNFILE	;
679)   2AA9 38 C2       		 JR C, DRV_ERROR	;
680)   2AAB CD 63 0F    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
681)   2AAE 3A E5 FE    		 LD A, (FID)	;
682)   2AB1 CD F9 0E    		 CALL STRG_CLSFILE	;
683)   2AB4 C3 F4 2B    		 JP EXTCMDRET	;
690)   2AB7 CD 94 5E    		RTC_GETBASPAR: CALL EXPRI	;
691)   2ABA D9          		 EXX	;
692)   2ABB 7D          		 LD A, L        ;A HAS THE NUMBER	;A HAS THE NUMBER
693)   2ABC CD 79 2E    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
694)   2ABF FD 7E 00    		 LD A, (IY)	;
695)   2AC2 FE 2C       		 CP ', '	;
696)   2AC4 FD 23       		 INC IY	;
697)   2AC6 7D          		 LD A, L	;
698)   2AC7 C9          		 RET	;
703)   2AC8 0E 00       		RTC_ADJUST: LD C, 0	;
704)   2ACA 11 89 FE    		 LD DE, BUFFER	;
705)   2ACD AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
706)   2ACE 32 89 FE    		 LD (BUFFER), A	;
707)   2AD1 13          		 INC DE	;
708)   2AD2 C5          		RTCADJ_NXT: PUSH BC	;
709)   2AD3 D5          		 PUSH DE	;
710)   2AD4 CD B7 2A    		 CALL RTC_GETBASPAR	;
711)   2AD7 D1          		 POP DE	;
712)   2AD8 C1          		 POP BC	;
713)   2AD9 28 0B       		 JR Z, RTCADJ_PAROK	;
715)   2ADB FD 2B       		 DEC IY	;
716)   2ADD 47          		 LD B, A        ;SAVE A	;SAVE A
717)   2ADE 79          		 LD A, C	;
718)   2ADF FE 06       		 CP 6	;
719)   2AE1 28 08       		 JR Z, RTCADJ_EXEC	;
721)   2AE3 C3 BC 2C    		 JP SNTX_ERROR	;
722)   2AE6 0C          		RTCADJ_PAROK: INC C	;
723)   2AE7 12          		 LD (DE), A	;
724)   2AE8 13          		 INC DE	;
725)   2AE9 18 E7       		 JR RTCADJ_NXT	;
726)   2AEB 78          		RTCADJ_EXEC: LD A, B	;
727)   2AEC 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
728)   2AED 13          		 INC DE	;
729)   2AEE AF          		 XOR A	;
730)   2AEF 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
731)   2AF0 CD 02 12    		 CALL DS1307_ADJUST	;
732)   2AF3 C3 F4 2B    		 JP EXTCMDRET	;
734)   2AF6 CD A6 11    		RTC_GET: CALL DS1307_GETNOW	;
736)   2AF9 21 07 2B    		 LD HL, TSTSTR	;
737)   2AFC 11 00 80    		 LD DE, $8000	;
738)   2AFF 01 14 00    		 LD BC, 20	;
739)   2B02 C5          		 PUSH BC	;
740)   2B03 ED B0       		 LDIR	;
741)   2B05 C1          		 POP BC	;
742)   2B06 C9          		 RET	;
744)   2B07 31 37 2F 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
744)   2B0B 33 2F 32 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
744)   2B0F 32 31 20 31 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
744)   2B13 37 3A 35 32 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
744)   2B17 3A 30 33    		 TSTSTR DEFM "17/03/2021 17:52:03"	;
745)   2B1A 00 0D       		 DEFB 0,0x0D	;
748)   2B1C CD 62 13    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
749)   2B1F C3 F4 2B    		 JP EXTCMDRET	;
751)   2B22 CD 70 13    		LCD_BLINKON: CALL LCD16_BLINKON	;
752)   2B25 C3 F4 2B    		 JP EXTCMDRET	;
754)   2B28 CD 13 13    		LCD_CLR: CALL LCD16_CLR	;
755)   2B2B C3 F4 2B    		 JP EXTCMDRET	;
758)   2B2E CD 94 5E    		 CALL EXPRI	;
759)   2B31 D9          		 EXX	;
760)   2B32 55          		 LD D, L	;
761)   2B33 D5          		 PUSH DE	;
762)   2B34 FD 7E 00    		 LD A, (IY)	;
763)   2B37 FE 2C       		 CP ', '	;
764)   2B39 28 04       		 JR Z, LCDCA_OK	;
765)   2B3B D1          		 POP DE	;
766)   2B3C C3 BC 2C    		 JP SNTX_ERROR	;
767)   2B3F FD 23       		LCDCA_OK: INC IY	;
768)   2B41 CD 94 5E    		 CALL EXPRI	;
769)   2B44 D9          		 EXX	;
770)   2B45 D1          		 POP DE	;
771)   2B46 5D          		 LD E, L	;
772)   2B47 CD 37 13    		 CALL LCD16_SETCURS	;
773)   2B4A C3 F4 2B    		 JP EXTCMDRET	;
775)   2B4D CD 46 13    		LCD_CURSOF: CALL LCD16_CURSOFF	;
776)   2B50 C3 F4 2B    		 JP EXTCMDRET	;
778)   2B53 CD 54 13    		LCD_CURSON: CALL LCD16_CURSON	;
779)   2B56 C3 F4 2B    		 JP EXTCMDRET	;
781)   2B59 CD EA 12    		LCD_DISPOF: CALL LCD16_NODISP	;
782)   2B5C C3 F4 2B    		 JP EXTCMDRET	;
784)   2B5F CD F8 12    		LCD_DISPON: CALL LCD16_DISP	;
785)   2B62 C3 F4 2B    		 JP EXTCMDRET	;
787)   2B65 CD 2A 13    		LCD_HOME: CALL LCD16_HOME	;
788)   2B68 C3 F4 2B    		 JP EXTCMDRET	;
790)   2B6B CD 8A 13    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
791)   2B6E C3 F4 2B    		 JP EXTCMDRET	;
793)   2B71 CD 90 13    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
794)   2B74 C3 F4 2B    		 JP EXTCMDRET	;
796)   2B77 18 20       		LCD_PRN: JR PRINT0	;
797)   2B79 06 02       		PRINT6: LD B, 2	;
798)   2B7B 18 22       		 JR PRINTC	;
799)   2B7D 01 00 01    		PRINT8: LD BC, 100H	;
800)   2B80 18 1D       		 JR PRINTC	;
801)   2B82 21 00 FD    		PRINT9: LD HL, STAVAR	;
802)   2B85 AF          		 XOR A	;
803)   2B86 BE          		 CP (HL)	;
804)   2B87 28 10       		 JR Z, PRINT0	;
805)   2B89 3A FB FD    		 LD A, (COUNT)	;
806)   2B8C B7          		 OR A	;
807)   2B8D 28 0A       		 JR Z, PRINT0	;
808)   2B8F 96          		PRINTA: SUB (HL)	;
809)   2B90 28 07       		 JR Z, PRINT0	;
810)   2B92 30 FB       		 JR NC, PRINTA	;
811)   2B94 ED 44       		 NEG	;
812)   2B96 CD 2A 57    		 CALL FILL	;
813)   2B99 3A 00 FD    		PRINT0: LD A, (STAVAR)	;
814)   2B9C 4F          		 LD C, A        ;PRINTS	;PRINTS
815)   2B9D 06 00       		 LD B, 0        ;PRINTF	;PRINTF
816)   2B9F CD C2 56    		PRINTC: CALL TERM?	;
817)   2BA2 28 41       		 JR Z, PRINT4	;
818)   2BA4 CB 80       		 RES 0, B	;
819)   2BA6 FD 23       		 INC IY	;
820)   2BA8 FE 7E       		 CP '~'	;
821)   2BAA 28 CD       		 JR Z, PRINT6	;
822)   2BAC FE 3B       		 CP ';'        ;'	;'
823)   2BAE 28 CD       		 JR Z, PRINT8	;
824)   2BB0 FE 2C       		 CP ','	;
825)   2BB2 28 CE       		 JR Z, PRINT9	;
826)   2BB4 CD E3 56    		 CALL FORMAT        ;SPC, TAB, '	;SPC, TAB, '
827)   2BB7 28 E6       		 JR Z, PRINTC	;
828)   2BB9 FD 2B       		 DEC IY	;
829)   2BBB C5          		 PUSH BC	;
830)   2BBC CD 84 5D    		 CALL EXPR        ;VARIABLE TYPE	;VARIABLE TYPE
831)   2BBF 08          		 EX AF, AF'	;
832)   2BC0 FA D6 2B    		 JP M, PRINT3        ;STRING	;STRING
833)   2BC3 D1          		 POP DE	;
834)   2BC4 D5          		 PUSH DE	;
835)   2BC5 CB 4A       		 BIT 1, D	;
836)   2BC7 F5          		 PUSH AF	;
837)   2BC8 CC 96 63    		 CALL Z, STR        ;DECIMAL	;DECIMAL
838)   2BCB F1          		 POP AF	;
839)   2BCC C4 53 63    		 CALL NZ, HEXSTR       ;HEX	;HEX
840)   2BCF C1          		 POP BC	;
841)   2BD0 C5          		 PUSH BC	;
842)   2BD1 79          		 LD A, C	;
843)   2BD2 93          		 SUB E	;
844)   2BD3 D4 2A 57    		 CALL NC, FILL        ;RIGHT JUSTIFY	;RIGHT JUSTIFY
845)   2BD6 C1          		PRINT3: POP BC	;
848)   2BD7 21 00 FB    		 LD HL, ACCS       ; L IS 00	; L IS 00
849)   2BDA 7D          		 LD A, L	;
850)   2BDB 83          		 ADD E	;
851)   2BDC 6F          		 LD L, A	;
852)   2BDD AF          		 XOR A	;
853)   2BDE 77          		 LD (HL), A	;
854)   2BDF 6F          		 LD L, A	;
855)   2BE0 CD 1C 13    		 CALL LCD16_PRINT       ;PRINT	;PRINT
856)   2BE3 18 BA       		 JR PRINTC	;
857)   2BE5 C3 F4 2B    		PRINT4: JP EXTCMDRET	;
860)   2BE8 CD 7E 13    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
861)   2BEB C3 F4 2B    		 JP EXTCMDRET	;
863)   2BEE CD 84 13    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
864)   2BF1 C3 F4 2B    		 JP EXTCMDRET	;
868)   2BF4 AF          		 XOR A	;
871)   2BF5 C9          		 RET	;
878)   2BF6 FE FF       		@MYOS_OSOPEN: CP 255	;
879)   2BF8 28 06       		 JR Z, OPW	;
880)   2BFA FE 01       		 CP 1	;
881)   2BFC 28 06       		 JR Z, OPRW	;
883)   2BFE 18 06       		 JR DOOP	;
884)   2C00 3E 01       		OPW: LD A, 1	;
885)   2C02 18 02       		 JR DOOP	;
886)   2C04 3E 02       		OPRW: LD A, 2	;
887)   2C06 F5          		DOOP: PUSH AF        ;SAVE A	;SAVE A
888)   2C07 AF          		 XOR A         ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
889)   2C08 12          		 LD (DE), A        ;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0	;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0
890)   2C09 EB          		 EX DE, HL	;
891)   2C0A ED 52       		 SBC HL, DE	;
892)   2C0C 23          		 INC HL         ;+1 FOR ZERO	;+1 FOR ZERO
893)   2C0D E5          		 PUSH HL	;
894)   2C0E C1          		 POP BC	;
895)   2C0F EB          		 EX DE, HL	;
896)   2C10 11 B9 FE    		 LD DE, STRGBUFF	;
897)   2C13 ED B0       		 LDIR         ;COPY FILENAME TO STRGBUFF	;COPY FILENAME TO STRGBUFF
898)   2C15 F1          		 POP AF         ;RESTORE A	;RESTORE A
899)   2C16 CD DB 0E    		 CALL STRG_OPNFILE	;
900)   2C19 DA 6D 2A    		 JP C, DRV_ERROR	;
901)   2C1C C9          		 RET	;
905)   2C1D 21 B9 FE    		@MYOS_OSBPUT: LD HL, STRGBUFF	;
906)   2C20 77          		 LD (HL), A        ;VALUE	;VALUE
907)   2C21 7B          		 LD A, E        ;FID	;FID
908)   2C22 EB          		 EX DE, HL	;
909)   2C23 01 01 00    		 LD BC, 1        ;NO OF BYTES TO WRITE	;NO OF BYTES TO WRITE
910)   2C26 CD 0B 0F    		 CALL STRG_BLKWRITE	;
911)   2C29 DA 6D 2A    		 JP C, DRV_ERROR	;
912)   2C2C C9          		 RET	;
916)   2C2D 7B          		@MYOS_OSBGET: LD A, E       ;FID	;FID
917)   2C2E 11 B9 FE    		 LD DE, STRGBUFF       ;SET BUFFER	;SET BUFFER
918)   2C31 01 01 00    		 LD BC, 1        ;NO OF BYTES TO READ	;NO OF BYTES TO READ
919)   2C34 CD 2E 0F    		 CALL STRG_BLKREAD	;
920)   2C37 DA 6D 2A    		 JP C, DRV_ERROR	;
921)   2C3A 78          		 LD A, B	;
922)   2C3B 81          		 ADD C	;
923)   2C3C FE 01       		 CP 1	;
924)   2C3E 28 03       		 JR Z, GETISOK	;
925)   2C40 3E FF       		 LD A, 255	;
926)   2C42 C9          		 RET	;
927)   2C43 3A B9 FE    		GETISOK: LD A, (STRGBUFF)	;
928)   2C46 C9          		 RET	;
933)   2C47 7B          		@MYOS_GETPTR: LD A, E	;
934)   2C48 CD 63 0E    		 CALL STRG_GETPOS	;
935)   2C4B C9          		 RET	;
940)   2C4C CD 7D 0E    		@MYOS_PUTPTR: CALL STRG_SETPOS	;
941)   2C4F C9          		 RET	;
946)   2C50 7B          		@MYOS_GETEXT: LD A, E	;
947)   2C51 CD 5E 0E    		 CALL STRG_GETSIZE	;
948)   2C54 C9          		 RET	;
953)   2C55 7B          		@MYOS_OSSHUT: LD A, E	;
954)   2C56 CD F9 0E    		 CALL STRG_CLSFILE	;
955)   2C59 C9          		 RET	;
958)   2C5A 7B          		@MYOS_OSSTAT: LD A, E	;
959)   2C5B CD 4C 0E    		 CALL STRG_GETEOF	;
960)   2C5E FE FF       		 CP 255         ;TEST IF -1	;TEST IF -1
961)   2C60 C9          		 RET	;
965)   2C61 C9          		@MYOS_OSCALL: RET	;
968)   2C62 C9          		@MYOS_RESET: RET	;
970)   2C63 CD 94 5E    		@MYOS_MODE: CALL EXPRI       ;GET PARAM	;GET PARAM
971)   2C66 D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
972)   2C67 C3 E8 4C    		 JP XEQ	;
974)   2C6A CD A7 23    		@MYOS_CLG: CALL GRPH_SAVECOLORS	;
975)   2C6D CD 1C 1F    		 CALL LCD_CLRSCR	;
976)   2C70 CD BE 23    		 CALL GRPH_RESTORECOLORS	;
977)   2C73 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
980)   2C76 DD E5       		@MYOS_GCOL: PUSH IX	;
981)   2C78 3E 01       		 LD A, 1	;
982)   2C7A CD AC 21    		 CALL BAS_COLOUR	;
983)   2C7D DD E1       		 POP IX	;
984)   2C7F C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
986)   2C82 DD E5       		@MYOS_COLOUR: PUSH IX	;
987)   2C84 AF          		 XOR A	;
988)   2C85 CD AC 21    		 CALL BAS_COLOUR	;
989)   2C88 DD E1       		 POP IX	;
990)   2C8A C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
992)   2C8D DD E5       		@MYOS_DRAW: PUSH IX	;
993)   2C8F CD 85 22    		 CALL BAS_DRAW	;
994)   2C92 DD E1       		 POP IX	;
995)   2C94 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
997)   2C97 DD E5       		@MYOS_MOVE: PUSH IX	;
998)   2C99 CD AE 22    		 CALL BAS_MOVE	;
999)   2C9C DD E1       		 POP IX	;
1000)   2C9E C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1002)   2CA1 DD E5       		@MYOS_PLOT: PUSH IX	;
1003)   2CA3 CD 1E 23    		 CALL BAS_PLOT	;
1004)   2CA6 DD E1       		 POP IX	;
1005)   2CA8 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1007)   2CAB DD E5       		@MYOS_POINT: PUSH IX	;
1008)   2CAD CD BA 22    		 CALL BAS_POINT       ;RETURNS A VALUE TO BASIC	;RETURNS A VALUE TO BASIC
1009)   2CB0 DD E1       		 POP IX	;
1010)   2CB2 C9          		 RET	;
1019)   2CB3 CD 41 22    		@MYOS_PUTIMS: CALL GETBASICPARAMS     ;	;
1020)   2CB6 C3 E8 4C    		 JP XEQ	;
1022)   2CB9 C3 F6 2A    		@MYOS_GETIMS: JP RTC_GET	;
1024)   2CBC CD F0 46    		SNTX_ERROR: CALL EXTERR	;
1025)   2CBF 53 79 6E 74 		 DEFM  "Syntax error"	;
1025)   2CC3 61 78 20 65 		 DEFM  "Syntax error"	;
1025)   2CC7 72 72 6F 72 		 DEFM  "Syntax error"	;
1026)   2CCB 00          		 DEFB    0	;
1033)   2CCC CD 63 03    		GETKEY: CALL GET_CHAR	;
1034)   2CCF 37          		 SCF	;
1035)   2CD0 C9          		 RET	;
1041)   2CD1 CD 50 03    		 CALL GET_CHARNW	;
1042)   2CD4 3F          		 CCF	;
1043)   2CD5 FE 00       		 CP 0	;
1044)   2CD7 C8          		 RET Z	;
1045)   2CD8 37          		 SCF	;
1046)   2CD9 C9          		 RET	;
1048)   2CDA F5          		@CHKCURS: PUSH AF	;
1049)   2CDB 3A A7 FE    		 LD A, (TIMECTR)	;
1050)   2CDE CB 67       		 BIT 4, A	;
1051)   2CE0 28 11       		 JR Z, CCSHOW        ;IF SET SHOW	;IF SET SHOW
1052)   2CE2 3A 11 FE    		CCHIDE: LD A, (CURSSTAT)	;
1053)   2CE5 CB 4F       		 BIT 1, A	;
1054)   2CE7 20 19       		 JR NZ, CCEX        ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
1055)   2CE9 CB CF       		 SET 1, A	;
1056)   2CEB 32 11 FE    		 LD (CURSSTAT), A	;
1057)   2CEE CD 91 03    		 CALL OS_RMVCURS	;
1058)   2CF1 18 0F       		 JR CCEX	;
1059)   2CF3 3A 11 FE    		CCSHOW: LD A, (CURSSTAT)	;
1060)   2CF6 CB 4F       		 BIT 1, A	;
1061)   2CF8 28 08       		 JR Z, CCEX        ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
1062)   2CFA CB 8F       		 RES 1, A	;
1063)   2CFC 32 11 FE    		 LD (CURSSTAT), A	;
1064)   2CFF CD 8A 03    		 CALL OS_PRNCURS	;
1066)   2D02 F1          		CCEX: POP AF	;
1067)   2D03 C9          		 RET	;
1078)   2D04 3A 00 FE    		 LD A, (FLAGS)	;
1079)   2D07 CB 5F       		 BIT 3, A        ;EDIT MODE?	;EDIT MODE?
1080)   2D09 28 09       		 JR Z, OSLIN1	;
1081)   2D0B CB 9F       		 RES 3, A	;
1082)   2D0D 32 00 FE    		 LD (FLAGS), A	;
1083)   2D10 2A 12 FE    		 LD HL, (EDPTR)	;
1084)   2D13 BD          		 CP L	;
1085)   2D14 3E 0D       		OSLIN1: LD A, CR	;
1086)   2D16 77          		 LD (HL), A	;
1087)   2D17 C4 79 26    		 CALL NZ, MYOS_OSWRCH	;
1088)   2D1A 2E 00       		 LD L, 0	;
1089)   2D1C 4D          		 LD C, L        ;REPEAT FLAG	;REPEAT FLAG
1090)   2D1D 28 20       		 JR Z, OSWAIT        ;SUPPRESS UNWANTED SPACE	;SUPPRESS UNWANTED SPACE
1091)   2D1F 06 00       		UPDATE: LD B, 0	;
1092)   2D21 7E          		UPD1: LD A, (HL)	;
1093)   2D22 04          		 INC B	;
1094)   2D23 23          		 INC HL	;
1095)   2D24 FE 0D       		 CP CR	;
1096)   2D26 F5          		 PUSH AF	;
1097)   2D27 E5          		 PUSH HL	;
1098)   2D28 5F          		 LD E, A	;
1099)   2D29 C4 2D 28    		 CALL NZ, WRCH        ;FAST WRCH	;FAST WRCH
1100)   2D2C E1          		 POP HL	;
1101)   2D2D F1          		 POP AF	;
1102)   2D2E 20 F1       		 JR NZ, UPD1	;
1103)   2D30 3E 20       		 LD A, ' '	;
1104)   2D32 CD 79 26    		 CALL MYOS_OSWRCH	;
1105)   2D35 1E 08       		 LD E, BS	;
1106)   2D37 E5          		UPD2: PUSH HL	;
1107)   2D38 CD 2D 28    		 CALL WRCH        ;FAST WRCH	;FAST WRCH
1108)   2D3B E1          		 POP HL	;
1109)   2D3C 2B          		 DEC HL	;
1110)   2D3D 10 F8       		 DJNZ UPD2	;
1111)   2D3F 79          		OSWAIT: LD A, C	;
1112)   2D40 05          		 DEC B	;
1113)   2D41 28 01       		 JR Z, LIMIT	;
1114)   2D43 B7          		 OR A         ;REPEAT COMMAND?	;REPEAT COMMAND?
1115)   2D44 CC 6C 26    		LIMIT: CALL Z, KEYGET        ;READ KEYBOARD	;READ KEYBOARD
1116)   2D47 4F          		 LD C, A        ;SAVE FOR REPEAT	;SAVE FOR REPEAT
1117)   2D48 11 3F 2D    		 LD DE, OSWAIT        ;RETURN ADDRESS	;RETURN ADDRESS
1118)   2D4B D5          		 PUSH DE	;
1119)   2D4C 3A 00 FE    		 LD A, (FLAGS)	;
1120)   2D4F B7          		 OR A         ;TEST FOR ESCAPE	;TEST FOR ESCAPE
1121)   2D50 79          		 LD A, C	;
1122)   2D51 FA 93 2D    		 JP M, OSEXIT	;
1123)   2D54 FE 0B       		 CP 11         ;CURSOR UP     (IX-11)	;CURSOR UP     (IX-11)
1124)   2D56 CA D7 2D    		 JP Z, LEFT	;
1125)   2D59 FE 0A       		 CP 10         ;CURSOR DOWN   (IX-10)	;CURSOR DOWN   (IX-10)
1126)   2D5B CA 0A 2E    		 JP Z, RIGHT	;
1127)   2D5E 06 00       		 LD B, 0	;
1128)   2D60 FE 05       		 CP 5         ;CLEAR LEFT    (IX-5)	;CLEAR LEFT    (IX-5)
1129)   2D62 28 72       		 JR Z, BACK	;
1130)   2D64 FE 09       		 CP 9         ;START OF LINE (IX-9)	;START OF LINE (IX-9)
1131)   2D66 28 6F       		 JR Z, LEFT	;
1132)   2D68 FE 07       		 CP 7         ;CLEAR RIGHT   (IX-7)	;CLEAR RIGHT   (IX-7)
1133)   2D6A 28 76       		 JR Z, DELETE	;
1134)   2D6C FE 08       		 CP 8         ;END OF LINE   (IX-8)	;END OF LINE   (IX-8)
1135)   2D6E CA 0A 2E    		 JP Z, RIGHT	;
1136)   2D71 0E 00       		 LD C, 0        ;INHIBIT REPEAT	;INHIBIT REPEAT
1137)   2D73 FE 10       		 CP 'P' AND 1FH	;
1138)   2D75 CA 50 28    		 JP Z, TOGGLE	;
1139)   2D78 FE 06       		 CP 6         ;DELETE LEFT   (IX-6)	;DELETE LEFT   (IX-6)
1140)   2D7A 28 5A       		 JR Z, BACK	;
1141)   2D7C FE 04       		 CP 4         ;CURSOR LEFT   (IX-4)	;CURSOR LEFT   (IX-4)
1142)   2D7E 28 57       		 JR Z, LEFT	;
1143)   2D80 FE 02       		 CP 2         ;DELETE RIGHT  (IX-2)	;DELETE RIGHT  (IX-2)
1144)   2D82 28 5E       		 JR Z, DELETE	;
1145)   2D84 FE 01       		 CP 1         ;INSERT SPACE  (IX-1)	;INSERT SPACE  (IX-1)
1146)   2D86 28 6E       		 JR Z, INSERT	;
1147)   2D88 FE 03       		 CP 3         ;CURSOR RIGHT  (IX-3)	;CURSOR RIGHT  (IX-3)
1148)   2D8A 28 7E       		 JR Z, RIGHT	;
1149)   2D8C FE 20       		 CP ' '         ;PRINTING CHARACTER	;PRINTING CHARACTER
1150)   2D8E 30 7F       		 JR NC, SAVECH	;
1151)   2D90 FE 0D       		 CP CR         ;ENTER LINE	;ENTER LINE
1152)   2D92 C0          		 RET NZ	;
1153)   2D93 7E          		OSEXIT: LD A, (HL)	;
1154)   2D94 CD 79 26    		 CALL MYOS_OSWRCH       ;WRITE REST OF LINE	;WRITE REST OF LINE
1155)   2D97 23          		 INC HL	;
1156)   2D98 D6 0D       		 SUB CR	;
1157)   2D9A 20 F7       		 JR NZ, OSEXIT	;
1158)   2D9C D1          		 POP DE         ;DITCH RETURN ADDRESS	;DITCH RETURN ADDRESS
1159)   2D9D B9          		 CP C	;
1160)   2D9E C2 8D 28    		 JP NZ, ABORT        ;ESCAPE	;ESCAPE
1161)   2DA1 3E 0A       		 LD A, LF	;
1162)   2DA3 CD 79 26    		 CALL MYOS_OSWRCH	;
1163)   2DA6 ED 5B F4 FD 		 LD DE, (ERRLIN)	;
1164)   2DAA AF          		 XOR A	;
1165)   2DAB 6F          		 LD L, A	;
1166)   2DAC 22 12 FE    		 LD (EDPTR), HL	;
1167)   2DAF BA          		 CP D	;
1168)   2DB0 C0          		 RET NZ	;
1169)   2DB1 BB          		 CP E	;
1170)   2DB2 C0          		 RET NZ	;
1171)   2DB3 11 23 2E    		 LD DE, EDITST	;
1172)   2DB6 06 04       		 LD B, 4	;
1173)   2DB8 1A          		CMPARE: LD A, (DE)	;
1174)   2DB9 BE          		 CP (HL)	;
1175)   2DBA 3E 00       		 LD A, 0	;
1176)   2DBC C0          		 RET NZ	;
1177)   2DBD 23          		 INC HL	;
1178)   2DBE 13          		 INC DE	;
1179)   2DBF 7E          		 LD A, (HL)	;
1180)   2DC0 FE 2E       		 CP '.'	;
1181)   2DC2 28 02       		 JR Z, ABBR	;
1182)   2DC4 10 F2       		 DJNZ CMPARE	;
1183)   2DC6 AF          		ABBR: XOR A	;
1184)   2DC7 47          		 LD B, A	;
1185)   2DC8 4D          		 LD C, L	;
1186)   2DC9 6F          		 LD L, A	;
1187)   2DCA 11 27 2E    		 LD DE, LISTST	;
1188)   2DCD EB          		 EX DE, HL	;
1189)   2DCE ED B0       		 LDIR	;
1190)   2DD0 21 00 FE    		 LD HL, FLAGS	;
1191)   2DD3 CB DE       		 SET 3, (HL)	;
1192)   2DD5 C9          		 RET	;
1194)   2DD6 37          		BACK: SCF         ;DELETE LEFT	;DELETE LEFT
1195)   2DD7 2C          		LEFT: INC L         ;CURSOR LEFT	;CURSOR LEFT
1196)   2DD8 2D          		 DEC L	;
1197)   2DD9 28 45       		 JR Z, STOP	;
1198)   2DDB 3E 08       		 LD A, BS	;
1199)   2DDD CD 79 26    		 CALL MYOS_OSWRCH	;
1200)   2DE0 2D          		 DEC L	;
1201)   2DE1 D0          		 RET NC	;
1202)   2DE2 7E          		DELETE: LD A, (HL)        ;DELETE RIGHT	;DELETE RIGHT
1203)   2DE3 FE 0D       		 CP CR	;
1204)   2DE5 28 39       		 JR Z, STOP	;
1205)   2DE7 54          		 LD D, H	;
1206)   2DE8 5D          		 LD E, L	;
1207)   2DE9 13          		DEL1: INC DE	;
1208)   2DEA 1A          		 LD A, (DE)	;
1209)   2DEB 1B          		 DEC DE	;
1210)   2DEC 12          		 LD (DE), A	;
1211)   2DED 13          		 INC DE	;
1212)   2DEE FE 0D       		 CP CR	;
1213)   2DF0 20 F7       		 JR NZ, DEL1	;
1214)   2DF2 D1          		DEL2: POP DE         ;DITCH	;DITCH
1215)   2DF3 C3 1F 2D    		 JP UPDATE	;
1217)   2DF6 3E 0D       		INSERT: LD A, CR        ;INSERT SPACE	;INSERT SPACE
1218)   2DF8 BE          		 CP (HL)	;
1219)   2DF9 C8          		 RET Z	;
1220)   2DFA 54          		 LD D, H	;
1221)   2DFB 1E FE       		 LD E, 254	;
1222)   2DFD 13          		INS1: INC DE	;
1223)   2DFE 12          		 LD (DE), A	;
1224)   2DFF 1B          		 DEC DE	;
1225)   2E00 7B          		 LD A, E	;
1226)   2E01 BD          		 CP L	;
1227)   2E02 1B          		 DEC DE	;
1228)   2E03 1A          		 LD A, (DE)	;
1229)   2E04 20 F7       		 JR NZ, INS1	;
1230)   2E06 36 20       		 LD (HL), ' '	;
1231)   2E08 18 E8       		 JR DEL2	;
1233)   2E0A 7E          		RIGHT: LD A, (HL)        ;CURSOR RIGHT	;CURSOR RIGHT
1234)   2E0B FE 0D       		 CP CR	;
1235)   2E0D 28 11       		 JR Z, STOP	;
1236)   2E0F 56          		SAVECH: LD D, (HL)        ;PRINTING CHARACTER	;PRINTING CHARACTER
1237)   2E10 77          		 LD (HL), A	;
1238)   2E11 2C          		 INC L	;
1239)   2E12 28 09       		 JR Z, WONTGO        ;LINE TOO LONG	;LINE TOO LONG
1240)   2E14 CD 79 26    		 CALL MYOS_OSWRCH	;
1241)   2E17 3E 0D       		 LD A, CR	;
1242)   2E19 BA          		 CP D	;
1243)   2E1A C0          		 RET NZ	;
1244)   2E1B 77          		 LD (HL), A	;
1245)   2E1C C9          		 RET	;
1247)   2E1D 2D          		WONTGO: DEC L	;
1248)   2E1E 36 0D       		 LD (HL), CR	;
1251)   2E20 0E 00       		STOP: LD C, 0        ;STOP REPEAT	;STOP REPEAT
1252)   2E22 C9          		 RET	;
1255)   2E23 45 44 49 54 		EDITST: DEFM  "EDIT"	;
1256)   2E27 4C 49 53 54 		LISTST: DEFM  "LIST"	;
 18)   2E2B C9          		 RET	;
 21)   2E2C F5          		DELAYMICROSEC: PUSH AF	;
 22)   2E2D D5          		 PUSH DE	;
 23)   2E2E 1B          		 DEC DE	;
 24)   2E2F D1          		 POP DE	;
 25)   2E30 F1          		 POP AF	;
 26)   2E31 C9          		 RET	;
 29)   2E32 CD 2C 2E    		S21: CALL DELAYMICROSEC	;
 30)   2E35 10 FB       		 DJNZ S21	;
 31)   2E37 C9          		 RET	;
 35)   2E38 F5          		DELAYMILISEC: PUSH AF	;
 36)   2E39 D5          		 PUSH DE	;
 37)   2E3A 11 2C 01    		 LD DE, 300       ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 38)   2E3D 1B          		DEL1: DEC DE	;
 39)   2E3E 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 40)   2E3F B3          		 OR E	;
 41)   2E40 20 FB       		 JR NZ, DEL1	;
 42)   2E42 D1          		 POP DE	;
 43)   2E43 F1          		 POP AF	;
 44)   2E44 C9          		 RET	;
 47)   2E45 06 50       		 LD B, 80	;
 49)   2E47 CD 38 2E    		S1: CALL DELAYMILISEC	;
 50)   2E4A 10 FB       		 DJNZ S1	;
 51)   2E4C C9          		 RET	;
 56)   2E4D C5          		@DELAYSEC: PUSH BC	;
 57)   2E4E 01 E8 03    		 LD BC, 1000	;
 58)   2E51 C5          		MYDLAGN: PUSH BC	;
 59)   2E52 CD 38 2E    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 60)   2E55 C1          		 POP BC	;
 61)   2E56 0B          		 DEC BC	;
 62)   2E57 78          		 LD A, B	;
 63)   2E58 B1          		 OR C	;
 64)   2E59 20 F6       		 JR NZ, MYDLAGN	;
 65)   2E5B C1          		 POP BC	;
 66)   2E5C 10 EF       		 DJNZ DELAYSEC	;
 67)   2E5E C9          		 RET	;
 72)   2E5F F5          		 OUTASC PUSH AF	;
 73)   2E60 D5          		 PUSH DE	;
 74)   2E61 CD 94 2E    		 CALL B2Bcd	;
 75)   2E64 D1          		 POP DE	;
 76)   2E65 CD BA 2E    		 CALL BCD2HA	;
 77)   2E68 F1          		 POP AF	;
 78)   2E69 C9          		 RET	;
 92)   2E6A B7          		BCD2BN: OR A	;
 93)   2E6B 47          		 LD B, A	;
 94)   2E6C E6 F0       		 AND $F0	;
 95)   2E6E 0F          		 RRCA	;
 96)   2E6F 4F          		 LD C, A	;
 97)   2E70 0F          		 RRCA	;
 98)   2E71 0F          		 RRCA	;
 99)   2E72 81          		 ADD A, C	;
100)   2E73 4F          		 LD C, A	;
101)   2E74 78          		 LD A, B	;
102)   2E75 E6 0F       		 AND $0F	;
103)   2E77 81          		 ADD A, C	;
104)   2E78 C9          		 RET	;
119)   2E79 26 FF       		BN2BCD: LD H, $FF	;
120)   2E7B 24          		D100LP: INC H	;
121)   2E7C D6 64       		 SUB 100	;
122)   2E7E 30 FB       		 JR NC, D100LP	;
123)   2E80 C6 64       		 ADD A, 100	;
124)   2E82 2E FF       		 LD L, $FF	;
125)   2E84 2C          		D10LP: INC L	;
126)   2E85 D6 0A       		 SUB 10	;
127)   2E87 30 FB       		 JR NC, D10LP	;
128)   2E89 C6 0A       		 ADD A, 10	;
129)   2E8B 4F          		 LD C, A	;
130)   2E8C 7D          		 LD A, L	;
131)   2E8D 07          		 RLCA	;
132)   2E8E 07          		 RLCA	;
133)   2E8F 07          		 RLCA	;
134)   2E90 07          		 RLCA	;
135)   2E91 B1          		 OR C	;
136)   2E92 6F          		 LD L, A	;
137)   2E93 C9          		 RET	;
151)   2E94 01 00 10    		 LD BC, 16 * 256 + 0      ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
152)   2E97 11 00 00    		 LD DE, 0	;
154)   2E9A 29          		 ADD HL, HL	;
155)   2E9B 7B          		 LD A, E	;
156)   2E9C 8F          		 ADC A, A	;
157)   2E9D 27          		 DAA	;
158)   2E9E 5F          		 LD E, A	;
159)   2E9F 7A          		 LD A, D	;
160)   2EA0 8F          		 ADC A, A	;
161)   2EA1 27          		 DAA	;
162)   2EA2 57          		 LD D, A	;
163)   2EA3 79          		 LD A, C	;
164)   2EA4 8F          		 ADC A, A	;
165)   2EA5 27          		 DAA	;
166)   2EA6 4F          		 LD C, A	;
167)   2EA7 10 F1       		 DJNZ cvtLp	;
168)   2EA9 EB          		 EX DE, HL	;
169)   2EAA C9          		 RET	;
183)   2EAB B7          		BCD2BN: OR A	;
184)   2EAC 47          		 LD B, A	;
185)   2EAD E6 F0       		 AND $F0	;
186)   2EAF 0F          		 RRCA	;
187)   2EB0 4F          		 LD C, A	;
188)   2EB1 0F          		 RRCA	;
189)   2EB2 0F          		 RRCA	;
190)   2EB3 81          		 ADD A, C	;
191)   2EB4 4F          		 LD C, A	;
192)   2EB5 78          		 LD A, B	;
193)   2EB6 E6 0F       		 AND $0F	;
194)   2EB8 81          		 ADD A, C	;
195)   2EB9 C9          		 RET	;
207)   2EBA 79          		 LD A, C	;
208)   2EBB CD E7 2E    		 CALL cvtUN	;
209)   2EBE 79          		 LD A, C	;
210)   2EBF CD EB 2E    		 CALL cvtLN	;
211)   2EC2 7C          		 LD A, H	;
212)   2EC3 CD E7 2E    		 CALL cvtUN	;
213)   2EC6 7C          		 LD A, H	;
214)   2EC7 CD EB 2E    		 CALL cvtLN	;
215)   2ECA 7D          		 LD A, L	;
216)   2ECB CD E7 2E    		 CALL cvtUN	;
217)   2ECE 7D          		 LD A, L	;
218)   2ECF 18 1A       		 JR cvtLN	;
220)   2ED1 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
221)   2ED2 1F          		 RRA	;
222)   2ED3 1F          		 RRA	;
223)   2ED4 1F          		 RRA	;
225)   2ED5 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
226)   2ED7 C6 90       		 ADD A, 90h       ; old trick	; old trick
227)   2ED9 27          		 DAA        ; for converting	; for converting
228)   2EDA CE 40       		 ADC A, 40h       ; one nibble	; one nibble
229)   2EDC 27          		 DAA        ; to hex ASCII	; to hex ASCII
230)   2EDD 12          		 LD (DE), A	;
231)   2EDE 13          		 INC DE	;
232)   2EDF C9          		 RET	;
244)   2EE0 7D          		 LD A, L	;
245)   2EE1 CD D1 2E    		 CALL cvtUN	;
246)   2EE4 7D          		 LD A, L	;
247)   2EE5 18 EE       		 JR cvtLN	;
249)   2EE7 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
250)   2EE8 1F          		 RRA	;
251)   2EE9 1F          		 RRA	;
252)   2EEA 1F          		 RRA	;
254)   2EEB E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
255)   2EED C6 90       		 ADD A, 90h       ; old trick	; old trick
256)   2EEF 27          		 DAA        ; for converting	; for converting
257)   2EF0 CE 40       		 ADC A, 40h       ; one nibble	; one nibble
258)   2EF2 27          		 DAA        ; to hex ASCII	; to hex ASCII
259)   2EF3 12          		 LD (DE), A	;
260)   2EF4 13          		 INC DE	;
261)   2EF5 C9          		 RET	;
278)   2EF6 F5          		 PUSH AF        ; 11 T-states	; 11 T-states
280)   2EF7 ED 44       		 NEG         ; 8 T-states	; 8 T-states
281)   2EF9 ED 44       		 NEG         ; 8 T-states	; 8 T-states
282)   2EFB ED 44       		 NEG         ; 8 T-states	; 8 T-states
283)   2EFD ED 44       		 NEG         ; 8 T-states	; 8 T-states
284)   2EFF 0B          		 DEC BC         ; 6 T-states	; 6 T-states
285)   2F00 79          		 LD A, C        ; 9 T-states	; 9 T-states
286)   2F01 B0          		 OR B         ; 4 T-states	; 4 T-states
287)   2F02 C2 F7 2E    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
288)   2F05 F1          		 POP AF         ; 10 T-states	; 10 T-states
289)   2F06 C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
302)   2F07 AF          		   xor a	;
303)   2F08 CD 0D 2F    		   call loop	;
304)   2F0B 7A          		   ld a,d	;
305)   2F0C C9          		   ret	;
307)   2F0D 57          		   ld d,a	;
308)   2F0E 7E          		   ld a,(hl)	;
309)   2F0F 23          		   inc hl	;
310)   2F10 D6 3A       		   sub '9'+1	;
311)   2F12 C6 0A       		   add 10	;
312)   2F14 D0          		   ret nc	;
313)   2F15 5F          		   ld e,a	;
314)   2F16 7A          		   ld a,d	;
315)   2F17 87          		   add a,a     ;double our accumulator	;double our accumulator
316)   2F18 87          		   add a,a     ;double again (now x4)	;double again (now x4)
317)   2F19 82          		   add a,d     ;add the original (now x5)	;add the original (now x5)
318)   2F1A 87          		   add a,a     ;double again (now x10)	;double again (now x10)
319)   2F1B 83          		   add a,e     ;add in the incoming digit	;add in the incoming digit
320)   2F1C 18 EF       		   jr loop	;
325)   2F1E E5          		 push hl	;
327)   2F1F 7E          		 ld a, (hl)	;
329)   2F20 FE 00       		 cp 0	;
330)   2F22 28 14       		 jr z, IsStrHexTrue	;
332)   2F24 FE 30       		 cp '0'	;
333)   2F26 38 0C       		 jr c, IsStrHexFalse	;
335)   2F28 FE 3A       		 cp '9'+1	;
336)   2F2A 38 0F       		 jr c, IsStrHexContinue	;
338)   2F2C FE 30       		 cp '0'	;
339)   2F2E 38 04       		 jr c, IsStrHexFalse	;
341)   2F30 FE 47       		 cp 'F'+1	;
342)   2F32 38 07       		 jr c, IsStrHexContinue	;
345)   2F34 F6 01       		 or 1 ; Reset zero flag	; Reset zero flag
346)   2F36 E1          		 pop hl	;
347)   2F37 C9          		 ret	;
349)   2F38 BF          		 cp a ; Set zero flag	; Set zero flag
350)   2F39 E1          		 pop hl	;
351)   2F3A C9          		 ret	;
353)   2F3B 23          		 inc hl	;
354)   2F3C 18 E1       		 jr IsStrHex00    	;
360)   2F3E 7E          		 ld a, (hl)  ; Copy first char to A	; Copy first char to A
361)   2F3F CD 4F 2F    		       call  Hex12  ; Convert first char	; Convert first char
362)   2F42 87          		       add  a, a  ; Multiply by 16...	; Multiply by 16...
363)   2F43 87          		       add  a, a  ; ...	; ...
364)   2F44 87          		       add  a, a  ; ...	; ...
365)   2F45 87          		       add  a, a  ; ...done!	; ...done!
366)   2F46 57          		       ld  d, a  ; Store top 4 bits in D	; Store top 4 bits in D
367)   2F47 23          		 inc hl  ; Advance to next char	; Advance to next char
368)   2F48 7E          		       ld  a, (hl)	;
369)   2F49 CD 4F 2F    		       call  Hex12  ; Convert second char	; Convert second char
370)   2F4C B2          		       or  d  ; Add back top bits	; Add back top bits
371)   2F4D 23          		 inc hl  ; Advance for next guy	; Advance for next guy
372)   2F4E C9          		       ret	;
373)   2F4F D6 30       		Hex12: sub  '0'	;
374)   2F51 FE 0A       		       cp  10	;
375)   2F53 D8          		       ret  c	;
376)   2F54 D6 07       		       sub  'A'-'0'-10	;
377)   2F56 C9          		       ret	;
383)   2F57 CD 3E 2F    		 call Read8bit	;
384)   2F5A 47          		 ld b, a	;
385)   2F5B CD 3E 2F    		 call Read8bit	;
386)   2F5E 4F          		 ld c, a	;
387)   2F5F C9          		 ret	;
395)   2F60 7E          		 ld a, (hl)	;
396)   2F61 23          		 inc hl	;
397)   2F62 D6 30       		 sub '0'	;
398)   2F64 CB 27       		 sla a	;
399)   2F66 CB 27       		 sla a	;
400)   2F68 CB 27       		 sla a	;
401)   2F6A CB 27       		 sla a	;
402)   2F6C 47          		 ld b, a	;
403)   2F6D 7E          		 ld a, (hl)	;
404)   2F6E 23          		 inc hl	;
405)   2F6F D6 30       		 sub '0'	;
406)   2F71 B0          		 or b	;
407)   2F72 C9          		 ret	;
411)   2F73 4F          		 ld c, a   ; a = number to convert	; a = number to convert
412)   2F74 CD 80 2F    		 call Num1	;
413)   2F77 77          		 ld (hl), a	;
414)   2F78 23          		 inc hl	;
415)   2F79 79          		 ld a, c	;
416)   2F7A CD 84 2F    		 call Num2	;
417)   2F7D 77          		 ld (hl), a	;
418)   2F7E 23          		 inc hl	;
419)   2F7F C9          		 ret	;
420)   2F80 1F          		Num1:       rra	;
421)   2F81 1F          		           rra	;
422)   2F82 1F          		           rra	;
423)   2F83 1F          		           rra	;
424)   2F84 F6 F0       		Num2:       or $F0	;
425)   2F86 27          		           daa	;
426)   2F87 C6 A0       		           add a, $A0	;
427)   2F89 CE 40       		           adc a, $40 ; Ascii hex at this point (0 to F)   	; Ascii hex at this point (0 to F)
428)   2F8B C9          		    ret	;
457)   2F8C 26 00       		@B2D8:   LD H,0	;
458)   2F8E 6F          		        LD L,A	;
459)   2F8F 1E 00       		@B2D16:  LD E,0	;
460)   2F91 16 00       		@B2D24:  LD D,0	;
461)   2F93 01 00 00    		@B2D32:  LD BC,0	;
462)   2F96 DD 21 00 00 		@B2D48:  LD IX,0          ; zero all non-used bits	; zero all non-used bits
463)   2F9A 22 25 FF    		@B2D64:  LD (B2DINV),HL	;
464)   2F9D ED 53 27 FF 		        LD (B2DINV+2),DE	;
465)   2FA1 ED 43 29 FF 		        LD (B2DINV+4),BC	;
466)   2FA5 DD 22 2B FF 		        LD (B2DINV+6),IX ; place full 64-bit input value in buffer	; place full 64-bit input value in buffer
467)   2FA9 21 89 FE    		        LD HL,B2DBUF	;
468)   2FAC 11 8A FE    		        LD DE,B2DBUF+1	;
469)   2FAF 36 20       		        LD (HL),' '	;
471)   2FB1 01 12 00    		        LD BC,18	;
472)   2FB4 ED B0       		        LDIR            ; fill 1st 19 bytes of buffer with spaces	; fill 1st 19 bytes of buffer with spaces
473)   2FB6 ED 43 2E FF 		        LD (B2DEND-1),BC ;set BCD value to "0" & place terminating 0	;set BCD value to "0" & place terminating 0
474)   2FBA 1E 01       		        LD E,1          ; no. of bytes in BCD value	; no. of bytes in BCD value
475)   2FBC 21 2D FF    		        LD HL,B2DINV+8  ; (address MSB input)+1	; (address MSB input)+1
476)   2FBF 01 09 09    		        LD BC,0x0909	;
477)   2FC2 AF          		        XOR A	;
478)   2FC3 05          		B2DSKP0: DEC B	;
479)   2FC4 28 29       		        JR Z,B2DSIZ     ; all 0: continue with postprocessing	; all 0: continue with postprocessing
480)   2FC6 2B          		        DEC HL	;
481)   2FC7 B6          		        OR (HL)         ; find first byte <>0	; find first byte <>0
482)   2FC8 28 F9       		        JR Z,B2DSKP0	;
483)   2FCA 0D          		B2DFND1: DEC C	;
484)   2FCB 17          		        RLA	;
485)   2FCC 30 FC       		        JR NC,B2DFND1   ; determine no. of most significant 1-bit	; determine no. of most significant 1-bit
486)   2FCE 1F          		        RRA	;
487)   2FCF 57          		        LD D,A          ; byte from binary input value	; byte from binary input value
488)   2FD0 E5          		B2DLUS2: PUSH HL	;
489)   2FD1 C5          		        PUSH BC	;
490)   2FD2 21 2E FF    		B2DLUS1: LD HL,B2DEND-1 ; address LSB of BCD value	; address LSB of BCD value
491)   2FD5 43          		        LD B,E          ; current length of BCD value in bytes	; current length of BCD value in bytes
492)   2FD6 CB 12       		        RL D            ; highest bit from input value -> carry	; highest bit from input value -> carry
493)   2FD8 7E          		B2DLUS0: LD A,(HL)	;
494)   2FD9 8F          		        ADC A,A	;
495)   2FDA 27          		        DAA	;
496)   2FDB 77          		        LD (HL),A       ; double 1 BCD byte from intermediate result	; double 1 BCD byte from intermediate result
497)   2FDC 2B          		        DEC HL	;
498)   2FDD 10 F9       		        DJNZ B2DLUS0    ; and go on to double entire BCD value (+carry!)	; and go on to double entire BCD value (+carry!)
499)   2FDF 30 03       		        JR NC,B2DNXT	;
500)   2FE1 1C          		        INC E           ; carry at MSB -> BCD value grew 1 byte larger	; carry at MSB -> BCD value grew 1 byte larger
501)   2FE2 36 01       		        LD (HL),1       ; initialize new MSB of BCD value	; initialize new MSB of BCD value
502)   2FE4 0D          		B2DNXT: DEC C	;
503)   2FE5 20 EB       		        JR NZ,B2DLUS1   ; repeat for remaining bits from 1 input byte	; repeat for remaining bits from 1 input byte
504)   2FE7 C1          		        POP BC          ; no. of remaining bytes in input value	; no. of remaining bytes in input value
505)   2FE8 0E 08       		        LD C,8          ; reset bit-counter	; reset bit-counter
506)   2FEA E1          		        POP HL          ; pointer to byte from input value	; pointer to byte from input value
507)   2FEB 2B          		        DEC HL	;
508)   2FEC 56          		        LD D,(HL)       ; get next group of 8 bits	; get next group of 8 bits
509)   2FED 10 E1       		        DJNZ B2DLUS2    ; and repeat until last byte from input value	; and repeat until last byte from input value
510)   2FEF 21 2F FF    		B2DSIZ: LD HL,B2DEND    ; address of terminating 0	; address of terminating 0
511)   2FF2 4B          		        LD C,E          ; size of BCD value in bytes	; size of BCD value in bytes
512)   2FF3 B7          		        OR A	;
513)   2FF4 ED 42       		        SBC HL,BC       ; calculate address of MSB BCD	; calculate address of MSB BCD
514)   2FF6 54          		        LD D,H	;
515)   2FF7 5D          		        LD E,L	;
516)   2FF8 ED 42       		        SBC HL,BC	;
517)   2FFA EB          		        EX DE,HL        ; HL=address BCD value, DE=start of decimal value	; HL=address BCD value, DE=start of decimal value
518)   2FFB 41          		        LD B,C          ; no. of bytes BCD	; no. of bytes BCD
519)   2FFC CB 21       		        SLA C           ; no. of bytes decimal (possibly 1 too high)	; no. of bytes decimal (possibly 1 too high)
520)   2FFE 3E 30       		        LD A,'0'	;
521)   3000 ED 6F       		        RLD             ; shift bits 4-7 of (HL) into bit 0-3 of A	; shift bits 4-7 of (HL) into bit 0-3 of A
522)   3002 FE 30       		        CP '0'          ; (HL) was > 9h?	; (HL) was > 9h?
523)   3004 20 06       		        JR NZ,B2DEXPH   ; if yes, start with recording high digit	; if yes, start with recording high digit
524)   3006 0D          		        DEC C           ; correct number of decimals	; correct number of decimals
525)   3007 13          		        INC DE          ; correct start address	; correct start address
526)   3008 18 04       		        JR B2DEXPL      ; continue with converting low digit	; continue with converting low digit
527)   300A ED 6F       		B2DEXP: RLD             ; shift high digit (HL) into low digit of A	; shift high digit (HL) into low digit of A
528)   300C 12          		B2DEXPH: LD (DE),A      ; record resulting ASCII-code	; record resulting ASCII-code
529)   300D 13          		        INC DE	;
530)   300E ED 6F       		B2DEXPL: RLD	;
531)   3010 12          		        LD (DE),A	;
532)   3011 13          		        INC DE	;
533)   3012 23          		        INC HL          ; next BCD-byte	; next BCD-byte
534)   3013 10 F5       		        DJNZ B2DEXP     ; and go on to convert each BCD-byte into 2 ASCII	; and go on to convert each BCD-byte into 2 ASCII
535)   3015 ED 42       		        SBC HL,BC       ; return with HL pointing to 1st decimal	; return with HL pointing to 1st decimal
536)   3017 C9          		        RET	;
540)   3018 EB          		 ex de, hl ; Get destination into DE	; Get destination into DE
541)   3019 21 89 FE    		 ld hl, B2DBUF	;
542)   301C CD 23 30    		 call SkipWhitespace	;
543)   301F ED B0       		 ldir	;
544)   3021 EB          		 ex de, hl ; Get destination into DE	; Get destination into DE
545)   3022 C9          		 ret    	;
549)   3023 7E          		 ld a, (hl)	;
550)   3024 FE 20       		 cp ' '	;
551)   3026 C0          		 ret nz	;
552)   3027 23          		 inc hl	;
553)   3028 18 F9       		 jr SkipWhitespace 	;
  7)   302A 16 00       		   ld d,0	;
  8)   302C 6A          		   ld l,d	;
  9)   302D 06 08       		   ld b,8	;
 11)   302F 29          		   add hl,hl	;
 12)   3030 30 01       		   jr nc,Mult8_NoAdd	;
 13)   3032 19          		   add hl,de	;
 15)   3033 10 FA       		   djnz Mult8_Loop	;
 16)   3035 C9          		   ret	;
 23)   3036 2E 00       		   ld l,0	;
 24)   3038 06 08       		   ld b,8	;
 26)   303A 29          		   add hl,hl	;
 27)   303B 87          		   add a,a	;
 28)   303C 30 01       		   jr nc,Mult12_NoAdd	;
 29)   303E 19          		   add hl,de	;
 31)   303F 10 F9       		   djnz Mult12_Loop	;
 32)   3041 C9          		   ret	;
 39)   3042 21 00 00    		@Mult16: ld hl, 0	;
 40)   3045 78          		 ld a, b	;
 41)   3046 06 10       		 ld b, 16	;
 43)   3048 29          		 add hl, hl	;
 44)   3049 CB 21       		 sla c	;
 45)   304B 17          		 rla	;
 46)   304C 30 01       		 jr nc, Mult16_NoAdd	;
 47)   304E 19          		 add hl, de	;
 49)   304F 10 F7       		 djnz Mult16_Loop	;
 50)   3051 C9          		 ret	;
 56)   3052 D5          		@Mult32: PUSH DE	;
 57)   3053 79          		 ld a, c	;
 58)   3054 48          		 ld c, b	;
 59)   3055 21 00 00    		 ld hl, 0	;
 60)   3058 06 10       		 ld b, 16	;
 62)   305A 29          		 add hl, hl	;
 63)   305B 17          		 rla	;
 64)   305C CB 11       		 rl c	;
 65)   305E 30 07       		 jr nc, Mult32_NoAdd	;
 66)   3060 19          		 add hl, de	;
 67)   3061 CE 00       		 adc a, 0	;
 68)   3063 D2 67 30    		 jp nc, Mult32_NoAdd	;
 69)   3066 0C          		 inc c	;
 71)   3067 10 F1       		 djnz Mult32_Loop	;
 72)   3069 41          		 ld b, c	;
 73)   306A 4F          		 ld c, a	;
 74)   306B D1          		 POP DE	;
 75)   306C C9          		 ret	;
 83)   306D 19          		 ADD HL, DE        ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
 84)   306E D9          		 EXX	;
 85)   306F ED 5A       		 ADC HL, DE        ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
 86)   3071 D9          		 EXX	;
 89)   3072 C9          		 RET	;
 99)   3073 11 40 00    		 ld de, $0040	;
100)   3076 7D          		 ld a, l	;
101)   3077 6C          		 ld l, h	;
102)   3078 62          		 ld h, d	;
103)   3079 B7          		 or a	;
104)   307A 06 08       		 ld b, 8	;
106)   307C ED 52       		 sbc hl, de	;
107)   307E 30 01       		 jr nc, Sqr16_Skip	;
108)   3080 19          		 add hl, de	;
110)   3081 3F          		 ccf	;
111)   3082 CB 12       		 rl d	;
112)   3084 87          		 add a, a	;
113)   3085 ED 6A       		 adc hl, hl	;
114)   3087 87          		 add a, a	;
115)   3088 ED 6A       		 adc hl, hl	;
116)   308A 10 F0       		 djnz Sqr16_Loop	;
117)   308C C9          		 ret	;
  4)   308D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3091 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3095 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3099 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   309D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30AD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30BD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30CD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30DD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30ED 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30FD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3101 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3105 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3109 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   310D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3111 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3115 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3119 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   311D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3121 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3125 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3129 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   312D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3131 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3135 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3139 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   313D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3141 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3145 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3149 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   314D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3151 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3155 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3159 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   315D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3161 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3165 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3169 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   316D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3171 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3175 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3179 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   317D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3181 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3185 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3189 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   318D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3191 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3195 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3199 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   319D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31AD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31BD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31CD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31DD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31ED 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31FD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3201 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3205 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3209 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   320D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3211 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3215 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3219 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   321D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3221 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3225 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3229 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   322D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3231 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3235 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3239 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   323D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3241 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3245 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3249 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   324D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3251 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3255 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3259 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   325D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3261 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3265 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3269 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   326D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3271 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3275 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3279 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   327D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3281 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3285 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3289 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   328D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3291 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3295 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3299 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   329D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32AD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32BD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32CD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32DD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32ED 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32FD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3301 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3305 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3309 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   330D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3311 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3315 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3319 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   331D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3321 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3325 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3329 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   332D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3331 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3335 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3339 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   333D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3341 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3345 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3349 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   334D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3351 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3355 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3359 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   335D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3361 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3365 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3369 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   336D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3371 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3375 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3379 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   337D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3381 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3385 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3389 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   338D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3391 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3395 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3399 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   339D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33AD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33BD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33CD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33DD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33ED 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33FD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3401 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3405 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3409 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   340D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3411 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3415 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3419 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   341D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3421 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3425 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3429 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   342D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3431 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3435 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3439 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   343D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3441 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3445 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3449 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   344D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3451 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3455 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3459 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   345D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3461 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3465 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3469 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   346D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3471 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3475 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3479 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   347D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3481 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3485 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3489 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   348D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3491 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3495 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3499 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   349D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34AD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34BD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34CD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34DD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34ED 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34FD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3501 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3505 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3509 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   350D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3511 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3515 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3519 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   351D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3521 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3525 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3529 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   352D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3531 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3535 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3539 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   353D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3541 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3545 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3549 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   354D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3551 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3555 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3559 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   355D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3561 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3565 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3569 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   356D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3571 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3575 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3579 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   357D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3581 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3585 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3589 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   358D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3591 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3595 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3599 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   359D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35AD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35BD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35CD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35DD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35ED 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35FD 00 00 00    		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  5)   3600 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3604 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3608 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   360C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3610 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3614 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3618 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   361C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3620 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3624 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3628 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   362C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3630 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3634 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3638 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   363C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3640 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3644 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3648 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   364C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3650 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3654 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3658 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   365C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3660 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3664 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3668 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   366C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3670 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3674 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3678 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   367C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3680 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3684 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3688 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   368C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3690 80 01 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3694 7E 00 C0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3698 00 00 FF 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   369C 80 02 F0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36AC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36BC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36CC 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D0 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D8 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36DC 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E0 14 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E4 00 18 18 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E8 18 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36EC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F8 0C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36FC 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3700 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3704 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3708 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   370C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3710 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3714 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3718 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   371C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3720 00 10 12 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3724 10 60 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3728 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   372C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3730 38 10 38 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3734 08 7C 1C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3738 38 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   373C 08 00 20 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3740 3C 18 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3744 7C 7E 7E 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3748 42 38 02 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   374C 40 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3750 7C 3C 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3754 FE 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3758 44 44 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   375C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3760 20 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3764 04 00 08 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3768 40 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   376C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3770 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3774 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3778 00 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   377C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3780 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3784 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3788 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   378C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3790 C0 03 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3794 7E 00 B0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3798 00 00 00 06 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   379C 40 04 C0 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A0 7C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A4 38 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37AC 60 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B0 00 7E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B4 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B8 00 00 00 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37BC 38 38 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C0 7E 10 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C4 10 00 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C8 60 08 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37CC 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D0 08 20 28 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D4 20 10 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D8 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37DC 08 20 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E0 28 00 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E4 18 18 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E8 3C 42 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37EC 44 10 10 3A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F0 00 3E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F4 04 FE 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F8 10 7E 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3800 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3804 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3808 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   380C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3810 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3814 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3818 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   381C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3820 00 10 24 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3824 3C 64 50 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3828 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   382C 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3830 44 30 44 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3834 18 40 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3838 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   383C 10 00 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3840 42 24 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3844 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3848 42 10 02 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   384C 40 66 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3850 42 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3854 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3858 44 44 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   385C 40 08 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3860 10 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3864 04 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3868 40 10 10 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   386C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3870 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3874 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3878 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   387C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3880 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3884 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3888 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   388C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3890 E0 07 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3894 7E 7E 8C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3898 00 00 00 0A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   389C 20 08 A0 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A0 44 00 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A4 40 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A8 00 00 7C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38AC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B0 00 42 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B4 00 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B8 00 00 7C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38BC 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C0 22 28 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C4 10 10 60 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C8 10 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38CC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D0 10 10 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D4 10 28 28 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D8 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38DC 10 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E0 00 00 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E4 24 24 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E8 42 42 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38EC EE 38 00 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F0 00 50 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F4 08 82 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F8 18 90 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38FC 28 48 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3900 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3904 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3908 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   390C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3910 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3914 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3918 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   391C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3920 00 10 48 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3924 50 08 50 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3928 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   392C 00 00 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3930 4C 10 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3934 28 78 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3938 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   393C 20 7C 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3940 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3944 22 40 40 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3948 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   394C 40 5A 52 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3950 42 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3954 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3958 28 28 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   395C 20 08 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3960 08 38 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3964 3C 38 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3968 78 00 00 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   396C 10 EC 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3970 78 3C 5C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3974 38 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3978 44 44 7C 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   397C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3980 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3984 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3988 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   398C 10 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3990 F0 0F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3994 7E 7E 82 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3998 18 18 00 12 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   399C 12 90 90 41 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A0 40 34 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A4 38 1C 28 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A8 58 10 20 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39AC 10 44 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B0 7C 00 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B4 7C 44 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B8 44 44 20 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39BC 7C 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C0 10 28 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C4 10 08 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C8 30 08 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39CC 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D0 38 38 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D4 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39DC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E0 78 3C 52 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39EC FE 7C 38 4C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F0 3A 90 6C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F4 08 44 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F8 24 90 6C 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A24 38 10 20 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A28 40 04 10 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A2C 00 7C 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A30 54 10 18 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A34 48 04 78 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A38 38 3C 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A3C 40 00 04 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A40 52 7E 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A44 22 7C 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A48 7E 10 02 70 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A4C 40 5A 4A 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A50 7C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A58 10 10 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A5C 10 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A60 00 04 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A64 44 44 38 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A70 44 44 60 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A74 10 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A78 28 44 08 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A7C 00 04 32 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A80 00 FF 08 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A84 FF FF F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A88 F8 0F F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A8C E0 03 E0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A90 F8 1F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A94 7E 7E 8C 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A98 24 3C 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A9C 0A A0 08 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA0 40 48 78 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA4 44 20 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA8 64 10 78 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB0 28 18 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB4 10 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB8 24 24 40 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ABC 92 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC0 08 44 24 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC4 10 7C 2C 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC8 14 08 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ACC 04 04 04 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD0 44 44 44 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ADC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE0 44 40 4A 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE4 78 7E 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE8 42 42 FE FE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AEC FE FE 04 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF0 4C FC 12 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF4 08 44 7C 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF8 24 9C 92 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B20 00 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B24 14 20 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B28 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B2C 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B30 64 10 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B34 7C 04 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B38 44 04 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B3C 20 7C 08 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B40 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B44 22 40 40 4E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B48 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B4C 40 42 46 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B50 40 4A 48 02 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B58 28 10 20 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B5C 08 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B60 00 7C 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B64 44 7C 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B68 44 10 10 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B70 44 44 40 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B78 10 44 10 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B7C 10 08 4C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B8C 00 00 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B90 FC 3F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B94 7E 7E B0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B98 24 3C 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B9C 06 C0 04 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA4 44 18 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA8 44 10 20 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB0 28 00 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB8 28 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BBC 7C 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC0 10 44 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC4 54 08 32 2C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC8 6C 08 20 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BCC 7C 7C 7C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD0 7C 7C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE0 44 40 46 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BEC 7C D6 7C 64 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF0 54 90 FE 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF4 08 28 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF8 18 90 9E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C20 00 00 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C24 78 4C 88 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C28 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C2C 00 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C30 44 10 40 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C34 08 44 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C38 44 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C3C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C40 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C44 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C48 42 10 42 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C4C 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C50 40 44 44 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C54 10 42 24 66 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C58 44 10 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C5C 04 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C60 00 44 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C64 44 40 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C70 78 3C 40 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C78 28 44 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C7C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C90 FE 7F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C94 7E 7E C0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C98 18 18 00 80 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C9C 3E F0 02 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA4 44 20 54 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA8 44 10 40 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CAC 44 44 18 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB0 28 42 64 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB8 10 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CBC 10 10 44 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC0 22 82 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC4 38 10 0C 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC8 14 08 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CCC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD0 40 40 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE0 44 40 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE8 42 42 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CEC 38 10 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF0 64 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF4 08 28 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF8 08 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D1C F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D24 10 0C 74 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D28 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D2C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D30 38 38 7C 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D34 08 38 38 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D38 38 70 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D3C 08 00 20 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D40 3C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D44 7C 7E 40 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D48 42 38 3C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D4C 7E 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D50 40 3A 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D54 10 3C 18 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D58 44 10 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D5C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D60 00 3C 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D64 3C 3C 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D68 44 18 10 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D6C 18 92 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D70 40 04 40 78 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D74 18 3C 10 6C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D78 44 3C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D7C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA0 40 34 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA4 38 1C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA8 44 08 38 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DAC 44 78 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB0 24 7E 58 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB4 08 38 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB8 28 18 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DBC 38 38 C6 EE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC0 7E FE 66 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC4 10 00 10 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC8 1E 08 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DCC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD0 3C 3C 3C 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD4 18 18 18 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DDC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE0 44 3C 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE4 7C 42 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE8 3C 3C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DEC 10 38 3C B8 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF0 B8 9E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF4 08 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF8 30 7E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E2C 20 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E38 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E5C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E64 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E68 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E78 00 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA8 04 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB4 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB8 48 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC4 00 00 1E 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC8 04 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ECC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE0 00 08 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF4 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F2C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F38 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F5C 00 00 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F64 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F68 00 00 30 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F78 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA8 04 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB4 00 00 00 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB8 44 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FCC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE0 00 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
 14)   FE00 00          		 @FLAGS DEFS 1        ; Flags: B7=ESC PRESSED,B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 15)   FE01 00 00       		 @FCOLOR DEFS 2       ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 16)   FE03 00 00       		 @BCOLOR DEFS 2       ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 17)   FE05 00 00       		 @FGRCOL DEFS 2       ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 18)   FE07 00 00       		 @BGRCOL DEFS 2       ;BACKGROUND COLOR FOR GRAPHICS	;BACKGROUND COLOR FOR GRAPHICS
 19)   FE09 00 00       		 @FCOLTM DEFS 2       ;TEMP FOREGROUND COLOR	;TEMP FOREGROUND COLOR
 20)   FE0B 00 00       		 @BCOLTM DEFS 2       ;TEMP BACKGROUND COLOR	;TEMP BACKGROUND COLOR
 21)   FE0D 00          		 @CURSORX DEFS 1       ;0-79	;0-79
 22)   FE0E 00          		 @CURSORY DEFS 1       ;0-47	;0-47
 23)   FE0F 00          		 @SCRLN DEFS 1        ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 24)   FE10 00          		 @LASTCHAR DEFS 1      ;	;
 25)   FE11 00          		 @CURSSTAT DEFS 1       ;IF BIT 0 SET THEN SHOW ELSE HIDE,IF BIT 1 SET THEN VISIBLE ELSE HIDDEN	;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN
 26)   FE12 00 00       		 @EDPTR DEFS 2	;
 27)   FE14 00          		 @OPTVAL DEFS 1	;
 28)   FE15 00          		 @INKEY DEFS 1	;
 29)   FE16 00          		 @VDUMODE DEFS 1       ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 30)   FE17 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE23 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE27 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE33 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 31)   FE37 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE43 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE47 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE53 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 32)   FE57 00 00       		 @GR_LASTX3 DEFS 2	;
 33)   FE59 00 00       		 @GR_LASTY3 DEFS 2	;
 34)   FE5B 00 00       		 @GR_LASTX2 DEFS 2	;
 35)   FE5D 00 00       		 @GR_LASTY2 DEFS 2	;
 36)   FE5F 00 00       		 @GR_LASTX DEFS 2	;
 37)   FE61 00 00       		 @GR_LASTY DEFS 2	;
 38)   FE63 00 00       		 @GR_PARAM1 DEFS 2	;
 39)   FE65 00 00       		 @GR_PARAM2 DEFS 2	;
 40)   FE67 00 00       		 @GR_PARAM3 DEFS 2	;
 41)   FE69 00 00       		 @GR_PARAM4 DEFS 2	;
 43)   FE6B 00 00       		 @FILL_X DEFS 2	;
 44)   FE6D 00 00       		 @FILL_Y DEFS 2	;
 45)   FE6F 00 00       		 @FILL_L DEFS 2	;
 46)   FE71 00 00       		 @FILL_X1 DEFS 2	;
 47)   FE73 00 00       		 @FILL_X2 DEFS 2	;
 48)   FE75 00 00       		 @FILL_DY DEFS 2	;
 49)   FE77 00 00       		 @FILL_Q DEFS 2        ;START OF QUEUE	;START OF QUEUE
 50)   FE79 00 00       		 @FILL_IDX DEFS 2       ;INDEX OF QUEUE	;INDEX OF QUEUE
 51)   FE7B 00 00       		 @FILL_PY DEFS 2       ;FOR PUSH/POP	;FOR PUSH/POP
 52)   FE7D 00 00       		 @FILL_PXL DEFS 2	;
 53)   FE7F 00 00       		 @FILL_PXR DEFS 2	;
 54)   FE81 00 00       		 @FILL_PDY DEFS 2	;
 55)   FE83 00 00       		 @FILL_OV DEFS 2       ;OLD COLOR	;OLD COLOR
 56)   FE85 00 00       		 @FILL_OLDSP DEFS 2      ; OLD SP	; OLD SP
 57)   FE87 00          		 @LCD_DSPCTRL DEFS 1	;
 58)   FE88 00          		 @LCD_DSPMODE DEFS 1  	;
 59)   FE89 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 59)   FE8D 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 59)   FE91 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 59)   FE95 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 59)   FE99 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE9D 00          		 @FFSTAT DEFS 1        ;FOR OUTPUT FLIP FLOPS DEVEPR,DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 61)   FE9E 00          		 @KEYCTR DEFS 1        ;FOR USB KEYBOARD	;FOR USB KEYBOARD
 62)   FE9F 00          		 @SERERR DEFS 1       ;	;
 63)   FEA0 00          		 @SERER2 DEFS 1        ;AT RAM ADDRESS	;AT RAM ADDRESS
 64)   FEA1 00          		 @DISPCT DEFS 1        ;	;
 65)   FEA2 00          		 @LCDCX DEFS 1        ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 66)   FEA3 00          		 @LCDCY DEFS 1        ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 67)   FEA4 00 00       		 @PRGEX DEFS 2        ;2 BYTES	;2 BYTES
 68)   FEA6 00          		 @TVSTAT DEFS 1        ;1 BYTE	;1 BYTE
 69)   FEA7 00 00 00 00 		 @TIMECTR DEFS 4	;
 70)   FEAB 00          		 @INT2TE DEFS 1	;
 71)   FEAC 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 71)   FEB0 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 71)   FEB4 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 71)   FEB8 00          		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 72)   FEB9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 72)   FEBD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 72)   FEC1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 72)   FEC5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 72)   FEC9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 72)   FECD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 72)   FED1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 72)   FED5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 72)   FED9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 72)   FEDD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 73)   FEE1 00 00 00 00 		 @STRGCMD DEFS 4	;
 74)   FEE5 00          		 @FID DEFS 1	;
 75)   FEE6 00          		 @SPC DEFS 1	;
 76)   FEE7 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 76)   FEEB 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 77)   FEEF 00 00 00 00 		 @TMPG  DEFS 4  ;TEMP PAGE FOR VIDEO VGA	;TEMP PAGE FOR VIDEO VGA
 78)   FEF3 00 00 00 00 		 @PGSEM DEFS 4  ;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS	;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS
 79)   FEF7 00          		 @VGAFCOL DEFS 1  ;VGA FORE COLOR	;VGA FORE COLOR
 80)   FEF8 00          		 @VGABCOL DEFS 1  ;VGA BACK COLOR	;VGA BACK COLOR
 81)   FEF9 00          		 @VGATX_X DEFS 1  ;VGA CURRENT X POS	;VGA CURRENT X POS
 82)   FEFA 00          		 @VGATX_Y DEFS 1  ;VGA CUR Y POS	;VGA CUR Y POS
 83)   FEFB 00          		 @VGAMAXX DEFS 1  ;MAX HORZ CHARS	;MAX HORZ CHARS
 84)   FEFC 00          		 @VGAMAXY DEFS 1  ;MAX VERT LINES	;MAX VERT LINES
 85)   FEFD 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 85)   FF01 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 85)   FF05 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 85)   FF09 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 85)   FF0D 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 85)   FF11 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 85)   FF15 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 85)   FF19 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 85)   FF1D 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 85)   FF21 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 88)   FF25 00 00 00 00 		 @B2DINV DEFS 10	;
 88)   FF29 00 00 00 00 		 @B2DINV DEFS 10	;
 88)   FF2D 00 00       		 @B2DINV DEFS 10	;
 89)   FF2F 00 00 00 00 		 @B2DEND DEFS 10	;
 89)   FF33 00 00 00 00 		 @B2DEND DEFS 10	;
 89)   FF37 00 00       		 @B2DEND DEFS 10	;
