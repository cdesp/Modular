  3)   0000 00          		 NOP	;
  4)   0001 C3 00 01    		 JP START	;
  5)   0004 C3 A3 02    		 JP MENU	;
  6)   0007 49          		 VERSION DEFB $49    ; AT ADDR=7 VER 0.32	; AT ADDR=7 VER 0.32
  7)   0008 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   000C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0010 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0014 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0018 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   001C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0020 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0024 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0028 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   002C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0030 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0034 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
 10)   0038 C3 01 0D    		 JP INTSER	;
 13)   003B 00 00 00 00 		 ALIGN 256	;
 13)   003F 00 00 00 00 		 ALIGN 256	;
 13)   0043 00 00 00 00 		 ALIGN 256	;
 13)   0047 00 00 00 00 		 ALIGN 256	;
 13)   004B 00 00 00 00 		 ALIGN 256	;
 13)   004F 00 00 00 00 		 ALIGN 256	;
 13)   0053 00 00 00 00 		 ALIGN 256	;
 13)   0057 00 00 00 00 		 ALIGN 256	;
 13)   005B 00 00 00 00 		 ALIGN 256	;
 13)   005F 00 00 00 00 		 ALIGN 256	;
 13)   0063 00 00 00 00 		 ALIGN 256	;
 13)   0067 00 00 00 00 		 ALIGN 256	;
 13)   006B 00 00 00 00 		 ALIGN 256	;
 13)   006F 00 00 00 00 		 ALIGN 256	;
 13)   0073 00 00 00 00 		 ALIGN 256	;
 13)   0077 00 00 00 00 		 ALIGN 256	;
 13)   007B 00 00 00 00 		 ALIGN 256	;
 13)   007F 00 00 00 00 		 ALIGN 256	;
 13)   0083 00 00 00 00 		 ALIGN 256	;
 13)   0087 00 00 00 00 		 ALIGN 256	;
 13)   008B 00 00 00 00 		 ALIGN 256	;
 13)   008F 00 00 00 00 		 ALIGN 256	;
 13)   0093 00 00 00 00 		 ALIGN 256	;
 13)   0097 00 00 00 00 		 ALIGN 256	;
 13)   009B 00 00 00 00 		 ALIGN 256	;
 13)   009F 00 00 00 00 		 ALIGN 256	;
 13)   00A3 00 00 00 00 		 ALIGN 256	;
 13)   00A7 00 00 00 00 		 ALIGN 256	;
 13)   00AB 00 00 00 00 		 ALIGN 256	;
 13)   00AF 00 00 00 00 		 ALIGN 256	;
 13)   00B3 00 00 00 00 		 ALIGN 256	;
 13)   00B7 00 00 00 00 		 ALIGN 256	;
 13)   00BB 00 00 00 00 		 ALIGN 256	;
 13)   00BF 00 00 00 00 		 ALIGN 256	;
 13)   00C3 00 00 00 00 		 ALIGN 256	;
 13)   00C7 00 00 00 00 		 ALIGN 256	;
 13)   00CB 00 00 00 00 		 ALIGN 256	;
 13)   00CF 00 00 00 00 		 ALIGN 256	;
 13)   00D3 00 00 00 00 		 ALIGN 256	;
 13)   00D7 00 00 00 00 		 ALIGN 256	;
 13)   00DB 00 00 00 00 		 ALIGN 256	;
 13)   00DF 00 00 00 00 		 ALIGN 256	;
 13)   00E3 00 00 00 00 		 ALIGN 256	;
 13)   00E7 00 00 00 00 		 ALIGN 256	;
 13)   00EB 00 00 00 00 		 ALIGN 256	;
 13)   00EF 00 00 00 00 		 ALIGN 256	;
 13)   00F3 00 00 00 00 		 ALIGN 256	;
 13)   00F7 00 00 00 00 		 ALIGN 256	;
 13)   00FB 00 00 00 00 		 ALIGN 256	;
 13)   00FF 00          		 ALIGN 256	;
 42)   0100 F3          		@START: DI	;
 43)   0101 C3 DA 01    		 JP BOOT        ;SKIP TESTING	;SKIP TESTING
 45)   0104 C3 24 05    		@IOS_CLRSCR: JP OS_CLRSCR	;
 46)   0107 C3 A4 04    		@IOS_RMVCURS: JP OS_RMVCURS	;
 47)   010A C3 90 04    		@IOS_PRNCURS: JP OS_PRNCURS	;
 48)   010D C3 9D 21    		@IOS_CALCLINE: JP LCD_CALCLINE      ;TODO: VGA???	;TODO: VGA???
 49)   0110 C3 59 04    		@IOS_PRINTCHAR: JP OS_PRINTCHAR	;
 50)   0113 C3 ED 03    		@IOS_GETCHAR: JP GET_CHAR	;
 51)   0116 C3 BE 03    		@IOS_GETCHARNW: JP GET_CHARNW	;
 52)   0119 C3 7E 11    		@IOS_DIRLIST: JP STRG_DIRLIST	;
 53)   011C C3 AA 11    		@IOS_DIRCHG: JP STRG_DIRCHG	;
 54)   011F C3 C2 11    		@IOS_OPNFILE: JP STRG_OPNFILE	;
 55)   0122 C3 4B 12    		@IOS_TPFILE: JP STRG_TPFILE	;
 56)   0125 C3 E1 11    		@IOS_CLSFILE: JP STRG_CLSFILE	;
 57)   0128 C3 F3 11    		@IOS_BLKWRITE: JP STRG_BLKWRITE	;
 58)   012B C3 16 12    		@IOS_BLKREAD: JP STRG_BLKREAD	;
 59)   012E C3 4A 11    		@IOS_GETPOS: JP STRG_GETPOS	;
 60)   0131 C3 64 11    		@IOS_SETPOS: JP STRG_SETPOS	;
 61)   0134 C3 45 11    		@IOS_GETSIZE: JP STRG_GETSIZE	;
 62)   0137 C3 33 11    		@IOS_GETEOF: JP STRG_GETEOF	;
 63)   013A C3 BD 2A    		@IOS_BN2BCD: JP BN2BCD	;
 64)   013D C3 5C 08    		@IOS_DOCMD: JP CGDOCMD	;
 65)   0140 C3 53 15    		@IOS_DSADJUST: JP DS1307_ADJUST	;
 66)   0143 C3 B4 14    		@IOS_DSGETNOW: JP DS1307_GETNOW	;
 67)   0146 C3 22 17    		@IOS_L16BLOFF: JP LCD16_BLINKOFF	;
 68)   0149 C3 30 17    		@IOS_L16BLON: JP LCD16_BLINKON	;
 69)   014C C3 D3 16    		@IOS_L16CLR: JP LCD16_CLR	;
 70)   014F C3 F7 16    		@IOS_L16SETCRS: JP LCD16_SETCURS	;
 71)   0152 C3 06 17    		@IOS_L16CRSOFF: JP LCD16_CURSOFF	;
 72)   0155 C3 14 17    		@IOS_L16CRSON: JP LCD16_CURSON	;
 73)   0158 C3 AA 16    		@IOS_L16NODISP: JP LCD16_NODISP	;
 74)   015B C3 B8 16    		@IOS_L16DISP: JP LCD16_DISP	;
 75)   015E C3 EA 16    		@IOS_L16HOME: JP LCD16_HOME	;
 76)   0161 C3 4A 17    		@IOS_L16MVLEFT: JP LCD16_MOVLEFT	;
 77)   0164 C3 50 17    		@IOS_L16MVRGHT: JP LCD16_MOVRIGHT	;
 78)   0167 C3 DC 16    		@IOS_L16PRINT: JP LCD16_PRINT	;
 79)   016A C3 3E 17    		@IOS_L16SCLEFT: JP LCD16_SCRLEFT	;
 80)   016D C3 44 17    		@IOS_L16SCRGHT: JP LCD16_SCRRIGHT	;
 81)   0170 C3 3E 25    		@IOS_CLRGRAPH: JP CLEARGRAPH	;
 82)   0173 C3 CD 25    		@IOS_GRDRAWLNE: JP GR_DRAWLINE	;
 83)   0176 C3 6B 20    		@IOS_GRREADPXL: JP LCD_READPIXEL ;TODO: CHANGE TO GRAPH READ PIXEL	;TODO: CHANGE TO GRAPH READ PIXEL
 84)   0179 C3 A4 27    		@IOS_GRCIRCLE: JP GR_CIRCLE	;
 85)   017C C3 CD 20    		@IOS_GRFILL: JP LCD_FILL  ;TODO: CHANGE TO GRAPH	;TODO: CHANGE TO GRAPH
 86)   017F C3 20 25    		@IOS_GRPLTPXL: JP PLOTP	;
 87)   0182 C3 28 2D    		@IOS_ADD32: JP ADD32	;
 88)   0185 C3 B9 2C    		@IOS_MULT32: JP MULT32	;
 89)   0188 C3 00 00    		@IOS_SQRT32: JP 0000  ;TODO: MAKE ONE	;TODO: MAKE ONE
 96)   018B 06 05       		CN1: LD B, 5	;
 97)   018D 0E 00       		AGN1: LD C, 0	;
 98)   018F 3E 00       		 LD A, 0	;
 99)   0191 ED 79       		 OUT (C), A	;
100)   0193 0E 00       		 LD C, 0	;
101)   0195 3E FF       		 LD A, 255	;
102)   0197 ED 79       		 OUT (C), A	;
103)   0199 10 F2       		 DJNZ AGN1	;
108)   019B 11 01 00    		 LD DE, 1	;
109)   019E 3E 00       		 LD A, 0        ;WRITE 0	;WRITE 0
110)   01A0 4F          		 LD C, A	;
111)   01A1 21 00 40    		 LD HL, RAMAD	;
112)   01A4 06 08       		 LD B, 8	;
113)   01A6 77          		AGN2: LD (HL), A	;
114)   01A7 4E          		 LD C, (HL)	;
115)   01A8 B9          		 CP C	;
116)   01A9 C2 C3 01    		 JP NZ, ERR	;
117)   01AC 19          		 ADD HL, DE	;
118)   01AD C6 20       		 ADD A, 32       ;WRITE +32	;WRITE +32
119)   01AF 4F          		 LD C, A	;
120)   01B0 10 F4       		 DJNZ AGN2	;
122)   01B2 06 05       		 LD B, 5	;
123)   01B4 0E 08       		AGN3: LD C, 00001000B       ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
124)   01B6 3E 40       		 LD A, 64	;
125)   01B8 ED 79       		 OUT (C), A	;
126)   01BA C6 80       		 ADD A, 128	;
127)   01BC ED 79       		 OUT (C), A	;
128)   01BE 10 F4       		 DJNZ AGN3        ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
129)   01C0 C3 DA 01    		 JP BOOT	;
132)   01C3 0E 38       		ERR: LD C, 00111000B       ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
133)   01C5 3E 40       		 LD A, 64	;
134)   01C7 ED 79       		 OUT (C), A	;
136)   01C9 C3 C3 01    		 JP ERR         ;DO AGAIN PORT 1	;DO AGAIN PORT 1
141)   01CC 3E 01       		SETHISPEED: LD A, 1       ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
142)   01CE CD BE 0D    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
143)   01D1 C9          		 RET	;
145)   01D2 00 01 0A 0B 		MYMMUBANK:     DB 0,1,10,11,4,5,6,7	;
145)   01D6 04 05 06 07 		MYMMUBANK:     DB 0,1,10,11,4,5,6,7	;
149)   01DA F3          		@BOOT: DI	;
150)   01DB ED 56       		 IM 1	;
153)   01DD 0E 00       		MMUSETUP:   LD C,DEVMMU	;
154)   01DF AF          		  XOR A	;
155)   01E0 06 00       		 LD B,0.SHL.5	;
156)   01E2 ED 79       		 OUT (C),A	;
157)   01E4 3C          		 INC A	;
158)   01E5 06 20       		 LD B,1.SHL.5	;
159)   01E7 ED 79       		 OUT (C),A  	;
161)   01E9 3E 0A       		 LD A,10   ;VID MEM RAM	;VID MEM RAM
162)   01EB 06 40       		 LD B,2.SHL.5  	;
163)   01ED ED 79       		 OUT (C),A  	;
165)   01EF 3E 0B       		 LD A,11   ;VID MEM RAM	;VID MEM RAM
166)   01F1 06 60       		 LD B,3.SHL.5  	;
167)   01F3 ED 79       		 OUT (C),A  	;
169)   01F5 3E 04       		 LD A,4	;
170)   01F7 06 80       		 LD B,4.SHL.5	;
171)   01F9 ED 79       		 OUT (C),A  	;
172)   01FB 3C          		 INC A	;
173)   01FC 06 A0       		 LD B,5.SHL.5	;
174)   01FE ED 79       		 OUT (C),A  	;
175)   0200 3C          		 INC A	;
176)   0201 06 C0       		 LD B,6.SHL.5	;
177)   0203 ED 79       		 OUT (C),A  	;
178)   0205 3C          		 INC A	;
179)   0206 06 E0       		 LD B,7.SHL.5	;
180)   0208 ED 79       		 OUT (C),A 	;
183)   020A 3E 07       		INTFFPS: LD A,7	;
184)   020C D3 68       		IFFAGN: OUT (DEVINT), A	;
185)   020E 3D          		 DEC A	;
186)   020F C2 0C 02    		 JP NZ, IFFAGN    	;
188)   0212 31 FF FA    		 LD SP, STACKP	;
189)   0215 21 00 FE    		 LD HL,OSVARS       ;ZERO OS VARIABLES	;ZERO OS VARIABLES
190)   0218 AF          		SI_AGN: XOR A	;
191)   0219 77          		 LD (HL),A	;
192)   021A 23          		 INC HL	;
193)   021B 7C          		 LD A,H	;
194)   021C B5          		 OR L	;
195)   021D 20 F9       		 JR NZ,SI_AGN       ;HL=0000 WHEN OVERFLOW FROM FFFF  	;HL=0000 WHEN OVERFLOW FROM FFFF
197)   021F CD 87 0D    		 CALL INITMMU       ;PUT PAGES 0..7 IN RAM BANKS 0..7	;PUT PAGES 0..7 IN RAM BANKS 0..7
198)   0222 21 D2 01    		 LD HL,MYMMUBANK	;
199)   0225 11 01 FF    		 LD DE,BANKS	;
200)   0228 01 08 00    		 LD BC,8	;
201)   022B ED B0       		 LDIR        ;TO RAM PAGE 7 OS VARS	;TO RAM PAGE 7 OS VARS
203)   022D 3E 24       		 LD A,36        ;RANDOM SEED	;RANDOM SEED
204)   022F 32 73 FF    		 LD (RNDseed),A	;
206)   0232 CD D6 05    		 CALL FF_CLR	;
207)   0235 CD FE 05    		 CALL EPROMOFF	;
211)   0238 CD 5C 29    		 CALL SND_INIT  	;
214)   023B 3E 01       		 LD A, 1 ;12        ;12=9600 BPS, 1=115200BPS	;12        ;12=9600 BPS, 1=115200BPS
215)   023D CD BE 0D    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
216)   0240 21 29 07    		 LD HL, STR00	;
217)   0243 CD E6 0D    		 CALL RS_TXT	;
220)   0246 CD 22 13    		 CALL I2C_INIT        ;INITIALIZE I2C	;INITIALIZE I2C
221)   0249 CD A8 14    		 CALL DS1307_INIT      ;	;
222)   024C CD 17 15    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
223)   024F CD 52 16    		 CALL LCD16_INIT       ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
224)   0252 21 78 07    		 LD HL, SVER	;
225)   0255 CD DC 16    		 CALL LCD16_PRINT       ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
228)   0258 CD FC 10    		 CALL STRG_INIT	;
229)   025B 21 60 07    		 LD HL, STR001	;
230)   025E CD E6 0D    		 CALL RS_TXT	;
238)   0261 21 BB FE    		 LD HL,SCRNST	;
239)   0264 CB C6       		 SET 0,(HL) ;ENABLE LCD	;ENABLE LCD
240)   0266 CB CE       		 SET 1,(HL) ;ENABLE VGA	;ENABLE VGA
243)   0268 CD 9D 1E    		 CALL LCD_INIT	;
244)   026B 21 00 00    		 LD HL, COL_BLACK	;
245)   026E 22 03 FE    		 LD (BCOLOR), HL	;
246)   0271 21 FF FF    		 LD HL, COL_WHITE	;
247)   0274 22 01 FE    		 LD (FCOLOR), HL	;
248)   0277 21 16 07    		 LD HL, STRSCR	;
249)   027A CD E6 0D    		 CALL RS_TXT	;
250)   027D CD 8E 22    		 CALL LCD_CLRSCR	;
251)   0280 AF          		 XOR A	;
252)   0281 32 0F FE    		 LD (SCRLN), A	;
253)   0284 3E 00       		 LD A, 0	;
254)   0286 32 0D FE    		 LD (CURSORX), A	;
255)   0289 3E 00       		 LD A, 0	;
256)   028B 32 0E FE    		 LD (CURSORY), A	;
259)   028E CD 68 17    		 CALL VGA_INIT	;
260)   0291 21 09 07    		 LD HL, TXTMES	;
261)   0294 CD E6 0D    		 CALL RS_TXT	;
264)   0297 CD 76 0E    		 CALL PS2KBINIT	;
269)   029A CD 28 0D    		 CALL COPYINTTAB	;
272)   029D 21 89 07    		 LD HL,OSVERMES	;
273)   02A0 CD 3F 05    		 CALL OS_PRINTTEXT	;
278)   02A3 AF          		@MENU: XOR A	;
279)   02A4 32 0F FE    		 LD (SCRLN), A	;
280)   02A7 21 59 06    		 LD HL, STRMN	;
281)   02AA CD E6 0D    		 CALL RS_TXT       ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
282)   02AD 21 3F 07    		 LD HL, STR01	;
283)   02B0 CD E6 0D    		 CALL RS_TXT       ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
290)   02B3 3E 00       		 LD A, 0	;
291)   02B5 32 0D FE    		 LD (CURSORX), A	;
292)   02B8 32 13 FF    		 LD (VGATX_X), A	;
293)   02BB 3E 06       		 LD A, 6	;
294)   02BD 32 0E FE    		 LD (CURSORY), A	;
295)   02C0 32 14 FF    		 LD (VGATX_Y), A	;
296)   02C3 21 2A 06    		 LD HL, SMENU	;
297)   02C6 CD 3F 05    		 CALL OS_PRINTTEXT	;
299)   02C9 CD ED 03    		 CALL GET_CHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
300)   02CC F5          		 PUSH AF	;
301)   02CD CD A4 04    		 CALL OS_RMVCURS	;
302)   02D0 F1          		 POP AF	;
305)   02D1 FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
306)   02D3 CC 54 05    		 CALL Z, UPLOD	;
307)   02D6 FE 58       		 CP 'X'	;
308)   02D8 CA 4B 05    		 JP Z, EXEC	;
309)   02DB FE 53       		 CP 'S'	;
310)   02DD CC CC 01    		 CALL Z,SETHISPEED	;
311)   02E0 FE 54       		 CP 'T'	;
312)   02E2 CC A4 05    		 CALL Z, RSTST	;
313)   02E5 FE 59       		 CP 'Y'	;
314)   02E7 CC BA 05    		 CALL Z, RSTST2	;
315)   02EA FE 48       		 CP 'H'	;
316)   02EC CC C9 05    		 CALL Z, XMTST	;
317)   02EF FE 4A       		 CP 'J'	;
318)   02F1 CC 89 05    		 CALL Z, DNLOD	;
319)   02F4 FE 4B       		 CP 'K'	;
320)   02F6 CC EB 07    		 CALL Z,OS_COMMAND	;
321)   02F9 FE 43       		 CP 'C'	;
322)   02FB CC 24 05    		 CALL Z, OS_CLRSCR	;
323)   02FE FE 42       		 CP 'B'	;
324)   0300 CA 25 03    		 JP Z, GOTOBBCBASIC	;
325)   0303 FE 4D       		 CP 'M'	;
326)   0305 CA 82 03    		 JP Z,DOMAINMENU	;
327)   0308 FE 51       		 CP 'Q'	;
328)   030A CC 13 03    		 CALL Z, OS_SETTIME	;
329)   030D CD 9E 29    		 CALL SND_BEEP	;
330)   0310 C3 A3 02    		 JP MENU	;
335)   0313 21 A0 FE    		OS_SETTIME: LD HL,TIMMSG	;
336)   0316 06 14       		 LD B,20	;
337)   0318 CD F0 0D    		OSST_NXT: CALL RS_RX	;
338)   031B 77          		 LD (HL),A	;
339)   031C 23          		 INC HL	;
340)   031D 10 F9       		 DJNZ OSST_NXT	;
341)   031F 36 20       		 LD (HL),' '	;
342)   0321 CD D4 14    		 CALL DS1307_SETTIME	;
343)   0324 C9          		 RET	;
347)   0325 06 02       		@GOTOBBCBASIC: LD B,2	;
348)   0327 3E 02       		 LD A,2	;
349)   0329 CD 93 0D    		 CALL PUTPGINBANK	;
350)   032C 06 03       		 LD B,3	;
351)   032E 3E 03       		 LD A,3	;
352)   0330 CD 93 0D    		 CALL PUTPGINBANK	;
353)   0333 C3 00 40    		 JP BBCBASIC	;
356)   0336 43 4C 45 41 		MAINMENU DEFM "CLEAR SCREEN"	;
356)   033A 52 20 53 43 		MAINMENU DEFM "CLEAR SCREEN"	;
356)   033E 52 45 45 4E 		MAINMENU DEFM "CLEAR SCREEN"	;
357)   0342 00          		 DB 0	;
358)   0343 42 42 43 20 		 DEFM "BBC BASIC"	;
358)   0347 42 41 53 49 		 DEFM "BBC BASIC"	;
358)   034B 43          		 DEFM "BBC BASIC"	;
359)   034C 00          		 DB 0	;
360)   034D 43 4F 4D 4D 		 DEFM "COMMAND PROMPT"	;
360)   0351 41 4E 44 20 		 DEFM "COMMAND PROMPT"	;
360)   0355 50 52 4F 4D 		 DEFM "COMMAND PROMPT"	;
360)   0359 50 54       		 DEFM "COMMAND PROMPT"	;
361)   035B 00          		 DB 0	;
362)   035C 53 45 54 20 		 DEFM "SET SERIAL TO 115KBPS"	;
362)   0360 53 45 52 49 		 DEFM "SET SERIAL TO 115KBPS"	;
362)   0364 41 4C 20 54 		 DEFM "SET SERIAL TO 115KBPS"	;
362)   0368 4F 20 31 31 		 DEFM "SET SERIAL TO 115KBPS"	;
362)   036C 35 4B 42 50 		 DEFM "SET SERIAL TO 115KBPS"	;
362)   0370 53          		 DEFM "SET SERIAL TO 115KBPS"	;
363)   0371 00          		 DB 0	;
364)   0372 52 45 54 55 		 DEFM "RETURN TO MENU"	;
364)   0376 52 4E 20 54 		 DEFM "RETURN TO MENU"	;
364)   037A 4F 20 4D 45 		 DEFM "RETURN TO MENU"	;
364)   037E 4E 55       		 DEFM "RETURN TO MENU"	;
365)   0380 00 00       		 DB 0,0	;
368)   0382 3E 02       		 LD A,VGA_GREEN	;
369)   0384 06 0B       		 LD B,VGA_YELLOW	;
370)   0386 CD E2 19    		 CALL VGA_MIXCOLOR	;
371)   0389 32 76 FF    		 LD (MENUVCLR),A	;
372)   038C 21 3F 00    		 LD HL,COL_BLUE	;
373)   038F 22 77 FF    		 LD (MENULFORE),HL	;
374)   0392 21 FF FF    		 LD HL,COL_WHITE	;
375)   0395 22 79 FF    		 LD (MENULBACK),HL	;
377)   0398 21 36 03    		 LD HL,MAINMENU	;
378)   039B 11 08 08    		 LD DE,8.SHL.8+8  ;PRINT AT 8,8	;PRINT AT 8,8
379)   039E 3E 01       		 LD A,1   ;SELECT ITEM 1	;SELECT ITEM 1
380)   03A0 CD AE 2E    		 CALL CREATEMENU	;
381)   03A3 FE 01       		 CP 1    ;A THE MENU ITEM SELECTED	;A THE MENU ITEM SELECTED
382)   03A5 CC 24 05    		 CALL Z, OS_CLRSCR	;
383)   03A8 FE 02       		 CP 2	;
384)   03AA CA 25 03    		 JP Z, GOTOBBCBASIC	;
385)   03AD FE 03       		 CP 3	;
386)   03AF CC EB 07    		 CALL Z,OS_COMMAND	;
387)   03B2 FE 04       		 CP 4	;
388)   03B4 CC CC 01    		 CALL Z,SETHISPEED	;
389)   03B7 FE 05       		 CP 5	;
390)   03B9 CA A3 02    		 JP Z,MENU	;
391)   03BC 18 C4       		 JR DOMAINMENU	;
400)   03BE D5          		@GET_CHARNW: PUSH DE	;
401)   03BF CD B8 04    		 CALL OS_CHKCURS	;
402)   03C2 AF          		 XOR A	;
404)   03C3 CD 17 0E    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
405)   03C6 28 10       		 JR Z, CNW_TST2	;
406)   03C8 CD F0 0D    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
407)   03CB CD 19 04    		 CALL CHKFKEYS	;
408)   03CE FE 0D       		 CP 13        ;BEEP ON ENTER	;BEEP ON ENTER
409)   03D0 20 03       		 JR NZ,CNW_EX1	;
410)   03D2 CD 9E 29    		 CALL SND_BEEP	;
411)   03D5 D1          		CNW_EX1: POP DE 	;
412)   03D6 37          		 SCF	;
413)   03D7 C9          		 RET	;
415)   03D8 CD 68 0E    		CNW_TST2: CALL PS2ISK	;
416)   03DB 28 0E       		 JR Z, CNW_EXIT	;
417)   03DD CD 5C 0E    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)  	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
418)   03E0 CD 19 04    		 CALL CHKFKEYS	;
419)   03E3 FE 0D       		 CP 13        ;BEEP ON ENTER	;BEEP ON ENTER
420)   03E5 20 03       		 JR NZ,CNW_EX2	;
421)   03E7 CD 9E 29    		 CALL SND_BEEP  	;
422)   03EA 37          		CNW_EX2: SCF	;
423)   03EB D1          		CNW_EXIT: POP DE 	;
424)   03EC C9          		 RET	;
431)   03ED CD B8 04    		@GET_CHAR: CALL OS_CHKCURS	;
432)   03F0 AF          		 XOR A	;
434)   03F1 CD 17 0E    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
435)   03F4 28 0F       		 JR Z, CW_TST2	;
436)   03F6 CD F0 0D    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
437)   03F9 CD 19 04    		 CALL CHKFKEYS	;
438)   03FC FE 0D       		 CP 13        ;BEEP ON ENTER	;BEEP ON ENTER
439)   03FE 20 03       		 JR NZ,CW_EX1	;
440)   0400 CD 9E 29    		 CALL SND_BEEP	;
441)   0403 37          		CW_EX1: SCF	;
442)   0404 C9          		 RET	;
444)   0405 CD 68 0E    		CW_TST2: CALL PS2ISK      ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
446)   0408 28 E3       		 JR Z, GET_CHAR	;
447)   040A CD 5C 0E    		 CALL READCHAR	;
448)   040D CD 19 04    		 CALL CHKFKEYS	;
449)   0410 FE 0D       		 CP 13	;
450)   0412 20 03       		 JR NZ,CW_EX2	;
451)   0414 CD 9E 29    		 CALL SND_BEEP	;
452)   0417 37          		CW_EX2: SCF	;
453)   0418 C9          		 RET	;
455)   0419 FE A5       		CHKFKEYS: CP 165	;
456)   041B CC 2E 04    		 CALL Z,DOF5	;
457)   041E FE A6       		 CP 166	;
458)   0420 CC 35 04    		 CALL Z,DOF6	;
459)   0423 FE A7       		 CP 167	;
460)   0425 CC 3C 04    		 CALL Z,DOF7	;
461)   0428 FE A8       		 CP 168	;
462)   042A CC 43 04    		 CALL Z,DOF8	;
463)   042D C9          		 RET	;
466)   042E CD A5 29    		DOF5: CALL SND_BEEP2	;
467)   0431 AF          		 XOR A	;
468)   0432 C3 7C 17    		 JP VGA_SETLOWGR	;
470)   0435 CD A5 29    		DOF6: CALL SND_BEEP2	;
471)   0438 AF          		 XOR A	;
472)   0439 C3 87 17    		 JP VGA_SETLOWTX	;
474)   043C CD A5 29    		DOF7: CALL SND_BEEP2	;
475)   043F AF          		 XOR A	;
476)   0440 C3 92 17    		 JP VGA_SETHIGR	;
478)   0443 CD A5 29    		DOF8: CALL SND_BEEP2	;
479)   0446 AF          		 XOR A	;
480)   0447 C3 9D 17    		 JP VGA_SETHITX	;
485)   044A 7A          		@OS_GOTOXY: LD A, D	;
486)   044B 32 0D FE    		 LD (CURSORX), A	;
487)   044E 32 13 FF    		 LD (VGATX_X), A	;
488)   0451 7B          		 LD A, E	;
489)   0452 32 0E FE    		 LD (CURSORY), A	;
490)   0455 32 14 FF    		 LD (VGATX_Y), A	;
491)   0458 C9          		 RET	;
496)   0459 F5          		@OS_PRINTCHAR: PUSH AF	;
497)   045A 3A BB FE    		 LD A,(SCRNST)	;
498)   045D E6 01       		 AND 1	;
499)   045F 28 05       		 JR Z, OSPCNX	;
500)   0461 F1          		 POP AF	;
501)   0462 F5          		 PUSH AF	;
502)   0463 CD E3 20    		 CALL LCD_PRCH	;
503)   0466 D1          		OSPCNX: POP DE	;
504)   0467 3A BB FE    		 LD A,(SCRNST)	;
505)   046A E6 02       		 AND 2	;
506)   046C C8          		 RET Z	;
507)   046D D5          		 PUSH DE	;
508)   046E F1          		 POP AF    ;GET THE FLAGS BACK AND THE CHAR	;GET THE FLAGS BACK AND THE CHAR
509)   046F CD 6A 18    		 CALL VGA_PRCH	;
510)   0472 C9          		 RET	;
514)   0473 E5          		@OS_MSG: PUSH HL	;
515)   0474 3A BB FE    		 LD A,(SCRNST)	;
516)   0477 E6 01       		 AND 1	;
517)   0479 28 03       		 JR Z, OSMSNX	;
518)   047B CD CE 22    		 CALL LCD_MSG	;
519)   047E E1          		OSMSNX: POP HL	;
520)   047F 3A BB FE    		 LD A,(SCRNST)	;
521)   0482 E6 01       		 AND 1	;
522)   0484 28 F8       		 JR Z, OSMSNX	;
523)   0486 3A BB FE    		 LD A,(SCRNST)	;
524)   0489 E6 02       		 AND 2	;
525)   048B C8          		 RET Z	;
526)   048C CD C4 18    		 CALL VGA_PRINT	;
527)   048F C9          		 RET	;
529)   0490 3A BB FE    		@OS_PRNCURS: LD A,(SCRNST)	;
530)   0493 E6 01       		 AND 1	;
531)   0495 28 03       		 JR Z, OSPSNX	;
532)   0497 CD 4C 22    		 CALL LCD_PRNCURS	;
533)   049A 3A BB FE    		OSPSNX: LD A,(SCRNST)	;
534)   049D E6 02       		 AND 2	;
535)   049F C8          		 RET Z	;
536)   04A0 CD B1 1A    		 CALL VGA_PRNCURS	;
537)   04A3 C9          		 RET	;
539)   04A4 3A BB FE    		@OS_RMVCURS: LD A,(SCRNST)	;
540)   04A7 E6 01       		 AND 1	;
541)   04A9 28 03       		 JR Z, OSRCNX	;
542)   04AB CD 47 22    		 CALL LCD_RMVCURS	;
543)   04AE 3A BB FE    		OSRCNX: LD A,(SCRNST)	;
544)   04B1 E6 02       		 AND 2	;
545)   04B3 C8          		 RET Z	;
546)   04B4 CD 93 1A    		 CALL VGA_RMVCURS	;
547)   04B7 C9          		 RET	;
550)   04B8 F5          		@OS_CHKCURS: PUSH AF	;
551)   04B9 3A 11 FE    		 LD A, (CURSSTAT)	;
552)   04BC CB 57       		 BIT 2,A        ;BIT 2 FLAG FOR CURSOR OFF IF 1	;BIT 2 FLAG FOR CURSOR OFF IF 1
553)   04BE 20 27       		 JR NZ,CCTIM	;
554)   04C0 3A C1 FE    		 LD A, (TIMECTR)	;
555)   04C3 CB 67       		 BIT 4, A	;
556)   04C5 28 11       		 JR Z, CCSHOW        ;IF SET SHOW	;IF SET SHOW
557)   04C7 3A 11 FE    		CCHIDE: LD A, (CURSSTAT)	;
558)   04CA CB 4F       		 BIT 1, A	;
559)   04CC 20 1C       		 JR NZ, CCEX        ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
560)   04CE CB CF       		 SET 1, A	;
561)   04D0 32 11 FE    		 LD (CURSSTAT), A	;
562)   04D3 CD A4 04    		 CALL OS_RMVCURS	;
563)   04D6 18 12       		 JR CCEX	;
564)   04D8 3A 11 FE    		CCSHOW: LD A, (CURSSTAT)	;
565)   04DB CB 4F       		 BIT 1, A	;
566)   04DD 28 0B       		 JR Z, CCEX        ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
567)   04DF CB 8F       		 RES 1, A	;
568)   04E1 32 11 FE    		 LD (CURSSTAT), A	;
569)   04E4 CD 90 04    		 CALL OS_PRNCURS	;
570)   04E7 CD 0C 05    		CCTIM: CALL OS_SHOWTIME      ;TODO: MAYBE CALLED LESS OFTEN	;TODO: MAYBE CALLED LESS OFTEN
571)   04EA F1          		CCEX: POP AF	;
572)   04EB C9          		 RET	;
578)   04EC CB 27       		@OSSETTIME: SLA A	;
579)   04EE CB 27       		 SLA A	;
580)   04F0 CB 27       		 SLA A	;
581)   04F2 47          		 LD B,A	;
582)   04F3 3A 11 FE    		 LD A,(CURSSTAT)	;
583)   04F6 CB 9F       		 RES 3,A	;
584)   04F8 B0          		 OR B	;
585)   04F9 32 11 FE    		 LD (CURSSTAT),A	;
586)   04FC C9          		 RET 	;
592)   04FD CB 27       		@OSSETCURSOR: SLA A	;
593)   04FF CB 27       		 SLA A  	;
594)   0501 47          		 LD B,A	;
595)   0502 3A 11 FE    		 LD A,(CURSSTAT)	;
596)   0505 CB 97       		 RES 2,A	;
597)   0507 B0          		 OR B	;
598)   0508 32 11 FE    		 LD (CURSSTAT),A	;
599)   050B C9          		 RET 	;
603)   050C 3A 11 FE    		@OS_SHOWTIME: LD A, (CURSSTAT)	;
604)   050F CB 5F       		 BIT 3,A	;
605)   0511 C0          		 RET NZ	;
606)   0512 CD 9C 15    		 CALL DS1307_GETTIME	;
607)   0515 D8          		 RET C       ;ERROR RET  	;ERROR RET
609)   0516 16 00       		 LD D,0 ;COL	;COL
610)   0518 1E 01       		 LD E,1 ;ROW	;ROW
611)   051A CD F7 16    		 CALL LCD16_SETCURS	;
612)   051D 21 A1 FE    		 LD HL, TIMMSG+1      ;WE NEED 17 CHARS SO OMIT THE FIRST 	;WE NEED 17 CHARS SO OMIT THE FIRST
613)   0520 CD DC 16    		 CALL LCD16_PRINT	;
614)   0523 C9          		 RET	;
616)   0524 CD 8E 22    		@OS_CLRSCR: CALL LCD_CLRSCR	;
617)   0527 CD 5F 18    		 CALL VGA_CLRSCR	;
618)   052A C9          		 RET	;
622)   052B AF          		@OS_CLEARLINE: XOR A	;
623)   052C 32 0D FE    		 LD (CURSORX), A	;
624)   052F 32 13 FF    		 LD (VGATX_X), A 	;
625)   0532 3A 0E FE    		 LD A,(CURSORY)	;
626)   0535 CD F9 21    		 CALL LCD_CLRTXTLN	;
627)   0538 3A 14 FF    		 LD A, (VGATX_Y)	;
628)   053B CD 57 1E    		 CALL VGA_CLRTXTLN   	;
629)   053E C9          		 RET	;
633)   053F 7E          		@OS_PRINTTEXT: LD A,(HL)	;
634)   0540 FE 00       		 CP 0	;
635)   0542 C8          		 RET Z	;
636)   0543 E5          		 PUSH HL	;
637)   0544 CD 59 04    		 CALL OS_PRINTCHAR	;
638)   0547 E1          		 POP HL	;
639)   0548 23          		 INC HL	;
640)   0549 18 F4       		 JR OS_PRINTTEXT 	;
651)   054B 3E 05       		 LD A, 5	;
652)   054D CD 6F 2A    		 CALL SCPRN	;
654)   0550 2A BE FE    		 LD HL, (PRGEX)	;
661)   0553 E9          		 JP (HL)	;
668)   0554 F3          		UPLOD: DI	;
673)   0555 CD F0 0D    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
674)   0558 6F          		 LD L, A	;
675)   0559 CD F0 0D    		 CALL RS_RX	;
676)   055C 67          		 LD H, A	;
677)   055D CD F0 0D    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
678)   0560 4F          		 LD C, A	;
679)   0561 CD F0 0D    		 CALL RS_RX	;
680)   0564 47          		 LD B, A	;
682)   0565 22 BE FE    		 LD (PRGEX), HL	;
683)   0568 3A BF FE    		 LD A, (PRGEX + 1)	;
691)   056B FE 80       		 CP $80	;
692)   056D DC 06 06    		 CALL C, EPROMON       ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
694)   0570 E5          		NORWR: PUSH HL	;
695)   0571 CD F0 0D    		NXB: CALL RS_RX	;
696)   0574 77          		 LD (HL), A	;
697)   0575 23          		 INC HL	;
698)   0576 0B          		 DEC BC	;
699)   0577 78          		 LD A, B	;
700)   0578 B1          		 OR C	;
701)   0579 20 F6       		 JR NZ, NXB       ;LOOP ALL BYTES	;LOOP ALL BYTES
702)   057B CD FE 05    		 CALL EPROMOFF	;
707)   057E 3E 05       		 LD A, 5	;
708)   0580 CD 6F 2A    		 CALL SCPRN	;
709)   0583 CD 7C 2A    		 CALL DELAY	;
711)   0586 E1          		 POP HL	;
714)   0587 FB          		 EI	;
715)   0588 C9          		 RET	;
726)   0589 CD F0 0D    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
727)   058C 6F          		 LD L, A	;
728)   058D CD F0 0D    		 CALL RS_RX	;
729)   0590 67          		 LD H, A	;
730)   0591 CD F0 0D    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
731)   0594 4F          		 LD C, A	;
732)   0595 CD F0 0D    		 CALL RS_RX	;
733)   0598 47          		 LD B, A	;
735)   0599 7E          		NXB3: LD A, (HL)	;
736)   059A CD D7 0D    		 CALL RS_TX       ;SEND BYTE	;SEND BYTE
737)   059D 23          		 INC HL	;
738)   059E 0B          		 DEC BC	;
739)   059F 78          		 LD A, B	;
740)   05A0 B1          		 OR C	;
741)   05A1 20 F6       		 JR NZ, NXB3       ;LOOP ALL BYTES	;LOOP ALL BYTES
742)   05A3 C9          		 RET	;
744)   05A4 00          		RSTST: NOP        ;GET A KEY FROM RS232	;GET A KEY FROM RS232
745)   05A5 06 0A       		 LD B, 10	;
746)   05A7 C5          		TEN: PUSH BC	;
747)   05A8 CD F0 0D    		 CALL RS_RX	;
749)   05AB CD D7 0D    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
751)   05AE 3E 20       		 LD A, ' '	;
753)   05B0 3E 52       		 LD A, 'R'	;
756)   05B2 CD 89 2A    		 CALL DEL2	;
758)   05B5 C1          		 POP BC	;
759)   05B6 10 EF       		 DJNZ TEN	;
761)   05B8 AF          		 XOR A	;
762)   05B9 C9          		 RET	;
764)   05BA 00          		RSTST2: NOP        ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
765)   05BB 06 FF       		 LD B, 255	;
766)   05BD C5          		TEN2: PUSH BC	;
767)   05BE CD F0 0D    		 CALL RS_RX	;
769)   05C1 CD D7 0D    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
771)   05C4 C1          		 POP BC	;
772)   05C5 10 F6       		 DJNZ TEN2	;
773)   05C7 AF          		 XOR A	;
774)   05C8 C9          		 RET	;
777)   05C9 00          		XMTST: NOP        ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
778)   05CA 06 FF       		 LD B, 255	;
779)   05CC C5          		TEN3: PUSH BC	;
780)   05CD 78          		 LD A, B	;
781)   05CE CD D7 0D    		 CALL RS_TX       ;SEND  THE BYTE	;SEND  THE BYTE
782)   05D1 C1          		 POP BC	;
783)   05D2 10 F8       		 DJNZ TEN3	;
784)   05D4 AF          		 XOR A	;
785)   05D5 C9          		 RET	;
791)   05D6 AF          		 XOR A	;
792)   05D7 32 B6 FE    		 LD (FFSTAT), A	;
793)   05DA C9          		 RET	;
796)   05DB 04          		@FF_OFF: INC B        ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
797)   05DC AF          		 XOR A	;
798)   05DD 37          		 SCF	;
799)   05DE 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
800)   05DF 10 FD       		 DJNZ SBAGN	;
801)   05E1 2F          		 CPL         ;INVERSE BITS ON A	;INVERSE BITS ON A
802)   05E2 47          		 LD B, A	;
803)   05E3 3A B6 FE    		 LD A, (FFSTAT)	;
804)   05E6 A0          		 AND B         ;ZERO THE BIT	;ZERO THE BIT
805)   05E7 32 B6 FE    		 LD (FFSTAT), A	;
806)   05EA D3 08       		 OUT (DEVFFS), A	;
807)   05EC C9          		 RET	;
810)   05ED 04          		@FF_ON: INC B         ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
811)   05EE AF          		 XOR A	;
812)   05EF 37          		 SCF	;
813)   05F0 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
814)   05F1 10 FD       		 DJNZ SBAGN	;
815)   05F3 47          		 LD B, A	;
816)   05F4 3A B6 FE    		 LD A, (FFSTAT)	;
817)   05F7 B0          		 OR B         ;SET THE BIT	;SET THE BIT
818)   05F8 32 B6 FE    		 LD (FFSTAT), A	;
819)   05FB D3 08       		 OUT (DEVFFS), A	;
820)   05FD C9          		 RET	;
822)   05FE C5          		@EPROMOFF: PUSH BC	;
823)   05FF 06 00       		 LD B, 0	;
824)   0601 CD DB 05    		 CALL FF_OFF	;
825)   0604 C1          		 POP BC	;
826)   0605 C9          		 RET	;
828)   0606 C5          		@EPROMON: PUSH BC	;
829)   0607 06 00       		 LD B, 0	;
830)   0609 CD ED 05    		 CALL FF_ON	;
831)   060C C1          		 POP BC	;
832)   060D C9          		 RET	;
838)   060E F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
839)   060F 26 00       		 LD H, 0	;
840)   0611 6F          		 LD L, A	;
841)   0612 11 C6 FE    		 LD DE, MYNUM	;
842)   0615 CD A3 2A    		 CALL OUTASC	;
844)   0618 3E 0A       		 LD A, 10	;
845)   061A 12          		 LD (DE), A	;
846)   061B 13          		 INC DE	;
847)   061C 3E 0D       		 LD A, 13	;
848)   061E 12          		 LD (DE), A	;
849)   061F 13          		 INC DE	;
850)   0620 AF          		 XOR A	;
851)   0621 12          		 LD (DE), A	;
853)   0622 21 C6 FE    		 LD HL, MYNUM	;
854)   0625 CD E6 0D    		 CALL RS_TXT	;
855)   0628 F1          		 POP AF	;
856)   0629 C9          		 RET	;
863)   062A 55 3A 55 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   062E 20 4A 3A 44 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   0632 4E 20 58 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   0636 52 55 4E 20 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   063A 43 3A 43 4C 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   063E 53 20 42 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   0642 42 41 53 49 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   0646 43 20 4B 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   064A 43 4D 44 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   064E 52 4D 54 20 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   0652 4D 3A 4D 45 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
863)   0656 4E 55       		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
864)   0658 00          		 DB 0	;
866)   0659 0A 0D       		STRMN: DB 10,13	;
868)   065B 55 3A 55 50 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   065F 4C 4F 41 44 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   0663 20 4A 3A 44 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   0667 4F 57 4E 4C 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   066B 44 20 53 3A 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   066F 31 31 35 4B 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   0673 42 50 53 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   0677 58 3A 52 55 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   067B 4E 20 43 3A 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   067F 43 4C 53 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   0683 42 3A 42 41 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   0687 53 49 43 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   068B 4B 3A 43 4D 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   068F 44 20 50 52 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   0693 4F 4D 50 54 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   0697 20 4D 3A 4D 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
868)   069B 45 4E 55    		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
869)   069E 0A 0D 00    		 DB 10,13,0	;
872)   06A1 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
872)   06A5 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
872)   06A9 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
872)   06AD 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
873)   06B0 00          		 DB 0	;
875)   06B1 52 53 32 33 		STR1: DEFM "RS232 INIT"	;
875)   06B5 32 20 49 4E 		STR1: DEFM "RS232 INIT"	;
875)   06B9 49 54       		STR1: DEFM "RS232 INIT"	;
876)   06BB 00          		 DB 0	;
878)   06BC 50 52 4F 47 		STR2: DEFM "PROGRAM HALTED"	;
878)   06C0 52 41 4D 20 		STR2: DEFM "PROGRAM HALTED"	;
878)   06C4 48 41 4C 54 		STR2: DEFM "PROGRAM HALTED"	;
878)   06C8 45 44       		STR2: DEFM "PROGRAM HALTED"	;
879)   06CA 00          		 DB 0	;
881)   06CB 57 41 49 54 		STR02: DEFM "WAITING..."	;
881)   06CF 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
881)   06D3 2E 2E       		STR02: DEFM "WAITING..."	;
882)   06D5 00          		 DB 0	;
884)   06D6 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
884)   06DA 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
884)   06DE 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
884)   06E2 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
885)   06E4 00          		 DB 0	;
887)   06E5 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
887)   06E9 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
887)   06ED 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
888)   06F1 00          		 DB 0	;
890)   06F2 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
890)   06F6 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
890)   06FA 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
891)   06FD 00          		 DB 0	;
893)   06FE 49 4D 41 47 		STIMG: DEFM "IMAGE COPY"	;
893)   0702 45 20 43 4F 		STIMG: DEFM "IMAGE COPY"	;
893)   0706 50 59       		STIMG: DEFM "IMAGE COPY"	;
894)   0708 00          		 DB 0	;
896)   0709 53 43 52 45 		TXTMES: DEFM "SCREEN READY"	;
896)   070D 45 4E 20 52 		TXTMES: DEFM "SCREEN READY"	;
896)   0711 45 41 44 59 		TXTMES: DEFM "SCREEN READY"	;
897)   0715 00          		 DB 0	;
899)   0716 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
899)   071A 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
899)   071E 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
899)   0722 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
900)   0726 0A 0D 00    		 DB 10,13,0	;
902)   0729 0A 0D       		STR00: DB 10,13	;
903)   072B 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
903)   072F 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
903)   0733 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
903)   0737 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
903)   073B 44          		 DEFM "RS232 INITIALIZED"	;
904)   073C 0A 0D 00    		 DB 10,13,0	;
906)   073F 0A 0D       		STR01: DB 10,13	;
907)   0741 57 41 49 54 		 DEFM "WAITING..."	;
907)   0745 49 4E 47 2E 		 DEFM "WAITING..."	;
907)   0749 2E 2E       		 DEFM "WAITING..."	;
908)   074B 0A 0D 00    		 DB 10,13,0	;
909)   074E 00          		 DB 0	;
911)   074F 0A 0D       		STR06: DB 10,13	;
912)   0751 4B 45 59 20 		 DEFM "KEY PRESSED"	;
912)   0755 50 52 45 53 		 DEFM "KEY PRESSED"	;
912)   0759 53 45 44    		 DEFM "KEY PRESSED"	;
913)   075C 0A 0D 00    		 DB 10,13,0	;
914)   075F 00          		 DB 0	;
916)   0760 0A 0D       		STR001: DB 10,13	;
917)   0762 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
917)   0766 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
917)   076A 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
917)   076E 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
917)   0772 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
918)   0775 0A 0D 00    		 DB 10,13,0	;
920)   0778 41 54 4C 41 		SVER: DEFM "ATLAS OS VER"	;
920)   077C 53 20 4F 53 		SVER: DEFM "ATLAS OS VER"	;
920)   0780 20 56 45 52 		SVER: DEFM "ATLAS OS VER"	;
921)   0784 30          		 DEFB MJVER	;
922)   0785 2E          		 DEFB '.'	;
923)   0786 34 39       		 DEFB MNVER1,MNVER2	;
924)   0788 00          		 DEFB 0	;
926)   0789 41 54 4C 41 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
926)   078D 53 20 4D 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
926)   0791 64 75 6C 61 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
926)   0795 72 20 5A 38 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
926)   0799 30 20 43 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
926)   079D 6D 70 75 74 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
926)   07A1 65 72       		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
927)   07A3 0A 0D       		 DEFB 0AH,0DH	;
928)   07A5 4F 70 65 72 		 DEFM "Operating System Version "  	;
928)   07A9 61 74 69 6E 		 DEFM "Operating System Version "  	;
928)   07AD 67 20 53 79 		 DEFM "Operating System Version "  	;
928)   07B1 73 74 65 6D 		 DEFM "Operating System Version "  	;
928)   07B5 20 56 65 72 		 DEFM "Operating System Version "  	;
928)   07B9 73 69 6F 6E 		 DEFM "Operating System Version "  	;
928)   07BD 20          		 DEFM "Operating System Version "  	;
929)   07BE 30          		 DEFB MJVER	;
930)   07BF 2E          		 DEFB '.'	;
931)   07C0 34 39       		 DEFB MNVER1,MNVER2	;
932)   07C2 0A 0D       		 DEFB 0AH,0DH	;
933)   07C4 43 44 65 73 		 DEFM "CDesp 2020-22"	;
933)   07C8 70 20 32 30 		 DEFM "CDesp 2020-22"	;
933)   07CC 32 30 2D 32 		 DEFM "CDesp 2020-22"	;
933)   07D0 32          		 DEFM "CDesp 2020-22"	;
934)   07D1 0A 0D       		 DEFB 0AH,0DH    	;
935)   07D3 52 41 4D 3A 		 DEFM "RAM: 4000h,TOP: FA00h"	;
935)   07D7 20 34 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
935)   07DB 30 68 2C 54 		 DEFM "RAM: 4000h,TOP: FA00h"	;
935)   07DF 4F 50 3A 20 		 DEFM "RAM: 4000h,TOP: FA00h"	;
935)   07E3 46 41 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
935)   07E7 68          		 DEFM "RAM: 4000h,TOP: FA00h"	;
936)   07E8 0A 0D       		 DEFB 0AH,0DH	;
937)   07EA 00          		 DEFB 00H	;
 11)   07EB 3E 0F       		@OS_COMMAND:   LD A, VGA_WHITE	;
 12)   07ED 32 11 FF    		 LD (VGAFCOL), A	;
 13)   07F0 3E 04       		 LD A, VGA_NAVY	;
 14)   07F2 32 12 FF    		 LD (VGABCOL), A	;
 15)   07F5 21 FB 07    		 LD HL,OS_CMDGET	;
 16)   07F8 22 43 FF    		 LD (COMDGET),HL	;
 19)   07FB 3A 0D FE    		OS_CMDGET:     LD A,(CURSORX)	;
 20)   07FE 67          		               LD H,A	;
 21)   07FF 3A 0E FE    		               LD A,(CURSORY)	;
 22)   0802 84          		               ADD H	;
 23)   0803 FE 00       		               CP 0	;
 24)   0805 28 0C       		               JR Z,CGSKP	;
 25)   0807 3E 0D       		               LD A,CR	;
 26)   0809 CD 59 04    		               CALL OS_PRINTCHAR	;
 27)   080C AF          		               XOR A	;
 28)   080D 32 0D FE    		 LD (CURSORX), A	;
 29)   0810 32 13 FF    		 LD (VGATX_X), A	;
 30)   0813 CD 2B 05    		CGSKP:         CALL OS_CLEARLINE	;
 31)   0816 3E 23       		 LD A,'#'        ;PROMPT	;PROMPT
 32)   0818 CD 59 04    		               CALL OS_PRINTCHAR	;
 34)   081B 21 1B FF    		               LD HL,COMDBUF	;
 35)   081E E5          		CGNXCHAR:      PUSH HL	;
 36)   081F CD ED 03    		               CALL GET_CHAR	;
 37)   0822 E1          		               POP HL	;
 38)   0823 FE 00       		               CP 0	;
 39)   0825 28 F7       		               JR Z,CGNXCHAR 	;
 40)   0827 FE 20       		               CP 32	;
 41)   0829 30 21       		               JR NC,CGSVCHAR	;
 43)   082B FE 06       		               CP 6                    ;BACKSPACE	;BACKSPACE
 44)   082D 20 17       		               JR NZ,CGTSTCH1                	;
 46)   082F 2B          		               DEC HL                	;
 47)   0830 3A 13 FF    		               LD A,(VGATX_X)	;
 48)   0833 FE 01       		               CP 1                  ;CHECK START OF LINE  	;CHECK START OF LINE
 49)   0835 20 05       		               JR NZ,CGBS	;
 50)   0837 21 1B FF    		               LD HL,COMDBUF           ;WE AR AT START	;WE AR AT START
 51)   083A 18 E2       		               JR CGNXCHAR	;
 53)   083C 3E 08       		CGBS:          LD A,8	;
 54)   083E CD 53 08    		               CALL CGDOPRNCH	;
 55)   0841 3E 00       		               LD A,0	;
 56)   0843 77          		               LD (HL),A	;
 57)   0844 18 D8       		               JR CGNXCHAR	;
 58)   0846 FE 0D       		CGTSTCH1:      CP CR                   ;ENTER	;ENTER
 59)   0848 28 12       		               JR Z,CGDOCMD            ;EXECUTE THE COMMAND	;EXECUTE THE COMMAND
 60)   084A 18 D2       		               JR CGNXCHAR             ;NO MORE TESTING NO PRINATBLE CHARS	;NO MORE TESTING NO PRINATBLE CHARS
 61)   084C CD 53 08    		CGSVCHAR:      CALL CGDOPRNCH          ;SAVE CHAR TO BUFFER	;SAVE CHAR TO BUFFER
 62)   084F 77          		               LD (HL),A	;
 63)   0850 23          		               INC HL	;
 64)   0851 18 CB       		               JR CGNXCHAR	;
 65)   0853 E5          		CGDOPRNCH:     PUSH HL	;
 66)   0854 F5          		               PUSH AF	;
 67)   0855 37          		 SCF	;
 68)   0856 CD 59 04    		               CALL OS_PRINTCHAR	;
 69)   0859 F1          		               POP AF	;
 70)   085A E1          		               POP HL	;
 71)   085B C9          		               RET	;
 72)   085C E5          		@CGDOCMD:      PUSH HL	;
 73)   085D F5          		               PUSH AF	;
 74)   085E CD A4 04    		               CALL OS_RMVCURS         ;REMOVE CURSOR	;REMOVE CURSOR
 75)   0861 F1          		               POP AF	;
 76)   0862 E1          		               POP HL	;
 77)   0863 CD 53 08    		 CALL CGDOPRNCH	;
 78)   0866 AF          		               XOR A	;
 79)   0867 77          		               LD (HL),A	;
 80)   0868 21 1B FF    		               LD HL,COMDBUF	;
 87)   086B CD C7 08    		 CALL SKIPSP	;
 88)   086E FE 0D       		 CP CR	;
 89)   0870 C8          		 RET Z	;
 90)   0871 FE 7C       		 CP '|'	;
 91)   0873 C8          		 RET Z	;
 94)   0874 EB          		 EX DE, HL	;
 95)   0875 21 D6 08    		 LD HL, COMDS	;
 96)   0878 1A          		OSCLI0: LD A, (DE)	;
 97)   0879 CD CE 08    		 CALL UPPRC	;
 98)   087C BE          		 CP (HL)	;
 99)   087D 28 0B       		 JR Z, OSCLI2	;
100)   087F 38 31       		 JR C, HUH	;
101)   0881 CB 7E       		OSCLI1: BIT 7, (HL)	;
102)   0883 23          		 INC HL	;
103)   0884 28 FB       		 JR Z, OSCLI1	;
104)   0886 23          		 INC HL	;
105)   0887 23          		 INC HL	;
106)   0888 18 EE       		 JR OSCLI0	;
108)   088A D5          		OSCLI2: PUSH DE	;
109)   088B 13          		OSCLI3: INC DE	;
110)   088C 23          		 INC HL	;
111)   088D 1A          		 LD A, (DE)	;
112)   088E CD CE 08    		 CALL UPPRC	;
113)   0891 FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
114)   0893 28 0A       		 JR Z, OSCLI4	;
115)   0895 AE          		 XOR (HL)	;
116)   0896 28 F3       		 JR Z, OSCLI3	;
117)   0898 FE 80       		 CP 80H	;
118)   089A 28 03       		 JR Z, OSCLI4	;
119)   089C D1          		 POP DE	;
120)   089D 18 E2       		 JR OSCLI1	;
122)   089F F1          		OSCLI4: POP AF	;
123)   08A0 13          		 INC DE	;
124)   08A1 CB 7E       		OSCLI5: BIT 7, (HL)	;
125)   08A3 23          		 INC HL	;
126)   08A4 28 FB       		 JR Z, OSCLI5	;
127)   08A6 7E          		 LD A, (HL)	;
128)   08A7 23          		 INC HL	;
129)   08A8 66          		 LD H, (HL)	;
130)   08A9 6F          		 LD L, A	;
131)   08AA E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
132)   08AB EB          		 EX DE, HL	;
133)   08AC E5          		 PUSH HL	;
134)   08AD FD E1       		 POP IY	;
135)   08AF C3 C7 08    		 JP SKIPSP	;
137)   08B2 3E FE       		HUH: LD A, 254        	;
138)   08B4 CD 16 0A    		 CALL OSERROR	;
139)   08B7 4F 53 20 42 		 DEFM 'OS Bad command'	;
139)   08BB 61 64 20 63 		 DEFM 'OS Bad command'	;
139)   08BF 6F 6D 6D 61 		 DEFM 'OS Bad command'	;
139)   08C3 6E 64       		 DEFM 'OS Bad command'	;
140)   08C5 0D 00       		 DEFB    13,0	;
142)   08C7 7E          		SKIPSP: LD A, (HL)	;
143)   08C8 FE 20       		 CP ' '	;
144)   08CA C0          		 RET NZ	;
145)   08CB 23          		 INC HL	;
146)   08CC 18 F9       		 JR SKIPSP	;
148)   08CE E6 7F       		UPPRC: AND 7FH	;
149)   08D0 FE 60       		 CP '`'	;
150)   08D2 D8          		 RET C	;
151)   08D3 E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
152)   08D5 C9          		 RET	;
156)   08D6 42 59       		COMDS: DEFM  "BY"	;
157)   08D8 C5          		 DEFB    'E'+80H	;
158)   08D9 37 0A       		 DEFW BYE	;
159)   08DB 43          		 DEFM  "C"	;
160)   08DC C4          		 DEFB    'D'+80H	;
161)   08DD F8 0A       		 DEFW DRV_CD	;
162)   08DF 43 4C       		               DEFM "CL"	;
163)   08E1 D3          		               DEFB 'S'+80H	;
164)   08E2 3A 0A       		               DEFW DOCLS	;
165)   08E4 43 55 52 53 		               DEFM "CURSO"	;
165)   08E8 4F          		               DEFM "CURSO"	;
166)   08E9 D2          		               DEFB 'R'+80H	;
167)   08EA C5 0C       		               DEFW SETCURSOR	;
168)   08EC 44 49       		 DEFM "DI"	;
169)   08EE D2          		 DEFB 'R'+80H	;
170)   08EF E2 0A       		 DEFW DRV_DIR	;
171)   08F1 45 58 45    		               DEFM "EXE"	;
172)   08F4 C3          		               DEFB 'C'+80H	;
173)   08F5 79 0A       		               DEFW DOEXEC	;
174)   08F7 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
174)   08FB 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
174)   08FF 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
175)   0902 C6          		 DEFB 'F'+80H	;
176)   0903 D1 0B       		 DEFW LCD_BLINKOF	;
177)   0905 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
177)   0909 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
177)   090D 4B 4F       		 DEFM  "LCD_BLINKO"	;
178)   090F CE          		 DEFB 'N'+80H	;
179)   0910 D7 0B       		 DEFW LCD_BLINKON	;
180)   0912 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
180)   0916 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
181)   091A D2          		 DEFB 'R'+80H	;
182)   091B DD 0B       		 DEFW LCD_CLR	;
183)   091D 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
183)   0921 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
183)   0925 4F 52 41    		 DEFM  "LCD_CURSORA"	;
184)   0928 D4          		 DEFB 'T'+80H	;
185)   0929 E3 0B       		 DEFW LCD_CURSAT	;
186)   092B 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
186)   092F 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
186)   0933 4F 46       		 DEFM  "LCD_CURSOF"	;
187)   0935 C6          		 DEFB 'F'+80H	;
188)   0936 00 0C       		 DEFW LCD_CURSOF	;
189)   0938 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
189)   093C 43 55 52 53 		 DEFM  "LCD_CURSO"	;
189)   0940 4F          		 DEFM  "LCD_CURSO"	;
190)   0941 CE          		 DEFB 'N'+80H	;
191)   0942 06 0C       		 DEFW LCD_CURSON	;
192)   0944 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
192)   0948 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
192)   094C 4F 46       		 DEFM  "LCD_DISPOF"	;
193)   094E C6          		 DEFB 'F'+80H	;
194)   094F 0C 0C       		 DEFW LCD_DISPOF	;
195)   0951 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
195)   0955 44 49 53 50 		 DEFM  "LCD_DISPO"	;
195)   0959 4F          		 DEFM  "LCD_DISPO"	;
196)   095A CE          		 DEFB 'N'+80H	;
197)   095B 12 0C       		 DEFW LCD_DISPON	;
198)   095D 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
198)   0961 48 4F 4D    		 DEFM  "LCD_HOM"	;
199)   0964 C5          		 DEFB 'E'+80H	;
200)   0965 EA 16       		 DEFW LCD16_HOME	;
201)   0967 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
201)   096B 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
201)   096F 45 46       		 DEFM  "LCD_MOVLEF"	;
202)   0971 D4          		 DEFB 'T'+80H	;
203)   0972 1E 0C       		 DEFW LCD_MOVLFT	;
204)   0974 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
204)   0978 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
204)   097C 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
205)   097F D4          		 DEFB 'T'+80H	;
206)   0980 24 0C       		 DEFW LCD_MOVRGT	;
207)   0982 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
207)   0986 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
208)   098A D4          		 DEFB 'T'+80H	;
209)   098B 2A 0C       		 DEFW LCD_PRN	;
210)   098D 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
210)   0991 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
210)   0995 45 46       		 DEFM  "LCD_SCRLEF"	;
211)   0997 D4          		 DEFB 'T'+80H	;
212)   0998 33 0C       		 DEFW LCD_SCRLFT	;
213)   099A 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
213)   099E 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
213)   09A2 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
214)   09A5 D4          		 DEFB 'T'+80H	;
215)   09A6 39 0C       		 DEFW LCD_SCRRGT	;
216)   09A8 4C 43 44 54 		 DEFM  "LCDTIM"	;
216)   09AC 49 4D       		 DEFM  "LCDTIM"	;
217)   09AE C5          		 DEFB 'E'+80H	;
218)   09AF E3 0C       		 DEFW LCDSHOWTIME	;
219)   09B1 50 57       		 DEFM  "PW"	;
220)   09B3 C4          		 DEFB    'D'+80H	;
221)   09B4 34 0A       		 DEFW NIMP	;
222)   09B6 52 45 53 45 		 DEFM  "RESE"	;
223)   09BA D4          		 DEFB    'T'+80H	;
224)   09BB 40 0A       		 DEFW DORESET	;
225)   09BD 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
225)   09C1 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
225)   09C5 53          		 DEFM  "RTC_ADJUS"	;
226)   09C6 D4          		 DEFB    'T'+80H                	;
227)   09C7 26 0B       		 DEFW RTC_ADJUST	;
228)   09C9 52 54 43 5F 		 DEFM  "RTC_GE"	;
228)   09CD 47 45       		 DEFM  "RTC_GE"	;
229)   09CF D4          		 DEFB    'T'+80H	;
230)   09D0 54 0B       		 DEFW RTC_GET	;
231)   09D2 53 45 54 44 		 DEFM "SETDATETIM"	;
231)   09D6 41 54 45 54 		 DEFM "SETDATETIM"	;
231)   09DA 49 4D       		 DEFM "SETDATETIM"	;
232)   09DC C5          		 DEFB    'E'+80H	;
233)   09DD C0 0B       		 DEFW DSSETDATETIME	;
234)   09DF 53 45 54 44 		 DEFM "SETDAT"	;
234)   09E3 41 54       		 DEFM "SETDAT"	;
235)   09E5 C5          		 DEFB    'E'+80H	;
236)   09E6 68 0B       		 DEFW DSSETDATE	;
237)   09E8 53 45 54 4C 		 DEFM "SETLC"	;
237)   09EC 43          		 DEFM "SETLC"	;
238)   09ED C4          		 DEFB    'D'+80H	;
239)   09EE 64 0C       		 DEFW SETLCD	;
240)   09F0 53 45 54 54 		 DEFM "SETTIM"	;
240)   09F4 49 4D       		 DEFM "SETTIM"	;
241)   09F6 C5          		 DEFB    'E'+80H	;
242)   09F7 94 0B       		 DEFW DSSETTIME	;
243)   09F9 53 45 54 56 		 DEFM "SETVG"	;
243)   09FD 47          		 DEFM "SETVG"	;
244)   09FE C1          		 DEFB    'A'+80H	;
245)   09FF 3F 0C       		 DEFW SETVGA	;
246)   0A01 54 59 50    		 DEFM  "TYP"	;
247)   0A04 C5          		 DEFB    'E'+80H	;
248)   0A05 03 0B       		 DEFW DRV_TYPFILE	;
249)   0A07 56 47 41 4D 		 DEFM  "VGAMOD"	;
249)   0A0B 4F 44       		 DEFM  "VGAMOD"	;
250)   0A0D C5          		 DEFB    'E'+80H	;
251)   0A0E 89 0C       		 DEFW SETVGAMODE	;
254)   0A10 FF          		 DEFB 0FFH	;
262)   0A11 2A 43 FF    		OSCMDFIN:      LD HL,(COMDGET)	;
263)   0A14 E5          		 PUSH HL	;
264)   0A15 C9          		 RET  ;GOTO COMDGET	;GOTO COMDGET
266)   0A16 E1          		OSERROR:       POP HL	;
267)   0A17 CD 3F 05    		               CALL OS_PRINTTEXT	;
268)   0A1A C3 11 0A    		               JP OSCMDFIN	;
270)   0A1D CD 16 0A    		SNTX_ERROR: CALL OSERROR	;
271)   0A20 4F 53 20 43 		 DEFM  "OS CMD Syntax error"	;
271)   0A24 4D 44 20 53 		 DEFM  "OS CMD Syntax error"	;
271)   0A28 79 6E 74 61 		 DEFM  "OS CMD Syntax error"	;
271)   0A2C 78 20 65 72 		 DEFM  "OS CMD Syntax error"	;
271)   0A30 72 6F 72    		 DEFM  "OS CMD Syntax error"	;
272)   0A33 00          		 DEFB    0	;
274)   0A34 C3 11 0A    		NIMP           JP OSCMDFIN	;
276)   0A37 C3 A3 02    		BYE: JP MENU	;
278)   0A3A CD 24 05    		DOCLS:         CALL OS_CLRSCR	;
279)   0A3D C3 11 0A    		               JP OSCMDFIN	;
282)   0A40 C3 00 00    		DORESET: JP 0	;
285)   0A43 CD 16 0A    		HEXERROR:      CALL OSERROR	;
286)   0A46 4E 4F 54 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A4A 41 20 56 41 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A4E 4C 49 44 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A52 48 45 58 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A56 41 44 44 52 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0A5A 45 53 53    		               DEFM "NOT A VALID HEX ADDRESS"	;
287)   0A5D 00          		               DEFB 0	;
291)   0A5E 7E          		PRSADDR:       LD A,(HL)	;
292)   0A5F FE 00       		               CP 0	;
293)   0A61 28 14       		               JR Z,PSADEX	;
294)   0A63 FE 2E       		               CP '.'	;
295)   0A65 28 03       		               JR Z,PSADGTIT	;
296)   0A67 23          		               INC HL	;
297)   0A68 18 F4       		               JR PRSADDR	;
300)   0A6A 23          		PSADGTIT:      INC HL	;
301)   0A6B CD 0C 2C    		               CALL IsStrHex   ;CHECK IF VALID HEX	;CHECK IF VALID HEX
302)   0A6E 20 D3       		               JR NZ,HEXERROR	;
304)   0A70 CD 5C 2C    		               CALL Read16bit	;
305)   0A73 60          		               LD H,B	;
306)   0A74 69          		               LD L,C	;
307)   0A75 AF          		               XOR A           ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
308)   0A76 C9          		               RET	;
309)   0A77 37          		PSADEX:        SCF             ;SET CARRY FLAG ON ERROR	;SET CARRY FLAG ON ERROR
310)   0A78 C9          		               RET                	;
314)   0A79 CD EA 0A    		DOEXEC:        CALL DRV_GETFNPRM	;
315)   0A7C 2B          		               DEC HL	;
316)   0A7D 2B          		               DEC HL	;
317)   0A7E 2B          		               DEC HL	;
318)   0A7F 2B          		               DEC HL	;
319)   0A80 2B          		               DEC HL	;
320)   0A81 CD 5E 0A    		               CALL PRSADDR	;
321)   0A84 DA 11 0A    		               JP C,OSCMDFIN           ;ERROR ON PARSING HEX ADDRESS	;ERROR ON PARSING HEX ADDRESS
322)   0A87 E5          		               PUSH HL                 ;SAVE HEX ADDR	;SAVE HEX ADDR
323)   0A88 CD C2 11    		 CALL STRG_OPNFILE	;
324)   0A8B E1          		               POP HL	;
325)   0A8C 38 43       		 JR C, DRV_ERROR         ;ERROR ON FILE OPENING	;ERROR ON FILE OPENING
326)   0A8E E5          		               PUSH HL                 ;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN	;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN
327)   0A8F 54          		               LD D,H	;
328)   0A90 5D          		               LD E,L	;
329)   0A91 01 00 00    		               LD BC,0                 ;LOAD ALL BYTES	;LOAD ALL BYTES
330)   0A94 CD 16 12    		               CALL STRG_BLKREAD	;
331)   0A97 3A FF FE    		 LD A, (FID)	;
332)   0A9A CD E1 11    		 CALL STRG_CLSFILE       ;CLOSE FILE	;CLOSE FILE
333)   0A9D C9          		               RET                     ;EXECUTE CODE AT HEX ADDR	;EXECUTE CODE AT HEX ADDR
340)   0A9E FD E5       		PARSCMD:       PUSH IY	;
341)   0AA0 E1          		               POP HL	;
342)   0AA1 CD C7 08    		               CALL SKIPSP	;
343)   0AA4 E5          		               PUSH HL	;
344)   0AA5 1E 00       		               LD E,0	;
345)   0AA7 7E          		PCNXT:         LD A,(HL)	;
346)   0AA8 FE 20       		               CP ' '	;
347)   0AAA 28 18       		               JR Z,PCEXT	;
348)   0AAC FE 2C       		               CP ','	;
349)   0AAE 28 14       		               JR Z,PCEXT	;
350)   0AB0 FE 2F       		               CP '/'	;
351)   0AB2 28 10       		               JR Z,PCEXT	;
352)   0AB4 FE 3A       		               CP ':'	;
353)   0AB6 28 0C       		               JR Z,PCEXT	;
354)   0AB8 FE 0D       		               CP 13	;
355)   0ABA 28 08       		               JR Z,PCEXT	;
356)   0ABC FE 00       		               CP 0	;
357)   0ABE 28 04       		               JR Z,PCEXT	;
358)   0AC0 23          		               INC HL	;
359)   0AC1 1C          		               INC E	;
360)   0AC2 18 E3       		               JR PCNXT	;
361)   0AC4 E5          		PCEXT:         PUSH HL	;
362)   0AC5 FD E1       		               POP IY          ;IY AT THE END OF PARAM	;IY AT THE END OF PARAM
363)   0AC7 E1          		               POP HL          ;HL AT THE START OF PARAM	;HL AT THE START OF PARAM
364)   0AC8 C9          		               RET                	;
367)   0AC9 CD 9E 0A    		PARSCMDI:      CALL PARSCMD	;
369)   0ACC CD 2C 2C    		               CALL STRTOB     ;CONVERT TO BYTE ON A	;CONVERT TO BYTE ON A
370)   0ACF 6F          		               LD L,A	;
371)   0AD0 C9          		               RET	;
375)   0AD1 CD 16 0A    		DRV_ERROR: CALL OSERROR	;
376)   0AD4 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
376)   0AD8 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
376)   0ADC 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
376)   0AE0 52          		 DEFM  "STORAGE ERROR"	;
377)   0AE1 00          		 DEFB    0	;
382)   0AE2 CD 7E 11    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
383)   0AE5 D2 11 0A    		 JP NC, OSCMDFIN	;
384)   0AE8 18 E7       		 JR DRV_ERROR	;
386)   0AEA CD 9E 0A    		DRV_GETFNPRM: CALL PARSCMD       	;
387)   0AED 06 00       		 LD B, 0	;
388)   0AEF 4B          		 LD C, E	;
389)   0AF0 11 D3 FE    		 LD DE, STRGBUFF	;
390)   0AF3 ED B0       		 LDIR	;
391)   0AF5 AF          		 XOR A	;
392)   0AF6 12          		 LD (DE), A	;
393)   0AF7 C9          		 RET	;
396)   0AF8 CD EA 0A    		DRV_CD: CALL DRV_GETFNPRM	;
397)   0AFB CD AA 11    		 CALL STRG_DIRCHG	;
398)   0AFE D2 11 0A    		 JP NC, OSCMDFIN	;
399)   0B01 18 CE       		 JR DRV_ERROR	;
402)   0B03 CD EA 0A    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
403)   0B06 CD C2 11    		 CALL STRG_OPNFILE	;
404)   0B09 38 C6       		 JR C, DRV_ERROR	;
405)   0B0B CD 4B 12    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
406)   0B0E 3A FF FE    		 LD A, (FID)	;
407)   0B11 CD E1 11    		 CALL STRG_CLSFILE	;
408)   0B14 C3 11 0A    		 JP OSCMDFIN	;
415)   0B17 CD C9 0A    		RTC_GETPARBCD: CALL PARSCMDI	;
416)   0B1A CD BD 2A    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
417)   0B1D FD 7E 00    		 LD A, (IY)	;
418)   0B20 FE 2C       		 CP ','	;
419)   0B22 FD 23       		 INC IY	;
420)   0B24 7D          		 LD A, L	;
421)   0B25 C9          		 RET	;
426)   0B26 0E 00       		RTC_ADJUST: LD C, 0	;
427)   0B28 11 8A FE    		 LD DE, BUFFER	;
428)   0B2B AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
429)   0B2C 32 8A FE    		 LD (BUFFER), A	;
430)   0B2F 13          		 INC DE	;
431)   0B30 C5          		RTCADJ_NXT: PUSH BC	;
432)   0B31 D5          		 PUSH DE	;
433)   0B32 CD 17 0B    		 CALL RTC_GETPARBCD	;
434)   0B35 D1          		 POP DE	;
435)   0B36 C1          		 POP BC	;
436)   0B37 28 0B       		 JR Z, RTCADJ_PAROK	;
438)   0B39 FD 2B       		 DEC IY	;
439)   0B3B 47          		 LD B, A        ;SAVE A	;SAVE A
440)   0B3C 79          		 LD A, C	;
441)   0B3D FE 06       		 CP 6	;
442)   0B3F 28 08       		 JR Z, RTCADJ_EXEC	;
444)   0B41 C3 1D 0A    		 JP SNTX_ERROR	;
445)   0B44 0C          		RTCADJ_PAROK: INC C	;
446)   0B45 12          		 LD (DE), A	;
447)   0B46 13          		 INC DE	;
448)   0B47 18 E7       		 JR RTCADJ_NXT	;
449)   0B49 78          		RTCADJ_EXEC: LD A, B	;
450)   0B4A 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
451)   0B4B 13          		 INC DE	;
452)   0B4C AF          		 XOR A	;
453)   0B4D 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
454)   0B4E CD 53 15    		 CALL DS1307_ADJUST	;
455)   0B51 C3 11 0A    		 JP OSCMDFIN	;
458)   0B54 CD 9C 15    		RTC_GET: CALL DS1307_GETTIME 	;
463)   0B57 21 A0 FE    		 LD HL,TIMMSG	;
464)   0B5A 11 14 00    		 LD DE,20	;
465)   0B5D AF          		 XOR A	;
466)   0B5E 19          		 ADD HL,DE	;
467)   0B5F 77          		 LD (HL),A	;
468)   0B60 ED 52       		 SBC HL,DE	;
469)   0B62 CD 3F 05    		 CALL OS_PRINTTEXT	;
473)   0B65 C3 11 0A    		 JP OSCMDFIN	;
479)   0B68 CD 9C 15    		DSSETDATE: CALL DS1307_GETTIME      ;TIMMSG HAS THE DATE AND TIME	;TIMMSG HAS THE DATE AND TIME
482)   0B6B 21 B0 FE    		 LD HL,TIMMSG+16	;
483)   0B6E 11 B2 FE    		 LD DE,TIMMSG+18	;
484)   0B71 01 08 00    		 LD BC,8	;
485)   0B74 ED B8       		 LDDR	;
486)   0B76 21 A9 FE    		 LD HL,TIMMSG+9	;
487)   0B79 36 30       		 LD (HL),'0'	;
488)   0B7B 23          		 INC HL	;
489)   0B7C 36 20       		 LD (HL),' '	;
490)   0B7E FD E5       		 PUSH IY	;
491)   0B80 E1          		 POP HL     ;HL POINTS TO COMDBUFFER	;HL POINTS TO COMDBUFFER
492)   0B81 23          		 INC HL     ;SKIP SPACE	;SKIP SPACE
493)   0B82 11 A0 FE    		 LD DE,TIMMSG	;
494)   0B85 01 08 00    		 LD BC,8        ;DD/MM/YY	;DD/MM/YY
495)   0B88 ED B0       		 LDIR	;
496)   0B8A FD 21 A0 FE 		 LD IY,TIMMSG	;
497)   0B8E CD D4 14    		 CALL DS1307_SETTIME	;
498)   0B91 C3 11 0A    		 JP OSCMDFIN	;
500)   0B94 CD 9C 15    		DSSETTIME: CALL DS1307_GETTIME      ;TIMMSG HAS THE DATE AND TIME	;TIMMSG HAS THE DATE AND TIME
503)   0B97 21 B0 FE    		 LD HL,TIMMSG+16	;
504)   0B9A 11 B2 FE    		 LD DE,TIMMSG+18	;
505)   0B9D 01 08 00    		 LD BC,8	;
506)   0BA0 ED B8       		 LDDR	;
507)   0BA2 21 A9 FE    		 LD HL,TIMMSG+9	;
508)   0BA5 36 30       		 LD (HL),'0'	;
509)   0BA7 23          		 INC HL	;
510)   0BA8 36 20       		 LD (HL),' '	;
512)   0BAA FD E5       		 PUSH IY	;
513)   0BAC E1          		 POP HL	;
514)   0BAD 23          		 INC HL        ;SKIP SPACE	;SKIP SPACE
515)   0BAE 11 AB FE    		 LD DE,TIMMSG + 11      ;SKIP DATE PART 	;SKIP DATE PART
516)   0BB1 01 08 00    		 LD BC,8        ;HH:MN:SS	;HH:MN:SS
517)   0BB4 ED B0       		 LDIR	;
518)   0BB6 FD 21 A0 FE 		 LD IY,TIMMSG	;
519)   0BBA CD D4 14    		 CALL DS1307_SETTIME	;
520)   0BBD C3 11 0A    		 JP OSCMDFIN	;
523)   0BC0 FD E5       		DSSETDATETIME: PUSH IY	;
524)   0BC2 E1          		 POP HL	;
525)   0BC3 11 A0 FE    		 LD DE,TIMMSG	;
526)   0BC6 01 13 00    		 LD BC,19	;
527)   0BC9 ED B0       		 LDIR	;
528)   0BCB CD D4 14    		 CALL DS1307_SETTIME	;
529)   0BCE C3 11 0A    		 JP OSCMDFIN  	;
533)   0BD1 CD 22 17    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
534)   0BD4 C3 11 0A    		 JP OSCMDFIN	;
536)   0BD7 CD 30 17    		LCD_BLINKON: CALL LCD16_BLINKON	;
537)   0BDA C3 11 0A    		 JP OSCMDFIN	;
539)   0BDD CD D3 16    		LCD_CLR: CALL LCD16_CLR	;
540)   0BE0 C3 11 0A    		 JP OSCMDFIN	;
542)   0BE3 CD C9 0A    		LCD_CURSAT: CALL PARSCMDI     ;TAKE PARAMS D COL E ROW  	;TAKE PARAMS D COL E ROW
543)   0BE6 55          		 LD D, L	;
544)   0BE7 D5          		 PUSH DE                                                 ;SAVE PARAM D	;SAVE PARAM D
545)   0BE8 FD 7E 00    		 LD A, (IY)	;
546)   0BEB FE 2C       		 CP ', '	;
547)   0BED 28 04       		 JR Z, LCDCA_OK	;
548)   0BEF D1          		 POP DE	;
549)   0BF0 C3 1D 0A    		 JP SNTX_ERROR	;
550)   0BF3 FD 23       		LCDCA_OK: INC IY	;
551)   0BF5 CD C9 0A    		 CALL PARSCMDI	;
552)   0BF8 D1          		               POP DE                                                  ;RESTORE PARAM D	;RESTORE PARAM D
553)   0BF9 5D          		 LD E, L	;
554)   0BFA CD F7 16    		 CALL LCD16_SETCURS	;
555)   0BFD C3 11 0A    		 JP OSCMDFIN	;
557)   0C00 CD 06 17    		LCD_CURSOF: CALL LCD16_CURSOFF	;
558)   0C03 C3 11 0A    		 JP OSCMDFIN	;
560)   0C06 CD 14 17    		LCD_CURSON: CALL LCD16_CURSON	;
561)   0C09 C3 11 0A    		 JP OSCMDFIN	;
563)   0C0C CD AA 16    		LCD_DISPOF: CALL LCD16_NODISP	;
564)   0C0F C3 11 0A    		 JP OSCMDFIN	;
566)   0C12 CD B8 16    		LCD_DISPON: CALL LCD16_DISP	;
567)   0C15 C3 11 0A    		 JP OSCMDFIN	;
569)   0C18 CD EA 16    		LCD_HOME: CALL LCD16_HOME	;
570)   0C1B C3 11 0A    		 JP OSCMDFIN	;
572)   0C1E CD 4A 17    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
573)   0C21 C3 11 0A    		 JP OSCMDFIN	;
575)   0C24 CD 50 17    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
576)   0C27 C3 11 0A    		 JP OSCMDFIN	;
578)   0C2A CD 9E 0A    		LCD_PRN: CALL PARSCMD	;
579)   0C2D CD DC 16    		               CALL LCD16_PRINT	;
580)   0C30 C3 11 0A    		               JP OSCMDFIN	;
583)   0C33 CD 3E 17    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
584)   0C36 C3 11 0A    		 JP OSCMDFIN	;
586)   0C39 CD 44 17    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
587)   0C3C C3 11 0A    		 JP OSCMDFIN	;
592)   0C3F CD 9E 0A    		SETVGA: CALL PARSCMD  ;GET PARAM	;GET PARAM
593)   0C42 CD 99 0C    		 CALL CHKKEYWD	;
594)   0C45 4F 4E       		 DEFM "ON"	;
595)   0C47 00          		 DB 0	;
596)   0C48 28 12       		 JR Z,SVON	;
597)   0C4A CD 99 0C    		 CALL CHKKEYWD	;
598)   0C4D 4F 46 46    		 DEFM "OFF"	;
599)   0C50 00          		 DB 0	;
600)   0C51 C2 1D 0A    		 JP NZ, SNTX_ERROR	;
602)   0C54 21 BB FE    		 LD HL,SCRNST	;
603)   0C57 CB 8E       		 RES 1,(HL)	;
604)   0C59 C3 11 0A    		 JP OSCMDFIN	;
605)   0C5C 21 BB FE    		SVON: LD HL,SCRNST	;
606)   0C5F CB CE       		 SET 1,(HL)	;
607)   0C61 C3 11 0A    		 JP OSCMDFIN	;
610)   0C64 CD 9E 0A    		SETLCD: CALL PARSCMD  ;GET PARAM	;GET PARAM
611)   0C67 CD 99 0C    		 CALL CHKKEYWD	;
612)   0C6A 4F 4E       		 DEFM "ON"	;
613)   0C6C 00          		 DB 0	;
614)   0C6D 28 12       		 JR Z,SLON	;
615)   0C6F CD 99 0C    		 CALL CHKKEYWD	;
616)   0C72 4F 46 46    		 DEFM "OFF"	;
617)   0C75 00          		 DB 0	;
618)   0C76 C2 1D 0A    		 JP NZ, SNTX_ERROR	;
621)   0C79 21 BB FE    		 LD HL,SCRNST	;
622)   0C7C CB 86       		 RES 0,(HL)	;
623)   0C7E C3 11 0A    		 JP OSCMDFIN	;
624)   0C81 21 BB FE    		SLON: LD HL,SCRNST	;
625)   0C84 CB C6       		 SET 0,(HL)	;
626)   0C86 C3 11 0A    		 JP OSCMDFIN	;
631)   0C89 CD C9 0A    		SETVGAMODE: CALL PARSCMDI	;
632)   0C8C E6 03       		 AND 3        ;KEEP ONLY BITS 0-1	;KEEP ONLY BITS 0-1
633)   0C8E 6F          		 LD L, A  	;
634)   0C8F CD 38 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
635)   0C92 4D          		 LD C, L        ;VIDEO MODE SCREEN	;VIDEO MODE SCREEN
636)   0C93 CD 06 18    		 CALL VGA_SETCONF	;
637)   0C96 C3 11 0A    		 JP OSCMDFIN	;
646)   0C99 D1          		CHKKEYWD: POP DE ;GET THE START OF THE KEYWD	;GET THE START OF THE KEYWD
647)   0C9A E5          		 PUSH HL	;
648)   0C9B 1A          		CHKNXTL: LD A,(DE) ;	;
649)   0C9C FE 00       		 CP 0	;
650)   0C9E 28 13       		 JR Z, CHKEND	;
651)   0CA0 47          		 LD B,A	;
652)   0CA1 7E          		 LD A,(HL)	;
653)   0CA2 FE 00       		 CP 0	;
654)   0CA4 28 0D       		 JR Z, CHKEND	;
655)   0CA6 B8          		 CP B	;
656)   0CA7 20 04       		 JR NZ, CHKNOTEQ	;
657)   0CA9 13          		 INC DE	;
658)   0CAA 23          		 INC HL	;
659)   0CAB 18 EE       		 JR CHKNXTL	;
661)   0CAD 3E 01       		CHKNOTEQ: LD A,1	;
662)   0CAF FE 00       		 CP 0  ;NOT ZERO	;NOT ZERO
663)   0CB1 18 01       		 JR CHKEXIT	;
665)   0CB3 AF          		CHKEND: XOR A  ;ZERO FLAG SET	;ZERO FLAG SET
667)   0CB4 CD BA 0C    		CHKEXIT: CALL FNDKWDEND	;
668)   0CB7 E1          		 POP HL  	;
669)   0CB8 D5          		 PUSH DE   ;DE THE RETURN ADDRESS AFTER THE KWD	;DE THE RETURN ADDRESS AFTER THE KWD
670)   0CB9 C9          		 RET	;
675)   0CBA F5          		FNDKWDEND: PUSH AF  ;SAVE FLAGS	;SAVE FLAGS
676)   0CBB 1B          		 DEC DE	;
677)   0CBC 13          		CHKEXNXT: INC DE  ;FIND THE KEYWORD END	;FIND THE KEYWORD END
678)   0CBD 1A          		 LD A,(DE)	;
679)   0CBE FE 00       		 CP 0	;
680)   0CC0 20 FA       		 JR NZ, CHKEXNXT	;
681)   0CC2 13          		 INC DE   ;THIS IS THE RETURN ADDRESS AFTER THE KEYWD 	;THIS IS THE RETURN ADDRESS AFTER THE KEYWD
682)   0CC3 F1          		 POP AF   ;RESTORE FLAGS	;RESTORE FLAGS
683)   0CC4 C9          		 RET	;
688)   0CC5 CD 9E 0A    		SETCURSOR: CALL PARSCMD	;
689)   0CC8 CD 99 0C    		 CALL CHKKEYWD	;
690)   0CCB 4F 4E       		 DEFM "ON"	;
691)   0CCD 00          		 DB 0	;
692)   0CCE 3E 00       		 LD A,0	;
693)   0CD0 28 0B       		 JR Z, SCURSON	;
694)   0CD2 CD 99 0C    		 CALL CHKKEYWD	;
695)   0CD5 4F 46 46    		 DEFM "OFF"	;
696)   0CD8 00          		 DB 0	;
697)   0CD9 C2 1D 0A    		 JP NZ, SNTX_ERROR	;
698)   0CDC 3C          		SCURSOFF: INC A 	;
700)   0CDD CD FD 04    		SCURSON: CALL OSSETCURSOR	;
701)   0CE0 C3 11 0A    		 JP OSCMDFIN	;
705)   0CE3 CD 9E 0A    		LCDSHOWTIME:   CALL PARSCMD	;
706)   0CE6 CD 99 0C    		 CALL CHKKEYWD	;
707)   0CE9 4F 4E       		 DEFM "ON"	;
708)   0CEB 00          		 DB 0	;
709)   0CEC 3E 00       		 LD A,0	;
710)   0CEE 28 0B       		 JR Z, STIMSON	;
711)   0CF0 CD 99 0C    		 CALL CHKKEYWD	;
712)   0CF3 4F 46 46    		 DEFM "OFF"	;
713)   0CF6 00          		 DB 0	;
714)   0CF7 C2 1D 0A    		 JP NZ, SNTX_ERROR	;
715)   0CFA 3C          		STIMSOFF: INC A 	;
717)   0CFB CD EC 04    		STIMSON: CALL OSSETTIME	;
718)   0CFE C3 11 0A    		 JP OSCMDFIN	;
 14)   0D01 E5          		@INTSER: PUSH HL	;
 15)   0D02 F5          		 PUSH AF	;
 16)   0D03 C5          		 PUSH BC	;
 17)   0D04 DD E5       		 PUSH IX	;
 21)   0D06 DB 68       		 IN A, (DEVINT)       ;WAS DEVINP BEFORE V 0.43	;WAS DEVINP BEFORE V 0.43
 22)   0D08 2F          		 CPL	;
 23)   0D09 E6 07       		 AND 0X07       ;BITS 0-2  	;BITS 0-2
 27)   0D0B DD 21 62 FF 		 LD IX, INTTAB	;
 28)   0D0F 06 00       		 LD B, 0	;
 29)   0D11 4F          		 LD C, A	;
 30)   0D12 CB 21       		 SLA C        ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 31)   0D14 DD 09       		 ADD IX, BC	;
 32)   0D16 DD 6E 00    		 LD L, (IX)	;
 33)   0D19 DD 66 01    		 LD H, (IX + 1)	;
 34)   0D1C 01 21 0D    		 LD BC, IS_EX	;
 35)   0D1F C5          		 PUSH BC        ;RETURN ADDRESS	;RETURN ADDRESS
 36)   0D20 E9          		 JP (HL)        ;JP TO HL	;JP TO HL
 38)   0D21 DD E1       		IS_EX: POP IX	;
 39)   0D23 C1          		 POP BC	;
 40)   0D24 F1          		 POP AF	;
 41)   0D25 E1          		 POP HL	;
 42)   0D26 FB          		 EI	;
 43)   0D27 C9          		 RET        ;SAME AS RETI FOR IM1	;SAME AS RETI FOR IM1
 48)   0D28 F3          		@COPYINTTAB: DI	;
 49)   0D29 21 3E 0D    		 LD HL,MYINTADDR	;
 50)   0D2C 11 62 FF    		 LD DE,INTTAB	;
 51)   0D2F 01 10 00    		 LD BC,16	;
 52)   0D32 ED B0       		 LDIR	;
 53)   0D34 0E 68       		 LD C,DEVINT	;
 54)   0D36 06 08       		 LD B,8	;
 55)   0D38 ED 41       		CIT_NXT: OUT (C), B	;
 56)   0D3A 10 FC       		 DJNZ CIT_NXT 	;
 57)   0D3C FB          		 EI 	;
 58)   0D3D C9          		 RET 	;
 60)   0D3E 61 0D       		MYINTADDR: DEFW INT_TIMER	;
 61)   0D40 56 0D       		 DEFW SAVETE	;
 62)   0D42 4E 0D       		 DEFW INT_KEYB	;
 63)   0D44 5E 0D       		 DEFW DOCLRINT	;
 64)   0D46 5E 0D       		 DEFW DOCLRINT	;
 65)   0D48 5E 0D       		 DEFW DOCLRINT	;
 66)   0D4A 5E 0D       		 DEFW DOCLRINT	;
 67)   0D4C 5E 0D       		 DEFW DOCLRINT	;
 69)   0D4E 4F          		INT_KEYB: LD C,A	;
 70)   0D4F CD 4E 0E    		 CALL PS2SETKEYAV      ;SET NEW KEY AVAILABLE FROM PS/2	;SET NEW KEY AVAILABLE FROM PS/2
 71)   0D52 79          		 LD A,C	;
 72)   0D53 D3 68       		 OUT (DEVINT), A       ;CLEAR THE INTERRUPT    	;CLEAR THE INTERRUPT
 73)   0D55 C9          		 RET	;
 76)   0D56 D3 68       		SAVETE: OUT (DEVINT), A       ;CLEAR THE INTERRUPT	;CLEAR THE INTERRUPT
 77)   0D58 3E 01       		 LD A, 1	;
 78)   0D5A 32 C5 FE    		 LD (INT2TE),A        ;TEARING EFFECT	;TEARING EFFECT
 79)   0D5D C9          		 RET	;
 82)   0D5E D3 68       		DOCLRINT: OUT (DEVINT), A	;
 83)   0D60 C9          		 RET	;
 85)   0D61 D3 68       		INT_TIMER: OUT (DEVINT), A	;
 86)   0D63 21 C1 FE    		 LD HL, TIMECTR	;
 87)   0D66 34          		 INC (HL)	;
 88)   0D67 7E          		 LD A, (HL)	;
 89)   0D68 FE 00       		 CP 0	;
 90)   0D6A C0          		 RET NZ	;
 91)   0D6B 23          		 INC HL	;
 92)   0D6C 34          		 INC (HL)	;
 93)   0D6D 7E          		 LD A, (HL)	;
 94)   0D6E FE 00       		 CP 0	;
 95)   0D70 C0          		 RET NZ	;
 96)   0D71 23          		 INC HL	;
 97)   0D72 34          		 INC (HL)	;
 98)   0D73 7E          		 LD A, (HL)	;
 99)   0D74 FE 00       		 CP 0	;
100)   0D76 C0          		 RET NZ	;
101)   0D77 23          		 INC HL	;
102)   0D78 34          		 INC (HL)	;
103)   0D79 7E          		 LD A, (HL)	;
104)   0D7A FE 00       		 CP 0	;
105)   0D7C C0          		 RET NZ	;
107)   0D7D 21 00 00    		 LD HL, 0	;
108)   0D80 22 C1 FE    		 LD (TIMECTR), HL	;
109)   0D83 22 C3 FE    		 LD (TIMECTR + 2), HL	;
110)   0D86 C9          		 RET	;
  9)   0D87 21 01 FF    		INITMMU:       LD HL,BANKS	;
 10)   0D8A 06 08       		               LD B,8	;
 11)   0D8C AF          		               XOR A	;
 12)   0D8D 77          		INM_AGN:       LD (HL),A	;
 13)   0D8E 3C          		               INC A	;
 14)   0D8F 23          		 INC HL	;
 15)   0D90 10 FB       		               DJNZ INM_AGN	;
 16)   0D92 C9          		               RET                	;
 22)   0D93 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 23)   0D94 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 24)   0D95 FE 02       		 CP 2	;
 25)   0D97 D8          		 RET C         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 26)   0D98 FE 07       		 CP 7	;
 27)   0D9A C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 28)   0D9B 21 01 FF    		 LD HL, BANKS	;
 29)   0D9E 16 00       		 LD D, 0	;
 30)   0DA0 5F          		 LD E, A	;
 31)   0DA1 19          		 ADD HL, DE	;
 32)   0DA2 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 33)   0DA3 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 34)   0DA4 0E 00       		 LD C, DEVMMU	;
 35)   0DA6 58          		 LD E,B	;
 36)   0DA7 CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 37)   0DA9 CB 20       		 SLA B	;
 38)   0DAB CB 20       		 SLA B	;
 39)   0DAD CB 20       		 SLA B	;
 40)   0DAF CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 41)   0DB1 ED 79       		 OUT (C), A	;
 42)   0DB3 43          		 LD B,E	;
 43)   0DB4 C9          		 RET	;
 48)   0DB5 21 01 FF    		GETPGINBANK:   LD HL,BANKS	;
 49)   0DB8 16 00       		               LD D,0	;
 50)   0DBA 58          		               LD E,B	;
 51)   0DBB 19          		               ADD HL,DE	;
 52)   0DBC 7E          		               LD A,(HL)	;
 53)   0DBD C9          		               RET	;
 15)   0DBE 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   0DBE 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   0DBE 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   0DBE 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   0DBE 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   0DBE 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   0DBE 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 44)   0DBE 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   0DBE 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   0DBE 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   0DBE 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   0DBE 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   0DBE F5          		RS_INI: PUSH AF	;
 63)   0DBF 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 64)   0DC1 D3 1B       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 73)   0DC3 F1          		 POP AF	;
 74)   0DC4 D3 18       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 75)   0DC6 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   0DC8 D3 19       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 77)   0DCA 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   0DCC D3 1B       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 80)   0DCE 3E 00       		 LD A, 0	;
 81)   0DD0 D3 1A       		 OUT (FCR), A        ;//was commented	;//was commented
 82)   0DD2 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   0DD4 D3 19       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 84)   0DD6 C9          		 RET	;
 87)   0DD7 CD DD 0D    		RS_TX: CALL RSTXRD	;
 88)   0DDA D3 18       		 OUT (THR), A	;
 90)   0DDC C9          		 RET	;
 94)   0DDD F5          		RSTXRD: PUSH AF	;
 95)   0DDE DB 1D       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 96)   0DE0 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   0DE2 28 FA       		 JR Z, RSTXLP	;
 98)   0DE4 F1          		 POP AF	;
 99)   0DE5 C9          		 RET	;
102)   0DE6 7E          		RS_TXT: LD A, (HL)	;
103)   0DE7 23          		 INC HL	;
104)   0DE8 FE 00       		 CP 0	;
105)   0DEA C8          		 RET Z	;
106)   0DEB CD D7 0D    		 CALL RS_TX	;
107)   0DEE 18 F6       		 JR RS_TXT	;
114)   0DF0 F3          		RS_RX: DI	;
115)   0DF1 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   0DF3 D3 1C       		 OUT (MCR), A	;
117)   0DF5 CD 0E 0E    		 CALL RSRXRD	;
118)   0DF8 AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   0DF9 D3 1C       		 OUT (MCR), A	;
121)   0DFB DB 18       		 IN A, (RBR)	;
122)   0DFD FB          		 EI	;
123)   0DFE C9          		 RET	;
125)   0DFF 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   0E01 D3 1C       		 OUT (MCR), A	;
127)   0E03 DB 1D       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
128)   0E05 CB 47       		 BIT 0, A	;
129)   0E07 28 03       		 JR Z, RS_NOCHAR	;
130)   0E09 F3          		 DI	;
131)   0E0A 18 EC       		 JR RS_GTCH	;
132)   0E0C AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
133)   0E0D C9          		 RET	;
141)   0E0E F5          		 PUSH AF	;
147)   0E0F DB 1D       		 IN A, (LSR)        ; fetch the control register	; fetch the control register
148)   0E11 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
149)   0E13 28 FA       		 JR Z, RSRXLP	;
151)   0E15 F1          		 POP AF	;
153)   0E16 C9          		 RET	;
157)   0E17 DB 1D       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
158)   0E19 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
159)   0E1B C9          		 RET	;
161)   0E1C F5          		SHLCD: PUSH AF	;
163)   0E1D F1          		 POP AF	;
165)   0E1E C9          		 RET	;
169)   0E1F F5          		CHKERR: PUSH AF	;
170)   0E20 E5          		 PUSH HL	;
171)   0E21 C5          		 PUSH BC	;
172)   0E22 DB 1D       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
173)   0E24 CB 67       		 BIT 4, A	;
174)   0E26 28 04       		 JR Z, LBLPE	;
175)   0E28 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
176)   0E2A 18 1A       		 JR EXIT	;
177)   0E2C CB 57       		LBLPE: BIT 2, A	;
178)   0E2E 28 04       		 JR Z, LBLFE	;
179)   0E30 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
180)   0E32 18 12       		 JR EXIT	;
181)   0E34 CB 5F       		LBLFE: BIT 3, A	;
182)   0E36 28 04       		 JR Z, LBLOE	;
183)   0E38 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
184)   0E3A 18 0A       		 JR EXIT	;
185)   0E3C CB 4F       		LBLOE: BIT 1, A	;
186)   0E3E 28 04       		 JR Z, LBLNE	;
187)   0E40 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
188)   0E42 18 02       		 JR EXIT	;
189)   0E44 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
190)   0E46 21 B8 FE    		EXIT: LD HL, SERERR	;
191)   0E49 77          		 LD (HL), A	;
193)   0E4A C1          		 POP BC	;
194)   0E4B E1          		 POP HL	;
195)   0E4C F1          		 POP AF	;
196)   0E4D C9          		 RET	;
 14)   0E4E 21 74 FF    		PS2SETKEYAV:  LD HL,KBDFLAG	;
 15)   0E51 36 01       		 LD (HL),1	;
 16)   0E53 DB 20       		 IN A, (DEVKBI)        ;JUST TO CLEAR THE INTERRUPT	;JUST TO CLEAR THE INTERRUPT
 17)   0E55 C9          		 RET	;
 20)   0E56 21 74 FF    		PS2NOKEYAV: LD HL,KBDFLAG	;
 21)   0E59 36 00       		 LD (HL),0	;
 22)   0E5B C9          		 RET 	;
 27)   0E5C CD 6D 0E    		READCHAR: CALL GTKEY	;
 28)   0E5F B7          		 OR A	;
 29)   0E60 C8          		               RET Z                                                           ;NO KEY IF A=0	;NO KEY IF A=0
 30)   0E61 32 75 FF    		 LD (LASTKEY),A                	;
 31)   0E64 CD 6C 0F    		               CALL PS2LOK                                                     ;LOOK UP TABLE TRANSLATION	;LOOK UP TABLE TRANSLATION
 32)   0E67 C9          		               RET	;
 36)   0E68 3A 74 FF    		PS2ISK:        LD A,(KBDFLAG) 	;
 37)   0E6B B7          		               OR A	;
 38)   0E6C C9          		               RET     	;
 41)   0E6D CD 92 0E    		GTKEY: CALL NGETKEY       ;GET A KEY FROM PS2 HARDWARE	;GET A KEY FROM PS2 HARDWARE
 42)   0E70 B7          		 OR A	;
 43)   0E71 C8          		 RET Z  	;
 44)   0E72 CD AB 0E    		               CALL CHECKEXT                                                   ;CHECK FOR EXTDED KEYS	;CHECK FOR EXTDED KEYS
 45)   0E75 C9          		               RET	;
 49)   0E76 CD 89 0E    		PS2KBINIT: CALL KBDISABLE       ;RESET KB                	;RESET KB
 50)   0E79 DB 20       		 IN A, (DEVKBI)        ;RESET KB INTERRUPT  	;RESET KB INTERRUPT
 51)   0E7B CD 8E 0E    		 CALL KBENABLE	;
 52)   0E7E CD 8E 0E    		               CALL KBENABLE  	;
 53)   0E81 CD 56 0E    		 CALL PS2NOKEYAV	;
 54)   0E84 AF          		 XOR A	;
 55)   0E85 32 75 FF    		 LD (LASTKEY),A   	;
 56)   0E88 C9          		 RET	;
 58)   0E89 3E 02       		KBDISABLE: LD A, 2	;
 59)   0E8B D3 20       		 OUT (DEVKBI), A	;
 60)   0E8D C9          		 RET	;
 62)   0E8E AF          		KBENABLE: XOR A	;
 63)   0E8F D3 20       		 OUT (DEVKBI), A	;
 64)   0E91 C9          		 RET	;
 70)   0E92 F3          		NGETKEY: DI	;
 71)   0E93 3E 02       		 LD A,2	;
 72)   0E95 D3 20       		 OUT (DEVKBI), A 	;
 73)   0E97 DB 20       		 IN A, (DEVKBI)        ;GET KEY	;GET KEY
 75)   0E99 4F          		 LD C, A	;
 76)   0E9A AF          		 XOR A	;
 77)   0E9B D3 20       		 OUT (DEVKBI), A       ;RESET FOR NEXT KEY	;RESET FOR NEXT KEY
 80)   0E9D D3 20       		 OUT (DEVKBI), A       ;ZERO COUNTER  	;ZERO COUNTER
 81)   0E9F D3 20       		 OUT (DEVKBI), A       ;ZERO COUNTER	;ZERO COUNTER
 83)   0EA1 79          		 LD A, C	;
 84)   0EA2 FB          		 EI        ;CLEAR INTERRUPT	;CLEAR INTERRUPT
 86)   0EA3 06 1E       		 LD B,30	;
 87)   0EA5 10 FE       		AGME: DJNZ AGME  	;
 89)   0EA7 CD 56 0E    		 CALL PS2NOKEYAV       ;READY FOR NEXT KEY 	;READY FOR NEXT KEY
 90)   0EAA C9          		 RET	;
 96)   0EAB FE E1       		CHECKEXT:     CP $E1         ;BREAK KEY	;BREAK KEY
 97)   0EAD C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
 98)   0EAE FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
 99)   0EB0 C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
100)   0EB1 FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
101)   0EB3 C8          		 RET Z        ;JUST SAVE IT	;JUST SAVE IT
102)   0EB4 FE AA       		 CP $AA        ;POST TEST KB OK	;POST TEST KB OK
103)   0EB6 C8          		 RET Z	;
105)   0EB7 4F          		 LD C,A        ;SAVE KEY	;SAVE KEY
106)   0EB8 3A 75 FF    		 LD A,(LASTKEY)	;
107)   0EBB FE E1       		 CP $E1	;
108)   0EBD 28 23       		 JR Z, GTBRK	;
109)   0EBF FE F0       		 CP $F0	;
110)   0EC1 28 59       		 JR Z, GTREL	;
111)   0EC3 FE E0       		 CP $E0	;
112)   0EC5 28 21       		 JR Z, GTEXT	;
113)   0EC7 79          		 LD A,C	;
115)   0EC8 FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
116)   0ECA CC 48 0F    		 CALL Z, SHFTOG	;
117)   0ECD FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
118)   0ECF CC 48 0F    		 CALL Z, SHFTOG	;
119)   0ED2 FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
120)   0ED4 CC 51 0F    		 CALL Z, CTRTOG	;
121)   0ED7 FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
122)   0ED9 CC 5A 0F    		 CALL Z, ALTTOG	;
123)   0EDC FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
124)   0EDE CC 63 0F    		 CALL Z, CAPSTOG	;
125)   0EE1 C9          		               RET	;
127)   0EE2 79          		GTBRK: LD A,C       ;$14 OR $F0	;$14 OR $F0
128)   0EE3 FE F0       		 CP $F0	;
129)   0EE5 C8          		 RET Z  	;
130)   0EE6 AF          		 XOR A        	;
131)   0EE7 C9          		 RET	;
133)   0EE8 79          		GTEXT: LD A,C       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
134)   0EE9 FE 6B       		 CP $6B         ;LEFT	;LEFT
135)   0EEB C8          		 RET Z	;
136)   0EEC FE 72       		 CP $72        ;DOWN	;DOWN
137)   0EEE C8          		 RET Z	;
138)   0EEF FE 74       		 CP $74        ;RIGHT	;RIGHT
139)   0EF1 C8          		 RET Z	;
140)   0EF2 FE 75       		 CP $75        ;UP	;UP
141)   0EF4 C8          		 RET Z	;
142)   0EF5 FE 70       		 CP $70        ;INSERT	;INSERT
143)   0EF7 C8          		 RET Z	;
144)   0EF8 FE 6C       		 CP $6C        ;HOME	;HOME
145)   0EFA C8          		 RET Z	;
146)   0EFB FE 7D       		 CP $7D        ;PG UP	;PG UP
147)   0EFD C8          		 RET Z	;
148)   0EFE FE 7A       		 CP $7A        ;PG DN	;PG DN
149)   0F00 C8          		 RET Z	;
150)   0F01 FE 69       		 CP $69        ;END	;END
151)   0F03 C8          		 RET Z	;
152)   0F04 FE 71       		 CP $71        ;DEL	;DEL
153)   0F06 C8          		 RET Z	;
154)   0F07 FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
155)   0F09 C8          		 RET Z	;
156)   0F0A FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
157)   0F0C C8          		 RET Z	;
158)   0F0D FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
159)   0F0F C8          		 RET Z	;
160)   0F10 FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
161)   0F12 C8          		 RET Z	;
162)   0F13 FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
163)   0F15 C8          		 RET Z	;
164)   0F16 FE F0       		 CP $F0	;
165)   0F18 20 00       		 JR NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY  	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
167)   0F1A AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
168)   0F1B C9          		 RET	;
171)   0F1C 79          		GTREL: LD A,C       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
172)   0F1D FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
173)   0F1F CC 36 0F    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
174)   0F22 FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
175)   0F24 CC 3C 0F    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
176)   0F27 FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
177)   0F29 CC 42 0F    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
178)   0F2C FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
179)   0F2E CC 36 0F    		 CALL Z, SHFRES       ; RESET SHIFT  	; RESET SHIFT
180)   0F31 32 75 FF    		 LD (LASTKEY),A         ; SET LAST KEY	; SET LAST KEY
181)   0F34 AF          		 XOR A         ; NO KEY  	; NO KEY
182)   0F35 C9          		 RET	;
184)   0F36 21 B7 FE    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
185)   0F39 CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
186)   0F3B C9          		 RET	;
188)   0F3C 21 B7 FE    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
189)   0F3F CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
190)   0F41 C9          		 RET	;
192)   0F42 21 B7 FE    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
193)   0F45 CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
194)   0F47 C9          		 RET	;
196)   0F48 21 B7 FE    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
197)   0F4B 3E 40       		 LD A, $40       ; MASK	; MASK
198)   0F4D AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
199)   0F4E 77          		 LD (HL), A       ; SAVE	; SAVE
200)   0F4F AF          		 XOR A         ; NO KEY	; NO KEY
201)   0F50 C9          		 RET	;
203)   0F51 21 B7 FE    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
204)   0F54 3E 80       		 LD A, $80       ; MASK	; MASK
205)   0F56 AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
206)   0F57 77          		 LD (HL), A       ; SAVE	; SAVE
207)   0F58 AF          		 XOR A         ; NO KEY	; NO KEY
208)   0F59 C9          		 RET	;
210)   0F5A 21 B7 FE    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
211)   0F5D 3E 20       		 LD A, $20	;
212)   0F5F AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
213)   0F60 77          		 LD (HL), A       ; SAVE	; SAVE
214)   0F61 AF          		 XOR A         ; NO KEY	; NO KEY
215)   0F62 C9          		 RET	;
217)   0F63 21 B7 FE    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
218)   0F66 3E 10       		 LD A, $10	;
219)   0F68 AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
220)   0F69 77          		 LD (HL), A       ; SAVE	; SAVE
221)   0F6A AF          		 XOR A         ; NO KEY	; NO KEY
222)   0F6B C9          		 RET	;
226)   0F6C FE AA       		@PS2LOK: CP $AA	;
227)   0F6E 38 02       		 JR C,DOTRANS       ;ONLY 0-170	;ONLY 0-170
229)   0F70 AF          		 XOR A	;
230)   0F71 C9          		 RET	;
231)   0F72 21 A8 0F    		DOTRANS: LD HL, PS2TAB1      ;UNSHIFTED	;UNSHIFTED
232)   0F75 57          		 LD D,A        ;SAVE KEY CODE	;SAVE KEY CODE
233)   0F76 CD A2 0F    		 CALL PLK1       ;GET CHAR NO SHIFT NO CAPS	;GET CHAR NO SHIFT NO CAPS
234)   0F79 47          		 LD B,A        ;SAVE CHAR	;SAVE CHAR
235)   0F7A FE 61       		 CP 'a'	;
236)   0F7C 38 04       		 JR C,PS2CHKCAPS	;
237)   0F7E FE 7B       		PS2SGT: CP 'z'+1  	;
238)   0F80 38 09       		 JR C, PS2CPSF;ITS A LETTER CAPS AND SHIFT MATTERS	;ITS A LETTER CAPS AND SHIFT MATTERS
240)   0F82 3A B7 FE    		PS2CHKCAPS: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT  	; GET KEYBFLAGS ON A SHIFT
241)   0F85 CB 77       		 BIT 6, A	;
242)   0F87 78          		 LD A,B	;
243)   0F88 C8          		 RET Z        ;IF NO SHIFT RETURN TAB1 CHAR	;IF NO SHIFT RETURN TAB1 CHAR
245)   0F89 18 0F       		 JR PS2SHIFT	;
247)   0F8B 3A B7 FE    		PS2CPSF: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
248)   0F8E 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
249)   0F8F CB 1F       		 RR A	;
250)   0F91 CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
251)   0F93 A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
252)   0F94 CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED      	;CHECK IF BIT 4 IS 0 = UNSHIFTED
253)   0F96 20 02       		 JR NZ,PS2SHIFT	;
257)   0F98 78          		 LD A,B    	;
258)   0F99 C9          		 RET	;
259)   0F9A 7A          		PS2SHIFT: LD A, D       ;RESTORE A KEYCODE	;RESTORE A KEYCODE
260)   0F9B 21 52 10    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
261)   0F9E CD A2 0F    		 CALL PLK1       ;GET CHAR	;GET CHAR
262)   0FA1 C9          		 RET	;
263)   0FA2 06 00       		PLK1: LD B, 0	;
264)   0FA4 4F          		 LD C, A	;
265)   0FA5 09          		 ADD HL, BC	;
266)   0FA6 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
267)   0FA7 C9          		 RET	;
271)   0FA8 00 00 00 A5 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
271)   0FAC 00 00 00 00 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
271)   0FB0 00 00       		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
272)   0FB2 A8 A6 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
272)   0FB6 60 00 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
272)   0FBA 00 00       		 DB 168,166,0,0,'`',0,0,0,0,0	;
273)   0FBC 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
273)   0FC0 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
273)   0FC4 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
274)   0FC6 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
274)   0FCA 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
274)   0FCE 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
275)   0FD0 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
275)   0FD4 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
275)   0FD8 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
276)   0FDA 62 68 67 79 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
276)   0FDE 36 00 00 2C 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
276)   0FE2 6D 6A       		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
277)   0FE4 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
277)   0FE8 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
277)   0FEC 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
278)   0FEE 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
278)   0FF2 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
278)   0FF6 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
279)   0FF8 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
279)   0FFC 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
279)   1000 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
280)   1002 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
280)   1006 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
280)   100A 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
281)   100C 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
281)   1010 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
281)   1014 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
282)   1016 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
282)   101A 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
282)   101E 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
283)   1020 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
283)   1024 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
283)   1028 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
284)   102A 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
284)   102E 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
284)   1032 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
285)   1034 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
285)   1038 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
285)   103C 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
286)   103E 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
286)   1042 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
286)   1046 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
287)   1048 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
287)   104C 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
287)   1050 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
290)   1052 00 00 00 A5 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
290)   1056 00 00 00 00 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
290)   105A 00 00       		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
291)   105C A8 A6 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
291)   1060 7E 00 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
291)   1064 00 00       		 DB 168,166,0,0,'~',0,0,0,0,0	;
292)   1066 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
292)   106A 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
292)   106E 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
293)   1070 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
293)   1074 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
293)   1078 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
294)   107A 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
294)   107E 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
294)   1082 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
295)   1084 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
295)   1088 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
295)   108C 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
296)   108E 55 26 2A 00 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
296)   1092 00 3C 4B 49 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
296)   1096 4F 29       		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
297)   1098 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
297)   109C 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
297)   10A0 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
298)   10A2 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
298)   10A6 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
298)   10AA 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
299)   10AC 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
299)   10B0 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
299)   10B4 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
300)   10B6 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
300)   10BA 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
300)   10BE 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
301)   10C0 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
301)   10C4 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
301)   10C8 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
302)   10CA 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
302)   10CE 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
302)   10D2 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
303)   10D4 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
303)   10D8 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
303)   10DC 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
304)   10DE 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
304)   10E2 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
304)   10E6 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
305)   10E8 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
305)   10EC 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
305)   10F0 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
306)   10F2 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
306)   10F6 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
306)   10FA 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 46)   10FC 3E 03       		STRG_INIT: LD A, 3       ;38400 BPS	;38400 BPS
 47)   10FE CD 89 12    		 CALL STOR_INI	;
 48)   1101 C9          		 RET	;
 52)   1102 21 FB FE    		NEWCMD: LD HL, STRGCMD	;
 53)   1105 77          		 LD (HL), A	;
 54)   1106 23          		 INC HL	;
 55)   1107 E5          		 PUSH HL	;
 56)   1108 AF          		 XOR A	;
 57)   1109 06 03       		 LD B, 3	;
 58)   110B 77          		CCAGN: LD (HL), A	;
 59)   110C 23          		 INC HL	;
 60)   110D 10 FC       		 DJNZ CCAGN	;
 61)   110F E1          		 POP HL         ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 62)   1110 C9          		 RET	;
 65)   1111 CD EA 12    		SENDCMD: CALL FLUSHREC	;
 66)   1114 21 FB FE    		 LD HL, STRGCMD	;
 67)   1117 06 04       		 LD B, 4	;
 68)   1119 7E          		NXTBT: LD A, (HL)	;
 69)   111A CD B9 12    		 CALL STOR_TX	;
 70)   111D 23          		 INC HL	;
 71)   111E 10 F9       		 DJNZ NXTBT	;
 72)   1120 C9          		 RET	;
 74)   1121 3E 01       		STRG_OPENCRD: LD A, OPENCARD	;
 75)   1123 CD 02 11    		 CALL NEWCMD	;
 76)   1126 CD 11 11    		 CALL SENDCMD	;
 77)   1129 CD 89 2A    		 CALL DEL2	;
 78)   112C CD CC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
 79)   112F FE C9       		 CP FCMDOKTST	;
 80)   1131 3F          		 CCF	;
 81)   1132 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
 86)   1133 F5          		STRG_GETEOF: PUSH AF	;
 87)   1134 3E 0D       		 LD A, ENDOFFILE	;
 88)   1136 CD 02 11    		 CALL NEWCMD	;
 89)   1139 F1          		 POP AF	;
 90)   113A 77          		 LD (HL), A       ;FID	;FID
 91)   113B CD 11 11    		 CALL SENDCMD	;
 93)   113E CD CC 12    		 CALL STOR_RX       ;GET EOF	;GET EOF
 94)   1141 FE C9       		 CP FCMDOKTST	;
 95)   1143 3F          		 CCF	;
 96)   1144 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
101)   1145 F5          		STRG_GETSIZE: PUSH AF	;
102)   1146 3E 0C       		 LD A, FILESIZE	;
103)   1148 18 03       		 JR GT2BYTES	;
108)   114A F5          		STRG_GETPOS: PUSH AF	;
109)   114B 3E 09       		 LD A, POSITIONG	;
110)   114D CD 02 11    		GT2BYTES: CALL NEWCMD	;
111)   1150 F1          		 POP AF	;
112)   1151 77          		 LD (HL), A       ;FID	;FID
113)   1152 CD 11 11    		 CALL SENDCMD	;
115)   1155 CD CC 12    		 CALL STOR_RX       ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
116)   1158 67          		 LD H, A	;
117)   1159 CD CC 12    		 CALL STOR_RX       ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
118)   115C 6F          		 LD L, A	;
119)   115D CD CC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
120)   1160 FE C9       		 CP FCMDOKTST	;
121)   1162 3F          		 CCF	;
122)   1163 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
128)   1164 EB          		STRG_SETPOS: EX DE, HL	;
129)   1165 F5          		 PUSH AF	;
130)   1166 3E 08       		 LD A, POSITIONS	;
131)   1168 CD 02 11    		 CALL NEWCMD	;
132)   116B F1          		 POP AF	;
133)   116C 77          		 LD (HL), A       ;FID	;FID
134)   116D 23          		 INC HL	;
135)   116E 72          		 LD (HL), D       ;NEW POS ON DE	;NEW POS ON DE
136)   116F 23          		 INC HL	;
137)   1170 73          		 LD (HL), E	;
138)   1171 CD 11 11    		 CALL SENDCMD	;
139)   1174 CD 89 2A    		 CALL DEL2	;
140)   1177 CD CC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
141)   117A FE C9       		 CP FCMDOKTST	;
142)   117C 3F          		 CCF	;
143)   117D C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
148)   117E 3E 0A       		STRG_DIRLIST: LD A, LISTDIR	;
149)   1180 CD 02 11    		 CALL NEWCMD	;
150)   1183 CD 11 11    		 CALL SENDCMD	;
151)   1186 CD 89 2A    		 CALL DEL2	;
153)   1189 11 D3 FE    		 LD DE, STRGBUFF	;
154)   118C CD CC 12    		NXTCHR: CALL STOR_RX	;
155)   118F FE FF       		 CP 255	;
156)   1191 28 05       		 JR Z, DIROUT	;
158)   1193 CD 59 04    		 CALL OS_PRINTCHAR	;
159)   1196 18 F4       		 JR NXTCHR	;
160)   1198 CD 89 2A    		DIROUT: CALL DEL2	;
161)   119B CD CC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
162)   119E FE C9       		 CP FCMDOKTST	;
163)   11A0 3F          		 CCF	;
164)   11A1 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
168)   11A2 CD C2 12    		SENDFNAME: CALL STOR_TXT      ;SEND FILENAME	;SEND FILENAME
169)   11A5 AF          		 XOR A	;
170)   11A6 CD B9 12    		 CALL STOR_TX	;
171)   11A9 C9          		 RET	;
174)   11AA 3E 0B       		STRG_DIRCHG: LD A, CHANGEDIR	;
175)   11AC CD 02 11    		 CALL NEWCMD	;
176)   11AF CD 11 11    		 CALL SENDCMD	;
177)   11B2 21 D3 FE    		 LD HL, STRGBUFF	;
178)   11B5 CD A2 11    		 CALL SENDFNAME	;
179)   11B8 CD 89 2A    		 CALL DEL2	;
180)   11BB CD CC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
181)   11BE FE C9       		 CP FCMDOKTST	;
182)   11C0 3F          		 CCF	;
183)   11C1 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
187)   11C2 F5          		STRG_OPNFILE: PUSH AF	;
188)   11C3 3E 02       		 LD A, OPENFILE	;
189)   11C5 CD 02 11    		 CALL NEWCMD	;
190)   11C8 F1          		 POP AF	;
191)   11C9 23          		 INC HL        ;FID IS NOT SET YET	;FID IS NOT SET YET
192)   11CA 77          		 LD (HL), A       ;PARAM1	;PARAM1
193)   11CB CD 11 11    		 CALL SENDCMD	;
194)   11CE 21 D3 FE    		 LD HL, STRGBUFF	;
195)   11D1 CD A2 11    		 CALL SENDFNAME	;
196)   11D4 CD 89 2A    		 CALL DEL2	;
197)   11D7 CD CC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
199)   11DA 32 FF FE    		 LD (FID), A	;
200)   11DD FE C9       		 CP FCMDOKTST	;
201)   11DF 3F          		 CCF	;
202)   11E0 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
205)   11E1 F5          		STRG_CLSFILE: PUSH AF	;
206)   11E2 3E 03       		 LD A, CLOSEFILE	;
207)   11E4 CD 02 11    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
208)   11E7 F1          		 POP AF	;
209)   11E8 77          		 LD (HL), A       ;FID	;FID
210)   11E9 CD 11 11    		 CALL SENDCMD	;
211)   11EC CD CC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
212)   11EF FE C9       		 CP FCMDOKTST	;
213)   11F1 3F          		 CCF	;
214)   11F2 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
220)   11F3 F5          		STRG_BLKWRITE: PUSH AF	;
221)   11F4 3E 07       		 LD A, WRITEBLOCK	;
222)   11F6 CD 02 11    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
223)   11F9 F1          		 POP AF	;
224)   11FA 77          		 LD (HL), A       ;FID	;FID
225)   11FB 23          		 INC HL	;
227)   11FC 78          		 LD A, B        ;BYTES HI	;BYTES HI
228)   11FD 77          		 LD (HL), A	;
229)   11FE 23          		 INC HL	;
230)   11FF 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
231)   1200 77          		 LD (HL), A	;
232)   1201 CD 11 11    		 CALL SENDCMD        ;SEND BLOCKWRITE COMMAND BC BYTES	;SEND BLOCKWRITE COMMAND BC BYTES
233)   1204 EB          		 EX DE, HL	;
234)   1205 7E          		BWNXCH: LD A, (HL)	;
235)   1206 CD B9 12    		 CALL STOR_TX	;
236)   1209 23          		 INC HL	;
237)   120A 0B          		 DEC BC	;
238)   120B 78          		 LD A, B	;
239)   120C B1          		 OR C	;
240)   120D 20 F6       		 JR NZ, BWNXCH	;
241)   120F CD CC 12    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
242)   1212 FE C9       		 CP FCMDOKTST	;
243)   1214 3F          		 CCF	;
244)   1215 C9          		 RET	;
252)   1216 F5          		STRG_BLKREAD: PUSH AF	;
253)   1217 3E 06       		 LD A, READBLOCK	;
254)   1219 CD 02 11    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
255)   121C F1          		 POP AF	;
256)   121D 77          		 LD (HL), A       ;FID	;FID
257)   121E 23          		 INC HL	;
258)   121F 78          		 LD A, B        ;BYTES HI	;BYTES HI
259)   1220 77          		 LD (HL), A	;
260)   1221 23          		 INC HL	;
261)   1222 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
262)   1223 77          		 LD (HL), A	;
263)   1224 CD 11 11    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
264)   1227 CD 89 2A    		 CALL DEL2 	;
265)   122A CD CC 12    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
266)   122D 47          		 LD B, A	;
267)   122E CD CC 12    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
268)   1231 4F          		 LD C, A	;
269)   1232 78          		 LD A, B	;
270)   1233 B1          		 OR C	;
271)   1234 28 13       		 JR Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
273)   1236 C5          		 PUSH BC        ;SAVE BYTES TO RECEIVE	;SAVE BYTES TO RECEIVE
274)   1237 CD CC 12    		OFNXCH: CALL STOR_RX	;
275)   123A 12          		 LD (DE), A	;
276)   123B 13          		 INC DE	;
277)   123C 0B          		 DEC BC	;
278)   123D 78          		 LD A, B	;
279)   123E B1          		 OR C	;
280)   123F 20 F6       		 JR NZ, OFNXCH	;
281)   1241 CD CC 12    		OFEXIT: CALL STOR_RX        ;GET RESULT	;GET RESULT
282)   1244 C1          		 POP BC         ;TOTAL BYTES RECEIVED	;TOTAL BYTES RECEIVED
283)   1245 FE C9       		 CP FCMDOKTST	;
284)   1247 3F          		 CCF	;
285)   1248 C9          		 RET	;
287)   1249 18 F6       		 JR OFEXIT	;
291)   124B F5          		STRG_TPFILE: PUSH AF	;
292)   124C 3E 06       		 LD A, READBLOCK	;
293)   124E CD 02 11    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
294)   1251 F1          		 POP AF	;
295)   1252 77          		 LD (HL), A       ;FID	;FID
296)   1253 23          		 INC HL	;
297)   1254 78          		 LD A, B        ;BYTES HI	;BYTES HI
298)   1255 77          		 LD (HL), A	;
299)   1256 23          		 INC HL	;
300)   1257 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
301)   1258 77          		 LD (HL), A	;
302)   1259 CD 11 11    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
303)   125C CD 89 2A    		 CALL DEL2	;
304)   125F CD CC 12    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
305)   1262 47          		 LD B, A	;
306)   1263 CD CC 12    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
307)   1266 4F          		 LD C, A	;
308)   1267 78          		 LD A, B	;
309)   1268 B1          		 OR C	;
310)   1269 CA 49 12    		 JP Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
312)   126C 3E 0D       		 LD A, 13	;
313)   126E C5          		 PUSH BC	;
314)   126F CD 59 04    		 CALL OS_PRINTCHAR	;
315)   1272 C1          		 POP BC	;
316)   1273 CD CC 12    		TFOFNXCH: CALL STOR_RX       ;GET THE CHAR	;GET THE CHAR
317)   1276 C5          		 PUSH BC	;
318)   1277 CD 59 04    		 CALL OS_PRINTCHAR       ;PRINT TO SCREEN	;PRINT TO SCREEN
319)   127A C1          		 POP BC	;
320)   127B 0B          		 DEC BC	;
321)   127C 78          		 LD A, B	;
322)   127D B1          		 OR C	;
323)   127E 20 F3       		 JR NZ, TFOFNXCH	;
324)   1280 CD CC 12    		TFOFEXIT: CALL STOR_RX       ;GET RESULT	;GET RESULT
325)   1283 FE C9       		 CP FCMDOKTST	;
326)   1285 3F          		 CCF	;
327)   1286 C9          		 RET         ;C SET IF ERROR	;C SET IF ERROR
330)   1287 18 F7       		 JR TFOFEXIT	;
352)   1289 	            		 RBR EQU DEVSTOR+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
353)   1289 	            		 THR EQU DEVSTOR+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
354)   1289 	            		 IER EQU DEVSTOR+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
359)   1289 	            		 IIR EQU DEVSTOR+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
364)   1289 	            		 FCR EQU DEVSTOR+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
372)   1289 	            		 LCR EQU DEVSTOR+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
380)   1289 	            		 MCR EQU DEVSTOR+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
381)   1289 	            		 LSR EQU DEVSTOR+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
390)   1289 	            		 MSR EQU DEVSTOR+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
391)   1289 	            		 SCR EQU DEVSTOR+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
392)   1289 	            		 DLL EQU DEVSTOR+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
393)   1289 	            		 DLM EQU DEVSTOR+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
397)   1289 F5          		STOR_INI: PUSH AF	;
398)   128A 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
399)   128C D3 2B       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
407)   128E F1          		 POP AF	;
408)   128F D3 28       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
409)   1291 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
410)   1293 D3 29       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
411)   1295 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
412)   1297 D3 2B       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
414)   1299 3E 00       		 LD A, 0	;
415)   129B D3 2A       		 OUT (FCR), A        ;//was commented	;//was commented
416)   129D 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
417)   129F D3 29       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
418)   12A1 AF          		 XOR A         ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
419)   12A2 D3 2C       		 OUT (MCR), A	;
420)   12A4 C9          		 RET	;
426)   12A5 F5          		STORTXRD: PUSH AF	;
427)   12A6 DB 2D       		STORTXLP: IN A, (LSR)       ; fetch the control register	; fetch the control register
428)   12A8 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
429)   12AA 28 FA       		 JR Z, STORTXLP	;
430)   12AC F1          		 POP AF	;
431)   12AD C9          		 RET	;
434)   12AE F5          		WAITCTSLOW: PUSH AF	;
435)   12AF DB 2E       		TSTAGN: IN A, (MSR)	;
436)   12B1 CB 67       		 BIT 4, A        ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
437)   12B3 20 02       		 JR NZ, WCLEX	;
438)   12B5 18 F8       		 JR TSTAGN	;
439)   12B7 F1          		WCLEX: POP AF	;
440)   12B8 C9          		 RET	;
446)   12B9 CD AE 12    		 CALL WAITCTSLOW	;
451)   12BC CD A5 12    		 CALL STORTXRD	;
456)   12BF D3 28       		 OUT (THR), A	;
457)   12C1 C9          		 RET	;
460)   12C2 7E          		STOR_TXT: LD A, (HL)	;
461)   12C3 23          		 INC HL	;
462)   12C4 FE 00       		 CP 0	;
463)   12C6 C8          		 RET Z	;
464)   12C7 CD B9 12    		 CALL STOR_TX	;
465)   12CA 18 F6       		 JR STOR_TXT	;
472)   12CC F3          		STOR_RX: DI	;
473)   12CD 3E 02       		 LD A, 2        ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
474)   12CF D3 2C       		 OUT (MCR), A	;
475)   12D1 CD F5 12    		 CALL STORRXRD	;
476)   12D4 AF          		STOR_GTCH: XOR A        ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
477)   12D5 D3 2C       		 OUT (MCR), A	;
478)   12D7 DB 28       		 IN A, (RBR)	;
479)   12D9 FB          		 EI	;
480)   12DA C9          		 RET	;
482)   12DB 3E 02       		STOR_RXNW: LD A, 2       ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
483)   12DD D3 2C       		 OUT (MCR), A	;
484)   12DF DB 2D       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
485)   12E1 CB 47       		 BIT 0, A	;
486)   12E3 28 03       		 JR Z, STOR_NOCHAR	;
487)   12E5 F3          		 DI	;
488)   12E6 18 EC       		 JR STOR_GTCH	;
489)   12E8 AF          		STOR_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
490)   12E9 C9          		 RET	;
492)   12EA 06 0A       		FLUSHREC: LD B, 10	;
493)   12EC CD DB 12    		FRAGN: CALL STOR_RXNW	;
494)   12EF 10 FB       		 DJNZ FRAGN	;
495)   12F1 AF          		 XOR A	;
496)   12F2 D3 2C       		 OUT (MCR), A	;
497)   12F4 C9          		 RET	;
503)   12F5 F3          		STORRXRD: DI	;
504)   12F6 F5          		 PUSH AF	;
505)   12F7 DB 2D       		STORRXLP: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
506)   12F9 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
507)   12FB 28 FA       		 JR Z, STORRXLP	;
508)   12FD F1          		 POP AF	;
509)   12FE FB          		 EI	;
510)   12FF C9          		 RET	;
514)   1300 DB 2D       		STOR_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
515)   1302 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
516)   1304 C9          		 RET	;
  7)   1305 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  8)   1305 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
  9)   1305 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 10)   1305 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 11)   1305 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 56)   1305 C5          		I2C_RDSTAT_WT: PUSH BC	;
 57)   1306 01 00 20    		 LD BC, $2000	;
 58)   1309 DB 73       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 59)   130B CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 60)   130D 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 61)   130F 0B          		 DEC BC	;
 62)   1310 78          		 LD A, B	;
 63)   1311 B1          		 OR C	;
 64)   1312 20 F5       		 JR NZ, I2CRWT_AGN	;
 65)   1314 C1          		I2CRWT_OK: POP BC	;
 66)   1315 DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 67)   1317 C9          		 RET	;
 69)   1318 DB 73       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 70)   131A CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 71)   131C 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 72)   131E C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 73)   131F DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 74)   1321 C9          		 RET	;
 77)   1322 3E 01       		I2C_INIT: LD A, I2CADR	;
 78)   1324 D3 70       		 OUT (DI2C_INDPTR), A	;
 79)   1326 3E E0       		 LD A, $E0	;
 80)   1328 D3 72       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 82)   132A 3E 40       		 LD A, $40        ;INIT	;INIT
 83)   132C D3 73       		 OUT (DI2C_CON), A      ;	;
 84)   132E 06 FA       		 LD B, 250	;
 85)   1330 CD 76 2A    		 CALL DELAYMICRO	;
 86)   1333 06 FA       		 LD B, 250	;
 87)   1335 CD 76 2A    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 92)   1338 3E 06       		 LD A, I2CMODE	;
 93)   133A D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 94)   133C 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 95)   133E D3 72       		 OUT (DI2C_INDIR), A	;
 96)   1340 3E 02       		 LD A, I2CSCLL	;
 97)   1342 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 98)   1344 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
 99)   1346 D3 72       		 OUT (DI2C_INDIR), A	;
100)   1348 3E 03       		 LD A, I2CSCLH	;
101)   134A D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
102)   134C 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
103)   134E D3 72       		 OUT (DI2C_INDIR), A	;
105)   1350 C9          		 RET	;
112)   1351 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
113)   1353 D3 73       		 OUT (DI2C_CON), A	;
114)   1355 CD 05 13    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
115)   1358 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
116)   1359 FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
117)   135B 28 21       		 JR Z, WRB_S1	;
118)   135D FE 10       		 CP MASTER_RESTART_TXed	;
119)   135F 28 1D       		 JR Z, WRB_S1	;
120)   1361 FE 28       		 CP MASTER_DATA_W_ACK	;
121)   1363 28 26       		 JR Z, WRB_S2	;
122)   1365 FE 18       		 CP MASTER_SLA_W_ACK	;
123)   1367 28 23       		 JR Z, WRB_S3	;
124)   1369 FE 20       		 CP MASTER_SLA_W_NAK	;
125)   136B 28 2D       		 JR Z, WRB_EXIT	;
126)   136D FE 30       		 CP MASTER_DATA_W_NAK	;
127)   136F 28 29       		 JR Z, WRB_EXIT	;
128)   1371 FE 38       		 CP MASTER_ARB_LOST	;
129)   1373 C8          		 RET Z	;
130)   1374 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
131)   1376 C8          		 RET Z	;
132)   1377 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
133)   1379 C8          		 RET Z	;
134)   137A FE D8       		 CP SLAVE_GENERALCALL_AL	;
135)   137C C8          		 RET Z	;
136)   137D C9          		 RET	;
138)   137E 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
139)   137F CB 27       		 SLA A	;
140)   1381 E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
141)   1383 D3 71       		 OUT (DI2C_DAT), A	;
142)   1385 3E 40       		 LD A, $40	;
143)   1387 D3 73       		 OUT (DI2C_CON), A	;
144)   1389 18 CA       		 JR WRB_LP1	;
145)   138B 0B          		WRB_S2: DEC BC	;
146)   138C 78          		WRB_S3: LD A, B	;
147)   138D B1          		 OR C	;
148)   138E 28 0A       		 JR Z, WRB_EXIT	;
149)   1390 7E          		 LD A, (HL)	;
150)   1391 23          		 INC HL	;
151)   1392 D3 71       		 OUT (DI2C_DAT), A	;
152)   1394 3E 40       		 LD A, $40	;
153)   1396 D3 73       		 OUT (DI2C_CON), A	;
154)   1398 18 BB       		 JR WRB_LP1	;
156)   139A 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
157)   139C D3 73       		 OUT (DI2C_CON), A	;
158)   139E 78          		 LD A, B	;
159)   139F B1          		 OR C	;
160)   13A0 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
166)   13A1 78          		I2C_RD_BYTE: LD A, B	;
167)   13A2 B1          		 OR C	;
168)   13A3 C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
169)   13A4 3E 60       		 LD A, $60	;
170)   13A6 D3 73       		 OUT (DI2C_CON), A	;
171)   13A8 CD 05 13    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
172)   13AB 1E 00       		 LD E, 0	;
173)   13AD FE 08       		 CP MASTER_START_TXed	;
174)   13AF 28 1F       		 JR Z, RDB_S1	;
176)   13B1 28 1D       		 JR Z, RDB_S1	;
177)   13B3 FE 58       		 CP MASTER_DATA_R_NAK	;
178)   13B5 28 26       		 JR Z, RDB_S2	;
179)   13B7 FE 50       		 CP MASTER_DATA_R_ACK	;
180)   13B9 28 24       		 JR Z, RDB_S3	;
181)   13BB FE 40       		 CP MASTER_SLA_R_ACK	;
182)   13BD 28 25       		 JR Z, RDB_S4	;
183)   13BF FE 48       		 CP MASTER_SLA_R_NAK	;
184)   13C1 28 38       		 JR Z, RDB_EXIT	;
185)   13C3 FE 38       		 CP MASTER_ARB_LOST	;
186)   13C5 C8          		 RET Z	;
187)   13C6 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
188)   13C8 C8          		 RET Z	;
189)   13C9 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
190)   13CB C8          		 RET Z	;
191)   13CC FE D8       		 CP SLAVE_GENERALCALL_AL	;
192)   13CE C8          		 RET Z	;
193)   13CF C9          		 RET	;
196)   13D0 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
197)   13D1 CB 27       		 SLA A	;
198)   13D3 F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
199)   13D5 D3 71       		 OUT (DI2C_DAT), A	;
200)   13D7 3E 40       		 LD A, $40	;
201)   13D9 D3 73       		 OUT (DI2C_CON), A	;
202)   13DB 18 CB       		 JR RDB_LP1	;
203)   13DD 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
204)   13DF DB 71       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
205)   13E1 77          		 LD (HL), A	;
206)   13E2 23          		 INC HL	;
207)   13E3 0B          		 DEC BC	;
208)   13E4 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
209)   13E5 B1          		 OR C	;
210)   13E6 28 13       		 JR Z, RDB_EXIT	;
211)   13E8 7B          		 LD A, E	;
212)   13E9 FE 01       		 CP 1	;
213)   13EB 28 0E       		 JR Z, RDB_EXIT	;
214)   13ED 78          		 LD A, B	;
215)   13EE 81          		 ADD C	;
216)   13EF FE 01       		 CP 1	;
217)   13F1 3E 40       		 LD A, $40	;
218)   13F3 28 02       		 JR Z, RDB_NXT1	;
219)   13F5 3E C0       		 LD A, $C0	;
220)   13F7 D3 73       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
221)   13F9 18 AD       		 JR RDB_LP1	;
223)   13FB 3E 50       		RDB_EXIT: LD A, $50	;
224)   13FD D3 73       		 OUT (DI2C_CON), A	;
225)   13FF 78          		 LD A, B	;
226)   1400 B1          		 OR C	;
227)   1401 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
 29)   1402 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 29)   1406 61 79       		 SUN DEFM  "Sunday"	;
 30)   1408 00          		 DB 0	;
 31)   1409 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 31)   140D 61 79       		 MON DEFM  "Monday"	;
 32)   140F 00          		 DB 0	;
 33)   1410 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 33)   1414 64 61 79    		 TUE DEFM  "Tuesday"	;
 34)   1417 00          		 DB 0	;
 35)   1418 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 35)   141C 65 73 64 61 		 WED DEFM  "Wednesday"	;
 35)   1420 79          		 WED DEFM  "Wednesday"	;
 36)   1421 00          		 DB 0	;
 37)   1422 54 68 75 72 		 THU DEFM  "Thursday"	;
 37)   1426 73 64 61 79 		 THU DEFM  "Thursday"	;
 38)   142A 00          		 DB 0	;
 39)   142B 46 72 69 64 		 FRI DEFM  "Friday"	;
 39)   142F 61 79       		 FRI DEFM  "Friday"	;
 40)   1431 00          		 DB 0	;
 41)   1432 53 61 74 75 		 SAT DEFM  "Saturday"	;
 41)   1436 72 64 61 79 		 SAT DEFM  "Saturday"	;
 42)   143A 00          		 DB 0	;
 44)   143B 02 14       		 DAYS DEFW SUN	;
 45)   143D 09 14       		 DEFW MON	;
 46)   143F 10 14       		 DEFW TUE	;
 47)   1441 18 14       		 DEFW WED	;
 48)   1443 22 14       		 DEFW THU	;
 49)   1445 2B 14       		 DEFW FRI	;
 50)   1447 32 14       		 DEFW SAT	;
 52)   1449 52 54 43 20 		 MESERR DEFM "RTC ERR ON RECV"	;
 52)   144D 45 52 52 20 		 MESERR DEFM "RTC ERR ON RECV"	;
 52)   1451 4F 4E 20 52 		 MESERR DEFM "RTC ERR ON RECV"	;
 52)   1455 45 43 56    		 MESERR DEFM "RTC ERR ON RECV"	;
 53)   1458 0A 0D 00    		 DEFB 10,13,0	;
 55)   145B 52 54 43 20 		 MESERR0 DEFM "RTC ERR ON SEND"	;
 55)   145F 45 52 52 20 		 MESERR0 DEFM "RTC ERR ON SEND"	;
 55)   1463 4F 4E 20 53 		 MESERR0 DEFM "RTC ERR ON SEND"	;
 55)   1467 45 4E 44    		 MESERR0 DEFM "RTC ERR ON SEND"	;
 56)   146A 0A 0D 00    		 DEFB 10,13,0	;
 58)   146D 7B          		SHERR0: LD A, E	;
 59)   146E C5          		 PUSH BC	;
 60)   146F CD 0E 06    		 CALL SOUTAS	;
 61)   1472 C1          		 POP BC	;
 62)   1473 79          		 LD A, C	;
 63)   1474 CD 0E 06    		 CALL SOUTAS	;
 65)   1477 21 5B 14    		 LD HL, MESERR0	;
 66)   147A CD E6 0D    		 CALL RS_TXT	;
 67)   147D C9          		 RET	;
 70)   147E 79          		SHERR: LD A, C	;
 71)   147F CD 0E 06    		 CALL SOUTAS	;
 72)   1482 21 49 14    		 LD HL, MESERR	;
 73)   1485 CD E6 0D    		 CALL RS_TXT	;
 74)   1488 37          		 SCF	;
 75)   1489 C9          		 RET	;
 78)   148A AF          		RST_BUF: XOR A	;
 79)   148B 06 14       		 LD B, 20	;
 80)   148D 21 8A FE    		 LD HL, BUFFER	;
 81)   1490 77          		LP1: LD (HL), A	;
 82)   1491 23          		 INC HL	;
 83)   1492 10 FC       		 DJNZ LP1	;
 84)   1494 C9          		 RET	;
 86)   1495 64 64 2F 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   1499 6D 2F 79 79 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   149D 20 77 20 68 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   14A1 68 3A 6D 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   14A5 3A 73 73    		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 89)   14A8 21 95 14    		DS1307_INIT: LD HL,DATEMASK	;
 90)   14AB 11 A0 FE    		 LD DE,TIMMSG	;
 91)   14AE 01 11 00    		 LD BC,17	;
 92)   14B1 ED B0       		 LDIR        	;
 93)   14B3 C9          		 RET	;
 95)   14B4 21 8A FE    		DS1307_GETNOW: LD HL, BUFFER	;
 96)   14B7 AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 97)   14B8 77          		 LD (HL), A	;
 98)   14B9 16 68       		 LD D, DS1307_ADDRESS	;
 99)   14BB 01 01 00    		 LD BC, 1	;
100)   14BE CD 51 13    		 CALL I2C_WRITE	;
101)   14C1 C2 6D 14    		 JP NZ, SHERR0	;
103)   14C4 21 8A FE    		 LD HL, BUFFER	;
104)   14C7 16 68       		 LD D, DS1307_ADDRESS	;
105)   14C9 01 07 00    		 LD BC, 7	;
106)   14CC CD A1 13    		 CALL I2C_READ	;
107)   14CF C2 7E 14    		 JP NZ, SHERR	;
108)   14D2 AF          		 XOR A	;
109)   14D3 C9          		 RET	;
113)   14D4 11 8A FE    		DS1307_SETTIME: LD DE, BUFFER	;
114)   14D7 AF          		 XOR A	;
115)   14D8 12          		 LD (DE), A	;
116)   14D9 13          		 INC DE	;
117)   14DA 21 B1 FE    		 LD HL,TIMMSG+17  ;SS	;SS
118)   14DD CD 0B 15    		 CALL SETTMPARAM	;
119)   14E0 21 AE FE    		 LD HL,TIMMSG+14  ;MN	;MN
120)   14E3 CD 0B 15    		 CALL SETTMPARAM	;
121)   14E6 21 AB FE    		 LD HL,TIMMSG+11  ;HH	;HH
122)   14E9 CD 0B 15    		 CALL SETTMPARAM	;
123)   14EC 21 A9 FE    		 LD HL,TIMMSG+9  ;D OF WEEK 1-7	;D OF WEEK 1-7
124)   14EF CD 0B 15    		 CALL SETTMPARAM	;
125)   14F2 21 A0 FE    		 LD HL,TIMMSG  ;DD	;DD
126)   14F5 CD 0B 15    		 CALL SETTMPARAM	;
127)   14F8 21 A3 FE    		 LD HL,TIMMSG+3  ;MM	;MM
128)   14FB CD 0B 15    		 CALL SETTMPARAM	;
129)   14FE 21 A6 FE    		 LD HL,TIMMSG+6  ;YY	;YY
130)   1501 CD 0B 15    		 CALL SETTMPARAM	;
131)   1504 3E 00       		 LD A,0	;
132)   1506 12          		 LD (DE), A	;
133)   1507 CD 53 15    		 CALL DS1307_ADJUST	;
134)   150A C9          		 RET	;
136)   150B D5          		SETTMPARAM: PUSH DE	;
137)   150C CD 2C 2C    		 CALL strtob	;
138)   150F D1          		 POP DE	;
139)   1510 CD BD 2A    		 CALL BN2BCD	;
140)   1513 7D          		 LD A,L	;
141)   1514 12          		 LD (DE),A	;
142)   1515 13          		 INC DE  	;
143)   1516 C9          		 RET	;
148)   1517 11 8A FE    		 LD DE, BUFFER	;
149)   151A AF          		 XOR A	;
150)   151B 12          		 LD (DE), A	;
151)   151C 13          		 INC DE	;
152)   151D 3E 0A       		 LD A, 10        ; 10 SECS	; 10 SECS
153)   151F CD BD 2A    		 CALL BN2BCD	;
154)   1522 7D          		 LD A, L	;
155)   1523 12          		 LD (DE), A	;
156)   1524 13          		 INC DE	;
157)   1525 3E 22       		 LD A, 34        ; 28 MINS	; 28 MINS
158)   1527 CD BD 2A    		 CALL BN2BCD	;
159)   152A 7D          		 LD A, L	;
160)   152B 12          		 LD (DE), A	;
161)   152C 13          		 INC DE	;
162)   152D 3E 12       		 LD A, 18        ; 19 HOURS	; 19 HOURS
163)   152F CD BD 2A    		 CALL BN2BCD	;
164)   1532 7D          		 LD A, L	;
165)   1533 12          		 LD (DE), A	;
166)   1534 13          		 INC DE	;
167)   1535 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
168)   1537 12          		 LD (DE), A	;
169)   1538 13          		 INC DE	;
170)   1539 3E 12       		 LD A, 18        ; 8 DAY	; 8 DAY
171)   153B CD BD 2A    		 CALL BN2BCD	;
172)   153E 7D          		 LD A, L	;
173)   153F 12          		 LD (DE), A	;
174)   1540 13          		 INC DE	;
175)   1541 3E 02       		 LD A, 02        ; 10 MONTH	; 10 MONTH
176)   1543 CD BD 2A    		 CALL BN2BCD	;
177)   1546 7D          		 LD A, L	;
178)   1547 12          		 LD (DE), A	;
179)   1548 13          		 INC DE	;
180)   1549 3E 15       		 LD A, 21        ; 21 YEAR (2020)	; 21 YEAR (2020)
181)   154B CD BD 2A    		 CALL BN2BCD	;
182)   154E 7D          		 LD A, L	;
183)   154F 12          		 LD (DE), A	;
184)   1550 13          		 INC DE	;
185)   1551 AF          		 XOR A	;
186)   1552 12          		 LD (DE), A	;
199)   1553 21 8A FE    		DS1307_ADJUST: LD HL, BUFFER	;
200)   1556 16 68       		 LD D, DS1307_ADDRESS	;
201)   1558 01 09 00    		 LD BC, 9	;
202)   155B CD 51 13    		 CALL I2C_WRITE	;
203)   155E C2 6D 14    		 JP NZ, SHERR0	;
204)   1561 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
205)   1564 CD 3A 2B    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
206)   1567 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
207)   156A CD 3A 2B    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
208)   156D C9          		 RET	;
212)   156E 21 8A FE    		DS1307_SETSQ: LD HL, BUFFER	;
213)   1571 E5          		 PUSH HL	;
214)   1572 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
215)   1574 77          		 LD (HL), A	;
216)   1575 23          		 INC HL	;
217)   1576 7A          		 LD A, D	;
218)   1577 77          		 LD (HL), A	;
219)   1578 E1          		 POP HL	;
220)   1579 16 68       		 LD D, DS1307_ADDRESS	;
221)   157B 01 02 00    		 LD BC, 2	;
222)   157E CD 51 13    		 CALL I2C_WRITE	;
223)   1581 C2 6D 14    		 JP NZ, SHERR0	;
224)   1584 C9          		 RET	;
228)   1585 CD 24 2B    		CONVHL: CALL Bcd2ASC	;
229)   1588 26 00       		 LD H, 0	;
230)   158A C9          		 RET	;
233)   158B 06 07       		CHKERROR: LD B, 7	;
234)   158D 21 8A FE    		 LD HL, BUFFER	;
235)   1590 7E          		CEAGN: LD A, (HL)	;
236)   1591 FE FF       		 CP $FF	;
237)   1593 28 05       		 JR Z, STER	;
238)   1595 23          		 INC HL	;
239)   1596 10 F8       		 DJNZ CEAGN	;
240)   1598 AF          		 XOR A	;
241)   1599 C9          		 RET	;
244)   159A 37          		 SCF	;
245)   159B C9          		 RET	;
250)   159C CD 8A 14    		DS1307_GETTIME: CALL RST_BUF	;
251)   159F CD B4 14    		 CALL DS1307_GETNOW	;
252)   15A2 D8          		 RET C         ;ERROR RETURN	;ERROR RETURN
253)   15A3 CD 8B 15    		 CALL CHKERROR	;
254)   15A6 D8          		 RET C         ;ERRREAD  ;IF ERROR DONT PRINT	;ERRREAD  ;IF ERROR DONT PRINT
255)   15A7 DD 21 8A FE 		 LD IX, BUFFER	;
256)   15AB 11 A0 FE    		 LD DE, TIMMSG	;
257)   15AE 26 00       		 LD H, 0	;
258)   15B0 DD 6E 04    		 LD L, (IX + 4)        ;DAY	;DAY
259)   15B3 CD 85 15    		 CALL CONVHL	;
260)   15B6 3E 2F       		 LD A, ' / '	;
261)   15B8 12          		 LD (DE), A	;
262)   15B9 13          		 INC DE	;
263)   15BA DD 6E 05    		 LD L, (IX + 5)        ;MONTH	;MONTH
264)   15BD CD 85 15    		 CALL CONVHL	;
265)   15C0 3E 2F       		 LD A, ' / '	;
266)   15C2 12          		 LD (DE), A	;
267)   15C3 13          		 INC DE	;
268)   15C4 DD 6E 06    		 LD L, (IX + 6)        ;YEAR	;YEAR
269)   15C7 CD 85 15    		 CALL CONVHL	;
270)   15CA 3E 20       		 LD A, ' '	;
271)   15CC 12          		 LD (DE), A	;
272)   15CD 13          		 INC DE	;
273)   15CE DD 6E 02    		 LD L, (IX + 2)        ;HOUR	;HOUR
274)   15D1 CD 85 15    		 CALL CONVHL	;
275)   15D4 3E 3A       		 LD A, ':'	;
276)   15D6 12          		 LD (DE), A	;
277)   15D7 13          		 INC DE	;
278)   15D8 DD 6E 01    		 LD L, (IX + 1)        ;MIN	;MIN
279)   15DB CD 85 15    		 CALL CONVHL	;
280)   15DE 3E 3A       		 LD A, ':'	;
281)   15E0 12          		 LD (DE), A	;
282)   15E1 13          		 INC DE	;
283)   15E2 DD 6E 00    		 LD L, (IX)        ;SECS	;SECS
284)   15E5 CD 85 15    		 CALL CONVHL	;
285)   15E8 13          		 INC DE	;
286)   15E9 AF          		 XOR A	;
287)   15EA 12          		 LD (DE), A	;
288)   15EB C9          		 RET	;
112)   15EC 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
114)   15EE 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
115)   15EF 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
116)   15F1 CB E2       		 SET D4, D	;
117)   15F3 0F          		LWNXT1: RRCA	;
118)   15F4 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
119)   15F6 CB EA       		 SET D5, D	;
120)   15F8 0F          		LWNXT2: RRCA	;
121)   15F9 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
122)   15FB CB F2       		 SET D6, D	;
123)   15FD 0F          		LWNXT3: RRCA	;
124)   15FE 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
125)   1600 CB FA       		 SET D7, D	;
126)   1602 7B          		LWNXT4: LD A, E	;
127)   1603 0F          		 RRCA	;
128)   1604 30 02       		 JR NC, LWNXT5	;
129)   1606 CB C2       		 SET RS, D	;
131)   1608 3A 89 FE    		 LD A,(LCD_STSMASK)       ;ADD THE BACKLIGHT MASKS  	;ADD THE BACKLIGHT MASKS
132)   160B B2          		 OR D	;
133)   160C 57          		 LD D,A	;
135)   160D CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
136)   160F 7A          		 LD A, D	;
137)   1610 CD 1A 16    		 CALL LCD16_I2CSEND	;
138)   1613 CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
139)   1615 7A          		 LD A, D	;
140)   1616 CD 1A 16    		 CALL LCD16_I2CSEND	;
141)   1619 C9          		 RET	;
145)   161A D5          		LCD16_I2CSEND: PUSH DE	;
146)   161B E5          		 PUSH HL	;
147)   161C 21 8A FE    		 LD HL, BUFFER	;
148)   161F 77          		 LD (HL), A	;
149)   1620 16 27       		 LD D, LCDADDR	;
150)   1622 01 01 00    		 LD BC, 1	;
151)   1625 CD 51 13    		 CALL I2C_WRITE	;
152)   1628 E1          		 POP HL	;
153)   1629 D1          		 POP DE	;
154)   162A C9          		 RET	;
157)   162B 1E 00       		LCD16_COMMD: LD E, COMMAND	;
158)   162D 18 02       		 JR LCD16_SEND	;
161)   162F 1E 01       		LCD16_DATA: LD E, LCD_DATA 	;
164)   1631 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
165)   1632 7B          		 LD A, E	;
166)   1633 0F          		 RRCA	;
167)   1634 38 07       		 JR C, ISCMDDATA	;
168)   1636 0F          		 RRCA	;
169)   1637 30 04       		 JR NC, ISCMDDATA	;
171)   1639 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
172)   163B 18 0E       		 JR LCSD_4BIT	;
173)   163D 7A          		ISCMDDATA: LD A, D	;
174)   163E CB 3F       		 SRL A	;
175)   1640 CB 3F       		 SRL A	;
176)   1642 CB 3F       		 SRL A	;
177)   1644 CB 3F       		 SRL A	;
178)   1646 D5          		 PUSH DE	;
179)   1647 CD EC 15    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
180)   164A D1          		 POP DE	;
181)   164B 7A          		LCSD_4BIT: LD A, D	;
182)   164C E6 0F       		 AND $0F	;
183)   164E CD EC 15    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
184)   1651 C9          		 RET	;
186)   1652 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
187)   1654 1E 02       		 LD E, FOUR_BITS	;
188)   1656 CD 31 16    		 CALL LCD16_SEND	;
189)   1659 01 00 30    		 LD BC, $3000	;
190)   165C CD 3A 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
191)   165F 3E 03       		 LD A, 3	;
192)   1661 1E 02       		 LD E, FOUR_BITS	;
193)   1663 CD 31 16    		 CALL LCD16_SEND	;
194)   1666 01 00 30    		 LD BC, $3000	;
195)   1669 CD 3A 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
196)   166C 3E 03       		 LD A, 3	;
197)   166E 1E 02       		 LD E, FOUR_BITS	;
198)   1670 CD 31 16    		 CALL LCD16_SEND	;
199)   1673 01 00 30    		 LD BC, $3000	;
200)   1676 CD 3A 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
201)   1679 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
202)   167B 1E 02       		 LD E, FOUR_BITS	;
203)   167D CD 31 16    		 CALL LCD16_SEND	;
204)   1680 01 00 30    		 LD BC, $3000	;
205)   1683 CD 3A 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
207)   1686 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
208)   1688 CD 2B 16    		 CALL LCD16_COMMD	;
209)   168B 3E 02       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
210)   168D 32 87 FE    		 LD (LCD_DSPCTRL), A	;
211)   1690 CD B8 16    		 CALL LCD16_DISP	;
212)   1693 CD D3 16    		 CALL LCD16_CLR	;
213)   1696 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
214)   1698 32 88 FE    		 LD (LCD_DSPMODE), A	;
215)   169B F6 04       		 OR LCD_ENTRYMODESET	;
216)   169D CD 2B 16    		 CALL LCD16_COMMD	;
217)   16A0 01 00 30    		 LD BC, $3000	;
218)   16A3 CD 3A 2B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
219)   16A6 CD 56 17    		 CALL LCD16_BKLTON      ;BACKLIGHT ON BY DEFAULT	;BACKLIGHT ON BY DEFAULT
220)   16A9 C9          		 RET	;
222)   16AA 3A 87 FE    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
223)   16AD CB 97       		 RES LCD_DISPLAYON, A	;
224)   16AF 32 87 FE    		 LD (LCD_DSPCTRL), A	;
225)   16B2 F6 08       		 OR LCD_DISPLAYCONTROL	;
226)   16B4 CD 2B 16    		 CALL LCD16_COMMD	;
227)   16B7 C9          		 RET	;
228)   16B8 3A 87 FE    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
229)   16BB CB D7       		 SET LCD_DISPLAYON, A	;
230)   16BD 32 87 FE    		 LD (LCD_DSPCTRL), A	;
231)   16C0 F6 08       		 OR LCD_DISPLAYCONTROL	;
232)   16C2 CD 2B 16    		 CALL LCD16_COMMD	;
233)   16C5 C9          		 RET	;
235)   16C6 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
236)   16C9 C5          		LCLR_AGN1: PUSH BC	;
237)   16CA CD 76 2A    		 CALL DELAYMICRO	;
238)   16CD C1          		 POP BC	;
239)   16CE 0D          		 DEC C	;
240)   16CF E2 C9 16    		 JP PO, LCLR_AGN1	;
241)   16D2 C9          		 RET	;
243)   16D3 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
244)   16D5 CD 2B 16    		 CALL LCD16_COMMD	;
245)   16D8 CD C6 16    		 CALL LCDDELAY	;
246)   16DB C9          		 RET	;
249)   16DC 7E          		@LCD16_PRINT: LD A, (HL)	;
250)   16DD FE 00       		 CP 0	;
251)   16DF C8          		 RET Z	;
252)   16E0 CD 2F 16    		 CALL LCD16_DATA	;
253)   16E3 23          		 INC HL	;
254)   16E4 18 F6       		 JR LCD16_PRINT	;
257)   16E6 CD 2F 16    		@LCD16_PRCHR: CALL LCD16_DATA	;
258)   16E9 C9          		 RET	;
260)   16EA 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
261)   16EC CD 2B 16    		 CALL LCD16_COMMD	;
262)   16EF CD C6 16    		 CALL LCDDELAY	;
263)   16F2 C9          		 RET	;
266)   16F3 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
267)   16F7 06 00       		@LCD16_SETCURS: LD B, 0	;
268)   16F9 4B          		 LD C, E	;
269)   16FA 21 F3 16    		 LD HL, ROWOFFSET	;
270)   16FD 09          		 ADD HL, BC	;
271)   16FE 7E          		 LD A, (HL)	;
272)   16FF 82          		 ADD D	;
273)   1700 F6 80       		 OR LCD_SETDDRAMADDR	;
274)   1702 CD 2B 16    		 CALL LCD16_COMMD	;
275)   1705 C9          		 RET	;
277)   1706 3A 87 FE    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
278)   1709 CB 8F       		 RES LCD_CURSORON, A	;
279)   170B 32 87 FE    		 LD (LCD_DSPCTRL), A	;
280)   170E F6 08       		 OR LCD_DISPLAYCONTROL	;
281)   1710 CD 2B 16    		 CALL LCD16_COMMD	;
282)   1713 C9          		 RET	;
285)   1714 3A 87 FE    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
286)   1717 CB CF       		 SET LCD_CURSORON, A	;
287)   1719 32 87 FE    		 LD (LCD_DSPCTRL), A	;
288)   171C F6 08       		 OR LCD_DISPLAYCONTROL	;
289)   171E CD 2B 16    		 CALL LCD16_COMMD	;
290)   1721 C9          		 RET	;
292)   1722 3A 87 FE    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
293)   1725 CB 87       		 RES LCD_BLINKON, A	;
294)   1727 32 87 FE    		 LD (LCD_DSPCTRL), A	;
295)   172A F6 08       		 OR LCD_DISPLAYCONTROL	;
296)   172C CD 2B 16    		 CALL LCD16_COMMD	;
297)   172F C9          		 RET	;
300)   1730 3A 87 FE    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
301)   1733 CB C7       		 SET LCD_BLINKON, A	;
302)   1735 32 87 FE    		 LD (LCD_DSPCTRL), A	;
303)   1738 F6 08       		 OR LCD_DISPLAYCONTROL	;
304)   173A CD 2B 16    		 CALL LCD16_COMMD	;
305)   173D C9          		 RET	;
307)   173E 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
308)   1740 CD 2B 16    		 CALL LCD16_COMMD	;
309)   1743 C9          		 RET	;
311)   1744 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
312)   1746 CD 2B 16    		 CALL LCD16_COMMD	;
313)   1749 C9          		 RET	;
315)   174A 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
316)   174C CD 2B 16    		 CALL LCD16_COMMD	;
317)   174F C9          		 RET	;
319)   1750 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
320)   1752 CD 2B 16    		 CALL LCD16_COMMD	;
321)   1755 C9          		 RET	;
324)   1756 3E 08       		@LCD16_BKLTON: LD A, BACKLIGHTPINMASK AND LCD_BACKLIGHT	;
325)   1758 32 89 FE    		 LD (LCD_STSMASK),A	;
326)   175B CD 1A 16    		 CALL LCD16_I2CSEND	;
327)   175E C9          		 RET	;
329)   175F 3E 00       		@LCD16_BKLTOFF: LD A, BACKLIGHTPINMASK AND LCD_NOBACKLIGHT	;
330)   1761 32 89 FE    		 LD (LCD_STSMASK),A	;
331)   1764 CD 1A 16    		 CALL LCD16_I2CSEND	;
332)   1767 C9          		 RET	;
 76)   1768 0E 03       		 LD C, 11B        ;HIRES TEXT SCREEN	;HIRES TEXT SCREEN
 77)   176A 3E 04       		 LD A, VGA_NAVY	;
 78)   176C CB 27       		 SLA A	;
 79)   176E CB 27       		 SLA A	;
 80)   1770 CB 27       		 SLA A	;
 81)   1772 CB 27       		 SLA A	;
 82)   1774 06 0F       		 LD B, VGA_WHITE	;
 83)   1776 B0          		 OR B	;
 84)   1777 47          		 LD B, A	;
 85)   1778 CD 06 18    		 CALL VGA_SETCONF	;
 86)   177B C9          		 RET	;
 90)   177C F5          		VGA_SETLOWGR: PUSH AF	;
 91)   177D CD 38 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
 92)   1780 0E 00       		 LD C, 00B        ;LOW RES GRAPH SCREEN	;LOW RES GRAPH SCREEN
 93)   1782 CD 06 18    		 CALL VGA_SETCONF	;
 94)   1785 F1          		 POP AF	;
 95)   1786 C9          		 RET	;
 98)   1787 F5          		VGA_SETLOWTX: PUSH AF	;
 99)   1788 CD 38 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
100)   178B 0E 01       		 LD C, 01B        ;LOW RES TEXT SCREEN	;LOW RES TEXT SCREEN
101)   178D CD 06 18    		 CALL VGA_SETCONF	;
102)   1790 F1          		 POP AF	;
103)   1791 C9          		 RET	;
105)   1792 F5          		VGA_SETHIGR: PUSH AF	;
106)   1793 CD 38 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
107)   1796 0E 02       		 LD C, 10B        ;HI RES GRAPH SCREEN	;HI RES GRAPH SCREEN
108)   1798 CD 06 18    		 CALL VGA_SETCONF	;
109)   179B F1          		 POP AF	;
110)   179C C9          		 RET	;
112)   179D F5          		VGA_SETHITX: PUSH AF	;
113)   179E CD 38 18    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
114)   17A1 0E 03       		 LD C, 11B        ;HI RES TEXT SCREEN	;HI RES TEXT SCREEN
115)   17A3 CD 06 18    		 CALL VGA_SETCONF	;
116)   17A6 F1          		 POP AF	;
117)   17A7 C9          		 RET	;
122)   17A8 0F          		VGA_SETVISBUFF: RRCA       ;BIT 1 > BIT 7	;BIT 1 > BIT 7
123)   17A9 E5          		 PUSH HL	;
124)   17AA F5          		 PUSH AF	;
125)   17AB 06 04       		 LD B, 4        ;8000h	;8000h
126)   17AD CD B5 0D    		 CALL GETPGINBANK	;
127)   17B0 E1          		 POP HL        ;H THE BUFFER	;H THE BUFFER
128)   17B1 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
129)   17B2 E5          		 PUSH HL	;
130)   17B3 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
131)   17B5 CD 93 0D    		 CALL PUTPGINBANK	;
132)   17B8 21 F8 1F    		 LD HL, CONFADDR	;
133)   17BB 11 00 80    		 LD DE, $8000	;
134)   17BE B7          		 OR A	;
135)   17BF ED 5A       		 ADC HL, DE	;
136)   17C1 C1          		 POP BC        ;B THE BUFFER 0 OR 1	;B THE BUFFER 0 OR 1
137)   17C2 7E          		 LD A,(HL)	;
138)   17C3 1F          		 RRA	;
139)   17C4 CB 18       		 RR B        ;BIT 0 ON CARRY	;BIT 0 ON CARRY
140)   17C6 17          		 RLA	;
141)   17C7 77          		 LD (HL),A	;
142)   17C8 F1          		 POP AF        ;PREVIOUS PAGE NO	;PREVIOUS PAGE NO
143)   17C9 06 04       		 LD B, 4	;
144)   17CB CD 93 0D    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
145)   17CE E1          		 POP HL	;
146)   17CF C9          		 RET  	;
150)   17D0 E5          		VGA_SWVISBUFF: PUSH HL	;
151)   17D1 06 04       		 LD B, 4        ;8000h	;8000h
152)   17D3 CD B5 0D    		 CALL GETPGINBANK	;
153)   17D6 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
154)   17D7 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
155)   17D9 CD 93 0D    		 CALL PUTPGINBANK	;
156)   17DC 21 F8 1F    		 LD HL, CONFADDR	;
157)   17DF 11 00 80    		 LD DE, $8000	;
158)   17E2 B7          		 OR A	;
159)   17E3 ED 5A       		 ADC HL, DE	;
160)   17E5 7E          		 LD A, (HL)        ;VIDEO CTRL REG1 VIDEO MODE	;VIDEO CTRL REG1 VIDEO MODE
161)   17E6 CB 7F       		 BIT 7,A 	;
162)   17E8 28 04       		 JR Z,VSVB_SETBUF1	;
164)   17EA CB BF       		 RES 7,A	;
165)   17EC 18 02       		 JR VSVB_CONT	;
166)   17EE CB FF       		VSVB_SETBUF1: SET 7,A       ;SET BIT 7	;SET BIT 7
169)   17F0 77          		VSVB_CONT: LD (HL),A	;
170)   17F1 F1          		 POP AF	;
171)   17F2 06 04       		 LD B, 4	;
172)   17F4 CD 93 0D    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
173)   17F7 E1          		 POP HL	;
174)   17F8 C9          		 RET  	;
178)   17F9 32 18 FF    		VGA_SETWRKBUFF: LD (VGABUF),A	;
179)   17FC C9          		 RET	;
182)   17FD 3A 18 FF    		VGA_SWWRKBUFF: LD A,(VGABUF)	;
183)   1800 EE 01       		 XOR 1	;
184)   1802 32 18 FF    		 LD (VGABUF),A	;
185)   1805 C9          		 RET	;
192)   1806 E5          		VGA_SETCONF: PUSH HL	;
193)   1807 C5          		 PUSH BC	;
194)   1808 06 04       		 LD B, 4        ;8000h	;8000h
195)   180A CD B5 0D    		 CALL GETPGINBANK	;
196)   180D C1          		 POP BC	;
197)   180E F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
198)   180F C5          		 PUSH BC        ;SAVE SCREEN CODE	;SAVE SCREEN CODE
199)   1810 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
200)   1812 06 04       		 LD B, 4	;
201)   1814 CD 93 0D    		 CALL PUTPGINBANK	;
202)   1817 C1          		 POP BC	;
203)   1818 79          		 LD A, C	;
204)   1819 21 F8 1F    		 LD HL, CONFADDR	;
205)   181C 11 00 80    		 LD DE, $8000	;
206)   181F B7          		 OR A	;
207)   1820 ED 5A       		 ADC HL, DE	;
208)   1822 77          		 LD (HL), A        ;VIDEO CTRL REG1 VIDEO MODE	;VIDEO CTRL REG1 VIDEO MODE
209)   1823 23          		 INC HL	;
210)   1824 78          		 LD A, B        ;DEFAULT COLORS	;DEFAULT COLORS
211)   1825 77          		 LD (HL), A        ;VIDEO CTRL REG2 VIDEO DEF COLORS	;VIDEO CTRL REG2 VIDEO DEF COLORS
212)   1826 F1          		 POP AF	;
213)   1827 C5          		 PUSH BC	;
214)   1828 06 04       		 LD B, 4	;
215)   182A CD 93 0D    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
216)   182D C1          		 POP BC	;
217)   182E E1          		 POP HL	;
218)   182F 79          		 LD A, C        ;SCREEN MODE	;SCREEN MODE
219)   1830 CB 47       		 BIT 0, A	;
220)   1832 C2 87 19    		 JP NZ, VGA_TXTINIT	;
221)   1835 C3 D3 1B    		 JP VGA_GRPHINIT	;
228)   1838 E5          		VGA_GETCONF: PUSH HL	;
229)   1839 06 04       		 LD B, 4        ;8000h	;8000h
230)   183B CD B5 0D    		 CALL GETPGINBANK	;
231)   183E F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
232)   183F 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
233)   1841 CD 93 0D    		 CALL PUTPGINBANK	;
234)   1844 21 F8 1F    		 LD HL, CONFADDR	;
235)   1847 11 00 80    		 LD DE, $8000	;
236)   184A B7          		 OR A	;
237)   184B ED 5A       		 ADC HL, DE	;
238)   184D 7E          		 LD A, (HL)	;
239)   184E E6 03       		 AND 3        ;KEEP ONLY BITS 0,1	;KEEP ONLY BITS 0,1
240)   1850 4F          		 LD C, A        ;SCREEN MODE	;SCREEN MODE
241)   1851 23          		 INC HL	;
242)   1852 7E          		 LD A, (HL)	;
243)   1853 47          		 LD B, A        ;DEFAULT COLORS	;DEFAULT COLORS
244)   1854 F1          		 POP AF	;
245)   1855 C5          		 PUSH BC	;
246)   1856 06 04       		 LD B, 4	;
247)   1858 CD 93 0D    		 CALL PUTPGINBANK	;
248)   185B C1          		 POP BC	;
249)   185C E1          		 POP HL	;
250)   185D 79          		 LD A, C	;
251)   185E C9          		 RET	;
258)   185F CD 38 18    		VGA_CLRSCR: CALL VGA_GETCONF	;
259)   1862 CB 47       		 BIT 0,A	;
260)   1864 C2 8D 19    		 JP NZ,VGA_TXTCLR	;
261)   1867 C3 5D 1C    		 JP VGA_GRCLS	;
278)   186A F5          		 PUSH AF        ;SAVE FLAGS	;SAVE FLAGS
279)   186B D1          		 POP DE         ;FLAGS ON DE	;FLAGS ON DE
280)   186C FE 1F       		 CP 31	;
281)   186E DC 87 18    		 CALL C, VGA_NOTVISCH	;
282)   1871 28 06       		 JR Z, PRCH_EX        ;EXIT IF CHAR WAS HANDLED	;EXIT IF CHAR WAS HANDLED
283)   1873 CD 7A 18    		 CALL VGA_DOPRNCH       ;PRINT THE CHAR	;PRINT THE CHAR
284)   1876 CD D8 18    		 CALL VGA_TXFORW       ;TEXT FORWARD	;TEXT FORWARD
286)   1879 C9          		 RET	;
291)   187A 67          		VGA_DOPRNCH: LD H, A       ;SAVE A	;SAVE A
292)   187B CD 38 18    		 CALL VGA_GETCONF	;
293)   187E CB 47       		 BIT 0, A	;
294)   1880 7C          		 LD A, H        ;RESTORE A	;RESTORE A
295)   1881 C2 25 1A    		 JP NZ, VGA_DOPRNCHTXT       ;NZ MEANS TEXT	;NZ MEANS TEXT
296)   1884 C3 F7 1C    		 JP VGA_DOPRNCHGRP	;
304)   1887 F5          		VGA_NOTVISCH: PUSH AF	;
305)   1888 D5          		 PUSH DE	;
306)   1889 CD 93 1A    		 CALL VGA_RMVCURS      ;REMOVE CURSOR	;REMOVE CURSOR
307)   188C D1          		 POP DE	;
308)   188D F1          		 POP AF	;
309)   188E FE 08       		 CP 8         ;BACKSPACE	;BACKSPACE
310)   1890 20 18       		 JR NZ, NX1	;
311)   1892 3A 13 FF    		 LD A, (VGATX_X)	;
312)   1895 FE 00       		 CP 0         ;COL 0 HAS THE PROMPT	;COL 0 HAS THE PROMPT
313)   1897 C8          		 RET Z         ;DO NOT PRINT ANYTHING	;DO NOT PRINT ANYTHING
314)   1898 3D          		 DEC A	;
315)   1899 32 13 FF    		 LD (VGATX_X), A	;
316)   189C D5          		 PUSH DE	;
317)   189D F1          		 POP AF         ;GET FLAGS BACK	;GET FLAGS BACK
318)   189E 30 1B       		 JR NC, MVLEFT       ;IF C THEN DELETE THE CHAR ON THE LEFT	;IF C THEN DELETE THE CHAR ON THE LEFT
319)   18A0 3E 20       		 LD A, ' '        ;PRINT SPACE	;PRINT SPACE
320)   18A2 32 17 FF    		 LD (VGATMPC),A	;
321)   18A5 CD 7A 18    		 CALL VGA_DOPRNCH       ;	;
322)   18A8 AF          		 XOR A         ;CLEAR ZERO	;CLEAR ZERO
323)   18A9 C9          		 RET	;
324)   18AA FE 0A       		NX1: CP 10         ;JUST IGNORE IT	;JUST IGNORE IT
325)   18AC C8          		 RET Z	;
326)   18AD FE 0D       		 CP 13         ;CR =NEW LINE	;CR =NEW LINE
327)   18AF 20 11       		 JR NZ, NX2	;
328)   18B1 CD 93 1A    		 CALL VGA_RMVCURS	;
329)   18B4 CD EB 18    		 CALL VGDOY        ;ADD 1 TO TY	;ADD 1 TO TY
330)   18B7 32 13 FF    		 LD (VGATX_X), A       ;ZF IS SET	;ZF IS SET
331)   18BA C9          		 RET	;
332)   18BB CD 56 1A    		MVLEFT: CALL VGA_GETCHAR	;
333)   18BE 7A          		 LD A, D	;
334)   18BF 32 17 FF    		 LD (VGATMPC),A	;
335)   18C2 AF          		NX2: XOR A         ;NC MEANS WE DON'T PRINT	;NC MEANS WE DON'T PRINT
336)   18C3 C9          		 RET	;
340)   18C4 CD 0C 19    		VGA_PRINT: CALL VGA_GETPAGE	;
341)   18C7 7E          		VGAP_AGN: LD A, (HL)	;
342)   18C8 FE 00       		 CP 0	;
343)   18CA 28 08       		 JR Z, VGAP_EX	;
344)   18CC E5          		 PUSH HL	;
345)   18CD CD 6A 18    		 CALL VGA_PRCH	;
346)   18D0 E1          		 POP HL	;
347)   18D1 23          		 INC HL	;
348)   18D2 18 F3       		 JR VGAP_AGN	;
349)   18D4 CD 2E 19    		VGAP_EX: CALL VGA_RMVPAGE	;
350)   18D7 C9          		 RET	;
353)   18D8 F5          		VGA_TXFORW: PUSH AF	;
354)   18D9 E5          		 PUSH HL	;
355)   18DA 21 15 FF    		 LD HL, VGAMAXX	;
356)   18DD 3A 13 FF    		 LD A, (VGATX_X)	;
357)   18E0 3C          		 INC A	;
358)   18E1 BE          		 CP (HL)	;
359)   18E2 CC EB 18    		 CALL Z, VGDOY	;
360)   18E5 32 13 FF    		 LD (VGATX_X), A	;
361)   18E8 E1          		 POP HL	;
362)   18E9 F1          		 POP AF	;
363)   18EA C9          		 RET	;
364)   18EB 21 16 FF    		VGDOY: LD HL, VGAMAXY	;
365)   18EE 3A 14 FF    		 LD A, (VGATX_Y)	;
366)   18F1 3C          		 INC A	;
367)   18F2 BE          		 CP (HL)	;
368)   18F3 CC FB 18    		 CALL Z, DOSCRL	;
369)   18F6 32 14 FF    		 LD (VGATX_Y), A	;
370)   18F9 AF          		 XOR A	;
371)   18FA C9          		 RET	;
373)   18FB CD 38 18    		DOSCRL: CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
374)   18FE CB 47       		 BIT 0, A	;
375)   1900 CA FA 1C    		 JP Z, DOSCRLGR	;
376)   1903 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
377)   1905 CC 13 1B    		 CALL Z, DOSCRL_COL       ;SCROLL COLORS IF BIT 1=0	;SCROLL COLORS IF BIT 1=0
378)   1908 CD DD 1A    		 CALL DOSCRL_TXT       ;SCROLL TEXT	;SCROLL TEXT
379)   190B C9          		 RET	;
389)   190C 3A 0D FF    		VGA_GETPAGE: LD A, (PGSEM)	;
390)   190F 3C          		 INC A	;
391)   1910 32 0D FF    		 LD (PGSEM), A	;
392)   1913 FE 01       		 CP 1	;
393)   1915 C0          		 RET NZ	;
394)   1916 E5          		 PUSH HL	;
395)   1917 06 04       		 LD B, 4        ;8000h	;8000h
396)   1919 CD B5 0D    		 CALL GETPGINBANK	;
397)   191C 32 09 FF    		 LD (TMPG), A        ;SAVE OLD PAGE	;SAVE OLD PAGE
398)   191F 3A 18 FF    		 LD A,(VGABUF)	;
399)   1922 1F          		 RRA         ;PUT BIT 0 ON CARRY FLAG	;PUT BIT 0 ON CARRY FLAG
400)   1923 3E 08       		 LD A, 8        ;PAGE 8  IS BUFFER 0	;PAGE 8  IS BUFFER 0
401)   1925 30 02       		 JR NC, VGP_SETPG	;
402)   1927 3E 0C       		 LD A, 12        ;PAGE 12 IS BUFFER 1	;PAGE 12 IS BUFFER 1
403)   1929 CD 93 0D    		VGP_SETPG: CALL PUTPGINBANK	;
404)   192C E1          		 POP HL	;
405)   192D C9          		 RET	;
409)   192E 3A 0D FF    		VGA_RMVPAGE: LD A, (PGSEM)	;
410)   1931 3D          		 DEC A	;
411)   1932 32 0D FF    		 LD (PGSEM), A	;
412)   1935 FE 00       		 CP 0	;
413)   1937 C0          		 RET NZ	;
414)   1938 E5          		 PUSH HL	;
415)   1939 06 04       		 LD B, 4	;
416)   193B 3A 09 FF    		 LD A, (TMPG)	;
417)   193E CD 93 0D    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
418)   1941 E1          		 POP HL	;
419)   1942 C9          		 RET	;
421)   1943 CD 0C 19    		VGA_SETFONT: CALL VGA_GETPAGE	;
422)   1946 21 00 36    		 LD HL, FONT_ADDR	;
423)   1949 11 00 90    		 LD DE, $9000        ;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000	;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000
424)   194C 01 00 0A    		 LD BC, 2560	;
425)   194F ED B0       		 LDIR         ;TRANSFER	;TRANSFER
426)   1951 CD 2E 19    		 CALL VGA_RMVPAGE	;
427)   1954 C9          		 RET	;
430)   1955 79          		VGA_SETMAXS: LD A, C	;
431)   1956 16 28       		 LD D, 40	;
432)   1958 1E 14       		 LD E, 20	;
433)   195A CB 4F       		 BIT 1,A        ;LOW RES MODE	;LOW RES MODE
434)   195C 28 04       		 JR Z, VGSM_NX	;
436)   195E 16 50       		 LD D, 80	;
437)   1960 1E 28       		 LD E, 40	;
438)   1962 7A          		VGSM_NX: LD A, D	;
439)   1963 32 15 FF    		 LD (VGAMAXX), A	;
440)   1966 7B          		 LD A, E	;
441)   1967 32 16 FF    		 LD (VGAMAXY), A	;
442)   196A C9          		 RET	;
445)   196B AF          		VGA_SETSCRDEFS: XOR A	;
446)   196C 32 0D FF    		 LD (PGSEM), A	;
447)   196F 32 09 FF    		 LD (TMPG), A	;
448)   1972 3E 0B       		 LD A, VGA_YELLOW	;
449)   1974 32 11 FF    		 LD (VGAFCOL), A	;
450)   1977 3E 04       		 LD A, VGA_NAVY	;
451)   1979 32 12 FF    		 LD (VGABCOL), A	;
452)   197C CD 55 19    		 CALL VGA_SETMAXS	;
453)   197F AF          		 XOR A	;
454)   1980 32 13 FF    		 LD (VGATX_X), A	;
455)   1983 32 14 FF    		 LD (VGATX_Y), A	;
456)   1986 C9          		 RET	;
458)   1987 CD 6B 19    		VGA_TXTINIT: CALL VGA_SETSCRDEFS	;
459)   198A CD 43 19    		 CALL VGA_SETFONT       ;SET THE FONT ON VIDEO MEM	;SET THE FONT ON VIDEO MEM
462)   198D 3A 15 FF    		VGA_TXTCLR: LD A, (VGAMAXX)	;
463)   1990 67          		 LD H, A	;
464)   1991 3A 16 FF    		 LD A, (VGAMAXY)	;
465)   1994 5F          		 LD E, A	;
466)   1995 CD 91 2C    		 CALL MULT8	;
467)   1998 E5          		 PUSH HL	;
468)   1999 CD 0C 19    		 CALL VGA_GETPAGE	;
469)   199C CD 38 18    		 CALL VGA_GETCONF	;
470)   199F C1          		 POP BC         ;TOTAL BYTES	;TOTAL BYTES
471)   19A0 CB 4F       		 BIT 1, A	;
472)   19A2 28 0E       		 JR Z, ISLOWRES	;
474)   19A4 21 00 80    		 LD HL, $8000	;
475)   19A7 3E 20       		 LD A, 32	;
476)   19A9 77          		 LD (HL), A	;
477)   19AA 11 01 80    		 LD DE, $8001	;
478)   19AD ED B0       		 LDIR	;
479)   19AF C3 D7 19    		 JP VGAC_EXIT	;
481)   19B2 21 00 80    		ISLOWRES: LD HL, $8000       ;BANK4	;BANK4
482)   19B5 11 00 84    		 LD DE, $8400        ;COLOR INFO	;COLOR INFO
483)   19B8 C3 C7 19    		 JP VGAC_AGN	;
488)   19BB CD 0C 19    		VGA_CLR: CALL VGA_GETPAGE	;
489)   19BE 01 20 03    		 LD BC, 800	;
490)   19C1 21 00 80    		 LD HL, $8000        ;DEL CHARS	;DEL CHARS
491)   19C4 11 00 84    		 LD DE, $8400	;
494)   19C7 3E 20       		VGAC_AGN: LD A, 32	;
495)   19C9 77          		 LD (HL), A	;
496)   19CA C5          		 PUSH BC	;
497)   19CB CD EC 19    		 CALL VGA_GETCOL	;
498)   19CE C1          		 POP BC	;
499)   19CF 12          		 LD (DE), A	;
500)   19D0 23          		 INC HL	;
501)   19D1 13          		 INC DE	;
502)   19D2 0B          		 DEC BC	;
503)   19D3 78          		 LD A, B	;
504)   19D4 B1          		 OR C	;
505)   19D5 20 F0       		 JR NZ, VGAC_AGN	;
506)   19D7 AF          		VGAC_EXIT: XOR A	;
507)   19D8 32 13 FF    		 LD (VGATX_X), A	;
508)   19DB 32 14 FF    		 LD (VGATX_Y), A	;
509)   19DE CD 2E 19    		 CALL VGA_RMVPAGE	;
510)   19E1 C9          		 RET	;
514)   19E2 CB 20       		VGA_MIXCOLOR: SLA B	;
515)   19E4 CB 20       		 SLA B	;
516)   19E6 CB 20       		 SLA B	;
517)   19E8 CB 20       		 SLA B	;
518)   19EA B0          		 OR B         ;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR	;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR
519)   19EB C9          		 RET	;
523)   19EC 3A 12 FF    		VGA_GETCOL: LD A, (VGABCOL)      ;GET COLOR INFO	;GET COLOR INFO
524)   19EF 47          		 LD B, A	;
525)   19F0 3A 11 FF    		 LD A, (VGAFCOL)	;
526)   19F3 CD E2 19    		 CALL VGA_MIXCOLOR	;
527)   19F6 C9          		 RET	;
531)   19F7 F5          		VGA_SETCOL: PUSH AF	;
532)   19F8 E6 0F       		 AND $0F	;
533)   19FA 32 11 FF    		 LD (VGAFCOL), A       ;SET COLOR INFO	;SET COLOR INFO
534)   19FD F1          		 POP AF	;
535)   19FE CB 27       		 SLA A	;
536)   1A00 CB 27       		 SLA A	;
537)   1A02 CB 27       		 SLA A	;
538)   1A04 CB 27       		 SLA A	;
539)   1A06 E6 0F       		 AND $0F	;
540)   1A08 32 12 FF    		 LD (VGABCOL), A       ;SET BACK COLOR	;SET BACK COLOR
541)   1A0B C9          		 RET	;
548)   1A0C F5          		VGA_CALC_VIDAD: PUSH AF	;
549)   1A0D 3A 14 FF    		 LD A, (VGATX_Y)	;
550)   1A10 67          		 LD H, A 	;
551)   1A11 3A 15 FF    		 LD A, (VGAMAXX)	;
552)   1A14 5F          		 LD E, A  	;
553)   1A15 CD 91 2C    		 CALL Mult8	;
554)   1A18 11 00 80    		 LD DE, $8000	;
555)   1A1B 19          		 ADD HL,DE	;
557)   1A1C 16 00       		 LD D, 0	;
558)   1A1E 3A 13 FF    		 LD A, (VGATX_X)	;
559)   1A21 5F          		 LD E, A	;
560)   1A22 19          		 ADD HL, DE	;
561)   1A23 F1          		 POP AF	;
562)   1A24 C9          		 RET	;
566)   1A25 E5          		VGA_DOPRNCHTXT: PUSH HL	;
567)   1A26 F5          		 PUSH AF	;
568)   1A27 CD 0C 19    		 CALL VGA_GETPAGE	;
569)   1A2A CD 0C 1A    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
570)   1A2D F1          		 POP AF	;
571)   1A2E 77          		 LD (HL), A        ;PUT CHAR ON SCREEN	;PUT CHAR ON SCREEN
572)   1A2F E5          		 PUSH HL	;
573)   1A30 CD 38 18    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
574)   1A33 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
575)   1A35 E1          		 POP HL	;
576)   1A36 20 08       		 JR NZ, DPC_EX	;
577)   1A38 11 00 04    		 LD DE, $400	;
578)   1A3B 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
579)   1A3C CD EC 19    		 CALL VGA_GETCOL       ;GET CURRENT COLOR	;GET CURRENT COLOR
580)   1A3F 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
581)   1A40 E1          		DPC_EX: POP HL	;
582)   1A41 CD 2E 19    		 CALL VGA_RMVPAGE	;
583)   1A44 C9          		 RET	;
587)   1A45 F5          		VGA_DOCHCLR: PUSH AF	;
588)   1A46 CD 0C 19    		 CALL VGA_GETPAGE	;
589)   1A49 CD 0C 1A    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
590)   1A4C 11 00 04    		 LD DE, $400	;
591)   1A4F 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
592)   1A50 F1          		 POP AF	;
593)   1A51 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
594)   1A52 CD 2E 19    		 CALL VGA_RMVPAGE	;
595)   1A55 C9          		 RET	;
598)   1A56 CD 38 18    		VGA_GETCHAR: CALL VGA_GETCONF      ;GET SCREEEN MODE	;GET SCREEEN MODE
599)   1A59 CB 47       		 BIT 0,A	;
600)   1A5B 20 07       		 JR NZ,GC_DOIT       ;IF TEXT DOIT	;IF TEXT DOIT
602)   1A5D 16 93       		 LD D,  147 ;' '	;' '
603)   1A5F 3A 12 FF    		 LD A,(VGABCOL)	;
604)   1A62 5F          		 LD E,A	;
605)   1A63 C9          		 RET	;
606)   1A64 CD 0C 19    		GC_DOIT: CALL VGA_GETPAGE	;
607)   1A67 CD 0C 1A    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDR ON HL	;CALC VIDEO ADDR ON HL
608)   1A6A 7E          		 LD A, (HL)	;
609)   1A6B F5          		 PUSH AF	;
610)   1A6C CD 38 18    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
611)   1A6F FE 03       		 CP 3  ;TEXT HI      ; CHECK IF HIRES SO NO COLOR INFO	;TEXT HI      ; CHECK IF HIRES SO NO COLOR INFO
612)   1A71 D1          		 POP DE        ;AF ON DE TO PRESERVE FLAG  	;AF ON DE TO PRESERVE FLAG
613)   1A72 28 0A       		 JR Z, GC_NOCOL	;
614)   1A74 7A          		 LD A, D	;
615)   1A75 11 00 04    		 LD DE, $400  ;TEXT LOW	;TEXT LOW
616)   1A78 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
617)   1A79 57          		 LD D, A        ;THE CHAR	;THE CHAR
618)   1A7A 7E          		 LD A, (HL)       ;THE COLOR	;THE COLOR
619)   1A7B 5F          		 LD E, A	;
620)   1A7C 18 02       		 JR GC_EX	;
622)   1A7E 1E 00       		 LD E, 0	;
623)   1A80 62          		GC_EX: LD H,D	;
624)   1A81 6B          		 LD L,E	;
625)   1A82 CD 2E 19    		 CALL VGA_RMVPAGE	;
626)   1A85 54          		 LD D,H	;
627)   1A86 5D          		 LD E,L	;
628)   1A87 C9          		 RET	;
631)   1A88 BB          		VGA_REVRCOLRS: CP E	;
632)   1A89 C8          		 RET Z	;
633)   1A8A 7B          		 LD A, E	;
634)   1A8B 0F          		 RRCA         ;CHANGE FORE AND BACK COLOR INFO	;CHANGE FORE AND BACK COLOR INFO
635)   1A8C 0F          		 RRCA	;
636)   1A8D 0F          		 RRCA	;
637)   1A8E 0F          		 RRCA	;
638)   1A8F CD 45 1A    		 CALL VGA_DOCHCLR     ;CHANGE THE COLOR OF THE CHAR	;CHANGE THE COLOR OF THE CHAR
639)   1A92 C9          		 RET	;
641)   1A93 CD 38 18    		VGA_RMVCURS: CALL VGA_GETCONF      ;GET SCREEEN MODE	;GET SCREEEN MODE
642)   1A96 CB 47       		 BIT 0,A	;
643)   1A98 28 04       		 JR Z, RC_GR       ;IF GRAPHICS	;IF GRAPHICS
644)   1A9A CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
645)   1A9C 28 05       		 JR Z, RC_LOW	;
646)   1A9E 3A 17 FF    		RC_GR: LD A, (VGATMPC)	;
647)   1AA1 18 0A       		 JR RC_EX	;
648)   1AA3 CD 56 1A    		RC_LOW: CALL VGA_GETCHAR      ;GET CURRENT COLORS	;GET CURRENT COLORS
649)   1AA6 CD EC 19    		 CALL VGA_GETCOL       ;GET DEFAULT COLORS	;GET DEFAULT COLORS
650)   1AA9 CD 88 1A    		 CALL VGA_REVRCOLRS      ;REVERSE IF NECESSARY	;REVERSE IF NECESSARY
651)   1AAC C9          		 RET	;
652)   1AAD CD 7A 18    		RC_EX: CALL VGA_DOPRNCH	;
653)   1AB0 C9          		 RET	;
654)   1AB1 CD 56 1A    		VGA_PRNCURS: CALL VGA_GETCHAR      ; E HAS THE COLOR INFO	; E HAS THE COLOR INFO
655)   1AB4 D5          		 PUSH DE	;
656)   1AB5 CD 38 18    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
657)   1AB8 D1          		 POP DE	;
658)   1AB9 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO  	; CHECK IF HIRES SO NO COLOR INFO
659)   1ABB 20 13       		 JR NZ, PC_NOCOL	;
660)   1ABD CB 47       		 BIT 0,A        ;CHECK IF GRAPH SO NO TEXT COLOR INFO	;CHECK IF GRAPH SO NO TEXT COLOR INFO
661)   1ABF 28 0B       		 JR Z, PC_LORESGR	;
662)   1AC1 CD EC 19    		 CALL VGA_GETCOL       ;GET CURRENT COLORS	;GET CURRENT COLORS
663)   1AC4 0F          		 RRCA        ;REVERSE BACK & FORE	;REVERSE BACK & FORE
664)   1AC5 0F          		 RRCA	;
665)   1AC6 0F          		 RRCA	;
666)   1AC7 0F          		 RRCA	;
667)   1AC8 CD 88 1A    		 CALL VGA_REVRCOLRS      ;LOWRES TEXT REVERSE COLORS	;LOWRES TEXT REVERSE COLORS
668)   1ACB C9          		 RET	;
669)   1ACC 3E 93       		PC_LORESGR: LD A, VGA_CURSCHAR	;
670)   1ACE 18 09       		 JR PC_EX	;
671)   1AD0 7A          		PC_NOCOL: LD A,D	;
672)   1AD1 FE 93       		 CP VGA_CURSCHAR	;
673)   1AD3 C8          		 RET Z        ;ALREADY PRINTED	;ALREADY PRINTED
674)   1AD4 32 17 FF    		 LD (VGATMPC), A	;
675)   1AD7 3E 93       		 LD A, VGA_CURSCHAR        ;'_'	;'_'
676)   1AD9 CD 7A 18    		PC_EX: CALL VGA_DOPRNCH  	;
677)   1ADC C9          		 RET	;
682)   1ADD CD 0C 19    		DOSCRL_TXT: CALL VGA_GETPAGE	;
683)   1AE0 3A 15 FF    		 LD A, (VGAMAXX)	;
684)   1AE3 26 00       		 LD H, 0	;
685)   1AE5 6F          		 LD L, A	;
686)   1AE6 11 00 80    		 LD DE, $8000	;
687)   1AE9 19          		 ADD HL, DE	;
689)   1AEA E5          		 PUSH HL	;
690)   1AEB D5          		 PUSH DE	;
692)   1AEC 67          		 LD H, A	;
693)   1AED 3A 16 FF    		 LD A, (VGAMAXY)	;
694)   1AF0 3D          		 DEC A	;
695)   1AF1 5F          		 LD E, A	;
696)   1AF2 CD 91 2C    		 CALL Mult8	;
697)   1AF5 44          		 LD B, H	;
698)   1AF6 4D          		 LD C, L	;
699)   1AF7 D1          		 POP DE	;
700)   1AF8 E1          		 POP HL	;
701)   1AF9 C5          		 PUSH BC	;
702)   1AFA ED B0       		 LDIR         ;SCROLL UP 39 LINES	;SCROLL UP 39 LINES
703)   1AFC D1          		 POP DE        ;DE = BC	;DE = BC
704)   1AFD 21 00 80    		 LD HL, $8000	;
705)   1B00 19          		 ADD HL, DE        ;LINE 39 OR 19 ADDRESS TO BE CLEARED (0-39) (0-19)	;LINE 39 OR 19 ADDRESS TO BE CLEARED (0-39) (0-19)
706)   1B01 3A 15 FF    		 LD A, (VGAMAXX)       ;80 OR 40	;80 OR 40
707)   1B04 47          		 LD B, A	;
708)   1B05 3E 20       		 LD A, 32	;
709)   1B07 77          		DST_AGN: LD (HL), A	;
710)   1B08 23          		 INC HL	;
711)   1B09 10 FC       		 DJNZ DST_AGN	;
712)   1B0B CD 2E 19    		 CALL VGA_RMVPAGE	;
713)   1B0E 3A 16 FF    		 LD A, (VGAMAXY)	;
714)   1B11 3D          		 DEC A	;
715)   1B12 C9          		 RET	;
717)   1B13 CD 0C 19    		DOSCRL_COL: CALL VGA_GETPAGE	;
718)   1B16 21 28 84    		 LD HL, $8428        ;LINE 1	;LINE 1
719)   1B19 11 00 84    		 LD DE, $8400        ;LINE 0	;LINE 0
720)   1B1C 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
721)   1B1F ED B0       		 LDIR	;
722)   1B21 CD EC 19    		 CALL VGA_GETCOL       ;SET DEFAULT COLOR	;SET DEFAULT COLOR
723)   1B24 21 F8 86    		 LD HL, $86F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
724)   1B27 06 28       		 LD B, 40	;
725)   1B29 77          		DOS_AGNCL: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
726)   1B2A 23          		 INC HL	;
727)   1B2B 10 FC       		 DJNZ DOS_AGNCL	;
728)   1B2D CD 2E 19    		 CALL VGA_RMVPAGE	;
729)   1B30 C9          		 RET	;
739)   1B31 3A 0D FF    		 LD A, (PGSEM)	;
740)   1B34 3C          		 INC A	;
741)   1B35 32 0D FF    		 LD (PGSEM), A	;
742)   1B38 FE 01       		 CP 1	;
743)   1B3A C0          		 RET NZ	;
744)   1B3B E5          		 PUSH HL	;
745)   1B3C 06 02       		 LD B, 2        ;4000h	;4000h
746)   1B3E CD B5 0D    		 CALL GETPGINBANK	;
747)   1B41 32 09 FF    		 LD (TMPG), A	;
748)   1B44 06 03       		 LD B, 3        ;6000h	;6000h
749)   1B46 CD B5 0D    		 CALL GETPGINBANK	;
750)   1B49 32 0A FF    		 LD (TMPG + 1), A	;
751)   1B4C 3A 18 FF    		 LD A,(VGABUF)	;
752)   1B4F 1F          		 RRA        ;PUT SCREEN BUF ON CARRY FLAG	;PUT SCREEN BUF ON CARRY FLAG
753)   1B50 38 10       		 JR C,VSPL_SETBUFONE	;
755)   1B52 3E 08       		 LD A, 8	;
756)   1B54 06 02       		 LD B, 2	;
757)   1B56 CD 93 0D    		 CALL PUTPGINBANK	;
759)   1B59 3E 09       		 LD A, 9	;
760)   1B5B 06 03       		 LD B, 3	;
761)   1B5D CD 93 0D    		 CALL PUTPGINBANK	;
762)   1B60 E1          		 POP HL	;
763)   1B61 C9          		 RET	;
765)   1B62 3E 0C       		 LD A, 12	;
766)   1B64 06 02       		 LD B, 2	;
767)   1B66 CD 93 0D    		 CALL PUTPGINBANK	;
769)   1B69 3E 0D       		 LD A, 13	;
770)   1B6B 06 03       		 LD B, 3	;
771)   1B6D CD 93 0D    		 CALL PUTPGINBANK	;
772)   1B70 E1          		 POP HL	;
773)   1B71 C9          		 RET	;
780)   1B72 3A 0D FF    		 LD A, (PGSEM)	;
781)   1B75 3C          		 INC A	;
782)   1B76 32 0D FF    		 LD (PGSEM), A	;
783)   1B79 FE 01       		 CP 1	;
784)   1B7B C0          		 RET NZ	;
785)   1B7C E5          		 PUSH HL	;
786)   1B7D 06 02       		 LD B, 2        ;4000h	;4000h
787)   1B7F CD B5 0D    		 CALL GETPGINBANK	;
788)   1B82 32 09 FF    		 LD (TMPG), A	;
789)   1B85 06 03       		 LD B, 3        ;6000h	;6000h
790)   1B87 CD B5 0D    		 CALL GETPGINBANK	;
791)   1B8A 32 0A FF    		 LD (TMPG + 1), A	;
792)   1B8D 3A 18 FF    		 LD A,(VGABUF)	;
793)   1B90 1F          		 RRA        ;PUT SCREEN BUF ON CARRY FLAG	;PUT SCREEN BUF ON CARRY FLAG
794)   1B91 38 10       		 JR C,VSPH_SETBUFONE	;
796)   1B93 3E 0A       		 LD A, 10	;
797)   1B95 06 02       		 LD B, 2	;
798)   1B97 CD 93 0D    		 CALL PUTPGINBANK	;
800)   1B9A 3E 0B       		 LD A, 11	;
801)   1B9C 06 03       		 LD B, 3	;
802)   1B9E CD 93 0D    		 CALL PUTPGINBANK	;
803)   1BA1 E1          		 POP HL	;
804)   1BA2 C9          		 RET	;
806)   1BA3 3E 0E       		 LD A, 14	;
807)   1BA5 06 02       		 LD B, 2	;
808)   1BA7 CD 93 0D    		 CALL PUTPGINBANK	;
810)   1BAA 3E 0F       		 LD A, 15	;
811)   1BAC 06 03       		 LD B, 3	;
812)   1BAE CD 93 0D    		 CALL PUTPGINBANK	;
813)   1BB1 E1          		 POP HL	;
814)   1BB2 C9          		 RET	;
819)   1BB3 3A 0D FF    		VGA_RMVGRPG: LD A, (PGSEM)	;
820)   1BB6 FE 00       		 CP 0	;
821)   1BB8 C8          		 RET Z	;
822)   1BB9 3D          		 DEC A	;
823)   1BBA 32 0D FF    		 LD (PGSEM), A	;
824)   1BBD FE 00       		 CP 0	;
825)   1BBF C0          		 RET NZ	;
826)   1BC0 E5          		 PUSH HL	;
827)   1BC1 06 02       		 LD B, 2	;
828)   1BC3 3A 09 FF    		 LD A, (TMPG)	;
829)   1BC6 CD 93 0D    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
830)   1BC9 06 03       		 LD B, 3	;
831)   1BCB 3A 0A FF    		 LD A, (TMPG + 1)	;
832)   1BCE CD 93 0D    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
833)   1BD1 E1          		 POP HL	;
834)   1BD2 C9          		 RET	;
837)   1BD3 CD 6B 19    		VGA_GRPHINIT: CALL VGA_SETSCRDEFS     ;SET SCREEN DEFAULTS	;SET SCREEN DEFAULTS
838)   1BD6 CD 5D 1C    		 CALL VGA_GRCLS	;
839)   1BD9 AF          		 XOR A	;
840)   1BDA C9          		 RET	;
846)   1BDB F5          		VGA_CHECKXY32: PUSH AF	;
847)   1BDC E5          		 PUSH HL	;
848)   1BDD D5          		 PUSH DE	;
849)   1BDE B7          		 OR A	;
850)   1BDF 11 40 01    		 LD DE, 320	;
851)   1BE2 ED 52       		 SBC HL, DE	;
852)   1BE4 30 0F       		 JR NC, CXY3_ABEX	;
853)   1BE6 D1          		 POP DE	;
854)   1BE7 D5          		 PUSH DE	;
855)   1BE8 EB          		 EX DE, HL	;
856)   1BE9 11 C8 00    		 LD DE, 200	;
857)   1BEC ED 52       		 SBC HL, DE	;
858)   1BEE 30 05       		 JR NC, CXY3_ABEX	;
859)   1BF0 D1          		 POP DE	;
860)   1BF1 E1          		 POP HL	;
861)   1BF2 F1          		 POP AF	;
862)   1BF3 37          		 SCF         ;RETURN WITH C SET	;RETURN WITH C SET
863)   1BF4 C9          		 RET	;
865)   1BF5 D1          		CXY3_ABEX: POP DE        	;
866)   1BF6 E1          		 POP HL	;
867)   1BF7 F1          		 POP AF	;
868)   1BF8 B7          		 OR A	;
869)   1BF9 C9          		 RET         ;RETURN WITH NC  	;RETURN WITH NC
875)   1BFA CD DB 1B    		VGA_PLTPXL32: CALL VGA_CHECKXY32     ;CHECK BOUNDS	;CHECK BOUNDS
876)   1BFD D0          		 RET NC	;
877)   1BFE E5          		 PUSH HL        ;CHECK BOUNDS	;CHECK BOUNDS
878)   1BFF F5          		 PUSH AF	;
879)   1C00 7B          		 LD A, E	;
880)   1C01 FE 66       		 CP 102	;
881)   1C03 38 27       		 JR C, PPNXT0        ;LESS THAN 102	;LESS THAN 102
882)   1C05 20 16       		 JR NZ, NXTBNK        ;MORE THAN 102	;MORE THAN 102
883)   1C07 E5          		 PUSH HL        ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES	;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
884)   1C08 01 80 00    		 LD BC, 128	;
885)   1C0B B7          		 OR A	;
886)   1C0C ED 42       		 SBC HL, BC	;
887)   1C0E 47          		 LD B, A	;
888)   1C0F 7C          		 LD A, H	;
889)   1C10 B7          		 OR A         ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128	; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
890)   1C11 78          		 LD A, B	;
891)   1C12 E1          		 POP HL	;
892)   1C13 20 17       		 JR NZ, PPNXT0	;
894)   1C15 3E 67       		 LD A, 103        ;WE ARE AT LINE ZERO ON 2ND BANK	;WE ARE AT LINE ZERO ON 2ND BANK
895)   1C17 11 40 01    		 LD DE, 129 + 191	;
896)   1C1A B7          		 OR A	;
897)   1C1B ED 52       		 SBC HL, DE        ;	;
898)   1C1D D6 67       		NXTBNK: SUB 103        ;SKIP 102 ROWS	;SKIP 102 ROWS
899)   1C1F 11 C0 00    		 LD DE, 192        ;320-128	;320-128
900)   1C22 B7          		 OR A	;
901)   1C23 ED 5A       		 ADC HL, DE	;
902)   1C25 F5          		 PUSH AF	;
904)   1C26 CD 72 1B    		 CALL VGA_SETGRPGHI	;
906)   1C29 F1          		 POP AF         ;A HAS THE ROWS ON 2ND 16K	;A HAS THE ROWS ON 2ND 16K
907)   1C2A 18 05       		 JR PPNXT1	;
908)   1C2C F5          		PPNXT0: PUSH AF        ;A=E=ROW=Y	;A=E=ROW=Y
909)   1C2D CD 31 1B    		 CALL VGA_SETGRPGLO	;
910)   1C30 F1          		 POP AF	;
911)   1C31 11 00 40    		PPNXT1: LD DE, BASEADDR	;
913)   1C34 CB 3C       		 SRL H	;
914)   1C36 CB 1D       		 RR L	;
915)   1C38 19          		 ADD HL, DE        ;FIND COLUMN	;FIND COLUMN
916)   1C39 E5          		 PUSH HL	;
917)   1C3A 11 A0 00    		 LD DE, 160	;
919)   1C3D CD 9D 2C    		 CALL Mult12	;
920)   1C40 D1          		 POP DE	;
921)   1C41 19          		 ADD HL, DE	;
922)   1C42 C1          		DOPLOTPX: POP BC        ;B HAS THE COLOR	;B HAS THE COLOR
923)   1C43 D1          		 POP DE         ;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL
924)   1C44 7E          		 LD A, (HL)        ;GET PIXEL BYTE	;GET PIXEL BYTE
925)   1C45 CB 43       		 BIT 0, E        ;CHECK X IS EVEN OR ODD	;CHECK X IS EVEN OR ODD
926)   1C47 28 04       		 JR Z, DOEVEN        ;EVEN	;EVEN
928)   1C49 E6 F0       		 AND $F0        ;CLEAR RIGHT 4 BITS	;CLEAR RIGHT 4 BITS
929)   1C4B 18 0A       		 JR DPEXIT	;
931)   1C4D CB 00       		DOEVEN: RLC B	;
932)   1C4F CB 00       		 RLC B	;
933)   1C51 CB 00       		 RLC B	;
934)   1C53 CB 00       		 RLC B	;
935)   1C55 E6 0F       		 AND $0F        ;ZERO LEFT	;ZERO LEFT
936)   1C57 B0          		DPEXIT: OR B         ;MIX PIXELS	;MIX PIXELS
937)   1C58 77          		 LD (HL), A	;
938)   1C59 CD B3 1B    		 CALL VGA_RMVGRPG	;
939)   1C5C C9          		 RET	;
942)   1C5D CD 31 1B    		VGA_GRCLS: CALL VGA_SETGRPGLO	;
943)   1C60 21 00 40    		 LD HL, BASEADDR	;
944)   1C63 11 01 40    		 LD DE, BASEADDR + 1	;
945)   1C66 01 FF 3F    		 LD BC, 16384 - 1       ;BYTES ON 1ST 16K	;BYTES ON 1ST 16K
946)   1C69 AF          		 XOR A	;
947)   1C6A 77          		 LD (HL), A	;
948)   1C6B ED B0       		 LDIR         ;RED - RED	;RED - RED
950)   1C6D CD B3 1B    		 CALL VGA_RMVGRPG	;
951)   1C70 CD 72 1B    		 CALL VGA_SETGRPGHI	;
952)   1C73 21 00 40    		 LD HL, BASEADDR	;
953)   1C76 11 01 40    		 LD DE, BASEADDR + 1	;
954)   1C79 01 FF 3C    		 LD BC, 15616 - 1       ;BYTES ON 2ND 16K	;BYTES ON 2ND 16K
955)   1C7C AF          		 XOR A	;
956)   1C7D 77          		 LD (HL), A	;
957)   1C7E ED B0       		 LDIR	;
958)   1C80 CD B3 1B    		 CALL VGA_RMVGRPG	;
959)   1C83 AF          		 XOR A        ;RESET TEXT COORDS	;RESET TEXT COORDS
960)   1C84 32 13 FF    		 LD (VGATX_X), A	;
961)   1C87 32 14 FF    		 LD (VGATX_Y), A	;
962)   1C8A C9          		 RET         ;TO MENU	;TO MENU
964)   1C8B C5          		FILLBTS: PUSH BC	;
965)   1C8C 12          		AGN1: LD (DE), A	;
966)   1C8D 13          		 INC DE	;
967)   1C8E 0B          		 DEC BC	;
968)   1C8F 67          		 LD H, A	;
969)   1C90 78          		 LD A, B	;
970)   1C91 B1          		 OR C	;
971)   1C92 7C          		 LD A, H	;
972)   1C93 20 F7       		 JR NZ, AGN1	;
973)   1C95 2D          		 DEC L	;
974)   1C96 7D          		 LD A, L	;
975)   1C97 B7          		 OR A	;
976)   1C98 7C          		 LD A, H	;
977)   1C99 C1          		 POP BC	;
978)   1C9A 20 EF       		 JR NZ, FILLBTS	;
979)   1C9C C9          		 RET	;
985)   1C9D E5          		VGA_GETPXL32: PUSH HL	;
986)   1C9E F5          		 PUSH AF	;
987)   1C9F 7B          		 LD A, E	;
988)   1CA0 FE 66       		 CP 102	;
989)   1CA2 38 25       		 JR C, GPNXT0        ;LESS THAN 102	;LESS THAN 102
990)   1CA4 20 16       		 JR NZ, GPNXTBNK       ;MORE THAN 102	;MORE THAN 102
991)   1CA6 E5          		 PUSH HL        ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES	;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
992)   1CA7 01 80 00    		 LD BC, 128	;
993)   1CAA B7          		 OR A	;
994)   1CAB ED 42       		 SBC HL, BC	;
995)   1CAD 47          		 LD B, A	;
996)   1CAE 7C          		 LD A, H	;
997)   1CAF B7          		 OR A         ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128	; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
998)   1CB0 78          		 LD A, B	;
999)   1CB1 E1          		 POP HL	;
1000)   1CB2 20 15       		 JR NZ, GPNXT0	;
1002)   1CB4 3E 67       		 LD A, 103        ;WE ARE AT LINE ZERO ON 2ND BANK	;WE ARE AT LINE ZERO ON 2ND BANK
1003)   1CB6 11 40 01    		 LD DE, 129 + 191	;
1004)   1CB9 B7          		 OR A	;
1005)   1CBA ED 52       		 SBC HL, DE        ;	;
1006)   1CBC D6 67       		GPNXTBNK: SUB 103       ;SKIP 102 ROWS	;SKIP 102 ROWS
1007)   1CBE 11 C0 00    		 LD DE, 192        ;320-128	;320-128
1008)   1CC1 19          		 ADD HL, DE	;
1009)   1CC2 F5          		 PUSH AF	;
1011)   1CC3 CD 72 1B    		 CALL VGA_SETGRPGHI	;
1013)   1CC6 F1          		 POP AF         ;A HAS THE ROWS ON 2ND 16K	;A HAS THE ROWS ON 2ND 16K
1014)   1CC7 18 05       		 JR GPNXT1	;
1015)   1CC9 F5          		GPNXT0: PUSH AF        ;A=E=ROW=Y	;A=E=ROW=Y
1016)   1CCA CD 31 1B    		 CALL VGA_SETGRPGLO	;
1017)   1CCD F1          		 POP AF	;
1018)   1CCE 11 00 40    		GPNXT1: LD DE, BASEADDR	;
1020)   1CD1 CB 3C       		 SRL H	;
1021)   1CD3 CB 1D       		 RR L	;
1022)   1CD5 19          		 ADD HL, DE        ;FIND COLUMN	;FIND COLUMN
1023)   1CD6 11 A0 00    		 LD DE, 160	;
1024)   1CD9 CD 9D 2C    		 CALL Mult12        ;HL=A*DE	;HL=A*DE
1025)   1CDC C1          		GPDOGETPX: POP BC        ;B HAS THE COLOR	;B HAS THE COLOR
1026)   1CDD D1          		 POP DE         ;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL
1027)   1CDE 7E          		 LD A, (HL)        ;GET PIXEL BYTE	;GET PIXEL BYTE
1028)   1CDF CB 43       		 BIT 0, E        ;CHECK X IS EVEN OR ODD	;CHECK X IS EVEN OR ODD
1029)   1CE1 28 04       		 JR Z, GPDOEVEN        ;EVEN	;EVEN
1031)   1CE3 E6 0F       		 AND $0F        ;CLEAR LEFT 4 BITS	;CLEAR LEFT 4 BITS
1032)   1CE5 18 0A       		 JR GPDPEXIT	;
1034)   1CE7 CB 07       		GPDOEVEN: RLC A	;
1035)   1CE9 CB 07       		 RLC A	;
1036)   1CEB CB 07       		 RLC A	;
1037)   1CED CB 07       		 RLC A	;
1038)   1CEF E6 0F       		 AND $0F        ;ZERO LEFT	;ZERO LEFT
1039)   1CF1 F5          		GPDPEXIT: PUSH AF       ;SAVE PIXEL	;SAVE PIXEL
1040)   1CF2 CD B3 1B    		 CALL VGA_RMVGRPG	;
1041)   1CF5 F1          		 POP AF         ;RESTORE PIXEL	;RESTORE PIXEL
1042)   1CF6 C9          		 RET	;
1047)   1CF7 C3 00 1E    		VGA_DOPRNCHGRP: JP VGA_PRNGRCH	;
1055)   1CFA C9          		 RET	;
1061)   1CFB 06 02       		SETGRAPHPGS: LD B, 2	;
1062)   1CFD 3A 0D FF    		 LD A, (PGSEM)        ;PG SEM FOR ALL 4 PAGES	;PG SEM FOR ALL 4 PAGES
1063)   1D00 3C          		 INC A	;
1064)   1D01 32 0D FF    		 LD (PGSEM), A	;
1065)   1D04 FE 01       		 CP 1	;
1066)   1D06 C0          		 RET NZ	;
1067)   1D07 E5          		 PUSH HL	;
1068)   1D08 0E 04       		 LD C, 4	;
1069)   1D0A 21 09 FF    		 LD HL, TMPG	;
1070)   1D0D C5          		 PUSH BC	;
1071)   1D0E E5          		SGP_NXT: PUSH HL	;
1072)   1D0F CD B5 0D    		 CALL GETPGINBANK	;
1073)   1D12 E1          		 POP HL	;
1074)   1D13 77          		 LD (HL), A	;
1075)   1D14 23          		 INC HL	;
1076)   1D15 04          		 INC B	;
1077)   1D16 0D          		 DEC C	;
1078)   1D17 20 F5       		 JR NZ, SGP_NXT	;
1079)   1D19 C1          		 POP BC	;
1080)   1D1A 0E 04       		 LD C, 4	;
1081)   1D1C 3A 18 FF    		 LD A,(VGABUF)	;
1082)   1D1F 1F          		 RRA	;
1083)   1D20 3E 08       		 LD A, 8       ;BUFFER 0	;BUFFER 0
1084)   1D22 30 02       		 JR NC, SGP_NXT2	;
1085)   1D24 3E 0C       		 LD A, 12      ;BUFFER 1	;BUFFER 1
1088)   1D26 C5          		SGP_NXT2: PUSH BC	;
1089)   1D27 CD 93 0D    		 CALL PUTPGINBANK	;
1090)   1D2A C1          		 POP BC	;
1091)   1D2B 3C          		 INC A	;
1092)   1D2C 04          		 INC B	;
1093)   1D2D 0D          		 DEC C	;
1094)   1D2E 20 F6       		 JR NZ, SGP_NXT2	;
1095)   1D30 E1          		 POP HL	;
1096)   1D31 C9          		 RET	;
1100)   1D32 06 02       		RMVGRAPHPGS: LD B, 2	;
1101)   1D34 3A 0D FF    		 LD A, (PGSEM)	;
1102)   1D37 FE 00       		 CP 0	;
1103)   1D39 C8          		 RET Z	;
1104)   1D3A 3D          		 DEC A	;
1105)   1D3B 32 0D FF    		 LD (PGSEM), A	;
1106)   1D3E FE 00       		 CP 0	;
1107)   1D40 C0          		 RET NZ	;
1108)   1D41 E5          		 PUSH HL	;
1109)   1D42 21 09 FF    		 LD HL, TMPG	;
1110)   1D45 0E 04       		 LD C, 4	;
1111)   1D47 7E          		RGP_NXT: LD A, (HL)	;
1112)   1D48 E5          		 PUSH HL	;
1113)   1D49 C5          		 PUSH BC	;
1114)   1D4A CD 93 0D    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
1115)   1D4D C1          		 POP BC	;
1116)   1D4E E1          		 POP HL	;
1117)   1D4F 04          		 INC B	;
1118)   1D50 23          		 INC HL	;
1119)   1D51 0D          		 DEC C	;
1120)   1D52 20 F3       		 JR NZ, RGP_NXT	;
1121)   1D54 E1          		 POP HL	;
1122)   1D55 C9          		 RET	;
1132)   1D56 3E 50       		VGA_CALC_VA64: LD A, 80	;
1134)   1D58 E5          		 PUSH HL	;
1135)   1D59 CD 9D 2C    		 CALL Mult12        ;HL=A * DE=Y	;HL=A * DE=Y
1136)   1D5C EB          		 EX DE, HL        ;DE=Y*80	;DE=Y*80
1137)   1D5D E1          		 POP HL	;
1138)   1D5E 0E 08       		 LD C, 8	;
1139)   1D60 CD F3 2C    		 CALL DIV16_8        ;HL=HL/C  A=REMAINDER	;HL=HL/C  A=REMAINDER
1140)   1D63 19          		 ADD HL, DE        ;THE ADDRESS IN 32K VIDEO BUFFER	;THE ADDRESS IN 32K VIDEO BUFFER
1141)   1D64 11 00 40    		 LD DE, $4000	;
1142)   1D67 19          		 ADD HL, DE        ;THE ADDRESS IN Z80 RAM	;THE ADDRESS IN Z80 RAM
1144)   1D68 4F          		 LD C,A	;
1145)   1D69 3E 07       		 LD A,7	;
1146)   1D6B 91          		 SUB C        ;A=7-REM TO FIND THE BIT TO SET LEFT TO RIGHT	;A=7-REM TO FIND THE BIT TO SET LEFT TO RIGHT
1147)   1D6C 06 01       		 LD B, 1	;
1148)   1D6E B7          		 OR A	;
1149)   1D6F 28 05       		VCVA_AGN: JR Z, VCVA_NXT	;
1150)   1D71 CB 10       		 RL B         ;MOVE B (THE MASK) TO THE RIGHT BIT	;MOVE B (THE MASK) TO THE RIGHT BIT
1151)   1D73 3D          		 DEC A	;
1152)   1D74 18 F9       		 JR VCVA_AGN	;
1153)   1D76 78          		VCVA_NXT: LD A, B	;
1154)   1D77 C9          		 RET	;
1161)   1D78 F5          		VGA_CHECKXY64: PUSH AF	;
1162)   1D79 E5          		 PUSH HL	;
1163)   1D7A D5          		 PUSH DE	;
1164)   1D7B B7          		 OR A	;
1165)   1D7C 11 80 02    		 LD DE, 640	;
1166)   1D7F ED 52       		 SBC HL, DE	;
1167)   1D81 30 0F       		 JR NC, CXY6_ABEX	;
1168)   1D83 D1          		 POP DE	;
1169)   1D84 D5          		 PUSH DE	;
1170)   1D85 EB          		 EX DE, HL	;
1171)   1D86 11 90 01    		 LD DE, 400	;
1172)   1D89 ED 52       		 SBC HL, DE	;
1173)   1D8B D1          		 POP DE         ;ABNORMAL EXIT PIXEL CANT PUT TO SCREEN	;ABNORMAL EXIT PIXEL CANT PUT TO SCREEN
1174)   1D8C E1          		 POP HL	;
1175)   1D8D 30 03       		 JR NC, CXY6_ABEX	;
1176)   1D8F F1          		 POP AF	;
1177)   1D90 37          		 SCF         ;RETURN WITH C SET	;RETURN WITH C SET
1178)   1D91 C9          		 RET	;
1179)   1D92 F1          		CXY6_ABEX: POP AF	;
1180)   1D93 AF          		 XOR A	;
1181)   1D94 C9          		 RET         ;RETURN WITH NC	;RETURN WITH NC
1186)   1D95 CD 78 1D    		VGA_PLTPXL64: CALL VGA_CHECKXY64	;
1187)   1D98 D0          		 RET NC         ;NOT VALID PARAMS	;NOT VALID PARAMS
1188)   1D99 F5          		 PUSH AF	;
1189)   1D9A E5          		 PUSH HL	;
1190)   1D9B D5          		 PUSH DE	;
1191)   1D9C CD FB 1C    		 CALL SETGRAPHPGS       ;BRING VIDEO PAGES TO Z80	;BRING VIDEO PAGES TO Z80
1192)   1D9F D1          		PP6_PAROK: POP DE	;
1193)   1DA0 E1          		 POP HL	;
1195)   1DA1 CD 56 1D    		 CALL VGA_CALC_VA64       ;HL THE VGA ADDRESS AND A THE BIT MASK	;HL THE VGA ADDRESS AND A THE BIT MASK
1196)   1DA4 D1          		 POP DE         ;D HAS THE COLOR 0 OR 1, RESET BIT OR SET	;D HAS THE COLOR 0 OR 1, RESET BIT OR SET
1197)   1DA5 5F          		 LD E, A	;
1198)   1DA6 3A 12 FF    		 LD A,(VGABCOL)	;
1199)   1DA9 BA          		 CP D         ;CHECK IF COLOR IS SAME AS BACKG	;CHECK IF COLOR IS SAME AS BACKG
1200)   1DAA 28 05       		 JR Z, PP6_RESET	;
1202)   1DAC 7E          		 LD A, (HL)        ;GET THE BYTE	;GET THE BYTE
1203)   1DAD B3          		 OR E         ;SET THE BIT	;SET THE BIT
1204)   1DAE 77          		 LD (HL), A        ;PUT THE BYTE BACK	;PUT THE BYTE BACK
1205)   1DAF 18 06       		 JR PP6_EXIT	;
1208)   1DB1 7B          		 LD A, E        ;MASK ON A	;MASK ON A
1209)   1DB2 2F          		 CPL         ;INVERT ALL PIXELS	;INVERT ALL PIXELS
1210)   1DB3 5F          		 LD E, A        ;MASK ON E	;MASK ON E
1211)   1DB4 7E          		 LD A, (HL)        ;GET THE BYTE	;GET THE BYTE
1212)   1DB5 A3          		 AND E         ;RESET THE BIT	;RESET THE BIT
1213)   1DB6 77          		 LD (HL), A        ;PUT THE BYTE BACK	;PUT THE BYTE BACK
1214)   1DB7 CD 32 1D    		PP6_EXIT: CALL RMVGRAPHPGS      ;RESTORE PREVIOUS PAGES TO Z80	;RESTORE PREVIOUS PAGES TO Z80
1215)   1DBA C9          		 RET	;
1223)   1DBB CD 78 1D    		VGA_GETPXL64: CALL VGA_CHECKXY64	;
1224)   1DBE D0          		 RET NC         ;NOT VALID PARAMS	;NOT VALID PARAMS
1225)   1DBF CD FB 1C    		 CALL SETGRAPHPGS       ;BRING VIDEO PAGES TO Z80	;BRING VIDEO PAGES TO Z80
1226)   1DC2 D1          		 POP DE	;
1227)   1DC3 E1          		 POP HL	;
1228)   1DC4 F1          		 POP AF	;
1230)   1DC5 CD 56 1D    		 CALL VGA_CALC_VA64       ;HL THE VGA ADDRESS AND A THE BIT MASK	;HL THE VGA ADDRESS AND A THE BIT MASK
1231)   1DC8 5F          		 LD E, A	;
1232)   1DC9 7E          		 LD A, (HL)	;
1233)   1DCA A3          		 AND E	;
1234)   1DCB FE 00       		 CP 0	;
1235)   1DCD 28 02       		 JR Z, GP6EXIT	;
1236)   1DCF 3E 01       		 LD A, 1	;
1238)   1DD1 F5          		GP6EXIT: PUSH AF	;
1239)   1DD2 CD 32 1D    		 CALL RMVGRAPHPGS       ;RESTORE PREVIOUS PAGES TO Z80	;RESTORE PREVIOUS PAGES TO Z80
1240)   1DD5 F1          		 POP AF	;
1241)   1DD6 C9          		 RET	;
1249)   1DD7 F5          		VGA_PLTPXL: PUSH AF	;
1250)   1DD8 E5          		 PUSH HL	;
1251)   1DD9 D5          		 PUSH DE        ;SAVE A	;SAVE A
1252)   1DDA CD 38 18    		 CALL VGA_GETCONF	;
1253)   1DDD D1          		 POP DE	;
1254)   1DDE E1          		 POP HL	;
1255)   1DDF F1          		 POP AF	;
1256)   1DE0 E5          		 PUSH HL	;
1257)   1DE1 D5          		 PUSH DE	;
1258)   1DE2 DD 21 F0 1D 		 LD IX,VGA_PPEXIT	;
1259)   1DE6 DD E5       		 PUSH IX        ;RETURN ADDRESS  	;RETURN ADDRESS
1260)   1DE8 CB 49       		 BIT 1, C        ;test low or hi	;test low or hi
1261)   1DEA C2 95 1D    		 JP NZ, VGA_PLTPXL64       ;NZ MEANS HI	;NZ MEANS HI
1262)   1DED C3 FA 1B    		 JP VGA_PLTPXL32	;
1263)   1DF0 D1          		VGA_PPEXIT: POP DE	;
1264)   1DF1 E1          		 POP HL	;
1265)   1DF2 C9          		 RET	;
1271)   1DF3 D5          		VGA_GETPXL: PUSH DE	;
1272)   1DF4 CD 38 18    		 CALL VGA_GETCONF	;
1273)   1DF7 D1          		 POP DE	;
1274)   1DF8 CB 49       		 BIT 1, C        ;test low or hi	;test low or hi
1275)   1DFA C2 BB 1D    		 JP NZ, VGA_GETPXL64       ;NZ MEANS HI	;NZ MEANS HI
1276)   1DFD C3 9D 1C    		 JP VGA_GETPXL32	;
1282)   1E00 F5          		VGA_PRNGRCH:  PUSH AF	;
1288)   1E01 1E 08       		 LD E,FONT_WIDTH	;
1289)   1E03 3A 13 FF    		VPGC_NXT: LD A,(VGATX_X)	;
1290)   1E06 67          		 LD H,A	;
1292)   1E07 CD 91 2C    		 CALL MULT8	;
1293)   1E0A E5          		 PUSH HL        ;SAVE RESULT	;SAVE RESULT
1294)   1E0B 1E 0A       		 LD E,FONT_HEIGHT	;
1295)   1E0D 3A 14 FF    		 LD A,(VGATX_Y)	;
1296)   1E10 67          		 LD H,A	;
1297)   1E11 CD 91 2C    		 CALL MULT8	;
1298)   1E14 D1          		 POP DE	;
1299)   1E15 EB          		 EX DE,HL	;
1301)   1E16 F1          		 POP AF        ;GET THE CHAR	;GET THE CHAR
1303)   1E17 E5          		VGA_PRNGRCHAT: PUSH HL	;
1304)   1E18 D5          		 PUSH DE	;
1305)   1E19 B7          		 OR A	;
1306)   1E1A 21 00 36    		 LD HL, FONT_ADDR	;
1307)   1E1D 16 00       		 LD D, 0	;
1308)   1E1F 5F          		 LD E, A	;
1309)   1E20 ED 5A       		 ADC HL, DE        ;HL THE START OF FONT	;HL THE START OF FONT
1310)   1E22 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
1311)   1E24 EB          		 EX DE,HL       ;DE THE START OF FONT PATTERN	;DE THE START OF FONT PATTERN
1312)   1E25 1A          		VPGC_AGN3: LD A, (DE)       ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1313)   1E26 06 08       		 LD B, FONT_WIDTH	;
1314)   1E28 CB 27       		VPGC_AGN4: SLA A        ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1315)   1E2A 67          		 LD H,A        ;SAVE A  	;SAVE A
1316)   1E2B 38 05       		 JR C, VPGC_FCOLOR	;
1317)   1E2D 3A 12 FF    		 LD A, (VGABCOL)	;
1318)   1E30 18 03       		 JR VPGC_CONT	;
1319)   1E32 3A 11 FF    		VPGC_FCOLOR: LD A, (VGAFCOL) 	;
1321)   1E35 D9          		VPGC_CONT: EXX 	;
1322)   1E36 D1          		 POP DE	;
1323)   1E37 E1          		 POP HL	;
1324)   1E38 CD D7 1D    		 CALL VGA_PLTPXL	;
1325)   1E3B 23          		 INC HL        ;NEXT PIXEL ON VIDEO BUF	;NEXT PIXEL ON VIDEO BUF
1326)   1E3C E5          		 PUSH HL	;
1327)   1E3D D5          		 PUSH DE	;
1328)   1E3E D9          		 EXX	;
1329)   1E3F 7C          		 LD A,H        ;RESTORE A	;RESTORE A
1330)   1E40 10 E6       		 DJNZ VPGC_AGN4	;
1331)   1E42 D9          		 EXX	;
1332)   1E43 D1          		 POP DE	;
1333)   1E44 E1          		 POP HL	;
1334)   1E45 06 00       		 LD B,0	;
1335)   1E47 0E 08       		 LD C,FONT_WIDTH	;
1336)   1E49 B7          		 OR A	;
1337)   1E4A ED 42       		 SBC HL,BC       ;X=HL AT THE START	;X=HL AT THE START
1338)   1E4C 13          		 INC DE        ;Y=DE +1	;Y=DE +1
1339)   1E4D E5          		 PUSH HL	;
1340)   1E4E D5          		 PUSH DE	;
1341)   1E4F D9          		 EXX	;
1342)   1E50 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1343)   1E51 0D          		 DEC C	;
1344)   1E52 20 D1       		 JR NZ, VPGC_AGN3	;
1345)   1E54 D1          		 POP DE	;
1346)   1E55 E1          		 POP HL	;
1347)   1E56 C9          		 RET	;
1352)   1E57 67          		VGA_CLRTXTLN: LD H,A	;
1353)   1E58 3A 14 FF    		 LD A,(VGATX_Y)	;
1354)   1E5B F5          		 PUSH AF	;
1355)   1E5C 7C          		 LD A,H	;
1356)   1E5D 32 14 FF    		 LD (VGATX_Y),A	;
1357)   1E60 F5          		 PUSH AF	;
1358)   1E61 CD 38 18    		 CALL VGA_GETCONF	;
1359)   1E64 F1          		 POP AF	;
1360)   1E65 CB 49       		 BIT 1, C 	;
1361)   1E67 06 4E       		 LD B,78       ;test low or hi	;test low or hi
1362)   1E69 20 02       		 JR NZ, DOCLRTXT;CLRTXT64    ;NZ MEANS HI	;CLRTXT64    ;NZ MEANS HI
1364)   1E6B 06 26       		 LD B,38	;
1365)   1E6D 3E 20       		DOCLRTXT: LD A,' '	;
1366)   1E6F C5          		 PUSH BC	;
1367)   1E70 CD 6A 18    		 CALL VGA_PRCH      ;PRINT AND FORWARDS	;PRINT AND FORWARDS
1368)   1E73 C1          		 POP BC	;
1369)   1E74 10 F7       		 DJNZ DOCLRTXT	;
1370)   1E76 3E 20       		 LD A,' '	;
1371)   1E78 CD 7A 18    		 CALL VGA_DOPRNCH	;
1372)   1E7B AF          		 XOR A	;
1373)   1E7C 32 13 FF    		 LD (VGATX_X),A	;
1374)   1E7F F1          		 POP AF	;
1375)   1E80 32 14 FF    		 LD LD (VGATX_Y),A	;
1376)   1E83 C9          		 RET	;
 16)   1E84 	            		 LCD_RS EQU DEVTFT       ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   1E84 	            		 LCD_CS EQU DEVTFT+1       ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   1E84 7B          		 LD A, E	;
 32)   1E85 D3 11       		 OUT (LCD_CS), A	;
 37)   1E87 DB 11       		 IN A, (LCD_CS)	;
 38)   1E89 C9          		 RET	;
 45)   1E8A 7A          		 LD A, D	;
 46)   1E8B D3 11       		 OUT (LCD_CS), A	;
 47)   1E8D C9          		 RET	;
 53)   1E8E 7A          		 LD A, D	;
 54)   1E8F D3 10       		 OUT (LCD_RS), A	;
 55)   1E91 C9          		 RET	;
 62)   1E92 AF          		 XOR A	;
 63)   1E93 D3 10       		 OUT (LCD_RS), A       ;RS LOW = COMMAND BYTE	;RS LOW = COMMAND BYTE
 64)   1E95 CD 8A 1E    		 CALL LCD_WR_BUS	;
 65)   1E98 3E 01       		 LD A, 1	;
 66)   1E9A D3 10       		 OUT (LCD_RS), A       ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   1E9C C9          		 RET	;
 71)   1E9D 16 E2       		 LD D, 0xE2        ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   1E9F CD 8E 1E    		 CALL LCD_WR_COM       ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   1EA2 16 23       		 LD D, 0x23        ;1E	;1E
 74)   1EA4 CD 8A 1E    		 CALL LCD_WR_DAT	;
 75)   1EA7 16 02       		 LD D, 0x02	;
 76)   1EA9 CD 8A 1E    		 CALL LCD_WR_DAT	;
 77)   1EAC 16 54       		 LD D, 0x54	;
 78)   1EAE CD 8A 1E    		 CALL LCD_WR_DAT	;
 79)   1EB1 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 80)   1EB3 CD 8E 1E    		 CALL LCD_WR_COM	;
 81)   1EB6 16 01       		 LD D, 0x01	;
 82)   1EB8 CD 8A 1E    		 CALL LCD_WR_DAT	;
 83)   1EBB 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 84)   1EBD CD 76 2A    		 CALL DELAYMICRO	;
 85)   1EC0 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 86)   1EC2 CD 8E 1E    		 CALL LCD_WR_COM	;
 87)   1EC5 16 03       		 LD D, 0x03	;
 88)   1EC7 CD 8A 1E    		 CALL LCD_WR_DAT	;
 89)   1ECA 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 90)   1ECC CD 76 2A    		 CALL DELAYMICRO	;
 92)   1ECF 16 01       		 LD D, 0x01        ; software reset	; software reset
 93)   1ED1 CD 8E 1E    		 CALL LCD_WR_COM	;
 94)   1ED4 06 14       		 LD B, 20        ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   1ED6 CD 76 2A    		 CALL DELAYMICRO	;
 96)   1ED9 16 E6       		 LD D, 0xE6        ;PLL setting for PCLK, depends on resolution	;PLL setting for PCLK, depends on resolution
 97)   1EDB CD 8E 1E    		 CALL LCD_WR_COM	;
 98)   1EDE 16 03       		 LD D, 0x03	;
 99)   1EE0 CD 8A 1E    		 CALL LCD_WR_DAT	;
100)   1EE3 16 33       		 LD D, 0x33        ;FF	;FF
101)   1EE5 CD 8A 1E    		 CALL LCD_WR_DAT	;
102)   1EE8 16 33       		 LD D, 0x33        ;FF	;FF
103)   1EEA CD 8A 1E    		 CALL LCD_WR_DAT	;
105)   1EED 16 B0       		 LD D, 0xB0        ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   1EEF CD 8E 1E    		 CALL LCD_WR_COM	;
107)   1EF2 16 20       		 LD D, 0x20	;
108)   1EF4 CD 8A 1E    		 CALL LCD_WR_DAT	;
109)   1EF7 16 00       		 LD D, 0x00	;
110)   1EF9 CD 8A 1E    		 CALL LCD_WR_DAT	;
111)   1EFC 16 03       		 LD D, 0x03        ;Set HDP  799	;Set HDP  799
112)   1EFE CD 8A 1E    		 CALL LCD_WR_DAT	;
113)   1F01 16 1F       		 LD D, 0x1F	;
114)   1F03 CD 8A 1E    		 CALL LCD_WR_DAT	;
115)   1F06 16 01       		 LD D, 0x01        ;Set VDP  479	;Set VDP  479
116)   1F08 CD 8A 1E    		 CALL LCD_WR_DAT	;
117)   1F0B 16 DF       		 LD D, 0xDF	;
118)   1F0D CD 8A 1E    		 CALL LCD_WR_DAT	;
119)   1F10 16 00       		 LD D, 0x00	;
120)   1F12 CD 8A 1E    		 CALL LCD_WR_DAT	;
123)   1F15 16 B4       		 LD D, 0xB4        ;HSYNC	;HSYNC
124)   1F17 CD 8E 1E    		 CALL LCD_WR_COM	;
125)   1F1A 16 04       		 LD D, 0x04        ;03         ;Set HT 928	;03         ;Set HT 928
126)   1F1C CD 8A 1E    		 CALL LCD_WR_DAT	;
127)   1F1F 16 1F       		 LD D, 0x1F        ;A0	;A0
128)   1F21 CD 8A 1E    		 CALL LCD_WR_DAT	;
129)   1F24 16 00       		 LD D, 0x00        ;Set HPS  46	;Set HPS  46
130)   1F26 CD 8A 1E    		 CALL LCD_WR_DAT	;
131)   1F29 16 D2       		 LD D, 0xD2        ;2E	;2E
132)   1F2B CD 8A 1E    		 CALL LCD_WR_DAT	;
133)   1F2E 16 00       		 LD D, 0x00        ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   1F30 CD 8A 1E    		 CALL LCD_WR_DAT	;
135)   1F33 16 00       		 LD D, 0x00        ;Set LPS  15	;Set LPS  15
136)   1F35 CD 8A 1E    		 CALL LCD_WR_DAT	;
137)   1F38 16 00       		 LD D, 0x00        ;0F	;0F
138)   1F3A CD 8A 1E    		 CALL LCD_WR_DAT	;
139)   1F3D 16 00       		 LD D, 0x00	;
140)   1F3F CD 8A 1E    		 CALL LCD_WR_DAT	;
142)   1F42 16 B6       		 LD D, 0xB6        ;VSYNC	;VSYNC
143)   1F44 CD 8E 1E    		 CALL LCD_WR_COM	;
144)   1F47 16 02       		 LD D, 0x02        ;Set VT 525	;Set VT 525
145)   1F49 CD 8A 1E    		 CALL LCD_WR_DAT	;
146)   1F4C 16 0C       		 LD D, 0x0C        ;0D	;0D
147)   1F4E CD 8A 1E    		 CALL LCD_WR_DAT	;
148)   1F51 16 00       		 LD D, 0x00        ;Set VPS  16	;Set VPS  16
149)   1F53 CD 8A 1E    		 CALL LCD_WR_DAT	;
150)   1F56 16 22       		 LD D, 0x22        ;10	;10
151)   1F58 CD 8A 1E    		 CALL LCD_WR_DAT	;
152)   1F5B 16 00       		 LD D, 0x00        ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   1F5D CD 8A 1E    		 CALL LCD_WR_DAT	;
154)   1F60 16 00       		 LD D, 0x00        ;Set FPS  8	;Set FPS  8
155)   1F62 CD 8A 1E    		 CALL LCD_WR_DAT	;
156)   1F65 16 00       		 LD D, 0x00        ; 08	; 08
157)   1F67 CD 8A 1E    		 CALL LCD_WR_DAT	;
159)   1F6A 16 B8       		 LD D, 0xB8	;
160)   1F6C CD 8E 1E    		 CALL LCD_WR_COM	;
161)   1F6F 16 0F       		 LD D, 0x0F        ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   1F71 CD 8A 1E    		 CALL LCD_WR_DAT	;
163)   1F74 16 01       		 LD D, 0x01        ;GPIO0 normal	;GPIO0 normal
164)   1F76 CD 8A 1E    		 CALL LCD_WR_DAT	;
166)   1F79 16 BA       		 LD D, 0xBA	;
167)   1F7B CD 8E 1E    		 CALL LCD_WR_COM	;
168)   1F7E 16 01       		 LD D, 0x01        ;0F	;0F
169)   1F80 CD 8A 1E    		 CALL LCD_WR_DAT       ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   1F83 16 36       		 LD D, 0x36        ;rotation	;rotation
172)   1F85 CD 8E 1E    		 CALL LCD_WR_COM	;
173)   1F88 16 08       		 LD D, 0x08        ;2A	;2A
174)   1F8A CD 8A 1E    		 CALL LCD_WR_DAT	;
176)   1F8D 16 F0       		 LD D, 0xF0        ;pixel data interface	;pixel data interface
177)   1F8F CD 8E 1E    		 CALL LCD_WR_COM	;
178)   1F92 16 06       		 LD D, 0x06        ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   1F94 CD 8A 1E    		 CALL LCD_WR_DAT	;
181)   1F97 06 05       		 LD B, 5        ;delay(5);	;delay(5);
182)   1F99 CD 76 2A    		 CALL DELAYMICRO	;
184)   1F9C 16 BC       		 LD D, 0xBC        ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   1F9E CD 8E 1E    		 CALL LCD_WR_COM	;
186)   1FA1 16 40       		 LD D, 0x40	;
187)   1FA3 CD 8A 1E    		 CALL LCD_WR_DAT	;
188)   1FA6 16 80       		 LD D, 0x80	;
189)   1FA8 CD 8A 1E    		 CALL LCD_WR_DAT	;
190)   1FAB 16 40       		 LD D, 0x40	;
191)   1FAD CD 8A 1E    		 CALL LCD_WR_DAT	;
192)   1FB0 16 01       		 LD D, 0x01	;
193)   1FB2 CD 8A 1E    		 CALL LCD_WR_DAT	;
194)   1FB5 06 05       		 LD B, 5        ;delay(5);	;delay(5);
195)   1FB7 CD 76 2A    		 CALL DELAYMICRO	;
197)   1FBA 16 35       		 LD D, 0x35        ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   1FBC CD 8E 1E    		 CALL LCD_WR_COM	;
199)   1FBF 16 00       		 LD D, 0x00        ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   1FC1 CD 8A 1E    		 CALL LCD_WR_DAT	;
202)   1FC4 16 29       		 LD D, 0x29        ;display on	;display on
203)   1FC6 CD 8E 1E    		 CALL LCD_WR_COM	;
204)   1FC9 16 BE       		 LD D, 0xBE        ;set PWM for B/L	;set PWM for B/L
205)   1FCB CD 8E 1E    		 CALL LCD_WR_COM	;
206)   1FCE 16 06       		 LD D, 0x06	;
207)   1FD0 CD 8A 1E    		 CALL LCD_WR_DAT	;
208)   1FD3 16 F0       		 LD D, 0xF0	;
209)   1FD5 CD 8A 1E    		 CALL LCD_WR_DAT	;
210)   1FD8 16 01       		 LD D, 0x01	;
211)   1FDA CD 8A 1E    		 CALL LCD_WR_DAT	;
212)   1FDD 16 F0       		 LD D, 0xF0	;
213)   1FDF CD 8A 1E    		 CALL LCD_WR_DAT	;
214)   1FE2 16 00       		 LD D, 0x00	;
215)   1FE4 CD 8A 1E    		 CALL LCD_WR_DAT	;
216)   1FE7 16 00       		 LD D, 0x00	;
217)   1FE9 CD 8A 1E    		 CALL LCD_WR_DAT	;
219)   1FEC 16 D0       		 LD D, 0xD0	;
220)   1FEE CD 8E 1E    		 CALL LCD_WR_COM	;
221)   1FF1 16 0D       		 LD D, 0x0D	;
222)   1FF3 CD 8A 1E    		 CALL LCD_WR_DAT	;
225)   1FF6 21 00 00    		 LD HL, 0	;
226)   1FF9 E5          		 PUSH HL	;
227)   1FFA E5          		 PUSH HL	;
228)   1FFB 21 1F 03    		 LD HL, 799	;
229)   1FFE E5          		 PUSH HL	;
230)   1FFF 21 DF 01    		 LD HL, 479	;
231)   2002 E5          		 PUSH HL	;
232)   2003 CD 07 20    		 CALL LCD_SETXY	;
233)   2006 C9          		 RET	;
250)   2007 DD 21 02 00 		 LD IX, 2	;
251)   200B DD 39       		 ADD IX, SP	;
252)   200D 16 2A       		 LD D, 0x2A        ;SEND IX PARAMS	;SEND IX PARAMS
253)   200F CD 8E 1E    		 CALL LCD_WR_COM	;
254)   2012 DD 56 07    		 LD D, (IX + 7)	;
255)   2015 CD 8A 1E    		 CALL LCD_WR_DAT	;
256)   2018 DD 56 06    		 LD D, (IX + 6)	;
257)   201B CD 8A 1E    		 CALL LCD_WR_DAT	;
258)   201E DD 56 03    		 LD D, (IX + 3)	;
259)   2021 CD 8A 1E    		 CALL LCD_WR_DAT	;
260)   2024 DD 56 02    		 LD D, (IX + 2)	;
261)   2027 CD 8A 1E    		 CALL LCD_WR_DAT	;
262)   202A 16 2B       		 LD D, 0x2B        ;SEND Y PARAMS	;SEND Y PARAMS
263)   202C CD 8E 1E    		 CALL LCD_WR_COM	;
264)   202F DD 56 05    		 LD D, (IX + 5)	;
265)   2032 CD 8A 1E    		 CALL LCD_WR_DAT	;
266)   2035 DD 56 04    		 LD D, (IX + 4)	;
267)   2038 CD 8A 1E    		 CALL LCD_WR_DAT	;
268)   203B DD 56 01    		 LD D, (IX + 1)	;
269)   203E CD 8A 1E    		 CALL LCD_WR_DAT	;
270)   2041 DD 56 00    		 LD D, (IX)	;
271)   2044 CD 8A 1E    		 CALL LCD_WR_DAT	;
272)   2047 16 2C       		 LD D, 0x2C        ;SEND DATA	;SEND DATA
273)   2049 CD 8E 1E    		 CALL LCD_WR_COM	;
274)   204C D1          		 POP DE	;
275)   204D 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   2050 39          		 ADD HL, SP	;
277)   2051 F9          		 LD SP, HL	;
278)   2052 EB          		 EX DE, HL	;
279)   2053 E9          		 JP (HL)	;
285)   2054 54          		 LD D, H	;
286)   2055 CD 8A 1E    		 CALL LCD_WR_DAT	;
287)   2058 55          		 LD D, L	;
288)   2059 CD 8A 1E    		 CALL LCD_WR_DAT	;
289)   205C C9          		 RET	;
294)   205D 16 2E       		 LD D, 0x2E        ;READ DATA	;READ DATA
295)   205F CD 8E 1E    		 CALL LCD_WR_COM	;
296)   2062 CD 87 1E    		@LCD_GTPXL: CALL LCD_RD_DAT	;
297)   2065 67          		 LD H, A	;
298)   2066 CD 87 1E    		 CALL LCD_RD_DAT	;
299)   2069 6F          		 LD L, A	;
300)   206A C9          		 RET	;
306)   206B DD E5       		@LCD_READPIXEL: PUSH IX       ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   206D DD 21 04 00 		 LD IX, 4        ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   2071 DD 39       		 ADD IX, SP	;
309)   2073 DD 66 03    		 LD H, (IX + 3)        ;X	;X
310)   2076 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
311)   2079 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
312)   207C DD 5E 00    		 LD E, (IX)        ;Y	;Y
313)   207F E5          		 PUSH HL	;
314)   2080 D5          		 PUSH DE	;
315)   2081 E5          		 PUSH HL	;
316)   2082 D5          		 PUSH DE	;
317)   2083 CD 07 20    		 CALL LCD_SETXY	;
318)   2086 CD 5D 20    		 CALL LCD_GETPIXEL	;
319)   2089 E5          		 PUSH HL	;
320)   208A CD BC 20    		 CALL LCD_CLRXY	;
321)   208D D1          		 POP DE         ;RESULT COLOR	;RESULT COLOR
322)   208E DD E1       		 POP IX	;
323)   2090 C1          		 POP BC         ;RET ADDR	;RET ADDR
324)   2091 21 04 00    		 LD HL, 2 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   2094 39          		 ADD HL, SP	;
326)   2095 F9          		 LD SP, HL	;
327)   2096 EB          		 EX DE, HL        ;HL RESULT	;HL RESULT
328)   2097 C5          		 PUSH BC        ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   2098 C9          		 RET	;
333)   2099 DD 21 02 00 		 LD IX, 2        ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   209D DD 39       		 ADD IX, SP	;
335)   209F DD 66 03    		 LD H, (IX + 3)        ;X	;X
336)   20A2 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
337)   20A5 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
338)   20A8 DD 5E 00    		 LD E, (IX)        ;Y	;Y
339)   20AB E5          		 PUSH HL	;
340)   20AC D5          		 PUSH DE	;
341)   20AD E5          		 PUSH HL	;
342)   20AE D5          		 PUSH DE	;
343)   20AF CD 07 20    		 CALL LCD_SETXY	;
344)   20B2 2A 01 FE    		 LD HL, (FCOLOR)	;
345)   20B5 CD 54 20    		 CALL LCD_SETPIXEL	;
346)   20B8 CD BC 20    		 CALL LCD_CLRXY	;
347)   20BB C9          		 RET	;
350)   20BC 21 00 00    		 LD HL, 0	;
351)   20BF E5          		 PUSH HL	;
352)   20C0 E5          		 PUSH HL	;
353)   20C1 21 1F 03    		 LD HL, LCD_WIDTH	;
354)   20C4 E5          		 PUSH HL	;
355)   20C5 21 DF 01    		 LD HL, LCD_HEIGHT	;
356)   20C8 E5          		 PUSH HL	;
357)   20C9 CD 07 20    		 CALL LCD_SETXY	;
358)   20CC C9          		 RET	;
365)   20CD 3A BB FE    		@LCD_FILL: LD A,(SCRNST)	;
366)   20D0 E6 01       		 AND 1	;
367)   20D2 28 0A       		 JR Z,LF_NOTEN	;
368)   20D4 D9          		 EXX	;
369)   20D5 D1          		 POP DE         ;save return addr to de'	;save return addr to de'
370)   20D6 D9          		 EXX	;
371)   20D7 CD 60 23    		 CALL _FILL	;
372)   20DA D9          		 EXX	;
373)   20DB D5          		 PUSH DE        ;restore return addr from de'	;restore return addr from de'
374)   20DC D9          		 EXX	;
375)   20DD C9          		 RET	;
376)   20DE D1          		LF_NOTEN: POP DE       ;GET RETURN ADDRESS	;GET RETURN ADDRESS
377)   20DF E1          		 POP HL        ;GET 1ST PARAM FROM STACK	;GET 1ST PARAM FROM STACK
378)   20E0 E1          		 POP HL        ;GET 2ND PARAZM FROM STACK	;GET 2ND PARAZM FROM STACK
379)   20E1 D5          		 PUSH DE        ;PUT RETURN ADDRESS ON STACK	;PUT RETURN ADDRESS ON STACK
380)   20E2 C9          		 RET  	;
382)   20E3 F5          		@LCD_PRCH: PUSH AF	;
383)   20E4 CD 47 22    		 CALL LCD_RMVCURS	;
384)   20E7 F1          		 POP AF	;
388)   20E8 F5          		 PUSH AF	;
389)   20E9 D1          		 POP DE         ;FLAGS ON E	;FLAGS ON E
390)   20EA FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
391)   20EC 28 0D       		 JR Z, PRCHOS_DOBCKSPC	;
392)   20EE FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
393)   20F0 C8          		 RET Z	;
394)   20F1 FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
395)   20F3 20 1A       		 JR NZ, PRCH_DOPRN	;
396)   20F5 21 0D FE    		 LD HL, CURSORX	;
397)   20F8 C3 28 22    		 JP PRCH_NEWLN	;
399)   20FB 21 0D FE    		 LD HL, CURSORX	;
400)   20FE 7E          		 LD A, (HL)    	;
401)   20FF FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
402)   2101 C8          		 RET Z	;
403)   2102 35          		 DEC (HL)	;
404)   2103 D5          		 PUSH DE	;
405)   2104 F1          		 POP AF        ;GET CARRY FLAG BACK	;GET CARRY FLAG BACK
406)   2105 D0          		 RET NC        ;IF C THEN DELETE LEFT CHAR ALSO	;IF C THEN DELETE LEFT CHAR ALSO
407)   2106 E5          		 PUSH HL	;
408)   2107 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
409)   2109 CD 0F 21    		 CALL PRCH_DOPRN 	;
410)   210C E1          		 POP HL	;
411)   210D 35          		 DEC (HL)	;
412)   210E C9          		 RET	;
414)   210F F5          		PRCH_DOPRN: PUSH AF       ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
415)   2110 32 10 FE    		 LD (LASTCHAR), A       ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
419)   2113 3A 16 FE    		 LD A, (VDUMODE)	;
420)   2116 FE 05       		 CP 5	;
421)   2118 20 19       		 JR NZ, VDU4	;
422)   211A 2A 5F FE    		 LD HL, (GR_LASTX)	;
423)   211D E5          		 PUSH HL	;
424)   211E ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
425)   2122 D5          		 PUSH DE	;
426)   2123 01 07 00    		 LD BC, FONT_WIDTH - 1	;
427)   2126 09          		 ADD HL, BC	;
428)   2127 E5          		 PUSH HL	;
429)   2128 01 09 00    		 LD BC, FONT_HEIGHT - 1	;
430)   212B EB          		 EX DE, HL	;
431)   212C 09          		 ADD HL, BC	;
432)   212D E5          		 PUSH HL	;
433)   212E CD 07 20    		 CALL LCD_SETXY	;
434)   2131 18 34       		 JR PRCHDO	;
435)   2133 3A 0D FE    		VDU4: LD A, (CURSORX)	;
436)   2136 06 08       		 LD B, FONT_WIDTH	;
437)   2138 16 00       		 LD D, 0	;
438)   213A 5F          		 LD E, A	;
439)   213B 21 00 00    		 LD HL, 0	;
440)   213E B7          		 OR A         ; CLEAR CARRY	; CLEAR CARRY
442)   213F ED 5A       		 ADC HL, DE	;
443)   2141 10 FC       		 DJNZ PRCH_AGN1        ;HL=DE*B	;HL=DE*B
444)   2143 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
445)   2144 11 08 00    		 LD DE, FONT_WIDTH	;
446)   2147 ED 5A       		 ADC HL, DE	;
447)   2149 2B          		 DEC HL	;
448)   214A E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
450)   214B CD 9D 21    		 CALL LCD_CALCLINE       ;SCROLL CALC	;SCROLL CALC
451)   214E 06 0A       		 LD B, FONT_HEIGHT	;
452)   2150 16 00       		 LD D, 0	;
453)   2152 5F          		 LD E, A	;
454)   2153 21 00 00    		 LD HL, 0	;
456)   2156 ED 5A       		 ADC HL, DE	;
457)   2158 10 FC       		 DJNZ PRCH_AGN2	;
458)   215A D1          		 POP DE         ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
459)   215B E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
460)   215C D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
461)   215D 11 0A 00    		 LD DE, FONT_HEIGHT	;
462)   2160 ED 5A       		 ADC HL, DE        ;CALC 4TH PARAM	;CALC 4TH PARAM
463)   2162 2B          		 DEC HL         ;4TH PARAM -1	;4TH PARAM -1
464)   2163 E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
465)   2164 CD 07 20    		 CALL LCD_SETXY	;
466)   2167 F1          		PRCHDO: POP AF         ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
467)   2168 B7          		 OR A	;
468)   2169 21 00 36    		 LD HL, FONT_ADDR	;
469)   216C 16 00       		 LD D, 0	;
470)   216E 5F          		 LD E, A	;
471)   216F ED 5A       		 ADC HL, DE        ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
472)   2171 E5          		 PUSH HL	;
473)   2172 D1          		 POP DE         ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
474)   2173 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
476)   2175 1A          		 LD A, (DE)        ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
477)   2176 06 08       		 LD B, FONT_WIDTH	;
479)   2178 CB 27       		 SLA A         ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
480)   217A 38 05       		 JR C, FORECOLOR	;
481)   217C 2A 03 FE    		 LD HL, (BCOLOR)	;
482)   217F 18 03       		 JR PRCH_CONT	;
484)   2181 2A 01 FE    		 LD HL, (FCOLOR)	;
486)   2184 F5          		 PUSH AF	;
487)   2185 D5          		 PUSH DE        ;TODO:PROBABLY NOT NEEDED HERE	;TODO:PROBABLY NOT NEEDED HERE
488)   2186 CD 54 20    		 CALL LCD_SETPIXEL	;
489)   2189 D1          		 POP DE	;
490)   218A F1          		 POP AF	;
491)   218B 10 EB       		 DJNZ PRCH_AGN4	;
492)   218D 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
493)   218E 0D          		 DEC C	;
494)   218F 20 E4       		 JR NZ, PRCH_AGN3	;
496)   2191 21 0D FE    		 LD HL, CURSORX	;
497)   2194 7E          		 LD A, (HL)	;
498)   2195 3C          		 INC A	;
499)   2196 FE 50       		 CP 80	;
500)   2198 CA 28 22    		 JP Z, PRCH_NEWLN       ;NEW LINE	;NEW LINE
501)   219B 77          		 LD (HL), A	;
502)   219C C9          		 RET	;
505)   219D 3A 0F FE    		@LCD_CALCLINE: LD A, (SCRLN)	;
506)   21A0 57          		 LD D, A	;
507)   21A1 3A 0E FE    		 LD A, (CURSORY)       ;480/10 MAKES 48 LINES	;480/10 MAKES 48 LINES
508)   21A4 82          		 ADD A, D	;
509)   21A5 FE 30       		 CP TOTLINES	;
510)   21A7 D8          		 RET C	;
512)   21A8 D6 30       		 SUB TOTLINES	;
513)   21AA C9          		 RET	;
518)   21AB 16 33       		LCD_SETSCROLL: LD D, 0x33	;
519)   21AD CD 8E 1E    		 CALL LCD_WR_COM	;
520)   21B0 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
521)   21B2 CD 8A 1E    		 CALL LCD_WR_DAT	;
522)   21B5 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
523)   21B7 CD 8A 1E    		 CALL LCD_WR_DAT	;
524)   21BA 16 01       		 LD D, 0X01        ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
525)   21BC CD 8A 1E    		 CALL LCD_WR_DAT	;
526)   21BF 16 E0       		 LD D, 0XE0        ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
527)   21C1 CD 8A 1E    		 CALL LCD_WR_DAT	;
528)   21C4 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
529)   21C6 CD 8A 1E    		 CALL LCD_WR_DAT	;
530)   21C9 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
531)   21CB CD 8A 1E    		 CALL LCD_WR_DAT	;
532)   21CE AF          		 XOR A	;
533)   21CF 32 0F FE    		 LD (SCRLN), A	;
534)   21D2 C9          		 RET	;
537)   21D3 3A 0F FE    		@LCD_DOSCROLL: LD A, (SCRLN)	;
538)   21D6 3C          		 INC A	;
539)   21D7 FE 30       		 CP TOTLINES	;
540)   21D9 38 02       		 JR C, DS_NXT	;
541)   21DB D6 30       		 SUB TOTLINES	;
542)   21DD 32 0F FE    		DS_NXT: LD (SCRLN), A	;
543)   21E0 6F          		 LD L, A	;
544)   21E1 26 00       		 LD H, 0	;
545)   21E3 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
546)   21E4 29          		 ADD HL, HL	;
547)   21E5 29          		 ADD HL, HL	;
548)   21E6 5F          		 LD E, A	;
549)   21E7 16 00       		 LD D, 0	;
550)   21E9 19          		 ADD HL, DE	;
551)   21EA 19          		 ADD HL, DE	;
552)   21EB 16 37       		 LD D, 0x37	;
553)   21ED CD 8E 1E    		 CALL LCD_WR_COM	;
554)   21F0 54          		 LD D, H        ;NEW TOP SCROLL LINE BYTES HIGH (1-480)	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
555)   21F1 CD 8A 1E    		 CALL LCD_WR_DAT	;
556)   21F4 55          		 LD D, L        ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
557)   21F5 CD 8A 1E    		 CALL LCD_WR_DAT	;
558)   21F8 C9          		 RET	;
561)   21F9 11 00 00    		@LCD_CLRTXTLN: LD DE, 0	;
563)   21FC D5          		 PUSH DE	;
564)   21FD 6F          		 LD L, A	;
565)   21FE 26 00       		 LD H, 0	;
566)   2200 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
567)   2201 29          		 ADD HL, HL	;
568)   2202 29          		 ADD HL, HL	;
569)   2203 5F          		 LD E, A	;
570)   2204 16 00       		 LD D, 0	;
571)   2206 19          		 ADD HL, DE	;
572)   2207 19          		 ADD HL, DE	;
574)   2208 E5          		 PUSH HL	;
575)   2209 11 0A 00    		 LD DE, FONT_HEIGHT	;
576)   220C 19          		 ADD HL, DE	;
578)   220D EB          		 EX DE, HL	;
579)   220E 21 1F 03    		 LD HL, LCD_WIDTH	;
581)   2211 E5          		 PUSH HL	;
582)   2212 D5          		 PUSH DE        ;PARAM4	;PARAM4
583)   2213 CD 07 20    		 CALL LCD_SETXY	;
584)   2216 01 40 1F    		 LD BC, 8000        ; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
585)   2219 2A 03 FE    		 LD HL, (BCOLOR)	;
586)   221C CD 54 20    		CTL_AGN: CALL LCD_SETPIXEL      ;DESTROYS D,A	;DESTROYS D,A
587)   221F 0B          		 DEC BC	;
588)   2220 78          		 LD A, B	;
589)   2221 B1          		 OR C	;
590)   2222 20 F8       		 JR NZ, CTL_AGN	;
591)   2224 CD BC 20    		 CALL LCD_CLRXY	;
592)   2227 C9          		 RET	;
596)   2228 AF          		 XOR A	;
597)   2229 77          		 LD (HL), A	;
598)   222A 23          		 INC HL	;
599)   222B 7E          		 LD A, (HL)	;
600)   222C 3C          		 INC A	;
602)   222D FE 30       		 CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
603)   222F 28 02       		 JR Z, PRCH_SCROLL	;
604)   2231 77          		 LD (HL), A	;
605)   2232 C9          		 RET	;
607)   2233 F5          		PRCH_SCROLL: PUSH AF	;
608)   2234 E5          		 PUSH HL	;
610)   2235 3A 0F FE    		 LD A, (SCRLN)	;
611)   2238 CD F9 21    		 CALL LCD_CLRTXTLN	;
613)   223B CD D3 21    		 CALL LCD_DOSCROLL	;
614)   223E E1          		 POP HL	;
615)   223F F1          		 POP AF	;
617)   2240 3D          		 DEC A	;
618)   2241 77          		 LD (HL), A        ;CURSORY	;CURSORY
619)   2242 AF          		 XOR A	;
620)   2243 32 0D FE    		 LD (CURSORX), A	;
621)   2246 C9          		 RET	;
636)   2247 2A 03 FE    		 LD HL, (BCOLOR)       ;	;
637)   224A 18 03       		 JR LCD_SETCURS	;
648)   224C 2A 01 FE    		 LD HL, (FCOLOR)       ;COLOR PARAM	;COLOR PARAM
651)   224F E5          		 PUSH HL        ;COLOR PARAM	;COLOR PARAM
652)   2250 3A 0D FE    		 LD A, (CURSORX)	;
653)   2253 06 08       		 LD B, FONT_WIDTH	;
654)   2255 16 00       		 LD D, 0	;
655)   2257 5F          		 LD E, A	;
656)   2258 21 00 00    		 LD HL, 0	;
657)   225B B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
659)   225C ED 5A       		 ADC HL, DE	;
660)   225E 10 FC       		 DJNZ SCUR_AGN1        ;HL = DE * B	;HL = DE * B
661)   2260 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
662)   2261 01 08 00    		 LD BC, FONT_WIDTH	;
663)   2264 ED 4A       		 ADC HL, BC        ;NEXT CHAR	;NEXT CHAR
664)   2266 2B          		 DEC HL         ;MINUS 1	;MINUS 1
665)   2267 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
667)   2268 CD 9D 21    		 CALL LCD_CALCLINE	;
668)   226B 06 0A       		 LD B, FONT_HEIGHT	;
669)   226D 16 00       		 LD D, 0	;
670)   226F 5F          		 LD E, A	;
671)   2270 21 00 00    		 LD HL, 0	;
673)   2273 ED 5A       		 ADC HL, DE	;
674)   2275 10 FC       		 DJNZ SCUR_AGN2        ;HL=B*DE	;HL=B*DE
675)   2277 0E 08       		 LD C, FONT_HEIGHT - 2       ;2 PIXEL HEIGTH CURSOR	;2 PIXEL HEIGTH CURSOR
676)   2279 06 00       		 LD B, 0	;
677)   227B ED 4A       		 ADC HL, BC        ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
678)   227D D1          		 POP DE         ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
679)   227E E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
680)   227F D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
682)   2280 23          		 INC HL         ; Y2 ADD THE LAST +2 PIXELS	; Y2 ADD THE LAST +2 PIXELS
683)   2281 E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
684)   2282 CD 07 20    		 CALL LCD_SETXY	;
686)   2285 E1          		 POP HL         ;GET THE COLOR	;GET THE COLOR
687)   2286 06 10       		 LD B, 2 * FONT_WIDTH       ;2*8=16	;2*8=16
689)   2288 CD 54 20    		 CALL LCD_SETPIXEL       ;DESTROYS D,A	;DESTROYS D,A
690)   228B 10 FB       		 DJNZ SCUR_AGN3	;
695)   228D C9          		 RET	;
699)   228E CD BC 20    		 CALL LCD_CLRXY        ;	;
700)   2291 2A 03 FE    		 LD HL, (BCOLOR)	;
702)   2294 01 E0 01    		 LD BC, LCD_HEIGHT + 1	;
703)   2297 C5          		CS_AGNA2: PUSH BC	;
704)   2298 01 20 03    		 LD BC, LCD_WIDTH + 1	;
705)   229B CD 54 20    		CS_AGNA1: CALL LCD_SETPIXEL      ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
706)   229E 0B          		 DEC BC	;
707)   229F 78          		 LD A, B	;
708)   22A0 B1          		 OR C	;
709)   22A1 20 F8       		 JR NZ, CS_AGNA1	;
710)   22A3 C1          		 POP BC	;
711)   22A4 0B          		 DEC BC	;
712)   22A5 78          		 LD A, B	;
713)   22A6 B1          		 OR C	;
714)   22A7 20 EE       		 JR NZ, CS_AGNA2	;
715)   22A9 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
716)   22AC 22 0D FE    		 LD (CURSORX), HL	;
717)   22AF C9          		 RET	;
722)   22B0 06 DF       		 LD B, LCD_HEIGHT.AND.0xFF      ;lsb	;lsb
723)   22B2 0E 02       		 LD C, LCD_HEIGHT.SHR.8 + 1      ;MSB+1	;MSB+1
725)   22B4 C5          		 PUSH BC	;
727)   22B5 06 1F       		 LD B, LCD_WIDTH.AND.0xFF      ;lsb	;lsb
728)   22B7 0E 04       		 LD C, LCD_WIDTH.SHR.8 + 1      ;MSV+1	;MSV+1
730)   22B9 CD 54 20    		 CALL LCD_SETPIXEL       ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
731)   22BC 10 FB       		 DJNZ CS_AGN1	;
732)   22BE 0D          		 DEC C	;
733)   22BF 20 F8       		 JR NZ, CS_AGN1	;
734)   22C1 C1          		 POP BC	;
735)   22C2 10 F0       		 DJNZ CS_AGN2	;
736)   22C4 0D          		 DEC C	;
737)   22C5 20 ED       		 JR NZ, CS_AGN2	;
738)   22C7 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
739)   22CA 22 0D FE    		 LD (CURSORX), HL	;
740)   22CD C9          		 RET	;
745)   22CE 7E          		@LCD_MSG: LD A, (HL)	;
746)   22CF FE 00       		 CP 0	;
747)   22D1 C8          		 RET Z	;
748)   22D2 E5          		 PUSH HL	;
749)   22D3 CD E3 20    		 CALL LCD_PRCH	;
750)   22D6 E1          		 POP HL	;
751)   22D7 23          		 INC HL	;
752)   22D8 18 F4       		 JR LCD_MSG	;
  3)   22DA AF          		NEGHL: xor a	;
  4)   22DB 95          		 sub l	;
  5)   22DC 6F          		 ld l, a	;
  6)   22DD 9F          		 sbc a, a	;
  7)   22DE 94          		 sub h	;
  8)   22DF 67          		 ld h, a	;
  9)   22E0 C9          		 RET	;
 13)   22E1 2A 79 FE    		 LD HL, (FILL_IDX)	;
 14)   22E4 01 58 02    		 LD BC, MAXQ	;
 15)   22E7 A7          		 AND A	;
 16)   22E8 ED 42       		 SBC HL, BC	;
 17)   22EA D0          		 RET NC     ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 18)   22EB 2A 7B FE    		 LD HL, (FILL_PY)	;
 19)   22EE ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 20)   22F2 19          		 ADD HL, DE	;
 21)   22F3 7C          		 LD A, H	;
 22)   22F4 FE 80       		 CP 80H	;
 23)   22F6 D0          		 RET NC     ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 24)   22F7 11 1F 03    		 LD DE, LCD_WIDTH	;
 25)   22FA ED 52       		 SBC HL, DE	;
 26)   22FC D0          		 RET NC      ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 28)   22FD 2A 77 FE    		 LD HL, (FILL_Q)	;
 29)   2300 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 30)   2304 78          		 LD A, B	;
 31)   2305 B1          		 OR C       ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 32)   2306 28 08       		 JR Z, QPS_NXT1	;
 33)   2308 EB          		 EX DE, HL	;
 34)   2309 C5          		 PUSH BC	;
 35)   230A E1          		 POP HL	;
 36)   230B 29          		 ADD HL, HL	;
 37)   230C 29          		 ADD HL, HL	;
 38)   230D 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 39)   230E EB          		 EX DE, HL	;
 40)   230F 19          		 ADD HL, DE	;
 42)   2310 11 7B FE    		 LD DE, FILL_PY	;
 43)   2313 EB          		 EX DE, HL      ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 44)   2314 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 45)   2317 ED B0       		 LDIR       ;COPY	;COPY
 46)   2319 2A 79 FE    		 LD HL, (FILL_IDX)	;
 47)   231C 23          		 INC HL	;
 48)   231D 22 79 FE    		 LD (FILL_IDX), HL	;
 49)   2320 C9          		QPS_EXT: RET	;
 51)   2321 2A 77 FE    		QPOP: LD HL, (FILL_Q)	;
 52)   2324 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 53)   2328 0B          		 DEC BC	;
 54)   2329 C5          		 PUSH BC	;
 55)   232A 78          		 LD A, B	;
 56)   232B B1          		 OR C       ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 57)   232C 28 08       		 JR Z, QPP_NXT1	;
 58)   232E EB          		 EX DE, HL	;
 59)   232F C5          		 PUSH BC	;
 60)   2330 E1          		 POP HL	;
 61)   2331 29          		 ADD HL, HL	;
 62)   2332 29          		 ADD HL, HL	;
 63)   2333 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 64)   2334 EB          		 EX DE, HL	;
 65)   2335 19          		 ADD HL, DE	;
 66)   2336 C1          		QPP_NXT1: POP BC	;
 67)   2337 ED 43 79 FE 		 LD (FILL_IDX), BC	;
 69)   233B 11 7B FE    		 LD DE, FILL_PY     ;ORIGIN=QUEUE DEST=FILL_PY	;ORIGIN=QUEUE DEST=FILL_PY
 70)   233E 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 71)   2341 ED B0       		 LDIR       ;COPY	;COPY
 72)   2343 2A 7D FE    		 LD HL, (FILL_PXL)	;
 73)   2346 22 71 FE    		 LD (FILL_X1), HL	;
 74)   2349 2A 7F FE    		 LD HL, (FILL_PXR)	;
 75)   234C 22 73 FE    		 LD (FILL_X2), HL	;
 76)   234F ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 77)   2353 ED 53 75 FE 		 LD (FILL_DY), DE	;
 78)   2357 2A 7B FE    		 LD HL, (FILL_PY)	;
 79)   235A A7          		 AND A	;
 80)   235B 19          		 ADD HL, DE	;
 81)   235C 22 6D FE    		 LD (FILL_Y), HL	;
 89)   235F C9          		 RET	;
 91)   2360 E1          		@_FILL: POP HL     ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 92)   2361 D1          		 POP DE      ;Y	;Y
 93)   2362 C1          		 POP BC      ;X	;X
 94)   2363 E5          		 PUSH HL      ;RET ADDR TO SP	;RET ADDR TO SP
 95)   2364 ED 43 6B FE 		 LD (FILL_X), BC	;
 96)   2368 ED 53 6D FE 		 LD (FILL_Y), DE	;
 97)   236C ED 73 85 FE 		 LD (FILL_OLDSP), SP	;
 98)   2370 21 3E ED    		 LD HL, - ((MAXQ * 8) + 2)  ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
 99)   2373 39          		 ADD HL, SP	;
100)   2374 F9          		 LD SP, HL      ;NEW SP	;NEW SP
103)   2375 22 77 FE    		 LD (FILL_Q), HL     ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
104)   2378 21 00 00    		 LD HL, 0	;
105)   237B 22 79 FE    		 LD (FILL_IDX), HL    ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
109)   237E 2A 6B FE    		 LD HL, (FILL_X)    ;	;
110)   2381 E5          		 PUSH HL	;
111)   2382 2A 6D FE    		 LD HL, (FILL_y)    ;	;
112)   2385 E5          		 PUSH HL	;
113)   2386 CD 6B 20    		 CALL LCD_READPIXEL	;
114)   2389 22 83 FE    		 LD (FILL_OV), HL	;
116)   238C ED 5B 01 FE 		 LD DE, (FCOLOR)	;
117)   2390 A7          		 AND A	;
118)   2391 ED 52       		 SBC HL, DE      ;CHK OV=NV	;CHK OV=NV
119)   2393 CA 1A 25    		 JP Z, FL_EXIT	;
120)   2396 2A 6B FE    		 LD HL, (FILL_X)	;
121)   2399 7C          		 LD A, H	;
122)   239A FE 80       		 CP 0x80      ;CHK <0	;CHK <0
123)   239C D2 1A 25    		 JP NC, FL_EXIT	;
124)   239F 11 1F 03    		 LD DE, LCD_WIDTH	;
125)   23A2 A7          		 AND A	;
126)   23A3 ED 52       		 SBC HL, DE      ;CHK>799	;CHK>799
127)   23A5 D2 1A 25    		 JP NC, FL_EXIT	;
128)   23A8 2A 6D FE    		 LD HL, (FILL_Y)	;
129)   23AB 7C          		 LD A, H	;
130)   23AC FE 80       		 CP 0x80      ;CHK <0	;CHK <0
131)   23AE D2 1A 25    		 JP NC, FL_EXIT	;
132)   23B1 11 DF 01    		 LD DE, LCD_HEIGHT	;
133)   23B4 A7          		 AND A	;
134)   23B5 ED 52       		 SBC HL, DE      ;CHK>480	;CHK>480
135)   23B7 D2 1A 25    		 JP NC, FL_EXIT	;
137)   23BA 2A 6D FE    		 LD HL, (FILL_Y)	;
138)   23BD 22 7B FE    		 LD (FILL_PY), HL	;
139)   23C0 2A 6B FE    		 LD HL, (FILL_X)	;
140)   23C3 22 7D FE    		 LD (FILL_PXL), HL	;
141)   23C6 22 7F FE    		 LD (FILL_PXR), HL	;
142)   23C9 21 01 00    		 LD HL, 1	;
143)   23CC 22 81 FE    		 LD (FILL_PDY), HL	;
144)   23CF CD E1 22    		 CALL QPUSH      ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
146)   23D2 2A 6D FE    		 LD HL, (FILL_Y)	;
147)   23D5 23          		 INC HL	;
148)   23D6 22 7B FE    		 LD (FILL_PY), HL	;
149)   23D9 21 FF FF    		 LD HL, - 1	;
150)   23DC 22 81 FE    		 LD (FILL_PDY), HL	;
151)   23DF CD E1 22    		 CALL QPUSH	;
153)   23E2 ED 5B 79 FE 		 LD DE, (FILL_IDX)	;
154)   23E6 7A          		 LD A, D	;
155)   23E7 B3          		 OR E	;
156)   23E8 CA 1A 25    		 JP Z, FL_EXIT     ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
160)   23EB CD 21 23    		 CALL QPOP      ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
163)   23EE 2A 71 FE    		 LD HL, (FILL_X1)	;
164)   23F1 22 6B FE    		 LD (FILL_X), HL	;
165)   23F4 7C          		FL_LP1: LD A, H	;
166)   23F5 FE 80       		 CP 0x80      ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
167)   23F7 D2 20 24    		 JP NC, FL_NXT1	;
168)   23FA ED 5B 6D FE 		 LD DE, (FILL_Y)	;
169)   23FE E5          		 PUSH HL	;
170)   23FF D5          		 PUSH DE	;
171)   2400 CD 6B 20    		 CALL LCD_READPIXEL	;
172)   2403 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
173)   2407 A7          		 AND A	;
174)   2408 ED 52       		 SBC HL, DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
175)   240A C2 20 24    		 JP NZ, FL_NXT1	;
176)   240D ED 5B 6B FE 		 LD DE, (FILL_X)	;
177)   2411 2A 6D FE    		 LD HL, (FILL_Y)	;
178)   2414 D5          		 PUSH DE	;
179)   2415 EB          		 EX DE,HL	;
180)   2416 CD 20 25    		 CALL PLOTP	;
181)   2419 E1          		 POP HL	;
182)   241A 2B          		 DEC HL	;
183)   241B 22 6B FE    		 LD (FILL_X), HL	;
184)   241E 18 D4       		 JR FL_LP1	;
188)   2420 2A 6B FE    		 LD HL, (FILL_X)	;
189)   2423 ED 5B 71 FE 		 LD DE, (FILL_X1)	;
190)   2427 7C          		 LD A, H	;
191)   2428 FE 80       		 CP 80H	;
192)   242A 30 08       		 JR NC, FL_NXT1A     ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
193)   242C A7          		 AND A	;
194)   242D ED 52       		 SBC HL, DE      ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
195)   242F D2 D8 24    		 JP NC, FL_SKIP     ;C IF DE>HL X1>X, NC IF X>=X1	;C IF DE>HL X1>X, NC IF X>=X1
196)   2432 ED 5A       		 ADC HL, DE	;
199)   2434 23          		 INC HL	;
200)   2435 22 6F FE    		 LD (FILL_L), HL	;
203)   2438 A7          		 AND A	;
204)   2439 ED 52       		 SBC HL, DE      ;CHK L-X1	;CHK L-X1
205)   243B 30 1E       		 JR NC, FL_NXT2     ;C IF DE>HL X1>L	;C IF DE>HL X1>L
206)   243D 28 1C       		 JR Z, FL_NXT2	;
207)   243F ED 5A       		 ADC HL, DE	;
208)   2441 22 7D FE    		 LD (FILL_PXL), HL    ;L	;L
209)   2444 2A 6D FE    		 LD HL, (FILL_Y)	;
210)   2447 22 7B FE    		 LD (FILL_PY), HL	;
211)   244A 1B          		 DEC DE	;
212)   244B ED 53 7F FE 		 LD (FILL_PXR), DE	;
213)   244F 2A 75 FE    		 LD HL, (FILL_DY)	;
214)   2452 CD DA 22    		 CALL NEGHL	;
215)   2455 22 81 FE    		 LD (FILL_PDY), HL	;
216)   2458 CD E1 22    		 CALL QPUSH	;
220)   245B 2A 71 FE    		 LD HL, (FILL_X1)     ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
221)   245E 23          		 INC HL	;
222)   245F 22 6B FE    		 LD (FILL_X), HL	;
226)   2462 11 1F 03    		 LD DE, LCD_WIDTH	;
227)   2465 A7          		 AND A	;
228)   2466 EB          		 EX DE, HL	;
229)   2467 ED 52       		 SBC HL, DE      ;800-(X=DE)	;800-(X=DE)
230)   2469 38 25       		 JR C, FL_NXT3     ;C IF X>800	;C IF X>800
231)   246B EB          		 EX DE, HL      ;HL=X	;HL=X
232)   246C E5          		 PUSH HL	;
233)   246D 2A 6D FE    		 LD HL, (FILL_Y)	;
234)   2470 E5          		 PUSH HL	;
235)   2471 CD 6B 20    		 CALL LCD_READPIXEL	;
236)   2474 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
237)   2478 A7          		 AND A	;
238)   2479 ED 52       		 SBC HL, DE      ;PIXELREAD=OV	;PIXELREAD=OV
239)   247B 20 13       		 JR NZ, FL_NXT3	;
240)   247D ED 5B 6B FE 		 LD DE, (FILL_X)	;
241)   2481 2A 6D FE    		 LD HL, (FILL_Y)	;
242)   2484 D5          		 PUSH DE	;
243)   2485 EB          		 EX DE,HL	;
244)   2486 CD 20 25    		 CALL PLOTP	;
245)   2489 E1          		 POP HL	;
246)   248A 23          		 INC HL	;
247)   248B 22 6B FE    		 LD (FILL_X), HL	;
248)   248E 18 D2       		 JR FL_LP2	;
251)   2490 2A 6D FE    		 LD HL, (FILL_Y)	;
252)   2493 22 7B FE    		 LD (FILL_PY), HL	;
253)   2496 2A 6F FE    		 LD HL, (FILL_L)	;
254)   2499 22 7D FE    		 LD (FILL_PXL), HL	;
255)   249C 2A 6B FE    		 LD HL, (FILL_X)	;
256)   249F 2B          		 DEC HL	;
257)   24A0 22 7F FE    		 LD (FILL_PXR), HL	;
258)   24A3 2A 75 FE    		 LD HL, (FILL_DY)	;
259)   24A6 22 81 FE    		 LD (FILL_PDY), HL	;
260)   24A9 CD E1 22    		 CALL QPUSH	;
262)   24AC 2A 6B FE    		 LD HL, (FILL_X)	;
263)   24AF ED 5B 73 FE 		 LD DE, (FILL_X2)	;
264)   24B3 13          		 INC DE	;
265)   24B4 A7          		 AND A	;
266)   24B5 ED 52       		 SBC HL, DE      ;X-(X2+1) C IF X2+1>X	;X-(X2+1) C IF X2+1>X
267)   24B7 38 1F       		 JR C, FL_NXT4	;
268)   24B9 28 1D       		 JR Z, FL_NXT4	;
269)   24BB 2A 6D FE    		 LD HL, (FILL_Y)	;
270)   24BE 22 7B FE    		 LD (FILL_PY), HL	;
271)   24C1 ED 53 7D FE 		 LD (FILL_PXL), DE	;
272)   24C5 2A 6B FE    		 LD HL, (FILL_X)    ;	;
273)   24C8 2B          		 DEC HL	;
274)   24C9 22 7F FE    		 LD (FILL_PXR), HL	;
275)   24CC 2A 75 FE    		 LD HL, (FILL_DY)	;
276)   24CF CD DA 22    		 CALL NEGHL	;
277)   24D2 22 81 FE    		 LD (FILL_PDY), HL	;
278)   24D5 CD E1 22    		 CALL QPUSH	;
281)   24D8 2A 6B FE    		 LD HL, (FILL_X)	;
282)   24DB 23          		 INC HL	;
283)   24DC 22 6B FE    		 LD (FILL_X), HL	;
284)   24DF ED 5B 73 FE 		FL_LP3: LD DE, (FILL_X2)	;
285)   24E3 A7          		 AND A	;
286)   24E4 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
287)   24E5 ED 52       		 SBC HL, DE      ;C IF DE>HL X>X2	;C IF DE>HL X>X2
288)   24E7 38 1C       		 JR C, FL_NXT5	;
289)   24E9 19          		 ADD HL, DE      ;	;
290)   24EA EB          		 EX DE, HL      ;X=HL X2=DE	;X=HL X2=DE
291)   24EB E5          		 PUSH HL	;
292)   24EC 2A 6D FE    		 LD HL, (FILL_Y)	;
293)   24EF E5          		 PUSH HL	;
294)   24F0 CD 6B 20    		 CALL LCD_READPIXEL	;
295)   24F3 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
296)   24F7 A7          		 AND A	;
297)   24F8 ED 52       		 SBC HL, DE      ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
298)   24FA 28 09       		 JR Z, FL_NXT5	;
299)   24FC 2A 6B FE    		 LD HL, (FILL_X)	;
300)   24FF 23          		 INC HL	;
301)   2500 22 6B FE    		 LD (FILL_X), HL	;
302)   2503 18 DA       		 JR FL_LP3	;
305)   2505 2A 6B FE    		 LD HL, (FILL_X)	;
306)   2508 22 6F FE    		 LD (FILL_L), HL	;
308)   250B ED 5B 73 FE 		 LD DE, (FILL_X2)	;
309)   250F A7          		 AND A	;
310)   2510 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
311)   2511 ED 52       		 SBC HL, DE      ;X2-X C IF X>X2	;X2-X C IF X>X2
312)   2513 EB          		 EX DE, HL      ;X=HL X2-X=DE	;X=HL X2-X=DE
313)   2514 DA E2 23    		 JP C, FL_LP0    ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
314)   2517 C3 62 24    		 JP FL_LP2      ;GOTO DO WHILE	;GOTO DO WHILE
317)   251A 21 C2 12    		FL_EXIT: LD HL, (MAXQ * 8) + 2  ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
318)   251D 39          		 ADD HL, SP	;
319)   251E F9          		 LD SP, HL      ;NEW SP	;NEW SP
320)   251F C9          		 RET	;
  7)   2520 C5          		@PLOTP:        PUSH BC        ;SAVE BC	;SAVE BC
  8)   2521 DD E5       		 PUSH IX	;
 10)   2523 D5          		               PUSH DE	;
 11)   2524 E5          		               PUSH HL	;
 14)   2525 E5          		 PUSH HL	;
 15)   2526 D5          		 PUSH DE	;
 16)   2527 E5          		 PUSH HL	;
 17)   2528 D5          		 PUSH DE	;
 18)   2529 CD 07 20    		 CALL LCD_SETXY	;
 20)   252C 2A 01 FE    		 LD HL, (FCOLOR)	;
 21)   252F CD 54 20    		 CALL LCD_SETPIXEL	;
 24)   2532 E1          		               POP HL	;
 25)   2533 D1          		               POP DE                 	;
 26)   2534 3A 11 FF    		               LD A,(VGAFCOL)	;
 27)   2537 CD D7 1D    		               CALL VGA_PLTPXL	;
 29)   253A DD E1       		 POP IX	;
 30)   253C C1          		 POP BC         ;RESTORE BC	;RESTORE BC
 31)   253D C9          		 RET	;
 34)   253E CD 8E 22    		@CLEARGRAPH:   CALL LCD_CLRSCR	;
 35)   2541 CD 5D 1C    		 CALL VGA_GRCLS	;
 36)   2544 C9          		               RET	;
 40)   2545 DD 21 02 00 		@GR_DRAWHLINE: LD IX, 2      ;3 PARAMS 2-BYTES EACH TOTAL 6 BYTES  	;3 PARAMS 2-BYTES EACH TOTAL 6 BYTES
 41)   2549 DD 39       		 ADD IX, SP	;
 42)   254B DD 66 05    		 LD H, (IX + 5)        ;X	;X
 43)   254E DD 6E 04    		 LD L, (IX + 4)        ;X	;X
 44)   2551 DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
 45)   2554 DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
 46)   2557 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
 47)   255A DD 4E 00    		 LD C, (IX)        ;LENGTH   	;LENGTH
 48)   255D E5          		 PUSH HL	;
 49)   255E 21 00 80    		 LD HL, $8000	;
 50)   2561 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 51)   2562 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
 52)   2564 30 0A       		 JR NC, POSH1	;
 53)   2566 AF          		 XOR A         ;l=-l	;l=-l
 54)   2567 91          		 SUB C	;
 55)   2568 4F          		 LD C, A	;
 56)   2569 9F          		 SBC A, A	;
 57)   256A 90          		 SUB B	;
 58)   256B 47          		 LD B, A	;
 59)   256C E1          		 POP HL	;
 60)   256D ED 42       		 SBC HL, BC        ;x -= l;	;x -= l;
 61)   256F E5          		 PUSH HL	;
 62)   2570 E1          		POSH1: POP HL 	;
 63)   2571 E5          		NXTH1: PUSH HL	;
 64)   2572 D5          		               PUSH DE                	;
 65)   2573 CD 20 25    		               CALL PLOTP                     ;HL X,DE Y                	;HL X,DE Y
 66)   2576 D1          		               POP DE	;
 67)   2577 E1          		               POP HL                	;
 68)   2578 23          		               INC HL	;
 69)   2579 0B          		 DEC BC	;
 70)   257A 79          		 LD A, C	;
 71)   257B B0          		 OR B	;
 72)   257C 20 F3       		 JR NZ, NXTH1	;
 73)   257E CD BC 20    		 CALL LCD_CLRXY	;
 74)   2581 D1          		 POP DE	;
 75)   2582 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
 76)   2585 39          		 ADD HL, SP	;
 77)   2586 F9          		 LD SP, HL	;
 78)   2587 EB          		 EX DE, HL	;
 79)   2588 E9          		 JP (HL)	;
 85)   2589 DD 21 02 00 		 LD IX, 2	;
 86)   258D DD 39       		 ADD IX, SP	;
 87)   258F DD 66 05    		 LD H, (IX + 5)        ;X	;X
 88)   2592 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
 89)   2595 DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
 90)   2598 DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
 91)   259B DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
 92)   259E DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
 93)   25A1 E5          		 PUSH HL	;
 94)   25A2 21 00 80    		 LD HL, $8000	;
 95)   25A5 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 96)   25A6 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
 97)   25A8 30 0A       		 JR NC, POSV1	;
 98)   25AA AF          		 XOR A         ;l=-l	;l=-l
 99)   25AB 91          		 SUB C	;
100)   25AC 4F          		 LD C, A	;
101)   25AD 9F          		 SBC A, A	;
102)   25AE 90          		 SUB B	;
103)   25AF 47          		 LD B, A	;
104)   25B0 EB          		 EX DE,HL	;
105)   25B1 ED 42       		 SBC HL, BC        ;Y -= l;	;Y -= l;
106)   25B3 EB          		 EX DE,HL	;
107)   25B4 E1          		POSV1: POP HL	;
108)   25B5 E5          		NXTV1: PUSH HL	;
109)   25B6 D5          		               PUSH DE	;
110)   25B7 CD 20 25    		               CALL PLOTP	;
111)   25BA D1          		               POP DE	;
112)   25BB E1          		               POP HL	;
113)   25BC 13          		               INC DE	;
114)   25BD 0B          		 DEC BC	;
115)   25BE 79          		 LD A, C	;
116)   25BF B0          		 OR B	;
117)   25C0 20 F3       		 JR NZ, NXTV1	;
118)   25C2 CD BC 20    		 CALL LCD_CLRXY	;
119)   25C5 D1          		 POP DE	;
120)   25C6 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
121)   25C9 39          		 ADD HL, SP	;
122)   25CA F9          		 LD SP, HL	;
123)   25CB EB          		 EX DE, HL	;
124)   25CC E9          		 JP (HL)	;
128)   25CD DD 21 02 00 		 LD IX, 2	;
129)   25D1 DD 39       		 ADD IX, SP	;
139)   25D3 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
140)   25D6 DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
141)   25D9 DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
142)   25DC DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
143)   25DF B7          		 OR A	;
144)   25E0 ED 52       		 SBC HL, DE	;
145)   25E2 20 17       		 JR NZ, YNOTEQ	;
147)   25E4 DD 46 07    		 LD B, (IX + 7)        ;X1	;X1
148)   25E7 DD 4E 06    		 LD C, (IX + 6)        ;X1	;X1
149)   25EA C5          		 PUSH BC        ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
150)   25EB D5          		 PUSH DE        ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
151)   25EC DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
152)   25EF DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
153)   25F2 ED 42       		 SBC HL, BC        ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
154)   25F4 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
155)   25F5 CD 45 25    		 CALL GR_DRAWHLINE	;
156)   25F8 C3 9C 27    		 JP DLNEX	;
158)   25FB DD 66 07    		 LD H, (IX + 7)        ;X1	;X1
159)   25FE DD 6E 06    		 LD L, (IX + 6)        ;X1	;X1
160)   2601 DD 56 03    		 LD D, (IX + 3)        ;X2	;X2
161)   2604 DD 5E 02    		 LD E, (IX + 2)        ;X2	;X2
162)   2607 B7          		 OR A	;
163)   2608 ED 52       		 SBC HL, DE	;
164)   260A 20 17       		 JR NZ, XNOTEQ	;
166)   260C D5          		 PUSH DE        ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
167)   260D DD 46 05    		 LD B, (IX + 5)        ;Y1	;Y1
168)   2610 DD 4E 04    		 LD C, (IX + 4)        ;Y1	;Y1
169)   2613 C5          		 PUSH BC        ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
170)   2614 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
171)   2617 DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
172)   261A ED 42       		 SBC HL, BC        ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
173)   261C E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
174)   261D CD 89 25    		 CALL GR_DRAWVLINE	;
175)   2620 C3 9C 27    		 JP DLNEX	;
178)   2623 38 04       		 JR C, X2GTX1	;
180)   2625 AF          		 XOR A	;
181)   2626 3D          		 DEC A         ;XSTEP=-1	;XSTEP=-1
182)   2627 18 0D       		 JR DLNXT1	;
185)   2629 D5          		 PUSH DE	;
186)   262A E1          		 POP HL	;
187)   262B DD 56 07    		 LD D, (IX + 7)        ;X1	;X1
188)   262E DD 5E 06    		 LD E, (IX + 6)        ;X1	;X1
189)   2631 B7          		 OR A	;
190)   2632 ED 52       		 SBC HL, DE        ;X2-X1 ON HL	;X2-X1 ON HL
192)   2634 3E 01       		 LD A, 1        ;XSTEP=1	;XSTEP=1
194)   2636 06 00       		 LD B, 0	;
195)   2638 0E 00       		 LD C, 0	;
196)   263A C5          		 PUSH BC        ;T	;T
197)   263B E5          		 PUSH HL        ;DX	;DX
198)   263C FE 01       		 CP 1	;
199)   263E 28 02       		 JR Z, DLXMINUS1	;
200)   2640 06 FF       		 LD B, 0XFF	;
201)   2642 4F          		DLXMINUS1: LD C, A	;
202)   2643 C5          		 PUSH BC        ;XSTEP	;XSTEP
203)   2644 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
204)   2647 DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
205)   264A DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
206)   264D DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
207)   2650 B7          		 OR A	;
208)   2651 ED 52       		 SBC HL, DE	;
209)   2653 38 04       		 JR C, Y2GTY1        ;HL=Y1-Y2	;HL=Y1-Y2
210)   2655 AF          		 XOR A	;
211)   2656 3D          		 DEC A         ;YSTEP=-1	;YSTEP=-1
212)   2657 18 0F       		 JR DLNXT2	;
215)   2659 D5          		 PUSH DE	;
216)   265A E1          		 POP HL	;
217)   265B DD 56 05    		 LD D, (IX + 5)        ;Y1	;Y1
218)   265E DD 5E 04    		 LD E, (IX + 4)        ;Y1	;Y1
219)   2661 B7          		 OR A	;
220)   2662 ED 52       		 SBC HL, DE        ;HL=Y2-Y1    HL=DY	;HL=Y2-Y1    HL=DY
221)   2664 06 00       		 LD B, 0	;
222)   2666 3E 01       		 LD A, 1        ;YSTEP=1	;YSTEP=1
224)   2668 FE 01       		 CP 1	;
225)   266A 28 02       		 JR Z, DLYMINUS1	;
226)   266C 06 FF       		 LD B, 0XFF	;
228)   266E 4F          		 LD C, A	;
229)   266F E5          		 PUSH HL        ;DY	;DY
230)   2670 C5          		 PUSH BC        ;YSTEP	;YSTEP
231)   2671 FD 21 00 00 		 LD IY, 0	;
232)   2675 FD 39       		 ADD IY, SP	;
247)   2677 FD 56 07    		 LD D, (IY + 7)        ;DX	;DX
248)   267A FD 5E 06    		 LD E, (IY + 6)        ;DX	;DX
249)   267D B7          		 OR A	;
250)   267E ED 52       		 SBC HL, DE        ;DY-DX	;DY-DX
251)   2680 DA 0F 27    		 JP C, DXGTDY	;
252)   2683 CA 0F 27    		 JP Z, DXGTDY	;
254)   2686 19          		 ADD HL, DE        ;HL=DY	;HL=DY
255)   2687 44          		 LD B, H	;
256)   2688 4D          		 LD C, L	;
257)   2689 CB 38       		 SRL B	;
258)   268B CB 19       		 RR C         ;(dy >> 1)	;(dy >> 1)
259)   268D 21 00 00    		 LD HL, 0	;
260)   2690 ED 42       		 SBC HL, BC        ;t = - (dy >> 1);	;t = - (dy >> 1);
261)   2692 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
262)   2695 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
264)   2698 DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
265)   269B DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
266)   269E DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
267)   26A1 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
268)   26A4 D5          		 PUSH DE	;
269)   26A5 DD E5       		 PUSH IX	;
272)   26A7 E5          		               PUSH HL	;
273)   26A8 D5          		               PUSH DE	;
274)   26A9 CD 20 25    		               CALL PLOTP	;
275)   26AC D1          		               POP DE	;
276)   26AD E1          		               POP HL	;
278)   26AE DD E1       		 POP IX	;
279)   26B0 D1          		 POP DE	;
280)   26B1 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
281)   26B4 DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
282)   26B7 ED 52       		 SBC HL, DE        ; ROW=Y2	; ROW=Y2
283)   26B9 CA 97 27    		 JP Z, DLEXIT	;
284)   26BC FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
285)   26BF FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
286)   26C2 EB          		 EX DE, HL	;
287)   26C3 09          		 ADD HL, BC        ;row += ystep;	;row += ystep;
288)   26C4 DD 74 05    		 LD (IX + 5), H        ;SAVE ROW	;SAVE ROW
289)   26C7 DD 75 04    		 LD (IX + 4), L        ;	;
291)   26CA FD 56 09    		 LD D, (IY + 9)        ; T	; T
292)   26CD FD 5E 08    		 LD E, (IY + 8)        ; T	; T
293)   26D0 FD 66 07    		 LD H, (IY + 7)        ;DX	;DX
294)   26D3 FD 6E 06    		 LD L, (IY + 6)        ;DX	;DX
295)   26D6 19          		 ADD HL, DE	;
296)   26D7 FD 74 09    		 LD (IY + 9), H        ;t += dx;	;t += dx;
297)   26DA FD 75 08    		 LD (IY + 8), L	;
298)   26DD EB          		 EX DE, HL	;
299)   26DE 21 00 80    		 LD HL, $8000	;
300)   26E1 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
301)   26E3 38 B3       		 JR C, DLAGN1        ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
302)   26E5 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
303)   26E8 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
304)   26EB DD 66 07    		 LD H, (IX + 7)        ;COL HI	;COL HI
305)   26EE DD 6E 06    		 LD L, (IX + 6)        ;COL LO	;COL LO
306)   26F1 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
307)   26F2 DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
308)   26F5 DD 75 06    		 LD (IX + 6), L        ;	;
310)   26F8 FD 66 09    		 LD H, (IY + 9)        ; T	; T
311)   26FB FD 6E 08    		 LD L, (IY + 8)        ; T	; T
312)   26FE FD 46 03    		 LD B, (IY + 3)        ;DY	;DY
313)   2701 FD 4E 02    		 LD C, (IY + 2)        ;DY	;DY
314)   2704 ED 42       		 SBC HL, BC	;
315)   2706 FD 74 09    		 LD (IY + 9), H        ;t -= dY;	;t -= dY;
316)   2709 FD 75 08    		 LD (IY + 8), L	;
317)   270C C3 98 26    		 JP DLAGN1	;
319)   270F 19          		 ADD HL, DE        ;HL=DY DE=DX	;HL=DY DE=DX
320)   2710 42          		 LD B, D	;
321)   2711 4B          		 LD C, E	;
322)   2712 CB 38       		 SRL B	;
323)   2714 CB 19       		 RR C         ;(dX >> 1)	;(dX >> 1)
324)   2716 21 00 00    		 LD HL, 0	;
325)   2719 ED 42       		 SBC HL, BC        ;t = - (dX >> 1);	;t = - (dX >> 1);
326)   271B FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
327)   271E FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
329)   2721 DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
330)   2724 DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
331)   2727 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
332)   272A DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
333)   272D E5          		 PUSH HL        ;SAVE COL	;SAVE COL
334)   272E DD E5       		 PUSH IX	;
336)   2730 E5          		 PUSH HL	;
337)   2731 D5          		 PUSH DE	;
338)   2732 CD 20 25    		               CALL PLOTP	;
339)   2735 D1          		               POP DE	;
340)   2736 E1          		               POP HL	;
342)   2737 DD E1       		 POP IX	;
343)   2739 D1          		 POP DE         ;RETRIEVE COL	;RETRIEVE COL
344)   273A DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
345)   273D DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
346)   2740 ED 52       		 SBC HL, DE        ; COL=X2?	; COL=X2?
347)   2742 28 53       		 JR Z, DLEXIT	;
348)   2744 EB          		 EX DE, HL        ;HL=COL	;HL=COL
349)   2745 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
350)   2748 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
351)   274B 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
352)   274C DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
353)   274F DD 75 06    		 LD (IX + 6), L        ;	;
354)   2752 FD 56 09    		 LD D, (IY + 9)        ; T	; T
355)   2755 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
356)   2758 FD 66 03    		 LD H, (IY + 3)        ;DY	;DY
357)   275B FD 6E 02    		 LD L, (IY + 2)        ;DY	;DY
358)   275E 19          		 ADD HL, DE	;
359)   275F FD 74 09    		 LD (IY + 9), H        ;t += dY;	;t += dY;
360)   2762 FD 75 08    		 LD (IY + 8), L	;
361)   2765 EB          		 EX DE, HL        ;T=DE	;T=DE
362)   2766 21 00 80    		 LD HL, $8000	;
363)   2769 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
364)   276B 38 B4       		 JR C, DLAGN2        ;CARRY SET IF NEGATIVE	;CARRY SET IF NEGATIVE
365)   276D FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
366)   2770 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
367)   2773 DD 66 05    		 LD H, (IX + 5)        ;ROW HI	;ROW HI
368)   2776 DD 6E 04    		 LD L, (IX + 4)        ;ROW LO	;ROW LO
369)   2779 09          		 ADD HL, BC        ;ROW += Ystep;	;ROW += Ystep;
370)   277A DD 74 05    		 LD (IX + 5), H        ;SAVE COL	;SAVE COL
371)   277D DD 75 04    		 LD (IX + 4), L        ;	;
373)   2780 FD 66 09    		 LD H, (IY + 9)        ; T	; T
374)   2783 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
375)   2786 FD 46 07    		 LD B, (IY + 7)        ;DX	;DX
376)   2789 FD 4E 06    		 LD C, (IY + 6)        ;DX	;DX
377)   278C ED 42       		 SBC HL, BC	;
378)   278E FD 74 09    		 LD (IY + 9), H        ;t -= dX;	;t -= dX;
379)   2791 FD 75 08    		 LD (IY + 8), L	;
380)   2794 C3 21 27    		 JP DLAGN2	;
383)   2797 21 0A 00    		 LD HL, 5 * 2        ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
384)   279A 39          		 ADD HL, SP        ;	;
385)   279B F9          		 LD SP, HL	;
386)   279C D1          		DLNEX: POP DE         ;RET ADDR	;RET ADDR
387)   279D 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
388)   27A0 39          		 ADD HL, SP	;
389)   27A1 F9          		 LD SP, HL	;
390)   27A2 EB          		 EX DE, HL	;
391)   27A3 E9          		 JP (HL)	;
397)   27A4 E1          		 POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
398)   27A5 D5          		 PUSH DE        ;F VAR	;F VAR
399)   27A6 D5          		 PUSH DE        ;DDF_X	;DDF_X
400)   27A7 D5          		 PUSH DE        ;DDF_Y	;DDF_Y
401)   27A8 D5          		 PUSH DE        ;X1	;X1
402)   27A9 D5          		 PUSH DE        ;Y1	;Y1
403)   27AA E5          		 PUSH HL        ;RET ADDR	;RET ADDR
404)   27AB DD 21 02 00 		 LD IX, 2	;
405)   27AF DD 39       		 ADD IX, SP	;
423)   27B1 AF          		 XOR A	;
424)   27B2 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
425)   27B5 DD 5E 0A    		 LD E, (IX + 10)       ;R	;R
426)   27B8 DD 72 01    		 LD (IX + 1), D        ;Y1=R	;Y1=R
427)   27BB DD 73 00    		 LD (IX + 0), E	;
428)   27BE 21 01 00    		 LD HL, 1	;
429)   27C1 DD 74 07    		 LD (IX + 7), H        ;DDF_X=1	;DDF_X=1
430)   27C4 DD 75 06    		 LD (IX + 6), L	;
431)   27C7 DD 74 03    		 LD (IX + 3), H        ;X1=0	;X1=0
432)   27CA DD 74 02    		 LD (IX + 2), H	;
433)   27CD ED 52       		 SBC HL, DE	;
434)   27CF DD 74 09    		 LD (IX + 9), H        ;F	;F
435)   27D2 DD 75 08    		 LD (IX + 8), L        ;F	;F
437)   27D5 EB          		 EX DE, HL        ;HL=RADIUS	;HL=RADIUS
438)   27D6 29          		 ADD HL, HL        ;2*R	;2*R
439)   27D7 EB          		 EX DE, HL	;
440)   27D8 21 00 00    		 LD HL, 0	;
441)   27DB ED 52       		 SBC HL, DE        ;-2*R	;-2*R
442)   27DD DD 74 05    		 LD (IX + 5), H	;
443)   27E0 DD 75 04    		 LD (IX + 4), L        ;DDF_Y	;DDF_Y
445)   27E3 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
446)   27E6 DD 6E 0C    		 LD L, (IX + 12)	;
447)   27E9 E5          		 PUSH HL        ;SAVE Y	;SAVE Y
448)   27EA DD 56 0B    		 LD D, (IX + 11)       ;R	;R
449)   27ED DD 5E 0A    		 LD E, (IX + 10)	;
450)   27F0 D5          		 PUSH DE        ;SAVE R	;SAVE R
451)   27F1 19          		 ADD HL, DE        ;Y+R	;Y+R
452)   27F2 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
453)   27F5 DD 5E 0E    		 LD E, (IX + 14)	;
454)   27F8 D5          		 PUSH DE        ;SAVE X	;SAVE X
455)   27F9 EB          		 EX DE,HL	;
457)   27FA CD 20 25    		 CALL PLOTP	;
459)   27FD D1          		 POP DE         ;GET X	;GET X
460)   27FE C1          		 POP BC         ;GET R	;GET R
461)   27FF E1          		 POP HL         ;GET Y	;GET Y
462)   2800 E5          		 PUSH HL        ;SAVE VARS	;SAVE VARS
463)   2801 C5          		 PUSH BC	;
464)   2802 D5          		 PUSH DE	;
465)   2803 AF          		 XOR A	;
466)   2804 ED 42       		 SBC HL, BC        ;	;
468)   2806 EB          		 EX DE,HL	;
469)   2807 CD 20 25    		 CALL PLOTP	;
471)   280A E1          		 POP HL         ;GET X	;GET X
472)   280B C1          		 POP BC         ;GET R	;GET R
473)   280C D1          		 POP DE         ;GET Y	;GET Y
474)   280D D5          		 PUSH DE        ;SAVE VARS	;SAVE VARS
475)   280E C5          		 PUSH BC	;
476)   280F E5          		 PUSH HL	;
477)   2810 AF          		 XOR A	;
478)   2811 ED 4A       		 ADC HL, BC	;
481)   2813 CD 20 25    		 CALL PLOTP	;
483)   2816 E1          		 POP HL         ;GET X	;GET X
484)   2817 C1          		 POP BC         ;GET R	;GET R
485)   2818 D1          		 POP DE         ;GET Y	;GET Y
486)   2819 AF          		 XOR A	;
487)   281A ED 42       		 SBC HL, BC	;
490)   281C CD 20 25    		 CALL PLOTP	;
493)   281F DD 66 03    		CIRC_AGN: LD H, (IX + 3)       ;X1	;X1
494)   2822 DD 6E 02    		 LD L, (IX + 2)        ;X1	;X1
495)   2825 DD 56 01    		 LD D, (IX + 1)        ;Y1	;Y1
496)   2828 DD 5E 00    		 LD E, (IX + 0)        ;Y1	;Y1
497)   282B AF          		 XOR A	;
498)   282C ED 52       		 SBC HL, DE	;
499)   282E D2 25 29    		 JP NC, CIRC_EXIT	;
501)   2831 19          		 ADD HL, DE	;
502)   2832 E5          		 PUSH HL        ;SAVE X1	;SAVE X1
503)   2833 D5          		 PUSH DE        ;SAVE Y1	;SAVE Y1
504)   2834 21 00 00    		 LD HL, 0	;
505)   2837 AF          		 XOR A	;
508)   2838 DD 7E 09    		 LD A, (IX + 9)        ;F HI BYTE	;F HI BYTE
509)   283B FE 50       		 CP 80	;
510)   283D 30 26       		 JR NC, CIRC_SKIP	;
511)   283F 28 24       		 JR Z, CIRC_SKIP	;
515)   2841 D1          		 POP DE         ;Y1	;Y1
516)   2842 1B          		 DEC DE	;
517)   2843 DD 72 01    		 LD (IX + 1), D        ;SAVE Y1	;SAVE Y1
518)   2846 DD 73 00    		 LD (IX + 0), E	;
519)   2849 D5          		 PUSH DE        ;Y1	;Y1
520)   284A DD 66 05    		 LD H, (IX + 5)        ;DDF_Y	;DDF_Y
521)   284D DD 6E 04    		 LD L, (IX + 4)	;
522)   2850 23          		 INC HL	;
523)   2851 23          		 INC HL	;
524)   2852 DD 74 05    		 LD (IX + 5), H        ;SAVE DDF_Y	;SAVE DDF_Y
525)   2855 DD 75 04    		 LD (IX + 4), L	;
526)   2858 DD 56 09    		 LD D, (IX + 9)        ;F	;F
527)   285B DD 5E 08    		 LD E, (IX + 8)	;
528)   285E 19          		 ADD HL, DE	;
529)   285F DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
530)   2862 DD 75 08    		 LD (IX + 8), L	;
534)   2865 C1          		 POP BC         ;Y1	;Y1
535)   2866 E1          		 POP HL         ;X1	;X1
536)   2867 23          		 INC HL	;
537)   2868 DD 74 03    		 LD (IX + 3), H        ;SAVE X1	;SAVE X1
538)   286B DD 75 02    		 LD (IX + 2), L	;
539)   286E E5          		 PUSH HL        ;X1	;X1
540)   286F DD 66 07    		 LD H, (IX + 7)        ;DDF_X	;DDF_X
541)   2872 DD 6E 06    		 LD L, (IX + 6)	;
542)   2875 23          		 INC HL	;
543)   2876 23          		 INC HL	;
544)   2877 DD 74 07    		 LD (IX + 7), H        ;SAVE DDF_X	;SAVE DDF_X
545)   287A DD 75 06    		 LD (IX + 6), L	;
546)   287D DD 56 09    		 LD D, (IX + 9)        ;F	;F
547)   2880 DD 5E 08    		 LD E, (IX + 8)	;
548)   2883 19          		 ADD HL, DE	;
549)   2884 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
550)   2887 DD 75 08    		 LD (IX + 8), L	;
553)   288A E1          		 POP HL         ;X1	;X1
554)   288B E5          		 PUSH HL	;
555)   288C DD 56 0F    		 LD D, (IX + 15)       ;X	;X
556)   288F DD 5E 0E    		 LD E, (IX + 14)	;
557)   2892 D5          		 PUSH DE	;
558)   2893 19          		 ADD HL, DE	;
559)   2894 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
560)   2895 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
561)   2898 DD 6E 0C    		 LD L, (IX + 12)  	;
562)   289B 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
564)   289C EB          		 EX DE,HL	;
565)   289D CD 20 25    		 CALL PLOTP	;
567)   28A0 E1          		 POP HL         ;X	;X
568)   28A1 D1          		 POP DE         ;X1	;X1
569)   28A2 D5          		 PUSH DE	;
570)   28A3 E5          		 PUSH HL	;
571)   28A4 AF          		 XOR A	;
572)   28A5 ED 52       		 SBC HL, DE	;
573)   28A7 EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
574)   28A8 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
575)   28AB DD 6E 0C    		 LD L, (IX + 12)	;
576)   28AE 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
578)   28AF EB          		 EX DE,HL	;
579)   28B0 CD 20 25    		 CALL PLOTP	;
581)   28B3 E1          		 POP HL         ;X	;X
582)   28B4 D1          		 POP DE         ;X1	;X1
583)   28B5 D5          		 PUSH DE	;
584)   28B6 E5          		 PUSH HL	;
585)   28B7 19          		 ADD HL, DE	;
586)   28B8 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
587)   28B9 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
588)   28BC DD 6E 0C    		 LD L, (IX + 12)	;
589)   28BF AF          		 XOR A	;
590)   28C0 ED 42       		 SBC HL, BC        ;HL=Y+Y1	;HL=Y+Y1
592)   28C2 EB          		 EX DE,HL	;
593)   28C3 CD 20 25    		 CALL PLOTP	;
595)   28C6 E1          		 POP HL         ;X	;X
596)   28C7 D1          		 POP DE         ;X1	;X1
597)   28C8 D5          		 PUSH DE	;
598)   28C9 E5          		 PUSH HL	;
599)   28CA AF          		 XOR A	;
600)   28CB ED 52       		 SBC HL, DE	;
601)   28CD EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
602)   28CE DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
603)   28D1 DD 6E 0C    		 LD L, (IX + 12)	;
604)   28D4 AF          		 XOR A	;
605)   28D5 ED 42       		 SBC HL, BC        ;HL=Y-Y1	;HL=Y-Y1
607)   28D7 EB          		 EX DE,HL	;
608)   28D8 CD 20 25    		 CALL PLOTP	;
610)   28DB E1          		 POP HL         ;X	;X
611)   28DC D1          		 POP DE         ;X1	;X1
612)   28DD C5          		 PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
613)   28DE E5          		 PUSH HL        ;SAVE X	;SAVE X
614)   28DF D5          		 PUSH DE        ;SAVE X1	;SAVE X1
615)   28E0 09          		 ADD HL, BC        ;	;
616)   28E1 C1          		 POP BC         ;BC=X1	;BC=X1
617)   28E2 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
618)   28E3 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
619)   28E6 DD 6E 0C    		 LD L, (IX + 12)	;
620)   28E9 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
622)   28EA EB          		 EX DE,HL	;
623)   28EB CD 20 25    		 CALL PLOTP	;
625)   28EE E1          		 POP HL         ;X	;X
626)   28EF D1          		 POP DE         ;Y1	;Y1
627)   28F0 D5          		 PUSH DE	;
628)   28F1 E5          		 PUSH HL	;
629)   28F2 AF          		 XOR A	;
630)   28F3 ED 52       		 SBC HL, DE	;
631)   28F5 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
632)   28F6 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
633)   28F9 DD 6E 0C    		 LD L, (IX + 12)	;
634)   28FC 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
636)   28FD EB          		 EX DE,HL	;
637)   28FE CD 20 25    		 CALL PLOTP	;
639)   2901 E1          		 POP HL         ;X	;X
640)   2902 D1          		 POP DE         ;Y1	;Y1
641)   2903 D5          		 PUSH DE	;
642)   2904 E5          		 PUSH HL	;
643)   2905 19          		 ADD HL, DE	;
644)   2906 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
645)   2907 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
646)   290A DD 6E 0C    		 LD L, (IX + 12)	;
647)   290D AF          		 XOR A	;
648)   290E ED 42       		 SBC HL, BC        ;HL=Y-X1	;HL=Y-X1
649)   2910 E5          		 PUSH HL	;
651)   2911 EB          		 EX DE,HL	;
652)   2912 CD 20 25    		 CALL PLOTP	;
654)   2915 C1          		 POP BC         ;Y-X1	;Y-X1
655)   2916 E1          		 POP HL         ;X	;X
656)   2917 D1          		 POP DE         ;Y1	;Y1
657)   2918 AF          		 XOR A	;
658)   2919 ED 52       		 SBC HL, DE	;
659)   291B EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
660)   291C C5          		 PUSH BC	;
661)   291D E1          		 POP HL         ;HL=Y-X1	;HL=Y-X1
663)   291E EB          		 EX DE,HL	;
664)   291F CD 20 25    		 CALL PLOTP	;
665)   2922 C3 1F 28    		 JP CIRC_AGN	;
666)   2925 CD BC 20    		CIRC_EXIT: CALL LCD_CLRXY	;
667)   2928 D1          		 POP DE         ;GET RET ADDR	;GET RET ADDR
668)   2929 21 10 00    		 LD HL, 8 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
669)   292C 39          		 ADD HL, SP        ;	;
670)   292D F9          		 LD SP, HL	;
671)   292E EB          		 EX DE, HL	;
672)   292F E9          		 JP (HL)                	;
106)   2930 ED 44       		DELAYABIT: NEG  ;8 CLOCK CYCLES	;8 CLOCK CYCLES
107)   2932 ED 44       		 NEG	;
108)   2934 ED 44       		 NEG	;
109)   2936 ED 44       		 NEG	;
110)   2938 ED 44       		 NEG	;
111)   293A ED 44       		 NEG	;
112)   293C ED 44       		 NEG	;
113)   293E ED 44       		 NEG	;
114)   2940 C9          		 RET	;
121)   2941 D3 38       		SND_OUT: OUT (DEVSND),A ;SEND TO SOUND	;SEND TO SOUND
137)   2943 CD 30 29    		 CALL DELAYABIT	;
138)   2946 C9          		 RET	;
140)   2947 3E 9F       		SND_MUTEALL:   LD A,$9F  ;MUTE CHANNEL 0	;MUTE CHANNEL 0
141)   2949 CD 41 29    		 CALL SND_OUT	;
142)   294C 3E BF       		 LD A,$BF  ;MUTE CHANNEL 1	;MUTE CHANNEL 1
143)   294E CD 41 29    		 CALL SND_OUT	;
144)   2951 3E DF       		 LD A,$DF  ;MUTE CHANNEL 2	;MUTE CHANNEL 2
145)   2953 CD 41 29    		 CALL SND_OUT	;
146)   2956 3E FF       		 LD A,$FF  ;MUTE CHANNEL NOISE	;MUTE CHANNEL NOISE
147)   2958 CD 41 29    		 CALL SND_OUT                	;
148)   295B C9          		               RET	;
150)   295C CD 47 29    		SND_INIT: CALL SND_MUTEALL	;
151)   295F AF          		               XOR A	;
152)   2960 32 87 FF    		               LD (CHANST),A	;
153)   2963 AF          		SND_CLRDAT:    XOR A	;
154)   2964 21 7B FF    		               LD HL,CHANDATA	;
155)   2967 77          		               LD (HL),A	;
156)   2968 54          		               LD D,H	;
157)   2969 5D          		               LD E,L	;
158)   296A 13          		               INC DE	;
159)   296B 01 0B 00    		               LD BC,11  	;
160)   296E ED B0       		               LDIR	;
161)   2970 C9          		 RET	;
166)   2971 F5          		SND_NOTE:      PUSH AF	;
167)   2972 E6 03       		               AND $03                  ;KEEP 2 BITS	;KEEP 2 BITS
168)   2974 07          		               RLCA	;
169)   2975 07          		               RLCA	;
170)   2976 07          		               RLCA	;
171)   2977 07          		               RLCA	;
172)   2978 07          		               RLCA                    ;TRANSFER TO BITS 6&5	;TRANSFER TO BITS 6&5
173)   2979 B4          		               OR H                    ;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL	;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL
174)   297A CD 41 29    		               CALL SND_OUT	;
175)   297D 7D          		SN_LOW:        LD A,L                	;
176)   297E CD 41 29    		               CALL SND_OUT	;
177)   2981 F1          		               POP AF	;
178)   2982 C9          		               RET	;
184)   2983 F5          		SND_DOBEEP:    PUSH AF	;
185)   2984 3E 02       		               LD A,DEFCHN	;
186)   2986 0E 00       		               LD C,SNDVOLHI	;
187)   2988 CD AC 29    		               CALL SND_SETVOLUME                	;
188)   298B 3E 02       		               LD A,DEFCHN	;
189)   298D CD 71 29    		               CALL SND_NOTE	;
190)   2990 06 A0       		               LD B,160	;
191)   2992 CD 8B 2A    		               CALL DELAYMILI	;
192)   2995 3E 02       		               LD A,DEFCHN	;
193)   2997 0E 04       		               LD C,SNDMUTE	;
194)   2999 CD AC 29    		               CALL SND_SETVOLUME	;
195)   299C F1          		               POP AF	;
196)   299D C9          		               RET	;
198)   299E 21 07 83    		SND_BEEP:      LD HL,nG4             ;NOTE G4 ON CHANNEL2	;NOTE G4 ON CHANNEL2
199)   29A1 CD 83 29    		               CALL SND_DOBEEP	;
200)   29A4 C9          		               RET	;
202)   29A5 21 02 81    		SND_BEEP2:     LD HL,nD6             ;NOTE D6 ON CHANNEL2	;NOTE D6 ON CHANNEL2
203)   29A8 CD 83 29    		               CALL SND_DOBEEP	;
204)   29AB C9          		               RET	;
211)   29AC 07          		SND_SETVOLUME: RLCA                            ;DOUBLE CHANNEL 0-3 --> 0,2,4,6               	;DOUBLE CHANNEL 0-3 --> 0,2,4,6
212)   29AD 3C          		               INC A                           ;E=A+1	;E=A+1
213)   29AE 5F          		               LD E,A                          ;SAVE CHANNEL INFO	;SAVE CHANNEL INFO
214)   29AF 79          		               LD A,C	;
215)   29B0 FE 04       		               CP SNDMUTE	;
216)   29B2 3E 0F       		               LD A,$F	;
217)   29B4 28 09       		               JR Z, SV_DOIT                   ;SNDMUTE=4 MEANS NO VOLUME = MUTE	;SNDMUTE=4 MEANS NO VOLUME = MUTE
218)   29B6 3E 01       		               LD A,1                          ;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3	;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3
219)   29B8 0C          		               INC C	;
220)   29B9 0D          		SV_AGN:        DEC C	;
221)   29BA 28 03       		               JR Z, SV_DOIT	;
222)   29BC 07          		               RLCA	;
223)   29BD 18 FA       		               JR SV_AGN	;
224)   29BF 57          		SV_DOIT:       LD D,A                          ;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV	;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV
225)   29C0 3E 80       		               LD A,$80	;
226)   29C2 CB 03       		               RLC E	;
227)   29C4 CB 03       		               RLC E	;
228)   29C6 CB 03       		               RLC E	;
229)   29C8 CB 03       		               RLC E	;
230)   29CA B2          		               OR D	;
231)   29CB B3          		               OR E	;
232)   29CC CD 41 29    		               CALL SND_OUT                    ;SET THE VOLUME        	;SET THE VOLUME
233)   29CF C9          		               RET	;
236)   29D0 F5          		SND_DISABLE:   PUSH AF	;
237)   29D1 CD F9 29    		               CALL SND_GETCHMASK	;
238)   29D4 47          		               LD B,A	;
239)   29D5 3A 87 FF    		               LD A,(CHANST)	;
240)   29D8 B0          		               OR B	;
241)   29D9 32 87 FF    		               LD (CHANST),A	;
242)   29DC F1          		               POP AF	;
243)   29DD 0E 04       		               LD C, SNDMUTE	;
244)   29DF CD AC 29    		               CALL SND_SETVOLUME	;
245)   29E2 C9          		               RET	;
248)   29E3 F5          		SND_ENABLE:    PUSH AF	;
249)   29E4 CD F9 29    		               CALL SND_GETCHMASK	;
250)   29E7 ED 44       		               NEG	;
251)   29E9 3D          		               DEC A	;
252)   29EA 47          		               LD B,A	;
253)   29EB 3A 87 FF    		               LD A,(CHANST)	;
254)   29EE A0          		               AND B	;
255)   29EF 32 87 FF    		               LD (CHANST),A	;
256)   29F2 F1          		               POP AF	;
257)   29F3 0E 00       		               LD C, SNDVOLHI                  ;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL	;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL
258)   29F5 CD AC 29    		               CALL SND_SETVOLUME	;
259)   29F8 C9          		               RET	;
264)   29F9 3C          		SND_GETCHMASK: INC A	;
265)   29FA 4F          		               LD C,A	;
266)   29FB AF          		               XOR A	;
267)   29FC 3C          		               INC A                	;
268)   29FD 0D          		GMCAGN:        DEC C	;
269)   29FE C8          		               RET Z	;
270)   29FF 07          		               RLCA	;
271)   2A00 18 FB       		               JR GMCAGN             	;
278)   2A02 F5          		SND_PLAYCH:    PUSH AF	;
279)   2A03 21 7B FF    		               LD HL,CHANDATA	;
280)   2A06 07          		               RLCA                            ;DOUBLE A	;DOUBLE A
281)   2A07 06 00       		               LD B,0	;
282)   2A09 4F          		               LD C,A	;
283)   2A0A 09          		               ADD HL,BC                       ;HL ON CHANNELS DATA ADDRESS VAR	;HL ON CHANNELS DATA ADDRESS VAR
284)   2A0B 5E          		               LD E,(HL)	;
285)   2A0C 23          		               INC HL	;
286)   2A0D 56          		               LD D,(HL)                       ;DE THE CHANNEL DATA ADDRESS	;DE THE CHANNEL DATA ADDRESS
287)   2A0E 7A          		               LD A,D	;
288)   2A0F 83          		               ADD E	;
289)   2A10 B7          		               OR A	;
290)   2A11 28 30       		               JR Z, PC_NOMORE                 ;IF CHANDATA ADDRESS IS ZERO RETURN	;IF CHANDATA ADDRESS IS ZERO RETURN
292)   2A13 F1          		               POP AF                          ;GET CHANNEL	;GET CHANNEL
293)   2A14 F5          		               PUSH AF	;
294)   2A15 CD F9 29    		               CALL SND_GETCHMASK	;
295)   2A18 4F          		               LD C, A	;
296)   2A19 3A 87 FF    		               LD A,(CHANST)	;
297)   2A1C A1          		               AND C	;
298)   2A1D C1          		               POP BC	;
299)   2A1E 20 35       		               JR NZ,SNDOK                     ;SIGNAL OK BUT DON'T PLAY ANYTHING	;SIGNAL OK BUT DON'T PLAY ANYTHING
300)   2A20 C5          		               PUSH BC	;
302)   2A21 48          		               LD C,B                          ;CHAN NO ON C	;CHAN NO ON C
303)   2A22 06 00       		               LD B,0	;
304)   2A24 21 83 FF    		               LD HL,CHANCN	;
305)   2A27 09          		               ADD HL,BC                       ;HL ON CHANNELS NOTE IDX	;HL ON CHANNELS NOTE IDX
306)   2A28 7E          		               LD A,(HL)                       ;A THE NOTE IDX 0-255 	;A THE NOTE IDX 0-255
307)   2A29 3C          		               INC A	;
308)   2A2A 28 17       		               JR Z, PC_NOMORE                 ;IF 255 NO MORE NOTES TO PLAY	;IF 255 NO MORE NOTES TO PLAY
309)   2A2C 3D          		               DEC A          	;
310)   2A2D 34          		               INC (HL)                        ;NEXT NOTE	;NEXT NOTE
311)   2A2E 6F          		               LD L,A                          ;HL THE NOTE IDX	;HL THE NOTE IDX
312)   2A2F 26 00       		               LD H,0                          ;	;
313)   2A31 29          		               ADD HL,HL                       ;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE	;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE
314)   2A32 19          		               ADD HL,DE                       ;THE NOTE ADDRESS ON HL	;THE NOTE ADDRESS ON HL
315)   2A33 5E          		               LD E,(HL)                       ;E 2ND BYTE OF THE NOTE TO PLAYING	;E 2ND BYTE OF THE NOTE TO PLAYING
316)   2A34 23          		               INC HL	;
317)   2A35 56          		               LD D,(HL)                       ;D 1ST BYTE OF THE NOTE TO PLAYING	;D 1ST BYTE OF THE NOTE TO PLAYING
318)   2A36 7A          		               LD A,D	;
319)   2A37 C1          		               POP BC                          ;GET THE CHANNEL ON B	;GET THE CHANNEL ON B
320)   2A38 FE 0A       		               CP 10                           ;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS	;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS
321)   2A3A 38 0A       		               JR C,SND_SPOPS	;
322)   2A3C EB          		               EX DE,HL                        ;HL THE NOTE	;HL THE NOTE
323)   2A3D 78          		               LD A,B                          ;CHANNEL ON A	;CHANNEL ON A
324)   2A3E CD 71 29    		               CALL SND_NOTE	;
325)   2A41 18 12       		               JR SNDOK                        ;NOTE PLAYED OK	;NOTE PLAYED OK
326)   2A43 C1          		PC_NOMORE:     POP BC	;
327)   2A44 18 11       		               JR SNDEND                       ;SIGNAL  SONG END	;SIGNAL  SONG END
331)   2A46 FE 03       		SND_SPOPS:     CP 3	;
332)   2A48 30 07       		               JR NC,SNDOTOPS	;
333)   2A4A 4F          		               LD C,A                          ;VOLUME	;VOLUME
334)   2A4B 78          		               LD A,B                          ;CHANNEL	;CHANNEL
335)   2A4C CD AC 29    		               CALL SND_SETVOLUME	;
336)   2A4F 18 04       		               JR SNDOK                        ;VOLUME SET OK	;VOLUME SET OK
338)   2A51 FE 09       		SNDOTOPS:      CP 9                            ;9 MEANS SONG ENDED	;9 MEANS SONG ENDED
339)   2A53 28 02       		               JR Z, SNDEND	;
341)   2A55 AF          		SNDOK:         XOR A                           ;END OK                	;END OK
342)   2A56 C9          		               RET	;
343)   2A57 3E 01       		SNDEND:        LD A,1                          ;SONG END	;SONG END
344)   2A59 C9          		               RET	;
349)   2A5A 06 04       		SND_PLAYMUSIC: LD B,4	;
350)   2A5C 0E 00       		               LD C,0	;
351)   2A5E 05          		PM_NXT:        DEC B                           ;PLAY 3,2,1,0	;PLAY 3,2,1,0
352)   2A5F 78          		               LD A,B	;
353)   2A60 C5          		               PUSH BC                	;
354)   2A61 CD 02 2A    		               CALL SND_PLAYCH	;
355)   2A64 C1          		               POP BC                	;
356)   2A65 81          		               ADD A,C                         ;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES	;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES
357)   2A66 4F          		               LD C,A	;
358)   2A67 78          		               LD A,B	;
359)   2A68 B7          		               OR A	;
360)   2A69 20 F3       		               JR NZ, PM_NXT	;
361)   2A6B 79          		               LD A,C	;
362)   2A6C FE 04       		               CP 4                            ;MEANS ALL 4 CHANNELS ARE NOT ENABLED	;MEANS ALL 4 CHANNELS ARE NOT ENABLED
363)   2A6E C9          		               RET	;
 27)   2A6F C9          		 RET	;
 30)   2A70 F5          		DELAYMICROSEC: PUSH AF	;
 31)   2A71 D5          		 PUSH DE	;
 32)   2A72 1B          		 DEC DE	;
 33)   2A73 D1          		 POP DE	;
 34)   2A74 F1          		 POP AF	;
 35)   2A75 C9          		 RET	;
 38)   2A76 CD 70 2A    		S21: CALL DELAYMICROSEC	;
 39)   2A79 10 FB       		 DJNZ S21	;
 40)   2A7B C9          		 RET	;
 44)   2A7C F5          		DELAYMILISEC: PUSH AF	;
 45)   2A7D D5          		 PUSH DE	;
 46)   2A7E 11 2C 01    		 LD DE, 300        ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 47)   2A81 1B          		DEL1: DEC DE	;
 48)   2A82 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 49)   2A83 B3          		 OR E	;
 50)   2A84 20 FB       		 JR NZ, DEL1	;
 51)   2A86 D1          		 POP DE	;
 52)   2A87 F1          		 POP AF	;
 53)   2A88 C9          		 RET	;
 56)   2A89 06 50       		 LD B, 80	;
 58)   2A8B CD 7C 2A    		S1: CALL DELAYMILISEC	;
 59)   2A8E 10 FB       		 DJNZ S1	;
 60)   2A90 C9          		 RET	;
 65)   2A91 C5          		@DELAYSEC: PUSH BC	;
 66)   2A92 01 E8 03    		 LD BC, 1000	;
 67)   2A95 C5          		MYDLAGN: PUSH BC	;
 68)   2A96 CD 7C 2A    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 69)   2A99 C1          		 POP BC	;
 70)   2A9A 0B          		 DEC BC	;
 71)   2A9B 78          		 LD A, B	;
 72)   2A9C B1          		 OR C	;
 73)   2A9D 20 F6       		 JR NZ, MYDLAGN	;
 74)   2A9F C1          		 POP BC	;
 75)   2AA0 10 EF       		 DJNZ DELAYSEC	;
 76)   2AA2 C9          		 RET	;
 81)   2AA3 F5          		OUTASC: PUSH AF	;
 82)   2AA4 D5          		 PUSH DE	;
 83)   2AA5 CD D8 2A    		 CALL B2Bcd	;
 84)   2AA8 D1          		 POP DE	;
 85)   2AA9 CD FE 2A    		 CALL BCD2HA	;
 86)   2AAC F1          		 POP AF	;
 87)   2AAD C9          		 RET	;
101)   2AAE B7          		BCD2BN: OR A	;
102)   2AAF 47          		 LD B, A	;
103)   2AB0 E6 F0       		 AND $F0	;
104)   2AB2 0F          		 RRCA	;
105)   2AB3 4F          		 LD C, A	;
106)   2AB4 0F          		 RRCA	;
107)   2AB5 0F          		 RRCA	;
108)   2AB6 81          		 ADD A, C	;
109)   2AB7 4F          		 LD C, A	;
110)   2AB8 78          		 LD A, B	;
111)   2AB9 E6 0F       		 AND $0F	;
112)   2ABB 81          		 ADD A, C	;
113)   2ABC C9          		 RET	;
128)   2ABD 26 FF       		BN2BCD: LD H, $FF	;
129)   2ABF 24          		D100LP: INC H	;
130)   2AC0 D6 64       		 SUB 100	;
131)   2AC2 30 FB       		 JR NC, D100LP	;
132)   2AC4 C6 64       		 ADD A, 100	;
133)   2AC6 2E FF       		 LD L, $FF	;
134)   2AC8 2C          		D10LP: INC L	;
135)   2AC9 D6 0A       		 SUB 10	;
136)   2ACB 30 FB       		 JR NC, D10LP	;
137)   2ACD C6 0A       		 ADD A, 10	;
138)   2ACF 4F          		 LD C, A	;
139)   2AD0 7D          		 LD A, L	;
140)   2AD1 07          		 RLCA	;
141)   2AD2 07          		 RLCA	;
142)   2AD3 07          		 RLCA	;
143)   2AD4 07          		 RLCA	;
144)   2AD5 B1          		 OR C	;
145)   2AD6 6F          		 LD L, A	;
146)   2AD7 C9          		 RET	;
160)   2AD8 01 00 10    		 LD BC, 16 * 256 + 0       ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
161)   2ADB 11 00 00    		 LD DE, 0	;
163)   2ADE 29          		 ADD HL, HL	;
164)   2ADF 7B          		 LD A, E	;
165)   2AE0 8F          		 ADC A, A	;
166)   2AE1 27          		 DAA	;
167)   2AE2 5F          		 LD E, A	;
168)   2AE3 7A          		 LD A, D	;
169)   2AE4 8F          		 ADC A, A	;
170)   2AE5 27          		 DAA	;
171)   2AE6 57          		 LD D, A	;
172)   2AE7 79          		 LD A, C	;
173)   2AE8 8F          		 ADC A, A	;
174)   2AE9 27          		 DAA	;
175)   2AEA 4F          		 LD C, A	;
176)   2AEB 10 F1       		 DJNZ cvtLp	;
177)   2AED EB          		 EX DE, HL	;
178)   2AEE C9          		 RET	;
192)   2AEF B7          		BCD2BN: OR A	;
193)   2AF0 47          		 LD B, A	;
194)   2AF1 E6 F0       		 AND $F0	;
195)   2AF3 0F          		 RRCA	;
196)   2AF4 4F          		 LD C, A	;
197)   2AF5 0F          		 RRCA	;
198)   2AF6 0F          		 RRCA	;
199)   2AF7 81          		 ADD A, C	;
200)   2AF8 4F          		 LD C, A	;
201)   2AF9 78          		 LD A, B	;
202)   2AFA E6 0F       		 AND $0F	;
203)   2AFC 81          		 ADD A, C	;
204)   2AFD C9          		 RET	;
216)   2AFE 79          		 LD A, C	;
217)   2AFF CD 2B 2B    		 CALL cvtUN	;
218)   2B02 79          		 LD A, C	;
219)   2B03 CD 2F 2B    		 CALL cvtLN	;
220)   2B06 7C          		 LD A, H	;
221)   2B07 CD 2B 2B    		 CALL cvtUN	;
222)   2B0A 7C          		 LD A, H	;
223)   2B0B CD 2F 2B    		 CALL cvtLN	;
224)   2B0E 7D          		 LD A, L	;
225)   2B0F CD 2B 2B    		 CALL cvtUN	;
226)   2B12 7D          		 LD A, L	;
227)   2B13 18 1A       		 JR cvtLN	;
229)   2B15 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
230)   2B16 1F          		 RRA	;
231)   2B17 1F          		 RRA	;
232)   2B18 1F          		 RRA	;
234)   2B19 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
235)   2B1B C6 90       		 ADD A, 90h        ; old trick	; old trick
236)   2B1D 27          		 DAA         ; for converting	; for converting
237)   2B1E CE 40       		 ADC A, 40h        ; one nibble	; one nibble
238)   2B20 27          		 DAA         ; to hex ASCII	; to hex ASCII
239)   2B21 12          		 LD (DE), A	;
240)   2B22 13          		 INC DE	;
241)   2B23 C9          		 RET	;
253)   2B24 7D          		 LD A, L	;
254)   2B25 CD 15 2B    		 CALL cvtUN	;
255)   2B28 7D          		 LD A, L	;
256)   2B29 18 EE       		 JR cvtLN	;
258)   2B2B 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
259)   2B2C 1F          		 RRA	;
260)   2B2D 1F          		 RRA	;
261)   2B2E 1F          		 RRA	;
263)   2B2F E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
264)   2B31 C6 90       		 ADD A, 90h        ; old trick	; old trick
265)   2B33 27          		 DAA         ; for converting	; for converting
266)   2B34 CE 40       		 ADC A, 40h        ; one nibble	; one nibble
267)   2B36 27          		 DAA         ; to hex ASCII	; to hex ASCII
268)   2B37 12          		 LD (DE), A	;
269)   2B38 13          		 INC DE	;
270)   2B39 C9          		 RET	;
287)   2B3A F5          		 PUSH AF        ; 11 T-states	; 11 T-states
289)   2B3B ED 44       		 NEG         ; 8 T-states	; 8 T-states
290)   2B3D ED 44       		 NEG         ; 8 T-states	; 8 T-states
291)   2B3F ED 44       		 NEG         ; 8 T-states	; 8 T-states
292)   2B41 ED 44       		 NEG         ; 8 T-states	; 8 T-states
293)   2B43 0B          		 DEC BC         ; 6 T-states	; 6 T-states
294)   2B44 79          		 LD A, C        ; 9 T-states	; 9 T-states
295)   2B45 B0          		 OR B         ; 4 T-states	; 4 T-states
296)   2B46 C2 3B 2B    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
297)   2B49 F1          		 POP AF         ; 10 T-states	; 10 T-states
298)   2B4A C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
336)   2B4B 26 00       		@B2D8: LD H, 0	;
337)   2B4D 6F          		 LD L, A	;
338)   2B4E 1E 00       		@B2D16: LD E, 0	;
339)   2B50 16 00       		@B2D24: LD D, 0	;
340)   2B52 01 00 00    		@B2D32: LD BC, 0	;
341)   2B55 DD 21 00 00 		@B2D48: LD IX, 0        ; zero all non-used bits	; zero all non-used bits
342)   2B59 22 45 FF    		@B2D64: LD (B2DINV), HL	;
343)   2B5C ED 53 47 FF 		 LD (B2DINV + 2), DE	;
344)   2B60 ED 43 49 FF 		 LD (B2DINV + 4), BC	;
345)   2B64 DD 22 4B FF 		 LD (B2DINV + 6), IX       ; place full 64-bit input value in buffer	; place full 64-bit input value in buffer
346)   2B68 21 4D FF    		 LD HL, B2DBUF	;
347)   2B6B 11 4E FF    		 LD DE, B2DBUF + 1	;
348)   2B6E 36 20       		 LD (HL), ' '	;
350)   2B70 01 12 00    		 LD BC, 18	;
351)   2B73 ED B0       		 LDIR         ; fill 1st 19 bytes of buffer with spaces	; fill 1st 19 bytes of buffer with spaces
352)   2B75 ED 43 60 FF 		 LD (B2DEND - 1), BC       ;set BCD value to "0" & place terminating 0	;set BCD value to "0" & place terminating 0
353)   2B79 1E 01       		 LD E, 1        ; no. of bytes in BCD value	; no. of bytes in BCD value
354)   2B7B 21 4D FF    		 LD HL, B2DINV + 8       ; (address MSB input)+1	; (address MSB input)+1
355)   2B7E 01 09 09    		 LD BC, 0x0909	;
356)   2B81 AF          		 XOR A	;
357)   2B82 05          		B2DSKP0: DEC B	;
358)   2B83 28 29       		 JR Z, B2DSIZ        ; all 0: continue with postprocessing	; all 0: continue with postprocessing
359)   2B85 2B          		 DEC HL	;
360)   2B86 B6          		 OR (HL)        ; find first byte <>0	; find first byte <>0
361)   2B87 28 F9       		 JR Z, B2DSKP0	;
362)   2B89 0D          		B2DFND1: DEC C	;
363)   2B8A 17          		 RLA	;
364)   2B8B 30 FC       		 JR NC, B2DFND1        ; determine no. of most significant 1-bit	; determine no. of most significant 1-bit
365)   2B8D 1F          		 RRA	;
366)   2B8E 57          		 LD D, A        ; byte from binary input value	; byte from binary input value
367)   2B8F E5          		B2DLUS2: PUSH HL	;
368)   2B90 C5          		 PUSH BC	;
369)   2B91 21 60 FF    		B2DLUS1: LD HL, B2DEND - 1      ; address LSB of BCD value	; address LSB of BCD value
370)   2B94 43          		 LD B, E        ; current length of BCD value in bytes	; current length of BCD value in bytes
371)   2B95 CB 12       		 RL D         ; highest bit from input value -> carry	; highest bit from input value -> carry
372)   2B97 7E          		B2DLUS0: LD A, (HL)	;
373)   2B98 8F          		 ADC A, A	;
374)   2B99 27          		 DAA	;
375)   2B9A 77          		 LD (HL), A        ; double 1 BCD byte from intermediate result	; double 1 BCD byte from intermediate result
376)   2B9B 2B          		 DEC HL	;
377)   2B9C 10 F9       		 DJNZ B2DLUS0        ; and go on to double entire BCD value (+carry!)	; and go on to double entire BCD value (+carry!)
378)   2B9E 30 03       		 JR NC, B2DNXT	;
379)   2BA0 1C          		 INC E         ; carry at MSB -> BCD value grew 1 byte larger	; carry at MSB -> BCD value grew 1 byte larger
380)   2BA1 36 01       		 LD (HL), 1        ; initialize new MSB of BCD value	; initialize new MSB of BCD value
381)   2BA3 0D          		B2DNXT: DEC C	;
382)   2BA4 20 EB       		 JR NZ, B2DLUS1        ; repeat for remaining bits from 1 input byte	; repeat for remaining bits from 1 input byte
383)   2BA6 C1          		 POP BC         ; no. of remaining bytes in input value	; no. of remaining bytes in input value
384)   2BA7 0E 08       		 LD C, 8        ; reset bit-counter	; reset bit-counter
385)   2BA9 E1          		 POP HL         ; pointer to byte from input value	; pointer to byte from input value
386)   2BAA 2B          		 DEC HL	;
387)   2BAB 56          		 LD D, (HL)        ; get next group of 8 bits	; get next group of 8 bits
388)   2BAC 10 E1       		 DJNZ B2DLUS2        ; and repeat until last byte from input value	; and repeat until last byte from input value
389)   2BAE 21 61 FF    		B2DSIZ: LD HL, B2DEND        ; address of terminating 0	; address of terminating 0
390)   2BB1 4B          		 LD C, E        ; size of BCD value in bytes	; size of BCD value in bytes
391)   2BB2 B7          		 OR A	;
392)   2BB3 ED 42       		 SBC HL, BC        ; calculate address of MSB BCD	; calculate address of MSB BCD
393)   2BB5 54          		 LD D, H	;
394)   2BB6 5D          		 LD E, L	;
395)   2BB7 ED 42       		 SBC HL, BC	;
396)   2BB9 EB          		 EX DE, HL        ; HL=address BCD value, DE=start of decimal value	; HL=address BCD value, DE=start of decimal value
397)   2BBA 41          		 LD B, C        ; no. of bytes BCD	; no. of bytes BCD
398)   2BBB CB 21       		 SLA C         ; no. of bytes decimal (possibly 1 too high)	; no. of bytes decimal (possibly 1 too high)
399)   2BBD 3E 30       		 LD A, '0'	;
400)   2BBF ED 6F       		 RLD         ; shift bits 4-7 of (HL) into bit 0-3 of A	; shift bits 4-7 of (HL) into bit 0-3 of A
401)   2BC1 FE 30       		 CP '0'         ; (HL) was > 9h?	; (HL) was > 9h?
402)   2BC3 20 06       		 JR NZ, B2DEXPH        ; if yes, start with recording high digit	; if yes, start with recording high digit
403)   2BC5 0D          		 DEC C         ; correct number of decimals	; correct number of decimals
404)   2BC6 13          		 INC DE         ; correct start address	; correct start address
405)   2BC7 18 04       		 JR B2DEXPL        ; continue with converting low digit	; continue with converting low digit
406)   2BC9 ED 6F       		B2DEXP: RLD         ; shift high digit (HL) into low digit of A	; shift high digit (HL) into low digit of A
407)   2BCB 12          		B2DEXPH: LD (DE), A       ; record resulting ASCII-code	; record resulting ASCII-code
408)   2BCC 13          		 INC DE	;
409)   2BCD ED 6F       		B2DEXPL: RLD	;
410)   2BCF 12          		 LD (DE), A	;
411)   2BD0 13          		 INC DE	;
412)   2BD1 23          		 INC HL         ; next BCD-byte	; next BCD-byte
413)   2BD2 10 F5       		 DJNZ B2DEXP        ; and go on to convert each BCD-byte into 2 ASCII	; and go on to convert each BCD-byte into 2 ASCII
414)   2BD4 ED 42       		 SBC HL, BC        ; return with HL pointing to 1st decimal	; return with HL pointing to 1st decimal
415)   2BD6 C9          		 RET	;
419)   2BD7 EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
420)   2BD8 21 4D FF    		 ld hl, B2DBUF	;
421)   2BDB CD E2 2B    		 call SkipWhitespace	;
422)   2BDE ED B0       		 ldir	;
423)   2BE0 EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
424)   2BE1 C9          		 ret	;
428)   2BE2 7E          		 ld a, (hl)	;
429)   2BE3 FE 20       		 cp ' '	;
430)   2BE5 C0          		 ret nz	;
431)   2BE6 23          		 inc hl	;
432)   2BE7 18 F9       		 jr SkipWhitespace	;
436)   2BE9 06 08       		@REVBITS: ld b, 8	;
437)   2BEB 6F          		 ld l, a	;
439)   2BEC CB 15       		 rl l	;
440)   2BEE 1F          		 rra	;
441)   2BEF 10 FB       		 djnz REVLOOP	;
442)   2BF1 C9          		 RET	;
452)   2BF2 E5          		 push hl	;
454)   2BF3 7E          		 ld a, (hl)	;
456)   2BF4 FE 00       		 cp  0	;
457)   2BF6 28 0E       		 jr z, IsStrDecTrue	;
459)   2BF8 FE 30       		 cp  '0'	;
460)   2BFA 38 06       		 jr c, IsStrDecFalse	;
462)   2BFC FE 3A       		 cp  '9'+1	;
463)   2BFE 38 09       		 jr c, IsStrDecContinue	;
464)   2C00 FE 39       		 cp  '9'	;
467)   2C02 F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
468)   2C04 E1          		 pop hl	;
469)   2C05 C9          		 ret	;
471)   2C06 BF          		 cp a         ; Set zero flag	; Set zero flag
472)   2C07 E1          		 pop hl	;
473)   2C08 C9          		 ret	;
475)   2C09 23          		 inc hl	;
476)   2C0A 18 E7       		 jr IsStrDec00	;
483)   2C0C E5          		 push hl	;
485)   2C0D 7E          		 ld a, (hl)	;
487)   2C0E FE 00       		 cp  0	;
488)   2C10 28 14       		 jr z, IsStrHexTrue	;
490)   2C12 FE 30       		 cp  '0'	;
491)   2C14 38 0C       		 jr c, IsStrHexFalse	;
493)   2C16 FE 3A       		 cp  '9'+1	;
494)   2C18 38 0F       		 jr c, IsStrHexContinue	;
496)   2C1A FE 30       		 cp  '0'	;
497)   2C1C 38 04       		 jr c, IsStrHexFalse	;
499)   2C1E FE 47       		 cp  'F'+1	;
500)   2C20 38 07       		 jr c, IsStrHexContinue	;
503)   2C22 F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
504)   2C24 E1          		 pop hl	;
505)   2C25 C9          		 ret	;
507)   2C26 BF          		 cp a         ; Set zero flag	; Set zero flag
508)   2C27 E1          		 pop hl	;
509)   2C28 C9          		 ret	;
511)   2C29 23          		 inc hl	;
512)   2C2A 18 E1       		 jr IsStrHex00	;
519)   2C2C AF          		 xor a	;
520)   2C2D CD 32 2C    		 call loop	;
521)   2C30 7A          		 ld a, d	;
522)   2C31 C9          		 ret	;
524)   2C32 57          		 ld d, a	;
525)   2C33 7E          		 ld a, (hl)	;
526)   2C34 23          		 inc hl	;
527)   2C35 D6 3A       		 sub '9' + 1	;
528)   2C37 C6 0A       		 add 10	;
529)   2C39 D0          		 ret nc	;
530)   2C3A 5F          		 ld e, a	;
531)   2C3B 7A          		 ld a, d	;
532)   2C3C 87          		 add a, a        ;double our accumulator	;double our accumulator
533)   2C3D 87          		 add a, a        ;double again (now x4)	;double again (now x4)
534)   2C3E 82          		 add a, d        ;add the original (now x5)	;add the original (now x5)
535)   2C3F 87          		 add a, a        ;double again (now x10)	;double again (now x10)
536)   2C40 83          		 add a, e        ;add in the incoming digit	;add in the incoming digit
537)   2C41 18 EF       		 jr loop	;
545)   2C43 7E          		 ld a, (hl)        ; Copy first char to A	; Copy first char to A
546)   2C44 CD 54 2C    		 call Hex12        ; Convert first char	; Convert first char
547)   2C47 87          		 add a, a        ; Multiply by 16...	; Multiply by 16...
548)   2C48 87          		 add a, a        ; ...	; ...
549)   2C49 87          		 add a, a        ; ...	; ...
550)   2C4A 87          		 add a, a        ; ...done!	; ...done!
551)   2C4B 57          		 ld d, a        ; Store top 4 bits in D	; Store top 4 bits in D
552)   2C4C 23          		 inc hl         ; Advance to next char	; Advance to next char
553)   2C4D 7E          		 ld a, (hl)	;
554)   2C4E CD 54 2C    		 call Hex12        ; Convert second char	; Convert second char
555)   2C51 B2          		 or d         ; Add back top bits	; Add back top bits
556)   2C52 23          		 inc hl         ; Advance for next guy	; Advance for next guy
557)   2C53 C9          		 ret	;
558)   2C54 D6 30       		Hex12: sub  '0'	;
559)   2C56 FE 0A       		 cp 10	;
560)   2C58 D8          		 ret c	;
561)   2C59 D6 07       		 sub 'A' - '0' - 10	;
562)   2C5B C9          		 ret	;
569)   2C5C CD 43 2C    		 call Read8bit	;
570)   2C5F 47          		 ld b, a	;
571)   2C60 CD 43 2C    		 call Read8bit	;
572)   2C63 4F          		 ld c, a	;
573)   2C64 C9          		 ret	;
581)   2C65 7E          		 ld a, (hl)	;
582)   2C66 23          		 inc hl	;
583)   2C67 D6 30       		 sub '0'	;
584)   2C69 CB 27       		 sla a	;
585)   2C6B CB 27       		 sla a	;
586)   2C6D CB 27       		 sla a	;
587)   2C6F CB 27       		 sla a	;
588)   2C71 47          		 ld b, a	;
589)   2C72 7E          		 ld a, (hl)	;
590)   2C73 23          		 inc hl	;
591)   2C74 D6 30       		 sub '0'	;
592)   2C76 B0          		 or b	;
593)   2C77 C9          		 ret	;
598)   2C78 4F          		 ld c, a        ; a = number to convert	; a = number to convert
599)   2C79 CD 85 2C    		 call Num1	;
600)   2C7C 77          		 ld (hl), a	;
601)   2C7D 23          		 inc hl	;
602)   2C7E 79          		 ld a, c	;
603)   2C7F CD 89 2C    		 call Num2	;
604)   2C82 77          		 ld (hl), a	;
605)   2C83 23          		 inc hl	;
606)   2C84 C9          		 ret	;
607)   2C85 1F          		Num1: rra	;
608)   2C86 1F          		 rra	;
609)   2C87 1F          		 rra	;
610)   2C88 1F          		 rra	;
611)   2C89 F6 F0       		Num2: or $F0	;
612)   2C8B 27          		 daa	;
613)   2C8C C6 A0       		 add a, $A0	;
614)   2C8E CE 40       		 adc a, $40        ; Ascii hex at this point (0 to F)	; Ascii hex at this point (0 to F)
615)   2C90 C9          		 ret	;
  7)   2C91 16 00       		   ld d,0	;
  8)   2C93 6A          		   ld l,d	;
  9)   2C94 06 08       		   ld b,8	;
 11)   2C96 29          		   add hl,hl	;
 12)   2C97 30 01       		   jr nc,Mult8_NoAdd	;
 13)   2C99 19          		   add hl,de	;
 15)   2C9A 10 FA       		   djnz Mult8_Loop	;
 16)   2C9C C9          		   ret	;
 23)   2C9D 2E 00       		   ld l,0	;
 24)   2C9F 06 08       		   ld b,8	;
 26)   2CA1 29          		   add hl,hl	;
 27)   2CA2 87          		   add a,a	;
 28)   2CA3 30 01       		   jr nc,Mult12_NoAdd	;
 29)   2CA5 19          		   add hl,de	;
 31)   2CA6 10 F9       		   djnz Mult12_Loop	;
 32)   2CA8 C9          		   ret	;
 39)   2CA9 21 00 00    		@Mult16: ld hl, 0	;
 40)   2CAC 78          		 ld a, b	;
 41)   2CAD 06 10       		 ld b, 16	;
 43)   2CAF 29          		 add hl, hl	;
 44)   2CB0 CB 21       		 sla c	;
 45)   2CB2 17          		 rla	;
 46)   2CB3 30 01       		 jr nc, Mult16_NoAdd	;
 47)   2CB5 19          		 add hl, de	;
 49)   2CB6 10 F7       		 djnz Mult16_Loop	;
 50)   2CB8 C9          		 ret	;
 56)   2CB9 D5          		@Mult32: PUSH DE	;
 57)   2CBA 79          		 ld a, c	;
 58)   2CBB 48          		 ld c, b	;
 59)   2CBC 21 00 00    		 ld hl, 0	;
 60)   2CBF 06 10       		 ld b, 16	;
 62)   2CC1 29          		 add hl, hl	;
 63)   2CC2 17          		 rla	;
 64)   2CC3 CB 11       		 rl c	;
 65)   2CC5 30 07       		 jr nc, Mult32_NoAdd	;
 66)   2CC7 19          		 add hl, de	;
 67)   2CC8 CE 00       		 adc a, 0	;
 68)   2CCA D2 CE 2C    		 jp nc, Mult32_NoAdd	;
 69)   2CCD 0C          		 inc c	;
 71)   2CCE 10 F1       		 djnz Mult32_Loop	;
 72)   2CD0 41          		 ld b, c	;
 73)   2CD1 4F          		 ld c, a	;
 74)   2CD2 D1          		 POP DE	;
 75)   2CD3 C9          		 ret	;
 83)   2CD4 AF          		   xor a	;
 84)   2CD5 06 08       		   ld b,8	;
 86)   2CD7 CB 13       		   rl e	;
 87)   2CD9 17          		   rla	;
 88)   2CDA 91          		   sub c	;
 89)   2CDB 30 01       		   jr nc,Div8_NoAdd	;
 90)   2CDD 81          		   add a,c	;
 92)   2CDE 10 F7       		   djnz Div8_Loop	;
 93)   2CE0 47          		   ld b,a	;
 94)   2CE1 7B          		   ld a,e	;
 95)   2CE2 17          		   rla	;
 96)   2CE3 2F          		   cpl	;
 97)   2CE4 C9          		   ret	;
103)   2CE5 AF          		  xor a	;
104)   2CE6 06 08       		  ld b, 8	;
107)   2CE8 CB 22       		  sla d	;
108)   2CEA 17          		  rla	;
109)   2CEB BB          		  cp e	;
110)   2CEC 38 02       		  jr c, $+4	;
111)   2CEE 93          		  sub e	;
112)   2CEF 14          		  inc d	;
114)   2CF0 10 F6       		  djnz DIV8_8_loop	;
116)   2CF2 C9          		  ret	;
122)   2CF3 AF          		  xor a	;
123)   2CF4 06 10       		  ld b, 16	;
126)   2CF6 29          		  add hl, hl	;
127)   2CF7 17          		  rla	;
128)   2CF8 38 03       		  jr c, $+5	;
129)   2CFA B9          		  cp c	;
130)   2CFB 38 02       		  jr c, $+4	;
132)   2CFD 91          		  sub c	;
133)   2CFE 2C          		  inc l	;
135)   2CFF 10 F5       		  djnz DIV16_8_loop	;
137)   2D01 C9          		  ret	;
145)   2D02 21 00 00    		   ld hl,0	;
146)   2D05 78          		   ld a,b	;
147)   2D06 06 08       		   ld b,8	;
149)   2D08 17          		   rla	;
150)   2D09 ED 6A       		   adc hl,hl	;
151)   2D0B ED 52       		   sbc hl,de	;
152)   2D0D 30 01       		   jr nc,Div16_NoAdd1	;
153)   2D0F 19          		   add hl,de	;
155)   2D10 10 F6       		   djnz Div16_Loop1	;
156)   2D12 17          		   rla	;
157)   2D13 2F          		   cpl	;
158)   2D14 47          		   ld b,a	;
159)   2D15 79          		   ld a,c	;
160)   2D16 48          		   ld c,b	;
161)   2D17 06 08       		   ld b,8	;
163)   2D19 17          		   rla	;
164)   2D1A ED 6A       		   adc hl,hl	;
165)   2D1C ED 52       		   sbc hl,de	;
166)   2D1E 30 01       		   jr nc,Div16_NoAdd2	;
167)   2D20 19          		   add hl,de	;
169)   2D21 10 F6       		   djnz Div16_Loop2	;
170)   2D23 17          		   rla	;
171)   2D24 2F          		   cpl	;
172)   2D25 41          		   ld b,c	;
173)   2D26 4F          		   ld c,a	;
174)   2D27 C9          		   ret  	;
181)   2D28 19          		 ADD HL, DE        ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
182)   2D29 D9          		 EXX	;
183)   2D2A ED 5A       		 ADC HL, DE        ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
184)   2D2C D9          		 EXX	;
187)   2D2D C9          		 RET	;
197)   2D2E 11 40 00    		 ld de, $0040	;
198)   2D31 7D          		 ld a, l	;
199)   2D32 6C          		 ld l, h	;
200)   2D33 62          		 ld h, d	;
201)   2D34 B7          		 or a	;
202)   2D35 06 08       		 ld b, 8	;
204)   2D37 ED 52       		 sbc hl, de	;
205)   2D39 30 01       		 jr nc, Sqr16_Skip	;
206)   2D3B 19          		 add hl, de	;
208)   2D3C 3F          		 ccf	;
209)   2D3D CB 12       		 rl d	;
210)   2D3F 87          		 add a, a	;
211)   2D40 ED 6A       		 adc hl, hl	;
212)   2D42 87          		 add a, a	;
213)   2D43 ED 6A       		 adc hl, hl	;
214)   2D45 10 F0       		 djnz Sqr16_Loop	;
215)   2D47 C9          		 ret	;
235)   2D48 3A 73 FF    		 ld a, (RNDseed)	;
236)   2D4B 47          		 ld b, a 	;
238)   2D4C 0F          		 rrca ; multiply by 32	; multiply by 32
239)   2D4D 0F          		 rrca	;
240)   2D4E 0F          		 rrca	;
241)   2D4F EE 1F       		 xor 0x1f	;
243)   2D51 80          		 add a, b	;
244)   2D52 DE FF       		 sbc a, 255 ; carry	; carry
246)   2D54 32 73 FF    		 ld (RNDseed), a	;
247)   2D57 C9          		 ret	;
 10)   2D58 0E 00       		MNU_CNTITMS: LD C,0   ;ITEM COUNTER	;ITEM COUNTER
 11)   2D5A 06 00       		 LD B,0   ;ITEM LENGTH COUNTER	;ITEM LENGTH COUNTER
 12)   2D5C 16 00       		 LD D,0   ;TEMP ITEM LENGTH COUNTER	;TEMP ITEM LENGTH COUNTER
 13)   2D5E 7E          		MNU_CHKNXT: LD A,(HL)	;
 14)   2D5F B7          		 OR A	;
 15)   2D60 C8          		 RET Z   ;RETURN IF MENU ITEM STARTS WITH ZERO	;RETURN IF MENU ITEM STARTS WITH ZERO
 16)   2D61 0C          		 INC C   ;WE HAVE A NEW ITEM	;WE HAVE A NEW ITEM
 17)   2D62 16 00       		 LD D,0	;
 18)   2D64 23          		MNU_LPITM: INC HL	;
 19)   2D65 14          		 INC D	;
 20)   2D66 78          		 LD A,B	;
 21)   2D67 BA          		 CP D	;
 22)   2D68 30 01       		 JR NC,MNU_NOTBIGER	;
 23)   2D6A 42          		 LD B,D   ;SAVE THE BIGGER ITEMS LENGTH  	;SAVE THE BIGGER ITEMS LENGTH
 24)   2D6B 7E          		MNU_NOTBIGER: LD A,(HL)	;
 25)   2D6C B7          		 OR A	;
 26)   2D6D 20 F5       		 JR NZ, MNU_LPITM	;
 27)   2D6F 23          		 INC HL	;
 28)   2D70 18 EC       		 JR MNU_CHKNXT	;
 30)   2D72 DD E5       		PRINTMNUITM: PUSH IX	;
 31)   2D74 C5          		 PUSH BC	;
 32)   2D75 CD 3F 05    		 CALL OS_PRINTTEXT	;
 33)   2D78 C1          		 POP BC	;
 34)   2D79 DD E1       		 POP IX	;
 35)   2D7B C9          		 RET	;
 38)   2D7C 3A 76 FF    		VGA_REVMNUCLR: LD A,(MENUVCLR)	;
 39)   2D7F 07          		 RLCA	;
 40)   2D80 07          		 RLCA	;
 41)   2D81 07          		 RLCA	;
 42)   2D82 07          		 RLCA	;
 43)   2D83 32 76 FF    		 LD (MENUVCLR),A	;
 44)   2D86 2A 77 FF    		 LD HL,(MENULFORE)	;
 45)   2D89 22 03 FE    		 LD (BCOLOR),HL	;
 46)   2D8C 2A 79 FF    		 LD HL,(MENULBACK)	;
 47)   2D8F 22 01 FE    		 LD (FCOLOR),HL	;
 48)   2D92 C9          		 RET	;
 51)   2D93 FE 00       		SETITMCOLOR: CP 0	;
 52)   2D95 28 05       		 JR Z,DEFCOLOR	;
 53)   2D97 CD 7C 2D    		 CALL VGA_REVMNUCLR	;
 54)   2D9A 18 0C       		 JR SETVGACOL     	;
 55)   2D9C 2A 77 FF    		DEFCOLOR: LD HL,(MENULFORE)	;
 56)   2D9F 22 01 FE    		 LD (FCOLOR),HL	;
 57)   2DA2 2A 79 FF    		 LD HL,(MENULBACK)	;
 58)   2DA5 22 03 FE    		 LD (BCOLOR),HL	;
 59)   2DA8 3A 76 FF    		SETVGACOL: LD A,(MENUVCLR)	;
 60)   2DAB F5          		 PUSH AF	;
 61)   2DAC E6 0F       		 AND $0F	;
 62)   2DAE 32 11 FF    		 LD (VGAFCOL),A	;
 63)   2DB1 F1          		 POP AF	;
 64)   2DB2 07          		 RLCA	;
 65)   2DB3 07          		 RLCA	;
 66)   2DB4 07          		 RLCA	;
 67)   2DB5 07          		 RLCA	;
 68)   2DB6 E6 0F       		 AND $0F	;
 69)   2DB8 32 12 FF    		 LD (VGABCOL),A	;
 70)   2DBB C9          		 RET	;
 74)   2DBC FE 00       		RESETITMCOLOR: CP 0	;
 75)   2DBE C8          		 RET Z	;
 77)   2DBF CD 7C 2D    		 CALL VGA_REVMNUCLR	;
 78)   2DC2 2A 77 FF    		 LD HL,(MENULFORE)	;
 79)   2DC5 22 01 FE    		 LD (FCOLOR),HL	;
 80)   2DC8 2A 79 FF    		 LD HL,(MENULBACK)	;
 81)   2DCB 22 03 FE    		 LD (BCOLOR),HL	;
 82)   2DCE C9          		 RET	;
 88)   2DCF F5          		PRINTMENU: PUSH AF	;
 89)   2DD0 E5          		 PUSH HL	;
 90)   2DD1 D5          		 PUSH DE  	;
 91)   2DD2 CD 4A 04    		 CALL OS_GOTOXY  ;SET CURSOR TO X,Y=D,E	;SET CURSOR TO X,Y=D,E
 92)   2DD5 CD 58 2D    		 CALL MNU_CNTITMS ;C THE ITEM NUMBER B THE MAX LENGTH	;C THE ITEM NUMBER B THE MAX LENGTH
 93)   2DD8 C5          		 PUSH BC	;
 94)   2DD9 DD 21 00 00 		 LD IX,0	;
 95)   2DDD DD 39       		 ADD IX,SP  	;
 96)   2DDF C5          		 PUSH BC	;
 97)   2DE0 CD EC 19    		 CALL VGA_GETCOL  ;GET VGA COLOR ON A	;GET VGA COLOR ON A
 98)   2DE3 C1          		 POP BC  	;
 99)   2DE4 F5          		 PUSH AF   ;SAVE COLOR INFO	;SAVE COLOR INFO
100)   2DE5 2A 01 FE    		 LD HL,(FCOLOR)	;
101)   2DE8 E5          		 PUSH HL   ;SAVE COLOR INFO	;SAVE COLOR INFO
102)   2DE9 2A 03 FE    		 LD HL,(BCOLOR)	;
103)   2DEC E5          		 PUSH HL   ;SAVE COLOR INFO	;SAVE COLOR INFO
104)   2DED 3E 00       		 LD A,0   ;SET MENU COLORS	;SET MENU COLORS
105)   2DEF CD 93 2D    		 CALL SETITMCOLOR	;
106)   2DF2 21 D3 FE    		 LD HL,STRGBUFF  ;USE STRGBUFF TO CREATE THE OUT TEXT	;USE STRGBUFF TO CREATE THE OUT TEXT
107)   2DF5 E5          		 PUSH HL	;
109)   2DF6 04          		 INC B	;
110)   2DF7 36 8B       		 LD (HL),139  ;'/'	;'/'
111)   2DF9 23          		PM_AGN1: INC HL	;
112)   2DFA 36 81       		 LD (HL),129  ;'='	;'='
113)   2DFC 10 FB       		 DJNZ PM_AGN1	;
114)   2DFE 23          		 INC HL	;
115)   2DFF 36 8A       		 LD (HL),138  ;'\'	;'\'
116)   2E01 23          		 INC HL	;
117)   2E02 36 00       		 LD (HL),0	;
118)   2E04 E1          		 POP HL	;
119)   2E05 CD 72 2D    		 CALL PRINTMNUITM	;
120)   2E08 06 01       		 LD B,1   ;;1ST ITEM	;;1ST ITEM
121)   2E0A DD 66 05    		 LD H,(IX+5)  ;MENU ITEM	;MENU ITEM
122)   2E0D DD 6E 04    		 LD L,(IX+4)	;
123)   2E10 11 D3 FE    		PM_AGN3: LD DE,STRGBUFF	;
124)   2E13 3E 82       		 LD A,130  ;'|'	;'|'
125)   2E15 12          		 LD (DE),A	;
126)   2E16 DD 7E 07    		 LD A,(IX+07)  ;GET SELECTED ITEM	;GET SELECTED ITEM
127)   2E19 B8          		 CP B	;
128)   2E1A 3E 20       		 LD A,' '	;
129)   2E1C 20 02       		 JR NZ, PM_SKP2	;
130)   2E1E 3E C5       		 LD A,197  ;'>'	;'>'
131)   2E20 13          		PM_SKP2: INC DE	;
132)   2E21 12          		 LD (DE),A  	;
133)   2E22 0E 00       		 LD C,0   ;COUNT CHARS PRINTED	;COUNT CHARS PRINTED
134)   2E24 7E          		PM_AGN2: LD A,(HL)	;
135)   2E25 13          		 INC DE	;
136)   2E26 B7          		 OR A	;
137)   2E27 28 05       		 JR Z,PM_NXT1  ;ITEM END    	;ITEM END
138)   2E29 12          		 LD (DE),A	;
139)   2E2A 23          		 INC HL	;
140)   2E2B 0C          		 INC C	;
141)   2E2C 18 F6       		 JR PM_AGN2	;
142)   2E2E E5          		PM_NXT1: PUSH HL  ;SAVE MENU ITEMS IDX	;SAVE MENU ITEMS IDX
143)   2E2F C5          		 PUSH BC	;
144)   2E30 DD 7E 01    		 LD A,(IX+1)  ;A MAX LENGTH	;A MAX LENGTH
145)   2E33 91          		 SUB C	;
146)   2E34 47          		 LD B,A	;
147)   2E35 FE 00       		 CP 0	;
148)   2E37 28 06       		 JR Z,NOSPC  	;
149)   2E39 3E 20       		 LD A,' '  	;
150)   2E3B 12          		 LD (DE),A	;
151)   2E3C 13          		 INC DE	;
152)   2E3D 10 FC       		 DJNZ $-2  	;
153)   2E3F C1          		NOSPC: POP BC   	;
154)   2E40 3E 82       		 LD A,130  ;'|'	;'|'
155)   2E42 12          		 LD (DE),A  	;
156)   2E43 13          		 INC DE  	;
157)   2E44 AF          		 XOR A	;
158)   2E45 12          		 LD (DE),A  	;
159)   2E46 DD 56 03    		 LD D,(IX+3)  ;X,Y	;X,Y
160)   2E49 DD 7E 02    		 LD A,(IX+2)	;
161)   2E4C 80          		 ADD A,B   ;ADD MENU ITEM NO	;ADD MENU ITEM NO
162)   2E4D 04          		 INC B	;
163)   2E4E 5F          		 LD E,A	;
164)   2E4F CD 4A 04    		 CALL OS_GOTOXY  ;GOTO XY	;GOTO XY
165)   2E52 C5          		 PUSH BC	;
166)   2E53 DD 7E 07    		 LD A,(IX+07)  ;GET SELECTED ITEM	;GET SELECTED ITEM
167)   2E56 3C          		 INC A   ;1 BASED	;1 BASED
168)   2E57 B8          		 CP B	;
169)   2E58 3E 00       		 LD A,0   ;NO CHANGE OF COLORS	;NO CHANGE OF COLORS
170)   2E5A 20 01       		 JR NZ,NOSELEC	;
172)   2E5C 3C          		 INC A	;
173)   2E5D F5          		NOSELEC: PUSH AF	;
174)   2E5E CD 93 2D    		 CALL SETITMCOLOR ;SETS ITEM COLOR	;SETS ITEM COLOR
175)   2E61 21 D3 FE    		 LD HL,STRGBUFF	;
176)   2E64 CD 72 2D    		 CALL PRINTMNUITM	;
177)   2E67 F1          		 POP AF	;
178)   2E68 CD BC 2D    		 CALL RESETITMCOLOR ;RESETS THE COLOR IF REVERSED	;RESETS THE COLOR IF REVERSED
179)   2E6B C1          		 POP BC	;
180)   2E6C E1          		 POP HL   ;GET NEXT MENU ITEM	;GET NEXT MENU ITEM
181)   2E6D 23          		 INC HL	;
182)   2E6E 7E          		 LD A,(HL)	;
183)   2E6F B7          		 OR A	;
184)   2E70 20 9E       		 JR NZ,PM_AGN3	;
185)   2E72 DD 46 01    		 LD B,(IX+1)  ;GET STRING LENGTH AT B	;GET STRING LENGTH AT B
186)   2E75 DD 4E 00    		 LD C,(IX+0)	;
188)   2E78 CD 93 2D    		 CALL SETITMCOLOR ;SETS ITEM COLOR	;SETS ITEM COLOR
189)   2E7B 21 D3 FE    		 LD HL,STRGBUFF  ;USE STRGBUFF TO CREATE THE OUT TEXT	;USE STRGBUFF TO CREATE THE OUT TEXT
190)   2E7E E5          		 PUSH HL	;
191)   2E7F 36 89       		 LD (HL),137  ;'\'	;'\'
192)   2E81 04          		 INC B	;
193)   2E82 23          		PM_AGN4: INC HL	;
194)   2E83 36 81       		 LD (HL),129  ;'='	;'='
195)   2E85 10 FB       		 DJNZ PM_AGN4	;
196)   2E87 23          		 INC HL	;
197)   2E88 36 88       		 LD (HL),136  ;'/'	;'/'
198)   2E8A 23          		 INC HL	;
199)   2E8B 36 00       		 LD (HL),0  	;
200)   2E8D DD 56 03    		 LD D,(IX+3)  ;X,Y	;X,Y
201)   2E90 DD 7E 02    		 LD A,(IX+2)	;
202)   2E93 81          		 ADD A,C	;
203)   2E94 3C          		 INC A	;
204)   2E95 5F          		 LD E,A	;
205)   2E96 CD 4A 04    		 CALL OS_GOTOXY	;
206)   2E99 E1          		 POP HL	;
207)   2E9A CD 72 2D    		 CALL PRINTMNUITM	;
209)   2E9D E1          		 POP HL	;
210)   2E9E 22 03 FE    		 LD (BCOLOR),HL	;
211)   2EA1 E1          		 POP HL	;
212)   2EA2 22 01 FE    		 LD (FCOLOR),HL	;
213)   2EA5 F1          		 POP AF	;
214)   2EA6 CD F7 19    		 CALL VGA_SETCOL  ;RESTORE ORIGINAL COLORS	;RESTORE ORIGINAL COLORS
215)   2EA9 C1          		 POP BC	;
216)   2EAA D1          		 POP DE	;
217)   2EAB E1          		 POP HL	;
218)   2EAC F1          		 POP AF	;
219)   2EAD C9          		 RET  	;
226)   2EAE E5          		CREATEMENU: PUSH HL  ;SAVE MENU POSITION AND INFO	;SAVE MENU POSITION AND INFO
227)   2EAF D5          		 PUSH DE	;
228)   2EB0 F5          		 PUSH AF	;
229)   2EB1 CD CF 2D    		 CALL PRINTMENU	;
230)   2EB4 CD ED 03    		CM_GTKEY: CALL GET_CHAR	;
231)   2EB7 C1          		 POP BC   ;CURRENT ITEM SELECTED ON A	;CURRENT ITEM SELECTED ON A
232)   2EB8 FE 0B       		 CP 11   ;ARROW UP	;ARROW UP
233)   2EBA 20 0B       		 JR NZ,CM_CHKNXT	;
234)   2EBC 78          		 LD A,B	;
235)   2EBD FE 01       		 CP 1	;
236)   2EBF C5          		 PUSH BC	;
237)   2EC0 28 F2       		 JR Z,CM_GTKEY  ;NO CHANGE	;NO CHANGE
238)   2EC2 F1          		 POP AF	;
239)   2EC3 3D          		 DEC A	;
240)   2EC4 F5          		 PUSH AF	;
241)   2EC5 18 14       		 JR REPRINT  	;
242)   2EC7 FE 0A       		CM_CHKNXT: CP 10  ;ARROW DOWN	;ARROW DOWN
243)   2EC9 20 15       		 JR NZ,CM_CHKNXT1	;
244)   2ECB D1          		 POP DE	;
245)   2ECC E1          		 POP HL	;
246)   2ECD E5          		 PUSH HL	;
247)   2ECE D5          		 PUSH DE	;
248)   2ECF C5          		 PUSH BC  	;
249)   2ED0 CD 58 2D    		 CALL MNU_CNTITMS ;C THE MENU ITEMS	;C THE MENU ITEMS
250)   2ED3 F1          		 POP AF   ;A THE CURRENT ITEM NO	;A THE CURRENT ITEM NO
251)   2ED4 B9          		 CP C   ;WE ARE AT THE LAST?	;WE ARE AT THE LAST?
252)   2ED5 F5          		 PUSH AF	;
253)   2ED6 28 DC       		 JR Z,CM_GTKEY  ;NO CHANGE	;NO CHANGE
254)   2ED8 F1          		 POP AF	;
255)   2ED9 3C          		 INC A	;
256)   2EDA F5          		 PUSH AF	;
258)   2EDB F1          		REPRINT: POP AF	;
259)   2EDC D1          		 POP DE	;
260)   2EDD E1          		 POP HL	;
261)   2EDE 18 CE       		 JR CREATEMENU	;
262)   2EE0 FE 0D       		CM_CHKNXT1: CP 13  ;ENTER RETURN THE SELECTED ITEM	;ENTER RETURN THE SELECTED ITEM
263)   2EE2 C5          		 PUSH BC	;
264)   2EE3 20 CF       		 JR NZ,CM_GTKEY	;
265)   2EE5 C1          		 POP BC	;
266)   2EE6 78          		 LD A,B   ;SELECTED ITEM	;SELECTED ITEM
267)   2EE7 D1          		 POP DE	;
268)   2EE8 E1          		 POP HL	;
269)   2EE9 C9          		 RET	;
  4)   2EEA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EEE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EF2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EF6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EFA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2EFE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F02 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F06 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F0A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F0E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F12 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F16 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F1A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F1E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F22 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F26 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F2A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F2E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F32 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F36 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F3A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F3E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F42 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F46 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F4A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F4E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F52 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F56 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F5A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F5E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F62 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F66 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F6A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F6E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F72 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F76 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F7A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F7E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F82 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F86 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F8A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F8E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F92 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F96 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F9A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2F9E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FA2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FA6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FAA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FAE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FB2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FB6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FBA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FBE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FC2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FC6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FCA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FCE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FD2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FD6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FDA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FDE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FE2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FE6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FEA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FEE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FF2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FF6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FFA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   2FFE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3002 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3006 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   300A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   300E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3012 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3016 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   301A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   301E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3022 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3026 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   302A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   302E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3032 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3036 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   303A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   303E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3042 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3046 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   304A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   304E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3052 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3056 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   305A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   305E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3062 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3066 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   306A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   306E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3072 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3076 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   307A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   307E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3082 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3086 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   308A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   308E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3092 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3096 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   309A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   309E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30A6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30AA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30AE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30B6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30BA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30BE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30C6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30CA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30CE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30D6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30DA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30DE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30E6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30EA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30EE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30F6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30FA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   30FE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3102 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3106 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   310A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   310E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3112 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3116 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   311A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   311E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3122 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3126 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   312A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   312E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3132 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3136 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   313A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   313E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3142 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3146 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   314A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   314E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3152 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3156 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   315A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   315E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3162 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3166 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   316A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   316E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3172 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3176 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   317A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   317E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3182 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3186 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   318A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   318E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3192 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3196 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   319A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   319E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31A6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31AA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31AE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31B6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31BA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31BE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31C6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31CA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31CE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31D6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31DA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31DE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31E6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31EA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31EE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31F6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31FA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   31FE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3202 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3206 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   320A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   320E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3212 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3216 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   321A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   321E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3222 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3226 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   322A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   322E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3232 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3236 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   323A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   323E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3242 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3246 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   324A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   324E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3252 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3256 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   325A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   325E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3262 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3266 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   326A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   326E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3272 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3276 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   327A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   327E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3282 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3286 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   328A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   328E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3292 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3296 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   329A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   329E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32A6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32AA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32AE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32B6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32BA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32BE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32C6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32CA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32CE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32D6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32DA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32DE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32E6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32EA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32EE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32F6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32FA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   32FE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3302 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3306 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   330A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   330E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3312 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3316 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   331A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   331E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3322 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3326 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   332A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   332E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3332 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3336 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   333A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   333E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3342 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3346 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   334A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   334E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3352 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3356 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   335A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   335E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3362 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3366 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   336A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   336E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3372 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3376 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   337A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   337E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3382 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3386 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   338A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   338E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3392 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3396 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   339A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   339E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33A6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33AA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33AE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33B6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33BA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33BE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33C6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33CA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33CE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33D6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33DA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33DE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33E6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33EA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33EE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33F6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33FA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   33FE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3402 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3406 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   340A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   340E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3412 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3416 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   341A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   341E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3422 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3426 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   342A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   342E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3432 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3436 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   343A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   343E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3442 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3446 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   344A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   344E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3452 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3456 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   345A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   345E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3462 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3466 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   346A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   346E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3472 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3476 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   347A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   347E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3482 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3486 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   348A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   348E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3492 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3496 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   349A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   349E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34AA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34AE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34BA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34BE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34CA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34CE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34DA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34DE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34EA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34EE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34FA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34FE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3502 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3506 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   350A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   350E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3512 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3516 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   351A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   351E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3522 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3526 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   352A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   352E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3532 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3536 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   353A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   353E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3542 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3546 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   354A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   354E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3552 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3556 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   355A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   355E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3562 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3566 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   356A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   356E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3572 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3576 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   357A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   357E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3582 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3586 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   358A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   358E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3592 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3596 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   359A 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   359E 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35AA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35AE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35BA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35BE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35CA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35CE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35DA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35DE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35EA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35EE 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F2 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F6 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35FA 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35FE 00 00       		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  5)   3600 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3604 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3608 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   360C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3610 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3614 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3618 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   361C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3620 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3624 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3628 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   362C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3630 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3634 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3638 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   363C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3640 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3644 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3648 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   364C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3650 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3654 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3658 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   365C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3660 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3664 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3668 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   366C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3670 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3674 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3678 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   367C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3680 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3684 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3688 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   368C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3690 80 01 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3694 7E 00 C0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3698 00 00 FF 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   369C 80 02 F0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36AC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36BC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36CC 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D0 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D8 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36DC 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E0 14 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E4 00 18 18 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E8 18 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36EC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F8 0C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36FC 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3700 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3704 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3708 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   370C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3710 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3714 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3718 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   371C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3720 00 10 12 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3724 10 60 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3728 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   372C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3730 38 10 38 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3734 08 7C 1C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3738 38 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   373C 08 00 20 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3740 3C 18 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3744 7C 7E 7E 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3748 42 38 02 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   374C 40 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3750 7C 3C 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3754 FE 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3758 44 44 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   375C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3760 20 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3764 04 00 08 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3768 40 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   376C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3770 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3774 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3778 00 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   377C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3780 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3784 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3788 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   378C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3790 C0 03 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3794 7E 00 B0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3798 00 00 00 06 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   379C 40 04 C0 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A0 7C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A4 38 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37AC 60 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B0 00 7E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B4 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B8 00 00 00 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37BC 38 38 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C0 7E 10 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C4 10 00 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C8 60 08 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37CC 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D0 08 20 28 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D4 20 10 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D8 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37DC 08 20 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E0 28 00 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E4 18 18 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E8 3C 42 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37EC 44 10 10 3A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F0 00 3E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F4 04 FE 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F8 10 7E 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3800 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3804 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3808 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   380C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3810 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3814 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3818 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   381C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3820 00 10 24 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3824 3C 64 50 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3828 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   382C 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3830 44 30 44 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3834 18 40 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3838 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   383C 10 00 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3840 42 24 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3844 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3848 42 10 02 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   384C 40 66 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3850 42 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3854 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3858 44 44 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   385C 40 08 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3860 10 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3864 04 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3868 40 10 10 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   386C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3870 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3874 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3878 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   387C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3880 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3884 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3888 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   388C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3890 E0 07 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3894 7E 7E 8C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3898 00 00 00 0A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   389C 20 08 A0 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A0 44 00 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A4 40 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A8 00 00 7C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38AC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B0 00 42 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B4 00 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B8 00 00 7C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38BC 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C0 22 28 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C4 10 10 60 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C8 10 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38CC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D0 10 10 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D4 10 28 28 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D8 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38DC 10 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E0 00 00 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E4 24 24 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E8 42 42 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38EC EE 38 00 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F0 00 50 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F4 08 82 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F8 18 90 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38FC 28 48 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3900 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3904 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3908 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   390C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3910 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3914 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3918 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   391C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3920 00 10 48 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3924 50 08 50 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3928 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   392C 00 00 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3930 4C 10 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3934 28 78 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3938 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   393C 20 7C 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3940 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3944 22 40 40 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3948 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   394C 40 5A 52 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3950 42 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3954 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3958 28 28 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   395C 20 08 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3960 08 38 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3964 3C 38 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3968 78 00 00 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   396C 10 EC 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3970 78 3C 5C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3974 38 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3978 44 44 7C 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   397C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3980 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3984 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3988 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   398C 10 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3990 F0 0F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3994 7E 7E 82 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3998 18 18 00 12 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   399C 12 90 90 41 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A0 40 34 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A4 38 1C 28 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A8 58 10 20 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39AC 10 44 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B0 7C 00 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B4 7C 44 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B8 44 44 20 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39BC 7C 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C0 10 28 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C4 10 08 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C8 30 08 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39CC 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D0 38 38 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D4 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39DC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E0 78 3C 52 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39EC FE 7C 38 4C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F0 3A 90 6C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F4 08 44 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F8 24 90 6C 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A24 38 10 20 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A28 40 04 10 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A2C 00 7C 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A30 54 10 18 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A34 48 04 78 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A38 38 3C 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A3C 40 00 04 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A40 52 7E 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A44 22 7C 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A48 7E 10 02 70 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A4C 40 5A 4A 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A50 7C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A58 10 10 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A5C 10 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A60 00 04 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A64 44 44 38 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A70 44 44 60 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A74 10 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A78 28 44 08 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A7C 00 04 32 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A80 00 FF 08 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A84 FF FF F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A88 F8 0F F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A8C E0 03 E0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A90 F8 1F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A94 7E 7E 8C 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A98 24 3C 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A9C 0A A0 08 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA0 40 48 78 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA4 44 20 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA8 64 10 78 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB0 28 18 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB4 10 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB8 24 24 40 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ABC 92 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC0 08 44 24 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC4 10 7C 2C 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC8 14 08 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ACC 04 04 04 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD0 44 44 44 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ADC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE0 44 40 4A 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE4 78 7E 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE8 42 42 FE FE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AEC FE FE 04 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF0 4C FC 12 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF4 08 44 7C 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF8 24 9C 92 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B20 00 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B24 14 20 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B28 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B2C 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B30 64 10 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B34 7C 04 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B38 44 04 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B3C 20 7C 08 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B40 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B44 22 40 40 4E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B48 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B4C 40 42 46 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B50 40 4A 48 02 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B58 28 10 20 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B5C 08 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B60 00 7C 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B64 44 7C 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B68 44 10 10 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B70 44 44 40 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B78 10 44 10 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B7C 10 08 4C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B8C 00 00 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B90 FC 3F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B94 7E 7E B0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B98 24 3C 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B9C 06 C0 04 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA4 44 18 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA8 44 10 20 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB0 28 00 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB8 28 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BBC 7C 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC0 10 44 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC4 54 08 32 2C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC8 6C 08 20 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BCC 7C 7C 7C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD0 7C 7C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE0 44 40 46 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BEC 7C D6 7C 64 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF0 54 90 FE 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF4 08 28 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF8 18 90 9E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C20 00 00 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C24 78 4C 88 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C28 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C2C 00 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C30 44 10 40 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C34 08 44 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C38 44 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C3C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C40 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C44 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C48 42 10 42 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C4C 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C50 40 44 44 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C54 10 42 24 66 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C58 44 10 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C5C 04 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C60 00 44 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C64 44 40 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C70 78 3C 40 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C78 28 44 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C7C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C90 FE 7F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C94 7E 7E C0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C98 18 18 00 80 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C9C 3E F0 02 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA4 44 20 54 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA8 44 10 40 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CAC 44 44 18 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB0 28 42 64 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB8 10 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CBC 10 10 44 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC0 22 82 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC4 38 10 0C 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC8 14 08 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CCC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD0 40 40 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE0 44 40 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE8 42 42 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CEC 38 10 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF0 64 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF4 08 28 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF8 08 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D1C F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D24 10 0C 74 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D28 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D2C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D30 38 38 7C 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D34 08 38 38 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D38 38 70 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D3C 08 00 20 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D40 3C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D44 7C 7E 40 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D48 42 38 3C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D4C 7E 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D50 40 3A 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D54 10 3C 18 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D58 44 10 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D5C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D60 00 3C 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D64 3C 3C 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D68 44 18 10 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D6C 18 92 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D70 40 04 40 78 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D74 18 3C 10 6C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D78 44 3C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D7C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA0 40 34 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA4 38 1C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA8 44 08 38 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DAC 44 78 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB0 24 7E 58 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB4 08 38 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB8 28 18 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DBC 38 38 C6 EE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC0 7E FE 66 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC4 10 00 10 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC8 1E 08 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DCC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD0 3C 3C 3C 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD4 18 18 18 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DDC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE0 44 3C 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE4 7C 42 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE8 3C 3C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DEC 10 38 3C B8 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF0 B8 9E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF4 08 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF8 30 7E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E2C 20 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E38 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E5C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E64 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E68 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E78 00 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA8 04 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB4 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB8 48 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC4 00 00 1E 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC8 04 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ECC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE0 00 08 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF4 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F2C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F38 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F5C 00 00 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F64 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F68 00 00 30 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F78 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA8 04 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB4 00 00 00 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB8 44 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FCC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE0 00 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
 14)   FE00 00          		 @FLAGS DEFS 1        ; Flags: B7=ESC PRESSED,B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 15)   FE01 00 00       		 @FCOLOR DEFS 2       ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 16)   FE03 00 00       		 @BCOLOR DEFS 2       ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 17)   FE05 00 00       		 @FGRCOL DEFS 2       ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 18)   FE07 00 00       		 @BGRCOL DEFS 2       ;BACKGROUND COLOR FOR GRAPHICS	;BACKGROUND COLOR FOR GRAPHICS
 19)   FE09 00 00       		 @FCOLTM DEFS 2       ;TEMP FOREGROUND COLOR	;TEMP FOREGROUND COLOR
 20)   FE0B 00 00       		 @BCOLTM DEFS 2       ;TEMP BACKGROUND COLOR	;TEMP BACKGROUND COLOR
 21)   FE0D 00          		 @CURSORX DEFS 1       ;0-79	;0-79
 22)   FE0E 00          		 @CURSORY DEFS 1       ;0-47	;0-47
 23)   FE0F 00          		 @SCRLN DEFS 1        ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 24)   FE10 00          		 @LASTCHAR DEFS 1      ;	;
 25)   FE11 00          		 @CURSSTAT DEFS 1       ;IF BIT 0 SET THEN SHOW ELSE HIDE,IF BIT 1 SET THEN VISIBLE ELSE HIDDEN ,BIT 2 EN/DIS CURSOR; BIT 3 EN/DIS TIME DISPLAY ON LCD	;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN , BIT 2 EN/DIS CURSOR; BIT 3 EN/DIS TIME DISPLAY ON LCD
 26)   FE12 00 00       		 @EDPTR DEFS 2	;
 27)   FE14 00          		 @OPTVAL DEFS 1	;
 28)   FE15 00          		 @INKEY DEFS 1	;
 29)   FE16 00          		 @VDUMODE DEFS 1       ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 30)   FE17 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE23 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE27 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE33 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 31)   FE37 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE43 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE47 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE53 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 32)   FE57 00 00       		 @GR_LASTX3 DEFS 2	;
 33)   FE59 00 00       		 @GR_LASTY3 DEFS 2	;
 34)   FE5B 00 00       		 @GR_LASTX2 DEFS 2	;
 35)   FE5D 00 00       		 @GR_LASTY2 DEFS 2	;
 36)   FE5F 00 00       		 @GR_LASTX DEFS 2	;
 37)   FE61 00 00       		 @GR_LASTY DEFS 2	;
 38)   FE63 00 00       		 @GR_PARAM1 DEFS 2	;
 39)   FE65 00 00       		 @GR_PARAM2 DEFS 2	;
 40)   FE67 00 00       		 @GR_PARAM3 DEFS 2	;
 41)   FE69 00 00       		 @GR_PARAM4 DEFS 2	;
 43)   FE6B 00 00       		 @FILL_X DEFS 2	;
 44)   FE6D 00 00       		 @FILL_Y DEFS 2	;
 45)   FE6F 00 00       		 @FILL_L DEFS 2	;
 46)   FE71 00 00       		 @FILL_X1 DEFS 2	;
 47)   FE73 00 00       		 @FILL_X2 DEFS 2	;
 48)   FE75 00 00       		 @FILL_DY DEFS 2	;
 49)   FE77 00 00       		 @FILL_Q DEFS 2        ;START OF QUEUE	;START OF QUEUE
 50)   FE79 00 00       		 @FILL_IDX DEFS 2       ;INDEX OF QUEUE	;INDEX OF QUEUE
 51)   FE7B 00 00       		 @FILL_PY DEFS 2       ;FOR PUSH/POP	;FOR PUSH/POP
 52)   FE7D 00 00       		 @FILL_PXL DEFS 2	;
 53)   FE7F 00 00       		 @FILL_PXR DEFS 2	;
 54)   FE81 00 00       		 @FILL_PDY DEFS 2	;
 55)   FE83 00 00       		 @FILL_OV DEFS 2       ;OLD COLOR	;OLD COLOR
 56)   FE85 00 00       		 @FILL_OLDSP DEFS 2      ; OLD SP	; OLD SP
 57)   FE87 00          		 @LCD_DSPCTRL DEFS 1      ;LCD I2C 16X2	;LCD I2C 16X2
 58)   FE88 00          		 @LCD_DSPMODE DEFS 1      ;LCD I2C 16X2	;LCD I2C 16X2
 59)   FE89 00          		 @LCD_STSMASK DEFS 1      ;LCD I2C 16X2 	;LCD I2C 16X2
 60)   FE8A 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE8E 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE92 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE96 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE9A 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE9E 00 00       		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 61)   FEA0 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEA4 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEA8 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEAC 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEB0 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEB4 00 00       		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 62)   FEB6 00          		 @FFSTAT DEFS 1        ;FOR OUTPUT FLIP FLOPS DEVEPR,DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 63)   FEB7 00          		 @KEYCTR DEFS 1        ;FOR USB KEYBOARD	;FOR USB KEYBOARD
 64)   FEB8 00          		 @SERERR DEFS 1       ;	;
 65)   FEB9 00          		 @SERER2 DEFS 1        ;AT RAM ADDRESS	;AT RAM ADDRESS
 66)   FEBA 00          		 @DISPCT DEFS 1        ;	;
 67)   FEBB 00          		 @SCRNST DEFS 1       ;SCREEN STATUS BIT 0 ON/OFF LCD,BIT 1 ON/OFF VGA	;SCREEN STATUS BIT 0 ON/OFF LCD, BIT 1 ON/OFF VGA
 68)   FEBC 00          		 @LCDCX DEFS 1        ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 69)   FEBD 00          		 @LCDCY DEFS 1        ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 70)   FEBE 00 00       		 @PRGEX DEFS 2        ;2 BYTES	;2 BYTES
 71)   FEC0 00          		 @TVSTAT DEFS 1        ;1 BYTE	;1 BYTE
 72)   FEC1 00 00 00 00 		 @TIMECTR DEFS 4	;
 73)   FEC5 00          		 @INT2TE DEFS 1	;
 74)   FEC6 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FECA 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FECE 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FED2 00          		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 75)   FED3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FED7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEDB 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEDF 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEE3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEE7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEEB 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEEF 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEF3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEF7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 76)   FEFB 00 00 00 00 		 @STRGCMD DEFS 4	;
 77)   FEFF 00          		 @FID DEFS 1	;
 78)   FF00 00          		 @SPC DEFS 1	;
 79)   FF01 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 79)   FF05 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 80)   FF09 00 00 00 00 		 @TMPG  DEFS 4  ;TEMP PAGE FOR VIDEO VGA	;TEMP PAGE FOR VIDEO VGA
 81)   FF0D 00 00 00 00 		 @PGSEM DEFS 4  ;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS	;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS
 83)   FF11 00          		 @VGAFCOL DEFS 1  ;VGA FORE COLOR	;VGA FORE COLOR
 84)   FF12 00          		 @VGABCOL DEFS 1  ;VGA BACK COLOR	;VGA BACK COLOR
 85)   FF13 00          		 @VGATX_X DEFS 1  ;VGA CURRENT X POS	;VGA CURRENT X POS
 86)   FF14 00          		 @VGATX_Y DEFS 1  ;VGA CUR Y POS	;VGA CUR Y POS
 87)   FF15 00          		 @VGAMAXX DEFS 1  ;MAX HORZ CHARS	;MAX HORZ CHARS
 88)   FF16 00          		 @VGAMAXY DEFS 1  ;MAX VERT LINES	;MAX VERT LINES
 89)   FF17 00          		 @VGATMPC DEFS 1  ;TMP CHAR FOR CURSOR	;TMP CHAR FOR CURSOR
 90)   FF18 00          		 @VGABUF  DEFS 1  ;BUFFER TO WRITE-BIT 0 TO SELECT	;BUFFER TO WRITE - BIT 0 TO SELECT
 91)   FF19 00 00       		 @VGASTADR DEFS 2 ;START ADDRESS TO CALCULATE TEXT OUTPUT	;START ADDRESS TO CALCULATE TEXT OUTPUT
 93)   FF1B 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF1F 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF23 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF27 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF2B 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF2F 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF33 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF37 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF3B 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 93)   FF3F 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF43 00 00       		 @COMDGET DEFS 2  ;OS COMDGET ADDRESS (CHANGE THIS IN BASIC TO RETURN THERE)	;OS COMDGET ADDRESS (CHANGE THIS IN BASIC TO RETURN THERE)
 96)   FF45 00 00 00 00 		 @B2DINV DEFS 8  ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 96)   FF49 00 00 00 00 		 @B2DINV DEFS 8  ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 97)   FF4D 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF51 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF55 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF59 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 97)   FF5D 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 98)   FF61 00          		 @B2DEND DEFS 1  ;0 FOR TERMINATE THE STRING	;0 FOR TERMINATE THE STRING
 99)   FF62 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
 99)   FF66 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
 99)   FF6A 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
 99)   FF6E 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
100)   FF72 00          		 @DISPEN DEFS 1  ;BIT 0 = LCD OFF/ON BIT 1 = VGA OFF/ON	;BIT 0 = LCD OFF/ON BIT 1 = VGA OFF/ON
101)   FF73 00          		 @RNDseed DEFS 1  ;RANDOM SEED	;RANDOM SEED
103)   FF74 00          		 @KBDFLAG DEFS 1  ;KEYB FLAG	;KEYB FLAG
104)   FF75 00          		 @LASTKEY DEFS 1  ;LAST KEY PRESSED	;LAST KEY PRESSED
105)   FF76 00          		 @MENUVCLR DEFS 1 ;MENU VGA COLOR FORE AND BACK HI NIBBLE IS BACKGROUND	;MENU VGA COLOR FORE AND BACK HI NIBBLE IS BACKGROUND
106)   FF77 00 00       		 @MENULFORE DEFS 2 ;MENU LCD COLOR FOREGROUND	;MENU LCD COLOR FOREGROUND
107)   FF79 00 00       		 @MENULBACK DEFS 2 ;MENU LCD COLOR BACKGROUND	;MENU LCD COLOR BACKGROUND
111)   FF7B 00 00       		               DEFS 2	;
112)   FF7D 00 00       		               DEFS 2	;
113)   FF7F 00 00       		               DEFS 2	;
114)   FF81 00 00       		               DEFS 2	;
116)   FF83 00          		               DEFS 1	;
117)   FF84 00          		               DEFS 1	;
118)   FF85 00          		               DEFS 1	;
119)   FF86 00          		               DEFS 1	;
120)   FF87 00          		@CHANST:       DEFS 1    ;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED                	;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED
