  3)   0000 00          		 NOP	;
  4)   0001 C3 00 02    		 JP START	;
  5)   0004 C3 E3 02    		 JP MENU	;
  6)   0007 25          		 VERSION DEFB $25    ; AT ADDR=7 VER 2.4	; AT ADDR=7 VER 2.4
  7)   0008 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   000C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0010 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0014 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0018 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   001C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0020 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0024 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0028 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   002C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0030 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0034 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
 10)   0038 C3 FD 05    		 JP INTSER	;
 13)   003B 00 00 00 00 		 ALIGN 256	;
 13)   003F 00 00 00 00 		 ALIGN 256	;
 13)   0043 00 00 00 00 		 ALIGN 256	;
 13)   0047 00 00 00 00 		 ALIGN 256	;
 13)   004B 00 00 00 00 		 ALIGN 256	;
 13)   004F 00 00 00 00 		 ALIGN 256	;
 13)   0053 00 00 00 00 		 ALIGN 256	;
 13)   0057 00 00 00 00 		 ALIGN 256	;
 13)   005B 00 00 00 00 		 ALIGN 256	;
 13)   005F 00 00 00 00 		 ALIGN 256	;
 13)   0063 00 00 00 00 		 ALIGN 256	;
 13)   0067 00 00 00 00 		 ALIGN 256	;
 13)   006B 00 00 00 00 		 ALIGN 256	;
 13)   006F 00 00 00 00 		 ALIGN 256	;
 13)   0073 00 00 00 00 		 ALIGN 256	;
 13)   0077 00 00 00 00 		 ALIGN 256	;
 13)   007B 00 00 00 00 		 ALIGN 256	;
 13)   007F 00 00 00 00 		 ALIGN 256	;
 13)   0083 00 00 00 00 		 ALIGN 256	;
 13)   0087 00 00 00 00 		 ALIGN 256	;
 13)   008B 00 00 00 00 		 ALIGN 256	;
 13)   008F 00 00 00 00 		 ALIGN 256	;
 13)   0093 00 00 00 00 		 ALIGN 256	;
 13)   0097 00 00 00 00 		 ALIGN 256	;
 13)   009B 00 00 00 00 		 ALIGN 256	;
 13)   009F 00 00 00 00 		 ALIGN 256	;
 13)   00A3 00 00 00 00 		 ALIGN 256	;
 13)   00A7 00 00 00 00 		 ALIGN 256	;
 13)   00AB 00 00 00 00 		 ALIGN 256	;
 13)   00AF 00 00 00 00 		 ALIGN 256	;
 13)   00B3 00 00 00 00 		 ALIGN 256	;
 13)   00B7 00 00 00 00 		 ALIGN 256	;
 13)   00BB 00 00 00 00 		 ALIGN 256	;
 13)   00BF 00 00 00 00 		 ALIGN 256	;
 13)   00C3 00 00 00 00 		 ALIGN 256	;
 13)   00C7 00 00 00 00 		 ALIGN 256	;
 13)   00CB 00 00 00 00 		 ALIGN 256	;
 13)   00CF 00 00 00 00 		 ALIGN 256	;
 13)   00D3 00 00 00 00 		 ALIGN 256	;
 13)   00D7 00 00 00 00 		 ALIGN 256	;
 13)   00DB 00 00 00 00 		 ALIGN 256	;
 13)   00DF 00 00 00 00 		 ALIGN 256	;
 13)   00E3 00 00 00 00 		 ALIGN 256	;
 13)   00E7 00 00 00 00 		 ALIGN 256	;
 13)   00EB 00 00 00 00 		 ALIGN 256	;
 13)   00EF 00 00 00 00 		 ALIGN 256	;
 13)   00F3 00 00 00 00 		 ALIGN 256	;
 13)   00F7 00 00 00 00 		 ALIGN 256	;
 13)   00FB 00 00 00 00 		 ALIGN 256	;
 13)   00FF 00          		 ALIGN 256	;
 16)   0100 C3 0F 21    		 JP MYOS_CLRSCN	;
 17)   0103 C3 12 21    		 JP MYOS_PUTIME	;
 18)   0106 C3 23 21    		 JP MYOS_GETIME	;
 19)   0109 C3 34 21    		 JP MYOS_PUTCSR	;
 20)   010C C3 4C 21    		 JP MYOS_GETCSR	;
 21)   010F C3 5B 21    		 JP MYOS_OSRDCH	;
 22)   0112 C3 18 23    		 JP MYOS_PROMPT	;
 23)   0115 C3 66 21    		 JP MYOS_OSWRCH	;
 24)   0118 C3 46 23    		 JP MYOS_OSKEY	;
 25)   011B C3 82 23    		 JP MYOS_OSINIT	;
 26)   011E C3 F1 27    		 JP MYOS_OSLINE	;
 27)   0121 C3 FE 23    		 JP MYOS_OSCLI	;
 28)   0124 C3 0A 27    		 JP MYOS_OSBPUT	;
 29)   0127 C3 1A 27    		 JP MYOS_OSBGET	;
 30)   012A C3 47 27    		 JP MYOS_OSSTAT	;
 31)   012D C3 42 27    		 JP MYOS_OSSHUT	;
 32)   0130 C3 E3 26    		 JP MYOS_OSOPEN	;
 33)   0133 C3 4E 27    		 JP MYOS_OSCALL	;
 34)   0136 C3 77 20    		 JP MYOS_OSSAVE	;
 35)   0139 C3 B7 20    		 JP MYOS_OSLOAD	;
 36)   013C C3 34 27    		 JP MYOS_GETPTR	;
 37)   013F C3 39 27    		 JP MYOS_PUTPTR	;
 38)   0142 C3 3D 27    		 JP MYOS_GETEXT	;
 39)   0145 C3 4F 27    		 JP MYOS_RESET	;
 40)   0148 C3 72 23    		 JP MYOS_TRAP	;
 41)   014B C3 75 23    		 JP MYOS_LTRAP	;
 42)   014E C3 57 27    		 JP MYOS_CLG	;
 43)   0151 C3 6F 27    		 JP MYOS_COLOUR	;
 44)   0154 C3 7A 27    		 JP MYOS_DRAW	;
 45)   0157 C3 A0 27    		 JP MYOS_ENVEL	;
 46)   015A C3 63 27    		 JP MYOS_GCOL	;
 47)   015D C3 50 27    		 JP MYOS_MODE	;
 48)   0160 C3 84 27    		 JP MYOS_MOVE	;
 49)   0163 C3 8E 27    		 JP MYOS_PLOT	;
 50)   0166 C3 A0 27    		 JP MYOS_SOUND	;
 51)   0169 C3 A0 27    		 JP MYOS_ADVAL	;
 52)   016C C3 98 27    		 JP MYOS_POINT	;
 53)   016F C3 A6 27    		 JP MYOS_GETIMS	;
 54)   0172 C3 A0 27    		 JP MYOS_PUTIMS	;
 56)   0175 00 00 00 00 		 ALIGN 256	;
 56)   0179 00 00 00 00 		 ALIGN 256	;
 56)   017D 00 00 00 00 		 ALIGN 256	;
 56)   0181 00 00 00 00 		 ALIGN 256	;
 56)   0185 00 00 00 00 		 ALIGN 256	;
 56)   0189 00 00 00 00 		 ALIGN 256	;
 56)   018D 00 00 00 00 		 ALIGN 256	;
 56)   0191 00 00 00 00 		 ALIGN 256	;
 56)   0195 00 00 00 00 		 ALIGN 256	;
 56)   0199 00 00 00 00 		 ALIGN 256	;
 56)   019D 00 00 00 00 		 ALIGN 256	;
 56)   01A1 00 00 00 00 		 ALIGN 256	;
 56)   01A5 00 00 00 00 		 ALIGN 256	;
 56)   01A9 00 00 00 00 		 ALIGN 256	;
 56)   01AD 00 00 00 00 		 ALIGN 256	;
 56)   01B1 00 00 00 00 		 ALIGN 256	;
 56)   01B5 00 00 00 00 		 ALIGN 256	;
 56)   01B9 00 00 00 00 		 ALIGN 256	;
 56)   01BD 00 00 00 00 		 ALIGN 256	;
 56)   01C1 00 00 00 00 		 ALIGN 256	;
 56)   01C5 00 00 00 00 		 ALIGN 256	;
 56)   01C9 00 00 00 00 		 ALIGN 256	;
 56)   01CD 00 00 00 00 		 ALIGN 256	;
 56)   01D1 00 00 00 00 		 ALIGN 256	;
 56)   01D5 00 00 00 00 		 ALIGN 256	;
 56)   01D9 00 00 00 00 		 ALIGN 256	;
 56)   01DD 00 00 00 00 		 ALIGN 256	;
 56)   01E1 00 00 00 00 		 ALIGN 256	;
 56)   01E5 00 00 00 00 		 ALIGN 256	;
 56)   01E9 00 00 00 00 		 ALIGN 256	;
 56)   01ED 00 00 00 00 		 ALIGN 256	;
 56)   01F1 00 00 00 00 		 ALIGN 256	;
 56)   01F5 00 00 00 00 		 ALIGN 256	;
 56)   01F9 00 00 00 00 		 ALIGN 256	;
 56)   01FD 00 00 00    		 ALIGN 256	;
 40)   0200 F3          		@START: DI	;
 50)   0201 C3 45 02    		 JP BOOT        ;SKIP TESTING	;SKIP TESTING
 55)   0204 06 05       		CN1: LD B, 5	;
 56)   0206 0E 00       		AGN1: LD C, 0	;
 57)   0208 3E 00       		 LD A, 0	;
 58)   020A ED 79       		 OUT (C), A	;
 59)   020C 0E 00       		 LD C, 0	;
 60)   020E 3E FF       		 LD A, 255	;
 61)   0210 ED 79       		 OUT (C), A	;
 62)   0212 10 F2       		 DJNZ AGN1	;
 67)   0214 11 01 00    		 LD DE, 1	;
 68)   0217 3E 00       		 LD A, 0        ;WRITE 0	;WRITE 0
 69)   0219 4F          		 LD C, A	;
 70)   021A 21 00 80    		 LD HL, RAMAD	;
 71)   021D 06 08       		 LD B, 8	;
 72)   021F 77          		AGN2: LD (HL), A	;
 73)   0220 4E          		 LD C, (HL)	;
 74)   0221 B9          		 CP C	;
 75)   0222 C2 3C 02    		 JP NZ, ERR	;
 76)   0225 19          		 ADD HL, DE	;
 77)   0226 C6 20       		 ADD A, 32       ;WRITE +32	;WRITE +32
 78)   0228 4F          		 LD C, A	;
 79)   0229 10 F4       		 DJNZ AGN2	;
 81)   022B 06 05       		 LD B, 5	;
 82)   022D 0E 08       		AGN3: LD C, 00001000B       ;LLH ON 138 Y1 OUT	;LLH ON 138 Y1 OUT
 83)   022F 3E 40       		 LD A, 64	;
 84)   0231 ED 79       		 OUT (C), A	;
 85)   0233 C6 80       		 ADD A, 128	;
 86)   0235 ED 79       		 OUT (C), A	;
 87)   0237 10 F4       		 DJNZ AGN3        ; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8	; SIGNAL ALL OK CONTINUOUS 10 TIMES ON PORT 8
 88)   0239 C3 45 02    		 JP BOOT	;
 91)   023C 0E 38       		ERR: LD C, 00111000B       ;HHH ON 138 Y7 OUT	;HHH ON 138 Y7 OUT
 92)   023E 3E 40       		 LD A, 64	;
 93)   0240 ED 79       		 OUT (C), A	;
 95)   0242 C3 3C 02    		 JP ERR         ;DO AGAIN PORT 1	;DO AGAIN PORT 1
102)   0245 F3          		@BOOT: DI	;
103)   0246 ED 56       		 IM 1	;
106)   0248 0E 00       		MMUSETUP:   LD C,DEVMMU	;
107)   024A AF          		  XOR A	;
108)   024B 06 00       		 LD B,0.SHL.5	;
109)   024D ED 79       		 OUT (C),A	;
110)   024F 3C          		 INC A	;
111)   0250 06 20       		 LD B,1.SHL.5	;
112)   0252 ED 79       		 OUT (C),A  	;
113)   0254 3C          		 INC A	;
114)   0255 06 40       		 LD B,2.SHL.5	;
115)   0257 ED 79       		 OUT (C),A  	;
116)   0259 3C          		 INC A	;
117)   025A 06 60       		 LD B,3.SHL.5	;
118)   025C ED 79       		 OUT (C),A  	;
119)   025E 3C          		 INC A	;
120)   025F 06 80       		 LD B,4.SHL.5	;
121)   0261 ED 79       		 OUT (C),A  	;
122)   0263 3C          		 INC A	;
123)   0264 06 A0       		 LD B,5.SHL.5	;
124)   0266 ED 79       		 OUT (C),A  	;
125)   0268 3C          		 INC A	;
126)   0269 06 C0       		 LD B,6.SHL.5	;
127)   026B ED 79       		 OUT (C),A  	;
128)   026D 3C          		 INC A	;
129)   026E 06 E0       		 LD B,7.SHL.5	;
130)   0270 ED 79       		 OUT (C),A   	;
132)   0272 31 FF FA    		 LD SP, STACKP	;
133)   0275 21 00 FE    		 LD HL,OSVARS       ;ZERO OS VARIABLES	;ZERO OS VARIABLES
134)   0278 AF          		SI_AGN: XOR A	;
135)   0279 77          		 LD (HL),A	;
136)   027A 23          		 INC HL	;
137)   027B 7C          		 LD A,H	;
138)   027C B5          		 OR L	;
139)   027D 20 F9       		 JR NZ,SI_AGN       ;HL=0000 WHEN OVERFLOW FROM FFFF	;HL=0000 WHEN OVERFLOW FROM FFFF
140)   027F CD 68 06    		 CALL INITMMU       ;PUT PAGES 0..7 IN RAM BANKS 0..7	;PUT PAGES 0..7 IN RAM BANKS 0..7
141)   0282 CD 1D 04    		 CALL FF_CLR	;
142)   0285 CD 45 04    		 CALL EPROMOFF	;
143)   0288 CD 3D 07    		 CALL KEYBDATON	;
146)   028B 3E 0C       		 LD A, 12        ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
147)   028D CD 9F 06    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
148)   0290 21 4F 05    		 LD HL, STR00	;
149)   0293 CD C7 06    		 CALL RS_TXT	;
152)   0296 CD 6F 0C    		 CALL I2C_INIT        ;INITIALIZE I2C	;INITIALIZE I2C
153)   0299 CD FB 0D    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
154)   029C CD D0 0E    		 CALL LCD16_INIT       ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
155)   029F 21 9E 05    		 LD HL, SVER	;
156)   02A2 CD 51 0F    		 CALL LCD16_PRINT       ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
159)   02A5 CD 4A 0A    		 CALL STRG_INIT	;
160)   02A8 21 86 05    		 LD HL, STR001	;
161)   02AB CD C7 06    		 CALL RS_TXT	;
169)   02AE CD FB 11    		 CALL LCD_INIT	;
170)   02B1 21 00 00    		 LD HL, COL_BLACK	;
171)   02B4 22 03 FE    		 LD (BCOLOR), HL	;
172)   02B7 21 FF FF    		 LD HL, COL_WHITE	;
173)   02BA 22 01 FE    		 LD (FCOLOR), HL	;
174)   02BD 21 3C 05    		 LD HL, STRSCR	;
175)   02C0 CD C7 06    		 CALL RS_TXT	;
176)   02C3 CD 09 1A    		 CALL LCD_CLRSCR	;
177)   02C6 AF          		 XOR A	;
178)   02C7 32 0F FE    		 LD (SCRLN), A	;
179)   02CA 3E 00       		 LD A, 0	;
180)   02CC 32 0D FE    		 LD (CURSORX), A	;
181)   02CF 3E 00       		 LD A, 0	;
182)   02D1 32 0E FE    		 LD (CURSORY), A	;
185)   02D4 CD CB 0F    		 CALL VGA_INIT	;
186)   02D7 21 FE 04    		 LD HL, TXTMES	;
187)   02DA CD C7 06    		 CALL RS_TXT	;
192)   02DD 21 B0 05    		 LD HL,OSVERMES	;
193)   02E0 CD 86 03    		 CALL OS_PRINTTEXT	;
199)   02E3 AF          		@MENU: XOR A	;
200)   02E4 32 0F FE    		 LD (SCRLN), A	;
201)   02E7 21 0B 05    		 LD HL, STRMN	;
202)   02EA CD C7 06    		 CALL RS_TXT       ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
203)   02ED 21 65 05    		 LD HL, STR01	;
204)   02F0 CD C7 06    		 CALL RS_TXT       ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
211)   02F3 3E 00       		 LD A, 0	;
212)   02F5 32 0D FE    		 LD (CURSORX), A	;
213)   02F8 32 F3 FE    		 LD (VGATX_X), A	;
214)   02FB 3E 06       		 LD A, 6	;
215)   02FD 32 0E FE    		 LD (CURSORY), A	;
216)   0300 32 F4 FE    		 LD (VGATX_Y), A	;
217)   0303 21 71 04    		 LD HL, SMENU	;
218)   0306 CD 86 03    		 CALL OS_PRINTTEXT	;
220)   0309 CD 4A 03    		 CALL GET_CHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
223)   030C FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
224)   030E CC 9B 03    		 CALL Z, UPLOD	;
225)   0311 FE 58       		 CP 'X'	;
226)   0313 CA 92 03    		 JP Z, EXEC	;
227)   0316 FE 54       		 CP 'T'	;
228)   0318 CC EB 03    		 CALL Z, RSTST	;
229)   031B FE 59       		 CP 'Y'	;
230)   031D CC 01 04    		 CALL Z, RSTST2	;
231)   0320 FE 48       		 CP 'H'	;
232)   0322 CC 10 04    		 CALL Z, XMTST	;
233)   0325 FE 4A       		 CP 'J'	;
234)   0327 CC D0 03    		 CALL Z, DNLOD	;
237)   032A FE 43       		 CP 'C'	;
238)   032C CC 09 1A    		 CALL Z, LCD_CLRSCR	;
239)   032F FE 42       		 CP 'B'	;
240)   0331 CA 00 40    		 JP Z, BBCBASIC	;
242)   0334 C3 E3 02    		 JP MENU	;
249)   0337 CD C7 27    		@GET_CHARNW: CALL CHKCURS	;
250)   033A AF          		 XOR A	;
252)   033B CD FA 06    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
253)   033E 28 04       		 JR Z, CNW_TST2	;
254)   0340 CD D1 06    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
255)   0343 C9          		 RET	;
259)   0344 CD 13 08    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
260)   0347 FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
271)   0349 C9          		 RET	;
276)   034A CD C7 27    		@GET_CHAR: CALL CHKCURS	;
277)   034D AF          		 XOR A	;
279)   034E CD FA 06    		 CALL RS_KEYRD       ;CHAR IN RS232?	;CHAR IN RS232?
280)   0351 28 04       		 JR Z, CW_TST2	;
281)   0353 CD D1 06    		 CALL RS_RX       ; GET THAT CHAR	; GET THAT CHAR
282)   0356 C9          		 RET	;
286)   0357 CD 13 08    		 CALL READCHAR       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
287)   035A FE 00       		 CP 0         ;IF KEY=0 THEN IT IS INVALID	;IF KEY=0 THEN IT IS INVALID
288)   035C 28 EC       		 JR Z, GET_CHAR	;
298)   035E C9          		 RET	;
302)   035F F5          		@OS_PRINTCHAR: PUSH AF	;
303)   0360 CD 44 18    		 CALL LCD_PRINTCHAR	;
304)   0363 F1          		 POP AF	;
305)   0364 CD EB 10    		 CALL VGA_PRCH	;
306)   0367 C9          		 RET	;
310)   0368 E5          		@OS_MSG: PUSH HL	;
311)   0369 CD 49 1A    		 CALL LCD_MSG	;
312)   036C E1          		 POP HL	;
313)   036D CD 7A 11    		 CALL VGA_PRINT	;
314)   0370 C9          		 RET	;
316)   0371 CD C7 19    		@OS_PRNCURS: CALL LCD_PRNCURS	;
317)   0374 CD 68 11    		 CALL VGA_PRNCURS	;
318)   0377 C9          		 RET	;
320)   0378 CD C2 19    		@OS_RMVCURS: CALL LCD_RMVCURS	;
321)   037B CD 60 11    		 CALL VGA_RMVCURS	;
322)   037E C9          		 RET	;
324)   037F CD 09 1A    		@OS_CLRSCR: CALL LCD_CLRSCR	;
325)   0382 CD 76 10    		 CALL VGA_TXTCLR	;
326)   0385 C9          		 RET	;
329)   0386 7E          		@OS_PRINTTEXT: LD A,(HL)	;
330)   0387 FE 00       		 CP 0	;
331)   0389 C8          		 RET Z	;
332)   038A E5          		 PUSH HL	;
333)   038B CD 5F 03    		 CALL OS_PRINTCHAR	;
334)   038E E1          		 POP HL	;
335)   038F 23          		 INC HL	;
336)   0390 18 F4       		 JR OS_PRINTTEXT 	;
347)   0392 3E 05       		 LD A, 5	;
348)   0394 CD 18 29    		 CALL SCPRN	;
350)   0397 2A A4 FE    		 LD HL, (PRGEX)	;
357)   039A E9          		 JP (HL)	;
364)   039B F3          		UPLOD: DI	;
369)   039C CD D1 06    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
370)   039F 6F          		 LD L, A	;
371)   03A0 CD D1 06    		 CALL RS_RX	;
372)   03A3 67          		 LD H, A	;
373)   03A4 CD D1 06    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
374)   03A7 4F          		 LD C, A	;
375)   03A8 CD D1 06    		 CALL RS_RX	;
376)   03AB 47          		 LD B, A	;
378)   03AC 22 A4 FE    		 LD (PRGEX), HL	;
379)   03AF 3A A5 FE    		 LD A, (PRGEX + 1)	;
387)   03B2 FE 80       		 CP $80	;
388)   03B4 DC 4D 04    		 CALL C, EPROMON       ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
390)   03B7 E5          		NORWR: PUSH HL	;
391)   03B8 CD D1 06    		NXB: CALL RS_RX	;
392)   03BB 77          		 LD (HL), A	;
393)   03BC 23          		 INC HL	;
394)   03BD 0B          		 DEC BC	;
395)   03BE 78          		 LD A, B	;
396)   03BF B1          		 OR C	;
397)   03C0 20 F6       		 JR NZ, NXB       ;LOOP ALL BYTES	;LOOP ALL BYTES
398)   03C2 CD 45 04    		 CALL EPROMOFF	;
403)   03C5 3E 05       		 LD A, 5	;
404)   03C7 CD 18 29    		 CALL SCPRN	;
405)   03CA CD 25 29    		 CALL DELAY	;
407)   03CD E1          		 POP HL	;
410)   03CE FB          		 EI	;
411)   03CF C9          		 RET	;
422)   03D0 CD D1 06    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
423)   03D3 6F          		 LD L, A	;
424)   03D4 CD D1 06    		 CALL RS_RX	;
425)   03D7 67          		 LD H, A	;
426)   03D8 CD D1 06    		 CALL RS_RX       ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
427)   03DB 4F          		 LD C, A	;
428)   03DC CD D1 06    		 CALL RS_RX	;
429)   03DF 47          		 LD B, A	;
431)   03E0 7E          		NXB3: LD A, (HL)	;
432)   03E1 CD B8 06    		 CALL RS_TX       ;SEND BYTE	;SEND BYTE
433)   03E4 23          		 INC HL	;
434)   03E5 0B          		 DEC BC	;
435)   03E6 78          		 LD A, B	;
436)   03E7 B1          		 OR C	;
437)   03E8 20 F6       		 JR NZ, NXB3       ;LOOP ALL BYTES	;LOOP ALL BYTES
438)   03EA C9          		 RET	;
440)   03EB 00          		RSTST: NOP        ;GET A KEY FROM RS232	;GET A KEY FROM RS232
441)   03EC 06 0A       		 LD B, 10	;
442)   03EE C5          		TEN: PUSH BC	;
443)   03EF CD D1 06    		 CALL RS_RX	;
445)   03F2 CD B8 06    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
447)   03F5 3E 20       		 LD A, ' '	;
449)   03F7 3E 52       		 LD A, 'R'	;
452)   03F9 CD 32 29    		 CALL DEL2	;
454)   03FC C1          		 POP BC	;
455)   03FD 10 EF       		 DJNZ TEN	;
457)   03FF AF          		 XOR A	;
458)   0400 C9          		 RET	;
460)   0401 00          		RSTST2: NOP        ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
461)   0402 06 FF       		 LD B, 255	;
462)   0404 C5          		TEN2: PUSH BC	;
463)   0405 CD D1 06    		 CALL RS_RX	;
465)   0408 CD B8 06    		 CALL RS_TX       ;SEND BACK THE CHAR	;SEND BACK THE CHAR
467)   040B C1          		 POP BC	;
468)   040C 10 F6       		 DJNZ TEN2	;
469)   040E AF          		 XOR A	;
470)   040F C9          		 RET	;
473)   0410 00          		XMTST: NOP        ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
474)   0411 06 FF       		 LD B, 255	;
475)   0413 C5          		TEN3: PUSH BC	;
476)   0414 78          		 LD A, B	;
477)   0415 CD B8 06    		 CALL RS_TX       ;SEND  THE BYTE	;SEND  THE BYTE
478)   0418 C1          		 POP BC	;
479)   0419 10 F8       		 DJNZ TEN3	;
480)   041B AF          		 XOR A	;
481)   041C C9          		 RET	;
487)   041D AF          		 XOR A	;
488)   041E 32 9D FE    		 LD (FFSTAT), A	;
489)   0421 C9          		 RET	;
492)   0422 04          		@FF_OFF: INC B        ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
493)   0423 AF          		 XOR A	;
494)   0424 37          		 SCF	;
495)   0425 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
496)   0426 10 FD       		 DJNZ SBAGN	;
497)   0428 2F          		 CPL         ;INVERSE BITS ON A	;INVERSE BITS ON A
498)   0429 47          		 LD B, A	;
499)   042A 3A 9D FE    		 LD A, (FFSTAT)	;
500)   042D A0          		 AND B         ;ZERO THE BIT	;ZERO THE BIT
501)   042E 32 9D FE    		 LD (FFSTAT), A	;
502)   0431 D3 08       		 OUT (DEVFFS), A	;
503)   0433 C9          		 RET	;
506)   0434 04          		@FF_ON: INC B         ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
507)   0435 AF          		 XOR A	;
508)   0436 37          		 SCF	;
509)   0437 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
510)   0438 10 FD       		 DJNZ SBAGN	;
511)   043A 47          		 LD B, A	;
512)   043B 3A 9D FE    		 LD A, (FFSTAT)	;
513)   043E B0          		 OR B         ;SET THE BIT	;SET THE BIT
514)   043F 32 9D FE    		 LD (FFSTAT), A	;
515)   0442 D3 08       		 OUT (DEVFFS), A	;
516)   0444 C9          		 RET	;
518)   0445 C5          		@EPROMOFF: PUSH BC	;
519)   0446 06 00       		 LD B, 0	;
520)   0448 CD 22 04    		 CALL FF_OFF	;
521)   044B C1          		 POP BC	;
522)   044C C9          		 RET	;
524)   044D C5          		@EPROMON: PUSH BC	;
525)   044E 06 00       		 LD B, 0	;
526)   0450 CD 34 04    		 CALL FF_ON	;
527)   0453 C1          		 POP BC	;
528)   0454 C9          		 RET	;
534)   0455 F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
535)   0456 26 00       		 LD H, 0	;
536)   0458 6F          		 LD L, A	;
537)   0459 11 AC FE    		 LD DE, MYNUM	;
538)   045C CD 4C 29    		 CALL OUTASC	;
540)   045F 3E 0A       		 LD A, 10	;
541)   0461 12          		 LD (DE), A	;
542)   0462 13          		 INC DE	;
543)   0463 3E 0D       		 LD A, 13	;
544)   0465 12          		 LD (DE), A	;
545)   0466 13          		 INC DE	;
546)   0467 AF          		 XOR A	;
547)   0468 12          		 LD (DE), A	;
549)   0469 21 AC FE    		 LD HL, MYNUM	;
550)   046C CD C7 06    		 CALL RS_TXT	;
551)   046F F1          		 POP AF	;
552)   0470 C9          		 RET	;
558)   0471 55 3A 55 50 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
558)   0475 20 4A 3A 44 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
558)   0479 4E 20 58 3A 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
558)   047D 52 55 4E 20 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
558)   0481 54 59 48 3A 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
558)   0485 52 53 20 43 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
558)   0489 3A 43 4C 53 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
558)   048D 20 42 3A 42 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
558)   0491 41 53 49 43 		SMENU: DEFM "U:UP J:DN X:RUN TYH:RS C:CLS B:BASIC"	;
559)   0495 00          		 DB 0	;
561)   0496 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
561)   049A 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
561)   049E 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
561)   04A2 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
562)   04A5 00          		 DB 0	;
564)   04A6 52 53 32 33 		STR1: DEFM "RS232 INIT"	;
564)   04AA 32 20 49 4E 		STR1: DEFM "RS232 INIT"	;
564)   04AE 49 54       		STR1: DEFM "RS232 INIT"	;
565)   04B0 00          		 DB 0	;
567)   04B1 50 52 4F 47 		STR2: DEFM "PROGRAM HALTED"	;
567)   04B5 52 41 4D 20 		STR2: DEFM "PROGRAM HALTED"	;
567)   04B9 48 41 4C 54 		STR2: DEFM "PROGRAM HALTED"	;
567)   04BD 45 44       		STR2: DEFM "PROGRAM HALTED"	;
568)   04BF 00          		 DB 0	;
570)   04C0 57 41 49 54 		STR02: DEFM "WAITING..."	;
570)   04C4 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
570)   04C8 2E 2E       		STR02: DEFM "WAITING..."	;
571)   04CA 00          		 DB 0	;
573)   04CB 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
573)   04CF 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
573)   04D3 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
573)   04D7 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
574)   04D9 00          		 DB 0	;
576)   04DA 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
576)   04DE 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
576)   04E2 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
577)   04E6 00          		 DB 0	;
579)   04E7 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
579)   04EB 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
579)   04EF 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
580)   04F2 00          		 DB 0	;
582)   04F3 49 4D 41 47 		STIMG: DEFM "IMAGE COPY"	;
582)   04F7 45 20 43 4F 		STIMG: DEFM "IMAGE COPY"	;
582)   04FB 50 59       		STIMG: DEFM "IMAGE COPY"	;
583)   04FD 00          		 DB 0	;
585)   04FE 53 43 52 45 		TXTMES: DEFM "SCREEN READY"	;
585)   0502 45 4E 20 52 		TXTMES: DEFM "SCREEN READY"	;
585)   0506 45 41 44 59 		TXTMES: DEFM "SCREEN READY"	;
586)   050A 00          		 DB 0	;
588)   050B 0A 0D       		STRMN: DB 10,13	;
589)   050D 55 49 3A 55 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   0511 50 20 4A 3A 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   0515 44 4E 20 58 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   0519 3A 52 55 4E 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   051D 20 54 59 48 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   0521 3A 52 53 20 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   0525 53 3A 44 49 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   0529 53 50 20 43 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   052D 3A 43 4C 53 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   0531 20 42 3A 42 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
589)   0535 41 53 49 43 		 DEFM "UI:UP J:DN X:RUN TYH:RS S:DISP C:CLS B:BASIC"	;
590)   0539 0A 0D 00    		 DB 10,13,0	;
592)   053C 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
592)   0540 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
592)   0544 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
592)   0548 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
593)   054C 0A 0D 00    		 DB 10,13,0	;
595)   054F 0A 0D       		STR00: DB 10,13	;
596)   0551 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
596)   0555 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
596)   0559 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
596)   055D 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
596)   0561 44          		 DEFM "RS232 INITIALIZED"	;
597)   0562 0A 0D 00    		 DB 10,13,0	;
599)   0565 0A 0D       		STR01: DB 10,13	;
600)   0567 57 41 49 54 		 DEFM "WAITING..."	;
600)   056B 49 4E 47 2E 		 DEFM "WAITING..."	;
600)   056F 2E 2E       		 DEFM "WAITING..."	;
601)   0571 0A 0D 00    		 DB 10,13,0	;
602)   0574 00          		 DB 0	;
604)   0575 0A 0D       		STR06: DB 10,13	;
605)   0577 4B 45 59 20 		 DEFM "KEY PRESSED"	;
605)   057B 50 52 45 53 		 DEFM "KEY PRESSED"	;
605)   057F 53 45 44    		 DEFM "KEY PRESSED"	;
606)   0582 0A 0D 00    		 DB 10,13,0	;
607)   0585 00          		 DB 0	;
609)   0586 0A 0D       		STR001: DB 10,13	;
610)   0588 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
610)   058C 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
610)   0590 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
610)   0594 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
610)   0598 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
611)   059B 0A 0D 00    		 DB 10,13,0	;
613)   059E 41 54 4C 41 		SVER: DEFM "ATLAS O.S. V."	;
613)   05A2 53 20 4F 2E 		SVER: DEFM "ATLAS O.S. V."	;
613)   05A6 53 2E 20 56 		SVER: DEFM "ATLAS O.S. V."	;
613)   05AA 2E          		SVER: DEFM "ATLAS O.S. V."	;
614)   05AB 30          		 DEFB MJVER	;
615)   05AC 2E          		 DEFB 46	;
616)   05AD 33 31       		 DEFB MNVER1,MNVER2	;
617)   05AF 00          		 DEFB 0	;
619)   05B0 41 54 4C 41 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
619)   05B4 53 20 4D 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
619)   05B8 64 75 6C 61 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
619)   05BC 72 20 5A 38 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
619)   05C0 30 20 43 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
619)   05C4 6D 70 75 74 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
619)   05C8 65 72       		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
620)   05CA 0A 0D       		 DEFB 0AH,0DH	;
621)   05CC 4F 70 65 72 		 DEFM "Operating System Version "  	;
621)   05D0 61 74 69 6E 		 DEFM "Operating System Version "  	;
621)   05D4 67 20 53 79 		 DEFM "Operating System Version "  	;
621)   05D8 73 74 65 6D 		 DEFM "Operating System Version "  	;
621)   05DC 20 56 65 72 		 DEFM "Operating System Version "  	;
621)   05E0 73 69 6F 6E 		 DEFM "Operating System Version "  	;
621)   05E4 20          		 DEFM "Operating System Version "  	;
622)   05E5 30          		 DEFB MJVER	;
623)   05E6 2E          		 DEFB 46	;
624)   05E7 33 31       		 DEFB MNVER1,MNVER2	;
625)   05E9 0A 0D       		 DEFB 0AH,0DH	;
626)   05EB 43 44 65 73 		 DEFM "CDesp 2020-21"	;
626)   05EF 70 20 32 30 		 DEFM "CDesp 2020-21"	;
626)   05F3 32 30 2D 32 		 DEFM "CDesp 2020-21"	;
626)   05F7 31          		 DEFM "CDesp 2020-21"	;
627)   05F8 0A 0D       		 DEFB 0AH,0DH  	;
628)   05FA 0A 0D       		 DEFB 0AH,0DH	;
629)   05FC 00          		 DEFB 00H	;
  2)   05FD E5          		 PUSH HL	;
  3)   05FE F5          		 PUSH AF	;
  4)   05FF C5          		 PUSH BC	;
  5)   0600 DD E5       		 PUSH IX	;
  9)   0602 DB 18       		 IN A, (DEVINP)	;
 10)   0604 2F          		 CPL	;
 11)   0605 E6 07       		 AND 0X07       ;BITS 0-2	;BITS 0-2
 12)   0607 3D          		 DEC A         ;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE	;CONVERT 1-8 TO 0-7 NOT NEEDED ON NEW BOARD ONLY ON MY PROTOTYPE
 13)   0608 DD 21 26 06 		 LD IX, MYINTADDR	;
 14)   060C 06 00       		 LD B, 0	;
 15)   060E 4F          		 LD C, A	;
 16)   060F CB 21       		 SLA C        ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 17)   0611 DD 09       		 ADD IX, BC	;
 18)   0613 DD 6E 00    		 LD L, (IX)	;
 19)   0616 DD 66 01    		 LD H, (IX + 1)	;
 20)   0619 01 1E 06    		 LD BC, IS_EX	;
 21)   061C C5          		 PUSH BC        ;RETURN ADDRESS	;RETURN ADDRESS
 22)   061D E9          		 JP (HL)        ;JP TO HL	;JP TO HL
 24)   061E DD E1       		IS_EX: POP IX	;
 25)   0620 C1          		 POP BC	;
 26)   0621 F1          		 POP AF	;
 27)   0622 E1          		 POP HL	;
 28)   0623 FB          		 EI	;
 29)   0624 ED 4D       		 RETI	;
 31)   0626 42 06       		MYINTADDR: DEFW INT_TIMER	;
 32)   0628 36 06       		 DEFW SAVETE	;
 33)   062A 3F 06       		 DEFW DOCLRINT	;
 34)   062C 3F 06       		 DEFW DOCLRINT	;
 35)   062E 3F 06       		 DEFW DOCLRINT	;
 36)   0630 3F 06       		 DEFW DOCLRINT	;
 37)   0632 3F 06       		 DEFW DOCLRINT	;
 38)   0634 3F 06       		 DEFW DOCLRINT	;
 40)   0636 D3 40       		SAVETE: OUT (DEVINT), A       ;CLEAR THE INTERRUPT	;CLEAR THE INTERRUPT
 41)   0638 21 AB FE    		 LD HL, INT2TE        ;TEARING EFFECT	;TEARING EFFECT
 42)   063B 3E 01       		 LD A, 1	;
 43)   063D 77          		 LD (HL),A        ;	;
 44)   063E C9          		 RET	;
 47)   063F D3 40       		DOCLRINT: OUT (DEVINT), A	;
 48)   0641 C9          		 RET	;
 50)   0642 D3 40       		INT_TIMER: OUT (DEVINT), A	;
 51)   0644 21 A7 FE    		 LD HL, TIMECTR	;
 52)   0647 34          		 INC (HL)	;
 53)   0648 7E          		 LD A, (HL)	;
 54)   0649 FE 00       		 CP 0	;
 55)   064B C0          		 RET NZ	;
 56)   064C 23          		 INC HL	;
 57)   064D 34          		 INC (HL)	;
 58)   064E 7E          		 LD A, (HL)	;
 59)   064F FE 00       		 CP 0	;
 60)   0651 C0          		 RET NZ	;
 61)   0652 23          		 INC HL	;
 62)   0653 34          		 INC (HL)	;
 63)   0654 7E          		 LD A, (HL)	;
 64)   0655 FE 00       		 CP 0	;
 65)   0657 C0          		 RET NZ	;
 66)   0658 23          		 INC HL	;
 67)   0659 34          		 INC (HL)	;
 68)   065A 7E          		 LD A, (HL)	;
 69)   065B FE 00       		 CP 0	;
 70)   065D C0          		 RET NZ	;
 72)   065E 21 00 00    		 LD HL, 0	;
 73)   0661 22 A7 FE    		 LD (TIMECTR), HL	;
 74)   0664 22 A9 FE    		 LD (TIMECTR + 2), HL	;
 75)   0667 C9          		 RET	;
  9)   0668 21 E7 FE    		INITMMU:       LD HL,BANKS	;
 10)   066B 06 08       		               LD B,8	;
 11)   066D AF          		               XOR A	;
 12)   066E 77          		INM_AGN:       LD (HL),A	;
 13)   066F 3C          		               INC A	;
 14)   0670 23          		 INC HL	;
 15)   0671 10 FB       		               DJNZ INM_AGN	;
 16)   0673 C9          		               RET                	;
 22)   0674 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 23)   0675 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 24)   0676 FE 02       		 CP 2	;
 25)   0678 D8          		 RET C         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 26)   0679 FE 07       		 CP 7	;
 27)   067B C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 28)   067C 21 E7 FE    		 LD HL, BANKS	;
 29)   067F 16 00       		 LD D, 0	;
 30)   0681 5F          		 LD E, A	;
 31)   0682 19          		 ADD HL, DE	;
 32)   0683 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 33)   0684 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 34)   0685 0E 00       		 LD C, DEVMMU	;
 35)   0687 58          		 LD E,B	;
 36)   0688 CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 37)   068A CB 20       		 SLA B	;
 38)   068C CB 20       		 SLA B	;
 39)   068E CB 20       		 SLA B	;
 40)   0690 CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 41)   0692 ED 79       		 OUT (C), A	;
 42)   0694 43          		 LD B,E	;
 43)   0695 C9          		 RET	;
 48)   0696 21 E7 FE    		GETPGINBANK:   LD HL,BANKS	;
 49)   0699 16 00       		               LD D,0	;
 50)   069B 58          		               LD E,B	;
 51)   069C 19          		               ADD HL,DE	;
 52)   069D 7E          		               LD A,(HL)	;
 53)   069E C9          		               RET	;
 15)   069F 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 16)   069F 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 17)   069F 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 22)   069F 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 27)   069F 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 35)   069F 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 43)   069F 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 44)   069F 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 53)   069F 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 54)   069F 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 55)   069F 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 56)   069F 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 62)   069F F5          		RS_INI: PUSH AF	;
 63)   06A0 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 64)   06A2 D3 23       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 73)   06A4 F1          		 POP AF	;
 74)   06A5 D3 20       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 75)   06A7 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 76)   06A9 D3 21       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 77)   06AB 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 78)   06AD D3 23       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 80)   06AF 3E 00       		 LD A, 0	;
 81)   06B1 D3 22       		 OUT (FCR), A        ;//was commented	;//was commented
 82)   06B3 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 83)   06B5 D3 21       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 84)   06B7 C9          		 RET	;
 87)   06B8 CD BE 06    		RS_TX: CALL RSTXRD	;
 88)   06BB D3 20       		 OUT (THR), A	;
 90)   06BD C9          		 RET	;
 94)   06BE F5          		RSTXRD: PUSH AF	;
 95)   06BF DB 25       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 96)   06C1 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 97)   06C3 28 FA       		 JR Z, RSTXLP	;
 98)   06C5 F1          		 POP AF	;
 99)   06C6 C9          		 RET	;
102)   06C7 7E          		RS_TXT: LD A, (HL)	;
103)   06C8 23          		 INC HL	;
104)   06C9 FE 00       		 CP 0	;
105)   06CB C8          		 RET Z	;
106)   06CC CD B8 06    		 CALL RS_TX	;
107)   06CF 18 F6       		 JR RS_TXT	;
114)   06D1 F3          		RS_RX: DI	;
115)   06D2 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
116)   06D4 D3 24       		 OUT (MCR), A	;
117)   06D6 CD EF 06    		 CALL RSRXRD	;
118)   06D9 AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
119)   06DA D3 24       		 OUT (MCR), A	;
121)   06DC DB 20       		 IN A, (RBR)	;
122)   06DE FB          		 EI	;
123)   06DF C9          		 RET	;
125)   06E0 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
126)   06E2 D3 24       		 OUT (MCR), A	;
127)   06E4 DB 25       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
128)   06E6 CB 47       		 BIT 0, A	;
129)   06E8 28 03       		 JR Z, RS_NOCHAR	;
130)   06EA F3          		 DI	;
131)   06EB 18 EC       		 JR RS_GTCH	;
132)   06ED AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
133)   06EE C9          		 RET	;
140)   06EF F3          		RSRXRD: DI	;
141)   06F0 F5          		 PUSH AF	;
142)   06F1 DB 25       		RSRXLP: IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
143)   06F3 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
144)   06F5 28 FA       		 JR Z, RSRXLP	;
145)   06F7 F1          		 POP AF	;
146)   06F8 FB          		 EI	;
147)   06F9 C9          		 RET	;
151)   06FA DB 25       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
152)   06FC CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
153)   06FE C9          		 RET	;
155)   06FF F5          		SHLCD: PUSH AF	;
157)   0700 F1          		 POP AF	;
159)   0701 C9          		 RET	;
163)   0702 F5          		CHKERR: PUSH AF	;
164)   0703 E5          		 PUSH HL	;
165)   0704 C5          		 PUSH BC	;
166)   0705 DB 25       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
167)   0707 CB 67       		 BIT 4, A	;
168)   0709 28 04       		 JR Z, LBLPE	;
169)   070B 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
170)   070D 18 1A       		 JR EXIT	;
171)   070F CB 57       		LBLPE: BIT 2, A	;
172)   0711 28 04       		 JR Z, LBLFE	;
173)   0713 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
174)   0715 18 12       		 JR EXIT	;
175)   0717 CB 5F       		LBLFE: BIT 3, A	;
176)   0719 28 04       		 JR Z, LBLOE	;
177)   071B 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
178)   071D 18 0A       		 JR EXIT	;
179)   071F CB 4F       		LBLOE: BIT 1, A	;
180)   0721 28 04       		 JR Z, LBLNE	;
181)   0723 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
182)   0725 18 02       		 JR EXIT	;
183)   0727 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
184)   0729 21 9F FE    		EXIT: LD HL, SERERR	;
185)   072C 77          		 LD (HL), A	;
187)   072D C1          		 POP BC	;
188)   072E E1          		 POP HL	;
189)   072F F1          		 POP AF	;
190)   0730 C9          		 RET	;
 15)   0731 	            		 DEVKBI EQU DEVINP      ; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP	; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP
 21)   0731 06 01       		@KEYBCLKON: LD B, UKB_OUT_CLK	;
 22)   0733 CD 22 04    		 CALL FF_OFF	;
 23)   0736 C9          		 RET	;
 25)   0737 06 01       		@KEYBCLKOFF: LD B, UKB_OUT_CLK	;
 26)   0739 CD 34 04    		 CALL FF_ON	;
 27)   073C C9          		 RET	;
 29)   073D 06 02       		@KEYBDATON: LD B, UKB_OUT_DAT	;
 30)   073F CD 22 04    		 CALL FF_OFF	;
 31)   0742 C9          		 RET	;
 33)   0743 06 02       		@KEYBDATOFF: LD B, UKB_OUT_DAT	;
 34)   0745 CD 34 04    		 CALL FF_ON	;
 35)   0748 C9          		 RET	;
 37)   0749 CD 31 07    		PS2ISK: CALL KEYBCLKON        ;KEYBOARD ENABLED	;KEYBOARD ENABLED
 38)   074C 06 46       		 LD B, SAMP        ;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)	;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)
 39)   074E DB 18       		CHAG: IN A, (DEVKBI)	;
 40)   0750 57          		 LD D, A	;
 41)   0751 CB 77       		 BIT UKB_IN_CLK, A      ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 42)   0753 28 08       		 JR Z, KEYOK	;
 43)   0755 10 F7       		 DJNZ CHAG	;
 45)   0757 3E 01       		PS2NTP: LD A, 1        ;SET A TO 1 MEANS NO KEY AVAILABLE	;SET A TO 1 MEANS NO KEY AVAILABLE
 46)   0759 CD 37 07    		 CALL KEYBCLKOFF	;
 47)   075C C9          		 RET	;
 48)   075D AF          		KEYOK: XOR A        ;SET A TO 0 MEANS WE HAVE A KEY	;SET A TO 0 MEANS WE HAVE A KEY
 49)   075E C9          		 RET	;
 52)   075F 06 46       		WAITFORHIGH: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 53)   0761 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 54)   0762 DB 18       		WH1: IN A, (DEVKBI)	;
 55)   0764 57          		 LD D, A	;
 56)   0765 CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 57)   0767 C0          		 RET NZ	;
 58)   0768 10 F8       		 DJNZ WH1	;
 59)   076A 37          		 SCF	;
 60)   076B C9          		 RET	;
 62)   076C 06 46       		WAITFORLOW1: LD B, SAMP       ;SHOULD HAVE A TIMEOUT ALSO	;SHOULD HAVE A TIMEOUT ALSO
 63)   076E B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 64)   076F DB 18       		WL1: IN A, (DEVKBI)	;
 65)   0771 57          		 LD D, A	;
 66)   0772 CB 77       		 BIT UKB_IN_CLK, A       ;CHECK BIT 6=CLOCK	;CHECK BIT 6=CLOCK
 67)   0774 C8          		 RET Z	;
 68)   0775 10 F8       		 DJNZ WL1	;
 69)   0777 37          		 SCF	;
 70)   0778 C9          		 RET	;
 72)   0779 CD 6C 07    		WAITFORLOW: CALL WAITFORLOW1	;
 73)   077C D8          		 RET C	;
 74)   077D DB 18       		 IN A, (DEVKBI)        ;SOME MORE TIMES TO BE SURE	;SOME MORE TIMES TO BE SURE
 75)   077F DB 18       		 IN A, (DEVKBI)	;
 76)   0781 57          		 LD D, A	;
 77)   0782 C9          		 RET	;
 79)   0783 F3          		@NEWBYTE: DI	;
 80)   0784 7A          		 LD A, D        ;BIT 7 HAS THE DATA	;BIT 7 HAS THE DATA
 81)   0785 CB 7F       		 BIT UKB_IN_DAT, A	;
 82)   0787 20 2D       		 JR NZ, ERROR0       ;ALWAYS START WITH 0	;ALWAYS START WITH 0
 83)   0789 06 08       		 LD B, 8	;
 84)   078B 48          		NXTBIT: LD C, B        ;SAVE B	;SAVE B
 85)   078C CD 5F 07    		 CALL WAITFORHIGH	;
 86)   078F D8          		 RET C	;
 87)   0790 CD 79 07    		 CALL WAITFORLOW	;
 88)   0793 D8          		 RET C	;
 89)   0794 CB 27       		 SLA A        ;BIT 7=DATA IS ON C FLAG	;BIT 7=DATA IS ON C FLAG
 90)   0796 CB 1B       		 RR E        ;CARRY GOES TO BIT 7 OF E	;CARRY GOES TO BIT 7 OF E
 91)   0798 41          		 LD B, C        ;RESTORE C	;RESTORE C
 92)   0799 10 F0       		 DJNZ NXTBIT	;
 93)   079B CD 5F 07    		 CALL WAITFORHIGH	;
 94)   079E D8          		 RET C	;
 95)   079F CD 79 07    		 CALL WAITFORLOW	;
 96)   07A2 D8          		 RET C	;
 98)   07A3 CD 5F 07    		 CALL WAITFORHIGH	;
 99)   07A6 D8          		 RET C	;
100)   07A7 CD 79 07    		 CALL WAITFORLOW	;
101)   07AA D8          		 RET C	;
102)   07AB CB 7F       		 BIT UKB_IN_DAT, A	;
103)   07AD 28 10       		 JR Z, ERROR1       ;ALWAYS ENDS WITH 1	;ALWAYS ENDS WITH 1
104)   07AF CD 5F 07    		 CALL WAITFORHIGH       ;WAIT FOR END OF TRANSMITION	;WAIT FOR END OF TRANSMITION
105)   07B2 D8          		 RET C	;
107)   07B3 7B          		 LD A, E	;
108)   07B4 FB          		 EI	;
109)   07B5 C9          		 RET	;
110)   07B6 21 CB 07    		ERROR0: LD HL, MSER4	;
111)   07B9 CD C7 06    		 CALL RS_TXT	;
112)   07BC 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
113)   07BD FB          		 EI	;
114)   07BE C9          		 RET	;
115)   07BF D5          		ERROR1: PUSH DE	;
116)   07C0 21 E0 07    		 LD HL, MSER5	;
117)   07C3 CD C7 06    		 CALL RS_TXT	;
118)   07C6 37          		 SCF        ;FLAGS AN ERROR OCCURED	;FLAGS AN ERROR OCCURED
119)   07C7 D1          		 POP DE	;
120)   07C8 7B          		 LD A, E        ;MAYBE IGNORE THIS	;MAYBE IGNORE THIS
121)   07C9 FB          		 EI	;
122)   07CA C9          		 RET	;
123)   07CB 4B 42 5F 45 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   07CF 52 52 3A 20 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   07D3 53 54 41 52 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   07D7 54 20 42 49 		MSER4: DEFM "KB_ERR: START BIT."	;
123)   07DB 54 2E       		MSER4: DEFM "KB_ERR: START BIT."	;
124)   07DD 0A 0D 00    		 DB 10,13,0	;
125)   07E0 4B 42 5F 45 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   07E4 52 52 3A 20 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   07E8 53 54 4F 50 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   07EC 20 42 49 54 		MSER5: DEFM "KB_ERR: STOP BIT."	;
125)   07F0 2E          		MSER5: DEFM "KB_ERR: STOP BIT."	;
126)   07F1 0A 0D 00    		 DB 10,13,0	;
128)   07F4 01 0A 00    		PS2KEY: LD BC, 10	;
129)   07F7 0B          		PS2AGN: DEC BC	;
130)   07F8 78          		 LD A, B	;
131)   07F9 B1          		 OR C	;
132)   07FA 28 0F       		 JR Z, PS2TIMEOUT	;
133)   07FC C5          		 PUSH BC	;
134)   07FD CD 49 07    		 CALL PS2ISK	;
135)   0800 B7          		 OR A	;
136)   0801 C1          		 POP BC	;
137)   0802 20 F3       		 JR NZ, PS2AGN       ;NO KEY YET	;NO KEY YET
138)   0804 CD 83 07    		READKEY: CALL NEWBYTE      ;D HAS THE LAST INPUT	;D HAS THE LAST INPUT
139)   0807 38 02       		 JR C, PS2TIMEOUT      ;ERROR SO INVALIDATE A	;ERROR SO INVALIDATE A
140)   0809 18 02       		 JR PS2EX	;
141)   080B AF          		PS2TIMEOUT: XOR A       ;0 CODE IS INVALID	;0 CODE IS INVALID
142)   080C FB          		 EI	;
143)   080D F5          		PS2EX: PUSH AF	;
144)   080E CD 37 07    		 CALL KEYBCLKOFF	;
145)   0811 F1          		 POP AF	;
146)   0812 C9          		 RET	;
149)   0813 CD 1B 08    		READCHAR: CALL GTKEY	;
150)   0816 C8          		 RET Z	;
151)   0817 CD DA 08    		 CALL PS2LOK	;
152)   081A C9          		 RET	;
155)   081B CD F4 07    		@GTKEY: CALL PS2KEY       ;GET A KEY FROM PS2	;GET A KEY FROM PS2
156)   081E FE E1       		 CP $E1         ;BREAK KEY	;BREAK KEY
157)   0820 CC 47 08    		 CALL Z, GTBRK	;
158)   0823 FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
159)   0825 CC 8B 08    		 CALL Z, GTREL	;
160)   0828 FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
161)   082A CC 51 08    		 CALL Z, GTEXT	;
164)   082D FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
165)   082F CC B6 08    		 CALL Z, SHFTOG	;
166)   0832 FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
167)   0834 CC B6 08    		 CALL Z, SHFTOG	;
168)   0837 FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
169)   0839 CC BF 08    		 CALL Z, CTRTOG	;
170)   083C FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
171)   083E CC C8 08    		 CALL Z, ALTTOG	;
172)   0841 FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
173)   0843 CC D1 08    		 CALL Z, CAPSTOG	;
176)   0846 C9          		 RET	;
178)   0847 CD F4 07    		GTBRK: CALL PS2KEY       ;$14 OR $F0	;$14 OR $F0
179)   084A FE F0       		 CP $F0	;
180)   084C C8          		 RET Z	;
181)   084D CD F4 07    		 CALL PS2KEY       ;$77	;$77
182)   0850 C9          		 RET	;
184)   0851 CD F4 07    		GTEXT: CALL PS2KEY       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
185)   0854 FE 6B       		 CP $6B         ;LEFT	;LEFT
186)   0856 C8          		 RET Z	;
187)   0857 FE 72       		 CP $72        ;DOWN	;DOWN
188)   0859 C8          		 RET Z	;
189)   085A FE 74       		 CP $74        ;RIGHT	;RIGHT
190)   085C C8          		 RET Z	;
191)   085D FE 75       		 CP $75        ;UP	;UP
192)   085F C8          		 RET Z	;
193)   0860 FE 70       		 CP $70        ;INSERT	;INSERT
194)   0862 C8          		 RET Z	;
195)   0863 FE 6C       		 CP $6C        ;HOME	;HOME
196)   0865 C8          		 RET Z	;
197)   0866 FE 7D       		 CP $7D        ;PG UP	;PG UP
198)   0868 C8          		 RET Z	;
199)   0869 FE 7A       		 CP $7A        ;PG DN	;PG DN
200)   086B C8          		 RET Z	;
201)   086C FE 69       		 CP $69        ;END	;END
202)   086E C8          		 RET Z	;
203)   086F FE 71       		 CP $71        ;DEL	;DEL
204)   0871 C8          		 RET Z	;
205)   0872 FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
206)   0874 C8          		 RET Z	;
207)   0875 FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
208)   0877 C8          		 RET Z	;
209)   0878 FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
210)   087A C8          		 RET Z	;
211)   087B FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
212)   087D C8          		 RET Z	;
213)   087E FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
214)   0880 C8          		 RET Z	;
215)   0881 FE F0       		 CP $F0	;
216)   0883 C2 89 08    		 JP NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
217)   0886 CD F4 07    		 CALL PS2KEY       ; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT	; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT
219)   0889 AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
220)   088A C9          		 RET	;
223)   088B CD F4 07    		GTREL: CALL PS2KEY       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
224)   088E FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
225)   0890 CC A4 08    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
226)   0893 FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
227)   0895 CC AA 08    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
228)   0898 FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
229)   089A CC B0 08    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
230)   089D FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
231)   089F CC A4 08    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
232)   08A2 AF          		 XOR A         ; NO KEY	; NO KEY
233)   08A3 C9          		 RET	;
235)   08A4 21 9E FE    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
236)   08A7 CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
237)   08A9 C9          		 RET	;
239)   08AA 21 9E FE    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
240)   08AD CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
241)   08AF C9          		 RET	;
243)   08B0 21 9E FE    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
244)   08B3 CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
245)   08B5 C9          		 RET	;
247)   08B6 21 9E FE    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
248)   08B9 3E 40       		 LD A, $40       ; MASK	; MASK
249)   08BB AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
250)   08BC 77          		 LD (HL), A       ; SAVE	; SAVE
251)   08BD AF          		 XOR A         ; NO KEY	; NO KEY
252)   08BE C9          		 RET	;
254)   08BF 21 9E FE    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
255)   08C2 3E 80       		 LD A, $80       ; MASK	; MASK
256)   08C4 AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
257)   08C5 77          		 LD (HL), A       ; SAVE	; SAVE
258)   08C6 AF          		 XOR A         ; NO KEY	; NO KEY
259)   08C7 C9          		 RET	;
261)   08C8 21 9E FE    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
262)   08CB 3E 20       		 LD A, $20	;
263)   08CD AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
264)   08CE 77          		 LD (HL), A       ; SAVE	; SAVE
265)   08CF AF          		 XOR A         ; NO KEY	; NO KEY
266)   08D0 C9          		 RET	;
268)   08D1 21 9E FE    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
269)   08D4 3E 10       		 LD A, $10	;
270)   08D6 AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
271)   08D7 77          		 LD (HL), A       ; SAVE	; SAVE
272)   08D8 AF          		 XOR A         ; NO KEY	; NO KEY
273)   08D9 C9          		 RET	;
276)   08DA 21 9E FE    		@PS2LOK: LD HL, KEYCTR	;
277)   08DD 47          		 LD B, A        ; SAVE A	; SAVE A
278)   08DE 7E          		 LD A, (HL)       ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
279)   08DF 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
280)   08E0 CB 1F       		 RR A	;
281)   08E2 CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
282)   08E4 A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
283)   08E5 CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED	;CHECK IF BIT 4 IS 0 = UNSHIFTED
284)   08E7 78          		 LD A, B        ;RESTORE A	;RESTORE A
289)   08E8 21 F6 08    		 LD HL, PS2TAB1       ;UNSHIFTED	;UNSHIFTED
290)   08EB 28 03       		 JR Z, PLK1	;
291)   08ED 21 A0 09    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
292)   08F0 06 00       		PLK1: LD B, 0	;
293)   08F2 4F          		 LD C, A	;
294)   08F3 09          		 ADD HL, BC	;
295)   08F4 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
296)   08F5 C9          		 RET	;
300)   08F6 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
300)   08FA 00 00 00 00 		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
300)   08FE 00 00       		PS2TAB1: DB 0,0,0,0,0,0,0,0,0,0	;
301)   0900 00 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0904 60 00 00 00 		 DB 0,0,0,0,'`',0,0,0,0,0	;
301)   0908 00 00       		 DB 0,0,0,0,'`',0,0,0,0,0	;
302)   090A 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   090E 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
302)   0912 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
303)   0914 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
303)   0918 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
303)   091C 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
304)   091E 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0922 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
304)   0926 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
305)   0928 62 68 67 6D 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   092C 36 00 00 2C 		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
305)   0930 6D 6A       		 DB 'b','h','g','m','6',0,0,44,'m','j'     ;50-59	;50-59
306)   0932 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
306)   0936 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
306)   093A 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
307)   093C 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
307)   0940 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
307)   0944 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
308)   0946 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
308)   094A 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
308)   094E 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
309)   0950 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
309)   0954 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
309)   0958 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
310)   095A 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
310)   095E 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
310)   0962 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
311)   0964 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
311)   0968 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
311)   096C 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
312)   096E 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
312)   0972 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
312)   0976 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
313)   0978 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
313)   097C 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
313)   0980 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
314)   0982 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
314)   0986 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
314)   098A 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
315)   098C 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
315)   0990 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
315)   0994 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
316)   0996 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
316)   099A 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
316)   099E 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
319)   09A0 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
319)   09A4 00 00 00 00 		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
319)   09A8 00 00       		PS2TAB2: DB 0,0,0,0,0,0,0,0,0,0	;
320)   09AA 00 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
320)   09AE 7E 00 00 00 		 DB 0,0,0,0,'~',0,0,0,0,0	;
320)   09B2 00 00       		 DB 0,0,0,0,'~',0,0,0,0,0	;
321)   09B4 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   09B8 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
321)   09BC 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
322)   09BE 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
322)   09C2 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
322)   09C6 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
323)   09C8 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   09CC 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
323)   09D0 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
324)   09D2 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
324)   09D6 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
324)   09DA 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
325)   09DC 55 26 2A 00 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
325)   09E0 00 3C 4B 49 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
325)   09E4 4F 29       		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
326)   09E6 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
326)   09EA 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
326)   09EE 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
327)   09F0 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
327)   09F4 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
327)   09F8 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
328)   09FA 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
328)   09FE 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
328)   0A02 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
329)   0A04 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
329)   0A08 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
329)   0A0C 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
330)   0A0E 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
330)   0A12 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
330)   0A16 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
331)   0A18 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
331)   0A1C 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
331)   0A20 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
332)   0A22 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
332)   0A26 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
332)   0A2A 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;130-139	;130-139
333)   0A2C 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
333)   0A30 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
333)   0A34 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
334)   0A36 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
334)   0A3A 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
334)   0A3E 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
335)   0A40 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
335)   0A44 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
335)   0A48 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 46)   0A4A 3E 03       		STRG_INIT: LD A, 3       ;38400 BPS	;38400 BPS
 47)   0A4C CD D6 0B    		 CALL STOR_INI	;
 48)   0A4F C9          		 RET	;
 51)   0A50 21 E1 FE    		NEWCMD: LD HL, STRGCMD	;
 52)   0A53 77          		 LD (HL), A	;
 53)   0A54 23          		 INC HL	;
 54)   0A55 E5          		 PUSH HL	;
 55)   0A56 AF          		 XOR A	;
 56)   0A57 06 03       		 LD B, 3	;
 57)   0A59 77          		CCAGN: LD (HL), A	;
 58)   0A5A 23          		 INC HL	;
 59)   0A5B 10 FC       		 DJNZ CCAGN	;
 60)   0A5D E1          		 POP HL         ;HL POINTS ON FID IN COMMAND	;HL POINTS ON FID IN COMMAND
 61)   0A5E C9          		 RET	;
 64)   0A5F CD 37 0C    		SENDCMD: CALL FLUSHREC	;
 65)   0A62 21 E1 FE    		 LD HL, STRGCMD	;
 66)   0A65 06 04       		 LD B, 4	;
 67)   0A67 7E          		NXTBT: LD A, (HL)	;
 68)   0A68 CD 06 0C    		 CALL STOR_TX	;
 69)   0A6B 23          		 INC HL	;
 70)   0A6C 10 F9       		 DJNZ NXTBT	;
 71)   0A6E C9          		 RET	;
 73)   0A6F 3E 01       		STRG_OPENCRD: LD A, OPENCARD	;
 74)   0A71 CD 50 0A    		 CALL NEWCMD	;
 75)   0A74 CD 5F 0A    		 CALL SENDCMD	;
 76)   0A77 CD 32 29    		 CALL DEL2	;
 77)   0A7A CD 19 0C    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
 78)   0A7D FE C9       		 CP FCMDOKTST	;
 79)   0A7F 3F          		 CCF	;
 80)   0A80 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
 85)   0A81 F5          		STRG_GETEOF: PUSH AF	;
 86)   0A82 3E 0D       		 LD A, ENDOFFILE	;
 87)   0A84 CD 50 0A    		 CALL NEWCMD	;
 88)   0A87 F1          		 POP AF	;
 89)   0A88 77          		 LD (HL), A       ;FID	;FID
 90)   0A89 CD 5F 0A    		 CALL SENDCMD	;
 92)   0A8C CD 19 0C    		 CALL STOR_RX       ;GET EOF	;GET EOF
 93)   0A8F FE C9       		 CP FCMDOKTST	;
 94)   0A91 3F          		 CCF	;
 95)   0A92 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
100)   0A93 F5          		STRG_GETSIZE: PUSH AF	;
101)   0A94 3E 0C       		 LD A, FILESIZE	;
102)   0A96 18 03       		 JR GT2BYTES	;
107)   0A98 F5          		STRG_GETPOS: PUSH AF	;
108)   0A99 3E 09       		 LD A, POSITIONG	;
109)   0A9B CD 50 0A    		GT2BYTES: CALL NEWCMD	;
110)   0A9E F1          		 POP AF	;
111)   0A9F 77          		 LD (HL), A       ;FID	;FID
112)   0AA0 CD 5F 0A    		 CALL SENDCMD	;
114)   0AA3 CD 19 0C    		 CALL STOR_RX       ;GET POS/SIZE HIGH BYTE	;GET POS/SIZE HIGH BYTE
115)   0AA6 67          		 LD H, A	;
116)   0AA7 CD 19 0C    		 CALL STOR_RX       ;GET POS/SIZE LOW BYTE	;GET POS/SIZE LOW BYTE
117)   0AAA 6F          		 LD L, A	;
118)   0AAB CD 19 0C    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
119)   0AAE FE C9       		 CP FCMDOKTST	;
120)   0AB0 3F          		 CCF	;
121)   0AB1 C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
127)   0AB2 EB          		STRG_SETPOS: EX DE, HL	;
128)   0AB3 F5          		 PUSH AF	;
129)   0AB4 3E 08       		 LD A, POSITIONS	;
130)   0AB6 CD 50 0A    		 CALL NEWCMD	;
131)   0AB9 F1          		 POP AF	;
132)   0ABA 77          		 LD (HL), A       ;FID	;FID
133)   0ABB 23          		 INC HL	;
134)   0ABC 72          		 LD (HL), D       ;NEW POS ON DE	;NEW POS ON DE
135)   0ABD 23          		 INC HL	;
136)   0ABE 73          		 LD (HL), E	;
137)   0ABF CD 5F 0A    		 CALL SENDCMD	;
138)   0AC2 CD 32 29    		 CALL DEL2	;
139)   0AC5 CD 19 0C    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
140)   0AC8 FE C9       		 CP FCMDOKTST	;
141)   0ACA 3F          		 CCF	;
142)   0ACB C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
147)   0ACC 3E 0A       		STRG_DIRLIST: LD A, LISTDIR	;
148)   0ACE CD 50 0A    		 CALL NEWCMD	;
149)   0AD1 CD 5F 0A    		 CALL SENDCMD	;
150)   0AD4 CD 32 29    		 CALL DEL2	;
152)   0AD7 11 B9 FE    		 LD DE, STRGBUFF	;
153)   0ADA CD 19 0C    		NXTCHR: CALL STOR_RX	;
154)   0ADD FE FF       		 CP 255	;
155)   0ADF 28 05       		 JR Z, DIROUT	;
157)   0AE1 CD 5F 03    		 CALL OS_PRINTCHAR	;
158)   0AE4 18 F4       		 JR NXTCHR	;
159)   0AE6 CD 32 29    		DIROUT: CALL DEL2	;
160)   0AE9 CD 19 0C    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
161)   0AEC FE C9       		 CP FCMDOKTST	;
162)   0AEE 3F          		 CCF	;
163)   0AEF C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
167)   0AF0 CD 0F 0C    		SENDFNAME: CALL STOR_TXT      ;SEND FILENAME	;SEND FILENAME
168)   0AF3 AF          		 XOR A	;
169)   0AF4 CD 06 0C    		 CALL STOR_TX	;
170)   0AF7 C9          		 RET	;
173)   0AF8 3E 0B       		STRG_DIRCHG: LD A, CHANGEDIR	;
174)   0AFA CD 50 0A    		 CALL NEWCMD	;
175)   0AFD CD 5F 0A    		 CALL SENDCMD	;
176)   0B00 21 B9 FE    		 LD HL, STRGBUFF	;
177)   0B03 CD F0 0A    		 CALL SENDFNAME	;
178)   0B06 CD 32 29    		 CALL DEL2	;
179)   0B09 CD 19 0C    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
180)   0B0C FE C9       		 CP FCMDOKTST	;
181)   0B0E 3F          		 CCF	;
182)   0B0F C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
186)   0B10 F5          		STRG_OPNFILE: PUSH AF	;
187)   0B11 3E 02       		 LD A, OPENFILE	;
188)   0B13 CD 50 0A    		 CALL NEWCMD	;
189)   0B16 F1          		 POP AF	;
190)   0B17 77          		 LD (HL), A       ;FID	;FID
191)   0B18 CD 5F 0A    		 CALL SENDCMD	;
192)   0B1B 21 B9 FE    		 LD HL, STRGBUFF	;
193)   0B1E CD F0 0A    		 CALL SENDFNAME	;
194)   0B21 CD 32 29    		 CALL DEL2	;
195)   0B24 CD 19 0C    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
197)   0B27 32 E5 FE    		 LD (FID), A	;
198)   0B2A FE C9       		 CP FCMDOKTST	;
199)   0B2C 3F          		 CCF	;
200)   0B2D C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
203)   0B2E F5          		STRG_CLSFILE: PUSH AF	;
204)   0B2F 3E 03       		 LD A, CLOSEFILE	;
205)   0B31 CD 50 0A    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
206)   0B34 F1          		 POP AF	;
207)   0B35 77          		 LD (HL), A       ;FID	;FID
208)   0B36 CD 5F 0A    		 CALL SENDCMD	;
209)   0B39 CD 19 0C    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
210)   0B3C FE C9       		 CP FCMDOKTST	;
211)   0B3E 3F          		 CCF	;
212)   0B3F C9          		 RET        ; IF CARRY ERROR OCCURED	; IF CARRY ERROR OCCURED
218)   0B40 F5          		STRG_BLKWRITE: PUSH AF	;
219)   0B41 3E 07       		 LD A, WRITEBLOCK	;
220)   0B43 CD 50 0A    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
221)   0B46 F1          		 POP AF	;
222)   0B47 77          		 LD (HL), A       ;FID	;FID
223)   0B48 23          		 INC HL	;
225)   0B49 78          		 LD A, B        ;BYTES HI	;BYTES HI
226)   0B4A 77          		 LD (HL), A	;
227)   0B4B 23          		 INC HL	;
228)   0B4C 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
229)   0B4D 77          		 LD (HL), A	;
230)   0B4E CD 5F 0A    		 CALL SENDCMD        ;SEND BLOCKWRITE COMMAND BC BYTES	;SEND BLOCKWRITE COMMAND BC BYTES
231)   0B51 EB          		 EX DE, HL	;
232)   0B52 7E          		BWNXCH: LD A, (HL)	;
233)   0B53 CD 06 0C    		 CALL STOR_TX	;
234)   0B56 23          		 INC HL	;
235)   0B57 0B          		 DEC BC	;
236)   0B58 78          		 LD A, B	;
237)   0B59 B1          		 OR C	;
238)   0B5A 20 F6       		 JR NZ, BWNXCH	;
239)   0B5C CD 19 0C    		 CALL STOR_RX        ;GET RESULT	;GET RESULT
240)   0B5F FE C9       		 CP FCMDOKTST	;
241)   0B61 3F          		 CCF	;
242)   0B62 C9          		 RET	;
250)   0B63 F5          		STRG_BLKREAD: PUSH AF	;
251)   0B64 3E 06       		 LD A, READBLOCK	;
252)   0B66 CD 50 0A    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
253)   0B69 F1          		 POP AF	;
254)   0B6A 77          		 LD (HL), A       ;FID	;FID
255)   0B6B 23          		 INC HL	;
256)   0B6C 78          		 LD A, B        ;BYTES HI	;BYTES HI
257)   0B6D 77          		 LD (HL), A	;
258)   0B6E 23          		 INC HL	;
259)   0B6F 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
260)   0B70 77          		 LD (HL), A	;
261)   0B71 CD 5F 0A    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
262)   0B74 CD 32 29    		 CALL DEL2	;
263)   0B77 CD 19 0C    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
264)   0B7A 47          		 LD B, A	;
265)   0B7B CD 19 0C    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
266)   0B7E 4F          		 LD C, A	;
267)   0B7F 78          		 LD A, B	;
268)   0B80 B1          		 OR C	;
269)   0B81 28 13       		 JR Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
271)   0B83 C5          		 PUSH BC        ;SAVE BYTES TO RECEIVE	;SAVE BYTES TO RECEIVE
272)   0B84 CD 19 0C    		OFNXCH: CALL STOR_RX	;
273)   0B87 12          		 LD (DE), A	;
274)   0B88 13          		 INC DE	;
275)   0B89 0B          		 DEC BC	;
276)   0B8A 78          		 LD A, B	;
277)   0B8B B1          		 OR C	;
278)   0B8C 20 F6       		 JR NZ, OFNXCH	;
279)   0B8E CD 19 0C    		OFEXIT: CALL STOR_RX        ;GET RESULT	;GET RESULT
280)   0B91 C1          		 POP BC         ;TOTAL BYTES RECEIVED	;TOTAL BYTES RECEIVED
281)   0B92 FE C9       		 CP FCMDOKTST	;
282)   0B94 3F          		 CCF	;
283)   0B95 C9          		 RET	;
285)   0B96 18 F6       		 JR OFEXIT	;
289)   0B98 F5          		STRG_TPFILE: PUSH AF	;
290)   0B99 3E 06       		 LD A, READBLOCK	;
291)   0B9B CD 50 0A    		 CALL NEWCMD       ;HL POINTS ON FID IN COMMAND ON RETURN	;HL POINTS ON FID IN COMMAND ON RETURN
292)   0B9E F1          		 POP AF	;
293)   0B9F 77          		 LD (HL), A       ;FID	;FID
294)   0BA0 23          		 INC HL	;
295)   0BA1 78          		 LD A, B        ;BYTES HI	;BYTES HI
296)   0BA2 77          		 LD (HL), A	;
297)   0BA3 23          		 INC HL	;
298)   0BA4 79          		 LD A, C        ;BYTES LOW	;BYTES LOW
299)   0BA5 77          		 LD (HL), A	;
300)   0BA6 CD 5F 0A    		 CALL SENDCMD        ;SEND BLOCKREAD COMMAND 0=ALL BYTES	;SEND BLOCKREAD COMMAND 0=ALL BYTES
301)   0BA9 CD 32 29    		 CALL DEL2	;
302)   0BAC CD 19 0C    		 CALL STOR_RX        ;GET BYTES TO BE SEND HI BYTE	;GET BYTES TO BE SEND HI BYTE
303)   0BAF 47          		 LD B, A	;
304)   0BB0 CD 19 0C    		 CALL STOR_RX        ;GET BYTES TO BE SEND LOW BYTE	;GET BYTES TO BE SEND LOW BYTE
305)   0BB3 4F          		 LD C, A	;
306)   0BB4 78          		 LD A, B	;
307)   0BB5 B1          		 OR C	;
308)   0BB6 CA 96 0B    		 JP Z, EREXIT        ;SOME ERROR OCCURED	;SOME ERROR OCCURED
310)   0BB9 3E 0D       		 LD A, 13	;
311)   0BBB C5          		 PUSH BC	;
312)   0BBC CD 5F 03    		 CALL OS_PRINTCHAR	;
313)   0BBF C1          		 POP BC	;
314)   0BC0 CD 19 0C    		TFOFNXCH: CALL STOR_RX       ;GET THE CHAR	;GET THE CHAR
315)   0BC3 C5          		 PUSH BC	;
316)   0BC4 CD 5F 03    		 CALL OS_PRINTCHAR       ;PRINT TO SCREEN	;PRINT TO SCREEN
317)   0BC7 C1          		 POP BC	;
318)   0BC8 0B          		 DEC BC	;
319)   0BC9 78          		 LD A, B	;
320)   0BCA B1          		 OR C	;
321)   0BCB 20 F3       		 JR NZ, TFOFNXCH	;
322)   0BCD CD 19 0C    		TFOFEXIT: CALL STOR_RX       ;GET RESULT	;GET RESULT
323)   0BD0 FE C9       		 CP FCMDOKTST	;
324)   0BD2 3F          		 CCF	;
325)   0BD3 C9          		 RET         ;C SET IF ERROR	;C SET IF ERROR
328)   0BD4 18 F7       		 JR TFOFEXIT	;
350)   0BD6 	            		 RBR EQU DEVSTOR+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
351)   0BD6 	            		 THR EQU DEVSTOR+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
352)   0BD6 	            		 IER EQU DEVSTOR+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
357)   0BD6 	            		 IIR EQU DEVSTOR+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
362)   0BD6 	            		 FCR EQU DEVSTOR+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
370)   0BD6 	            		 LCR EQU DEVSTOR+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
378)   0BD6 	            		 MCR EQU DEVSTOR+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
379)   0BD6 	            		 LSR EQU DEVSTOR+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
388)   0BD6 	            		 MSR EQU DEVSTOR+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
389)   0BD6 	            		 SCR EQU DEVSTOR+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
390)   0BD6 	            		 DLL EQU DEVSTOR+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
391)   0BD6 	            		 DLM EQU DEVSTOR+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
395)   0BD6 F5          		STOR_INI: PUSH AF	;
396)   0BD7 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
397)   0BD9 D3 33       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
405)   0BDB F1          		 POP AF	;
406)   0BDC D3 30       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
407)   0BDE 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
408)   0BE0 D3 31       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
409)   0BE2 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
410)   0BE4 D3 33       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
412)   0BE6 3E 00       		 LD A, 0	;
413)   0BE8 D3 32       		 OUT (FCR), A        ;//was commented	;//was commented
414)   0BEA 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
415)   0BEC D3 31       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
416)   0BEE AF          		 XOR A         ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
417)   0BEF D3 34       		 OUT (MCR), A	;
418)   0BF1 C9          		 RET	;
424)   0BF2 F5          		STORTXRD: PUSH AF	;
425)   0BF3 DB 35       		STORTXLP: IN A, (LSR)       ; fetch the control register	; fetch the control register
426)   0BF5 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
427)   0BF7 28 FA       		 JR Z, STORTXLP	;
428)   0BF9 F1          		 POP AF	;
429)   0BFA C9          		 RET	;
432)   0BFB F5          		WAITCTSLOW: PUSH AF	;
433)   0BFC DB 36       		TSTAGN: IN A, (MSR)	;
434)   0BFE CB 67       		 BIT 4, A        ;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1	;COMPLEMENT OF CTS SO IF CTS=0 THIS IS 1
435)   0C00 20 02       		 JR NZ, WCLEX	;
436)   0C02 18 F8       		 JR TSTAGN	;
437)   0C04 F1          		WCLEX: POP AF	;
438)   0C05 C9          		 RET	;
444)   0C06 CD FB 0B    		 CALL WAITCTSLOW	;
449)   0C09 CD F2 0B    		 CALL STORTXRD	;
454)   0C0C D3 30       		 OUT (THR), A	;
455)   0C0E C9          		 RET	;
458)   0C0F 7E          		STOR_TXT: LD A, (HL)	;
459)   0C10 23          		 INC HL	;
460)   0C11 FE 00       		 CP 0	;
461)   0C13 C8          		 RET Z	;
462)   0C14 CD 06 0C    		 CALL STOR_TX	;
463)   0C17 18 F6       		 JR STOR_TXT	;
470)   0C19 F3          		STOR_RX: DI	;
471)   0C1A 3E 02       		 LD A, 2        ;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0	;BIT 1     ;ready to receive SIGNAL RTS 1 MEANS ARDUINO CTS=0
472)   0C1C D3 34       		 OUT (MCR), A	;
473)   0C1E CD 42 0C    		 CALL STORRXRD	;
474)   0C21 AF          		STOR_GTCH: XOR A        ;NOT ready to receive SIGNAL RTS 0	;NOT ready to receive SIGNAL RTS 0
475)   0C22 D3 34       		 OUT (MCR), A	;
476)   0C24 DB 30       		 IN A, (RBR)	;
477)   0C26 FB          		 EI	;
478)   0C27 C9          		 RET	;
480)   0C28 3E 02       		STOR_RXNW: LD A, 2       ;ready to receive SIGNAL RTS 1	;ready to receive SIGNAL RTS 1
481)   0C2A D3 34       		 OUT (MCR), A	;
482)   0C2C DB 35       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
483)   0C2E CB 47       		 BIT 0, A	;
484)   0C30 28 03       		 JR Z, STOR_NOCHAR	;
485)   0C32 F3          		 DI	;
486)   0C33 18 EC       		 JR STOR_GTCH	;
487)   0C35 AF          		STOR_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
488)   0C36 C9          		 RET	;
490)   0C37 06 0A       		FLUSHREC: LD B, 10	;
491)   0C39 CD 28 0C    		FRAGN: CALL STOR_RXNW	;
492)   0C3C 10 FB       		 DJNZ FRAGN	;
493)   0C3E AF          		 XOR A	;
494)   0C3F D3 34       		 OUT (MCR), A	;
495)   0C41 C9          		 RET	;
501)   0C42 F3          		STORRXRD: DI	;
502)   0C43 F5          		 PUSH AF	;
503)   0C44 DB 35       		STORRXLP: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
504)   0C46 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
505)   0C48 28 FA       		 JR Z, STORRXLP	;
506)   0C4A F1          		 POP AF	;
507)   0C4B FB          		 EI	;
508)   0C4C C9          		 RET	;
512)   0C4D DB 35       		STOR_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
513)   0C4F CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
514)   0C51 C9          		 RET	;
  8)   0C52 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  9)   0C52 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
 10)   0C52 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 11)   0C52 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 12)   0C52 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 57)   0C52 C5          		I2C_RDSTAT_WT: PUSH BC	;
 58)   0C53 01 00 20    		 LD BC, $2000	;
 59)   0C56 DB 4B       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 60)   0C58 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 61)   0C5A 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 62)   0C5C 0B          		 DEC BC	;
 63)   0C5D 78          		 LD A, B	;
 64)   0C5E B1          		 OR C	;
 65)   0C5F 20 F5       		 JR NZ, I2CRWT_AGN	;
 66)   0C61 C1          		I2CRWT_OK: POP BC	;
 67)   0C62 DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 68)   0C64 C9          		 RET	;
 70)   0C65 DB 4B       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 71)   0C67 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 72)   0C69 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 73)   0C6B C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 74)   0C6C DB 48       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 75)   0C6E C9          		 RET	;
 78)   0C6F 3E 01       		I2C_INIT: LD A, I2CADR	;
 79)   0C71 D3 48       		 OUT (DI2C_INDPTR), A	;
 80)   0C73 3E E0       		 LD A, $E0	;
 81)   0C75 D3 4A       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 83)   0C77 3E 40       		 LD A, $40        ;INIT	;INIT
 84)   0C79 D3 4B       		 OUT (DI2C_CON), A      ;	;
 85)   0C7B 06 FA       		 LD B, 250	;
 86)   0C7D CD 1F 29    		 CALL DELAYMICRO	;
 87)   0C80 06 FA       		 LD B, 250	;
 88)   0C82 CD 1F 29    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 93)   0C85 3E 06       		 LD A, I2CMODE	;
 94)   0C87 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 95)   0C89 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 96)   0C8B D3 4A       		 OUT (DI2C_INDIR), A	;
 97)   0C8D 3E 02       		 LD A, I2CSCLL	;
 98)   0C8F D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 99)   0C91 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
100)   0C93 D3 4A       		 OUT (DI2C_INDIR), A	;
101)   0C95 3E 03       		 LD A, I2CSCLH	;
102)   0C97 D3 48       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
103)   0C99 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
104)   0C9B D3 4A       		 OUT (DI2C_INDIR), A	;
106)   0C9D C9          		 RET	;
113)   0C9E 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
114)   0CA0 D3 4B       		 OUT (DI2C_CON), A	;
115)   0CA2 CD 52 0C    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
116)   0CA5 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
117)   0CA6 FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
118)   0CA8 28 21       		 JR Z, WRB_S1	;
119)   0CAA FE 10       		 CP MASTER_RESTART_TXed	;
120)   0CAC 28 1D       		 JR Z, WRB_S1	;
121)   0CAE FE 28       		 CP MASTER_DATA_W_ACK	;
122)   0CB0 28 26       		 JR Z, WRB_S2	;
123)   0CB2 FE 18       		 CP MASTER_SLA_W_ACK	;
124)   0CB4 28 23       		 JR Z, WRB_S3	;
125)   0CB6 FE 20       		 CP MASTER_SLA_W_NAK	;
126)   0CB8 28 2D       		 JR Z, WRB_EXIT	;
127)   0CBA FE 30       		 CP MASTER_DATA_W_NAK	;
128)   0CBC 28 29       		 JR Z, WRB_EXIT	;
129)   0CBE FE 38       		 CP MASTER_ARB_LOST	;
130)   0CC0 C8          		 RET Z	;
131)   0CC1 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
132)   0CC3 C8          		 RET Z	;
133)   0CC4 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
134)   0CC6 C8          		 RET Z	;
135)   0CC7 FE D8       		 CP SLAVE_GENERALCALL_AL	;
136)   0CC9 C8          		 RET Z	;
137)   0CCA C9          		 RET	;
139)   0CCB 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
140)   0CCC CB 27       		 SLA A	;
141)   0CCE E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
142)   0CD0 D3 49       		 OUT (DI2C_DAT), A	;
143)   0CD2 3E 40       		 LD A, $40	;
144)   0CD4 D3 4B       		 OUT (DI2C_CON), A	;
145)   0CD6 18 CA       		 JR WRB_LP1	;
146)   0CD8 0B          		WRB_S2: DEC BC	;
147)   0CD9 78          		WRB_S3: LD A, B	;
148)   0CDA B1          		 OR C	;
149)   0CDB 28 0A       		 JR Z, WRB_EXIT	;
150)   0CDD 7E          		 LD A, (HL)	;
151)   0CDE 23          		 INC HL	;
152)   0CDF D3 49       		 OUT (DI2C_DAT), A	;
153)   0CE1 3E 40       		 LD A, $40	;
154)   0CE3 D3 4B       		 OUT (DI2C_CON), A	;
155)   0CE5 18 BB       		 JR WRB_LP1	;
157)   0CE7 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
158)   0CE9 D3 4B       		 OUT (DI2C_CON), A	;
159)   0CEB 78          		 LD A, B	;
160)   0CEC B1          		 OR C	;
161)   0CED C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
167)   0CEE 78          		I2C_RD_BYTE: LD A, B	;
168)   0CEF B1          		 OR C	;
169)   0CF0 C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
170)   0CF1 3E 60       		 LD A, $60	;
171)   0CF3 D3 4B       		 OUT (DI2C_CON), A	;
172)   0CF5 CD 52 0C    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
173)   0CF8 1E 00       		 LD E, 0	;
174)   0CFA FE 08       		 CP MASTER_START_TXed	;
175)   0CFC 28 1F       		 JR Z, RDB_S1	;
177)   0CFE 28 1D       		 JR Z, RDB_S1	;
178)   0D00 FE 58       		 CP MASTER_DATA_R_NAK	;
179)   0D02 28 26       		 JR Z, RDB_S2	;
180)   0D04 FE 50       		 CP MASTER_DATA_R_ACK	;
181)   0D06 28 24       		 JR Z, RDB_S3	;
182)   0D08 FE 40       		 CP MASTER_SLA_R_ACK	;
183)   0D0A 28 25       		 JR Z, RDB_S4	;
184)   0D0C FE 48       		 CP MASTER_SLA_R_NAK	;
185)   0D0E 28 38       		 JR Z, RDB_EXIT	;
186)   0D10 FE 38       		 CP MASTER_ARB_LOST	;
187)   0D12 C8          		 RET Z	;
188)   0D13 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
189)   0D15 C8          		 RET Z	;
190)   0D16 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
191)   0D18 C8          		 RET Z	;
192)   0D19 FE D8       		 CP SLAVE_GENERALCALL_AL	;
193)   0D1B C8          		 RET Z	;
194)   0D1C C9          		 RET	;
197)   0D1D 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
198)   0D1E CB 27       		 SLA A	;
199)   0D20 F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
200)   0D22 D3 49       		 OUT (DI2C_DAT), A	;
201)   0D24 3E 40       		 LD A, $40	;
202)   0D26 D3 4B       		 OUT (DI2C_CON), A	;
203)   0D28 18 CB       		 JR RDB_LP1	;
204)   0D2A 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
205)   0D2C DB 49       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
206)   0D2E 77          		 LD (HL), A	;
207)   0D2F 23          		 INC HL	;
208)   0D30 0B          		 DEC BC	;
209)   0D31 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
210)   0D32 B1          		 OR C	;
211)   0D33 28 13       		 JR Z, RDB_EXIT	;
212)   0D35 7B          		 LD A, E	;
213)   0D36 FE 01       		 CP 1	;
214)   0D38 28 0E       		 JR Z, RDB_EXIT	;
215)   0D3A 78          		 LD A, B	;
216)   0D3B 81          		 ADD C	;
217)   0D3C FE 01       		 CP 1	;
218)   0D3E 3E 40       		 LD A, $40	;
219)   0D40 28 02       		 JR Z, RDB_NXT1	;
220)   0D42 3E C0       		 LD A, $C0	;
221)   0D44 D3 4B       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
222)   0D46 18 AD       		 JR RDB_LP1	;
224)   0D48 3E 50       		RDB_EXIT: LD A, $50	;
225)   0D4A D3 4B       		 OUT (DI2C_CON), A	;
226)   0D4C 78          		 LD A, B	;
227)   0D4D B1          		 OR C	;
228)   0D4E C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
 26)   0D4F 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 26)   0D53 61 79       		 SUN DEFM  "Sunday"	;
 27)   0D55 00          		 DB 0	;
 28)   0D56 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 28)   0D5A 61 79       		 MON DEFM  "Monday"	;
 29)   0D5C 00          		 DB 0	;
 30)   0D5D 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 30)   0D61 64 61 79    		 TUE DEFM  "Tuesday"	;
 31)   0D64 00          		 DB 0	;
 32)   0D65 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 32)   0D69 65 73 64 61 		 WED DEFM  "Wednesday"	;
 32)   0D6D 79          		 WED DEFM  "Wednesday"	;
 33)   0D6E 00          		 DB 0	;
 34)   0D6F 54 68 75 72 		 THU DEFM  "Thursday"	;
 34)   0D73 73 64 61 79 		 THU DEFM  "Thursday"	;
 35)   0D77 00          		 DB 0	;
 36)   0D78 46 72 69 64 		 FRI DEFM  "Friday"	;
 36)   0D7C 61 79       		 FRI DEFM  "Friday"	;
 37)   0D7E 00          		 DB 0	;
 38)   0D7F 53 61 74 75 		 SAT DEFM  "Saturday"	;
 38)   0D83 72 64 61 79 		 SAT DEFM  "Saturday"	;
 39)   0D87 00          		 DB 0	;
 41)   0D88 4F 0D       		 DAYS DEFW SUN	;
 42)   0D8A 56 0D       		 DEFW MON	;
 43)   0D8C 5D 0D       		 DEFW TUE	;
 44)   0D8E 65 0D       		 DEFW WED	;
 45)   0D90 6F 0D       		 DEFW THU	;
 46)   0D92 78 0D       		 DEFW FRI	;
 47)   0D94 7F 0D       		 DEFW SAT	;
 49)   0D96 45 52 52 4F 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D9A 52 20 4F 4E 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0D9E 20 52 45 43 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0DA2 45 49 56 49 		 MESERR DEFM "ERROR ON RECEIVING"	;
 49)   0DA6 4E 47       		 MESERR DEFM "ERROR ON RECEIVING"	;
 50)   0DA8 0A 0D 00    		 DEFB 10,13,0	;
 52)   0DAB 45 52 52 4F 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0DAF 52 20 4F 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0DB3 20 53 45 4E 		 MESERR0 DEFM "ERROR ON SENDING"	;
 52)   0DB7 44 49 4E 47 		 MESERR0 DEFM "ERROR ON SENDING"	;
 53)   0DBB 0A 0D 00    		 DEFB 10,13,0	;
 55)   0DBE 7B          		SHERR0: LD A, E	;
 56)   0DBF C5          		 PUSH BC	;
 57)   0DC0 CD 55 04    		 CALL SOUTAS	;
 58)   0DC3 C1          		 POP BC	;
 59)   0DC4 79          		 LD A, C	;
 60)   0DC5 CD 55 04    		 CALL SOUTAS	;
 62)   0DC8 21 AB 0D    		 LD HL, MESERR0	;
 63)   0DCB CD C7 06    		 CALL RS_TXT	;
 64)   0DCE C9          		 RET	;
 67)   0DCF 79          		SHERR: LD A, C	;
 68)   0DD0 CD 55 04    		 CALL SOUTAS	;
 69)   0DD3 21 96 0D    		 LD HL, MESERR	;
 70)   0DD6 CD C7 06    		 CALL RS_TXT	;
 71)   0DD9 37          		 SCF	;
 72)   0DDA C9          		 RET	;
 75)   0DDB 21 89 FE    		@DS1307_GETNOW: LD HL, BUFFER	;
 76)   0DDE AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 77)   0DDF 77          		 LD (HL), A	;
 78)   0DE0 16 68       		 LD D, DS1307_ADDRESS	;
 79)   0DE2 01 01 00    		 LD BC, 1	;
 80)   0DE5 CD 9E 0C    		 CALL I2C_WRITE	;
 81)   0DE8 C2 BE 0D    		 JP NZ, SHERR0	;
 83)   0DEB 21 89 FE    		 LD HL, BUFFER	;
 84)   0DEE 16 68       		 LD D, DS1307_ADDRESS	;
 85)   0DF0 01 07 00    		 LD BC, 7	;
 86)   0DF3 CD EE 0C    		 CALL I2C_READ	;
 87)   0DF6 C2 CF 0D    		 JP NZ, SHERR	;
 88)   0DF9 AF          		 XOR A	;
 89)   0DFA C9          		 RET	;
 95)   0DFB 11 89 FE    		 LD DE, BUFFER	;
 96)   0DFE AF          		 XOR A	;
 97)   0DFF 12          		 LD (DE), A	;
 98)   0E00 13          		 INC DE	;
 99)   0E01 3E 0A       		 LD A, 10       ; 10 SECS	; 10 SECS
100)   0E03 CD 66 29    		 CALL BN2BCD	;
101)   0E06 7D          		 LD A, L	;
102)   0E07 12          		 LD (DE), A	;
103)   0E08 13          		 INC DE	;
104)   0E09 3E 22       		 LD A, 34       ; 28 MINS	; 28 MINS
105)   0E0B CD 66 29    		 CALL BN2BCD	;
106)   0E0E 7D          		 LD A, L	;
107)   0E0F 12          		 LD (DE), A	;
108)   0E10 13          		 INC DE	;
109)   0E11 3E 12       		 LD A, 18       ; 19 HOURS	; 19 HOURS
110)   0E13 CD 66 29    		 CALL BN2BCD	;
111)   0E16 7D          		 LD A, L	;
112)   0E17 12          		 LD (DE), A	;
113)   0E18 13          		 INC DE	;
114)   0E19 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
115)   0E1B 12          		 LD (DE), A	;
116)   0E1C 13          		 INC DE	;
117)   0E1D 3E 12       		 LD A, 18       ; 8 DAY	; 8 DAY
118)   0E1F CD 66 29    		 CALL BN2BCD	;
119)   0E22 7D          		 LD A, L	;
120)   0E23 12          		 LD (DE), A	;
121)   0E24 13          		 INC DE	;
122)   0E25 3E 02       		 LD A, 02       ; 10 MONTH	; 10 MONTH
123)   0E27 CD 66 29    		 CALL BN2BCD	;
124)   0E2A 7D          		 LD A, L	;
125)   0E2B 12          		 LD (DE), A	;
126)   0E2C 13          		 INC DE	;
127)   0E2D 3E 15       		 LD A, 21       ; 21 YEAR (2020)	; 21 YEAR (2020)
128)   0E2F CD 66 29    		 CALL BN2BCD	;
129)   0E32 7D          		 LD A, L	;
130)   0E33 12          		 LD (DE), A	;
131)   0E34 13          		 INC DE	;
132)   0E35 AF          		 XOR A	;
133)   0E36 12          		 LD (DE), A	;
146)   0E37 21 89 FE    		@DS1307_ADJUST: LD HL, BUFFER	;
147)   0E3A 16 68       		 LD D, DS1307_ADDRESS	;
148)   0E3C 01 09 00    		 LD BC, 9	;
149)   0E3F CD 9E 0C    		 CALL I2C_WRITE	;
150)   0E42 C2 BE 0D    		 JP NZ, SHERR0	;
151)   0E45 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
152)   0E48 CD E3 29    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
153)   0E4B 01 FF FF    		 LD BC, FFFFh       ;8000H FOR 4MHZ	;8000H FOR 4MHZ
154)   0E4E CD E3 29    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
155)   0E51 C9          		 RET	;
159)   0E52 21 89 FE    		@DS1307_SETSQ: LD HL, BUFFER	;
160)   0E55 E5          		 PUSH HL	;
161)   0E56 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
162)   0E58 77          		 LD (HL), A	;
163)   0E59 23          		 INC HL	;
164)   0E5A 7A          		 LD A, D	;
165)   0E5B 77          		 LD (HL), A	;
166)   0E5C E1          		 POP HL	;
167)   0E5D 16 68       		 LD D, DS1307_ADDRESS	;
168)   0E5F 01 02 00    		 LD BC, 2	;
169)   0E62 CD 9E 0C    		 CALL I2C_WRITE	;
170)   0E65 C2 BE 0D    		 JP NZ, SHERR0	;
171)   0E68 C9          		 RET	;
105)   0E69 00          		 LCD_DSPMODE  DB 0	;
106)   0E6A 00          		 LCD_DSPCTRL  DB 0	;
111)   0E6B 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
113)   0E6D 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
114)   0E6E 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
115)   0E70 CB E2       		 SET D4, D	;
116)   0E72 0F          		LWNXT1: RRCA	;
117)   0E73 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
118)   0E75 CB EA       		 SET D5, D	;
119)   0E77 0F          		LWNXT2: RRCA	;
120)   0E78 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
121)   0E7A CB F2       		 SET D6, D	;
122)   0E7C 0F          		LWNXT3: RRCA	;
123)   0E7D 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
124)   0E7F CB FA       		 SET D7, D	;
125)   0E81 7B          		LWNXT4: LD A, E	;
126)   0E82 0F          		 RRCA	;
127)   0E83 30 02       		 JR NC, LWNXT5	;
128)   0E85 CB C2       		 SET RS, D	;
131)   0E87 CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
132)   0E89 7A          		 LD A, D	;
133)   0E8A CD 94 0E    		 CALL LCD16_I2CSEND	;
134)   0E8D CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
135)   0E8F 7A          		 LD A, D	;
136)   0E90 CD 94 0E    		 CALL LCD16_I2CSEND	;
137)   0E93 C9          		 RET	;
141)   0E94 D5          		LCD16_I2CSEND: PUSH DE	;
142)   0E95 E5          		 PUSH HL	;
143)   0E96 21 89 FE    		 LD HL, BUFFER	;
144)   0E99 77          		 LD (HL), A	;
145)   0E9A 16 27       		 LD D, LCDADDR	;
146)   0E9C 01 01 00    		 LD BC, 1	;
147)   0E9F CD 9E 0C    		 CALL I2C_WRITE	;
148)   0EA2 E1          		 POP HL	;
149)   0EA3 D1          		 POP DE	;
150)   0EA4 C9          		 RET	;
154)   0EA5 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
155)   0EA6 7B          		 LD A, E	;
156)   0EA7 0F          		 RRCA	;
157)   0EA8 38 07       		 JR C, ISCMDDATA	;
158)   0EAA 0F          		 RRCA	;
159)   0EAB 30 04       		 JR NC, ISCMDDATA	;
161)   0EAD 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
162)   0EAF 18 0E       		 JR LCSD_4BIT	;
163)   0EB1 7A          		ISCMDDATA: LD A, D	;
164)   0EB2 CB 3F       		 SRL A	;
165)   0EB4 CB 3F       		 SRL A	;
166)   0EB6 CB 3F       		 SRL A	;
167)   0EB8 CB 3F       		 SRL A	;
168)   0EBA D5          		 PUSH DE	;
169)   0EBB CD 6B 0E    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
170)   0EBE D1          		 POP DE	;
171)   0EBF 7A          		LCSD_4BIT: LD A, D	;
172)   0EC0 E6 0F       		 AND $0F	;
173)   0EC2 CD 6B 0E    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
174)   0EC5 C9          		 RET	;
179)   0EC6 1E 00       		LCD16_COMMD: LD E, COMMAND	;
180)   0EC8 C3 A5 0E    		 JP LCD16_SEND	;
183)   0ECB 1E 01       		LCD16_DATA: LD E, LCD_DATA	;
184)   0ECD C3 A5 0E    		 JP LCD16_SEND	;
188)   0ED0 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
189)   0ED2 1E 02       		 LD E, FOUR_BITS	;
190)   0ED4 CD A5 0E    		 CALL LCD16_SEND	;
191)   0ED7 01 00 30    		 LD BC, $3000	;
192)   0EDA CD E3 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
193)   0EDD 3E 03       		 LD A, 3	;
194)   0EDF 1E 02       		 LD E, FOUR_BITS	;
195)   0EE1 CD A5 0E    		 CALL LCD16_SEND	;
196)   0EE4 01 00 30    		 LD BC, $3000	;
197)   0EE7 CD E3 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
198)   0EEA 3E 03       		 LD A, 3	;
199)   0EEC 1E 02       		 LD E, FOUR_BITS	;
200)   0EEE CD A5 0E    		 CALL LCD16_SEND	;
201)   0EF1 01 00 30    		 LD BC, $3000	;
202)   0EF4 CD E3 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
203)   0EF7 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
204)   0EF9 1E 02       		 LD E, FOUR_BITS	;
205)   0EFB CD A5 0E    		 CALL LCD16_SEND	;
206)   0EFE 01 00 30    		 LD BC, $3000	;
207)   0F01 CD E3 29    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
209)   0F04 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
210)   0F06 CD C6 0E    		 CALL LCD16_COMMD	;
211)   0F09 3E 04       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
212)   0F0B 32 6A 0E    		 LD (LCD_DSPCTRL), A	;
213)   0F0E CD 2D 0F    		 CALL LCD16_DISP	;
214)   0F11 CD 48 0F    		 CALL LCD16_CLR	;
215)   0F14 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
216)   0F16 32 69 0E    		 LD (LCD_DSPMODE), A	;
217)   0F19 F6 04       		 OR LCD_ENTRYMODESET	;
218)   0F1B CD C6 0E    		 CALL LCD16_COMMD	;
219)   0F1E C9          		 RET	;
221)   0F1F 3A 6A 0E    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
222)   0F22 CB A7       		 RES LCD_DISPLAYON, A	;
223)   0F24 32 6A 0E    		 LD (LCD_DSPCTRL), A	;
224)   0F27 F6 08       		 OR LCD_DISPLAYCONTROL	;
225)   0F29 CD C6 0E    		 CALL LCD16_COMMD	;
226)   0F2C C9          		 RET	;
227)   0F2D 3A 6A 0E    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
228)   0F30 F6 04       		 OR LCD_DISPLAYON	;
229)   0F32 32 6A 0E    		 LD (LCD_DSPCTRL), A	;
230)   0F35 F6 08       		 OR LCD_DISPLAYCONTROL	;
231)   0F37 CD C6 0E    		 CALL LCD16_COMMD	;
232)   0F3A C9          		 RET	;
234)   0F3B 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
235)   0F3E C5          		LCLR_AGN1: PUSH BC	;
236)   0F3F CD 1F 29    		 CALL DELAYMICRO	;
237)   0F42 C1          		 POP BC	;
238)   0F43 0D          		 DEC C	;
239)   0F44 E2 3E 0F    		 JP PO, LCLR_AGN1	;
240)   0F47 C9          		 RET	;
242)   0F48 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
243)   0F4A CD C6 0E    		 CALL LCD16_COMMD	;
244)   0F4D CD 3B 0F    		 CALL LCDDELAY	;
245)   0F50 C9          		 RET	;
248)   0F51 7E          		@LCD16_PRINT: LD A, (HL)	;
249)   0F52 FE 00       		 CP 0	;
250)   0F54 C8          		 RET Z	;
251)   0F55 CD CB 0E    		 CALL LCD16_DATA	;
252)   0F58 23          		 INC HL	;
253)   0F59 18 F6       		 JR LCD16_PRINT	;
256)   0F5B CD CB 0E    		@LCD16_PRCHR: CALL LCD16_DATA	;
257)   0F5E C9          		 RET	;
259)   0F5F 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
260)   0F61 CD C6 0E    		 CALL LCD16_COMMD	;
261)   0F64 CD 3B 0F    		 CALL LCDDELAY	;
262)   0F67 C9          		 RET	;
265)   0F68 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
266)   0F6C 06 00       		@LCD16_SETCURS: LD B, 0	;
267)   0F6E 4B          		 LD C, E	;
268)   0F6F 21 68 0F    		 LD HL, ROWOFFSET	;
269)   0F72 09          		 ADD HL, BC	;
270)   0F73 7E          		 LD A, (HL)	;
271)   0F74 82          		 ADD D	;
272)   0F75 F6 80       		 OR LCD_SETDDRAMADDR	;
273)   0F77 CD C6 0E    		 CALL LCD16_COMMD	;
274)   0F7A C9          		 RET	;
276)   0F7B 3A 6A 0E    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
277)   0F7E CB 97       		 RES LCD_CURSORON, A	;
278)   0F80 32 6A 0E    		 LD (LCD_DSPCTRL), A	;
279)   0F83 F6 08       		 OR LCD_DISPLAYCONTROL	;
280)   0F85 CD C6 0E    		 CALL LCD16_COMMD	;
281)   0F88 C9          		 RET	;
284)   0F89 3A 6A 0E    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
285)   0F8C F6 02       		 OR LCD_CURSORON	;
286)   0F8E 32 6A 0E    		 LD (LCD_DSPCTRL), A	;
287)   0F91 F6 08       		 OR LCD_DISPLAYCONTROL	;
288)   0F93 CD C6 0E    		 CALL LCD16_COMMD	;
289)   0F96 C9          		 RET	;
291)   0F97 3A 6A 0E    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
292)   0F9A CB 8F       		 RES LCD_BLINKON, A	;
293)   0F9C 32 6A 0E    		 LD (LCD_DSPCTRL), A	;
294)   0F9F F6 08       		 OR LCD_DISPLAYCONTROL	;
295)   0FA1 CD C6 0E    		 CALL LCD16_COMMD	;
296)   0FA4 C9          		 RET	;
299)   0FA5 3A 6A 0E    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
300)   0FA8 F6 01       		 OR LCD_BLINKON	;
301)   0FAA 32 6A 0E    		 LD (LCD_DSPCTRL), A	;
302)   0FAD F6 08       		 OR LCD_DISPLAYCONTROL	;
303)   0FAF CD C6 0E    		 CALL LCD16_COMMD	;
304)   0FB2 C9          		 RET	;
306)   0FB3 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
307)   0FB5 CD C6 0E    		 CALL LCD16_COMMD	;
308)   0FB8 C9          		 RET	;
310)   0FB9 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
311)   0FBB CD C6 0E    		 CALL LCD16_COMMD	;
312)   0FBE C9          		 RET	;
314)   0FBF 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
315)   0FC1 CD C6 0E    		 CALL LCD16_COMMD	;
316)   0FC4 C9          		 RET	;
318)   0FC5 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
319)   0FC7 CD C6 0E    		 CALL LCD16_COMMD	;
320)   0FCA C9          		 RET	;
 38)   0FCB 0E 01       		VGA_INIT: LD C,01B ;LOW RES TEXT SCREEN	;LOW RES TEXT SCREEN
 39)   0FCD CD D1 0F    		 CALL VGA_SETCONF	;
 40)   0FD0 C9          		 RET	;
 44)   0FD1 E5          		VGA_SETCONF: PUSH HL 	;
 45)   0FD2 06 04       		 LD B, 4        ;8000h	;8000h
 46)   0FD4 CD 96 06    		 CALL GETPGINBANK	;
 47)   0FD7 F5          		 PUSH AF ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
 48)   0FD8 C5          		 PUSH BC      ;SAVE SCREEN CODE	;SAVE SCREEN CODE
 49)   0FD9 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
 50)   0FDB CD 74 06    		 CALL PUTPGINBANK	;
 51)   0FDE C1          		 POP BC	;
 52)   0FDF 79          		 LD A,C	;
 53)   0FE0 21 F8 1F    		 LD HL,CONFADDR	;
 54)   0FE3 11 00 80    		 LD DE,$8000	;
 55)   0FE6 B7          		 OR A	;
 56)   0FE7 ED 5A       		 ADC HL,DE	;
 57)   0FE9 77          		 LD (HL),A	;
 58)   0FEA F1          		 POP AF	;
 59)   0FEB C5          		 PUSH BC	;
 60)   0FEC CD 74 06    		 CALL PUTPGINBANK ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
 61)   0FEF C1          		 POP BC	;
 62)   0FF0 E1          		 POP HL	;
 63)   0FF1 79          		 LD A,C    ;SCREEN MODE	;SCREEN MODE
 64)   0FF2 CB 47       		 BIT 0,A	;
 65)   0FF4 C2 49 10    		 JP NZ,VGA_TXTINIT	;
 66)   0FF7 C3 E1 11    		 JP VGA_GRPHINIT	;
 70)   0FFA E5          		VGA_GETCONF: PUSH HL	;
 71)   0FFB 06 04       		 LD B, 4        ;8000h	;8000h
 72)   0FFD CD 96 06    		 CALL GETPGINBANK	;
 73)   1000 F5          		 PUSH AF ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
 74)   1001 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
 75)   1003 CD 74 06    		 CALL PUTPGINBANK	;
 76)   1006 21 F8 1F    		 LD HL,CONFADDR	;
 77)   1009 11 00 80    		 LD DE,$8000	;
 78)   100C B7          		 OR A	;
 79)   100D ED 5A       		 ADC HL,DE	;
 80)   100F 7E          		 LD A,(HL)	;
 81)   1010 4F          		 LD C,A	;
 82)   1011 F1          		 POP AF	;
 83)   1012 C5          		 PUSH BC	;
 84)   1013 CD 74 06    		 CALL PUTPGINBANK	;
 85)   1016 C1          		 POP BC	;
 86)   1017 E1          		 POP HL	;
 87)   1018 79          		 LD A,C	;
 88)   1019 C9          		 RET 	;
 99)   101A 3A F0 FE    		VGA_GETPAGE: LD A, (PGSEM)	;
100)   101D 3C          		 INC A	;
101)   101E 32 F0 FE    		 LD (PGSEM), A	;
102)   1021 FE 01       		 CP 1	;
103)   1023 C0          		 RET NZ	;
104)   1024 E5          		 PUSH HL	;
105)   1025 06 04       		 LD B, 4        ;8000h	;8000h
106)   1027 CD 96 06    		 CALL GETPGINBANK	;
107)   102A 32 EF FE    		 LD (TMPG), A        ;SAVE OLD PAGE	;SAVE OLD PAGE
108)   102D 3E 08       		 LD A, 8        ;PAGE 8	;PAGE 8
109)   102F CD 74 06    		 CALL PUTPGINBANK	;
110)   1032 E1          		 POP HL	;
111)   1033 C9          		 RET	;
115)   1034 3A F0 FE    		VGA_RMVPAGE: LD A, (PGSEM)	;
116)   1037 3D          		 DEC A	;
117)   1038 32 F0 FE    		 LD (PGSEM), A	;
118)   103B FE 00       		 CP 0	;
119)   103D C0          		 RET NZ	;
120)   103E E5          		 PUSH HL	;
121)   103F 06 04       		 LD B, 4	;
122)   1041 3A EF FE    		 LD A, (TMPG)	;
123)   1044 CD 74 06    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
124)   1047 E1          		 POP HL	;
125)   1048 C9          		 RET	;
128)   1049 AF          		VGA_TXTINIT: XOR A	;
129)   104A 32 F0 FE    		 LD (PGSEM), A	;
130)   104D 32 EF FE    		 LD (TMPG), A	;
131)   1050 3E 0B       		 LD A, VGA_YELLOW	;
132)   1052 32 F1 FE    		 LD (VGAFCOL), A	;
133)   1055 3E 04       		 LD A, VGA_NAVY	;
134)   1057 32 F2 FE    		 LD (VGABCOL), A	;
135)   105A 79          		 LD A,C	;
136)   105B 16 28       		 LD D,40	;
137)   105D 1E 14       		 LD E,20	;
138)   105F FE 01       		 CP 1 ;LOW RES TEXT MODE	;LOW RES TEXT MODE
139)   1061 28 04       		 JR Z, VGTI_NX	;
141)   1063 16 50       		 LD D,80	;
142)   1065 1E 28       		 LD E,40  	;
143)   1067 7A          		VGTI_NX: LD A,D	;
144)   1068 32 F5 FE    		 LD (VGAMAXX),A	;
145)   106B 7B          		 LD A,E	;
146)   106C 32 F6 FE    		 LD (VGAMAXY),A	;
147)   106F AF          		 XOR A	;
148)   1070 32 F3 FE    		 LD (VGATX_X), A	;
149)   1073 32 F4 FE    		 LD (VGATX_Y), A	;
152)   1076 3A F5 FE    		VGA_TXTCLR: LD A,(VGAMAXX)	;
153)   1079 67          		 LD H,A	;
154)   107A 3A F6 FE    		 LD A,(VGAMAXY)	;
155)   107D 5F          		 LD E,A	;
156)   107E CD F4 29    		 CALL MULT8	;
157)   1081 E5          		 PUSH HL	;
158)   1082 CD 1A 10    		 CALL VGA_GETPAGE	;
159)   1085 C1          		 POP BC ;TOTAL BYTES 	;TOTAL BYTES
160)   1086 21 00 80    		 LD HL,$8000 ;BANK4	;BANK4
161)   1089 11 00 84    		 LD DE,$8400 ;COLOR INFO	;COLOR INFO
162)   108C C3 9B 10    		 JP VGAC_AGN	;
169)   108F CD 1A 10    		VGA_CLR: CALL VGA_GETPAGE	;
170)   1092 01 20 03    		 LD BC, 800	;
171)   1095 21 00 80    		 LD HL, $8000        ;DEL CHARS	;DEL CHARS
172)   1098 11 00 84    		 LD DE, $8400	;
173)   109B 3E 20       		VGAC_AGN: LD A, 32	;
174)   109D 77          		 LD (HL), A	;
175)   109E 3A F2 FE    		 LD A, (VGABCOL)	;
176)   10A1 CB 27       		 SLA A	;
177)   10A3 CB 27       		 SLA A	;
178)   10A5 CB 27       		 SLA A	;
179)   10A7 CB 27       		 SLA A	;
180)   10A9 12          		 LD (DE), A	;
181)   10AA 23          		 INC HL	;
182)   10AB 13          		 INC DE	;
183)   10AC 0B          		 DEC BC	;
184)   10AD 78          		 LD A, B	;
185)   10AE B1          		 OR C	;
186)   10AF 20 EA       		 JR NZ, VGAC_AGN	;
187)   10B1 AF          		 XOR A	;
188)   10B2 32 F3 FE    		 LD (VGATX_X),A	;
189)   10B5 32 F4 FE    		 LD (VGATX_Y),A	;
190)   10B8 CD 34 10    		 CALL VGA_RMVPAGE	;
191)   10BB C9          		 RET	;
195)   10BC 3A F1 FE    		VGA_GETCOL: LD A, (VGAFCOL)      ;GET COLOR INFO	;GET COLOR INFO
196)   10BF 47          		 LD B, A	;
197)   10C0 3A F2 FE    		 LD A, (VGABCOL)	;
198)   10C3 CB 27       		 SLA A	;
199)   10C5 CB 27       		 SLA A	;
200)   10C7 CB 27       		 SLA A	;
201)   10C9 CB 27       		 SLA A	;
202)   10CB B0          		 OR B         ;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR	;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR
203)   10CC C9          		 RET	;
208)   10CD F5          		VGA_CALC_VIDAD: PUSH AF	;
209)   10CE 06 00       		 LD B, 0	;
210)   10D0 3A F4 FE    		 LD A, (VGATX_Y)	;
211)   10D3 4F          		 LD C, A	;
212)   10D4 21 00 80    		 LD HL, $8000	;
213)   10D7 11 28 00    		 LD DE, 40	;
214)   10DA 78          		VGCLC_AGN: LD A, B	;
215)   10DB B1          		 OR C	;
216)   10DC 28 04       		 JR Z, VGCLC_DOX	;
217)   10DE 19          		 ADD HL, DE	;
218)   10DF 0B          		 DEC BC	;
219)   10E0 18 F8       		 JR VGCLC_AGN	;
220)   10E2 06 00       		VGCLC_DOX: LD B, 0	;
221)   10E4 3A F3 FE    		 LD A, (VGATX_X)	;
222)   10E7 4F          		 LD C, A	;
223)   10E8 09          		 ADD HL, BC	;
224)   10E9 F1          		 POP AF	;
225)   10EA C9          		 RET	;
229)   10EB F5          		VGA_PRCH: PUSH AF	;
230)   10EC CD 1A 10    		 CALL VGA_GETPAGE	;
231)   10EF F1          		 POP AF	;
232)   10F0 FE 1F       		 CP 31	;
233)   10F2 DC 29 11    		 CALL C, VGA_NOTVISCH	;
234)   10F5 28 06       		 JR Z, PRCH_EX        ;EXIT IF CHAR WAS HANDLED	;EXIT IF CHAR WAS HANDLED
235)   10F7 CD 01 11    		 CALL VGA_DOPRNCH       ;PRINT THE CHAR	;PRINT THE CHAR
236)   10FA CD 8C 11    		 CALL VGA_TXFORW       ;TEXT FORWARD	;TEXT FORWARD
237)   10FD CD 34 10    		PRCH_EX: CALL VGA_RMVPAGE	;
238)   1100 C9          		 RET	;
241)   1101 E5          		VGA_DOPRNCH: PUSH HL	;
242)   1102 F5          		 PUSH AF	;
243)   1103 CD 1A 10    		 CALL VGA_GETPAGE	;
244)   1106 CD CD 10    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
245)   1109 F1          		 POP AF	;
246)   110A 77          		 LD (HL), A        ;PUT CHAR ON SCREEN	;PUT CHAR ON SCREEN
247)   110B 11 00 04    		 LD DE, $400	;
248)   110E 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
249)   110F CD BC 10    		 CALL VGA_GETCOL       ;GET CURRENT COLOR	;GET CURRENT COLOR
250)   1112 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
251)   1113 E1          		 POP HL	;
252)   1114 CD 34 10    		 CALL VGA_RMVPAGE	;
253)   1117 C9          		 RET	;
257)   1118 F5          		VGA_DOCHCLR: PUSH AF	;
258)   1119 CD 1A 10    		 CALL VGA_GETPAGE	;
259)   111C CD CD 10    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
260)   111F 11 00 04    		 LD DE, $400	;
261)   1122 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
262)   1123 F1          		 POP AF	;
263)   1124 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
264)   1125 CD 34 10    		 CALL VGA_RMVPAGE	;
265)   1128 C9          		 RET	;
270)   1129 FE 08       		VGA_NOTVISCH: CP 8        ;BACKSPACE	;BACKSPACE
271)   112B 20 11       		 JR NZ, NX1	;
272)   112D 3A F3 FE    		 LD A, (VGATX_X)	;
273)   1130 FE 01       		 CP 1         ;COL 0 HAS THE PROMPT	;COL 0 HAS THE PROMPT
274)   1132 C8          		 RET Z         ;DO NOT PRINT ANYTHING	;DO NOT PRINT ANYTHING
275)   1133 3D          		 DEC A	;
276)   1134 32 F3 FE    		 LD (VGATX_X), A	;
277)   1137 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
278)   1139 CD 01 11    		 CALL VGA_DOPRNCH       ;	;
279)   113C 97          		 SUB A         ;SET ZF	;SET ZF
280)   113D C9          		 RET	;
281)   113E FE 0A       		NX1: CP 10         ;JUST IGNORE IT	;JUST IGNORE IT
282)   1140 C8          		 RET Z	;
283)   1141 FE 0D       		 CP 13         ;CR =NEW LINE	;CR =NEW LINE
284)   1143 20 07       		 JR NZ, NX2	;
285)   1145 CD 9B 11    		 CALL VGDOY        ;ADD 1 TO TY	;ADD 1 TO TY
286)   1148 32 F3 FE    		 LD (VGATX_X), A       ;ZF IS SET	;ZF IS SET
287)   114B C9          		 RET	;
288)   114C AF          		NX2: XOR A         ;NC MEANS WE DON'T PRINT	;NC MEANS WE DON'T PRINT
289)   114D C9          		 RET	;
292)   114E CD 1A 10    		VGA_GETCHAR: CALL VGA_GETPAGE	;
293)   1151 CD CD 10    		 CALL VGA_CALC_VIDAD  ;CALC VIDEO ADDR ON HL	;CALC VIDEO ADDR ON HL
294)   1154 7E          		 LD A,(HL)	;
295)   1155 11 00 04    		 LD DE, $400	;
296)   1158 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
297)   1159 57          		 LD D,A	;
298)   115A 7E          		 LD A,(HL)	;
299)   115B 5F          		 LD E,A	;
300)   115C CD 34 10    		 CALL VGA_RMVPAGE	;
301)   115F C9          		 RET	;
304)   1160 CD 4E 11    		VGA_RMVCURS: CALL VGA_GETCHAR	;
305)   1163 7A          		 LD A,D	;
306)   1164 CD 01 11    		 CALL VGA_DOPRNCH	;
307)   1167 C9          		 RET	;
308)   1168 CD 1A 10    		VGA_PRNCURS: CALL VGA_GETPAGE	;
309)   116B CD 4E 11    		 CALL VGA_GETCHAR ; E HAVE THE COLOR INFO	; E HAVE THE COLOR INFO
310)   116E 7B          		 LD A,E	;
311)   116F 0F          		 RRCA  ;CHANGE FORE AND BACK COLOR INFO	;CHANGE FORE AND BACK COLOR INFO
312)   1170 0F          		 RRCA	;
313)   1171 0F          		 RRCA	;
314)   1172 0F          		 RRCA	;
315)   1173 CD 18 11    		 CALL VGA_DOCHCLR ;CHANGE THE COLOR	;CHANGE THE COLOR
316)   1176 CD 34 10    		 CALL VGA_RMVPAGE	;
317)   1179 C9          		 RET	;
320)   117A CD 1A 10    		VGA_PRINT: CALL VGA_GETPAGE	;
321)   117D 7E          		VGAP_AGN: LD A, (HL)	;
322)   117E FE 00       		 CP 0	;
323)   1180 28 06       		 JR Z, VGAP_EX	;
324)   1182 CD EB 10    		 CALL VGA_PRCH	;
325)   1185 23          		 INC HL	;
326)   1186 18 F5       		 JR VGAP_AGN	;
327)   1188 CD 34 10    		VGAP_EX: CALL VGA_RMVPAGE	;
328)   118B C9          		 RET	;
331)   118C F5          		VGA_TXFORW: PUSH AF	;
332)   118D 3A F3 FE    		 LD A, (VGATX_X)	;
333)   1190 3C          		 INC A	;
334)   1191 FE 28       		 CP 40	;
335)   1193 CC 9B 11    		 CALL Z, VGDOY	;
336)   1196 32 F3 FE    		 LD (VGATX_X), A	;
337)   1199 F1          		 POP AF	;
338)   119A C9          		 RET	;
339)   119B 3A F4 FE    		VGDOY: LD A, (VGATX_Y)	;
340)   119E 3C          		 INC A	;
341)   119F FE 14       		 CP 20	;
342)   11A1 CC A9 11    		 CALL Z, DOSCRL	;
343)   11A4 32 F4 FE    		 LD (VGATX_Y), A	;
344)   11A7 AF          		 XOR A	;
345)   11A8 C9          		 RET	;
347)   11A9 CD C9 11    		DOSCRL: CALL DOSCRL_COL       ;SCROLL COLORS	;SCROLL COLORS
348)   11AC CD B0 11    		 CALL DOSCRL_TXT       ;SCROLL TEXT	;SCROLL TEXT
349)   11AF C9          		 RET   	;
350)   11B0 21 28 80    		DOSCRL_TXT: LD HL, $8028       ;LINE 1	;LINE 1
351)   11B3 11 00 80    		 LD DE, $8000        ;LINE 0	;LINE 0
352)   11B6 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
353)   11B9 ED B0       		 LDIR	;
354)   11BB 3E 20       		 LD A, 32	;
355)   11BD 21 F8 82    		 LD HL, $82F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
356)   11C0 06 28       		 LD B, 40	;
357)   11C2 77          		DOS_AGN: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
358)   11C3 23          		 INC HL	;
359)   11C4 10 FC       		 DJNZ, DOS_AGN	;
360)   11C6 3E 13       		 LD A, 19        ;SET TO LAST LINE	;SET TO LAST LINE
361)   11C8 C9          		 RET	;
363)   11C9 21 28 84    		DOSCRL_COL: LD HL, $8428        ;LINE 1	;LINE 1
364)   11CC 11 00 84    		 LD DE, $8400        ;LINE 0	;LINE 0
365)   11CF 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
366)   11D2 ED B0       		 LDIR  	;
367)   11D4 CD BC 10    		 CALL VGA_GETCOL       ;SET DEFAULT COLOR	;SET DEFAULT COLOR
368)   11D7 21 F8 86    		 LD HL, $86F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
369)   11DA 06 28       		 LD B, 40	;
370)   11DC 77          		DOS_AGNCL: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
371)   11DD 23          		 INC HL	;
372)   11DE 10 FC       		 DJNZ, DOS_AGNCL	;
373)   11E0 C9          		 RET	;
378)   11E1 C9          		VGA_GRPHINIT: RET	;
 16)   11E2 	            		 LCD_RS EQU DEVTFT       ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   11E2 	            		 LCD_CS EQU DEVTFT+1       ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   11E2 7B          		 LD A, E	;
 32)   11E3 D3 11       		 OUT (LCD_CS), A	;
 37)   11E5 DB 11       		 IN A, (LCD_CS)	;
 38)   11E7 C9          		 RET	;
 45)   11E8 7A          		 LD A, D	;
 46)   11E9 D3 11       		 OUT (LCD_CS), A	;
 47)   11EB C9          		 RET	;
 53)   11EC 7A          		 LD A, D	;
 54)   11ED D3 10       		 OUT (LCD_RS), A	;
 55)   11EF C9          		 RET	;
 62)   11F0 AF          		 XOR A	;
 63)   11F1 D3 10       		 OUT (LCD_RS), A       ;RS LOW = COMMAND BYTE	;RS LOW = COMMAND BYTE
 64)   11F3 CD E8 11    		 CALL LCD_WR_BUS	;
 65)   11F6 3E 01       		 LD A, 1	;
 66)   11F8 D3 10       		 OUT (LCD_RS), A       ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   11FA C9          		 RET	;
 71)   11FB 16 E2       		 LD D, 0xE2        ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   11FD CD EC 11    		 CALL LCD_WR_COM       ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   1200 16 23       		 LD D, 0x23        ;1E	;1E
 74)   1202 CD E8 11    		 CALL LCD_WR_DAT	;
 75)   1205 16 02       		 LD D, 0x02	;
 76)   1207 CD E8 11    		 CALL LCD_WR_DAT	;
 77)   120A 16 54       		 LD D, 0x54	;
 78)   120C CD E8 11    		 CALL LCD_WR_DAT	;
 79)   120F 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 80)   1211 CD EC 11    		 CALL LCD_WR_COM	;
 81)   1214 16 01       		 LD D, 0x01	;
 82)   1216 CD E8 11    		 CALL LCD_WR_DAT	;
 83)   1219 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 84)   121B CD 1F 29    		 CALL DELAYMICRO	;
 85)   121E 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 86)   1220 CD EC 11    		 CALL LCD_WR_COM	;
 87)   1223 16 03       		 LD D, 0x03	;
 88)   1225 CD E8 11    		 CALL LCD_WR_DAT	;
 89)   1228 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 90)   122A CD 1F 29    		 CALL DELAYMICRO	;
 92)   122D 16 01       		 LD D, 0x01        ; software reset	; software reset
 93)   122F CD EC 11    		 CALL LCD_WR_COM	;
 94)   1232 06 14       		 LD B, 20        ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   1234 CD 1F 29    		 CALL DELAYMICRO	;
 96)   1237 16 E6       		 LD D, 0xE6        ;PLL setting for PCLK, depends on resolution	;PLL setting for PCLK, depends on resolution
 97)   1239 CD EC 11    		 CALL LCD_WR_COM	;
 98)   123C 16 03       		 LD D, 0x03	;
 99)   123E CD E8 11    		 CALL LCD_WR_DAT	;
100)   1241 16 33       		 LD D, 0x33        ;FF	;FF
101)   1243 CD E8 11    		 CALL LCD_WR_DAT	;
102)   1246 16 33       		 LD D, 0x33        ;FF	;FF
103)   1248 CD E8 11    		 CALL LCD_WR_DAT	;
105)   124B 16 B0       		 LD D, 0xB0        ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   124D CD EC 11    		 CALL LCD_WR_COM	;
107)   1250 16 20       		 LD D, 0x20	;
108)   1252 CD E8 11    		 CALL LCD_WR_DAT	;
109)   1255 16 00       		 LD D, 0x00	;
110)   1257 CD E8 11    		 CALL LCD_WR_DAT	;
111)   125A 16 03       		 LD D, 0x03        ;Set HDP  799	;Set HDP  799
112)   125C CD E8 11    		 CALL LCD_WR_DAT	;
113)   125F 16 1F       		 LD D, 0x1F	;
114)   1261 CD E8 11    		 CALL LCD_WR_DAT	;
115)   1264 16 01       		 LD D, 0x01        ;Set VDP  479	;Set VDP  479
116)   1266 CD E8 11    		 CALL LCD_WR_DAT	;
117)   1269 16 DF       		 LD D, 0xDF	;
118)   126B CD E8 11    		 CALL LCD_WR_DAT	;
119)   126E 16 00       		 LD D, 0x00	;
120)   1270 CD E8 11    		 CALL LCD_WR_DAT	;
123)   1273 16 B4       		 LD D, 0xB4        ;HSYNC	;HSYNC
124)   1275 CD EC 11    		 CALL LCD_WR_COM	;
125)   1278 16 04       		 LD D, 0x04        ;03         ;Set HT 928	;03         ;Set HT 928
126)   127A CD E8 11    		 CALL LCD_WR_DAT	;
127)   127D 16 1F       		 LD D, 0x1F        ;A0	;A0
128)   127F CD E8 11    		 CALL LCD_WR_DAT	;
129)   1282 16 00       		 LD D, 0x00        ;Set HPS  46	;Set HPS  46
130)   1284 CD E8 11    		 CALL LCD_WR_DAT	;
131)   1287 16 D2       		 LD D, 0xD2        ;2E	;2E
132)   1289 CD E8 11    		 CALL LCD_WR_DAT	;
133)   128C 16 00       		 LD D, 0x00        ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   128E CD E8 11    		 CALL LCD_WR_DAT	;
135)   1291 16 00       		 LD D, 0x00        ;Set LPS  15	;Set LPS  15
136)   1293 CD E8 11    		 CALL LCD_WR_DAT	;
137)   1296 16 00       		 LD D, 0x00        ;0F	;0F
138)   1298 CD E8 11    		 CALL LCD_WR_DAT	;
139)   129B 16 00       		 LD D, 0x00	;
140)   129D CD E8 11    		 CALL LCD_WR_DAT	;
142)   12A0 16 B6       		 LD D, 0xB6        ;VSYNC	;VSYNC
143)   12A2 CD EC 11    		 CALL LCD_WR_COM	;
144)   12A5 16 02       		 LD D, 0x02        ;Set VT 525	;Set VT 525
145)   12A7 CD E8 11    		 CALL LCD_WR_DAT	;
146)   12AA 16 0C       		 LD D, 0x0C        ;0D	;0D
147)   12AC CD E8 11    		 CALL LCD_WR_DAT	;
148)   12AF 16 00       		 LD D, 0x00        ;Set VPS  16	;Set VPS  16
149)   12B1 CD E8 11    		 CALL LCD_WR_DAT	;
150)   12B4 16 22       		 LD D, 0x22        ;10	;10
151)   12B6 CD E8 11    		 CALL LCD_WR_DAT	;
152)   12B9 16 00       		 LD D, 0x00        ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   12BB CD E8 11    		 CALL LCD_WR_DAT	;
154)   12BE 16 00       		 LD D, 0x00        ;Set FPS  8	;Set FPS  8
155)   12C0 CD E8 11    		 CALL LCD_WR_DAT	;
156)   12C3 16 00       		 LD D, 0x00        ; 08	; 08
157)   12C5 CD E8 11    		 CALL LCD_WR_DAT	;
159)   12C8 16 B8       		 LD D, 0xB8	;
160)   12CA CD EC 11    		 CALL LCD_WR_COM	;
161)   12CD 16 0F       		 LD D, 0x0F        ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   12CF CD E8 11    		 CALL LCD_WR_DAT	;
163)   12D2 16 01       		 LD D, 0x01        ;GPIO0 normal	;GPIO0 normal
164)   12D4 CD E8 11    		 CALL LCD_WR_DAT	;
166)   12D7 16 BA       		 LD D, 0xBA	;
167)   12D9 CD EC 11    		 CALL LCD_WR_COM	;
168)   12DC 16 01       		 LD D, 0x01        ;0F	;0F
169)   12DE CD E8 11    		 CALL LCD_WR_DAT       ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   12E1 16 36       		 LD D, 0x36        ;rotation	;rotation
172)   12E3 CD EC 11    		 CALL LCD_WR_COM	;
173)   12E6 16 08       		 LD D, 0x08        ;2A	;2A
174)   12E8 CD E8 11    		 CALL LCD_WR_DAT	;
176)   12EB 16 F0       		 LD D, 0xF0        ;pixel data interface	;pixel data interface
177)   12ED CD EC 11    		 CALL LCD_WR_COM	;
178)   12F0 16 06       		 LD D, 0x06        ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   12F2 CD E8 11    		 CALL LCD_WR_DAT	;
181)   12F5 06 05       		 LD B, 5        ;delay(5);	;delay(5);
182)   12F7 CD 1F 29    		 CALL DELAYMICRO	;
184)   12FA 16 BC       		 LD D, 0xBC        ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   12FC CD EC 11    		 CALL LCD_WR_COM	;
186)   12FF 16 40       		 LD D, 0x40	;
187)   1301 CD E8 11    		 CALL LCD_WR_DAT	;
188)   1304 16 80       		 LD D, 0x80	;
189)   1306 CD E8 11    		 CALL LCD_WR_DAT	;
190)   1309 16 40       		 LD D, 0x40	;
191)   130B CD E8 11    		 CALL LCD_WR_DAT	;
192)   130E 16 01       		 LD D, 0x01	;
193)   1310 CD E8 11    		 CALL LCD_WR_DAT	;
194)   1313 06 05       		 LD B, 5        ;delay(5);	;delay(5);
195)   1315 CD 1F 29    		 CALL DELAYMICRO	;
197)   1318 16 35       		 LD D, 0x35        ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   131A CD EC 11    		 CALL LCD_WR_COM	;
199)   131D 16 00       		 LD D, 0x00        ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   131F CD E8 11    		 CALL LCD_WR_DAT	;
202)   1322 16 29       		 LD D, 0x29        ;display on	;display on
203)   1324 CD EC 11    		 CALL LCD_WR_COM	;
204)   1327 16 BE       		 LD D, 0xBE        ;set PWM for B/L	;set PWM for B/L
205)   1329 CD EC 11    		 CALL LCD_WR_COM	;
206)   132C 16 06       		 LD D, 0x06	;
207)   132E CD E8 11    		 CALL LCD_WR_DAT	;
208)   1331 16 F0       		 LD D, 0xF0	;
209)   1333 CD E8 11    		 CALL LCD_WR_DAT	;
210)   1336 16 01       		 LD D, 0x01	;
211)   1338 CD E8 11    		 CALL LCD_WR_DAT	;
212)   133B 16 F0       		 LD D, 0xF0	;
213)   133D CD E8 11    		 CALL LCD_WR_DAT	;
214)   1340 16 00       		 LD D, 0x00	;
215)   1342 CD E8 11    		 CALL LCD_WR_DAT	;
216)   1345 16 00       		 LD D, 0x00	;
217)   1347 CD E8 11    		 CALL LCD_WR_DAT	;
219)   134A 16 D0       		 LD D, 0xD0	;
220)   134C CD EC 11    		 CALL LCD_WR_COM	;
221)   134F 16 0D       		 LD D, 0x0D	;
222)   1351 CD E8 11    		 CALL LCD_WR_DAT	;
225)   1354 21 00 00    		 LD HL, 0	;
226)   1357 E5          		 PUSH HL	;
227)   1358 E5          		 PUSH HL	;
228)   1359 21 1F 03    		 LD HL, 799	;
229)   135C E5          		 PUSH HL	;
230)   135D 21 DF 01    		 LD HL, 479	;
231)   1360 E5          		 PUSH HL	;
232)   1361 CD 65 13    		 CALL LCD_SETXY	;
233)   1364 C9          		 RET	;
250)   1365 DD 21 02 00 		 LD IX, 2	;
251)   1369 DD 39       		 ADD IX, SP	;
252)   136B 16 2A       		 LD D, 0x2A        ;SEND IX PARAMS	;SEND IX PARAMS
253)   136D CD EC 11    		 CALL LCD_WR_COM	;
254)   1370 DD 56 07    		 LD D, (IX + 7)	;
255)   1373 CD E8 11    		 CALL LCD_WR_DAT	;
256)   1376 DD 56 06    		 LD D, (IX + 6)	;
257)   1379 CD E8 11    		 CALL LCD_WR_DAT	;
258)   137C DD 56 03    		 LD D, (IX + 3)	;
259)   137F CD E8 11    		 CALL LCD_WR_DAT	;
260)   1382 DD 56 02    		 LD D, (IX + 2)	;
261)   1385 CD E8 11    		 CALL LCD_WR_DAT	;
262)   1388 16 2B       		 LD D, 0x2B        ;SEND Y PARAMS	;SEND Y PARAMS
263)   138A CD EC 11    		 CALL LCD_WR_COM	;
264)   138D DD 56 05    		 LD D, (IX + 5)	;
265)   1390 CD E8 11    		 CALL LCD_WR_DAT	;
266)   1393 DD 56 04    		 LD D, (IX + 4)	;
267)   1396 CD E8 11    		 CALL LCD_WR_DAT	;
268)   1399 DD 56 01    		 LD D, (IX + 1)	;
269)   139C CD E8 11    		 CALL LCD_WR_DAT	;
270)   139F DD 56 00    		 LD D, (IX)	;
271)   13A2 CD E8 11    		 CALL LCD_WR_DAT	;
272)   13A5 16 2C       		 LD D, 0x2C        ;SEND DATA	;SEND DATA
273)   13A7 CD EC 11    		 CALL LCD_WR_COM	;
274)   13AA D1          		 POP DE	;
275)   13AB 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   13AE 39          		 ADD HL, SP	;
277)   13AF F9          		 LD SP, HL	;
278)   13B0 EB          		 EX DE, HL	;
279)   13B1 E9          		 JP (HL)	;
285)   13B2 54          		 LD D, H	;
286)   13B3 CD E8 11    		 CALL LCD_WR_DAT	;
287)   13B6 55          		 LD D, L	;
288)   13B7 CD E8 11    		 CALL LCD_WR_DAT	;
289)   13BA C9          		 RET	;
294)   13BB 16 2E       		 LD D, 0x2E        ;READ DATA	;READ DATA
295)   13BD CD EC 11    		 CALL LCD_WR_COM	;
296)   13C0 CD E5 11    		@LCD_GTPXL: CALL LCD_RD_DAT	;
297)   13C3 67          		 LD H, A	;
298)   13C4 CD E5 11    		 CALL LCD_RD_DAT	;
299)   13C7 6F          		 LD L, A	;
300)   13C8 C9          		 RET	;
306)   13C9 DD E5       		@LCD_READPIXEL: PUSH IX       ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   13CB DD 21 04 00 		 LD IX, 4        ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   13CF DD 39       		 ADD IX, SP	;
309)   13D1 DD 66 03    		 LD H, (IX + 3)        ;X	;X
310)   13D4 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
311)   13D7 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
312)   13DA DD 5E 00    		 LD E, (IX)        ;Y	;Y
313)   13DD E5          		 PUSH HL	;
314)   13DE D5          		 PUSH DE	;
315)   13DF E5          		 PUSH HL	;
316)   13E0 D5          		 PUSH DE	;
317)   13E1 CD 65 13    		 CALL LCD_SETXY	;
318)   13E4 CD BB 13    		 CALL LCD_GETPIXEL	;
319)   13E7 E5          		 PUSH HL	;
320)   13E8 CD 1A 14    		 CALL LCD_CLRXY	;
321)   13EB D1          		 POP DE         ;RESULT COLOR	;RESULT COLOR
322)   13EC DD E1       		 POP IX	;
323)   13EE C1          		 POP BC         ;RET ADDR	;RET ADDR
324)   13EF 21 04 00    		 LD HL, 2 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   13F2 39          		 ADD HL, SP	;
326)   13F3 F9          		 LD SP, HL	;
327)   13F4 EB          		 EX DE, HL        ;HL RESULT	;HL RESULT
328)   13F5 C5          		 PUSH BC        ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   13F6 C9          		 RET	;
333)   13F7 DD 21 02 00 		 LD IX, 2        ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   13FB DD 39       		 ADD IX, SP	;
335)   13FD DD 66 03    		 LD H, (IX + 3)        ;X	;X
336)   1400 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
337)   1403 DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
338)   1406 DD 5E 00    		 LD E, (IX)        ;Y	;Y
339)   1409 E5          		 PUSH HL	;
340)   140A D5          		 PUSH DE	;
341)   140B E5          		 PUSH HL	;
342)   140C D5          		 PUSH DE	;
343)   140D CD 65 13    		 CALL LCD_SETXY	;
344)   1410 2A 01 FE    		 LD HL, (FCOLOR)	;
345)   1413 CD B2 13    		 CALL LCD_SETPIXEL	;
346)   1416 CD 1A 14    		 CALL LCD_CLRXY	;
347)   1419 C9          		 RET	;
350)   141A 21 00 00    		 LD HL, 0	;
351)   141D E5          		 PUSH HL	;
352)   141E E5          		 PUSH HL	;
353)   141F 21 1F 03    		 LD HL, LCD_WIDTH	;
354)   1422 E5          		 PUSH HL	;
355)   1423 21 DF 01    		 LD HL, LCD_HEIGHT	;
356)   1426 E5          		 PUSH HL	;
357)   1427 CD 65 13    		 CALL LCD_SETXY	;
358)   142A C9          		 RET	;
362)   142B DD 21 02 00 		 LD IX, 2	;
363)   142F DD 39       		 ADD IX, SP	;
364)   1431 DD 66 05    		 LD H, (IX + 5)        ;X	;X
365)   1434 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
366)   1437 DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
367)   143A DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
368)   143D DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
369)   1440 DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
372)   1443 E5          		 PUSH HL	;
373)   1444 21 00 00    		 LD HL, 0	;
374)   1447 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
375)   1448 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
376)   144A 38 0A       		 JR C, POSH1	;
377)   144C AF          		 XOR A         ;l=-l	;l=-l
378)   144D 91          		 SUB C	;
379)   144E 4F          		 LD C, A	;
380)   144F 9F          		 SBC A, A	;
381)   1450 90          		 SUB B	;
382)   1451 47          		 LD B, A	;
383)   1452 E1          		 POP HL	;
384)   1453 ED 42       		 SBC HL, BC        ;x -= l;	;x -= l;
385)   1455 E5          		 PUSH HL	;
386)   1456 E1          		POSH1: POP HL	;
387)   1457 E5          		 PUSH HL	;
388)   1458 D5          		 PUSH DE	;
389)   1459 09          		 ADD HL, BC	;
390)   145A E5          		 PUSH HL	;
391)   145B D5          		 PUSH DE	;
392)   145C CD 65 13    		 CALL LCD_SETXY        ;setXY(x, y, x+l, y);	;setXY(x, y, x+l, y);
393)   145F 2A 01 FE    		 LD HL, (FCOLOR)	;
394)   1462 CD B2 13    		NXTH1: CALL LCD_SETPIXEL	;
395)   1465 0B          		 DEC BC	;
396)   1466 79          		 LD A, C	;
397)   1467 B0          		 OR B	;
398)   1468 20 F8       		 JR NZ, NXTH1	;
399)   146A CD 1A 14    		 CALL LCD_CLRXY	;
400)   146D D1          		 POP DE	;
401)   146E 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
402)   1471 39          		 ADD HL, SP	;
403)   1472 F9          		 LD SP, HL	;
404)   1473 EB          		 EX DE, HL	;
405)   1474 E9          		 JP (HL)	;
411)   1475 DD 21 02 00 		 LD IX, 2	;
412)   1479 DD 39       		 ADD IX, SP	;
413)   147B DD 56 05    		 LD D, (IX + 5)        ;X	;X
414)   147E DD 5E 04    		 LD E, (IX + 4)        ;X	;X
415)   1481 DD 66 03    		 LD H, (IX + 3)        ;Y	;Y
416)   1484 DD 6E 02    		 LD L, (IX + 2)        ;Y	;Y
417)   1487 DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
418)   148A DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
419)   148D E5          		 PUSH HL	;
420)   148E 21 00 00    		 LD HL, 0	;
421)   1491 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
422)   1492 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
423)   1494 38 0A       		 JR C, POSV1	;
424)   1496 AF          		 XOR A         ;l=-l	;l=-l
425)   1497 91          		 SUB C	;
426)   1498 4F          		 LD C, A	;
427)   1499 9F          		 SBC A, A	;
428)   149A 90          		 SUB B	;
429)   149B 47          		 LD B, A	;
430)   149C E1          		 POP HL	;
431)   149D ED 42       		 SBC HL, BC        ;Y -= l;	;Y -= l;
432)   149F E5          		 PUSH HL	;
433)   14A0 E1          		POSV1: POP HL	;
434)   14A1 D5          		 PUSH DE	;
435)   14A2 E5          		 PUSH HL	;
436)   14A3 D5          		 PUSH DE	;
437)   14A4 09          		 ADD HL, BC	;
438)   14A5 E5          		 PUSH HL	;
439)   14A6 CD 65 13    		 CALL LCD_SETXY        ;setXY(x, y, x, y+l);	;setXY(x, y, x, y+l);
440)   14A9 2A 01 FE    		 LD HL, (FCOLOR)	;
441)   14AC CD B2 13    		NXTV1: CALL LCD_SETPIXEL	;
442)   14AF 0B          		 DEC BC	;
443)   14B0 79          		 LD A, C	;
444)   14B1 B0          		 OR B	;
445)   14B2 20 F8       		 JR NZ, NXTV1	;
446)   14B4 CD 1A 14    		 CALL LCD_CLRXY	;
447)   14B7 D1          		 POP DE	;
448)   14B8 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
449)   14BB 39          		 ADD HL, SP	;
450)   14BC F9          		 LD SP, HL	;
451)   14BD EB          		 EX DE, HL	;
452)   14BE E9          		 JP (HL)	;
456)   14BF DD 21 02 00 		 LD IX, 2	;
457)   14C3 DD 39       		 ADD IX, SP	;
467)   14C5 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
468)   14C8 DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
469)   14CB DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
470)   14CE DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
471)   14D1 B7          		 OR A	;
472)   14D2 ED 52       		 SBC HL, DE	;
473)   14D4 20 17       		 JR NZ, YNOTEQ	;
475)   14D6 DD 46 07    		 LD B, (IX + 7)        ;X1	;X1
476)   14D9 DD 4E 06    		 LD C, (IX + 6)        ;X1	;X1
477)   14DC C5          		 PUSH BC        ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
478)   14DD D5          		 PUSH DE        ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
479)   14DE DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
480)   14E1 DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
481)   14E4 ED 42       		 SBC HL, BC        ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
482)   14E6 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
483)   14E7 CD 2B 14    		 CALL LCD_DRAWHLINE	;
484)   14EA C3 9A 16    		 JP DLNEX	;
486)   14ED DD 66 07    		 LD H, (IX + 7)        ;X1	;X1
487)   14F0 DD 6E 06    		 LD L, (IX + 6)        ;X1	;X1
488)   14F3 DD 56 03    		 LD D, (IX + 3)        ;X2	;X2
489)   14F6 DD 5E 02    		 LD E, (IX + 2)        ;X2	;X2
490)   14F9 B7          		 OR A	;
491)   14FA ED 52       		 SBC HL, DE	;
492)   14FC 20 17       		 JR NZ, XNOTEQ	;
494)   14FE D5          		 PUSH DE        ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
495)   14FF DD 46 05    		 LD B, (IX + 5)        ;Y1	;Y1
496)   1502 DD 4E 04    		 LD C, (IX + 4)        ;Y1	;Y1
497)   1505 C5          		 PUSH BC        ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
498)   1506 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
499)   1509 DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
500)   150C ED 42       		 SBC HL, BC        ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
501)   150E E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
502)   150F CD 75 14    		 CALL LCD_DRAWVLINE	;
503)   1512 C3 9A 16    		 JP DLNEX	;
506)   1515 38 04       		 JR C, X2GTX1	;
508)   1517 AF          		 XOR A	;
509)   1518 3D          		 DEC A         ;XSTEP=-1	;XSTEP=-1
510)   1519 18 0D       		 JR DLNXT1	;
513)   151B D5          		 PUSH DE	;
514)   151C E1          		 POP HL	;
515)   151D DD 56 07    		 LD D, (IX + 7)        ;X1	;X1
516)   1520 DD 5E 06    		 LD E, (IX + 6)        ;X1	;X1
517)   1523 B7          		 OR A	;
518)   1524 ED 52       		 SBC HL, DE        ;X2-X1 ON HL	;X2-X1 ON HL
520)   1526 3E 01       		 LD A, 1        ;XSTEP=1	;XSTEP=1
522)   1528 06 00       		 LD B, 0	;
523)   152A 0E 00       		 LD C, 0	;
524)   152C C5          		 PUSH BC        ;T	;T
525)   152D E5          		 PUSH HL        ;DX	;DX
526)   152E FE 01       		 CP 1	;
527)   1530 28 02       		 JR Z, DLXMINUS1	;
528)   1532 06 FF       		 LD B, 0XFF	;
529)   1534 4F          		DLXMINUS1: LD C, A	;
530)   1535 C5          		 PUSH BC        ;XSTEP	;XSTEP
531)   1536 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
532)   1539 DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
533)   153C DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
534)   153F DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
535)   1542 B7          		 OR A	;
536)   1543 ED 52       		 SBC HL, DE	;
537)   1545 38 04       		 JR C, Y2GTY1        ;HL=Y1-Y2	;HL=Y1-Y2
538)   1547 AF          		 XOR A	;
539)   1548 3D          		 DEC A         ;YSTEP=-1	;YSTEP=-1
540)   1549 18 0F       		 JR DLNXT2	;
543)   154B D5          		 PUSH DE	;
544)   154C E1          		 POP HL	;
545)   154D DD 56 05    		 LD D, (IX + 5)        ;Y1	;Y1
546)   1550 DD 5E 04    		 LD E, (IX + 4)        ;Y1	;Y1
547)   1553 B7          		 OR A	;
548)   1554 ED 52       		 SBC HL, DE        ;HL=Y2-Y1    HL=DY	;HL=Y2-Y1    HL=DY
549)   1556 06 00       		 LD B, 0	;
550)   1558 3E 01       		 LD A, 1        ;YSTEP=1	;YSTEP=1
552)   155A FE 01       		 CP 1	;
553)   155C 28 02       		 JR Z, DLYMINUS1	;
554)   155E 06 FF       		 LD B, 0XFF	;
556)   1560 4F          		 LD C, A	;
557)   1561 E5          		 PUSH HL        ;DY	;DY
558)   1562 C5          		 PUSH BC        ;YSTEP	;YSTEP
559)   1563 FD 21 00 00 		 LD IY, 0	;
560)   1567 FD 39       		 ADD IY, SP	;
575)   1569 FD 56 07    		 LD D, (IY + 7)        ;DX	;DX
576)   156C FD 5E 06    		 LD E, (IY + 6)        ;DX	;DX
577)   156F B7          		 OR A	;
578)   1570 ED 52       		 SBC HL, DE        ;DY-DX	;DY-DX
579)   1572 DA 07 16    		 JP C, DXGTDY	;
580)   1575 CA 07 16    		 JP Z, DXGTDY	;
582)   1578 19          		 ADD HL, DE        ;HL=DY	;HL=DY
583)   1579 44          		 LD B, H	;
584)   157A 4D          		 LD C, L	;
585)   157B CB 38       		 SRL B	;
586)   157D CB 19       		 RR C         ;(dy >> 1)	;(dy >> 1)
587)   157F 21 00 00    		 LD HL, 0	;
588)   1582 ED 42       		 SBC HL, BC        ;t = - (dy >> 1);	;t = - (dy >> 1);
589)   1584 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
590)   1587 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
592)   158A DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
593)   158D DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
594)   1590 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
595)   1593 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
596)   1596 D5          		 PUSH DE	;
597)   1597 DD E5       		 PUSH IX	;
598)   1599 E5          		 PUSH HL	;
599)   159A D5          		 PUSH DE	;
600)   159B E5          		 PUSH HL	;
601)   159C D5          		 PUSH DE	;
602)   159D CD 65 13    		 CALL LCD_SETXY	;
603)   15A0 2A 01 FE    		 LD HL, (FCOLOR)	;
604)   15A3 CD B2 13    		 CALL LCD_SETPIXEL	;
605)   15A6 DD E1       		 POP IX	;
606)   15A8 D1          		 POP DE	;
607)   15A9 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
608)   15AC DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
609)   15AF ED 52       		 SBC HL, DE        ; ROW=Y2	; ROW=Y2
610)   15B1 CA 95 16    		 JP Z, DLEXIT	;
611)   15B4 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
612)   15B7 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
613)   15BA EB          		 EX DE, HL	;
614)   15BB 09          		 ADD HL, BC        ;row += ystep;	;row += ystep;
615)   15BC DD 74 05    		 LD (IX + 5), H        ;SAVE ROW	;SAVE ROW
616)   15BF DD 75 04    		 LD (IX + 4), L        ;	;
618)   15C2 FD 56 09    		 LD D, (IY + 9)        ; T	; T
619)   15C5 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
620)   15C8 FD 66 07    		 LD H, (IY + 7)        ;DX	;DX
621)   15CB FD 6E 06    		 LD L, (IY + 6)        ;DX	;DX
622)   15CE 19          		 ADD HL, DE	;
623)   15CF FD 74 09    		 LD (IY + 9), H        ;t += dx;	;t += dx;
624)   15D2 FD 75 08    		 LD (IY + 8), L	;
625)   15D5 EB          		 EX DE, HL	;
626)   15D6 21 00 80    		 LD HL, $8000	;
627)   15D9 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
628)   15DB 38 AD       		 JR C, DLAGN1        ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
629)   15DD FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
630)   15E0 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
631)   15E3 DD 66 07    		 LD H, (IX + 7)        ;COL HI	;COL HI
632)   15E6 DD 6E 06    		 LD L, (IX + 6)        ;COL LO	;COL LO
633)   15E9 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
634)   15EA DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
635)   15ED DD 75 06    		 LD (IX + 6), L        ;	;
637)   15F0 FD 66 09    		 LD H, (IY + 9)        ; T	; T
638)   15F3 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
639)   15F6 FD 46 03    		 LD B, (IY + 3)        ;DY	;DY
640)   15F9 FD 4E 02    		 LD C, (IY + 2)        ;DY	;DY
641)   15FC ED 42       		 SBC HL, BC	;
642)   15FE FD 74 09    		 LD (IY + 9), H        ;t -= dY;	;t -= dY;
643)   1601 FD 75 08    		 LD (IY + 8), L	;
644)   1604 C3 8A 15    		 JP DLAGN1	;
646)   1607 19          		 ADD HL, DE        ;HL=DY DE=DX	;HL=DY DE=DX
647)   1608 42          		 LD B, D	;
648)   1609 4B          		 LD C, E	;
649)   160A CB 38       		 SRL B	;
650)   160C CB 19       		 RR C         ;(dX >> 1)	;(dX >> 1)
651)   160E 21 00 00    		 LD HL, 0	;
652)   1611 ED 42       		 SBC HL, BC        ;t = - (dX >> 1);	;t = - (dX >> 1);
653)   1613 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
654)   1616 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
656)   1619 DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
657)   161C DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
658)   161F DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
659)   1622 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
660)   1625 E5          		 PUSH HL        ;SAVE COL	;SAVE COL
661)   1626 DD E5       		 PUSH IX	;
662)   1628 E5          		 PUSH HL	;
663)   1629 D5          		 PUSH DE	;
664)   162A E5          		 PUSH HL	;
665)   162B D5          		 PUSH DE	;
666)   162C CD 65 13    		 CALL LCD_SETXY	;
667)   162F 2A 01 FE    		 LD HL, (FCOLOR)	;
668)   1632 CD B2 13    		 CALL LCD_SETPIXEL	;
669)   1635 DD E1       		 POP IX	;
670)   1637 D1          		 POP DE         ;RETRIEVE COL	;RETRIEVE COL
671)   1638 DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
672)   163B DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
673)   163E ED 52       		 SBC HL, DE        ; COL=X2?	; COL=X2?
674)   1640 28 53       		 JR Z, DLEXIT	;
675)   1642 EB          		 EX DE, HL        ;HL=COL	;HL=COL
676)   1643 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
677)   1646 FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
678)   1649 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
679)   164A DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
680)   164D DD 75 06    		 LD (IX + 6), L        ;	;
681)   1650 FD 56 09    		 LD D, (IY + 9)        ; T	; T
682)   1653 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
683)   1656 FD 66 03    		 LD H, (IY + 3)        ;DY	;DY
684)   1659 FD 6E 02    		 LD L, (IY + 2)        ;DY	;DY
685)   165C 19          		 ADD HL, DE	;
686)   165D FD 74 09    		 LD (IY + 9), H        ;t += dY;	;t += dY;
687)   1660 FD 75 08    		 LD (IY + 8), L	;
688)   1663 EB          		 EX DE, HL        ;T=DE	;T=DE
689)   1664 21 00 80    		 LD HL, $8000	;
690)   1667 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
691)   1669 38 AE       		 JR C, DLAGN2        ;CARRY SET IF NEGATIVE	;CARRY SET IF NEGATIVE
692)   166B FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
693)   166E FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
694)   1671 DD 66 05    		 LD H, (IX + 5)        ;ROW HI	;ROW HI
695)   1674 DD 6E 04    		 LD L, (IX + 4)        ;ROW LO	;ROW LO
696)   1677 09          		 ADD HL, BC        ;ROW += Ystep;	;ROW += Ystep;
697)   1678 DD 74 05    		 LD (IX + 5), H        ;SAVE COL	;SAVE COL
698)   167B DD 75 04    		 LD (IX + 4), L        ;	;
700)   167E FD 66 09    		 LD H, (IY + 9)        ; T	; T
701)   1681 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
702)   1684 FD 46 07    		 LD B, (IY + 7)        ;DX	;DX
703)   1687 FD 4E 06    		 LD C, (IY + 6)        ;DX	;DX
704)   168A ED 42       		 SBC HL, BC	;
705)   168C FD 74 09    		 LD (IY + 9), H        ;t -= dX;	;t -= dX;
706)   168F FD 75 08    		 LD (IY + 8), L	;
707)   1692 C3 19 16    		 JP DLAGN2	;
710)   1695 21 0A 00    		 LD HL, 5 * 2        ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
711)   1698 39          		 ADD HL, SP        ;	;
712)   1699 F9          		 LD SP, HL	;
713)   169A D1          		DLNEX: POP DE         ;RET ADDR	;RET ADDR
714)   169B 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
715)   169E 39          		 ADD HL, SP	;
716)   169F F9          		 LD SP, HL	;
717)   16A0 EB          		 EX DE, HL	;
718)   16A1 E9          		 JP (HL)	;
723)   16A2 C5          		@PLOTP: PUSH BC        ;SAVE BC	;SAVE BC
724)   16A3 DD E5       		 PUSH IX	;
726)   16A5 D5          		 PUSH DE	;
727)   16A6 E5          		 PUSH HL	;
728)   16A7 D5          		 PUSH DE	;
729)   16A8 E5          		 PUSH HL	;
730)   16A9 CD 65 13    		 CALL LCD_SETXY	;
731)   16AC 2A 01 FE    		 LD HL, (FCOLOR)	;
732)   16AF CD B2 13    		 CALL LCD_SETPIXEL	;
734)   16B2 DD E1       		 POP IX	;
735)   16B4 C1          		 POP BC         ;RESTORE BC	;RESTORE BC
736)   16B5 C9          		 RET	;
741)   16B6 E1          		 POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
742)   16B7 D5          		 PUSH DE        ;F VAR	;F VAR
743)   16B8 D5          		 PUSH DE        ;DDF_X	;DDF_X
744)   16B9 D5          		 PUSH DE        ;DDF_Y	;DDF_Y
745)   16BA D5          		 PUSH DE        ;X1	;X1
746)   16BB D5          		 PUSH DE        ;Y1	;Y1
747)   16BC E5          		 PUSH HL        ;RET ADDR	;RET ADDR
748)   16BD DD 21 02 00 		 LD IX, 2	;
749)   16C1 DD 39       		 ADD IX, SP	;
767)   16C3 AF          		 XOR A	;
768)   16C4 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
769)   16C7 DD 5E 0A    		 LD E, (IX + 10)       ;R	;R
770)   16CA DD 72 01    		 LD (IX + 1), D        ;Y1=R	;Y1=R
771)   16CD DD 73 00    		 LD (IX + 0), E	;
772)   16D0 21 01 00    		 LD HL, 1	;
773)   16D3 DD 74 07    		 LD (IX + 7), H        ;DDF_X=1	;DDF_X=1
774)   16D6 DD 75 06    		 LD (IX + 6), L	;
775)   16D9 DD 74 03    		 LD (IX + 3), H        ;X1=0	;X1=0
776)   16DC DD 74 02    		 LD (IX + 2), H	;
777)   16DF ED 52       		 SBC HL, DE	;
778)   16E1 DD 74 09    		 LD (IX + 9), H        ;F	;F
779)   16E4 DD 75 08    		 LD (IX + 8), L        ;F	;F
781)   16E7 EB          		 EX DE, HL        ;HL=RADIUS	;HL=RADIUS
782)   16E8 29          		 ADD HL, HL        ;2*R	;2*R
783)   16E9 EB          		 EX DE, HL	;
784)   16EA 21 00 00    		 LD HL, 0	;
785)   16ED ED 52       		 SBC HL, DE        ;-2*R	;-2*R
786)   16EF DD 74 05    		 LD (IX + 5), H	;
787)   16F2 DD 75 04    		 LD (IX + 4), L        ;DDF_Y	;DDF_Y
789)   16F5 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
790)   16F8 DD 6E 0C    		 LD L, (IX + 12)	;
791)   16FB E5          		 PUSH HL        ;SAVE Y	;SAVE Y
792)   16FC DD 56 0B    		 LD D, (IX + 11)       ;R	;R
793)   16FF DD 5E 0A    		 LD E, (IX + 10)	;
794)   1702 D5          		 PUSH DE        ;SAVE R	;SAVE R
795)   1703 19          		 ADD HL, DE        ;Y+R	;Y+R
796)   1704 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
797)   1707 DD 5E 0E    		 LD E, (IX + 14)	;
798)   170A D5          		 PUSH DE        ;SAVE X	;SAVE X
800)   170B CD A2 16    		 CALL PLOTP	;
802)   170E D1          		 POP DE         ;GET X	;GET X
803)   170F C1          		 POP BC         ;GET R	;GET R
804)   1710 E1          		 POP HL         ;GET Y	;GET Y
805)   1711 E5          		 PUSH HL        ;SAVE VARS	;SAVE VARS
806)   1712 C5          		 PUSH BC	;
807)   1713 D5          		 PUSH DE	;
808)   1714 AF          		 XOR A	;
809)   1715 ED 42       		 SBC HL, BC        ;	;
811)   1717 CD A2 16    		 CALL PLOTP	;
813)   171A E1          		 POP HL         ;GET X	;GET X
814)   171B C1          		 POP BC         ;GET R	;GET R
815)   171C D1          		 POP DE         ;GET Y	;GET Y
816)   171D D5          		 PUSH DE        ;SAVE VARS	;SAVE VARS
817)   171E C5          		 PUSH BC	;
818)   171F E5          		 PUSH HL	;
819)   1720 AF          		 XOR A	;
820)   1721 ED 4A       		 ADC HL, BC	;
821)   1723 EB          		 EX DE, HL	;
823)   1724 CD A2 16    		 CALL PLOTP	;
825)   1727 E1          		 POP HL         ;GET X	;GET X
826)   1728 C1          		 POP BC         ;GET R	;GET R
827)   1729 D1          		 POP DE         ;GET Y	;GET Y
828)   172A AF          		 XOR A	;
829)   172B ED 42       		 SBC HL, BC	;
830)   172D EB          		 EX DE, HL	;
832)   172E CD A2 16    		 CALL PLOTP	;
835)   1731 DD 66 03    		CIRC_AGN: LD H, (IX + 3)       ;X1	;X1
836)   1734 DD 6E 02    		 LD L, (IX + 2)        ;X1	;X1
837)   1737 DD 56 01    		 LD D, (IX + 1)        ;Y1	;Y1
838)   173A DD 5E 00    		 LD E, (IX + 0)        ;Y1	;Y1
839)   173D AF          		 XOR A	;
840)   173E ED 52       		 SBC HL, DE	;
841)   1740 D2 2F 18    		 JP NC, CIRC_EXIT	;
843)   1743 19          		 ADD HL, DE	;
844)   1744 E5          		 PUSH HL        ;SAVE X1	;SAVE X1
845)   1745 D5          		 PUSH DE        ;SAVE Y1	;SAVE Y1
846)   1746 21 00 00    		 LD HL, 0	;
847)   1749 AF          		 XOR A	;
850)   174A DD 7E 09    		 LD A, (IX + 9)        ;F HI BYTE	;F HI BYTE
851)   174D FE 50       		 CP 80	;
852)   174F 30 26       		 JR NC, CIRC_SKIP	;
853)   1751 28 24       		 JR Z, CIRC_SKIP	;
857)   1753 D1          		 POP DE         ;Y1	;Y1
858)   1754 1B          		 DEC DE	;
859)   1755 DD 72 01    		 LD (IX + 1), D        ;SAVE Y1	;SAVE Y1
860)   1758 DD 73 00    		 LD (IX + 0), E	;
861)   175B D5          		 PUSH DE        ;Y1	;Y1
862)   175C DD 66 05    		 LD H, (IX + 5)        ;DDF_Y	;DDF_Y
863)   175F DD 6E 04    		 LD L, (IX + 4)	;
864)   1762 23          		 INC HL	;
865)   1763 23          		 INC HL	;
866)   1764 DD 74 05    		 LD (IX + 5), H        ;SAVE DDF_Y	;SAVE DDF_Y
867)   1767 DD 75 04    		 LD (IX + 4), L	;
868)   176A DD 56 09    		 LD D, (IX + 9)        ;F	;F
869)   176D DD 5E 08    		 LD E, (IX + 8)	;
870)   1770 19          		 ADD HL, DE	;
871)   1771 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
872)   1774 DD 75 08    		 LD (IX + 8), L	;
876)   1777 C1          		 POP BC         ;Y1	;Y1
877)   1778 E1          		 POP HL         ;X1	;X1
878)   1779 23          		 INC HL	;
879)   177A DD 74 03    		 LD (IX + 3), H        ;SAVE X1	;SAVE X1
880)   177D DD 75 02    		 LD (IX + 2), L	;
881)   1780 E5          		 PUSH HL        ;X1	;X1
882)   1781 DD 66 07    		 LD H, (IX + 7)        ;DDF_X	;DDF_X
883)   1784 DD 6E 06    		 LD L, (IX + 6)	;
884)   1787 23          		 INC HL	;
885)   1788 23          		 INC HL	;
886)   1789 DD 74 07    		 LD (IX + 7), H        ;SAVE DDF_X	;SAVE DDF_X
887)   178C DD 75 06    		 LD (IX + 6), L	;
888)   178F DD 56 09    		 LD D, (IX + 9)        ;F	;F
889)   1792 DD 5E 08    		 LD E, (IX + 8)	;
890)   1795 19          		 ADD HL, DE	;
891)   1796 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
892)   1799 DD 75 08    		 LD (IX + 8), L	;
895)   179C E1          		 POP HL         ;X1	;X1
896)   179D E5          		 PUSH HL	;
897)   179E DD 56 0F    		 LD D, (IX + 15)       ;X	;X
898)   17A1 DD 5E 0E    		 LD E, (IX + 14)	;
899)   17A4 D5          		 PUSH DE	;
900)   17A5 19          		 ADD HL, DE	;
901)   17A6 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
902)   17A7 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
903)   17AA DD 6E 0C    		 LD L, (IX + 12)	;
904)   17AD 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
906)   17AE CD A2 16    		 CALL PLOTP	;
908)   17B1 E1          		 POP HL         ;X	;X
909)   17B2 D1          		 POP DE         ;X1	;X1
910)   17B3 D5          		 PUSH DE	;
911)   17B4 E5          		 PUSH HL	;
912)   17B5 AF          		 XOR A	;
913)   17B6 ED 52       		 SBC HL, DE	;
914)   17B8 EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
915)   17B9 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
916)   17BC DD 6E 0C    		 LD L, (IX + 12)	;
917)   17BF 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
919)   17C0 CD A2 16    		 CALL PLOTP	;
921)   17C3 E1          		 POP HL         ;X	;X
922)   17C4 D1          		 POP DE         ;X1	;X1
923)   17C5 D5          		 PUSH DE	;
924)   17C6 E5          		 PUSH HL	;
925)   17C7 19          		 ADD HL, DE	;
926)   17C8 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
927)   17C9 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
928)   17CC DD 6E 0C    		 LD L, (IX + 12)	;
929)   17CF AF          		 XOR A	;
930)   17D0 ED 42       		 SBC HL, BC        ;HL=Y+Y1	;HL=Y+Y1
932)   17D2 CD A2 16    		 CALL PLOTP	;
934)   17D5 E1          		 POP HL         ;X	;X
935)   17D6 D1          		 POP DE         ;X1	;X1
936)   17D7 D5          		 PUSH DE	;
937)   17D8 E5          		 PUSH HL	;
938)   17D9 AF          		 XOR A	;
939)   17DA ED 52       		 SBC HL, DE	;
940)   17DC EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
941)   17DD DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
942)   17E0 DD 6E 0C    		 LD L, (IX + 12)	;
943)   17E3 AF          		 XOR A	;
944)   17E4 ED 42       		 SBC HL, BC        ;HL=Y-Y1	;HL=Y-Y1
946)   17E6 CD A2 16    		 CALL PLOTP	;
948)   17E9 E1          		 POP HL         ;X	;X
949)   17EA D1          		 POP DE         ;X1	;X1
950)   17EB C5          		 PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
951)   17EC E5          		 PUSH HL        ;SAVE X	;SAVE X
952)   17ED D5          		 PUSH DE        ;SAVE X1	;SAVE X1
953)   17EE 09          		 ADD HL, BC        ;	;
954)   17EF C1          		 POP BC         ;BC=X1	;BC=X1
955)   17F0 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
956)   17F1 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
957)   17F4 DD 6E 0C    		 LD L, (IX + 12)	;
958)   17F7 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
960)   17F8 CD A2 16    		 CALL PLOTP	;
962)   17FB E1          		 POP HL         ;X	;X
963)   17FC D1          		 POP DE         ;Y1	;Y1
964)   17FD D5          		 PUSH DE	;
965)   17FE E5          		 PUSH HL	;
966)   17FF AF          		 XOR A	;
967)   1800 ED 52       		 SBC HL, DE	;
968)   1802 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
969)   1803 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
970)   1806 DD 6E 0C    		 LD L, (IX + 12)	;
971)   1809 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
973)   180A CD A2 16    		 CALL PLOTP	;
975)   180D E1          		 POP HL         ;X	;X
976)   180E D1          		 POP DE         ;Y1	;Y1
977)   180F D5          		 PUSH DE	;
978)   1810 E5          		 PUSH HL	;
979)   1811 19          		 ADD HL, DE	;
980)   1812 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
981)   1813 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
982)   1816 DD 6E 0C    		 LD L, (IX + 12)	;
983)   1819 AF          		 XOR A	;
984)   181A ED 42       		 SBC HL, BC        ;HL=Y-X1	;HL=Y-X1
985)   181C E5          		 PUSH HL	;
987)   181D CD A2 16    		 CALL PLOTP	;
989)   1820 C1          		 POP BC         ;Y-X1	;Y-X1
990)   1821 E1          		 POP HL         ;X	;X
991)   1822 D1          		 POP DE         ;Y1	;Y1
992)   1823 AF          		 XOR A	;
993)   1824 ED 52       		 SBC HL, DE	;
994)   1826 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
995)   1827 C5          		 PUSH BC	;
996)   1828 E1          		 POP HL         ;HL=Y-X1	;HL=Y-X1
998)   1829 CD A2 16    		 CALL PLOTP	;
999)   182C C3 31 17    		 JP CIRC_AGN	;
1000)   182F CD 1A 14    		CIRC_EXIT: CALL LCD_CLRXY	;
1001)   1832 D1          		 POP DE         ;GET RET ADDR	;GET RET ADDR
1002)   1833 21 10 00    		 LD HL, 8 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
1003)   1836 39          		 ADD HL, SP        ;	;
1004)   1837 F9          		 LD SP, HL	;
1005)   1838 EB          		 EX DE, HL	;
1006)   1839 E9          		 JP (HL)	;
1013)   183A D9          		 EXX	;
1014)   183B D1          		 POP DE         ;save return addr to de'	;save return addr to de'
1015)   183C D9          		 EXX	;
1016)   183D CD DB 1A    		 CALL _FILL	;
1017)   1840 D9          		 EXX	;
1018)   1841 D5          		 PUSH DE        ;restore return addr from de'	;restore return addr from de'
1019)   1842 D9          		 EXX	;
1020)   1843 C9          		 RET	;
1027)   1844 FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
1028)   1846 CA 56 18    		 JP Z, PRCH_DOBCKSPC	;
1029)   1849 FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
1030)   184B C8          		 RET Z	;
1031)   184C FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
1032)   184E 20 3A       		 JR NZ, PRCH_DOPRN	;
1033)   1850 21 0D FE    		 LD HL, CURSORX	;
1034)   1853 C3 A3 19    		 JP PRCH_NEWLN	;
1036)   1856 21 0D FE    		 LD HL, CURSORX	;
1037)   1859 7E          		 LD A, (HL)	;
1038)   185A 38 05       		 JR C, DOREALBCKSPC	;
1040)   185C FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1041)   185E C8          		 RET Z	;
1042)   185F 35          		 DEC (HL)	;
1043)   1860 C9          		 RET	;
1045)   1861 FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
1046)   1863 28 0A       		 JR Z, PRCH_DOBCKSPC2       ;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER	;IF 0 WE ARE ON THE 1ST COLUMN SO NOTHING TO DO JUST DELETE THE 8=BS FROM BUFFER
1047)   1865 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1048)   1866 E5          		 PUSH HL	;
1049)   1867 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
1050)   1869 CD 8A 18    		 CALL PRCH_DOPRN       ;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN	;THIS FORWARDS THE CURSOR SO WE SHOULD GO BACK AGAIN
1051)   186C E1          		 POP HL	;
1052)   186D 35          		 DEC (HL)        ;GO 1 POSITION BACK	;GO 1 POSITION BACK
1053)   186E B7          		 OR A	;
1057)   186F DD 21 02 00 		 LD IX, 2	;
1058)   1873 DD 39       		 ADD IX, SP	;
1059)   1875 DD 66 01    		 LD H, (IX + 1)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1060)   1878 DD 6E 00    		 LD L, (IX)        ;POSITION IN ACCS FOR THE NEW CHARACTER	;POSITION IN ACCS FOR THE NEW CHARACTER
1061)   187B 3E 00       		 LD A, 0        ;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG	;NOT XOR WE DONT WANT TO MESS WITH ZERO FLAG
1062)   187D 28 02       		 JR Z, PRCH_SKIP1       ;WE ARE ON COLUMN 1	;WE ARE ON COLUMN 1
1063)   187F 2B          		 DEC HL         ;PREVIOUS POSITION DELETE BACKSPACE	;PREVIOUS POSITION DELETE BACKSPACE
1064)   1880 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1066)   1881 2B          		 DEC HL         ;PREVIOUS POSITION DELETE PREVIOUS CHAR	;PREVIOUS POSITION DELETE PREVIOUS CHAR
1067)   1882 77          		 LD (HL), A        ;PUT 0 ON LAST POSITION	;PUT 0 ON LAST POSITION
1068)   1883 DD 74 01    		 LD (IX + 1), H        ;PUT POSITION BACK ON STACK IT WILL POPED	;PUT POSITION BACK ON STACK IT WILL POPED
1069)   1886 DD 75 00    		 LD (IX), L	;
1070)   1889 C9          		 RET	;
1073)   188A F5          		 PUSH AF        ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
1074)   188B 32 10 FE    		 LD (LASTCHAR), A       ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
1078)   188E 3A 16 FE    		 LD A, (VDUMODE)	;
1079)   1891 FE 05       		 CP 5	;
1080)   1893 20 19       		 JR NZ, VDU4	;
1081)   1895 2A 5F FE    		 LD HL, (GR_LASTX)	;
1082)   1898 E5          		 PUSH HL	;
1083)   1899 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
1084)   189D D5          		 PUSH DE	;
1085)   189E 01 07 00    		 LD BC, FONT_WIDTH - 1	;
1086)   18A1 09          		 ADD HL, BC	;
1087)   18A2 E5          		 PUSH HL	;
1088)   18A3 01 09 00    		 LD BC, FONT_HEIGHT - 1	;
1089)   18A6 EB          		 EX DE, HL	;
1090)   18A7 09          		 ADD HL, BC	;
1091)   18A8 E5          		 PUSH HL	;
1092)   18A9 CD 65 13    		 CALL LCD_SETXY	;
1093)   18AC 18 34       		 JR PRCHDO	;
1094)   18AE 3A 0D FE    		VDU4: LD A, (CURSORX)	;
1095)   18B1 06 08       		 LD B, FONT_WIDTH	;
1096)   18B3 16 00       		 LD D, 0	;
1097)   18B5 5F          		 LD E, A	;
1098)   18B6 21 00 00    		 LD HL, 0	;
1099)   18B9 B7          		 OR A         ; CLEAR CARRY	; CLEAR CARRY
1101)   18BA ED 5A       		 ADC HL, DE	;
1102)   18BC 10 FC       		 DJNZ PRCH_AGN1        ;HL=DE*B	;HL=DE*B
1103)   18BE E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1104)   18BF 11 08 00    		 LD DE, FONT_WIDTH	;
1105)   18C2 ED 5A       		 ADC HL, DE	;
1106)   18C4 2B          		 DEC HL	;
1107)   18C5 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1109)   18C6 CD 18 19    		 CALL LCD_CALCLINE       ;SCROLL CALC	;SCROLL CALC
1110)   18C9 06 0A       		 LD B, FONT_HEIGHT	;
1111)   18CB 16 00       		 LD D, 0	;
1112)   18CD 5F          		 LD E, A	;
1113)   18CE 21 00 00    		 LD HL, 0	;
1115)   18D1 ED 5A       		 ADC HL, DE	;
1116)   18D3 10 FC       		 DJNZ PRCH_AGN2	;
1117)   18D5 D1          		 POP DE         ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
1118)   18D6 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1119)   18D7 D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1120)   18D8 11 0A 00    		 LD DE, FONT_HEIGHT	;
1121)   18DB ED 5A       		 ADC HL, DE        ;CALC 4TH PARAM	;CALC 4TH PARAM
1122)   18DD 2B          		 DEC HL         ;4TH PARAM -1	;4TH PARAM -1
1123)   18DE E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1124)   18DF CD 65 13    		 CALL LCD_SETXY	;
1125)   18E2 F1          		PRCHDO: POP AF         ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
1126)   18E3 B7          		 OR A	;
1127)   18E4 21 00 75    		 LD HL, FONT_ADDR	;
1128)   18E7 16 00       		 LD D, 0	;
1129)   18E9 5F          		 LD E, A	;
1130)   18EA ED 5A       		 ADC HL, DE        ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
1131)   18EC E5          		 PUSH HL	;
1132)   18ED D1          		 POP DE         ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
1133)   18EE 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
1135)   18F0 1A          		 LD A, (DE)        ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1136)   18F1 06 08       		 LD B, FONT_WIDTH	;
1138)   18F3 CB 27       		 SLA A         ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1139)   18F5 38 05       		 JR C, FORECOLOR	;
1140)   18F7 2A 03 FE    		 LD HL, (BCOLOR)	;
1141)   18FA 18 03       		 JR PRCH_CONT	;
1143)   18FC 2A 01 FE    		 LD HL, (FCOLOR)	;
1145)   18FF F5          		 PUSH AF	;
1146)   1900 D5          		 PUSH DE        ;TODO:PROBABLY NOT NEEDED HERE	;TODO:PROBABLY NOT NEEDED HERE
1147)   1901 CD B2 13    		 CALL LCD_SETPIXEL	;
1148)   1904 D1          		 POP DE	;
1149)   1905 F1          		 POP AF	;
1150)   1906 10 EB       		 DJNZ PRCH_AGN4	;
1151)   1908 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1152)   1909 0D          		 DEC C	;
1153)   190A 20 E4       		 JR NZ, PRCH_AGN3	;
1155)   190C 21 0D FE    		 LD HL, CURSORX	;
1156)   190F 7E          		 LD A, (HL)	;
1157)   1910 3C          		 INC A	;
1158)   1911 FE 50       		 CP 80	;
1159)   1913 CA A3 19    		 JP Z, PRCH_NEWLN       ;NEW LINE	;NEW LINE
1160)   1916 77          		 LD (HL), A	;
1161)   1917 C9          		 RET	;
1164)   1918 3A 0F FE    		@LCD_CALCLINE: LD A, (SCRLN)	;
1165)   191B 57          		 LD D, A	;
1166)   191C 3A 0E FE    		 LD A, (CURSORY)       ;480/10 MAKES 48 LINES	;480/10 MAKES 48 LINES
1167)   191F 82          		 ADD A, D	;
1168)   1920 FE 30       		 CP TOTLINES	;
1169)   1922 D8          		 RET C	;
1171)   1923 D6 30       		 SUB TOTLINES	;
1172)   1925 C9          		 RET	;
1177)   1926 16 33       		LCD_SETSCROLL: LD D, 0x33	;
1178)   1928 CD EC 11    		 CALL LCD_WR_COM	;
1179)   192B 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
1180)   192D CD E8 11    		 CALL LCD_WR_DAT	;
1181)   1930 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
1182)   1932 CD E8 11    		 CALL LCD_WR_DAT	;
1183)   1935 16 01       		 LD D, 0X01        ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
1184)   1937 CD E8 11    		 CALL LCD_WR_DAT	;
1185)   193A 16 E0       		 LD D, 0XE0        ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
1186)   193C CD E8 11    		 CALL LCD_WR_DAT	;
1187)   193F 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
1188)   1941 CD E8 11    		 CALL LCD_WR_DAT	;
1189)   1944 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
1190)   1946 CD E8 11    		 CALL LCD_WR_DAT	;
1191)   1949 AF          		 XOR A	;
1192)   194A 32 0F FE    		 LD (SCRLN), A	;
1193)   194D C9          		 RET	;
1196)   194E 3A 0F FE    		@LCD_DOSCROLL: LD A, (SCRLN)	;
1197)   1951 3C          		 INC A	;
1198)   1952 FE 30       		 CP TOTLINES	;
1199)   1954 38 02       		 JR C, DS_NXT	;
1200)   1956 D6 30       		 SUB TOTLINES	;
1201)   1958 32 0F FE    		DS_NXT: LD (SCRLN), A	;
1202)   195B 6F          		 LD L, A	;
1203)   195C 26 00       		 LD H, 0	;
1204)   195E 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1205)   195F 29          		 ADD HL, HL	;
1206)   1960 29          		 ADD HL, HL	;
1207)   1961 5F          		 LD E, A	;
1208)   1962 16 00       		 LD D, 0	;
1209)   1964 19          		 ADD HL, DE	;
1210)   1965 19          		 ADD HL, DE	;
1211)   1966 16 37       		 LD D, 0x37	;
1212)   1968 CD EC 11    		 CALL LCD_WR_COM	;
1213)   196B 54          		 LD D, H        ;NEW TOP SCROLL LINE BYTES HIGH (1-480)	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
1214)   196C CD E8 11    		 CALL LCD_WR_DAT	;
1215)   196F 55          		 LD D, L        ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
1216)   1970 CD E8 11    		 CALL LCD_WR_DAT	;
1217)   1973 C9          		 RET	;
1220)   1974 11 00 00    		@LCD_CLRTXTLN: LD DE, 0	;
1222)   1977 D5          		 PUSH DE	;
1223)   1978 6F          		 LD L, A	;
1224)   1979 26 00       		 LD H, 0	;
1225)   197B 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
1226)   197C 29          		 ADD HL, HL	;
1227)   197D 29          		 ADD HL, HL	;
1228)   197E 5F          		 LD E, A	;
1229)   197F 16 00       		 LD D, 0	;
1230)   1981 19          		 ADD HL, DE	;
1231)   1982 19          		 ADD HL, DE	;
1233)   1983 E5          		 PUSH HL	;
1234)   1984 11 0A 00    		 LD DE, FONT_HEIGHT	;
1235)   1987 19          		 ADD HL, DE	;
1237)   1988 EB          		 EX DE, HL	;
1238)   1989 21 1F 03    		 LD HL, LCD_WIDTH	;
1240)   198C E5          		 PUSH HL	;
1241)   198D D5          		 PUSH DE        ;PARAM4	;PARAM4
1242)   198E CD 65 13    		 CALL LCD_SETXY	;
1243)   1991 01 40 1F    		 LD BC, 8000        ; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
1244)   1994 2A 03 FE    		 LD HL, (BCOLOR)	;
1245)   1997 CD B2 13    		CTL_AGN: CALL LCD_SETPIXEL      ;DESTROYS D,A	;DESTROYS D,A
1246)   199A 0B          		 DEC BC	;
1247)   199B 78          		 LD A, B	;
1248)   199C B1          		 OR C	;
1249)   199D 20 F8       		 JR NZ, CTL_AGN	;
1250)   199F CD 1A 14    		 CALL LCD_CLRXY	;
1251)   19A2 C9          		 RET	;
1255)   19A3 AF          		 XOR A	;
1256)   19A4 77          		 LD (HL), A	;
1257)   19A5 23          		 INC HL	;
1258)   19A6 7E          		 LD A, (HL)	;
1259)   19A7 3C          		 INC A	;
1261)   19A8 FE 30       		 CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
1262)   19AA 28 02       		 JR Z, PRCH_SCROLL	;
1263)   19AC 77          		 LD (HL), A	;
1264)   19AD C9          		 RET	;
1266)   19AE F5          		PRCH_SCROLL: PUSH AF	;
1267)   19AF E5          		 PUSH HL	;
1269)   19B0 3A 0F FE    		 LD A, (SCRLN)	;
1270)   19B3 CD 74 19    		 CALL LCD_CLRTXTLN	;
1272)   19B6 CD 4E 19    		 CALL LCD_DOSCROLL	;
1273)   19B9 E1          		 POP HL	;
1274)   19BA F1          		 POP AF	;
1276)   19BB 3D          		 DEC A	;
1277)   19BC 77          		 LD (HL), A        ;CURSORY	;CURSORY
1278)   19BD AF          		 XOR A	;
1279)   19BE 32 0D FE    		 LD (CURSORX), A	;
1280)   19C1 C9          		 RET	;
1295)   19C2 2A 03 FE    		 LD HL, (BCOLOR)       ;	;
1296)   19C5 18 03       		 JR LCD_SETCURS	;
1307)   19C7 2A 01 FE    		 LD HL, (FCOLOR)       ;COLOR PARAM	;COLOR PARAM
1310)   19CA E5          		 PUSH HL        ;COLOR PARAM	;COLOR PARAM
1311)   19CB 3A 0D FE    		 LD A, (CURSORX)	;
1312)   19CE 06 08       		 LD B, FONT_WIDTH	;
1313)   19D0 16 00       		 LD D, 0	;
1314)   19D2 5F          		 LD E, A	;
1315)   19D3 21 00 00    		 LD HL, 0	;
1316)   19D6 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
1318)   19D7 ED 5A       		 ADC HL, DE	;
1319)   19D9 10 FC       		 DJNZ SCUR_AGN1        ;HL = DE * B	;HL = DE * B
1320)   19DB E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
1321)   19DC 01 08 00    		 LD BC, FONT_WIDTH	;
1322)   19DF ED 4A       		 ADC HL, BC        ;NEXT CHAR	;NEXT CHAR
1323)   19E1 2B          		 DEC HL         ;MINUS 1	;MINUS 1
1324)   19E2 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
1326)   19E3 CD 18 19    		 CALL LCD_CALCLINE	;
1327)   19E6 06 0A       		 LD B, FONT_HEIGHT	;
1328)   19E8 16 00       		 LD D, 0	;
1329)   19EA 5F          		 LD E, A	;
1330)   19EB 21 00 00    		 LD HL, 0	;
1332)   19EE ED 5A       		 ADC HL, DE	;
1333)   19F0 10 FC       		 DJNZ SCUR_AGN2        ;HL=B*DE	;HL=B*DE
1334)   19F2 0E 08       		 LD C, FONT_HEIGHT - 2       ;2 PIXEL HEIGTH CURSOR	;2 PIXEL HEIGTH CURSOR
1335)   19F4 06 00       		 LD B, 0	;
1336)   19F6 ED 4A       		 ADC HL, BC        ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
1337)   19F8 D1          		 POP DE         ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
1338)   19F9 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
1339)   19FA D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
1341)   19FB 23          		 INC HL         ; Y2 ADD THE LAST +2 PIXELS	; Y2 ADD THE LAST +2 PIXELS
1342)   19FC E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
1343)   19FD CD 65 13    		 CALL LCD_SETXY	;
1345)   1A00 E1          		 POP HL         ;GET THE COLOR	;GET THE COLOR
1346)   1A01 06 10       		 LD B, 2 * FONT_WIDTH       ;2*8=16	;2*8=16
1348)   1A03 CD B2 13    		 CALL LCD_SETPIXEL       ;DESTROYS D,A	;DESTROYS D,A
1349)   1A06 10 FB       		 DJNZ SCUR_AGN3	;
1354)   1A08 C9          		 RET	;
1357)   1A09 CD 1A 14    		 CALL LCD_CLRXY        ;	;
1358)   1A0C 2A 03 FE    		 LD HL, (BCOLOR)	;
1360)   1A0F 01 E0 01    		 LD BC, LCD_HEIGHT + 1	;
1361)   1A12 C5          		CS_AGNA2: PUSH BC	;
1362)   1A13 01 20 03    		 LD BC, LCD_WIDTH + 1	;
1363)   1A16 CD B2 13    		CS_AGNA1: CALL LCD_SETPIXEL      ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1364)   1A19 0B          		 DEC BC	;
1365)   1A1A 78          		 LD A, B	;
1366)   1A1B B1          		 OR C	;
1367)   1A1C 20 F8       		 JR NZ, CS_AGNA1	;
1368)   1A1E C1          		 POP BC	;
1369)   1A1F 0B          		 DEC BC	;
1370)   1A20 78          		 LD A, B	;
1371)   1A21 B1          		 OR C	;
1372)   1A22 20 EE       		 JR NZ, CS_AGNA2	;
1373)   1A24 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1374)   1A27 22 0D FE    		 LD (CURSORX), HL	;
1375)   1A2A C9          		 RET	;
1380)   1A2B 06 DF       		 LD B, LCD_HEIGHT.AND.0xFF      ;lsb	;lsb
1381)   1A2D 0E 02       		 LD C, LCD_HEIGHT.SHR.8 + 1      ;MSB+1	;MSB+1
1383)   1A2F C5          		 PUSH BC	;
1385)   1A30 06 1F       		 LD B, LCD_WIDTH.AND.0xFF      ;lsb	;lsb
1386)   1A32 0E 04       		 LD C, LCD_WIDTH.SHR.8 + 1      ;MSV+1	;MSV+1
1388)   1A34 CD B2 13    		 CALL LCD_SETPIXEL       ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
1389)   1A37 10 FB       		 DJNZ CS_AGN1	;
1390)   1A39 0D          		 DEC C	;
1391)   1A3A 20 F8       		 JR NZ, CS_AGN1	;
1392)   1A3C C1          		 POP BC	;
1393)   1A3D 10 F0       		 DJNZ CS_AGN2	;
1394)   1A3F 0D          		 DEC C	;
1395)   1A40 20 ED       		 JR NZ, CS_AGN2	;
1396)   1A42 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
1397)   1A45 22 0D FE    		 LD (CURSORX), HL	;
1398)   1A48 C9          		 RET	;
1404)   1A49 7E          		 LD A, (HL)	;
1405)   1A4A FE 00       		 CP 0	;
1406)   1A4C C8          		 RET Z	;
1407)   1A4D E5          		 PUSH HL	;
1408)   1A4E CD 44 18    		 CALL LCD_PRINTCHAR	;
1409)   1A51 E1          		 POP HL	;
1410)   1A52 23          		 INC HL	;
1411)   1A53 18 F4       		 JR LCD_MSG	;
  3)   1A55 AF          		NEGHL: xor a	;
  4)   1A56 95          		 sub l	;
  5)   1A57 6F          		 ld l, a	;
  6)   1A58 9F          		 sbc a, a	;
  7)   1A59 94          		 sub h	;
  8)   1A5A 67          		 ld h, a	;
  9)   1A5B C9          		 RET	;
 13)   1A5C 2A 79 FE    		 LD HL, (FILL_IDX)	;
 14)   1A5F 01 58 02    		 LD BC, MAXQ	;
 15)   1A62 A7          		 AND A	;
 16)   1A63 ED 42       		 SBC HL, BC	;
 17)   1A65 D0          		 RET NC     ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 18)   1A66 2A 7B FE    		 LD HL, (FILL_PY)	;
 19)   1A69 ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 20)   1A6D 19          		 ADD HL, DE	;
 21)   1A6E 7C          		 LD A, H	;
 22)   1A6F FE 80       		 CP 80H	;
 23)   1A71 D0          		 RET NC     ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 24)   1A72 11 1F 03    		 LD DE, LCD_WIDTH	;
 25)   1A75 ED 52       		 SBC HL, DE	;
 26)   1A77 D0          		 RET NC      ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 28)   1A78 2A 77 FE    		 LD HL, (FILL_Q)	;
 29)   1A7B ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 30)   1A7F 78          		 LD A, B	;
 31)   1A80 B1          		 OR C       ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 32)   1A81 28 08       		 JR Z, QPS_NXT1	;
 33)   1A83 EB          		 EX DE, HL	;
 34)   1A84 C5          		 PUSH BC	;
 35)   1A85 E1          		 POP HL	;
 36)   1A86 29          		 ADD HL, HL	;
 37)   1A87 29          		 ADD HL, HL	;
 38)   1A88 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 39)   1A89 EB          		 EX DE, HL	;
 40)   1A8A 19          		 ADD HL, DE	;
 42)   1A8B 11 7B FE    		 LD DE, FILL_PY	;
 43)   1A8E EB          		 EX DE, HL      ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 44)   1A8F 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 45)   1A92 ED B0       		 LDIR       ;COPY	;COPY
 46)   1A94 2A 79 FE    		 LD HL, (FILL_IDX)	;
 47)   1A97 23          		 INC HL	;
 48)   1A98 22 79 FE    		 LD (FILL_IDX), HL	;
 49)   1A9B C9          		QPS_EXT: RET	;
 51)   1A9C 2A 77 FE    		QPOP: LD HL, (FILL_Q)	;
 52)   1A9F ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 53)   1AA3 0B          		 DEC BC	;
 54)   1AA4 C5          		 PUSH BC	;
 55)   1AA5 78          		 LD A, B	;
 56)   1AA6 B1          		 OR C       ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 57)   1AA7 28 08       		 JR Z, QPP_NXT1	;
 58)   1AA9 EB          		 EX DE, HL	;
 59)   1AAA C5          		 PUSH BC	;
 60)   1AAB E1          		 POP HL	;
 61)   1AAC 29          		 ADD HL, HL	;
 62)   1AAD 29          		 ADD HL, HL	;
 63)   1AAE 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 64)   1AAF EB          		 EX DE, HL	;
 65)   1AB0 19          		 ADD HL, DE	;
 66)   1AB1 C1          		QPP_NXT1: POP BC	;
 67)   1AB2 ED 43 79 FE 		 LD (FILL_IDX), BC	;
 69)   1AB6 11 7B FE    		 LD DE, FILL_PY     ;ORIGIN=QUEUE DEST=FILL_PY	;ORIGIN=QUEUE DEST=FILL_PY
 70)   1AB9 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 71)   1ABC ED B0       		 LDIR       ;COPY	;COPY
 72)   1ABE 2A 7D FE    		 LD HL, (FILL_PXL)	;
 73)   1AC1 22 71 FE    		 LD (FILL_X1), HL	;
 74)   1AC4 2A 7F FE    		 LD HL, (FILL_PXR)	;
 75)   1AC7 22 73 FE    		 LD (FILL_X2), HL	;
 76)   1ACA ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 77)   1ACE ED 53 75 FE 		 LD (FILL_DY), DE	;
 78)   1AD2 2A 7B FE    		 LD HL, (FILL_PY)	;
 79)   1AD5 A7          		 AND A	;
 80)   1AD6 19          		 ADD HL, DE	;
 81)   1AD7 22 6D FE    		 LD (FILL_Y), HL	;
 89)   1ADA C9          		 RET	;
 91)   1ADB E1          		@_FILL: POP HL     ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 92)   1ADC D1          		 POP DE      ;Y	;Y
 93)   1ADD C1          		 POP BC      ;X	;X
 94)   1ADE E5          		 PUSH HL      ;RET ADDR TO SP	;RET ADDR TO SP
 95)   1ADF ED 43 6B FE 		 LD (FILL_X), BC	;
 96)   1AE3 ED 53 6D FE 		 LD (FILL_Y), DE	;
 97)   1AE7 ED 73 85 FE 		 LD (FILL_OLDSP), SP	;
 98)   1AEB 21 3E ED    		 LD HL, - ((MAXQ * 8) + 2)  ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
 99)   1AEE 39          		 ADD HL, SP	;
100)   1AEF F9          		 LD SP, HL      ;NEW SP	;NEW SP
103)   1AF0 22 77 FE    		 LD (FILL_Q), HL     ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
104)   1AF3 21 00 00    		 LD HL, 0	;
105)   1AF6 22 79 FE    		 LD (FILL_IDX), HL    ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
109)   1AF9 2A 6B FE    		 LD HL, (FILL_X)    ;	;
110)   1AFC E5          		 PUSH HL	;
111)   1AFD 2A 6D FE    		 LD HL, (FILL_y)    ;	;
112)   1B00 E5          		 PUSH HL	;
113)   1B01 CD C9 13    		 CALL LCD_READPIXEL	;
114)   1B04 22 83 FE    		 LD (FILL_OV), HL	;
116)   1B07 ED 5B 01 FE 		 LD DE, (FCOLOR)	;
117)   1B0B A7          		 AND A	;
118)   1B0C ED 52       		 SBC HL, DE      ;CHK OV=NV	;CHK OV=NV
119)   1B0E CA 93 1C    		 JP Z, FL_EXIT	;
120)   1B11 2A 6B FE    		 LD HL, (FILL_X)	;
121)   1B14 7C          		 LD A, H	;
122)   1B15 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
123)   1B17 D2 93 1C    		 JP NC, FL_EXIT	;
124)   1B1A 11 1F 03    		 LD DE, LCD_WIDTH	;
125)   1B1D A7          		 AND A	;
126)   1B1E ED 52       		 SBC HL, DE      ;CHK>799	;CHK>799
127)   1B20 D2 93 1C    		 JP NC, FL_EXIT	;
128)   1B23 2A 6D FE    		 LD HL, (FILL_Y)	;
129)   1B26 7C          		 LD A, H	;
130)   1B27 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
131)   1B29 D2 93 1C    		 JP NC, FL_EXIT	;
132)   1B2C 11 DF 01    		 LD DE, LCD_HEIGHT	;
133)   1B2F A7          		 AND A	;
134)   1B30 ED 52       		 SBC HL, DE      ;CHK>480	;CHK>480
135)   1B32 D2 93 1C    		 JP NC, FL_EXIT	;
137)   1B35 2A 6D FE    		 LD HL, (FILL_Y)	;
138)   1B38 22 7B FE    		 LD (FILL_PY), HL	;
139)   1B3B 2A 6B FE    		 LD HL, (FILL_X)	;
140)   1B3E 22 7D FE    		 LD (FILL_PXL), HL	;
141)   1B41 22 7F FE    		 LD (FILL_PXR), HL	;
142)   1B44 21 01 00    		 LD HL, 1	;
143)   1B47 22 81 FE    		 LD (FILL_PDY), HL	;
144)   1B4A CD 5C 1A    		 CALL QPUSH      ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
146)   1B4D 2A 6D FE    		 LD HL, (FILL_Y)	;
147)   1B50 23          		 INC HL	;
148)   1B51 22 7B FE    		 LD (FILL_PY), HL	;
149)   1B54 21 FF FF    		 LD HL, - 1	;
150)   1B57 22 81 FE    		 LD (FILL_PDY), HL	;
151)   1B5A CD 5C 1A    		 CALL QPUSH	;
153)   1B5D ED 5B 79 FE 		 LD DE, (FILL_IDX)	;
154)   1B61 7A          		 LD A, D	;
155)   1B62 B3          		 OR E	;
156)   1B63 CA 93 1C    		 JP Z, FL_EXIT     ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
160)   1B66 CD 9C 1A    		 CALL QPOP      ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
163)   1B69 2A 71 FE    		 LD HL, (FILL_X1)	;
164)   1B6C 22 6B FE    		 LD (FILL_X), HL	;
165)   1B6F 7C          		FL_LP1: LD A, H	;
166)   1B70 FE 80       		 CP 0x80      ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
167)   1B72 D2 9A 1B    		 JP NC, FL_NXT1	;
168)   1B75 ED 5B 6D FE 		 LD DE, (FILL_Y)	;
169)   1B79 E5          		 PUSH HL	;
170)   1B7A D5          		 PUSH DE	;
171)   1B7B CD C9 13    		 CALL LCD_READPIXEL	;
172)   1B7E ED 5B 83 FE 		 LD DE, (FILL_OV)	;
173)   1B82 A7          		 AND A	;
174)   1B83 ED 52       		 SBC HL, DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
175)   1B85 C2 9A 1B    		 JP NZ, FL_NXT1	;
176)   1B88 ED 5B 6B FE 		 LD DE, (FILL_X)	;
177)   1B8C 2A 6D FE    		 LD HL, (FILL_Y)	;
178)   1B8F D5          		 PUSH DE	;
179)   1B90 CD A2 16    		 CALL PLOTP	;
180)   1B93 E1          		 POP HL	;
181)   1B94 2B          		 DEC HL	;
182)   1B95 22 6B FE    		 LD (FILL_X), HL	;
183)   1B98 18 D5       		 JR FL_LP1	;
187)   1B9A 2A 6B FE    		 LD HL, (FILL_X)	;
188)   1B9D ED 5B 71 FE 		 LD DE, (FILL_X1)	;
189)   1BA1 7C          		 LD A, H	;
190)   1BA2 FE 80       		 CP 80H	;
191)   1BA4 30 08       		 JR NC, FL_NXT1A     ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
192)   1BA6 A7          		 AND A	;
193)   1BA7 ED 52       		 SBC HL, DE      ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
194)   1BA9 D2 51 1C    		 JP NC, FL_SKIP     ;C IF DE>HL X1>X, NC IF X>=X1	;C IF DE>HL X1>X, NC IF X>=X1
195)   1BAC ED 5A       		 ADC HL, DE	;
198)   1BAE 23          		 INC HL	;
199)   1BAF 22 6F FE    		 LD (FILL_L), HL	;
202)   1BB2 A7          		 AND A	;
203)   1BB3 ED 52       		 SBC HL, DE      ;CHK L-X1	;CHK L-X1
204)   1BB5 30 1E       		 JR NC, FL_NXT2     ;C IF DE>HL X1>L	;C IF DE>HL X1>L
205)   1BB7 28 1C       		 JR Z, FL_NXT2	;
206)   1BB9 ED 5A       		 ADC HL, DE	;
207)   1BBB 22 7D FE    		 LD (FILL_PXL), HL    ;L	;L
208)   1BBE 2A 6D FE    		 LD HL, (FILL_Y)	;
209)   1BC1 22 7B FE    		 LD (FILL_PY), HL	;
210)   1BC4 1B          		 DEC DE	;
211)   1BC5 ED 53 7F FE 		 LD (FILL_PXR), DE	;
212)   1BC9 2A 75 FE    		 LD HL, (FILL_DY)	;
213)   1BCC CD 55 1A    		 CALL NEGHL	;
214)   1BCF 22 81 FE    		 LD (FILL_PDY), HL	;
215)   1BD2 CD 5C 1A    		 CALL QPUSH	;
219)   1BD5 2A 71 FE    		 LD HL, (FILL_X1)     ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
220)   1BD8 23          		 INC HL	;
221)   1BD9 22 6B FE    		 LD (FILL_X), HL	;
225)   1BDC 11 1F 03    		 LD DE, LCD_WIDTH	;
226)   1BDF A7          		 AND A	;
227)   1BE0 EB          		 EX DE, HL	;
228)   1BE1 ED 52       		 SBC HL, DE      ;800-(X=DE)	;800-(X=DE)
229)   1BE3 38 24       		 JR C, FL_NXT3     ;C IF X>800	;C IF X>800
230)   1BE5 EB          		 EX DE, HL      ;HL=X	;HL=X
231)   1BE6 E5          		 PUSH HL	;
232)   1BE7 2A 6D FE    		 LD HL, (FILL_Y)	;
233)   1BEA E5          		 PUSH HL	;
234)   1BEB CD C9 13    		 CALL LCD_READPIXEL	;
235)   1BEE ED 5B 83 FE 		 LD DE, (FILL_OV)	;
236)   1BF2 A7          		 AND A	;
237)   1BF3 ED 52       		 SBC HL, DE      ;PIXELREAD=OV	;PIXELREAD=OV
238)   1BF5 20 12       		 JR NZ, FL_NXT3	;
239)   1BF7 ED 5B 6B FE 		 LD DE, (FILL_X)	;
240)   1BFB 2A 6D FE    		 LD HL, (FILL_Y)	;
241)   1BFE D5          		 PUSH DE	;
242)   1BFF CD A2 16    		 CALL PLOTP	;
243)   1C02 E1          		 POP HL	;
244)   1C03 23          		 INC HL	;
245)   1C04 22 6B FE    		 LD (FILL_X), HL	;
246)   1C07 18 D3       		 JR FL_LP2	;
249)   1C09 2A 6D FE    		 LD HL, (FILL_Y)	;
250)   1C0C 22 7B FE    		 LD (FILL_PY), HL	;
251)   1C0F 2A 6F FE    		 LD HL, (FILL_L)	;
252)   1C12 22 7D FE    		 LD (FILL_PXL), HL	;
253)   1C15 2A 6B FE    		 LD HL, (FILL_X)	;
254)   1C18 2B          		 DEC HL	;
255)   1C19 22 7F FE    		 LD (FILL_PXR), HL	;
256)   1C1C 2A 75 FE    		 LD HL, (FILL_DY)	;
257)   1C1F 22 81 FE    		 LD (FILL_PDY), HL	;
258)   1C22 CD 5C 1A    		 CALL QPUSH	;
260)   1C25 2A 6B FE    		 LD HL, (FILL_X)	;
261)   1C28 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
262)   1C2C 13          		 INC DE	;
263)   1C2D A7          		 AND A	;
264)   1C2E ED 52       		 SBC HL, DE      ;X-(X2+1) C IF X2+1>X	;X-(X2+1) C IF X2+1>X
265)   1C30 38 1F       		 JR C, FL_NXT4	;
266)   1C32 28 1D       		 JR Z, FL_NXT4	;
267)   1C34 2A 6D FE    		 LD HL, (FILL_Y)	;
268)   1C37 22 7B FE    		 LD (FILL_PY), HL	;
269)   1C3A ED 53 7D FE 		 LD (FILL_PXL), DE	;
270)   1C3E 2A 6B FE    		 LD HL, (FILL_X)    ;	;
271)   1C41 2B          		 DEC HL	;
272)   1C42 22 7F FE    		 LD (FILL_PXR), HL	;
273)   1C45 2A 75 FE    		 LD HL, (FILL_DY)	;
274)   1C48 CD 55 1A    		 CALL NEGHL	;
275)   1C4B 22 81 FE    		 LD (FILL_PDY), HL	;
276)   1C4E CD 5C 1A    		 CALL QPUSH	;
279)   1C51 2A 6B FE    		 LD HL, (FILL_X)	;
280)   1C54 23          		 INC HL	;
281)   1C55 22 6B FE    		 LD (FILL_X), HL	;
282)   1C58 ED 5B 73 FE 		FL_LP3: LD DE, (FILL_X2)	;
283)   1C5C A7          		 AND A	;
284)   1C5D EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
285)   1C5E ED 52       		 SBC HL, DE      ;C IF DE>HL X>X2	;C IF DE>HL X>X2
286)   1C60 38 1C       		 JR C, FL_NXT5	;
287)   1C62 19          		 ADD HL, DE      ;	;
288)   1C63 EB          		 EX DE, HL      ;X=HL X2=DE	;X=HL X2=DE
289)   1C64 E5          		 PUSH HL	;
290)   1C65 2A 6D FE    		 LD HL, (FILL_Y)	;
291)   1C68 E5          		 PUSH HL	;
292)   1C69 CD C9 13    		 CALL LCD_READPIXEL	;
293)   1C6C ED 5B 83 FE 		 LD DE, (FILL_OV)	;
294)   1C70 A7          		 AND A	;
295)   1C71 ED 52       		 SBC HL, DE      ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
296)   1C73 28 09       		 JR Z, FL_NXT5	;
297)   1C75 2A 6B FE    		 LD HL, (FILL_X)	;
298)   1C78 23          		 INC HL	;
299)   1C79 22 6B FE    		 LD (FILL_X), HL	;
300)   1C7C 18 DA       		 JR FL_LP3	;
303)   1C7E 2A 6B FE    		 LD HL, (FILL_X)	;
304)   1C81 22 6F FE    		 LD (FILL_L), HL	;
306)   1C84 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
307)   1C88 A7          		 AND A	;
308)   1C89 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
309)   1C8A ED 52       		 SBC HL, DE      ;X2-X C IF X>X2	;X2-X C IF X>X2
310)   1C8C EB          		 EX DE, HL      ;X=HL X2-X=DE	;X=HL X2-X=DE
311)   1C8D DA 5D 1B    		 JP C, FL_LP0    ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
312)   1C90 C3 DC 1B    		 JP FL_LP2      ;GOTO DO WHILE	;GOTO DO WHILE
315)   1C93 21 C2 12    		FL_EXIT: LD HL, (MAXQ * 8) + 2  ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
316)   1C96 39          		 ADD HL, SP	;
317)   1C97 F9          		 LD SP, HL      ;NEW SP	;NEW SP
318)   1C98 C9          		 RET	;
  9)   1C99 FE 01       		 CP 1         ;IS IT FOR GRAPHICS?	;IS IT FOR GRAPHICS?
 10)   1C9B 28 0E       		 JR Z, GRCOLS	;
 11)   1C9D 21 03 FE    		 LD HL, BCOLOR	;
 12)   1CA0 22 69 FE    		 LD (GR_PARAM4), HL	;
 13)   1CA3 21 01 FE    		 LD HL, FCOLOR	;
 14)   1CA6 22 67 FE    		 LD (GR_PARAM3), HL	;
 15)   1CA9 18 0C       		 JR BS_DOCOL	;
 16)   1CAB 21 07 FE    		GRCOLS: LD HL, BGRCOL	;
 17)   1CAE 22 69 FE    		 LD (GR_PARAM4), HL	;
 18)   1CB1 21 05 FE    		 LD HL, FGRCOL	;
 19)   1CB4 22 67 FE    		 LD (GR_PARAM3), HL	;
 20)   1CB7 CD 94 5E    		BS_DOCOL: CALL EXPRI       ;GET 1ST PARAM	;GET 1ST PARAM
 21)   1CBA D9          		 EXX	;
 22)   1CBB FD 7E 00    		 LD A, (IY)	;
 23)   1CBE FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
 24)   1CC0 28 32       		 JR Z, COLSEL	;
 25)   1CC2 FE 3A       		 CP ':'	;
 26)   1CC4 28 2E       		 JR Z, COLSEL	;
 27)   1CC6 FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
 28)   1CC8 C2 67 20    		 JP NZ, GRPHERR	;
 30)   1CCB E5          		 PUSH HL        ;SAVE 1ST PARAM	;SAVE 1ST PARAM
 31)   1CCC FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
 32)   1CCE CD 94 5E    		 CALL EXPRI        ;GET 2ND PARAM	;GET 2ND PARAM
 33)   1CD1 D9          		 EXX	;
 34)   1CD2 D1          		 POP DE         ;RESTORE 1ST PARAM ON DE HL HAS THE 2ND	;RESTORE 1ST PARAM ON DE HL HAS THE 2ND
 35)   1CD3 7B          		 LD A, E	;
 36)   1CD4 D6 80       		 SUB 128	;
 37)   1CD6 38 07       		 JR C, COLFC	;
 38)   1CD8 5F          		 LD E, A	;
 39)   1CD9 DD 21 37 FE 		 LD IX, BCOLPAL	;
 40)   1CDD 18 04       		 JR DOPALCOL	;
 41)   1CDF DD 21 17 FE 		COLFC: LD IX, FCOLPAL	;
 43)   1CE3 7B          		 LD A, E	;
 44)   1CE4 FE 0F       		 CP 15         ;MAX 16 COLORS	;MAX 16 COLORS
 45)   1CE6 D2 67 20    		 JP NC, GRPHERR	;
 46)   1CE9 DD 19       		 ADD IX, DE	;
 47)   1CEB DD 19       		 ADD IX, DE        ;2*DE CAUSE ITS A 2 BYTE ARRAY	;2*DE CAUSE ITS A 2 BYTE ARRAY
 48)   1CED DD 75 00    		 LD (IX), L        ;SAVE THE NEW COLOR	;SAVE THE NEW COLOR
 49)   1CF0 DD 74 01    		 LD (IX + 1), H	;
 50)   1CF3 C9          		 RET	;
 53)   1CF4 E5          		 PUSH HL	;
 54)   1CF5 D1          		 POP DE	;
 55)   1CF6 7B          		 LD A, E	;
 56)   1CF7 D6 80       		 SUB 128        ;CHECK MSB	;CHECK MSB
 57)   1CF9 38 11       		 JR C, CFC	;
 58)   1CFB 5F          		 LD E, A	;
 59)   1CFC DD 21 69 FE 		 LD IX, GR_PARAM4	;
 60)   1D00 DD 6E 00    		 LD L, (IX)	;
 61)   1D03 DD 66 01    		 LD H, (IX + 1)	;
 62)   1D06 DD 21 37 FE 		 LD IX, BCOLPAL        ;BACKCOLOR	;BACKCOLOR
 63)   1D0A 18 0E       		 JR SFC	;
 64)   1D0C DD 21 67 FE 		CFC: LD IX, GR_PARAM3	;
 65)   1D10 DD 6E 00    		 LD L, (IX)	;
 66)   1D13 DD 66 01    		 LD H, (IX + 1)	;
 67)   1D16 DD 21 17 FE 		 LD IX, FCOLPAL        ;FRONTCOLOR	;FRONTCOLOR
 68)   1D1A 7B          		SFC: LD A, E	;
 69)   1D1B FE 10       		 CP 16         ;MAX 16 COLORS	;MAX 16 COLORS
 70)   1D1D D2 67 20    		 JP NC, GRPHERR	;
 71)   1D20 DD 19       		 ADD IX, DE	;
 72)   1D22 DD 19       		 ADD IX, DE	;
 73)   1D24 DD 56 00    		 LD D, (IX)	;
 74)   1D27 DD 5E 01    		 LD E, (IX + 1)	;
 75)   1D2A 72          		 LD (HL), D        ;SAVE AGAIN	;SAVE AGAIN
 76)   1D2B 23          		 INC HL	;
 77)   1D2C 73          		 LD (HL), E	;
 78)   1D2D C9          		 RET	;
 84)   1D2E AF          		 XOR A	;
 85)   1D2F 21 63 FE    		 LD HL, GR_PARAM1	;
 87)   1D32 F5          		 PUSH AF	;
 88)   1D33 E5          		 PUSH HL	;
 89)   1D34 CD 94 5E    		 CALL EXPRI        ;GET 1ST PARAM	;GET 1ST PARAM
 90)   1D37 D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
 91)   1D38 D1          		 POP DE         ;GET PARAM ADDRESS	;GET PARAM ADDRESS
 92)   1D39 EB          		 EX DE, HL	;
 93)   1D3A 73          		 LD (HL), E	;
 94)   1D3B 23          		 INC HL	;
 95)   1D3C 72          		 LD (HL), D	;
 96)   1D3D 23          		 INC HL         ;PARAM SAVED	;PARAM SAVED
 97)   1D3E F1          		 POP AF	;
 98)   1D3F 3C          		 INC A	;
 99)   1D40 FE 04       		 CP 4	;
100)   1D42 C8          		 RET Z	;
101)   1D43 F5          		 PUSH AF	;
102)   1D44 FD 7E 00    		 LD A, (IY)	;
103)   1D47 FE 0D       		 CP 0x0D        ;FINISHED COMD LINE	;FINISHED COMD LINE
104)   1D49 28 0D       		 JR Z, NOMORE	;
105)   1D4B FE 3A       		 CP ':'         ;FINISHED COMD LINE	;FINISHED COMD LINE
106)   1D4D 28 09       		 JR Z, NOMORE	;
107)   1D4F FE 2C       		 CP ', '        ;CHECK FOR ','	;CHECK FOR ','
108)   1D51 20 05       		 JR NZ, NOMORE	;
109)   1D53 FD 23       		 INC IY         ;NEXT PARAM	;NEXT PARAM
110)   1D55 F1          		 POP AF	;
111)   1D56 18 DA       		 JR GBP_NXT	;
112)   1D58 F1          		NOMORE: POP AF	;
113)   1D59 C9          		 RET	;
118)   1D5A 01 08 00    		 LD BC, 8        ;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD	;8 BYTES SHIFT UP KEEPS 2 LAST POSITIONS NEEDED IN PLOT COMMD
119)   1D5D 11 57 FE    		 LD DE, GR_LASTX3	;
120)   1D60 21 5B FE    		 LD HL, GR_LASTX2	;
121)   1D63 ED B0       		 LDIR	;
122)   1D65 2A 63 FE    		 LD HL, (GR_PARAM1)	;
123)   1D68 22 5F FE    		 LD (GR_LASTX), HL       ;SAVE TO LAST	;SAVE TO LAST
124)   1D6B 2A 65 FE    		 LD HL, (GR_PARAM2)	;
125)   1D6E 22 61 FE    		 LD (GR_LASTY), HL       ;SAVE TO LAST	;SAVE TO LAST
126)   1D71 C9          		 RET	;
130)   1D72 CD 2E 1D    		 CALL GETBASICPARAMS	;
131)   1D75 FE 02       		 CP 2	;
132)   1D77 C2 67 20    		 JP NZ, GRPHERR	;
133)   1D7A CD 94 1E    		BAS_DODRAW: CALL GRPH_SAVECOLORS	;
134)   1D7D FD E5       		 PUSH IY	;
137)   1D7F 2A 5F FE    		 LD HL, (GR_LASTX)	;
138)   1D82 E5          		 PUSH HL	;
139)   1D83 2A 61 FE    		 LD HL, (GR_LASTY)	;
140)   1D86 E5          		 PUSH HL	;
141)   1D87 CD 5A 1D    		 CALL GRPH_SAVELASTPOS	;
142)   1D8A 2A 63 FE    		 LD HL, (GR_PARAM1)	;
143)   1D8D E5          		 PUSH HL	;
144)   1D8E 2A 65 FE    		 LD HL, (GR_PARAM2)	;
145)   1D91 E5          		 PUSH HL	;
146)   1D92 CD BF 14    		 CALL LCD_DRAWLINE	;
148)   1D95 FD E1       		 POP IY	;
149)   1D97 CD AB 1E    		 CALL GRPH_RESTORECOLORS	;
150)   1D9A C9          		 RET         ;RETURN TO BASIC	;RETURN TO BASIC
154)   1D9B CD 2E 1D    		@BAS_MOVE: CALL GETBASICPARAMS	;
155)   1D9E FE 02       		 CP 2	;
156)   1DA0 C2 67 20    		 JP NZ, GRPHERR	;
158)   1DA3 CD 5A 1D    		 CALL GRPH_SAVELASTPOS	;
159)   1DA6 C9          		 RET	;
165)   1DA7 CD 2E 1D    		@BAS_POINT: CALL GETBASICPARAMS	;
166)   1DAA FE 02       		 CP 2	;
167)   1DAC C2 67 20    		 JP NZ, GRPHERR	;
170)   1DAF 2A 63 FE    		 LD HL, (GR_PARAM1)	;
171)   1DB2 E5          		 PUSH HL	;
172)   1DB3 2A 65 FE    		 LD HL, (GR_PARAM2)	;
173)   1DB6 E5          		 PUSH HL	;
174)   1DB7 CD C9 13    		 CALL LCD_READPIXEL	;
178)   1DBA FD 7E 00    		 LD A, (IY)	;
179)   1DBD FE 29       		 CP ')'	;
180)   1DBF C2 67 20    		 JP NZ, GRPHERR	;
181)   1DC2 FD 23       		 INC IY	;
184)   1DC4 01 00 00    		 LD BC, 0	;
185)   1DC7 F3          		 DI	;
186)   1DC8 E5          		 PUSH HL	;
187)   1DC9 D9          		 EXX	;
188)   1DCA E1          		 POP HL	;
189)   1DCB D9          		 EXX	;
190)   1DCC 21 00 00    		 LD HL, 0	;
191)   1DCF FB          		 EI	;
192)   1DD0 C9          		 RET	;
198)   1DD1 FE 00       		GRPH_GETGROUP: CP 0	;
200)   1DD3 21 D7 1F    		 LD HL, PLOT00	;
201)   1DD6 C8          		 RET Z	;
202)   1DD7 FE 0A       		 CP 80.SHR.3	;
203)   1DD9 21 E7 1F    		 LD HL, PLOT80	;
204)   1DDC C8          		 RET Z	;
205)   1DDD FE 0C       		 CP 96.SHR.3	;
206)   1DDF 21 F7 1F    		 LD HL, PLOT96	;
207)   1DE2 C8          		 RET Z	;
208)   1DE3 FE 10       		 CP 128.SHR.3	;
209)   1DE5 21 07 20    		 LD HL, PLOT128	;
210)   1DE8 C8          		 RET Z	;
211)   1DE9 FE 12       		 CP 144.SHR.3	;
212)   1DEB 21 17 20    		 LD HL, PLOT144	;
213)   1DEE C8          		 RET Z	;
214)   1DEF FE 13       		 CP 152.SHR.3	;
215)   1DF1 21 27 20    		 LD HL, PLOT152	;
216)   1DF4 C8          		 RET Z	;
217)   1DF5 FE 14       		 CP 160.SHR.3	;
218)   1DF7 21 37 20    		 LD HL, PLOT160	;
219)   1DFA C8          		 RET Z	;
220)   1DFB FE 18       		 CP 192.SHR.3	;
221)   1DFD 21 47 20    		 LD HL, PLOT192	;
222)   1E00 C8          		 RET Z	;
223)   1E01 FE 19       		 CP 200.SHR.3	;
224)   1E03 21 57 20    		 LD HL, PLOT200	;
225)   1E06 C8          		 RET Z	;
226)   1E07 21 00 00    		 LD HL, 0	;
227)   1E0A C9          		 RET	;
230)   1E0B CD 2E 1D    		@BAS_PLOT: CALL GETBASICPARAMS	;
231)   1E0E FE 03       		 CP 3	;
232)   1E10 C2 67 20    		 JP NZ, GRPHERR	;
233)   1E13 3A 63 FE    		 LD A, (GR_PARAM1)	;
235)   1E16 01 04 00    		 LD BC, 4	;
236)   1E19 21 65 FE    		 LD HL, GR_PARAM2	;
237)   1E1C 11 63 FE    		 LD DE, GR_PARAM1	;
238)   1E1F ED B0       		 LDIR	;
239)   1E21 47          		 LD B, A        ;COMMAND GROUP 5 BITS	;COMMAND GROUP 5 BITS
240)   1E22 CB 38       		 SRL B	;
241)   1E24 CB 38       		 SRL B	;
242)   1E26 CB 38       		 SRL B	;
243)   1E28 E6 07       		 AND 7	;
244)   1E2A 4F          		 LD C, A        ;SPECIFIC COMMAND IN GROUP	;SPECIFIC COMMAND IN GROUP
245)   1E2B 78          		 LD A, B	;
246)   1E2C CD D1 1D    		 CALL GRPH_GETGROUP	;
247)   1E2F 7C          		 LD A, H	;
248)   1E30 FE 00       		 CP 0	;
249)   1E32 C8          		 RET Z        ;RET IF HL=0 GROUP NOT IMPLEMENTED	;RET IF HL=0 GROUP NOT IMPLEMENTED
250)   1E33 06 00       		 LD B, 0	;
251)   1E35 CB 21       		 SLA C         ;C=C*2 2BYTE ADDRESSES	;C=C*2 2BYTE ADDRESSES
252)   1E37 09          		 ADD HL, BC        ;C IS 0-7 SPECIFIC COMMD	;C IS 0-7 SPECIFIC COMMD
253)   1E38 5E          		 LD E, (HL)	;
254)   1E39 23          		 INC HL	;
255)   1E3A 56          		 LD D, (HL)	;
256)   1E3B EB          		 EX DE, HL	;
257)   1E3C E9          		 JP (HL)	;
259)   1E3D AF          		GRPH_NOTIMPL: XOR A	;
260)   1E3E CD F0 46    		 CALL EXTERR	;
261)   1E41 4E 4F 54 20 		 DEFM 'NOT IMPLEMENTED'	;
261)   1E45 49 4D 50 4C 		 DEFM 'NOT IMPLEMENTED'	;
261)   1E49 45 4D 45 4E 		 DEFM 'NOT IMPLEMENTED'	;
261)   1E4D 54 45 44    		 DEFM 'NOT IMPLEMENTED'	;
262)   1E50 00          		 DEFB    0	;
266)   1E51 2A 63 FE    		GRPH_CALCREL: LD HL, (GR_PARAM1)	;
267)   1E54 ED 5B 5F FE 		 LD DE, (GR_LASTX)	;
268)   1E58 19          		 ADD HL, DE	;
269)   1E59 22 63 FE    		 LD (GR_PARAM1), HL	;
270)   1E5C 2A 65 FE    		 LD HL, (GR_PARAM2)	;
271)   1E5F ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
272)   1E63 19          		 ADD HL, DE	;
273)   1E64 22 65 FE    		 LD (GR_PARAM2), HL	;
274)   1E67 C9          		 RET	;
277)   1E68 CD 51 1E    		 CALL GRPH_CALCREL	;
278)   1E6B CD 5A 1D    		 CALL GRPH_SAVELASTPOS	;
279)   1E6E C9          		 RET	;
282)   1E6F CD 51 1E    		 CALL GRPH_CALCREL	;
283)   1E72 CD 7A 1D    		 CALL BAS_DODRAW	;
284)   1E75 C9          		 RET	;
287)   1E76 2A 01 FE    		 LD HL, (FCOLOR)	;
288)   1E79 E5          		 PUSH HL	;
289)   1E7A 2A 03 FE    		 LD HL, (BCOLOR)	;
290)   1E7D 22 01 FE    		 LD (FCOLOR), HL	;
291)   1E80 E1          		 POP HL	;
292)   1E81 22 03 FE    		 LD (BCOLOR), HL	;
293)   1E84 C9          		 RET	;
296)   1E85 2A 05 FE    		 LD HL, (FGRCOL)	;
297)   1E88 E5          		 PUSH HL	;
298)   1E89 2A 07 FE    		 LD HL, (BGRCOL)	;
299)   1E8C 22 05 FE    		 LD (FGRCOL), HL	;
300)   1E8F E1          		 POP HL	;
301)   1E90 22 07 FE    		 LD (BGRCOL), HL	;
302)   1E93 C9          		 RET	;
306)   1E94 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
307)   1E97 21 01 FE    		 LD HL, FCOLOR	;
308)   1E9A 11 09 FE    		 LD DE, FCOLTM	;
309)   1E9D ED B0       		 LDIR	;
310)   1E9F 01 04 00    		 LD BC, 4       ;2 FGRCOL + 2 BGRCOL	;2 FGRCOL + 2 BGRCOL
311)   1EA2 21 05 FE    		 LD HL, FGRCOL	;
312)   1EA5 11 01 FE    		 LD DE, FCOLOR	;
313)   1EA8 ED B0       		 LDIR	;
314)   1EAA C9          		 RET	;
318)   1EAB 01 04 00    		 LD BC, 4       ;2 FCOLOR + 2 BCOLOR	;2 FCOLOR + 2 BCOLOR
319)   1EAE 21 09 FE    		 LD HL, FCOLTM	;
320)   1EB1 11 01 FE    		 LD DE, FCOLOR	;
321)   1EB4 ED B0       		 LDIR	;
322)   1EB6 C9          		 RET	;
326)   1EB7 CD 85 1E    		 CALL GRPH_SWAPGRCOLS	;
327)   1EBA CD 51 1E    		 CALL GRPH_CALCREL	;
328)   1EBD CD 7A 1D    		 CALL BAS_DODRAW	;
329)   1EC0 CD 85 1E    		 CALL GRPH_SWAPGRCOLS	;
330)   1EC3 C9          		 RET	;
333)   1EC4 CD 85 1E    		 CALL GRPH_SWAPGRCOLS	;
334)   1EC7 CD 7A 1D    		 CALL BAS_DODRAW	;
335)   1ECA CD 85 1E    		 CALL GRPH_SWAPGRCOLS	;
336)   1ECD C9          		 RET	;
339)   1ECE CD 7A 1D    		 CALL BAS_DODRAW       ;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT	;FROM LASTX=2ND PT TO GR_PARAM1=3RD PT
340)   1ED1 2A 57 FE    		 LD HL, (GR_LASTX3)	;
341)   1ED4 22 63 FE    		 LD (GR_PARAM1), HL	;
342)   1ED7 2A 59 FE    		 LD HL, (GR_LASTY3)	;
343)   1EDA 22 65 FE    		 LD (GR_PARAM2), HL	;
344)   1EDD CD 7A 1D    		 CALL BAS_DODRAW       ;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT	;FROM LASTX=3RD PT TO GR_PARAM1=1ST PT
345)   1EE0 2A 57 FE    		 LD HL, (GR_LASTX3)	;
346)   1EE3 22 63 FE    		 LD (GR_PARAM1), HL	;
347)   1EE6 2A 59 FE    		 LD HL, (GR_LASTY3)	;
348)   1EE9 22 65 FE    		 LD (GR_PARAM2), HL	;
349)   1EEC CD 7A 1D    		 CALL BAS_DODRAW       ;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT	;FROM LASTX=1ST PT TO GR_PARAM1=2ND PT
350)   1EEF 01 04 00    		 LD BC, 4	;
351)   1EF2 21 57 FE    		 LD HL, GR_LASTX3	;
352)   1EF5 11 5F FE    		 LD DE, GR_LASTX	;
353)   1EF8 ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
354)   1EFA C9          		 RET	;
356)   1EFB CD 85 1E    		GRPH_TRIANGLEBC: CALL GRPH_SWAPGRCOLS	;
357)   1EFE CD CE 1E    		 CALL GRPH_TRIANGLE	;
358)   1F01 CD 85 1E    		 CALL GRPH_SWAPGRCOLS	;
359)   1F04 C9          		 RET	;
362)   1F05 21 63 FE    		GRPH_RECT: LD HL, GR_PARAM1	;
363)   1F08 11 67 FE    		 LD DE, GR_PARAM3	;
364)   1F0B 01 04 00    		 LD BC, 4	;
365)   1F0E ED B0       		 LDIR         ;COPY PARAM1,2 TO 3,4	;COPY PARAM1,2 TO 3,4
366)   1F10 2A 61 FE    		 LD HL, (GR_LASTY)	;
367)   1F13 E5          		 PUSH HL        ;PT1_Y	;PT1_Y
368)   1F14 2A 5F FE    		 LD HL, (GR_LASTX)	;
369)   1F17 E5          		 PUSH HL        ;PT1_X	;PT1_X
370)   1F18 2A 61 FE    		 LD HL, (GR_LASTY)	;
371)   1F1B 22 65 FE    		 LD (GR_PARAM2), HL	;
372)   1F1E CD 7A 1D    		 CALL BAS_DODRAW       ;PT1_X,PT1_Y TO PT2_X,PT1_Y	;PT1_X,PT1_Y TO PT2_X,PT1_Y
373)   1F21 2A 69 FE    		 LD HL, (GR_PARAM4)	;
374)   1F24 22 65 FE    		 LD (GR_PARAM2), HL	;
375)   1F27 CD 7A 1D    		 CALL BAS_DODRAW       ;PT2_X,PT1_Y TO PT2_X,PT2_Y	;PT2_X,PT1_Y TO PT2_X,PT2_Y
376)   1F2A E1          		 POP HL         ;PT1_X	;PT1_X
377)   1F2B 22 63 FE    		 LD (GR_PARAM1), HL	;
378)   1F2E CD 7A 1D    		 CALL BAS_DODRAW       ;PT2_X,PT2_Y TO PT1_X,PT2_Y	;PT2_X,PT2_Y TO PT1_X,PT2_Y
379)   1F31 E1          		 POP HL         ;PT1_Y	;PT1_Y
380)   1F32 22 65 FE    		 LD (GR_PARAM2), HL	;
381)   1F35 CD 7A 1D    		 CALL BAS_DODRAW       ;PT1_X,PT2_Y TO PT1_X,PT1_Y	;PT1_X,PT2_Y TO PT1_X,PT1_Y
382)   1F38 01 04 00    		 LD BC, 4	;
383)   1F3B 21 67 FE    		 LD HL, GR_PARAM3	;
384)   1F3E 11 5F FE    		 LD DE, GR_LASTX	;
385)   1F41 ED B0       		 LDIR         ;SET LASTX,LASTY	;SET LASTX,LASTY
386)   1F43 C9          		 RET	;
388)   1F44 CD 85 1E    		GRPH_RECTBC: CALL GRPH_SWAPGRCOLS	;
389)   1F47 CD 05 1F    		 CALL GRPH_RECT	;
390)   1F4A CD 85 1E    		 CALL GRPH_SWAPGRCOLS	;
391)   1F4D C9          		 RET	;
394)   1F4E CD 94 1E    		GRPH_CIRCREL: CALL GRPH_SAVECOLORS	;
395)   1F51 2A 63 FE    		 LD HL, (GR_PARAM1)	;
396)   1F54 7C          		 LD A, H	;
397)   1F55 B5          		 OR L	;
398)   1F56 20 06       		 JR NZ, CIRE_DOIT	;
399)   1F58 2A 65 FE    		 LD HL, (GR_PARAM2)	;
400)   1F5B 7C          		 LD A, H	;
401)   1F5C B5          		 OR L	;
402)   1F5D C8          		 RET Z         ; RETURN IF BOTH PARAMS ARE ZERO	; RETURN IF BOTH PARAMS ARE ZERO
403)   1F5E ED 5B 5F FE 		CIRE_DOIT: LD DE, (GR_LASTX)	;
404)   1F62 D5          		 PUSH DE	;
405)   1F63 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
406)   1F67 D5          		 PUSH DE	;
407)   1F68 E5          		 PUSH HL	;
408)   1F69 CD B6 16    		 CALL LCD_CIRCLE	;
409)   1F6C CD AB 1E    		 CALL GRPH_RESTORECOLORS	;
410)   1F6F C9          		 RET	;
412)   1F70 CD 85 1E    		GRPH_CIRCRELBC: CALL GRPH_SWAPGRCOLS	;
413)   1F73 CD 4E 1F    		 CALL GRPH_CIRCREL	;
414)   1F76 CD 85 1E    		 CALL GRPH_SWAPGRCOLS	;
415)   1F79 C9          		 RET	;
421)   1F7A C9          		GRPH_CIRCLE: RET	;
422)   1F7B 2A 5F FE    		 LD HL, (GR_LASTX)	;
423)   1F7E ED 5B 63 FE 		 LD DE, (GR_PARAM1)	;
424)   1F82 AF          		 XOR A	;
425)   1F83 ED 42       		 SBC HL, BC	;
426)   1F85 22 67 FE    		 LD (GR_PARAM3), HL       ;X2-X1	;X2-X1
427)   1F88 2A 61 FE    		 LD HL, (GR_LASTY)	;
428)   1F8B ED 5B 65 FE 		 LD DE, (GR_PARAM2)	;
429)   1F8F AF          		 XOR A	;
430)   1F90 ED 42       		 SBC HL, BC	;
431)   1F92 22 69 FE    		 LD (GR_PARAM4), HL       ;Y2-Y1	;Y2-Y1
433)   1F95 ED 4B 67 FE 		 LD BC, (GR_PARAM3)	;
434)   1F99 C5          		 PUSH BC	;
435)   1F9A D1          		 POP DE	;
436)   1F9B CD 1C 2A    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
437)   1F9E D9          		 EXX	;
438)   1F9F C5          		 PUSH BC	;
439)   1FA0 D1          		 POP DE	;
440)   1FA1 D9          		 EXX	;
441)   1FA2 E5          		 PUSH HL        ;DE LOW	;DE LOW
442)   1FA3 ED 4B 69 FE 		 LD BC, (GR_PARAM4)	;
443)   1FA7 C5          		 PUSH BC	;
444)   1FA8 D1          		 POP DE	;
445)   1FA9 CD 1C 2A    		 CALL MULT32        ;BCHL RESULT	;BCHL RESULT
446)   1FAC D9          		 EXX	;
447)   1FAD C5          		 PUSH BC	;
448)   1FAE E1          		 POP HL	;
449)   1FAF D9          		 EXX	;
450)   1FB0 D1          		 POP DE	;
452)   1FB1 CD 37 2A    		 CALL ADD32	;
456)   1FB4 C9          		 RET	;
458)   1FB5 CD 85 1E    		GRPH_CIRCLEBC: CALL GRPH_SWAPGRCOLS	;
459)   1FB8 CD 7A 1F    		 CALL GRPH_CIRCLE	;
460)   1FBB CD 85 1E    		 CALL GRPH_SWAPGRCOLS	;
461)   1FBE C9          		 RET	;
465)   1FBF CD 85 1E    		GRPH_FILL: CALL GRPH_SWAPGRCOLS	;
466)   1FC2 CD 94 1E    		 CALL GRPH_SAVECOLORS	;
467)   1FC5 2A 63 FE    		 LD HL, (GR_PARAM1)	;
468)   1FC8 E5          		 PUSH HL	;
469)   1FC9 2A 65 FE    		 LD HL, (GR_PARAM2)	;
470)   1FCC E5          		 PUSH HL	;
471)   1FCD CD 3A 18    		 CALL LCD_FILL	;
472)   1FD0 CD AB 1E    		 CALL GRPH_RESTORECOLORS	;
473)   1FD3 CD 85 1E    		 CALL GRPH_SWAPGRCOLS	;
474)   1FD6 C9          		 RET	;
476)   1FD7 68 1E       		PLOT00: DW GRPH_MOVEREL	;
477)   1FD9 6F 1E       		 DW GRPH_LINEREL	;
478)   1FDB 3D 1E       		 DW GRPH_NOTIMPL	;
479)   1FDD B7 1E       		 DW GRPH_LINERELBC	;
480)   1FDF 5A 1D       		 DW GRPH_SAVELASTPOS	;
481)   1FE1 7A 1D       		 DW BAS_DODRAW	;
482)   1FE3 3D 1E       		 DW GRPH_NOTIMPL	;
483)   1FE5 C4 1E       		 DW GRPH_DRAWBC	;
485)   1FE7 3D 1E       		PLOT80: DW GRPH_NOTIMPL	;
486)   1FE9 CE 1E       		 DW GRPH_TRIANGLE	;
487)   1FEB 3D 1E       		 DW GRPH_NOTIMPL	;
488)   1FED FB 1E       		 DW GRPH_TRIANGLEBC	;
489)   1FEF 3D 1E       		 DW GRPH_NOTIMPL	;
490)   1FF1 CE 1E       		 DW GRPH_TRIANGLE	;
491)   1FF3 3D 1E       		 DW GRPH_NOTIMPL	;
492)   1FF5 FB 1E       		 DW GRPH_TRIANGLEBC	;
494)   1FF7 3D 1E       		PLOT96: DW GRPH_NOTIMPL	;
495)   1FF9 05 1F       		 DW GRPH_RECT	;
496)   1FFB 3D 1E       		 DW GRPH_NOTIMPL	;
497)   1FFD 44 1F       		 DW GRPH_RECTBC	;
498)   1FFF 3D 1E       		 DW GRPH_NOTIMPL	;
499)   2001 05 1F       		 DW GRPH_RECT	;
500)   2003 3D 1E       		 DW GRPH_NOTIMPL	;
501)   2005 44 1F       		 DW GRPH_RECTBC	;
503)   2007 3D 1E       		PLOT128: DW GRPH_NOTIMPL	;
504)   2009 BF 1F       		 DW GRPH_FILL	;
505)   200B 3D 1E       		 DW GRPH_NOTIMPL	;
506)   200D 3D 1E       		 DW GRPH_NOTIMPL	;
507)   200F 3D 1E       		 DW GRPH_NOTIMPL	;
508)   2011 3D 1E       		 DW GRPH_NOTIMPL	;
509)   2013 3D 1E       		 DW GRPH_NOTIMPL	;
510)   2015 3D 1E       		 DW GRPH_NOTIMPL	;
512)   2017 4E 1F       		PLOT144: DW GRPH_CIRCREL	;
513)   2019 4E 1F       		 DW GRPH_CIRCREL	;
514)   201B 3D 1E       		 DW GRPH_NOTIMPL	;
515)   201D 70 1F       		 DW GRPH_CIRCRELBC	;
516)   201F 7A 1F       		 DW GRPH_CIRCLE	;
517)   2021 7A 1F       		 DW GRPH_CIRCLE	;
518)   2023 3D 1E       		 DW GRPH_NOTIMPL	;
519)   2025 B5 1F       		 DW GRPH_CIRCLEBC	;
521)   2027 3D 1E       		PLOT152: DW GRPH_NOTIMPL	;
522)   2029 3D 1E       		 DW GRPH_NOTIMPL	;
523)   202B 3D 1E       		 DW GRPH_NOTIMPL	;
524)   202D 3D 1E       		 DW GRPH_NOTIMPL	;
525)   202F 3D 1E       		 DW GRPH_NOTIMPL	;
526)   2031 3D 1E       		 DW GRPH_NOTIMPL	;
527)   2033 3D 1E       		 DW GRPH_NOTIMPL	;
528)   2035 3D 1E       		 DW GRPH_NOTIMPL	;
530)   2037 3D 1E       		PLOT160: DW GRPH_NOTIMPL	;
531)   2039 3D 1E       		 DW GRPH_NOTIMPL	;
532)   203B 3D 1E       		 DW GRPH_NOTIMPL	;
533)   203D 3D 1E       		 DW GRPH_NOTIMPL	;
534)   203F 3D 1E       		 DW GRPH_NOTIMPL	;
535)   2041 3D 1E       		 DW GRPH_NOTIMPL	;
536)   2043 3D 1E       		 DW GRPH_NOTIMPL	;
537)   2045 3D 1E       		 DW GRPH_NOTIMPL	;
539)   2047 3D 1E       		PLOT192: DW GRPH_NOTIMPL	;
540)   2049 3D 1E       		 DW GRPH_NOTIMPL	;
541)   204B 3D 1E       		 DW GRPH_NOTIMPL	;
542)   204D 3D 1E       		 DW GRPH_NOTIMPL	;
543)   204F 3D 1E       		 DW GRPH_NOTIMPL	;
544)   2051 3D 1E       		 DW GRPH_NOTIMPL	;
545)   2053 3D 1E       		 DW GRPH_NOTIMPL	;
546)   2055 3D 1E       		 DW GRPH_NOTIMPL	;
548)   2057 3D 1E       		PLOT200: DW GRPH_NOTIMPL	;
549)   2059 3D 1E       		 DW GRPH_NOTIMPL	;
550)   205B 3D 1E       		 DW GRPH_NOTIMPL	;
551)   205D 3D 1E       		 DW GRPH_NOTIMPL	;
552)   205F 3D 1E       		 DW GRPH_NOTIMPL	;
553)   2061 3D 1E       		 DW GRPH_NOTIMPL	;
554)   2063 3D 1E       		 DW GRPH_NOTIMPL	;
555)   2065 3D 1E       		 DW GRPH_NOTIMPL	;
558)   2067 AF          		 XOR A	;
559)   2068 CD F0 46    		 CALL EXTERR	;
560)   206B 70 61 72 61 		 DEFM 'param error'	;
560)   206F 6D 20 65 72 		 DEFM 'param error'	;
560)   2073 72 6F 72    		 DEFM 'param error'	;
561)   2076 00          		 DEFB    0	;
  6)   2077 11 B9 FE    		@MYOS_OSSAVE: LD DE, STRGBUFF	;
  7)   207A 7E          		OSNXT: LD A, (HL)        ;hl = ACCS =FILENAME ENDS WITH 0X0D	;hl = ACCS =FILENAME ENDS WITH 0X0D
  8)   207B FE 0D       		 CP 13         ;	;
  9)   207D 20 01       		 JR NZ, OSCONT	;
 10)   207F AF          		 XOR A	;
 11)   2080 12          		OSCONT: LD (DE), A	;
 12)   2081 23          		 INC HL	;
 13)   2082 13          		 INC DE	;
 14)   2083 FE 00       		 CP 0	;
 15)   2085 20 F3       		 JR NZ, OSNXT	;
 16)   2087 3E 04       		 LD A, 4        ;OPEN FILE FOR WRITE AND CREATE IT	;OPEN FILE FOR WRITE AND CREATE IT
 17)   2089 C5          		 PUSH BC	;
 18)   208A CD 10 0B    		 CALL STRG_OPNFILE       ;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A	;A=4=CREATE ON RET FID HAS THE FILE ID ALSO ON A
 19)   208D C1          		 POP BC         ;bc = length of program	;bc = length of program
 20)   208E 38 12       		 JR C, SVERR	;
 21)   2090 ED 5B DC FD 		 LD DE, (PAGE)	;
 22)   2094 CD 40 0B    		 CALL STRG_BLKWRITE      ;BLOCK WRITE	;BLOCK WRITE
 23)   2097 FE C8       		 CP FCMDOK	;
 24)   2099 20 07       		 JR NZ, SVERR	;
 25)   209B 3A E5 FE    		 LD A, (FID)	;
 26)   209E CD 2E 0B    		 CALL STRG_CLSFILE	;
 27)   20A1 C9          		 RET         ;ON RET A=RESULT	;ON RET A=RESULT
 28)   20A2 FE CA       		SVERR: CP FNOTFND	;
 29)   20A4 CA FD 20    		 JP Z, FLNOTF	;
 30)   20A7 CD F0 46    		 CALL EXTERR	;
 31)   20AA 45 72 72 6F 		 DEFM  "Error Saving"	;
 31)   20AE 72 20 53 61 		 DEFM  "Error Saving"	;
 31)   20B2 76 69 6E 67 		 DEFM  "Error Saving"	;
 32)   20B6 00          		 DEFB    0	;
 36)   20B7 11 B9 FE    		@MYOS_OSLOAD: LD DE, STRGBUFF	;
 37)   20BA 7E          		OLNXT: LD A, (HL)	;
 38)   20BB FE 0D       		 CP 13         ;	;
 39)   20BD 20 01       		 JR NZ, OLCONT	;
 40)   20BF AF          		 XOR A	;
 41)   20C0 12          		OLCONT: LD (DE), a	;
 42)   20C1 23          		 INC HL	;
 43)   20C2 13          		 INC DE	;
 44)   20C3 FE 00       		 CP 0	;
 45)   20C5 20 F3       		 JR NZ, OLNXT	;
 46)   20C7 CD 10 0B    		 CALL STRG_OPNFILE      ;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A	;A=0=READ ON RET FID HAS THE FILE ID ALSO ON A
 47)   20CA 38 1C       		 JR C, LDERR	;
 48)   20CC 2A DC FD    		 LD HL, (PAGE)	;
 49)   20CF EB          		 EX DE, HL	;
 50)   20D0 01 00 00    		 LD BC, 0        ;ZERO MEANS LOAD ALL	;ZERO MEANS LOAD ALL
 51)   20D3 CD 63 0B    		 CALL STRG_BLKREAD      ;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED	;ON RETURN BC HAS THE BYTES WE READ A=RESULT DE=AFTER THE LAST BYTE SAVED
 52)   20D6 FE C8       		 CP FCMDOK	;
 53)   20D8 20 0E       		 JR NZ, LDERR	;
 54)   20DA 3A E5 FE    		 LD A, (FID)	;
 55)   20DD CD 2E 0B    		 CALL STRG_CLSFILE	;
 56)   20E0 21 DE FD    		 LD HL, TOP       ;SAVE TOP OF BASIC	;SAVE TOP OF BASIC
 57)   20E3 73          		 LD (HL), E	;
 58)   20E4 23          		 INC HL	;
 59)   20E5 72          		 LD (HL), D	;
 60)   20E6 37          		 SCF         ;SET C = NO ERROR	;SET C = NO ERROR
 61)   20E7 C9          		 RET	;
 62)   20E8 FE CA       		LDERR: CP FNOTFND	;
 63)   20EA 28 11       		 JR Z, FLNOTF	;
 64)   20EC CD F0 46    		 CALL EXTERR	;
 65)   20EF 45 72 72 6F 		 DEFM  "Error Loading"	;
 65)   20F3 72 20 4C 6F 		 DEFM  "Error Loading"	;
 65)   20F7 61 64 69 6E 		 DEFM  "Error Loading"	;
 65)   20FB 67          		 DEFM  "Error Loading"	;
 66)   20FC 00          		 DEFB    0	;
 67)   20FD CD F0 46    		FLNOTF: CALL EXTERR	;
 68)   2100 57 72 6F 6E 		 DEFM  "Wrong Filename"	;
 68)   2104 67 20 46 69 		 DEFM  "Wrong Filename"	;
 68)   2108 6C 65 6E 61 		 DEFM  "Wrong Filename"	;
 68)   210C 6D 65       		 DEFM  "Wrong Filename"	;
 69)   210E 00          		 DEFB    0	;
 41)   210F C3 7F 03    		@MYOS_CLRSCN: JP OS_CLRSCR       ; CLRSCN: clears the screen.	; CLRSCN: clears the screen.
 44)   2112 7D          		 LD A, L	;
 45)   2113 32 A7 FE    		 LD (TIMECTR), A	;
 46)   2116 7C          		 LD A, H	;
 47)   2117 32 A8 FE    		 LD (TIMECTR + 1), A	;
 48)   211A 7B          		 LD A, E	;
 49)   211B 32 A9 FE    		 LD (TIMECTR + 2), A	;
 50)   211E 7A          		 LD A, D	;
 51)   211F 32 AA FE    		 LD (TIMECTR + 3), A	;
 52)   2122 C9          		 RET	;
 56)   2123 3A A7 FE    		 LD A, (TIMECTR)	;
 57)   2126 6F          		 LD L, A	;
 58)   2127 3A A8 FE    		 LD A, (TIMECTR + 1)	;
 59)   212A 67          		 LD H, A	;
 60)   212B 3A A9 FE    		 LD A, (TIMECTR + 2)	;
 61)   212E 5F          		 LD E, A	;
 62)   212F 3A AA FE    		 LD A, (TIMECTR + 3)	;
 63)   2132 57          		 LD D, A	;
 64)   2133 C9          		 RET	;
 66)   2134 63          		 LD H, E	;
 67)   2135 E5          		 PUSH HL	;
 68)   2136 CD 78 03    		 CALL OS_RMVCURS	;
 69)   2139 E1          		 POP HL	;
 70)   213A 7C          		 LD A, H	;
 71)   213B 32 0D FE    		 LD (CURSORX), A	;
 72)   213E 32 F3 FE    		 LD (VGATX_X),A	;
 73)   2141 7D          		 LD A, L	;
 74)   2142 32 0E FE    		 LD (CURSORY), A	;
 75)   2145 32 F4 FE    		 LD (VGATX_Y),A	;
 76)   2148 CD 71 03    		 CALL OS_PRNCURS	;
 77)   214B C9          		 RET	;
 79)   214C 16 00       		 LD D, 0	;
 80)   214E 3A 0D FE    		 LD A, (CURSORX)	;
 82)   2151 5F          		 LD E, A	;
 83)   2152 26 00       		 LD H, 0	;
 86)   2154 CD 18 19    		 CALL LCD_CALCLINE      ;GETS CURSORY WITH SCROLL	;GETS CURSORY WITH SCROLL
 87)   2157 6F          		 LD L, A	;
 88)   2158 C9          		 RET	;
 89)   2159 06 50       		KEYGET: LD B, 80       ;SCREEN WIDTH IN CHARS	;SCREEN WIDTH IN CHARS
 91)   215B E5          		 PUSH HL	;
 92)   215C ED 62       		 SBC HL, HL        ;HL=0	;HL=0
 93)   215E CD 46 23    		 CALL MYOS_OSKEY	;
 94)   2161 E1          		 POP HL	;
 95)   2162 D8          		 RET C	;
 96)   2163 18 F6       		 JR MYOS_OSRDCH	;
 97)   2165 C9          		 RET	;
 99)   2166 F5          		 PUSH AF	;
100)   2167 D5          		 PUSH DE	;
101)   2168 E5          		 PUSH HL	;
102)   2169 DD E5       		 PUSH IX	;
103)   216B 5F          		 LD E, A	;
104)   216C CD 65 23    		 CALL ESCTEST	;
107)   216F 7B          		 LD A, E	;
108)   2170 FE 20       		 CP 32	;
109)   2172 38 0D       		 JR C, CTRCODE	;
110)   2174 FE 7F       		 CP 127         ;BACKSPACE	;BACKSPACE
111)   2176 C2 FA 22    		 JP NZ, PRINTIT	;
112)   2179 3E 08       		 LD A, 8        ;DO A BACKSPACE	;DO A BACKSPACE
113)   217B CD 5F 03    		 CALL OS_PRINTCHAR	;
114)   217E C3 FD 22    		 JP OSWREXIT	;
115)   2181 FE 04       		CTRCODE: CP 4       ;WRITE TEXT AT TEXT POS	;WRITE TEXT AT TEXT POS
116)   2183 20 06       		 JR NZ, CC1	;
117)   2185 32 16 FE    		 LD (VDUMODE), A	;
118)   2188 C3 FD 22    		 JP OSWREXIT	;
119)   218B FE 05       		CC1: CP 5        ;WRITE TEXT AT GRAPH POS	;WRITE TEXT AT GRAPH POS
120)   218D 20 06       		 JR NZ, CC2	;
121)   218F 32 16 FE    		 LD (VDUMODE), A	;
122)   2192 C3 FD 22    		 JP OSWREXIT	;
123)   2195 FE 06       		CC2: CP 6        ;ENABLE OUTPUT TO SCREEN	;ENABLE OUTPUT TO SCREEN
124)   2197 20 03       		 JR NZ, CC3	;
125)   2199 C3 FD 22    		 JP OSWREXIT	;
126)   219C FE 07       		CC3: CP 7        ;BEEP	;BEEP
127)   219E 20 03       		 JR NZ, CC4	;
128)   21A0 C3 FD 22    		 JP OSWREXIT	;
129)   21A3 FE 08       		CC4: CP 8        ;MOVE TEXT CURSOR BACK A CHAR	;MOVE TEXT CURSOR BACK A CHAR
130)   21A5 20 03       		 JR NZ, CC5	;
131)   21A7 C3 FA 22    		 JP PRINTIT	;
138)   21AA FE 09       		CC5: CP 9        ;MOVE TEXT CURSOR FORWARD A CHAR	;MOVE TEXT CURSOR FORWARD A CHAR
139)   21AC 20 0F       		 JR NZ, CC6	;
140)   21AE 3A 0D FE    		 LD A, (CURSORX)	;
141)   21B1 3C          		 INC A	;
142)   21B2 FE 50       		 CP 80	;
143)   21B4 D2 FD 22    		 JP NC, OSWREXIT	;
144)   21B7 32 0D FE    		 LD (CURSORX), A	;
145)   21BA C3 FD 22    		 JP OSWREXIT	;
146)   21BD FE 0A       		CC6: CP 10        ;MOVE TEXT DOWN LF	;MOVE TEXT DOWN LF
147)   21BF CA FA 22    		 JP Z, PRINTIT	;
148)   21C2 FE 0B       		CC7: CP 11        ;MOVE TEXT UP	;MOVE TEXT UP
149)   21C4 20 0F       		 JR NZ, CC8	;
150)   21C6 3A 0E FE    		 LD A, (CURSORY)	;
151)   21C9 3D          		 DEC A	;
152)   21CA FE FF       		 CP 0XFF	;
153)   21CC CA FD 22    		 JP Z, OSWREXIT	;
154)   21CF 32 0E FE    		 LD (CURSORY), A	;
155)   21D2 C3 FD 22    		 JP OSWREXIT	;
156)   21D5 FE 0C       		CC8: CP 12        ; CLS	; CLS
157)   21D7 20 06       		 JR NZ, CC9	;
158)   21D9 CD 7F 03    		 CALL OS_CLRSCR	;
159)   21DC C3 FD 22    		 JP OSWREXIT	;
160)   21DF FE 0D       		CC9: CP 13        ;GOTO START OF LINE CR	;GOTO START OF LINE CR
161)   21E1 CA FA 22    		 JP Z, PRINTIT	;
162)   21E4 FE 0E       		CC10: CP 14        ;ENABLE THE AUTOPAGING MODE	;ENABLE THE AUTOPAGING MODE
163)   21E6 20 03       		 JR NZ, CC11	;
164)   21E8 C3 FD 22    		 JP OSWREXIT	;
165)   21EB FE 0F       		CC11: CP 15        ;DISABLE THE AUTOPAGING MODE	;DISABLE THE AUTOPAGING MODE
166)   21ED 20 03       		 JR NZ, CC12	;
167)   21EF C3 FD 22    		 JP OSWREXIT	;
168)   21F2 FE 10       		CC12: CP 16        ;CLG	;CLG
169)   21F4 20 06       		 JR NZ, CC13	;
170)   21F6 CD 57 27    		 CALL MYOS_CLG	;
171)   21F9 C3 FD 22    		 JP OSWREXIT	;
172)   21FC FE 11       		CC13: CP 17        ; SAME AS COLOUR	; SAME AS COLOUR
173)   21FE 20 09       		 JR NZ, CC14	;
175)   2200 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
176)   2202 CD 94 5E    		 CALL EXPRI	;
177)   2205 D9          		 EXX        ;l has the param  color	;l has the param  color
178)   2206 C3 FD 22    		 JP OSWREXIT	;
179)   2209 FE 12       		CC14: CP 18        ;SAME AS GCOL	;SAME AS GCOL
180)   220B 20 0F       		 JR NZ, CC15	;
181)   220D FD 23       		 INC IY        ;SKIP ','	;SKIP ','
182)   220F CD 94 5E    		 CALL EXPRI	;
183)   2212 D9          		 EXX        ;l has the param  mode	;l has the param  mode
184)   2213 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
185)   2215 CD 94 5E    		 CALL EXPRI	;
186)   2218 D9          		 EXX        ;l has the param  color	;l has the param  color
188)   2219 C3 FD 22    		 JP OSWREXIT	;
189)   221C FE 13       		CC15: CP 19        ;SELECT A COLOR PALLETTE???	;SELECT A COLOR PALLETTE???
190)   221E 20 0F       		 JR NZ, CC16	;
192)   2220 06 05       		 LD B, 5	;
193)   2222 C5          		CC15AGN: PUSH BC	;
194)   2223 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
195)   2225 CD 94 5E    		 CALL EXPRI	;
196)   2228 D9          		 EXX        ;l has the param	;l has the param
197)   2229 C1          		 POP BC	;
198)   222A 10 F6       		 DJNZ CC15AGN	;
199)   222C C3 FD 22    		 JP OSWREXIT	;
200)   222F FE 14       		CC16: CP 20        ;RESTORE THE DEFAULT LOGICAL COLORS	;RESTORE THE DEFAULT LOGICAL COLORS
201)   2231 20 03       		 JR NZ, CC17	;
203)   2233 C3 FD 22    		 JP OSWREXIT	;
204)   2236 FE 15       		CC17: CP 21        ;NO OUTPUT TO SCREEN	;NO OUTPUT TO SCREEN
205)   2238 20 03       		 JR NZ, CC18	;
207)   223A C3 FD 22    		 JP OSWREXIT	;
208)   223D FE 16       		CC18: CP 22        ;LIKE MODE	;LIKE MODE
209)   223F 20 09       		 JR NZ, CC19	;
210)   2241 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
211)   2243 CD 94 5E    		 CALL EXPRI	;
212)   2246 D9          		 EXX        ;l has the param	;l has the param
213)   2247 C3 FD 22    		 JP OSWREXIT	;
214)   224A FE 17       		CC19: CP 23        ;Program characters and control the cursor.???	;Program characters and control the cursor.???
215)   224C 20 27       		 JR NZ, CC20	;
216)   224E 06 09       		 LD B, 9        ;9 PARAMS CHAR_NO +8 ROWS OF A CHAR	;9 PARAMS CHAR_NO +8 ROWS OF A CHAR
217)   2250 FD 7E 00    		 LD A, (IY)	;
218)   2253 FD 23       		 INC IY        ;SKIP ',' OR ';'	;SKIP ',' OR ';'
219)   2255 FE 3B       		 CP ';'        ;'	;'
220)   2257 20 01       		 JR NZ, CC19AGN	;
221)   2259 05          		 DEC B        ; IF ; THE DELIMETER THEN 2 BYTES AT START	; IF ; THE DELIMETER THEN 2 BYTES AT START
222)   225A C5          		CC19AGN: PUSH BC	;
223)   225B CD 94 5E    		 CALL EXPRI	;
224)   225E D9          		 EXX        ;l has the param	;l has the param
225)   225F FD 7E 00    		 LD A, (IY)	;
226)   2262 FE 2C       		 CP ', '	;
227)   2264 28 07       		 JR Z, CC19NXT0	;
228)   2266 FE 3B       		 CP ';'        ;'	;'
229)   2268 20 05       		 JR NZ, CC19NXT	;
230)   226A C1          		 POP BC	;
231)   226B 05          		 DEC B	;
232)   226C C5          		 PUSH BC	;
233)   226D FD 23       		CC19NXT0: INC IY       ;SKIP ','	;SKIP ','
234)   226F C1          		CC19NXT: POP BC	;
235)   2270 10 E8       		 DJNZ CC19AGN	;
236)   2272 C3 FD 22    		 JP OSWREXIT	;
237)   2275 FE 18       		CC20: CP 24        ;Define a graphics window	;Define a graphics window
238)   2277 20 11       		 JR NZ, CC21	;
239)   2279 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
240)   227B 06 04       		 LD B, 4        ;4 PARAMS TWO CORNERS OF A RECT	;4 PARAMS TWO CORNERS OF A RECT
241)   227D C5          		CC20AGN: PUSH BC	;
242)   227E CD 94 5E    		 CALL EXPRI	;
243)   2281 D9          		 EXX        ;HL has the param	;HL has the param
244)   2282 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
245)   2284 C1          		 POP BC	;
246)   2285 10 F6       		 DJNZ CC20AGN	;
247)   2287 C3 FD 22    		 JP OSWREXIT	;
248)   228A FE 19       		CC21: CP 25        ;Identical to PLOT.	;Identical to PLOT.
249)   228C 20 17       		 JR NZ, CC22	;
250)   228E FD 23       		 INC IY        ;SKIP ','	;SKIP ','
251)   2290 CD 94 5E    		 CALL EXPRI	;
252)   2293 D9          		 EXX        ;L has the param PLOTMODE	;L has the param PLOTMODE
253)   2294 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
254)   2296 CD 94 5E    		 CALL EXPRI	;
255)   2299 D9          		 EXX        ;HL has the param X	;HL has the param X
256)   229A FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
257)   229C CD 94 5E    		 CALL EXPRI	;
258)   229F D9          		 EXX        ;HL has the param Y	;HL has the param Y
259)   22A0 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
262)   22A2 C3 FD 22    		 JP OSWREXIT	;
263)   22A5 FE 1A       		CC22: CP 26        ;Restore the default text and graphics windows.	;Restore the default text and graphics windows.
264)   22A7 20 02       		 JR NZ, CC23	;
265)   22A9 18 52       		 JR OSWREXIT	;
266)   22AB FE 1B       		CC23: CP 27        ;Send the next character to the screen.	;Send the next character to the screen.
267)   22AD 20 07       		 JR NZ, CC24	;
268)   22AF CD 94 5E    		 CALL EXPRI	;
269)   22B2 D9          		 EXX        ;	;
270)   22B3 7D          		 LD A, L	;
271)   22B4 18 44       		 JR PRINTIT	;
272)   22B6 FE 1C       		CC24: CP 28        ;Define a text window.	;Define a text window.
273)   22B8 20 0E       		 JR NZ, CC25	;
274)   22BA 06 04       		 LD B, 4        ;4 PARAMS UPPERLEFT AND LOWERRIGHT	;4 PARAMS UPPERLEFT AND LOWERRIGHT
275)   22BC C5          		CC24AGN: PUSH BC	;
276)   22BD FD 23       		 INC IY        ;SKIP ','	;SKIP ','
277)   22BF CD 94 5E    		 CALL EXPRI	;
278)   22C2 D9          		 EXX        ;l has the param	;l has the param
279)   22C3 C1          		 POP BC	;
280)   22C4 10 F6       		 DJNZ CC24AGN	;
281)   22C6 18 35       		 JR OSWREXIT	;
282)   22C8 FE 1D       		CC25: CP 29        ;Set the graphics origin.	;Set the graphics origin.
283)   22CA 20 10       		 JR NZ, CC26	;
284)   22CC FD 23       		 INC IY        ;SKIP ','	;SKIP ','
285)   22CE CD 94 5E    		 CALL EXPRI	;
286)   22D1 D9          		 EXX        ;HL has the param X	;HL has the param X
287)   22D2 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
288)   22D4 CD 94 5E    		 CALL EXPRI	;
289)   22D7 D9          		 EXX        ;HL has the param Y	;HL has the param Y
290)   22D8 FD 23       		 INC IY        ;SKIP ';'	;SKIP ';'
292)   22DA 18 21       		 JR OSWREXIT	;
293)   22DC FE 1E       		CC26: CP 30        ;Home the text cursor to the top left of the screen.	;Home the text cursor to the top left of the screen.
294)   22DE 20 08       		 JR NZ, CC27	;
295)   22E0 21 00 00    		 LD HL, 0	;
296)   22E3 22 0D FE    		 LD (CURSORX), HL	;
297)   22E6 18 15       		 JR OSWREXIT	;
298)   22E8 FE 1F       		CC27: CP 31        ;Move the text cursor - identical to TAB(x,y).	;Move the text cursor - identical to TAB(x,y).
299)   22EA 20 11       		 JR NZ, OSWREXIT	;
300)   22EC FD 23       		 INC IY        ;SKIP ','	;SKIP ','
301)   22EE CD 94 5E    		 CALL EXPRI	;
302)   22F1 D9          		 EXX        ;l has the param X	;l has the param X
303)   22F2 FD 23       		 INC IY        ;SKIP ','	;SKIP ','
304)   22F4 CD 94 5E    		 CALL EXPRI	;
305)   22F7 D9          		 EXX        ;l has the param Y	;l has the param Y
307)   22F8 18 03       		 JR OSWREXIT	;
310)   22FA CD 03 23    		PRINTIT: CALL EDPUT	;
311)   22FD DD E1       		OSWREXIT: POP IX	;
312)   22FF E1          		 POP HL	;
313)   2300 D1          		 POP DE	;
314)   2301 F1          		 POP AF	;
315)   2302 C9          		 RET	;
320)   2303 3A 00 FE    		EDPUT: LD A, (FLAGS)	;
321)   2306 CB 5F       		 BIT 3, A	;
322)   2308 28 10       		 JR Z, WRCH	;
323)   230A 7B          		 LD A, E	;
324)   230B FE 20       		 CP ' '	;
325)   230D D8          		 RET C	;
326)   230E 2A 12 FE    		 LD HL, (EDPTR)	;
327)   2311 73          		 LD (HL), E	;
328)   2312 2C          		 INC L	;
329)   2313 C8          		 RET Z	;
330)   2314 22 12 FE    		 LD (EDPTR), HL	;
331)   2317 C9          		 RET	;
334)   2318 1E 3E       		 LD E, '>'	;
335)   231A 7B          		WRCH: LD A, E	;
336)   231B F5          		 PUSH AF	;
337)   231C C5          		 PUSH BC	;
338)   231D D5          		 PUSH DE	;
339)   231E E5          		 PUSH HL	;
340)   231F DD E5       		 PUSH IX	;
341)   2321 FD E5       		 PUSH IY	;
342)   2323 F5          		 PUSH AF	;
343)   2324 C5          		 PUSH BC	;
344)   2325 D5          		 PUSH DE	;
345)   2326 E5          		 PUSH HL	;
346)   2327 CD 78 03    		 CALL OS_RMVCURS	;
347)   232A E1          		 POP HL	;
348)   232B D1          		 POP DE	;
349)   232C C1          		 POP BC	;
350)   232D F1          		 POP AF	;
353)   232E CD 5F 03    		 CALL OS_PRINTCHAR	;
354)   2331 CD 71 03    		 CALL OS_PRNCURS	;
363)   2334 FD E1       		 POP IY	;
364)   2336 DD E1       		 POP IX	;
365)   2338 E1          		 POP HL	;
366)   2339 D1          		 POP DE	;
367)   233A C1          		 POP BC	;
368)   233B F1          		 POP AF	;
369)   233C C9          		 RET	;
371)   233D 3A 00 FE    		TOGGLE: LD A, (FLAGS)	;
372)   2340 EE 04       		 XOR 00000100B	;
373)   2342 32 00 FE    		 LD (FLAGS), A	;
374)   2345 C9          		 RET	;
383)   2346 E5          		@MYOS_OSKEY: PUSH HL	;
384)   2347 21 15 FE    		 LD HL, INKEY	;
385)   234A 7E          		 LD A, (HL)	;
386)   234B 36 00       		 LD (HL), 0	;
387)   234D E1          		 POP HL	;
388)   234E B7          		 OR A	;
389)   234F 37          		 SCF	;
390)   2350 C0          		 RET NZ	;
392)   2351 CD BE 27    		 CALL GETKEYNW	;
394)   2354 D0          		 RET NC	;
395)   2355 FE 1B       		 CP ESC	;
396)   2357 37          		 SCF	;
397)   2358 C0          		 RET NZ	;
398)   2359 E5          		ESCSET: PUSH HL	;
399)   235A 21 00 FE    		 LD HL, FLAGS	;
400)   235D CB 76       		 BIT 6, (HL)        ; ESC DISABLED?	; ESC DISABLED?
401)   235F 20 02       		 JR NZ, ESCDIS	;
402)   2361 CB FE       		 SET 7, (HL)        ; SET ESCAPE FLAG	; SET ESCAPE FLAG
403)   2363 E1          		ESCDIS: POP HL	;
404)   2364 C9          		 RET	;
405)   2365 CD E0 06    		ESCTEST: CALL RS_RXNW	;
406)   2368 B7          		 OR A	;
407)   2369 C8          		 RET Z	;
408)   236A FE 1B       		 CP 0x1B        ; ESC	; ESC
409)   236C 28 EB       		 JR Z, ESCSET	;
410)   236E 32 15 FE    		 LD (INKEY), A	;
411)   2371 C9          		 RET	;
413)   2372 CD 65 23    		@MYOS_TRAP: CALL ESCTEST	;
414)   2375 3A 00 FE    		@MYOS_LTRAP: LD A, (FLAGS)	;
415)   2378 B7          		 OR A	;
416)   2379 F0          		 RET P	;
417)   237A 21 00 FE    		ABORT: LD HL, FLAGS	;
418)   237D CB BE       		 RES 7, (HL)	;
419)   237F C3 C2 4D    		 JP ESCAPE	;
428)   2382 F3          		 DI	;
429)   2383 21 F6 FD    		 LD HL, RANDOM        ; SET RANDOM SEED TO NON 0	; SET RANDOM SEED TO NON 0
430)   2386 3E 06       		 LD A, 0x06	;
431)   2388 77          		 LD (HL), A	;
432)   2389 3E BB       		 LD A, 0xBB	;
433)   238B 77          		 LD (HL), A	;
434)   238C 21 00 00    		 LD HL, 0	;
435)   238F 22 0D FE    		 LD (CURSORX), HL       ; CURSOR X 7 Y ZEROED	; CURSOR X 7 Y ZEROED
436)   2392 11 FF FF    		 LD DE, COL_WHITE       ; SET FCOLOR AND BCOLOR DEFAULT VALUES	; SET FCOLOR AND BCOLOR DEFAULT VALUES
437)   2395 21 01 FE    		 LD HL, FCOLOR	;
438)   2398 73          		 LD (HL), E	;
439)   2399 23          		 INC HL	;
440)   239A 72          		 LD (HL), D	;
441)   239B 23          		 INC HL	;
442)   239C 11 00 00    		 LD DE, COL_BLACK	;
443)   239F 73          		 LD (HL), E	;
444)   23A0 23          		 INC HL	;
445)   23A1 72          		 LD (HL), D	;
446)   23A2 01 04 00    		 LD BC, 4        ; COPY SAME COLORS TO GRAPHICS	; COPY SAME COLORS TO GRAPHICS
447)   23A5 11 05 FE    		 LD DE, FGRCOL	;
448)   23A8 21 01 FE    		 LD HL, FCOLOR	;
449)   23AB ED B0       		 LDIR	;
450)   23AD 11 17 FE    		 LD DE, FCOLPAL	;
451)   23B0 CD BB 23    		 CALL COPYPAL	;
452)   23B3 11 37 FE    		 LD DE, BCOLPAL	;
453)   23B6 CD BB 23    		 CALL COPYPAL	;
454)   23B9 18 16       		 JR OSFINSH       ;	;
455)   23BB 21 DE 23    		COPYPAL: LD HL, COL_PALET	;
456)   23BE 01 20 00    		 LD BC, 16 * 2        ;SHOULD ADD 8 MORE COLORS	;SHOULD ADD 8 MORE COLORS
457)   23C1 ED B0       		 LDIR	;
458)   23C3 AF          		 XOR A	;
459)   23C4 32 0F FE    		 LD (SCRLN), A	;
460)   23C7 21 00 00    		 LD HL, 0	;
461)   23CA 22 A7 FE    		 LD (TIMECTR), HL	;
462)   23CD 22 A9 FE    		 LD (TIMECTR + 2), HL	;
463)   23D0 C9          		 RET	;
465)   23D1 CD 7F 03    		OSFINSH: CALL OS_CLRSCR	;
478)   23D4 AF          		 XOR A	;
479)   23D5 11 FF F9    		 LD DE, STACKP - 0x100      ;DE = HIMEM	;DE = HIMEM
480)   23D8 5F          		 LD E, A        ;PAGE BOUNDARY	;PAGE BOUNDARY
481)   23D9 21 00 80    		 LD HL, RAMAD        ;@USER	;@USER
482)   23DC FB          		 EI	;
483)   23DD C9          		 RET	;
484)   23DE 00 00       		COL_PALET: DW COL_BLACK	;
485)   23E0 00 F8       		 DW COL_RED	;
486)   23E2 C0 07       		 DW COL_GREEN	;
487)   23E4 C0 FF       		 DW COL_YELLOW	;
488)   23E6 3F 00       		 DW COL_BLUE	;
489)   23E8 3F F8       		 DW COL_MAGENTA	;
490)   23EA FF 07       		 DW COL_CYAN	;
491)   23EC FF FF       		 DW COL_WHITE	;
492)   23EE 00 00       		 DW COL_BLACK       ;TODO PICK 8 MORE COLORS	;TODO PICK 8 MORE COLORS
493)   23F0 00 F8       		 DW COL_RED	;
494)   23F2 C0 07       		 DW COL_GREEN	;
495)   23F4 C0 FF       		 DW COL_YELLOW	;
496)   23F6 3F 00       		 DW COL_BLUE	;
497)   23F8 3F F8       		 DW COL_MAGENTA	;
498)   23FA FF 07       		 DW COL_CYAN	;
499)   23FC FF FF       		 DW COL_WHITE	;
505)   23FE CD 5B 24    		 CALL SKIPSP	;
506)   2401 FE 0D       		 CP CR	;
507)   2403 C8          		 RET Z	;
508)   2404 FE 7C       		 CP '|'	;
509)   2406 C8          		 RET Z	;
510)   2407 FE 2E       		 CP '.'	;
511)   2409 CA 4E 25    		 JP Z, DOT        ;*.	;*.
512)   240C EB          		 EX DE, HL	;
513)   240D 21 6A 24    		 LD HL, COMDS	;
514)   2410 1A          		OSCLI0: LD A, (DE)	;
515)   2411 CD 62 24    		 CALL UPPRC	;
516)   2414 BE          		 CP (HL)	;
517)   2415 28 0B       		 JR Z, OSCLI2	;
518)   2417 38 31       		 JR C, HUH	;
519)   2419 CB 7E       		OSCLI1: BIT 7, (HL)	;
520)   241B 23          		 INC HL	;
521)   241C 28 FB       		 JR Z, OSCLI1	;
522)   241E 23          		 INC HL	;
523)   241F 23          		 INC HL	;
524)   2420 18 EE       		 JR OSCLI0	;
526)   2422 D5          		OSCLI2: PUSH DE	;
527)   2423 13          		OSCLI3: INC DE	;
528)   2424 23          		 INC HL	;
529)   2425 1A          		 LD A, (DE)	;
530)   2426 CD 62 24    		 CALL UPPRC	;
531)   2429 FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
532)   242B 28 0A       		 JR Z, OSCLI4	;
533)   242D AE          		 XOR (HL)	;
534)   242E 28 F3       		 JR Z, OSCLI3	;
535)   2430 FE 80       		 CP 80H	;
536)   2432 28 03       		 JR Z, OSCLI4	;
537)   2434 D1          		 POP DE	;
538)   2435 18 E2       		 JR OSCLI1	;
540)   2437 F1          		OSCLI4: POP AF	;
541)   2438 13          		 INC DE	;
542)   2439 CB 7E       		OSCLI5: BIT 7, (HL)	;
543)   243B 23          		 INC HL	;
544)   243C 28 FB       		 JR Z, OSCLI5	;
545)   243E 7E          		 LD A, (HL)	;
546)   243F 23          		 INC HL	;
547)   2440 66          		 LD H, (HL)	;
548)   2441 6F          		 LD L, A	;
549)   2442 E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
550)   2443 EB          		 EX DE, HL	;
551)   2444 E5          		 PUSH HL	;
552)   2445 FD E1       		 POP IY	;
553)   2447 C3 5B 24    		 JP SKIPSP	;
555)   244A 3E FE       		HUH: LD A, 254        ;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY	;TODO:IF NOT A STAR COMMAND THEN SHOULD RETURN WITH CARRY
556)   244C CD F0 46    		 CALL EXTERR	;
557)   244F 42 61 64 20 		 DEFM 'Bad command'	;
557)   2453 63 6F 6D 6D 		 DEFM 'Bad command'	;
557)   2457 61 6E 64    		 DEFM 'Bad command'	;
558)   245A 00          		 DEFB    0	;
560)   245B 7E          		SKIPSP: LD A, (HL)	;
561)   245C FE 20       		 CP ' '	;
562)   245E C0          		 RET NZ	;
563)   245F 23          		 INC HL	;
564)   2460 18 F9       		 JR SKIPSP	;
566)   2462 E6 7F       		UPPRC: AND 7FH	;
567)   2464 FE 60       		 CP '`'	;
568)   2466 D8          		 RET C	;
569)   2467 E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
570)   2469 C9          		 RET	;
574)   246A 42 59       		COMDS: DEFM  "BY"	;
575)   246C C5          		 DEFB    'E'+80H	;
576)   246D 51 25       		 DEFW BYE	;
577)   246F 43          		 DEFM  "C"	;
578)   2470 C4          		 DEFB    'D'+80H	;
579)   2471 85 25       		 DEFW DRV_CD	;
580)   2473 44 49       		 DEFM  "DI"	;
581)   2475 D2          		 DEFB    'R'+80H	;
582)   2476 6B 25       		 DEFW DRV_DIR	;
583)   2478 46          		 DEFM  "F"	;
584)   2479 D8          		 DEFB    'X'+80H	;
585)   247A 54 25       		 DEFW FX	;
586)   247C 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
586)   2480 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
586)   2484 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
587)   2487 C6          		 DEFB 'F'+80H	;
588)   2488 09 26       		 DEFW LCD_BLINKOF	;
589)   248A 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
589)   248E 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
589)   2492 4B 4F       		 DEFM  "LCD_BLINKO"	;
590)   2494 CE          		 DEFB 'N'+80H	;
591)   2495 0F 26       		 DEFW LCD_BLINKON	;
592)   2497 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
592)   249B 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
593)   249F D2          		 DEFB 'R'+80H	;
594)   24A0 15 26       		 DEFW LCD_CLR	;
595)   24A2 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
595)   24A6 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
595)   24AA 4F 52 41    		 DEFM  "LCD_CURSORA"	;
596)   24AD D4          		 DEFB 'T'+80H	;
597)   24AE 1B 26       		 DEFW LCD_CURSAT	;
598)   24B0 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
598)   24B4 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
598)   24B8 4F 46       		 DEFM  "LCD_CURSOF"	;
599)   24BA C6          		 DEFB 'F'+80H	;
600)   24BB 3A 26       		 DEFW LCD_CURSOF	;
601)   24BD 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
601)   24C1 43 55 52 53 		 DEFM  "LCD_CURSO"	;
601)   24C5 4F          		 DEFM  "LCD_CURSO"	;
602)   24C6 CE          		 DEFB 'N'+80H	;
603)   24C7 40 26       		 DEFW LCD_CURSON	;
604)   24C9 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
604)   24CD 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
604)   24D1 4F 46       		 DEFM  "LCD_DISPOF"	;
605)   24D3 C6          		 DEFB 'F'+80H	;
606)   24D4 46 26       		 DEFW LCD_DISPOF	;
607)   24D6 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
607)   24DA 44 49 53 50 		 DEFM  "LCD_DISPO"	;
607)   24DE 4F          		 DEFM  "LCD_DISPO"	;
608)   24DF CE          		 DEFB 'N'+80H	;
609)   24E0 4C 26       		 DEFW LCD_DISPON	;
610)   24E2 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
610)   24E6 48 4F 4D    		 DEFM  "LCD_HOM"	;
611)   24E9 C5          		 DEFB 'E'+80H	;
612)   24EA 5F 0F       		 DEFW LCD16_HOME	;
613)   24EC 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
613)   24F0 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
613)   24F4 45 46       		 DEFM  "LCD_MOVLEF"	;
614)   24F6 D4          		 DEFB 'T'+80H	;
615)   24F7 58 26       		 DEFW LCD_MOVLFT	;
616)   24F9 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
616)   24FD 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
616)   2501 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
617)   2504 D4          		 DEFB 'T'+80H	;
618)   2505 5E 26       		 DEFW LCD_MOVRGT	;
619)   2507 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
619)   250B 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
620)   250F D4          		 DEFB 'T'+80H	;
621)   2510 64 26       		 DEFW LCD_PRN	;
622)   2512 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
622)   2516 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
622)   251A 45 46       		 DEFM  "LCD_SCRLEF"	;
623)   251C D4          		 DEFB 'T'+80H	;
624)   251D D5 26       		 DEFW LCD_SCRLFT	;
625)   251F 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
625)   2523 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
625)   2527 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
626)   252A D4          		 DEFB 'T'+80H	;
627)   252B DB 26       		 DEFW LCD_SCRRGT	;
628)   252D 50 57       		 DEFM  "PW"	;
629)   252F C4          		 DEFB    'D'+80H	;
630)   2530 57 25       		 DEFW NIMP	;
631)   2532 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
631)   2536 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
631)   253A 53          		 DEFM  "RTC_ADJUS"	;
632)   253B D4          		 DEFB    'T'+80H	;
633)   253C B5 25       		 DEFW RTC_ADJUST	;
634)   253E 52 54 43 5F 		 DEFM  "RTC_GE"	;
634)   2542 47 45       		 DEFM  "RTC_GE"	;
635)   2544 D4          		 DEFB    'T'+80H	;
636)   2545 E3 25       		 DEFW RTC_GET	;
637)   2547 54 59 50    		 DEFM  "TYP"	;
638)   254A C5          		 DEFB    'E'+80H	;
639)   254B 90 25       		 DEFW DRV_TYPFILE	;
641)   254D FF          		 DEFB 0FFH	;
644)   254E C3 E1 26    		DOT: JP EXTCMDRET	;
649)   2551 C3 00 00    		BYE: JP 0	;
652)   2554 C3 E1 26    		FX: JP EXTCMDRET	;
655)   2557 C3 E1 26    		NIMP: JP EXTCMDRET        ;NOT IMPLEMENTED YET	;NOT IMPLEMENTED YET
660)   255A CD F0 46    		DRV_ERROR: CALL EXTERR	;
661)   255D 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
661)   2561 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
661)   2565 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
661)   2569 52          		 DEFM  "STORAGE ERROR"	;
662)   256A 00          		 DEFB    0	;
667)   256B CD CC 0A    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
668)   256E D2 E1 26    		 JP NC, EXTCMDRET	;
669)   2571 18 E7       		 JR DRV_ERROR	;
671)   2573 CD 84 5D    		DRV_GETFNPRM: CALL EXPR       ;VARIABLE TYPE	;VARIABLE TYPE
672)   2576 08          		 EX AF, AF'        ;E NO OF BYTES ACCS THE PARAM	;E NO OF BYTES ACCS THE PARAM
673)   2577 21 00 FB    		 LD HL, ACCS	;
674)   257A 06 00       		 LD B, 0	;
675)   257C 4B          		 LD C, E	;
676)   257D 11 B9 FE    		 LD DE, STRGBUFF	;
677)   2580 ED B0       		 LDIR	;
678)   2582 AF          		 XOR A	;
679)   2583 12          		 LD (DE), A	;
680)   2584 C9          		 RET	;
683)   2585 CD 73 25    		DRV_CD: CALL DRV_GETFNPRM	;
684)   2588 CD F8 0A    		 CALL STRG_DIRCHG	;
685)   258B D2 E1 26    		 JP NC, EXTCMDRET	;
686)   258E 18 CA       		 JR DRV_ERROR	;
689)   2590 CD 73 25    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
690)   2593 CD 10 0B    		 CALL STRG_OPNFILE	;
691)   2596 38 C2       		 JR C, DRV_ERROR	;
692)   2598 CD 98 0B    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
693)   259B 3A E5 FE    		 LD A, (FID)	;
694)   259E CD 2E 0B    		 CALL STRG_CLSFILE	;
695)   25A1 C3 E1 26    		 JP EXTCMDRET	;
702)   25A4 CD 94 5E    		RTC_GETBASPAR: CALL EXPRI	;
703)   25A7 D9          		 EXX	;
704)   25A8 7D          		 LD A, L        ;A HAS THE NUMBER	;A HAS THE NUMBER
705)   25A9 CD 66 29    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
706)   25AC FD 7E 00    		 LD A, (IY)	;
707)   25AF FE 2C       		 CP ', '	;
708)   25B1 FD 23       		 INC IY	;
709)   25B3 7D          		 LD A, L	;
710)   25B4 C9          		 RET	;
715)   25B5 0E 00       		RTC_ADJUST: LD C, 0	;
716)   25B7 11 89 FE    		 LD DE, BUFFER	;
717)   25BA AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
718)   25BB 32 89 FE    		 LD (BUFFER), A	;
719)   25BE 13          		 INC DE	;
720)   25BF C5          		RTCADJ_NXT: PUSH BC	;
721)   25C0 D5          		 PUSH DE	;
722)   25C1 CD A4 25    		 CALL RTC_GETBASPAR	;
723)   25C4 D1          		 POP DE	;
724)   25C5 C1          		 POP BC	;
725)   25C6 28 0B       		 JR Z, RTCADJ_PAROK	;
727)   25C8 FD 2B       		 DEC IY	;
728)   25CA 47          		 LD B, A        ;SAVE A	;SAVE A
729)   25CB 79          		 LD A, C	;
730)   25CC FE 06       		 CP 6	;
731)   25CE 28 08       		 JR Z, RTCADJ_EXEC	;
733)   25D0 C3 A9 27    		 JP SNTX_ERROR	;
734)   25D3 0C          		RTCADJ_PAROK: INC C	;
735)   25D4 12          		 LD (DE), A	;
736)   25D5 13          		 INC DE	;
737)   25D6 18 E7       		 JR RTCADJ_NXT	;
738)   25D8 78          		RTCADJ_EXEC: LD A, B	;
739)   25D9 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
740)   25DA 13          		 INC DE	;
741)   25DB AF          		 XOR A	;
742)   25DC 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
743)   25DD CD 37 0E    		 CALL DS1307_ADJUST	;
744)   25E0 C3 E1 26    		 JP EXTCMDRET	;
746)   25E3 CD DB 0D    		RTC_GET: CALL DS1307_GETNOW	;
748)   25E6 21 F4 25    		 LD HL, TSTSTR	;
749)   25E9 11 00 80    		 LD DE, $8000	;
750)   25EC 01 14 00    		 LD BC, 20	;
751)   25EF C5          		 PUSH BC	;
752)   25F0 ED B0       		 LDIR	;
753)   25F2 C1          		 POP BC	;
754)   25F3 C9          		 RET	;
756)   25F4 31 37 2F 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
756)   25F8 33 2F 32 30 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
756)   25FC 32 31 20 31 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
756)   2600 37 3A 35 32 		 TSTSTR DEFM "17/03/2021 17:52:03"	;
756)   2604 3A 30 33    		 TSTSTR DEFM "17/03/2021 17:52:03"	;
757)   2607 00 0D       		 DEFB 0,0x0D	;
760)   2609 CD 97 0F    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
761)   260C C3 E1 26    		 JP EXTCMDRET	;
763)   260F CD A5 0F    		LCD_BLINKON: CALL LCD16_BLINKON	;
764)   2612 C3 E1 26    		 JP EXTCMDRET	;
766)   2615 CD 48 0F    		LCD_CLR: CALL LCD16_CLR	;
767)   2618 C3 E1 26    		 JP EXTCMDRET	;
770)   261B CD 94 5E    		 CALL EXPRI	;
771)   261E D9          		 EXX	;
772)   261F 55          		 LD D, L	;
773)   2620 D5          		 PUSH DE	;
774)   2621 FD 7E 00    		 LD A, (IY)	;
775)   2624 FE 2C       		 CP ', '	;
776)   2626 28 04       		 JR Z, LCDCA_OK	;
777)   2628 D1          		 POP DE	;
778)   2629 C3 A9 27    		 JP SNTX_ERROR	;
779)   262C FD 23       		LCDCA_OK: INC IY	;
780)   262E CD 94 5E    		 CALL EXPRI	;
781)   2631 D9          		 EXX	;
782)   2632 D1          		 POP DE	;
783)   2633 5D          		 LD E, L	;
784)   2634 CD 6C 0F    		 CALL LCD16_SETCURS	;
785)   2637 C3 E1 26    		 JP EXTCMDRET	;
787)   263A CD 7B 0F    		LCD_CURSOF: CALL LCD16_CURSOFF	;
788)   263D C3 E1 26    		 JP EXTCMDRET	;
790)   2640 CD 89 0F    		LCD_CURSON: CALL LCD16_CURSON	;
791)   2643 C3 E1 26    		 JP EXTCMDRET	;
793)   2646 CD 1F 0F    		LCD_DISPOF: CALL LCD16_NODISP	;
794)   2649 C3 E1 26    		 JP EXTCMDRET	;
796)   264C CD 2D 0F    		LCD_DISPON: CALL LCD16_DISP	;
797)   264F C3 E1 26    		 JP EXTCMDRET	;
799)   2652 CD 5F 0F    		LCD_HOME: CALL LCD16_HOME	;
800)   2655 C3 E1 26    		 JP EXTCMDRET	;
802)   2658 CD BF 0F    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
803)   265B C3 E1 26    		 JP EXTCMDRET	;
805)   265E CD C5 0F    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
806)   2661 C3 E1 26    		 JP EXTCMDRET	;
808)   2664 18 20       		LCD_PRN: JR PRINT0	;
809)   2666 06 02       		PRINT6: LD B, 2	;
810)   2668 18 22       		 JR PRINTC	;
811)   266A 01 00 01    		PRINT8: LD BC, 100H	;
812)   266D 18 1D       		 JR PRINTC	;
813)   266F 21 00 FD    		PRINT9: LD HL, STAVAR	;
814)   2672 AF          		 XOR A	;
815)   2673 BE          		 CP (HL)	;
816)   2674 28 10       		 JR Z, PRINT0	;
817)   2676 3A FB FD    		 LD A, (COUNT)	;
818)   2679 B7          		 OR A	;
819)   267A 28 0A       		 JR Z, PRINT0	;
820)   267C 96          		PRINTA: SUB (HL)	;
821)   267D 28 07       		 JR Z, PRINT0	;
822)   267F 30 FB       		 JR NC, PRINTA	;
823)   2681 ED 44       		 NEG	;
824)   2683 CD 2A 57    		 CALL FILL	;
825)   2686 3A 00 FD    		PRINT0: LD A, (STAVAR)	;
826)   2689 4F          		 LD C, A        ;PRINTS	;PRINTS
827)   268A 06 00       		 LD B, 0        ;PRINTF	;PRINTF
828)   268C CD C2 56    		PRINTC: CALL TERM?	;
829)   268F 28 41       		 JR Z, PRINT4	;
830)   2691 CB 80       		 RES 0, B	;
831)   2693 FD 23       		 INC IY	;
832)   2695 FE 7E       		 CP '~'	;
833)   2697 28 CD       		 JR Z, PRINT6	;
834)   2699 FE 3B       		 CP ';'        ;'	;'
835)   269B 28 CD       		 JR Z, PRINT8	;
836)   269D FE 2C       		 CP ','	;
837)   269F 28 CE       		 JR Z, PRINT9	;
838)   26A1 CD E3 56    		 CALL FORMAT        ;SPC, TAB, '	;SPC, TAB, '
839)   26A4 28 E6       		 JR Z, PRINTC	;
840)   26A6 FD 2B       		 DEC IY	;
841)   26A8 C5          		 PUSH BC	;
842)   26A9 CD 84 5D    		 CALL EXPR        ;VARIABLE TYPE	;VARIABLE TYPE
843)   26AC 08          		 EX AF, AF'	;
844)   26AD FA C3 26    		 JP M, PRINT3        ;STRING	;STRING
845)   26B0 D1          		 POP DE	;
846)   26B1 D5          		 PUSH DE	;
847)   26B2 CB 4A       		 BIT 1, D	;
848)   26B4 F5          		 PUSH AF	;
849)   26B5 CC 96 63    		 CALL Z, STR        ;DECIMAL	;DECIMAL
850)   26B8 F1          		 POP AF	;
851)   26B9 C4 53 63    		 CALL NZ, HEXSTR       ;HEX	;HEX
852)   26BC C1          		 POP BC	;
853)   26BD C5          		 PUSH BC	;
854)   26BE 79          		 LD A, C	;
855)   26BF 93          		 SUB E	;
856)   26C0 D4 2A 57    		 CALL NC, FILL        ;RIGHT JUSTIFY	;RIGHT JUSTIFY
857)   26C3 C1          		PRINT3: POP BC	;
860)   26C4 21 00 FB    		 LD HL, ACCS       ; L IS 00	; L IS 00
861)   26C7 7D          		 LD A, L	;
862)   26C8 83          		 ADD E	;
863)   26C9 6F          		 LD L, A	;
864)   26CA AF          		 XOR A	;
865)   26CB 77          		 LD (HL), A	;
866)   26CC 6F          		 LD L, A	;
867)   26CD CD 51 0F    		 CALL LCD16_PRINT       ;PRINT	;PRINT
868)   26D0 18 BA       		 JR PRINTC	;
869)   26D2 C3 E1 26    		PRINT4: JP EXTCMDRET	;
872)   26D5 CD B3 0F    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
873)   26D8 C3 E1 26    		 JP EXTCMDRET	;
875)   26DB CD B9 0F    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
876)   26DE C3 E1 26    		 JP EXTCMDRET	;
880)   26E1 AF          		 XOR A	;
883)   26E2 C9          		 RET	;
890)   26E3 FE FF       		@MYOS_OSOPEN: CP 255	;
891)   26E5 28 06       		 JR Z, OPW	;
892)   26E7 FE 01       		 CP 1	;
893)   26E9 28 06       		 JR Z, OPRW	;
895)   26EB 18 06       		 JR DOOP	;
896)   26ED 3E 01       		OPW: LD A, 1	;
897)   26EF 18 02       		 JR DOOP	;
898)   26F1 3E 02       		OPRW: LD A, 2	;
899)   26F3 F5          		DOOP: PUSH AF        ;SAVE A	;SAVE A
900)   26F4 AF          		 XOR A         ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
901)   26F5 12          		 LD (DE), A        ;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0	;MAKE FILENAME ZERO TERMINATED REPLACE #13 WITH 0
902)   26F6 EB          		 EX DE, HL	;
903)   26F7 ED 52       		 SBC HL, DE	;
904)   26F9 23          		 INC HL         ;+1 FOR ZERO	;+1 FOR ZERO
905)   26FA E5          		 PUSH HL	;
906)   26FB C1          		 POP BC	;
907)   26FC EB          		 EX DE, HL	;
908)   26FD 11 B9 FE    		 LD DE, STRGBUFF	;
909)   2700 ED B0       		 LDIR         ;COPY FILENAME TO STRGBUFF	;COPY FILENAME TO STRGBUFF
910)   2702 F1          		 POP AF         ;RESTORE A	;RESTORE A
911)   2703 CD 10 0B    		 CALL STRG_OPNFILE	;
912)   2706 DA 5A 25    		 JP C, DRV_ERROR	;
913)   2709 C9          		 RET	;
917)   270A 21 B9 FE    		@MYOS_OSBPUT: LD HL, STRGBUFF	;
918)   270D 77          		 LD (HL), A        ;VALUE	;VALUE
919)   270E 7B          		 LD A, E        ;FID	;FID
920)   270F EB          		 EX DE, HL	;
921)   2710 01 01 00    		 LD BC, 1        ;NO OF BYTES TO WRITE	;NO OF BYTES TO WRITE
922)   2713 CD 40 0B    		 CALL STRG_BLKWRITE	;
923)   2716 DA 5A 25    		 JP C, DRV_ERROR	;
924)   2719 C9          		 RET	;
928)   271A 7B          		@MYOS_OSBGET: LD A, E       ;FID	;FID
929)   271B 11 B9 FE    		 LD DE, STRGBUFF       ;SET BUFFER	;SET BUFFER
930)   271E 01 01 00    		 LD BC, 1        ;NO OF BYTES TO READ	;NO OF BYTES TO READ
931)   2721 CD 63 0B    		 CALL STRG_BLKREAD	;
932)   2724 DA 5A 25    		 JP C, DRV_ERROR	;
933)   2727 78          		 LD A, B	;
934)   2728 81          		 ADD C	;
935)   2729 FE 01       		 CP 1	;
936)   272B 28 03       		 JR Z, GETISOK	;
937)   272D 3E FF       		 LD A, 255	;
938)   272F C9          		 RET	;
939)   2730 3A B9 FE    		GETISOK: LD A, (STRGBUFF)	;
940)   2733 C9          		 RET	;
945)   2734 7B          		@MYOS_GETPTR: LD A, E	;
946)   2735 CD 98 0A    		 CALL STRG_GETPOS	;
947)   2738 C9          		 RET	;
952)   2739 CD B2 0A    		@MYOS_PUTPTR: CALL STRG_SETPOS	;
953)   273C C9          		 RET	;
958)   273D 7B          		@MYOS_GETEXT: LD A, E	;
959)   273E CD 93 0A    		 CALL STRG_GETSIZE	;
960)   2741 C9          		 RET	;
965)   2742 7B          		@MYOS_OSSHUT: LD A, E	;
966)   2743 CD 2E 0B    		 CALL STRG_CLSFILE	;
967)   2746 C9          		 RET	;
970)   2747 7B          		@MYOS_OSSTAT: LD A, E	;
971)   2748 CD 81 0A    		 CALL STRG_GETEOF	;
972)   274B FE FF       		 CP 255         ;TEST IF -1	;TEST IF -1
973)   274D C9          		 RET	;
977)   274E C9          		@MYOS_OSCALL: RET	;
980)   274F C9          		@MYOS_RESET: RET	;
982)   2750 CD 94 5E    		@MYOS_MODE: CALL EXPRI       ;GET PARAM	;GET PARAM
983)   2753 D9          		 EXX         ;HL HAS THE PARAM	;HL HAS THE PARAM
984)   2754 C3 E8 4C    		 JP XEQ	;
986)   2757 CD 94 1E    		@MYOS_CLG: CALL GRPH_SAVECOLORS	;
987)   275A CD 09 1A    		 CALL LCD_CLRSCR	;
988)   275D CD AB 1E    		 CALL GRPH_RESTORECOLORS	;
989)   2760 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
992)   2763 DD E5       		@MYOS_GCOL: PUSH IX	;
993)   2765 3E 01       		 LD A, 1	;
994)   2767 CD 99 1C    		 CALL BAS_COLOUR	;
995)   276A DD E1       		 POP IX	;
996)   276C C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
998)   276F DD E5       		@MYOS_COLOUR: PUSH IX	;
999)   2771 AF          		 XOR A	;
1000)   2772 CD 99 1C    		 CALL BAS_COLOUR	;
1001)   2775 DD E1       		 POP IX	;
1002)   2777 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1004)   277A DD E5       		@MYOS_DRAW: PUSH IX	;
1005)   277C CD 72 1D    		 CALL BAS_DRAW	;
1006)   277F DD E1       		 POP IX	;
1007)   2781 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1009)   2784 DD E5       		@MYOS_MOVE: PUSH IX	;
1010)   2786 CD 9B 1D    		 CALL BAS_MOVE	;
1011)   2789 DD E1       		 POP IX	;
1012)   278B C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1014)   278E DD E5       		@MYOS_PLOT: PUSH IX	;
1015)   2790 CD 0B 1E    		 CALL BAS_PLOT	;
1016)   2793 DD E1       		 POP IX	;
1017)   2795 C3 E8 4C    		 JP XEQ         ;RETURN TO BASIC	;RETURN TO BASIC
1019)   2798 DD E5       		@MYOS_POINT: PUSH IX	;
1020)   279A CD A7 1D    		 CALL BAS_POINT       ;RETURNS A VALUE TO BASIC	;RETURNS A VALUE TO BASIC
1021)   279D DD E1       		 POP IX	;
1022)   279F C9          		 RET	;
1031)   27A0 CD 2E 1D    		@MYOS_PUTIMS: CALL GETBASICPARAMS     ;	;
1032)   27A3 C3 E8 4C    		 JP XEQ	;
1034)   27A6 C3 E3 25    		@MYOS_GETIMS: JP RTC_GET	;
1036)   27A9 CD F0 46    		SNTX_ERROR: CALL EXTERR	;
1037)   27AC 53 79 6E 74 		 DEFM  "Syntax error"	;
1037)   27B0 61 78 20 65 		 DEFM  "Syntax error"	;
1037)   27B4 72 72 6F 72 		 DEFM  "Syntax error"	;
1038)   27B8 00          		 DEFB    0	;
1045)   27B9 CD 4A 03    		GETKEY: CALL GET_CHAR	;
1046)   27BC 37          		 SCF	;
1047)   27BD C9          		 RET	;
1053)   27BE CD 37 03    		 CALL GET_CHARNW	;
1054)   27C1 3F          		 CCF	;
1055)   27C2 FE 00       		 CP 0	;
1056)   27C4 C8          		 RET Z	;
1057)   27C5 37          		 SCF	;
1058)   27C6 C9          		 RET	;
1060)   27C7 F5          		@CHKCURS: PUSH AF	;
1061)   27C8 3A A7 FE    		 LD A, (TIMECTR)	;
1062)   27CB CB 67       		 BIT 4, A	;
1063)   27CD 28 11       		 JR Z, CCSHOW        ;IF SET SHOW	;IF SET SHOW
1064)   27CF 3A 11 FE    		CCHIDE: LD A, (CURSSTAT)	;
1065)   27D2 CB 4F       		 BIT 1, A	;
1066)   27D4 20 19       		 JR NZ, CCEX        ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
1067)   27D6 CB CF       		 SET 1, A	;
1068)   27D8 32 11 FE    		 LD (CURSSTAT), A	;
1069)   27DB CD 78 03    		 CALL OS_RMVCURS	;
1070)   27DE 18 0F       		 JR CCEX	;
1071)   27E0 3A 11 FE    		CCSHOW: LD A, (CURSSTAT)	;
1072)   27E3 CB 4F       		 BIT 1, A	;
1073)   27E5 28 08       		 JR Z, CCEX        ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
1074)   27E7 CB 8F       		 RES 1, A	;
1075)   27E9 32 11 FE    		 LD (CURSSTAT), A	;
1076)   27EC CD 71 03    		 CALL OS_PRNCURS	;
1078)   27EF F1          		CCEX: POP AF	;
1079)   27F0 C9          		 RET	;
1090)   27F1 3A 00 FE    		 LD A, (FLAGS)	;
1091)   27F4 CB 5F       		 BIT 3, A        ;EDIT MODE?	;EDIT MODE?
1092)   27F6 28 09       		 JR Z, OSLIN1	;
1093)   27F8 CB 9F       		 RES 3, A	;
1094)   27FA 32 00 FE    		 LD (FLAGS), A	;
1095)   27FD 2A 12 FE    		 LD HL, (EDPTR)	;
1096)   2800 BD          		 CP L	;
1097)   2801 3E 0D       		OSLIN1: LD A, CR	;
1098)   2803 77          		 LD (HL), A	;
1099)   2804 C4 66 21    		 CALL NZ, MYOS_OSWRCH	;
1100)   2807 2E 00       		 LD L, 0	;
1101)   2809 4D          		 LD C, L        ;REPEAT FLAG	;REPEAT FLAG
1102)   280A 28 20       		 JR Z, OSWAIT        ;SUPPRESS UNWANTED SPACE	;SUPPRESS UNWANTED SPACE
1103)   280C 06 00       		UPDATE: LD B, 0	;
1104)   280E 7E          		UPD1: LD A, (HL)	;
1105)   280F 04          		 INC B	;
1106)   2810 23          		 INC HL	;
1107)   2811 FE 0D       		 CP CR	;
1108)   2813 F5          		 PUSH AF	;
1109)   2814 E5          		 PUSH HL	;
1110)   2815 5F          		 LD E, A	;
1111)   2816 C4 1A 23    		 CALL NZ, WRCH        ;FAST WRCH	;FAST WRCH
1112)   2819 E1          		 POP HL	;
1113)   281A F1          		 POP AF	;
1114)   281B 20 F1       		 JR NZ, UPD1	;
1115)   281D 3E 20       		 LD A, ' '	;
1116)   281F CD 66 21    		 CALL MYOS_OSWRCH	;
1117)   2822 1E 08       		 LD E, BS	;
1118)   2824 E5          		UPD2: PUSH HL	;
1119)   2825 CD 1A 23    		 CALL WRCH        ;FAST WRCH	;FAST WRCH
1120)   2828 E1          		 POP HL	;
1121)   2829 2B          		 DEC HL	;
1122)   282A 10 F8       		 DJNZ UPD2	;
1123)   282C 79          		OSWAIT: LD A, C	;
1124)   282D 05          		 DEC B	;
1125)   282E 28 01       		 JR Z, LIMIT	;
1126)   2830 B7          		 OR A         ;REPEAT COMMAND?	;REPEAT COMMAND?
1127)   2831 CC 59 21    		LIMIT: CALL Z, KEYGET        ;READ KEYBOARD	;READ KEYBOARD
1128)   2834 4F          		 LD C, A        ;SAVE FOR REPEAT	;SAVE FOR REPEAT
1129)   2835 11 2C 28    		 LD DE, OSWAIT        ;RETURN ADDRESS	;RETURN ADDRESS
1130)   2838 D5          		 PUSH DE	;
1131)   2839 3A 00 FE    		 LD A, (FLAGS)	;
1132)   283C B7          		 OR A         ;TEST FOR ESCAPE	;TEST FOR ESCAPE
1133)   283D 79          		 LD A, C	;
1134)   283E FA 80 28    		 JP M, OSEXIT	;
1135)   2841 FE 0B       		 CP 11         ;CURSOR UP     (IX-11)	;CURSOR UP     (IX-11)
1136)   2843 CA C4 28    		 JP Z, LEFT	;
1137)   2846 FE 0A       		 CP 10         ;CURSOR DOWN   (IX-10)	;CURSOR DOWN   (IX-10)
1138)   2848 CA F7 28    		 JP Z, RIGHT	;
1139)   284B 06 00       		 LD B, 0	;
1140)   284D FE 05       		 CP 5         ;CLEAR LEFT    (IX-5)	;CLEAR LEFT    (IX-5)
1141)   284F 28 72       		 JR Z, BACK	;
1142)   2851 FE 09       		 CP 9         ;START OF LINE (IX-9)	;START OF LINE (IX-9)
1143)   2853 28 6F       		 JR Z, LEFT	;
1144)   2855 FE 07       		 CP 7         ;CLEAR RIGHT   (IX-7)	;CLEAR RIGHT   (IX-7)
1145)   2857 28 76       		 JR Z, DELETE	;
1146)   2859 FE 08       		 CP 8         ;END OF LINE   (IX-8)	;END OF LINE   (IX-8)
1147)   285B CA F7 28    		 JP Z, RIGHT	;
1148)   285E 0E 00       		 LD C, 0        ;INHIBIT REPEAT	;INHIBIT REPEAT
1149)   2860 FE 10       		 CP 'P' AND 1FH	;
1150)   2862 CA 3D 23    		 JP Z, TOGGLE	;
1151)   2865 FE 06       		 CP 6         ;DELETE LEFT   (IX-6)	;DELETE LEFT   (IX-6)
1152)   2867 28 5A       		 JR Z, BACK	;
1153)   2869 FE 04       		 CP 4         ;CURSOR LEFT   (IX-4)	;CURSOR LEFT   (IX-4)
1154)   286B 28 57       		 JR Z, LEFT	;
1155)   286D FE 02       		 CP 2         ;DELETE RIGHT  (IX-2)	;DELETE RIGHT  (IX-2)
1156)   286F 28 5E       		 JR Z, DELETE	;
1157)   2871 FE 01       		 CP 1         ;INSERT SPACE  (IX-1)	;INSERT SPACE  (IX-1)
1158)   2873 28 6E       		 JR Z, INSERT	;
1159)   2875 FE 03       		 CP 3         ;CURSOR RIGHT  (IX-3)	;CURSOR RIGHT  (IX-3)
1160)   2877 28 7E       		 JR Z, RIGHT	;
1161)   2879 FE 20       		 CP ' '         ;PRINTING CHARACTER	;PRINTING CHARACTER
1162)   287B 30 7F       		 JR NC, SAVECH	;
1163)   287D FE 0D       		 CP CR         ;ENTER LINE	;ENTER LINE
1164)   287F C0          		 RET NZ	;
1165)   2880 7E          		OSEXIT: LD A, (HL)	;
1166)   2881 CD 66 21    		 CALL MYOS_OSWRCH       ;WRITE REST OF LINE	;WRITE REST OF LINE
1167)   2884 23          		 INC HL	;
1168)   2885 D6 0D       		 SUB CR	;
1169)   2887 20 F7       		 JR NZ, OSEXIT	;
1170)   2889 D1          		 POP DE         ;DITCH RETURN ADDRESS	;DITCH RETURN ADDRESS
1171)   288A B9          		 CP C	;
1172)   288B C2 7A 23    		 JP NZ, ABORT        ;ESCAPE	;ESCAPE
1173)   288E 3E 0A       		 LD A, LF	;
1174)   2890 CD 66 21    		 CALL MYOS_OSWRCH	;
1175)   2893 ED 5B F4 FD 		 LD DE, (ERRLIN)	;
1176)   2897 AF          		 XOR A	;
1177)   2898 6F          		 LD L, A	;
1178)   2899 22 12 FE    		 LD (EDPTR), HL	;
1179)   289C BA          		 CP D	;
1180)   289D C0          		 RET NZ	;
1181)   289E BB          		 CP E	;
1182)   289F C0          		 RET NZ	;
1183)   28A0 11 10 29    		 LD DE, EDITST	;
1184)   28A3 06 04       		 LD B, 4	;
1185)   28A5 1A          		CMPARE: LD A, (DE)	;
1186)   28A6 BE          		 CP (HL)	;
1187)   28A7 3E 00       		 LD A, 0	;
1188)   28A9 C0          		 RET NZ	;
1189)   28AA 23          		 INC HL	;
1190)   28AB 13          		 INC DE	;
1191)   28AC 7E          		 LD A, (HL)	;
1192)   28AD FE 2E       		 CP '.'	;
1193)   28AF 28 02       		 JR Z, ABBR	;
1194)   28B1 10 F2       		 DJNZ CMPARE	;
1195)   28B3 AF          		ABBR: XOR A	;
1196)   28B4 47          		 LD B, A	;
1197)   28B5 4D          		 LD C, L	;
1198)   28B6 6F          		 LD L, A	;
1199)   28B7 11 14 29    		 LD DE, LISTST	;
1200)   28BA EB          		 EX DE, HL	;
1201)   28BB ED B0       		 LDIR	;
1202)   28BD 21 00 FE    		 LD HL, FLAGS	;
1203)   28C0 CB DE       		 SET 3, (HL)	;
1204)   28C2 C9          		 RET	;
1206)   28C3 37          		BACK: SCF         ;DELETE LEFT	;DELETE LEFT
1207)   28C4 2C          		LEFT: INC L         ;CURSOR LEFT	;CURSOR LEFT
1208)   28C5 2D          		 DEC L	;
1209)   28C6 28 45       		 JR Z, STOP	;
1210)   28C8 3E 08       		 LD A, BS	;
1211)   28CA CD 66 21    		 CALL MYOS_OSWRCH	;
1212)   28CD 2D          		 DEC L	;
1213)   28CE D0          		 RET NC	;
1214)   28CF 7E          		DELETE: LD A, (HL)        ;DELETE RIGHT	;DELETE RIGHT
1215)   28D0 FE 0D       		 CP CR	;
1216)   28D2 28 39       		 JR Z, STOP	;
1217)   28D4 54          		 LD D, H	;
1218)   28D5 5D          		 LD E, L	;
1219)   28D6 13          		DEL1: INC DE	;
1220)   28D7 1A          		 LD A, (DE)	;
1221)   28D8 1B          		 DEC DE	;
1222)   28D9 12          		 LD (DE), A	;
1223)   28DA 13          		 INC DE	;
1224)   28DB FE 0D       		 CP CR	;
1225)   28DD 20 F7       		 JR NZ, DEL1	;
1226)   28DF D1          		DEL2: POP DE         ;DITCH	;DITCH
1227)   28E0 C3 0C 28    		 JP UPDATE	;
1229)   28E3 3E 0D       		INSERT: LD A, CR        ;INSERT SPACE	;INSERT SPACE
1230)   28E5 BE          		 CP (HL)	;
1231)   28E6 C8          		 RET Z	;
1232)   28E7 54          		 LD D, H	;
1233)   28E8 1E FE       		 LD E, 254	;
1234)   28EA 13          		INS1: INC DE	;
1235)   28EB 12          		 LD (DE), A	;
1236)   28EC 1B          		 DEC DE	;
1237)   28ED 7B          		 LD A, E	;
1238)   28EE BD          		 CP L	;
1239)   28EF 1B          		 DEC DE	;
1240)   28F0 1A          		 LD A, (DE)	;
1241)   28F1 20 F7       		 JR NZ, INS1	;
1242)   28F3 36 20       		 LD (HL), ' '	;
1243)   28F5 18 E8       		 JR DEL2	;
1245)   28F7 7E          		RIGHT: LD A, (HL)        ;CURSOR RIGHT	;CURSOR RIGHT
1246)   28F8 FE 0D       		 CP CR	;
1247)   28FA 28 11       		 JR Z, STOP	;
1248)   28FC 56          		SAVECH: LD D, (HL)        ;PRINTING CHARACTER	;PRINTING CHARACTER
1249)   28FD 77          		 LD (HL), A	;
1250)   28FE 2C          		 INC L	;
1251)   28FF 28 09       		 JR Z, WONTGO        ;LINE TOO LONG	;LINE TOO LONG
1252)   2901 CD 66 21    		 CALL MYOS_OSWRCH	;
1253)   2904 3E 0D       		 LD A, CR	;
1254)   2906 BA          		 CP D	;
1255)   2907 C0          		 RET NZ	;
1256)   2908 77          		 LD (HL), A	;
1257)   2909 C9          		 RET	;
1259)   290A 2D          		WONTGO: DEC L	;
1260)   290B 36 0D       		 LD (HL), CR	;
1263)   290D 0E 00       		STOP: LD C, 0        ;STOP REPEAT	;STOP REPEAT
1264)   290F C9          		 RET	;
1267)   2910 45 44 49 54 		EDITST: DEFM  "EDIT"	;
1268)   2914 4C 49 53 54 		LISTST: DEFM  "LIST"	;
 18)   2918 C9          		 RET	;
 21)   2919 F5          		DELAYMICROSEC: PUSH AF	;
 22)   291A D5          		 PUSH DE	;
 23)   291B 1B          		 DEC DE	;
 24)   291C D1          		 POP DE	;
 25)   291D F1          		 POP AF	;
 26)   291E C9          		 RET	;
 29)   291F CD 19 29    		S21: CALL DELAYMICROSEC	;
 30)   2922 10 FB       		 DJNZ S21	;
 31)   2924 C9          		 RET	;
 35)   2925 F5          		DELAYMILISEC: PUSH AF	;
 36)   2926 D5          		 PUSH DE	;
 37)   2927 11 2C 01    		 LD DE, 300       ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 38)   292A 1B          		DEL1: DEC DE	;
 39)   292B 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 40)   292C B3          		 OR E	;
 41)   292D 20 FB       		 JR NZ, DEL1	;
 42)   292F D1          		 POP DE	;
 43)   2930 F1          		 POP AF	;
 44)   2931 C9          		 RET	;
 46)   2932 06 50       		DEL2: LD B, 80	;
 48)   2934 CD 25 29    		S1: CALL DELAYMILISEC	;
 49)   2937 10 FB       		 DJNZ S1	;
 50)   2939 C9          		 RET	;
 55)   293A C5          		@DELAYSEC: PUSH BC	;
 56)   293B 01 E8 03    		 LD BC, 1000	;
 57)   293E C5          		MYDLAGN: PUSH BC	;
 58)   293F CD 25 29    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 59)   2942 C1          		 POP BC	;
 60)   2943 0B          		 DEC BC	;
 61)   2944 78          		 LD A, B	;
 62)   2945 B1          		 OR C	;
 63)   2946 20 F6       		 JR NZ, MYDLAGN	;
 64)   2948 C1          		 POP BC	;
 65)   2949 10 EF       		 DJNZ DELAYSEC	;
 66)   294B C9          		 RET	;
 71)   294C F5          		 OUTASC PUSH AF	;
 72)   294D D5          		 PUSH DE	;
 73)   294E CD 81 29    		 CALL B2Bcd	;
 74)   2951 D1          		 POP DE	;
 75)   2952 CD A7 29    		 CALL BCD2HA	;
 76)   2955 F1          		 POP AF	;
 77)   2956 C9          		 RET	;
 91)   2957 B7          		BCD2BN: OR A	;
 92)   2958 47          		 LD B, A	;
 93)   2959 E6 F0       		 AND $F0	;
 94)   295B 0F          		 RRCA	;
 95)   295C 4F          		 LD C, A	;
 96)   295D 0F          		 RRCA	;
 97)   295E 0F          		 RRCA	;
 98)   295F 81          		 ADD A, C	;
 99)   2960 4F          		 LD C, A	;
100)   2961 78          		 LD A, B	;
101)   2962 E6 0F       		 AND $0F	;
102)   2964 81          		 ADD A, C	;
103)   2965 C9          		 RET	;
118)   2966 26 FF       		BN2BCD: LD H, $FF	;
119)   2968 24          		D100LP: INC H	;
120)   2969 D6 64       		 SUB 100	;
121)   296B 30 FB       		 JR NC, D100LP	;
122)   296D C6 64       		 ADD A, 100	;
123)   296F 2E FF       		 LD L, $FF	;
124)   2971 2C          		D10LP: INC L	;
125)   2972 D6 0A       		 SUB 10	;
126)   2974 30 FB       		 JR NC, D10LP	;
127)   2976 C6 0A       		 ADD A, 10	;
128)   2978 4F          		 LD C, A	;
129)   2979 7D          		 LD A, L	;
130)   297A 07          		 RLCA	;
131)   297B 07          		 RLCA	;
132)   297C 07          		 RLCA	;
133)   297D 07          		 RLCA	;
134)   297E B1          		 OR C	;
135)   297F 6F          		 LD L, A	;
136)   2980 C9          		 RET	;
150)   2981 01 00 10    		 LD BC, 16 * 256 + 0      ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
151)   2984 11 00 00    		 LD DE, 0	;
153)   2987 29          		 ADD HL, HL	;
154)   2988 7B          		 LD A, E	;
155)   2989 8F          		 ADC A, A	;
156)   298A 27          		 DAA	;
157)   298B 5F          		 LD E, A	;
158)   298C 7A          		 LD A, D	;
159)   298D 8F          		 ADC A, A	;
160)   298E 27          		 DAA	;
161)   298F 57          		 LD D, A	;
162)   2990 79          		 LD A, C	;
163)   2991 8F          		 ADC A, A	;
164)   2992 27          		 DAA	;
165)   2993 4F          		 LD C, A	;
166)   2994 10 F1       		 DJNZ cvtLp	;
167)   2996 EB          		 EX DE, HL	;
168)   2997 C9          		 RET	;
182)   2998 B7          		BCD2BN: OR A	;
183)   2999 47          		 LD B, A	;
184)   299A E6 F0       		 AND $F0	;
185)   299C 0F          		 RRCA	;
186)   299D 4F          		 LD C, A	;
187)   299E 0F          		 RRCA	;
188)   299F 0F          		 RRCA	;
189)   29A0 81          		 ADD A, C	;
190)   29A1 4F          		 LD C, A	;
191)   29A2 78          		 LD A, B	;
192)   29A3 E6 0F       		 AND $0F	;
193)   29A5 81          		 ADD A, C	;
194)   29A6 C9          		 RET	;
206)   29A7 79          		 LD A, C	;
207)   29A8 CD D4 29    		 CALL cvtUN	;
208)   29AB 79          		 LD A, C	;
209)   29AC CD D8 29    		 CALL cvtLN	;
210)   29AF 7C          		 LD A, H	;
211)   29B0 CD D4 29    		 CALL cvtUN	;
212)   29B3 7C          		 LD A, H	;
213)   29B4 CD D8 29    		 CALL cvtLN	;
214)   29B7 7D          		 LD A, L	;
215)   29B8 CD D4 29    		 CALL cvtUN	;
216)   29BB 7D          		 LD A, L	;
217)   29BC 18 1A       		 JR cvtLN	;
219)   29BE 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
220)   29BF 1F          		 RRA	;
221)   29C0 1F          		 RRA	;
222)   29C1 1F          		 RRA	;
224)   29C2 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
225)   29C4 C6 90       		 ADD A, 90h       ; old trick	; old trick
226)   29C6 27          		 DAA        ; for converting	; for converting
227)   29C7 CE 40       		 ADC A, 40h       ; one nibble	; one nibble
228)   29C9 27          		 DAA        ; to hex ASCII	; to hex ASCII
229)   29CA 12          		 LD (DE), A	;
230)   29CB 13          		 INC DE	;
231)   29CC C9          		 RET	;
243)   29CD 7D          		 LD A, L	;
244)   29CE CD BE 29    		 CALL cvtUN	;
245)   29D1 7D          		 LD A, L	;
246)   29D2 18 EE       		 JR cvtLN	;
248)   29D4 1F          		 RRA        ; move upper nibble into lower nibble	; move upper nibble into lower nibble
249)   29D5 1F          		 RRA	;
250)   29D6 1F          		 RRA	;
251)   29D7 1F          		 RRA	;
253)   29D8 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
254)   29DA C6 90       		 ADD A, 90h       ; old trick	; old trick
255)   29DC 27          		 DAA        ; for converting	; for converting
256)   29DD CE 40       		 ADC A, 40h       ; one nibble	; one nibble
257)   29DF 27          		 DAA        ; to hex ASCII	; to hex ASCII
258)   29E0 12          		 LD (DE), A	;
259)   29E1 13          		 INC DE	;
260)   29E2 C9          		 RET	;
277)   29E3 F5          		 PUSH AF        ; 11 T-states	; 11 T-states
279)   29E4 ED 44       		 NEG         ; 8 T-states	; 8 T-states
280)   29E6 ED 44       		 NEG         ; 8 T-states	; 8 T-states
281)   29E8 ED 44       		 NEG         ; 8 T-states	; 8 T-states
282)   29EA ED 44       		 NEG         ; 8 T-states	; 8 T-states
283)   29EC 0B          		 DEC BC         ; 6 T-states	; 6 T-states
284)   29ED 79          		 LD A, C        ; 9 T-states	; 9 T-states
285)   29EE B0          		 OR B         ; 4 T-states	; 4 T-states
286)   29EF C2 E4 29    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
287)   29F2 F1          		 POP AF         ; 10 T-states	; 10 T-states
288)   29F3 C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
  7)   29F4 16 00       		   ld d,0	;
  8)   29F6 6A          		   ld l,d	;
  9)   29F7 06 08       		   ld b,8	;
 11)   29F9 29          		   add hl,hl	;
 12)   29FA 30 01       		   jr nc,Mult8_NoAdd	;
 13)   29FC 19          		   add hl,de	;
 15)   29FD 10 FA       		   djnz Mult8_Loop	;
 16)   29FF C9          		   ret	;
 23)   2A00 2E 00       		   ld l,0	;
 24)   2A02 06 08       		   ld b,8	;
 26)   2A04 29          		   add hl,hl	;
 27)   2A05 87          		   add a,a	;
 28)   2A06 30 01       		   jr nc,Mult12_NoAdd	;
 29)   2A08 19          		   add hl,de	;
 31)   2A09 10 F9       		   djnz Mult12_Loop	;
 32)   2A0B C9          		   ret	;
 39)   2A0C 21 00 00    		@Mult16: ld hl, 0	;
 40)   2A0F 78          		 ld a, b	;
 41)   2A10 06 10       		 ld b, 16	;
 43)   2A12 29          		 add hl, hl	;
 44)   2A13 CB 21       		 sla c	;
 45)   2A15 17          		 rla	;
 46)   2A16 30 01       		 jr nc, Mult16_NoAdd	;
 47)   2A18 19          		 add hl, de	;
 49)   2A19 10 F7       		 djnz Mult16_Loop	;
 50)   2A1B C9          		 ret	;
 56)   2A1C D5          		@Mult32: PUSH DE	;
 57)   2A1D 79          		 ld a, c	;
 58)   2A1E 48          		 ld c, b	;
 59)   2A1F 21 00 00    		 ld hl, 0	;
 60)   2A22 06 10       		 ld b, 16	;
 62)   2A24 29          		 add hl, hl	;
 63)   2A25 17          		 rla	;
 64)   2A26 CB 11       		 rl c	;
 65)   2A28 30 07       		 jr nc, Mult32_NoAdd	;
 66)   2A2A 19          		 add hl, de	;
 67)   2A2B CE 00       		 adc a, 0	;
 68)   2A2D D2 31 2A    		 jp nc, Mult32_NoAdd	;
 69)   2A30 0C          		 inc c	;
 71)   2A31 10 F1       		 djnz Mult32_Loop	;
 72)   2A33 41          		 ld b, c	;
 73)   2A34 4F          		 ld c, a	;
 74)   2A35 D1          		 POP DE	;
 75)   2A36 C9          		 ret	;
 83)   2A37 19          		 ADD HL, DE        ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
 84)   2A38 D9          		 EXX	;
 85)   2A39 ED 5A       		 ADC HL, DE        ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
 86)   2A3B D9          		 EXX	;
 89)   2A3C C9          		 RET	;
 99)   2A3D 11 40 00    		 ld de, $0040	;
100)   2A40 7D          		 ld a, l	;
101)   2A41 6C          		 ld l, h	;
102)   2A42 62          		 ld h, d	;
103)   2A43 B7          		 or a	;
104)   2A44 06 08       		 ld b, 8	;
106)   2A46 ED 52       		 sbc hl, de	;
107)   2A48 30 01       		 jr nc, Sqr16_Skip	;
108)   2A4A 19          		 add hl, de	;
110)   2A4B 3F          		 ccf	;
111)   2A4C CB 12       		 rl d	;
112)   2A4E 87          		 add a, a	;
113)   2A4F ED 6A       		 adc hl, hl	;
114)   2A51 87          		 add a, a	;
115)   2A52 ED 6A       		 adc hl, hl	;
116)   2A54 10 F0       		 djnz Sqr16_Loop	;
117)   2A56 C9          		 ret	;
  9)   FE00 00          		 @FLAGS DEFS 1        ; Flags: B7=ESC PRESSED,B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 10)   FE01 00 00       		 @FCOLOR DEFS 2       ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 11)   FE03 00 00       		 @BCOLOR DEFS 2       ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 12)   FE05 00 00       		 @FGRCOL DEFS 2       ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 13)   FE07 00 00       		 @BGRCOL DEFS 2       ;BACKGROUND COLOR FOR GRAPHICS	;BACKGROUND COLOR FOR GRAPHICS
 14)   FE09 00 00       		 @FCOLTM DEFS 2       ;TEMP FOREGROUND COLOR	;TEMP FOREGROUND COLOR
 15)   FE0B 00 00       		 @BCOLTM DEFS 2       ;TEMP BACKGROUND COLOR	;TEMP BACKGROUND COLOR
 16)   FE0D 00          		 @CURSORX DEFS 1       ;0-79	;0-79
 17)   FE0E 00          		 @CURSORY DEFS 1       ;0-47	;0-47
 18)   FE0F 00          		 @SCRLN DEFS 1        ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 19)   FE10 00          		 @LASTCHAR DEFS 1      ;	;
 20)   FE11 00          		 @CURSSTAT DEFS 1       ;IF BIT 0 SET THEN SHOW ELSE HIDE,IF BIT 1 SET THEN VISIBLE ELSE HIDDEN	;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN
 21)   FE12 00 00       		 @EDPTR DEFS 2	;
 22)   FE14 00          		 @OPTVAL DEFS 1	;
 23)   FE15 00          		 @INKEY DEFS 1	;
 24)   FE16 00          		 @VDUMODE DEFS 1       ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 25)   FE17 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE1F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE23 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE27 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE2F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 25)   FE33 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 26)   FE37 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE3F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE43 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE47 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE4F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 26)   FE53 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 27)   FE57 00 00       		 @GR_LASTX3 DEFS 2	;
 28)   FE59 00 00       		 @GR_LASTY3 DEFS 2	;
 29)   FE5B 00 00       		 @GR_LASTX2 DEFS 2	;
 30)   FE5D 00 00       		 @GR_LASTY2 DEFS 2	;
 31)   FE5F 00 00       		 @GR_LASTX DEFS 2	;
 32)   FE61 00 00       		 @GR_LASTY DEFS 2	;
 33)   FE63 00 00       		 @GR_PARAM1 DEFS 2	;
 34)   FE65 00 00       		 @GR_PARAM2 DEFS 2	;
 35)   FE67 00 00       		 @GR_PARAM3 DEFS 2	;
 36)   FE69 00 00       		 @GR_PARAM4 DEFS 2	;
 38)   FE6B 00 00       		 @FILL_X DEFS 2	;
 39)   FE6D 00 00       		 @FILL_Y DEFS 2	;
 40)   FE6F 00 00       		 @FILL_L DEFS 2	;
 41)   FE71 00 00       		 @FILL_X1 DEFS 2	;
 42)   FE73 00 00       		 @FILL_X2 DEFS 2	;
 43)   FE75 00 00       		 @FILL_DY DEFS 2	;
 44)   FE77 00 00       		 @FILL_Q DEFS 2        ;START OF QUEUE	;START OF QUEUE
 45)   FE79 00 00       		 @FILL_IDX DEFS 2       ;INDEX OF QUEUE	;INDEX OF QUEUE
 46)   FE7B 00 00       		 @FILL_PY DEFS 2       ;FOR PUSH/POP	;FOR PUSH/POP
 47)   FE7D 00 00       		 @FILL_PXL DEFS 2	;
 48)   FE7F 00 00       		 @FILL_PXR DEFS 2	;
 49)   FE81 00 00       		 @FILL_PDY DEFS 2	;
 50)   FE83 00 00       		 @FILL_OV DEFS 2       ;OLD COLOR	;OLD COLOR
 51)   FE85 00 00       		 @FILL_OLDSP DEFS 2      ; OLD SP	; OLD SP
 52)   FE87 00          		 @LCD_DSPCTRL DEFS 1	;
 53)   FE88 00          		 @LCD_DSPMODE DEFS 1	;
 54)   FE89 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE8D 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE91 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE95 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 54)   FE99 00 00 00 00 		 @BUFFER DEFS 20       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 55)   FE9D 00          		 @FFSTAT DEFS 1        ;FOR OUTPUT FLIP FLOPS DEVEPR,DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 56)   FE9E 00          		 @KEYCTR DEFS 1        ;FOR USB KEYBOARD	;FOR USB KEYBOARD
 57)   FE9F 00          		 @SERERR DEFS 1       ;	;
 58)   FEA0 00          		 @SERER2 DEFS 1        ;AT RAM ADDRESS	;AT RAM ADDRESS
 59)   FEA1 00          		 @DISPCT DEFS 1        ;	;
 60)   FEA2 00          		 @LCDCX DEFS 1        ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 61)   FEA3 00          		 @LCDCY DEFS 1        ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 62)   FEA4 00 00       		 @PRGEX DEFS 2        ;2 BYTES	;2 BYTES
 63)   FEA6 00          		 @TVSTAT DEFS 1        ;1 BYTE	;1 BYTE
 64)   FEA7 00 00 00 00 		 @TIMECTR DEFS 4	;
 65)   FEAB 00          		 @INT2TE DEFS 1	;
 66)   FEAC 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB0 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB4 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 66)   FEB8 00          		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 67)   FEB9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEBD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEC9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FECD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED1 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED5 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FED9 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 67)   FEDD 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 68)   FEE1 00 00 00 00 		 @STRGCMD DEFS 4	;
 69)   FEE5 00          		 @FID DEFS 1	;
 70)   FEE6 00          		 @SPC DEFS 1	;
 71)   FEE7 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 71)   FEEB 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 72)   FEEF 00          		 @TMPG  DEFS 1  ;TEMP PAGE FOR VIDEO TEXT VGA	;TEMP PAGE FOR VIDEO TEXT VGA
 73)   FEF0 00          		 @PGSEM DEFS 1  ;PAGE SEMAPHORE TO KEEP TRACK OF PAGE CALLS	;PAGE SEMAPHORE TO KEEP TRACK OF PAGE CALLS
 74)   FEF1 00          		 @VGAFCOL DEFS 1  ;VGA FORE COLOR	;VGA FORE COLOR
 75)   FEF2 00          		 @VGABCOL DEFS 1  ;VGA BACK COLOR	;VGA BACK COLOR
 76)   FEF3 00          		 @VGATX_X DEFS 1  ;VGA CURRENT X POS	;VGA CURRENT X POS
 77)   FEF4 00          		 @VGATX_Y DEFS 1  ;VGA CUR Y POS	;VGA CUR Y POS
 78)   FEF5 00          		 @VGAMAXX DEFS 1  ;MAX HORZ CHARS	;MAX HORZ CHARS
 79)   FEF6 00          		 @VGAMAXY DEFS 1  ;MAX VERT LINES	;MAX VERT LINES
