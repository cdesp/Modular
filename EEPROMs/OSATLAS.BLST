  3)   0000 F3          		 DI	;
  4)   0001 C3 00 01    		 JP START	;
  5)   0004 C3 BD 02    		 JP MENU	;
  6)   0007 52          		 VERSION DEFB $52    ; AT ADDR=7 VER 0.52	; AT ADDR=7 VER 0.52
  7)   0008 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   000C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0010 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0014 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0018 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   001C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0020 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0024 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0028 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   002C 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0030 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
  7)   0034 00 00 00 00 		 DS $30     ;SKIP $30 BYTES	;SKIP $30 BYTES
 10)   0038 C3 C3 0D    		 JP INTSER	;
 13)   003B 00 00 00 00 		 ALIGN 256	;
 13)   003F 00 00 00 00 		 ALIGN 256	;
 13)   0043 00 00 00 00 		 ALIGN 256	;
 13)   0047 00 00 00 00 		 ALIGN 256	;
 13)   004B 00 00 00 00 		 ALIGN 256	;
 13)   004F 00 00 00 00 		 ALIGN 256	;
 13)   0053 00 00 00 00 		 ALIGN 256	;
 13)   0057 00 00 00 00 		 ALIGN 256	;
 13)   005B 00 00 00 00 		 ALIGN 256	;
 13)   005F 00 00 00 00 		 ALIGN 256	;
 13)   0063 00 00 00 00 		 ALIGN 256	;
 13)   0067 00 00 00 00 		 ALIGN 256	;
 13)   006B 00 00 00 00 		 ALIGN 256	;
 13)   006F 00 00 00 00 		 ALIGN 256	;
 13)   0073 00 00 00 00 		 ALIGN 256	;
 13)   0077 00 00 00 00 		 ALIGN 256	;
 13)   007B 00 00 00 00 		 ALIGN 256	;
 13)   007F 00 00 00 00 		 ALIGN 256	;
 13)   0083 00 00 00 00 		 ALIGN 256	;
 13)   0087 00 00 00 00 		 ALIGN 256	;
 13)   008B 00 00 00 00 		 ALIGN 256	;
 13)   008F 00 00 00 00 		 ALIGN 256	;
 13)   0093 00 00 00 00 		 ALIGN 256	;
 13)   0097 00 00 00 00 		 ALIGN 256	;
 13)   009B 00 00 00 00 		 ALIGN 256	;
 13)   009F 00 00 00 00 		 ALIGN 256	;
 13)   00A3 00 00 00 00 		 ALIGN 256	;
 13)   00A7 00 00 00 00 		 ALIGN 256	;
 13)   00AB 00 00 00 00 		 ALIGN 256	;
 13)   00AF 00 00 00 00 		 ALIGN 256	;
 13)   00B3 00 00 00 00 		 ALIGN 256	;
 13)   00B7 00 00 00 00 		 ALIGN 256	;
 13)   00BB 00 00 00 00 		 ALIGN 256	;
 13)   00BF 00 00 00 00 		 ALIGN 256	;
 13)   00C3 00 00 00 00 		 ALIGN 256	;
 13)   00C7 00 00 00 00 		 ALIGN 256	;
 13)   00CB 00 00 00 00 		 ALIGN 256	;
 13)   00CF 00 00 00 00 		 ALIGN 256	;
 13)   00D3 00 00 00 00 		 ALIGN 256	;
 13)   00D7 00 00 00 00 		 ALIGN 256	;
 13)   00DB 00 00 00 00 		 ALIGN 256	;
 13)   00DF 00 00 00 00 		 ALIGN 256	;
 13)   00E3 00 00 00 00 		 ALIGN 256	;
 13)   00E7 00 00 00 00 		 ALIGN 256	;
 13)   00EB 00 00 00 00 		 ALIGN 256	;
 13)   00EF 00 00 00 00 		 ALIGN 256	;
 13)   00F3 00 00 00 00 		 ALIGN 256	;
 13)   00F7 00 00 00 00 		 ALIGN 256	;
 13)   00FB 00 00 00 00 		 ALIGN 256	;
 13)   00FF 00          		 ALIGN 256	;
 44)   0100 C3 A1 01    		@START: JP BOOT        ;SKIP TESTING	;SKIP TESTING
 46)   0103 C3 E6 05    		@IOS_CLRSCR: JP OS_CLRSCR	;
 47)   0106 C3 66 05    		@IOS_RMVCURS: JP OS_RMVCURS	;
 48)   0109 C3 52 05    		@IOS_PRNCURS: JP OS_PRNCURS	;
 49)   010C C3 23 26    		@IOS_CALCLINE: JP LCD_CALCLINE      ;TODO: VGA???	;TODO: VGA???
 50)   010F C3 08 05    		@IOS_PRINTCHAR: JP OS_PRINTCHAR	;
 51)   0112 C3 0C 04    		@IOS_GETCHAR: JP GET_CHAR	;
 52)   0115 C3 DD 03    		@IOS_GETCHARNW: JP GET_CHARNW	;
 53)   0118 C3 E5 13    		@IOS_DIRLIST: JP STRG_DIRLIST	;
 54)   011B C3 E6 13    		@IOS_DIRCHG: JP STRG_DIRCHG	;
 55)   011E C3 D6 14    		@IOS_OPNFILE: JP STRG_OPNFILE	;
 56)   0121 C3 E7 13    		@IOS_TPFILE: JP STRG_TPFILE	;
 57)   0124 C3 40 15    		@IOS_CLSFILE: JP STRG_CLSFILE	;
 58)   0127 C3 6F 16    		@IOS_BLKWRITE: JP STRG_BLKWRITE	;
 59)   012A C3 4E 15    		@IOS_BLKREAD: JP STRG_BLKREAD	;
 60)   012D C3 E8 13    		@IOS_GETPOS: JP STRG_GETPOS	;
 61)   0130 C3 E9 13    		@IOS_SETPOS: JP STRG_SETPOS	;
 62)   0133 C3 EA 13    		@IOS_GETSIZE: JP STRG_GETSIZE	;
 63)   0136 C3 EB 13    		@IOS_GETEOF: JP STRG_GETEOF	;
 64)   0139 C3 95 2F    		@IOS_BN2BCD: JP BN2BCD	;
 65)   013C C3 1E 09    		@IOS_DOCMD: JP CGDOCMD	;
 66)   013F C3 D9 19    		@IOS_DSADJUST: JP DS1307_ADJUST	;
 67)   0142 C3 3A 19    		@IOS_DSGETNOW: JP DS1307_GETNOW	;
 68)   0145 C3 A8 1B    		@IOS_L16BLOFF: JP LCD16_BLINKOFF	;
 69)   0148 C3 B6 1B    		@IOS_L16BLON: JP LCD16_BLINKON	;
 70)   014B C3 59 1B    		@IOS_L16CLR: JP LCD16_CLR	;
 71)   014E C3 7D 1B    		@IOS_L16SETCRS: JP LCD16_SETCURS	;
 72)   0151 C3 8C 1B    		@IOS_L16CRSOFF: JP LCD16_CURSOFF	;
 73)   0154 C3 9A 1B    		@IOS_L16CRSON: JP LCD16_CURSON	;
 74)   0157 C3 30 1B    		@IOS_L16NODISP: JP LCD16_NODISP	;
 75)   015A C3 3E 1B    		@IOS_L16DISP: JP LCD16_DISP	;
 76)   015D C3 70 1B    		@IOS_L16HOME: JP LCD16_HOME	;
 77)   0160 C3 D0 1B    		@IOS_L16MVLEFT: JP LCD16_MOVLEFT	;
 78)   0163 C3 D6 1B    		@IOS_L16MVRGHT: JP LCD16_MOVRIGHT	;
 79)   0166 C3 62 1B    		@IOS_L16PRINT: JP LCD16_PRINT	;
 80)   0169 C3 C4 1B    		@IOS_L16SCLEFT: JP LCD16_SCRLEFT	;
 81)   016C C3 CA 1B    		@IOS_L16SCRGHT: JP LCD16_SCRRIGHT	;
 82)   016F C3 D2 29    		@IOS_CLRGRAPH: JP CLEARGRAPH	;
 83)   0172 C3 61 2A    		@IOS_GRDRAWLNE: JP GR_DRAWLINE	;
 84)   0175 C3 F1 24    		@IOS_GRREADPXL: JP LCD_READPIXEL      ;TODO: CHANGE TO GRAPH READ PIXEL	;TODO: CHANGE TO GRAPH READ PIXEL
 85)   0178 C3 38 2C    		@IOS_GRCIRCLE: JP GR_CIRCLE	;
 86)   017B C3 53 25    		@IOS_GRFILL: JP LCD_FILL       ;TODO: CHANGE TO GRAPH	;TODO: CHANGE TO GRAPH
 87)   017E C3 A6 29    		@IOS_GRPLTPXL: JP PLOTP	;
 88)   0181 C3 8B 32    		@IOS_ADD32: JP ADD32	;
 89)   0184 C3 1C 32    		@IOS_MULT32: JP MULT32	;
 90)   0187 C3 00 00    		@IOS_SQRT32: JP 0000       ;TODO: MAKE ONE	;TODO: MAKE ONE
 91)   018A C3 40 2E    		@IOS_SND_SETVOLUME: JP SND_SETVOLUME	;
 92)   018D C3 05 2E    		@IOS_SND_NOTE: JP SND_NOTE	;
 93)   0190 C3 63 2F    		@IOS_DELAYMILI: JP DELAYMILI	;
 97)   0193 3E 01       		SETHISPEED: LD A, 1       ;12=9600 BPS, 1=115200BPS	;12=9600 BPS, 1=115200BPS
 98)   0195 CD 89 0E    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
 99)   0198 C9          		 RET	;
102)   0199 0C 0D 0E 0F 		 DB 12,13,14,15,4,5,6,7       ;FOR FILE	;FOR FILE
102)   019D 04 05 06 07 		 DB 12,13,14,15,4,5,6,7       ;FOR FILE	;FOR FILE
106)   01A1 F3          		@BOOT: DI	;
107)   01A2 ED 56       		 IM 1	;
110)   01A4 0E 00       		MMUSETUP: LD C, DEVMMU	;
111)   01A6 AF          		 XOR A	;
112)   01A7 06 80       		 LD B, 12.SHL.5        ;WAS 0	;WAS 0
113)   01A9 ED 79       		 OUT (C), A	;
114)   01AB 3C          		 INC A	;
115)   01AC 06 A0       		 LD B, 13.SHL.5        ;WAS 1	;WAS 1
116)   01AE ED 79       		 OUT (C), A	;
118)   01B0 3E 0E       		 LD A, 14        ;VID MEM RAM	;VID MEM RAM
119)   01B2 06 40       		 LD B, 2.SHL.5	;
120)   01B4 ED 79       		 OUT (C), A	;
122)   01B6 3E 0F       		 LD A, 15        ;VID MEM RAM	;VID MEM RAM
123)   01B8 06 60       		 LD B, 3.SHL.5	;
124)   01BA ED 79       		 OUT (C), A	;
126)   01BC 3E 04       		 LD A, 4	;
127)   01BE 06 80       		 LD B, 4.SHL.5	;
128)   01C0 ED 79       		 OUT (C), A	;
129)   01C2 3C          		 INC A	;
130)   01C3 06 A0       		 LD B, 5.SHL.5	;
131)   01C5 ED 79       		 OUT (C), A	;
132)   01C7 3C          		 INC A	;
133)   01C8 06 C0       		 LD B, 6.SHL.5	;
134)   01CA ED 79       		 OUT (C), A	;
135)   01CC 3C          		 INC A	;
136)   01CD 06 E0       		 LD B, 7.SHL.5	;
137)   01CF ED 79       		 OUT (C), A	;
140)   01D1 3E 07       		INTFFPS: LD A, 7	;
141)   01D3 D3 68       		IFFAGN: OUT (DEVINT), A	;
142)   01D5 3D          		 DEC A	;
143)   01D6 C2 D3 01    		 JP NZ, IFFAGN	;
145)   01D9 31 FF FA    		 LD SP, STACKP	;
146)   01DC 21 00 FE    		 LD HL, OSVARS        ;ZERO OS VARIABLES	;ZERO OS VARIABLES
147)   01DF AF          		SI_AGN: XOR A	;
148)   01E0 77          		 LD (HL), A	;
149)   01E1 23          		 INC HL	;
150)   01E2 7C          		 LD A, H	;
151)   01E3 B5          		 OR L	;
152)   01E4 20 F9       		 JR NZ, SI_AGN        ;HL=0000 WHEN OVERFLOW FROM FFFF	;HL=0000 WHEN OVERFLOW FROM FFFF
154)   01E6 CD 52 0E    		 CALL INITMMU        ;PUT PAGES 0..7 IN RAM BANKS 0..7	;PUT PAGES 0..7 IN RAM BANKS 0..7
155)   01E9 21 99 01    		 LD HL, MYMMUBANK	;
156)   01EC 11 33 FF    		 LD DE, BANKS	;
157)   01EF 01 08 00    		 LD BC, 8	;
158)   01F2 ED B0       		 LDIR         ;TO RAM PAGE 7 OS VARS	;TO RAM PAGE 7 OS VARS
160)   01F4 3E 24       		 LD A, 36        ;RANDOM SEED	;RANDOM SEED
161)   01F6 32 A5 FF    		 LD (RNDseed), A	;
163)   01F9 CD 8C 06    		 CALL FF_CLR	;
164)   01FC CD B4 06    		 CALL EPROMOFF	;
168)   01FF CD F0 2D    		 CALL SND_INIT	;
171)   0202 3E 01       		 LD A, 1        ;12        ;12=9600 BPS, 1=115200BPS	;12        ;12=9600 BPS, 1=115200BPS
172)   0204 CD 89 0E    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
173)   0207 21 EB 07    		 LD HL, STR00	;
174)   020A CD B1 0E    		 CALL RS_TXT	;
177)   020D CD A8 17    		 CALL I2C_INIT        ;INITIALIZE I2C	;INITIALIZE I2C
178)   0210 CD 2E 19    		 CALL DS1307_INIT       ;	;
179)   0213 CD 9D 19    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
180)   0216 CD D8 1A    		 CALL LCD16_INIT       ;INITIALIZE 16X2 LCD	;INITIALIZE 16X2 LCD
181)   0219 21 3A 08    		 LD HL, SVER	;
182)   021C CD 62 1B    		 CALL LCD16_PRINT       ;PRINT VERSION ON 1,1	;PRINT VERSION ON 1,1
185)   021F 3E 06       		 LD A, 6        ;SELECT USB DEVICE 3=SDCARD	;SELECT USB DEVICE 3=SDCARD
186)   0221 CD 85 13    		 CALL STRG_INIT	;
187)   0224 28 20       		 JR Z, BTST_INIOK	;
188)   0226 CD BB 0E    		 CALL RS_MESG	;
189)   0229 45 52 52 4F 		 DEFM "ERROR INITILIZING CH376S"	;
189)   022D 52 20 49 4E 		 DEFM "ERROR INITILIZING CH376S"	;
189)   0231 49 54 49 4C 		 DEFM "ERROR INITILIZING CH376S"	;
189)   0235 49 5A 49 4E 		 DEFM "ERROR INITILIZING CH376S"	;
189)   0239 47 20 43 48 		 DEFM "ERROR INITILIZING CH376S"	;
189)   023D 33 37 36 53 		 DEFM "ERROR INITILIZING CH376S"	;
190)   0241 0A 0D 00    		 DB 10,13,0	;
191)   0244 18 1B       		 JR BTST_CONTBT1	;
192)   0246 CD BB 0E    		BTST_INIOK: CALL RS_MESG	;
193)   0249 53 54 4F 52 		 DEFM "STORAGE DEVICE EXISTS"	;
193)   024D 41 47 45 20 		 DEFM "STORAGE DEVICE EXISTS"	;
193)   0251 44 45 56 49 		 DEFM "STORAGE DEVICE EXISTS"	;
193)   0255 43 45 20 45 		 DEFM "STORAGE DEVICE EXISTS"	;
193)   0259 58 49 53 54 		 DEFM "STORAGE DEVICE EXISTS"	;
193)   025D 53          		 DEFM "STORAGE DEVICE EXISTS"	;
194)   025E 0A 0D 00    		 DB 10,13,0	;
203)   0261 21 BB FE    		 LD HL, SCRNST	;
204)   0264 CB C6       		 SET 0, (HL)        ;ENABLE LCD	;ENABLE LCD
205)   0266 CB CE       		 SET 1, (HL)        ;ENABLE VGA	;ENABLE VGA
208)   0268 CD 23 23    		 CALL LCD_INIT	;
209)   026B 21 00 00    		 LD HL, COL_BLACK	;
210)   026E 22 03 FE    		 LD (BCOLOR), HL	;
211)   0271 21 FF FF    		 LD HL, COL_WHITE	;
212)   0274 22 01 FE    		 LD (FCOLOR), HL	;
213)   0277 21 D8 07    		 LD HL, STRSCR	;
214)   027A CD B1 0E    		 CALL RS_TXT	;
215)   027D CD 14 27    		 CALL LCD_CLRSCR	;
216)   0280 AF          		 XOR A	;
217)   0281 32 0F FE    		 LD (SCRLN), A	;
218)   0284 3E 00       		 LD A, 0	;
219)   0286 32 0D FE    		 LD (CURSORX), A	;
220)   0289 3E 00       		 LD A, 0	;
221)   028B 32 0E FE    		 LD (CURSORY), A	;
224)   028E CD EE 1B    		 CALL VGA_INIT	;
225)   0291 21 CB 07    		 LD HL, TXTMES	;
226)   0294 CD B1 0E    		 CALL RS_TXT	;
229)   0297 CD 6C 0F    		 CALL PS2KBINIT	;
230)   029A CD BB 0E    		 CALL RS_MESG	;
231)   029D 0A 0D       		 DB 10,13	;
232)   029F 50 53 2F 32 		 DEFM "PS/2 KEYBOARD INIT"	;
232)   02A3 20 4B 45 59 		 DEFM "PS/2 KEYBOARD INIT"	;
232)   02A7 42 4F 41 52 		 DEFM "PS/2 KEYBOARD INIT"	;
232)   02AB 44 20 49 4E 		 DEFM "PS/2 KEYBOARD INIT"	;
232)   02AF 49 54       		 DEFM "PS/2 KEYBOARD INIT"	;
233)   02B1 0A 0D 00    		 DB 10,13,0	;
238)   02B4 CD EC 0D    		 CALL COPYINTTAB	;
244)   02B7 21 4B 08    		 LD HL, OSVERMES	;
245)   02BA CD 22 05    		 CALL OS_PRINTTEXT	;
253)   02BD AF          		@MENU: XOR A	;
254)   02BE 32 0F FE    		 LD (SCRLN), A	;
255)   02C1 21 1B 07    		 LD HL, STRMN	;
256)   02C4 CD B1 0E    		 CALL RS_TXT        ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
257)   02C7 21 01 08    		 LD HL, STR01	;
258)   02CA CD B1 0E    		 CALL RS_TXT        ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
265)   02CD 3E 00       		 LD A, 0	;
266)   02CF 32 0D FE    		 LD (CURSORX), A	;
267)   02D2 32 45 FF    		 LD (VGATX_X), A	;
268)   02D5 3E 06       		 LD A, 6	;
269)   02D7 32 0E FE    		 LD (CURSORY), A	;
270)   02DA 32 46 FF    		 LD (VGATX_Y), A	;
271)   02DD 21 EC 06    		 LD HL, SMENU	;
272)   02E0 CD 22 05    		 CALL OS_PRINTTEXT	;
274)   02E3 CD 0C 04    		 CALL GET_CHAR        ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
275)   02E6 F5          		 PUSH AF	;
276)   02E7 CD 66 05    		 CALL OS_RMVCURS	;
277)   02EA F1          		 POP AF	;
280)   02EB FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
281)   02ED CC 0A 06    		 CALL Z, UPLOD	;
282)   02F0 FE 58       		 CP 'X'	;
283)   02F2 CA 01 06    		 JP Z, EXEC	;
284)   02F5 FE 53       		 CP 'S'	;
285)   02F7 CC 93 01    		 CALL Z, SETHISPEED	;
286)   02FA FE 54       		 CP 'T'	;
287)   02FC CC 5A 06    		 CALL Z, RSTST	;
288)   02FF FE 59       		 CP 'Y'	;
289)   0301 CC 70 06    		 CALL Z, RSTST2	;
290)   0304 FE 48       		 CP 'H'	;
291)   0306 CC 7F 06    		 CALL Z, XMTST	;
292)   0309 FE 4A       		 CP 'J'	;
293)   030B CC 3F 06    		 CALL Z, DNLOD	;
294)   030E FE 4B       		 CP 'K'	;
295)   0310 CC AD 08    		 CALL Z, OS_COMMAND	;
296)   0313 FE 43       		 CP 'C'	;
297)   0315 CC E6 05    		 CALL Z, OS_CLRSCR	;
298)   0318 FE 42       		 CP 'B'	;
299)   031A CA 44 03    		 JP Z, GOTOBBCBASIC	;
300)   031D FE 4D       		 CP 'M'	;
301)   031F CA A1 03    		 JP Z, DOMAINMENU	;
302)   0322 FE 51       		 CP 'Q'	;
303)   0324 CC 32 03    		 CALL Z, OS_SETTIME	;
304)   0327 FE 35       		 CP '5'	;
305)   0329 CC 6D 04    		 CALL Z, OS_CHKUSBCON       ;CHECKS IF USB CONNECTED OR DISCONNECTED	;CHECKS IF USB CONNECTED OR DISCONNECTED
306)   032C CD 32 2E    		 CALL SND_BEEP	;
307)   032F C3 BD 02    		 JP MENU	;
312)   0332 21 A0 FE    		OS_SETTIME: LD HL, TIMMSG	;
313)   0335 06 13       		 LD B, 19	;
314)   0337 CD D9 0E    		OSST_NXT: CALL RS_RX	;
315)   033A 77          		 LD (HL), A	;
316)   033B 23          		 INC HL	;
317)   033C 10 F9       		 DJNZ OSST_NXT	;
318)   033E 36 20       		 LD (HL), ' '	;
319)   0340 CD 5A 19    		 CALL DS1307_SETTIME	;
320)   0343 C9          		 RET	;
324)   0344 06 02       		@GOTOBBCBASIC: LD B, 2	;
325)   0346 3E 02       		 LD A, 2	;
326)   0348 CD 5E 0E    		 CALL PUTPGINBANK	;
327)   034B 06 03       		 LD B, 3	;
328)   034D 3E 03       		 LD A, 3	;
329)   034F CD 5E 0E    		 CALL PUTPGINBANK	;
330)   0352 C3 00 40    		 JP BBCBASIC	;
333)   0355 43 4C 45 41 		 MAINMENU DEFM "CLEAR SCREEN"	;
333)   0359 52 20 53 43 		 MAINMENU DEFM "CLEAR SCREEN"	;
333)   035D 52 45 45 4E 		 MAINMENU DEFM "CLEAR SCREEN"	;
334)   0361 00          		 DB 0	;
335)   0362 42 42 43 20 		 DEFM "BBC BASIC"	;
335)   0366 42 41 53 49 		 DEFM "BBC BASIC"	;
335)   036A 43          		 DEFM "BBC BASIC"	;
336)   036B 00          		 DB 0	;
337)   036C 43 4F 4D 4D 		 DEFM "COMMAND PROMPT"	;
337)   0370 41 4E 44 20 		 DEFM "COMMAND PROMPT"	;
337)   0374 50 52 4F 4D 		 DEFM "COMMAND PROMPT"	;
337)   0378 50 54       		 DEFM "COMMAND PROMPT"	;
338)   037A 00          		 DB 0	;
339)   037B 53 45 54 20 		 DEFM "SET SERIAL TO 115KBPS"	;
339)   037F 53 45 52 49 		 DEFM "SET SERIAL TO 115KBPS"	;
339)   0383 41 4C 20 54 		 DEFM "SET SERIAL TO 115KBPS"	;
339)   0387 4F 20 31 31 		 DEFM "SET SERIAL TO 115KBPS"	;
339)   038B 35 4B 42 50 		 DEFM "SET SERIAL TO 115KBPS"	;
339)   038F 53          		 DEFM "SET SERIAL TO 115KBPS"	;
340)   0390 00          		 DB 0	;
341)   0391 52 45 54 55 		 DEFM "RETURN TO MENU"	;
341)   0395 52 4E 20 54 		 DEFM "RETURN TO MENU"	;
341)   0399 4F 20 4D 45 		 DEFM "RETURN TO MENU"	;
341)   039D 4E 55       		 DEFM "RETURN TO MENU"	;
342)   039F 00 00       		 DB 0,0	;
345)   03A1 3E 02       		 LD A, VGA_GREEN	;
346)   03A3 06 0B       		 LD B, VGA_YELLOW	;
347)   03A5 CD 68 1E    		 CALL VGA_MIXCOLOR	;
348)   03A8 32 A8 FF    		 LD (MENUVCLR), A	;
349)   03AB 21 3F 00    		 LD HL, COL_BLUE	;
350)   03AE 22 A9 FF    		 LD (MENULFORE), HL	;
351)   03B1 21 FF FF    		 LD HL, COL_WHITE	;
352)   03B4 22 AB FF    		 LD (MENULBACK), HL	;
354)   03B7 21 55 03    		 LD HL, MAINMENU	;
355)   03BA 11 08 08    		 LD DE, 8.SHL.8 + 8       ;PRINT AT 8,8	;PRINT AT 8,8
356)   03BD 3E 01       		 LD A, 1        ;SELECT ITEM 1	;SELECT ITEM 1
357)   03BF CD 11 34    		 CALL CREATEMENU	;
358)   03C2 FE 01       		 CP 1         ;A THE MENU ITEM SELECTED	;A THE MENU ITEM SELECTED
359)   03C4 CC E6 05    		 CALL Z, OS_CLRSCR	;
360)   03C7 FE 02       		 CP 2	;
361)   03C9 CA 44 03    		 JP Z, GOTOBBCBASIC	;
362)   03CC FE 03       		 CP 3	;
363)   03CE CC AD 08    		 CALL Z, OS_COMMAND	;
364)   03D1 FE 04       		 CP 4	;
365)   03D3 CC 93 01    		 CALL Z, SETHISPEED	;
366)   03D6 FE 05       		 CP 5	;
367)   03D8 CA BD 02    		 JP Z, MENU	;
368)   03DB 18 C4       		 JR DOMAINMENU	;
377)   03DD D5          		@GET_CHARNW: PUSH DE	;
378)   03DE CD 7A 05    		 CALL OS_CHKCURS	;
379)   03E1 AF          		 XOR A	;
381)   03E2 CD 00 0F    		 CALL RS_KEYRD        ;CHAR IN RS232?	;CHAR IN RS232?
382)   03E5 28 10       		 JR Z, CNW_TST2	;
383)   03E7 CD D9 0E    		 CALL RS_RX        ; GET THAT CHAR	; GET THAT CHAR
384)   03EA CD 3C 04    		 CALL CHKFKEYS	;
385)   03ED FE 0D       		 CP 13         ;BEEP ON ENTER	;BEEP ON ENTER
386)   03EF 20 03       		 JR NZ, CNW_EX1	;
387)   03F1 CD 32 2E    		 CALL SND_BEEP	;
388)   03F4 D1          		CNW_EX1: POP DE	;
389)   03F5 37          		 SCF	;
390)   03F6 C9          		 RET	;
392)   03F7 CD 5E 0F    		CNW_TST2: CALL PS2ISK	;
393)   03FA 28 0E       		 JR Z, CNW_EXIT	;
394)   03FC CD 52 0F    		 CALL READCHAR        ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
395)   03FF CD 3C 04    		 CALL CHKFKEYS	;
396)   0402 FE 0D       		 CP 13         ;BEEP ON ENTER	;BEEP ON ENTER
397)   0404 20 03       		 JR NZ, CNW_EX2	;
398)   0406 CD 32 2E    		 CALL SND_BEEP	;
399)   0409 37          		CNW_EX2: SCF	;
400)   040A D1          		CNW_EXIT: POP DE	;
401)   040B C9          		 RET	;
408)   040C CD 7A 05    		@GET_CHAR: CALL OS_CHKCURS	;
409)   040F AF          		 XOR A	;
411)   0410 CD 00 0F    		 CALL RS_KEYRD        ;CHAR IN RS232?	;CHAR IN RS232?
412)   0413 28 0F       		 JR Z, CW_TST2	;
413)   0415 CD D9 0E    		 CALL RS_RX        ; GET THAT CHAR	; GET THAT CHAR
414)   0418 CD 3C 04    		 CALL CHKFKEYS	;
415)   041B FE 0D       		 CP 13         ;BEEP ON ENTER	;BEEP ON ENTER
416)   041D 20 03       		 JR NZ, CW_EX1	;
417)   041F CD 32 2E    		 CALL SND_BEEP	;
418)   0422 37          		CW_EX1: SCF	;
419)   0423 C9          		 RET	;
421)   0424 CD 5E 0F    		CW_TST2: CALL PS2ISK       ;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)	;GET THE KEY FROM USB KEYBOARD (HAS A TIMEOUT)
423)   0427 28 E3       		 JR Z, GET_CHAR	;
424)   0429 CD 52 0F    		 CALL READCHAR	;
425)   042C FE 00       		 CP 0	;
426)   042E 28 DC       		 JR Z, GET_CHAR	;
427)   0430 CD 3C 04    		 CALL CHKFKEYS	;
428)   0433 FE 0D       		 CP 13	;
429)   0435 20 03       		 JR NZ, CW_EX2	;
430)   0437 CD 32 2E    		 CALL SND_BEEP	;
431)   043A 37          		CW_EX2: SCF	;
432)   043B C9          		 RET	;
434)   043C FE A5       		CHKFKEYS: CP 165	;
435)   043E CC 51 04    		 CALL Z, DOF5	;
436)   0441 FE A6       		 CP 166	;
437)   0443 CC 58 04    		 CALL Z, DOF6	;
438)   0446 FE A7       		 CP 167	;
439)   0448 CC 5F 04    		 CALL Z, DOF7	;
440)   044B FE A8       		 CP 168	;
441)   044D CC 66 04    		 CALL Z, DOF8	;
442)   0450 C9          		 RET	;
445)   0451 CD 39 2E    		DOF5: CALL SND_BEEP2	;
446)   0454 AF          		 XOR A	;
447)   0455 C3 02 1C    		 JP VGA_SETLOWGR	;
449)   0458 CD 39 2E    		DOF6: CALL SND_BEEP2	;
450)   045B AF          		 XOR A	;
451)   045C C3 0D 1C    		 JP VGA_SETLOWTX	;
453)   045F CD 39 2E    		DOF7: CALL SND_BEEP2	;
454)   0462 AF          		 XOR A	;
455)   0463 C3 18 1C    		 JP VGA_SETHIGR	;
457)   0466 CD 39 2E    		DOF8: CALL SND_BEEP2	;
458)   0469 AF          		 XOR A	;
459)   046A C3 23 1C    		 JP VGA_SETHITX	;
466)   046D CD BB 0E    		OS_CHKUSBCON: CALL RS_MESG	;
467)   0470 4D 4F 55 4E 		 DEFM "MOUNT STORAGE TEST"	;
467)   0474 54 20 53 54 		 DEFM "MOUNT STORAGE TEST"	;
467)   0478 4F 52 41 47 		 DEFM "MOUNT STORAGE TEST"	;
467)   047C 45 20 54 45 		 DEFM "MOUNT STORAGE TEST"	;
467)   0480 53 54       		 DEFM "MOUNT STORAGE TEST"	;
468)   0482 0A 0D 00    		 DB 10,13,0	;
471)   0485 AF          		 XOR A         ;CLEAR CARRY	;CLEAR CARRY
476)   0486 CD A8 13    		 CALL STRG_CHECK       ;CHECKS IF USB CONNECTED OR DISCONNECTED	;CHECKS IF USB CONNECTED OR DISCONNECTED
477)   0489 D8          		 RET C         ;DEVICE NOT PRESENT	;DEVICE NOT PRESENT
478)   048A F5          		 PUSH AF	;
479)   048B CD BB 0E    		 CALL RS_MESG	;
480)   048E 44 45 56 49 		 DEFM "DEVICE IS PRESENT"	;
480)   0492 43 45 20 49 		 DEFM "DEVICE IS PRESENT"	;
480)   0496 53 20 50 52 		 DEFM "DEVICE IS PRESENT"	;
480)   049A 45 53 45 4E 		 DEFM "DEVICE IS PRESENT"	;
480)   049E 54          		 DEFM "DEVICE IS PRESENT"	;
481)   049F 0A 0D 00    		 DB 10,13,0	;
482)   04A2 F1          		 POP AF	;
483)   04A3 CD B3 31    		 CALL PRINTNUM	;
485)   04A6 FE 00       		 CP 0	;
486)   04A8 20 12       		 JR NZ, OSCHK_CONT0	;
487)   04AA CD BB 0E    		 CALL RS_MESG	;
488)   04AD 54 49 4D 45 		 DEFM "TIMEOUT..."	;
488)   04B1 4F 55 54 2E 		 DEFM "TIMEOUT..."	;
488)   04B5 2E 2E       		 DEFM "TIMEOUT..."	;
489)   04B7 0A 0D 00    		 DB 10,13,0	;
490)   04BA C9          		 RET	;
491)   04BB 00          		 NOP	;
492)   04BC 00          		OSCHK_CONT0: NOP	;
493)   04BD FE 01       		 CP 1	;
494)   04BF 20 19       		 JR NZ, OSCHK_CONT1	;
495)   04C1 CD BB 0E    		 CALL RS_MESG	;
496)   04C4 55 53 42 20 		 DEFM "USB JUST CONNECTED"	;
496)   04C8 4A 55 53 54 		 DEFM "USB JUST CONNECTED"	;
496)   04CC 20 43 4F 4E 		 DEFM "USB JUST CONNECTED"	;
496)   04D0 4E 45 43 54 		 DEFM "USB JUST CONNECTED"	;
496)   04D4 45 44       		 DEFM "USB JUST CONNECTED"	;
497)   04D6 0A 0D 00    		 DB 10,13,0	;
498)   04D9 C9          		 RET	;
499)   04DA FE 02       		OSCHK_CONT1: CP 2	;
500)   04DC C0          		 RET NZ	;
501)   04DD CD BB 0E    		 CALL RS_MESG	;
502)   04E0 55 53 42 20 		 DEFM "USB JUST DISCONNECTED"	;
502)   04E4 4A 55 53 54 		 DEFM "USB JUST DISCONNECTED"	;
502)   04E8 20 44 49 53 		 DEFM "USB JUST DISCONNECTED"	;
502)   04EC 43 4F 4E 4E 		 DEFM "USB JUST DISCONNECTED"	;
502)   04F0 45 43 54 45 		 DEFM "USB JUST DISCONNECTED"	;
502)   04F4 44          		 DEFM "USB JUST DISCONNECTED"	;
503)   04F5 0A 0D 00    		 DB 10,13,0	;
504)   04F8 C9          		 RET	;
509)   04F9 7A          		@OS_GOTOXY: LD A, D	;
510)   04FA 32 0D FE    		 LD (CURSORX), A	;
511)   04FD 32 45 FF    		 LD (VGATX_X), A	;
512)   0500 7B          		 LD A, E	;
513)   0501 32 0E FE    		 LD (CURSORY), A	;
514)   0504 32 46 FF    		 LD (VGATX_Y), A	;
515)   0507 C9          		 RET	;
520)   0508 F5          		@OS_PRINTCHAR: PUSH AF	;
521)   0509 3A BB FE    		 LD A, (SCRNST)	;
522)   050C E6 01       		 AND 1	;
523)   050E 28 05       		 JR Z, OSPCNX	;
524)   0510 F1          		 POP AF	;
525)   0511 F5          		 PUSH AF	;
526)   0512 CD 69 25    		 CALL LCD_PRCH	;
527)   0515 D1          		OSPCNX: POP DE	;
528)   0516 3A BB FE    		 LD A, (SCRNST)	;
529)   0519 E6 02       		 AND 2	;
530)   051B C8          		 RET Z	;
531)   051C D5          		 PUSH DE	;
532)   051D F1          		 POP AF         ;GET THE FLAGS BACK AND THE CHAR	;GET THE FLAGS BACK AND THE CHAR
533)   051E CD F0 1C    		 CALL VGA_PRCH	;
534)   0521 C9          		 RET	;
538)   0522 7E          		@OS_PRINTTEXT: LD A, (HL)	;
539)   0523 FE 00       		 CP 0	;
540)   0525 C8          		 RET Z	;
541)   0526 E5          		 PUSH HL	;
542)   0527 CD 08 05    		 CALL OS_PRINTCHAR	;
543)   052A E1          		 POP HL	;
544)   052B 23          		 INC HL	;
545)   052C 18 F4       		 JR OS_PRINTTEXT	;
548)   052E E1          		@OS_PRINTMSG: POP HL	;
549)   052F CD 22 05    		 CALL OS_PRINTTEXT	;
550)   0532 23          		 INC HL	;
551)   0533 E5          		 PUSH HL        ;CONTINUE AFTER THE MESG	;CONTINUE AFTER THE MESG
552)   0534 C9          		 RET	;
557)   0535 E5          		@OS_MSG: PUSH HL	;
558)   0536 3A BB FE    		 LD A, (SCRNST)	;
559)   0539 E6 01       		 AND 1	;
560)   053B 28 03       		 JR Z, OSMSNX	;
561)   053D CD 54 27    		 CALL LCD_MSG	;
562)   0540 E1          		OSMSNX: POP HL	;
563)   0541 3A BB FE    		 LD A, (SCRNST)	;
564)   0544 E6 01       		 AND 1	;
565)   0546 28 F8       		 JR Z, OSMSNX	;
566)   0548 3A BB FE    		 LD A, (SCRNST)	;
567)   054B E6 02       		 AND 2	;
568)   054D C8          		 RET Z	;
569)   054E CD 4A 1D    		 CALL VGA_PRINT	;
570)   0551 C9          		 RET	;
572)   0552 3A BB FE    		@OS_PRNCURS: LD A, (SCRNST)	;
573)   0555 E6 01       		 AND 1	;
574)   0557 28 03       		 JR Z, OSPSNX	;
575)   0559 CD D2 26    		 CALL LCD_PRNCURS	;
576)   055C 3A BB FE    		OSPSNX: LD A, (SCRNST)	;
577)   055F E6 02       		 AND 2	;
578)   0561 C8          		 RET Z	;
579)   0562 CD 37 1F    		 CALL VGA_PRNCURS	;
580)   0565 C9          		 RET	;
582)   0566 3A BB FE    		@OS_RMVCURS: LD A, (SCRNST)	;
583)   0569 E6 01       		 AND 1	;
584)   056B 28 03       		 JR Z, OSRCNX	;
585)   056D CD CD 26    		 CALL LCD_RMVCURS	;
586)   0570 3A BB FE    		OSRCNX: LD A, (SCRNST)	;
587)   0573 E6 02       		 AND 2	;
588)   0575 C8          		 RET Z	;
589)   0576 CD 19 1F    		 CALL VGA_RMVCURS	;
590)   0579 C9          		 RET	;
593)   057A F5          		@OS_CHKCURS: PUSH AF	;
594)   057B 3A 11 FE    		 LD A, (CURSSTAT)	;
595)   057E CB 57       		 BIT 2, A        ;BIT 2 FLAG FOR CURSOR OFF IF 1	;BIT 2 FLAG FOR CURSOR OFF IF 1
596)   0580 20 27       		 JR NZ, CCTIM	;
597)   0582 3A C1 FE    		 LD A, (TIMECTR)	;
598)   0585 CB 67       		 BIT 4, A	;
599)   0587 28 11       		 JR Z, CCSHOW        ;IF SET SHOW	;IF SET SHOW
600)   0589 3A 11 FE    		CCHIDE: LD A, (CURSSTAT)	;
601)   058C CB 4F       		 BIT 1, A	;
602)   058E 20 1C       		 JR NZ, CCEX        ;IF NOT SET ALREADY HIDDEN	;IF NOT SET ALREADY HIDDEN
603)   0590 CB CF       		 SET 1, A	;
604)   0592 32 11 FE    		 LD (CURSSTAT), A	;
605)   0595 CD 66 05    		 CALL OS_RMVCURS	;
606)   0598 18 12       		 JR CCEX	;
607)   059A 3A 11 FE    		CCSHOW: LD A, (CURSSTAT)	;
608)   059D CB 4F       		 BIT 1, A	;
609)   059F 28 0B       		 JR Z, CCEX        ;IF SET ALREADY VISIBLE	;IF SET ALREADY VISIBLE
610)   05A1 CB 8F       		 RES 1, A	;
611)   05A3 32 11 FE    		 LD (CURSSTAT), A	;
612)   05A6 CD 52 05    		 CALL OS_PRNCURS	;
613)   05A9 CD CE 05    		CCTIM: CALL OS_SHOWTIME       ;TODO: MAYBE CALLED LESS OFTEN	;TODO: MAYBE CALLED LESS OFTEN
614)   05AC F1          		CCEX: POP AF	;
615)   05AD C9          		 RET	;
621)   05AE CB 27       		@OSSETTIME: SLA A	;
622)   05B0 CB 27       		 SLA A	;
623)   05B2 CB 27       		 SLA A	;
624)   05B4 47          		 LD B, A	;
625)   05B5 3A 11 FE    		 LD A, (CURSSTAT)	;
626)   05B8 CB 9F       		 RES 3, A	;
627)   05BA B0          		 OR B	;
628)   05BB 32 11 FE    		 LD (CURSSTAT), A	;
629)   05BE C9          		 RET	;
635)   05BF CB 27       		@OSSETCURSOR: SLA A	;
636)   05C1 CB 27       		 SLA A	;
637)   05C3 47          		 LD B, A	;
638)   05C4 3A 11 FE    		 LD A, (CURSSTAT)	;
639)   05C7 CB 97       		 RES 2, A	;
640)   05C9 B0          		 OR B	;
641)   05CA 32 11 FE    		 LD (CURSSTAT), A	;
642)   05CD C9          		 RET	;
646)   05CE 3A 11 FE    		@OS_SHOWTIME: LD A, (CURSSTAT)	;
647)   05D1 CB 5F       		 BIT 3, A	;
648)   05D3 C0          		 RET NZ	;
649)   05D4 CD 22 1A    		 CALL DS1307_GETTIME	;
650)   05D7 D8          		 RET C         ;ERROR RET	;ERROR RET
652)   05D8 16 00       		 LD D, 0        ;COL	;COL
653)   05DA 1E 01       		 LD E, 1        ;ROW	;ROW
654)   05DC CD 7D 1B    		 CALL LCD16_SETCURS	;
655)   05DF 21 A1 FE    		 LD HL, TIMMSG + 1       ;WE NEED 17 CHARS SO OMIT THE FIRST	;WE NEED 17 CHARS SO OMIT THE FIRST
656)   05E2 CD 62 1B    		 CALL LCD16_PRINT	;
657)   05E5 C9          		 RET	;
659)   05E6 CD 14 27    		@OS_CLRSCR: CALL LCD_CLRSCR	;
660)   05E9 CD E5 1C    		 CALL VGA_CLRSCR	;
661)   05EC C9          		 RET	;
665)   05ED AF          		@OS_CLEARLINE: XOR A	;
666)   05EE 32 0D FE    		 LD (CURSORX), A	;
667)   05F1 32 45 FF    		 LD (VGATX_X), A	;
668)   05F4 3A 0E FE    		 LD A, (CURSORY)	;
669)   05F7 CD 7F 26    		 CALL LCD_CLRTXTLN	;
670)   05FA 3A 46 FF    		 LD A, (VGATX_Y)	;
671)   05FD CD DD 22    		 CALL VGA_CLRTXTLN	;
672)   0600 C9          		 RET	;
683)   0601 3E 05       		 LD A, 5	;
684)   0603 CD 47 2F    		 CALL SCPRN	;
686)   0606 2A BE FE    		 LD HL, (PRGEX)	;
693)   0609 E9          		 JP (HL)	;
700)   060A F3          		UPLOD: DI	;
705)   060B CD D9 0E    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
706)   060E 6F          		 LD L, A	;
707)   060F CD D9 0E    		 CALL RS_RX	;
708)   0612 67          		 LD H, A	;
709)   0613 CD D9 0E    		 CALL RS_RX        ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
710)   0616 4F          		 LD C, A	;
711)   0617 CD D9 0E    		 CALL RS_RX	;
712)   061A 47          		 LD B, A	;
714)   061B 22 BE FE    		 LD (PRGEX), HL	;
715)   061E 3A BF FE    		 LD A, (PRGEX + 1)	;
723)   0621 FE 80       		 CP $80	;
724)   0623 DC BC 06    		 CALL C, EPROMON       ;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'	;C ROM IN 0-8000 NC ROM IN 8000-FFFF ;SET ROM WRITABLE = '0'
726)   0626 E5          		NORWR: PUSH HL	;
727)   0627 CD D9 0E    		NXB: CALL RS_RX	;
728)   062A 77          		 LD (HL), A	;
729)   062B 23          		 INC HL	;
730)   062C 0B          		 DEC BC	;
731)   062D 78          		 LD A, B	;
732)   062E B1          		 OR C	;
733)   062F 20 F6       		 JR NZ, NXB        ;LOOP ALL BYTES	;LOOP ALL BYTES
734)   0631 CD B4 06    		 CALL EPROMOFF	;
739)   0634 3E 05       		 LD A, 5	;
740)   0636 CD 47 2F    		 CALL SCPRN	;
741)   0639 CD 54 2F    		 CALL DELAY	;
743)   063C E1          		 POP HL	;
746)   063D FB          		 EI	;
747)   063E C9          		 RET	;
758)   063F CD D9 0E    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
759)   0642 6F          		 LD L, A	;
760)   0643 CD D9 0E    		 CALL RS_RX	;
761)   0646 67          		 LD H, A	;
762)   0647 CD D9 0E    		 CALL RS_RX        ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
763)   064A 4F          		 LD C, A	;
764)   064B CD D9 0E    		 CALL RS_RX	;
765)   064E 47          		 LD B, A	;
767)   064F 7E          		NXB3: LD A, (HL)	;
768)   0650 CD A2 0E    		 CALL RS_TX        ;SEND BYTE	;SEND BYTE
769)   0653 23          		 INC HL	;
770)   0654 0B          		 DEC BC	;
771)   0655 78          		 LD A, B	;
772)   0656 B1          		 OR C	;
773)   0657 20 F6       		 JR NZ, NXB3        ;LOOP ALL BYTES	;LOOP ALL BYTES
774)   0659 C9          		 RET	;
776)   065A 00          		RSTST: NOP         ;GET A KEY FROM RS232	;GET A KEY FROM RS232
777)   065B 06 0A       		 LD B, 10	;
778)   065D C5          		TEN: PUSH BC	;
779)   065E CD D9 0E    		 CALL RS_RX	;
781)   0661 CD A2 0E    		 CALL RS_TX        ;SEND BACK THE CHAR	;SEND BACK THE CHAR
783)   0664 3E 20       		 LD A, ' '	;
785)   0666 3E 52       		 LD A, 'R'	;
788)   0668 CD 61 2F    		 CALL DEL2	;
790)   066B C1          		 POP BC	;
791)   066C 10 EF       		 DJNZ TEN	;
793)   066E AF          		 XOR A	;
794)   066F C9          		 RET	;
796)   0670 00          		RSTST2: NOP         ;TEST RECEIVING AND SENDING 255 BYTES	;TEST RECEIVING AND SENDING 255 BYTES
797)   0671 06 FF       		 LD B, 255	;
798)   0673 C5          		TEN2: PUSH BC	;
799)   0674 CD D9 0E    		 CALL RS_RX	;
801)   0677 CD A2 0E    		 CALL RS_TX        ;SEND BACK THE CHAR	;SEND BACK THE CHAR
803)   067A C1          		 POP BC	;
804)   067B 10 F6       		 DJNZ TEN2	;
805)   067D AF          		 XOR A	;
806)   067E C9          		 RET	;
809)   067F 00          		XMTST: NOP         ;TEST XMIT ALL 8 BITS	;TEST XMIT ALL 8 BITS
810)   0680 06 FF       		 LD B, 255	;
811)   0682 C5          		TEN3: PUSH BC	;
812)   0683 78          		 LD A, B	;
813)   0684 CD A2 0E    		 CALL RS_TX        ;SEND  THE BYTE	;SEND  THE BYTE
814)   0687 C1          		 POP BC	;
815)   0688 10 F8       		 DJNZ TEN3	;
816)   068A AF          		 XOR A	;
817)   068B C9          		 RET	;
823)   068C AF          		 XOR A	;
824)   068D 32 B6 FE    		 LD (FFSTAT), A	;
825)   0690 C9          		 RET	;
828)   0691 04          		@FF_OFF: INC B        ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
829)   0692 AF          		 XOR A	;
830)   0693 37          		 SCF	;
831)   0694 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
832)   0695 10 FD       		 DJNZ SBAGN	;
833)   0697 2F          		 CPL         ;INVERSE BITS ON A	;INVERSE BITS ON A
834)   0698 47          		 LD B, A	;
835)   0699 3A B6 FE    		 LD A, (FFSTAT)	;
836)   069C A0          		 AND B         ;ZERO THE BIT	;ZERO THE BIT
837)   069D 32 B6 FE    		 LD (FFSTAT), A	;
838)   06A0 D3 08       		 OUT (DEVFFS), A	;
839)   06A2 C9          		 RET	;
842)   06A3 04          		@FF_ON: INC B         ; DO 0-7 TO 1-8	; DO 0-7 TO 1-8
843)   06A4 AF          		 XOR A	;
844)   06A5 37          		 SCF	;
845)   06A6 17          		SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE	; MOVE IT TO THE RIGHT PLACE
846)   06A7 10 FD       		 DJNZ SBAGN	;
847)   06A9 47          		 LD B, A	;
848)   06AA 3A B6 FE    		 LD A, (FFSTAT)	;
849)   06AD B0          		 OR B         ;SET THE BIT	;SET THE BIT
850)   06AE 32 B6 FE    		 LD (FFSTAT), A	;
851)   06B1 D3 08       		 OUT (DEVFFS), A	;
852)   06B3 C9          		 RET	;
854)   06B4 C5          		@EPROMOFF: PUSH BC	;
855)   06B5 06 00       		 LD B, 0	;
856)   06B7 CD 91 06    		 CALL FF_OFF	;
857)   06BA C1          		 POP BC	;
858)   06BB C9          		 RET	;
860)   06BC C5          		@EPROMON: PUSH BC	;
861)   06BD 06 00       		 LD B, 0	;
862)   06BF CD A3 06    		 CALL FF_ON	;
863)   06C2 C1          		 POP BC	;
864)   06C3 C9          		 RET	;
870)   06C4 F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
871)   06C5 26 00       		 LD H, 0	;
872)   06C7 6F          		 LD L, A	;
873)   06C8 11 C6 FE    		 LD DE, MYNUM	;
874)   06CB CD 7B 2F    		 CALL OUTASC	;
876)   06CE 3E 0A       		 LD A, 10	;
877)   06D0 12          		 LD (DE), A	;
878)   06D1 13          		 INC DE	;
879)   06D2 3E 0D       		 LD A, 13	;
880)   06D4 12          		 LD (DE), A	;
881)   06D5 13          		 INC DE	;
882)   06D6 AF          		 XOR A	;
883)   06D7 12          		 LD (DE), A	;
885)   06D8 21 C6 FE    		 LD HL, MYNUM	;
886)   06DB CD B1 0E    		 CALL RS_TXT	;
887)   06DE F1          		 POP AF	;
888)   06DF C9          		 RET	;
891)   06E0 5C 45 50 52 		EPRFIL DEFM "\EPROM1.BIN"  	;
891)   06E4 4F 4D 31 2E 		EPRFIL DEFM "\EPROM1.BIN"  	;
891)   06E8 42 49 4E    		EPRFIL DEFM "\EPROM1.BIN"  	;
892)   06EB 00          		 DB 0	;
897)   06EC 55 3A 55 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   06F0 20 4A 3A 44 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   06F4 4E 20 58 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   06F8 52 55 4E 20 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   06FC 43 3A 43 4C 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   0700 53 20 42 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   0704 42 41 53 49 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   0708 43 20 4B 3A 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   070C 43 4D 44 50 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   0710 52 4D 54 20 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   0714 4D 3A 4D 45 		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
897)   0718 4E 55       		 DEFM "U:UP J:DN X:RUN C:CLS B:BASIC K:CMDPRMT M:MENU"	;
898)   071A 00          		 DB 0	;
900)   071B 0A 0D       		STRMN: DB 10,13	;
902)   071D 55 3A 55 50 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0721 4C 4F 41 44 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0725 20 4A 3A 44 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0729 4F 57 4E 4C 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   072D 44 20 53 3A 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0731 31 31 35 4B 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0735 42 50 53 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0739 58 3A 52 55 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   073D 4E 20 43 3A 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0741 43 4C 53 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0745 42 3A 42 41 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0749 53 49 43 20 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   074D 4B 3A 43 4D 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0751 44 20 50 52 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0755 4F 4D 50 54 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   0759 20 4D 3A 4D 		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
902)   075D 45 4E 55    		 DEFM "U:UPLOAD J:DOWNLD S:115KBPS X:RUN C:CLS B:BASIC K:CMD PROMPT M:MENU"	;
903)   0760 0A 0D 00    		 DB 10,13,0	;
906)   0763 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
906)   0767 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
906)   076B 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
906)   076F 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
907)   0772 00          		 DB 0	;
909)   0773 52 53 32 33 		STR1: DEFM "RS232 INIT"	;
909)   0777 32 20 49 4E 		STR1: DEFM "RS232 INIT"	;
909)   077B 49 54       		STR1: DEFM "RS232 INIT"	;
910)   077D 00          		 DB 0	;
912)   077E 50 52 4F 47 		STR2: DEFM "PROGRAM HALTED"	;
912)   0782 52 41 4D 20 		STR2: DEFM "PROGRAM HALTED"	;
912)   0786 48 41 4C 54 		STR2: DEFM "PROGRAM HALTED"	;
912)   078A 45 44       		STR2: DEFM "PROGRAM HALTED"	;
913)   078C 00          		 DB 0	;
915)   078D 57 41 49 54 		STR02: DEFM "WAITING..."	;
915)   0791 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
915)   0795 2E 2E       		STR02: DEFM "WAITING..."	;
916)   0797 00          		 DB 0	;
918)   0798 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
918)   079C 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
918)   07A0 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
918)   07A4 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
919)   07A6 00          		 DB 0	;
921)   07A7 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
921)   07AB 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
921)   07AF 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
922)   07B3 00          		 DB 0	;
924)   07B4 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
924)   07B8 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
924)   07BC 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
925)   07BF 00          		 DB 0	;
927)   07C0 49 4D 41 47 		STIMG: DEFM "IMAGE COPY"	;
927)   07C4 45 20 43 4F 		STIMG: DEFM "IMAGE COPY"	;
927)   07C8 50 59       		STIMG: DEFM "IMAGE COPY"	;
928)   07CA 00          		 DB 0	;
930)   07CB 53 43 52 45 		TXTMES: DEFM "SCREEN READY"	;
930)   07CF 45 4E 20 52 		TXTMES: DEFM "SCREEN READY"	;
930)   07D3 45 41 44 59 		TXTMES: DEFM "SCREEN READY"	;
931)   07D7 00          		 DB 0	;
933)   07D8 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
933)   07DC 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
933)   07E0 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
933)   07E4 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
934)   07E8 0A 0D 00    		 DB 10,13,0	;
936)   07EB 0A 0D       		STR00: DB 10,13	;
937)   07ED 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
937)   07F1 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
937)   07F5 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
937)   07F9 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
937)   07FD 44          		 DEFM "RS232 INITIALIZED"	;
938)   07FE 0A 0D 00    		 DB 10,13,0	;
940)   0801 0A 0D       		STR01: DB 10,13	;
941)   0803 57 41 49 54 		 DEFM "WAITING..."	;
941)   0807 49 4E 47 2E 		 DEFM "WAITING..."	;
941)   080B 2E 2E       		 DEFM "WAITING..."	;
942)   080D 0A 0D 00    		 DB 10,13,0	;
943)   0810 00          		 DB 0	;
945)   0811 0A 0D       		STR06: DB 10,13	;
946)   0813 4B 45 59 20 		 DEFM "KEY PRESSED"	;
946)   0817 50 52 45 53 		 DEFM "KEY PRESSED"	;
946)   081B 53 45 44    		 DEFM "KEY PRESSED"	;
947)   081E 0A 0D 00    		 DB 10,13,0	;
948)   0821 00          		 DB 0	;
950)   0822 0A 0D       		STR001: DB 10,13	;
951)   0824 53 54 4F 52 		 DEFM "STORAGE INITIALIZED"	;
951)   0828 41 47 45 20 		 DEFM "STORAGE INITIALIZED"	;
951)   082C 49 4E 49 54 		 DEFM "STORAGE INITIALIZED"	;
951)   0830 49 41 4C 49 		 DEFM "STORAGE INITIALIZED"	;
951)   0834 5A 45 44    		 DEFM "STORAGE INITIALIZED"	;
952)   0837 0A 0D 00    		 DB 10,13,0	;
954)   083A 41 54 4C 41 		SVER: DEFM "ATLAS OS VER"	;
954)   083E 53 20 4F 53 		SVER: DEFM "ATLAS OS VER"	;
954)   0842 20 56 45 52 		SVER: DEFM "ATLAS OS VER"	;
955)   0846 30          		 DEFB MJVER	;
956)   0847 2E          		 DEFB '.'	;
957)   0848 35 33       		 DEFB MNVER1,MNVER2	;
958)   084A 00          		 DEFB 0	;
960)   084B 41 54 4C 41 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
960)   084F 53 20 4D 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
960)   0853 64 75 6C 61 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
960)   0857 72 20 5A 38 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
960)   085B 30 20 43 6F 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
960)   085F 6D 70 75 74 		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
960)   0863 65 72       		OSVERMES: DEFM "ATLAS Modular Z80 Computer"	;
961)   0865 0A 0D       		 DEFB 0AH,0DH	;
962)   0867 4F 70 65 72 		 DEFM "Operating System Version "	;
962)   086B 61 74 69 6E 		 DEFM "Operating System Version "	;
962)   086F 67 20 53 79 		 DEFM "Operating System Version "	;
962)   0873 73 74 65 6D 		 DEFM "Operating System Version "	;
962)   0877 20 56 65 72 		 DEFM "Operating System Version "	;
962)   087B 73 69 6F 6E 		 DEFM "Operating System Version "	;
962)   087F 20          		 DEFM "Operating System Version "	;
963)   0880 30          		 DEFB MJVER	;
964)   0881 2E          		 DEFB '.'	;
965)   0882 35 33       		 DEFB MNVER1,MNVER2	;
966)   0884 0A 0D       		 DEFB 0AH,0DH	;
967)   0886 43 44 65 73 		 DEFM "CDesp 2020-22"	;
967)   088A 70 20 32 30 		 DEFM "CDesp 2020-22"	;
967)   088E 32 30 2D 32 		 DEFM "CDesp 2020-22"	;
967)   0892 32          		 DEFM "CDesp 2020-22"	;
968)   0893 0A 0D       		 DEFB 0AH,0DH	;
969)   0895 52 41 4D 3A 		 DEFM "RAM: 4000h,TOP: FA00h"	;
969)   0899 20 34 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
969)   089D 30 68 2C 54 		 DEFM "RAM: 4000h,TOP: FA00h"	;
969)   08A1 4F 50 3A 20 		 DEFM "RAM: 4000h,TOP: FA00h"	;
969)   08A5 46 41 30 30 		 DEFM "RAM: 4000h,TOP: FA00h"	;
969)   08A9 68          		 DEFM "RAM: 4000h,TOP: FA00h"	;
970)   08AA 0A 0D       		 DEFB 0AH,0DH	;
971)   08AC 00          		 DEFB 00H	;
 11)   08AD 3E 0F       		@OS_COMMAND:   LD A, VGA_WHITE	;
 12)   08AF 32 43 FF    		 LD (VGAFCOL), A	;
 13)   08B2 3E 04       		 LD A, VGA_NAVY	;
 14)   08B4 32 44 FF    		 LD (VGABCOL), A	;
 15)   08B7 21 BD 08    		 LD HL,OS_CMDGET	;
 16)   08BA 22 75 FF    		 LD (COMDGET),HL	;
 19)   08BD 3A 0D FE    		OS_CMDGET:     LD A,(CURSORX)	;
 20)   08C0 67          		               LD H,A	;
 21)   08C1 3A 0E FE    		               LD A,(CURSORY)	;
 22)   08C4 84          		               ADD H	;
 23)   08C5 FE 00       		               CP 0	;
 24)   08C7 28 0C       		               JR Z,CGSKP	;
 25)   08C9 3E 0D       		               LD A,CR	;
 26)   08CB CD 08 05    		               CALL OS_PRINTCHAR	;
 27)   08CE AF          		               XOR A	;
 28)   08CF 32 0D FE    		 LD (CURSORX), A	;
 29)   08D2 32 45 FF    		 LD (VGATX_X), A	;
 30)   08D5 CD ED 05    		CGSKP:         CALL OS_CLEARLINE	;
 31)   08D8 3E 23       		 LD A,'#'        ;PROMPT	;PROMPT
 32)   08DA CD 08 05    		               CALL OS_PRINTCHAR	;
 34)   08DD 21 4D FF    		               LD HL,COMDBUF	;
 35)   08E0 E5          		CGNXCHAR:      PUSH HL	;
 36)   08E1 CD 0C 04    		               CALL GET_CHAR	;
 37)   08E4 E1          		               POP HL	;
 38)   08E5 FE 00       		               CP 0	;
 39)   08E7 28 F7       		               JR Z,CGNXCHAR 	;
 40)   08E9 FE 20       		               CP 32	;
 41)   08EB 30 21       		               JR NC,CGSVCHAR	;
 43)   08ED FE 06       		               CP 6                    ;BACKSPACE	;BACKSPACE
 44)   08EF 20 17       		               JR NZ,CGTSTCH1                	;
 46)   08F1 2B          		               DEC HL                	;
 47)   08F2 3A 45 FF    		               LD A,(VGATX_X)	;
 48)   08F5 FE 01       		               CP 1                  ;CHECK START OF LINE  	;CHECK START OF LINE
 49)   08F7 20 05       		               JR NZ,CGBS	;
 50)   08F9 21 4D FF    		               LD HL,COMDBUF           ;WE AR AT START	;WE AR AT START
 51)   08FC 18 E2       		               JR CGNXCHAR	;
 53)   08FE 3E 08       		CGBS:          LD A,8	;
 54)   0900 CD 15 09    		               CALL CGDOPRNCH	;
 55)   0903 3E 00       		               LD A,0	;
 56)   0905 77          		               LD (HL),A	;
 57)   0906 18 D8       		               JR CGNXCHAR	;
 58)   0908 FE 0D       		CGTSTCH1:      CP CR                   ;ENTER	;ENTER
 59)   090A 28 12       		               JR Z,CGDOCMD            ;EXECUTE THE COMMAND	;EXECUTE THE COMMAND
 60)   090C 18 D2       		               JR CGNXCHAR             ;NO MORE TESTING NO PRINATBLE CHARS	;NO MORE TESTING NO PRINATBLE CHARS
 61)   090E CD 15 09    		CGSVCHAR:      CALL CGDOPRNCH          ;SAVE CHAR TO BUFFER	;SAVE CHAR TO BUFFER
 62)   0911 77          		               LD (HL),A	;
 63)   0912 23          		               INC HL	;
 64)   0913 18 CB       		               JR CGNXCHAR	;
 65)   0915 E5          		CGDOPRNCH:     PUSH HL	;
 66)   0916 F5          		               PUSH AF	;
 67)   0917 37          		 SCF	;
 68)   0918 CD 08 05    		               CALL OS_PRINTCHAR	;
 69)   091B F1          		               POP AF	;
 70)   091C E1          		               POP HL	;
 71)   091D C9          		               RET	;
 72)   091E E5          		@CGDOCMD:      PUSH HL	;
 73)   091F F5          		               PUSH AF	;
 74)   0920 CD 66 05    		               CALL OS_RMVCURS         ;REMOVE CURSOR	;REMOVE CURSOR
 75)   0923 F1          		               POP AF	;
 76)   0924 E1          		               POP HL	;
 77)   0925 CD 15 09    		 CALL CGDOPRNCH	;
 78)   0928 AF          		               XOR A	;
 79)   0929 77          		               LD (HL),A	;
 80)   092A 21 4D FF    		               LD HL,COMDBUF	;
 87)   092D CD 89 09    		 CALL SKIPSP	;
 88)   0930 FE 0D       		 CP CR	;
 89)   0932 C8          		 RET Z	;
 90)   0933 FE 7C       		 CP '|'	;
 91)   0935 C8          		 RET Z	;
 94)   0936 EB          		 EX DE, HL	;
 95)   0937 21 98 09    		 LD HL, COMDS	;
 96)   093A 1A          		OSCLI0: LD A, (DE)	;
 97)   093B CD 90 09    		 CALL UPPRC	;
 98)   093E BE          		 CP (HL)	;
 99)   093F 28 0B       		 JR Z, OSCLI2	;
100)   0941 38 31       		 JR C, HUH	;
101)   0943 CB 7E       		OSCLI1: BIT 7, (HL)	;
102)   0945 23          		 INC HL	;
103)   0946 28 FB       		 JR Z, OSCLI1	;
104)   0948 23          		 INC HL	;
105)   0949 23          		 INC HL	;
106)   094A 18 EE       		 JR OSCLI0	;
108)   094C D5          		OSCLI2: PUSH DE	;
109)   094D 13          		OSCLI3: INC DE	;
110)   094E 23          		 INC HL	;
111)   094F 1A          		 LD A, (DE)	;
112)   0950 CD 90 09    		 CALL UPPRC	;
113)   0953 FE 2E       		 CP '.'         ;ABBREVIATED?	;ABBREVIATED?
114)   0955 28 0A       		 JR Z, OSCLI4	;
115)   0957 AE          		 XOR (HL)	;
116)   0958 28 F3       		 JR Z, OSCLI3	;
117)   095A FE 80       		 CP 80H	;
118)   095C 28 03       		 JR Z, OSCLI4	;
119)   095E D1          		 POP DE	;
120)   095F 18 E2       		 JR OSCLI1	;
122)   0961 F1          		OSCLI4: POP AF	;
123)   0962 13          		 INC DE	;
124)   0963 CB 7E       		OSCLI5: BIT 7, (HL)	;
125)   0965 23          		 INC HL	;
126)   0966 28 FB       		 JR Z, OSCLI5	;
127)   0968 7E          		 LD A, (HL)	;
128)   0969 23          		 INC HL	;
129)   096A 66          		 LD H, (HL)	;
130)   096B 6F          		 LD L, A	;
131)   096C E5          		 PUSH HL        ;CALL COMMAND	;CALL COMMAND
132)   096D EB          		 EX DE, HL	;
133)   096E E5          		 PUSH HL	;
134)   096F FD E1       		 POP IY	;
135)   0971 C3 89 09    		 JP SKIPSP	;
137)   0974 3E FE       		HUH: LD A, 254        	;
138)   0976 CD D8 0A    		 CALL OSERROR	;
139)   0979 4F 53 20 42 		 DEFM 'OS Bad command'	;
139)   097D 61 64 20 63 		 DEFM 'OS Bad command'	;
139)   0981 6F 6D 6D 61 		 DEFM 'OS Bad command'	;
139)   0985 6E 64       		 DEFM 'OS Bad command'	;
140)   0987 0D 00       		 DEFB    13,0	;
142)   0989 7E          		SKIPSP: LD A, (HL)	;
143)   098A FE 20       		 CP ' '	;
144)   098C C0          		 RET NZ	;
145)   098D 23          		 INC HL	;
146)   098E 18 F9       		 JR SKIPSP	;
148)   0990 E6 7F       		UPPRC: AND 7FH	;
149)   0992 FE 60       		 CP '`'	;
150)   0994 D8          		 RET C	;
151)   0995 E6 5F       		 AND 5FH        ;CONVERT TO UPPER CASE	;CONVERT TO UPPER CASE
152)   0997 C9          		 RET	;
156)   0998 42 59       		COMDS: DEFM  "BY"	;
157)   099A C5          		 DEFB    'E'+80H	;
158)   099B F9 0A       		 DEFW BYE	;
159)   099D 43          		 DEFM  "C"	;
160)   099E C4          		 DEFB    'D'+80H	;
161)   099F BA 0B       		 DEFW DRV_CD	;
162)   09A1 43 4C       		               DEFM "CL"	;
163)   09A3 D3          		               DEFB 'S'+80H	;
164)   09A4 FC 0A       		               DEFW DOCLS	;
165)   09A6 43 55 52 53 		               DEFM "CURSO"	;
165)   09AA 4F          		               DEFM "CURSO"	;
166)   09AB D2          		               DEFB 'R'+80H	;
167)   09AC 87 0D       		               DEFW SETCURSOR	;
168)   09AE 44 49       		 DEFM "DI"	;
169)   09B0 D2          		 DEFB 'R'+80H	;
170)   09B1 A4 0B       		 DEFW DRV_DIR	;
171)   09B3 45 58 45    		               DEFM "EXE"	;
172)   09B6 C3          		               DEFB 'C'+80H	;
173)   09B7 3B 0B       		               DEFW DOEXEC	;
174)   09B9 4C 43 44 5F 		 DEFM  "LCD_BLINKOF"	;
174)   09BD 42 4C 49 4E 		 DEFM  "LCD_BLINKOF"	;
174)   09C1 4B 4F 46    		 DEFM  "LCD_BLINKOF"	;
175)   09C4 C6          		 DEFB 'F'+80H	;
176)   09C5 93 0C       		 DEFW LCD_BLINKOF	;
177)   09C7 4C 43 44 5F 		 DEFM  "LCD_BLINKO"	;
177)   09CB 42 4C 49 4E 		 DEFM  "LCD_BLINKO"	;
177)   09CF 4B 4F       		 DEFM  "LCD_BLINKO"	;
178)   09D1 CE          		 DEFB 'N'+80H	;
179)   09D2 99 0C       		 DEFW LCD_BLINKON	;
180)   09D4 4C 43 44 5F 		 DEFM  "LCD_CLEA"	;
180)   09D8 43 4C 45 41 		 DEFM  "LCD_CLEA"	;
181)   09DC D2          		 DEFB 'R'+80H	;
182)   09DD 9F 0C       		 DEFW LCD_CLR	;
183)   09DF 4C 43 44 5F 		 DEFM  "LCD_CURSORA"	;
183)   09E3 43 55 52 53 		 DEFM  "LCD_CURSORA"	;
183)   09E7 4F 52 41    		 DEFM  "LCD_CURSORA"	;
184)   09EA D4          		 DEFB 'T'+80H	;
185)   09EB A5 0C       		 DEFW LCD_CURSAT	;
186)   09ED 4C 43 44 5F 		 DEFM  "LCD_CURSOF"	;
186)   09F1 43 55 52 53 		 DEFM  "LCD_CURSOF"	;
186)   09F5 4F 46       		 DEFM  "LCD_CURSOF"	;
187)   09F7 C6          		 DEFB 'F'+80H	;
188)   09F8 C2 0C       		 DEFW LCD_CURSOF	;
189)   09FA 4C 43 44 5F 		 DEFM  "LCD_CURSO"	;
189)   09FE 43 55 52 53 		 DEFM  "LCD_CURSO"	;
189)   0A02 4F          		 DEFM  "LCD_CURSO"	;
190)   0A03 CE          		 DEFB 'N'+80H	;
191)   0A04 C8 0C       		 DEFW LCD_CURSON	;
192)   0A06 4C 43 44 5F 		 DEFM  "LCD_DISPOF"	;
192)   0A0A 44 49 53 50 		 DEFM  "LCD_DISPOF"	;
192)   0A0E 4F 46       		 DEFM  "LCD_DISPOF"	;
193)   0A10 C6          		 DEFB 'F'+80H	;
194)   0A11 CE 0C       		 DEFW LCD_DISPOF	;
195)   0A13 4C 43 44 5F 		 DEFM  "LCD_DISPO"	;
195)   0A17 44 49 53 50 		 DEFM  "LCD_DISPO"	;
195)   0A1B 4F          		 DEFM  "LCD_DISPO"	;
196)   0A1C CE          		 DEFB 'N'+80H	;
197)   0A1D D4 0C       		 DEFW LCD_DISPON	;
198)   0A1F 4C 43 44 5F 		 DEFM  "LCD_HOM"	;
198)   0A23 48 4F 4D    		 DEFM  "LCD_HOM"	;
199)   0A26 C5          		 DEFB 'E'+80H	;
200)   0A27 70 1B       		 DEFW LCD16_HOME	;
201)   0A29 4C 43 44 5F 		 DEFM  "LCD_MOVLEF"	;
201)   0A2D 4D 4F 56 4C 		 DEFM  "LCD_MOVLEF"	;
201)   0A31 45 46       		 DEFM  "LCD_MOVLEF"	;
202)   0A33 D4          		 DEFB 'T'+80H	;
203)   0A34 E0 0C       		 DEFW LCD_MOVLFT	;
204)   0A36 4C 43 44 5F 		 DEFM  "LCD_MOVRIGH"	;
204)   0A3A 4D 4F 56 52 		 DEFM  "LCD_MOVRIGH"	;
204)   0A3E 49 47 48    		 DEFM  "LCD_MOVRIGH"	;
205)   0A41 D4          		 DEFB 'T'+80H	;
206)   0A42 E6 0C       		 DEFW LCD_MOVRGT	;
207)   0A44 4C 43 44 5F 		 DEFM  "LCD_PRIN"	;
207)   0A48 50 52 49 4E 		 DEFM  "LCD_PRIN"	;
208)   0A4C D4          		 DEFB 'T'+80H	;
209)   0A4D EC 0C       		 DEFW LCD_PRN	;
210)   0A4F 4C 43 44 5F 		 DEFM  "LCD_SCRLEF"	;
210)   0A53 53 43 52 4C 		 DEFM  "LCD_SCRLEF"	;
210)   0A57 45 46       		 DEFM  "LCD_SCRLEF"	;
211)   0A59 D4          		 DEFB 'T'+80H	;
212)   0A5A F5 0C       		 DEFW LCD_SCRLFT	;
213)   0A5C 4C 43 44 5F 		 DEFM  "LCD_SCRRIGH"	;
213)   0A60 53 43 52 52 		 DEFM  "LCD_SCRRIGH"	;
213)   0A64 49 47 48    		 DEFM  "LCD_SCRRIGH"	;
214)   0A67 D4          		 DEFB 'T'+80H	;
215)   0A68 FB 0C       		 DEFW LCD_SCRRGT	;
216)   0A6A 4C 43 44 54 		 DEFM  "LCDTIM"	;
216)   0A6E 49 4D       		 DEFM  "LCDTIM"	;
217)   0A70 C5          		 DEFB 'E'+80H	;
218)   0A71 A5 0D       		 DEFW LCDSHOWTIME	;
219)   0A73 50 57       		 DEFM  "PW"	;
220)   0A75 C4          		 DEFB    'D'+80H	;
221)   0A76 F6 0A       		 DEFW NIMP	;
222)   0A78 52 45 53 45 		 DEFM  "RESE"	;
223)   0A7C D4          		 DEFB    'T'+80H	;
224)   0A7D 02 0B       		 DEFW DORESET	;
225)   0A7F 52 54 43 5F 		 DEFM  "RTC_ADJUS"	;
225)   0A83 41 44 4A 55 		 DEFM  "RTC_ADJUS"	;
225)   0A87 53          		 DEFM  "RTC_ADJUS"	;
226)   0A88 D4          		 DEFB    'T'+80H                	;
227)   0A89 E8 0B       		 DEFW RTC_ADJUST	;
228)   0A8B 52 54 43 5F 		 DEFM  "RTC_GE"	;
228)   0A8F 47 45       		 DEFM  "RTC_GE"	;
229)   0A91 D4          		 DEFB    'T'+80H	;
230)   0A92 16 0C       		 DEFW RTC_GET	;
231)   0A94 53 45 54 44 		 DEFM "SETDATETIM"	;
231)   0A98 41 54 45 54 		 DEFM "SETDATETIM"	;
231)   0A9C 49 4D       		 DEFM "SETDATETIM"	;
232)   0A9E C5          		 DEFB    'E'+80H	;
233)   0A9F 82 0C       		 DEFW DSSETDATETIME	;
234)   0AA1 53 45 54 44 		 DEFM "SETDAT"	;
234)   0AA5 41 54       		 DEFM "SETDAT"	;
235)   0AA7 C5          		 DEFB    'E'+80H	;
236)   0AA8 2A 0C       		 DEFW DSSETDATE	;
237)   0AAA 53 45 54 4C 		 DEFM "SETLC"	;
237)   0AAE 43          		 DEFM "SETLC"	;
238)   0AAF C4          		 DEFB    'D'+80H	;
239)   0AB0 26 0D       		 DEFW SETLCD	;
240)   0AB2 53 45 54 54 		 DEFM "SETTIM"	;
240)   0AB6 49 4D       		 DEFM "SETTIM"	;
241)   0AB8 C5          		 DEFB    'E'+80H	;
242)   0AB9 56 0C       		 DEFW DSSETTIME	;
243)   0ABB 53 45 54 56 		 DEFM "SETVG"	;
243)   0ABF 47          		 DEFM "SETVG"	;
244)   0AC0 C1          		 DEFB    'A'+80H	;
245)   0AC1 01 0D       		 DEFW SETVGA	;
246)   0AC3 54 59 50    		 DEFM  "TYP"	;
247)   0AC6 C5          		 DEFB    'E'+80H	;
248)   0AC7 C5 0B       		 DEFW DRV_TYPFILE	;
249)   0AC9 56 47 41 4D 		 DEFM  "VGAMOD"	;
249)   0ACD 4F 44       		 DEFM  "VGAMOD"	;
250)   0ACF C5          		 DEFB    'E'+80H	;
251)   0AD0 4B 0D       		 DEFW SETVGAMODE	;
254)   0AD2 FF          		 DEFB 0FFH	;
262)   0AD3 2A 75 FF    		OSCMDFIN:      LD HL,(COMDGET)	;
263)   0AD6 E5          		 PUSH HL	;
264)   0AD7 C9          		 RET  ;GOTO COMDGET	;GOTO COMDGET
266)   0AD8 E1          		OSERROR:       POP HL	;
267)   0AD9 CD 22 05    		               CALL OS_PRINTTEXT	;
268)   0ADC C3 D3 0A    		               JP OSCMDFIN	;
270)   0ADF CD D8 0A    		SNTX_ERROR: CALL OSERROR	;
271)   0AE2 4F 53 20 43 		 DEFM  "OS CMD Syntax error"	;
271)   0AE6 4D 44 20 53 		 DEFM  "OS CMD Syntax error"	;
271)   0AEA 79 6E 74 61 		 DEFM  "OS CMD Syntax error"	;
271)   0AEE 78 20 65 72 		 DEFM  "OS CMD Syntax error"	;
271)   0AF2 72 6F 72    		 DEFM  "OS CMD Syntax error"	;
272)   0AF5 00          		 DEFB    0	;
274)   0AF6 C3 D3 0A    		NIMP           JP OSCMDFIN	;
276)   0AF9 C3 BD 02    		BYE: JP MENU	;
278)   0AFC CD E6 05    		DOCLS:         CALL OS_CLRSCR	;
279)   0AFF C3 D3 0A    		               JP OSCMDFIN	;
282)   0B02 C3 00 00    		DORESET: JP 0	;
285)   0B05 CD D8 0A    		HEXERROR:      CALL OSERROR	;
286)   0B08 4E 4F 54 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0B0C 41 20 56 41 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0B10 4C 49 44 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0B14 48 45 58 20 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0B18 41 44 44 52 		               DEFM "NOT A VALID HEX ADDRESS"	;
286)   0B1C 45 53 53    		               DEFM "NOT A VALID HEX ADDRESS"	;
287)   0B1F 00          		               DEFB 0	;
291)   0B20 7E          		PRSADDR:       LD A,(HL)	;
292)   0B21 FE 00       		               CP 0	;
293)   0B23 28 14       		               JR Z,PSADEX	;
294)   0B25 FE 2E       		               CP '.'	;
295)   0B27 28 03       		               JR Z,PSADGTIT	;
296)   0B29 23          		               INC HL	;
297)   0B2A 18 F4       		               JR PRSADDR	;
300)   0B2C 23          		PSADGTIT:      INC HL	;
301)   0B2D CD E4 30    		               CALL IsStrHex   ;CHECK IF VALID HEX	;CHECK IF VALID HEX
302)   0B30 20 D3       		               JR NZ,HEXERROR	;
304)   0B32 CD 34 31    		               CALL Read16bit	;
305)   0B35 60          		               LD H,B	;
306)   0B36 69          		               LD L,C	;
307)   0B37 AF          		               XOR A           ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
308)   0B38 C9          		               RET	;
309)   0B39 37          		PSADEX:        SCF             ;SET CARRY FLAG ON ERROR	;SET CARRY FLAG ON ERROR
310)   0B3A C9          		               RET                	;
314)   0B3B CD AC 0B    		DOEXEC:        CALL DRV_GETFNPRM	;
315)   0B3E 2B          		               DEC HL	;
316)   0B3F 2B          		               DEC HL	;
317)   0B40 2B          		               DEC HL	;
318)   0B41 2B          		               DEC HL	;
319)   0B42 2B          		               DEC HL	;
320)   0B43 CD 20 0B    		               CALL PRSADDR	;
321)   0B46 DA D3 0A    		               JP C,OSCMDFIN           ;ERROR ON PARSING HEX ADDRESS	;ERROR ON PARSING HEX ADDRESS
322)   0B49 E5          		               PUSH HL                 ;SAVE HEX ADDR	;SAVE HEX ADDR
323)   0B4A CD D6 14    		 CALL STRG_OPNFILE	;
324)   0B4D E1          		               POP HL	;
325)   0B4E 38 43       		 JR C, DRV_ERROR         ;ERROR ON FILE OPENING	;ERROR ON FILE OPENING
326)   0B50 E5          		               PUSH HL                 ;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN	;SAVE HEX ADDR TO STACK = EXECUTE ON RETURN
327)   0B51 54          		               LD D,H	;
328)   0B52 5D          		               LD E,L	;
329)   0B53 01 00 00    		               LD BC,0                 ;LOAD ALL BYTES	;LOAD ALL BYTES
330)   0B56 CD 4E 15    		               CALL STRG_BLKREAD	;
331)   0B59 3A FF FE    		 LD A, (FID)	;
332)   0B5C CD 40 15    		 CALL STRG_CLSFILE       ;CLOSE FILE	;CLOSE FILE
333)   0B5F C9          		               RET                     ;EXECUTE CODE AT HEX ADDR	;EXECUTE CODE AT HEX ADDR
340)   0B60 FD E5       		PARSCMD:       PUSH IY	;
341)   0B62 E1          		               POP HL	;
342)   0B63 CD 89 09    		               CALL SKIPSP	;
343)   0B66 E5          		               PUSH HL	;
344)   0B67 1E 00       		               LD E,0	;
345)   0B69 7E          		PCNXT:         LD A,(HL)	;
346)   0B6A FE 20       		               CP ' '	;
347)   0B6C 28 18       		               JR Z,PCEXT	;
348)   0B6E FE 2C       		               CP ','	;
349)   0B70 28 14       		               JR Z,PCEXT	;
350)   0B72 FE 2F       		               CP '/'	;
351)   0B74 28 10       		               JR Z,PCEXT	;
352)   0B76 FE 3A       		               CP ':'	;
353)   0B78 28 0C       		               JR Z,PCEXT	;
354)   0B7A FE 0D       		               CP 13	;
355)   0B7C 28 08       		               JR Z,PCEXT	;
356)   0B7E FE 00       		               CP 0	;
357)   0B80 28 04       		               JR Z,PCEXT	;
358)   0B82 23          		               INC HL	;
359)   0B83 1C          		               INC E	;
360)   0B84 18 E3       		               JR PCNXT	;
361)   0B86 E5          		PCEXT:         PUSH HL	;
362)   0B87 FD E1       		               POP IY          ;IY AT THE END OF PARAM	;IY AT THE END OF PARAM
363)   0B89 E1          		               POP HL          ;HL AT THE START OF PARAM	;HL AT THE START OF PARAM
364)   0B8A C9          		               RET                	;
367)   0B8B CD 60 0B    		PARSCMDI:      CALL PARSCMD	;
369)   0B8E CD 04 31    		               CALL STRTOB     ;CONVERT TO BYTE ON A	;CONVERT TO BYTE ON A
370)   0B91 6F          		               LD L,A	;
371)   0B92 C9          		               RET	;
375)   0B93 CD D8 0A    		DRV_ERROR: CALL OSERROR	;
376)   0B96 53 54 4F 52 		 DEFM  "STORAGE ERROR"	;
376)   0B9A 41 47 45 20 		 DEFM  "STORAGE ERROR"	;
376)   0B9E 45 52 52 4F 		 DEFM  "STORAGE ERROR"	;
376)   0BA2 52          		 DEFM  "STORAGE ERROR"	;
377)   0BA3 00          		 DEFB    0	;
382)   0BA4 CD E5 13    		DRV_DIR: CALL STRG_DIRLIST      ;DIRECTLY PRINTS THE DIRECTORY ON SCREEN	;DIRECTLY PRINTS THE DIRECTORY ON SCREEN
383)   0BA7 D2 D3 0A    		 JP NC, OSCMDFIN	;
384)   0BAA 18 E7       		 JR DRV_ERROR	;
386)   0BAC CD 60 0B    		DRV_GETFNPRM: CALL PARSCMD       	;
387)   0BAF 06 00       		 LD B, 0	;
388)   0BB1 4B          		 LD C, E	;
389)   0BB2 11 D3 FE    		 LD DE, STRGBUFF	;
390)   0BB5 ED B0       		 LDIR	;
391)   0BB7 AF          		 XOR A	;
392)   0BB8 12          		 LD (DE), A	;
393)   0BB9 C9          		 RET	;
396)   0BBA CD AC 0B    		DRV_CD: CALL DRV_GETFNPRM	;
397)   0BBD CD E6 13    		 CALL STRG_DIRCHG	;
398)   0BC0 D2 D3 0A    		 JP NC, OSCMDFIN	;
399)   0BC3 18 CE       		 JR DRV_ERROR	;
402)   0BC5 CD AC 0B    		DRV_TYPFILE: CALL DRV_GETFNPRM	;
403)   0BC8 CD D6 14    		 CALL STRG_OPNFILE	;
404)   0BCB 38 C6       		 JR C, DRV_ERROR	;
405)   0BCD CD E7 13    		 CALL STRG_TPFILE       ;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER	;DIRECTLY PRINTS THE FILE ON SCREEN NO BUFFER
406)   0BD0 3A FF FE    		 LD A, (FID)	;
407)   0BD3 CD 40 15    		 CALL STRG_CLSFILE	;
408)   0BD6 C3 D3 0A    		 JP OSCMDFIN	;
415)   0BD9 CD 8B 0B    		RTC_GETPARBCD: CALL PARSCMDI	;
416)   0BDC CD 95 2F    		 CALL BN2BCD       ;CONVERT IT IN BCD RESULT ON L	;CONVERT IT IN BCD RESULT ON L
417)   0BDF FD 7E 00    		 LD A, (IY)	;
418)   0BE2 FE 2C       		 CP ','	;
419)   0BE4 FD 23       		 INC IY	;
420)   0BE6 7D          		 LD A, L	;
421)   0BE7 C9          		 RET	;
426)   0BE8 0E 00       		RTC_ADJUST: LD C, 0	;
427)   0BEA 11 8A FE    		 LD DE, BUFFER	;
428)   0BED AF          		 XOR A         ;CMD ADJUST TIME	;CMD ADJUST TIME
429)   0BEE 32 8A FE    		 LD (BUFFER), A	;
430)   0BF1 13          		 INC DE	;
431)   0BF2 C5          		RTCADJ_NXT: PUSH BC	;
432)   0BF3 D5          		 PUSH DE	;
433)   0BF4 CD D9 0B    		 CALL RTC_GETPARBCD	;
434)   0BF7 D1          		 POP DE	;
435)   0BF8 C1          		 POP BC	;
436)   0BF9 28 0B       		 JR Z, RTCADJ_PAROK	;
438)   0BFB FD 2B       		 DEC IY	;
439)   0BFD 47          		 LD B, A        ;SAVE A	;SAVE A
440)   0BFE 79          		 LD A, C	;
441)   0BFF FE 06       		 CP 6	;
442)   0C01 28 08       		 JR Z, RTCADJ_EXEC	;
444)   0C03 C3 DF 0A    		 JP SNTX_ERROR	;
445)   0C06 0C          		RTCADJ_PAROK: INC C	;
446)   0C07 12          		 LD (DE), A	;
447)   0C08 13          		 INC DE	;
448)   0C09 18 E7       		 JR RTCADJ_NXT	;
449)   0C0B 78          		RTCADJ_EXEC: LD A, B	;
450)   0C0C 12          		 LD (DE), A       ;LAST BYTE YEAR LOW	;LAST BYTE YEAR LOW
451)   0C0D 13          		 INC DE	;
452)   0C0E AF          		 XOR A	;
453)   0C0F 12          		 LD (DE), A       ;YEAR HI DEFAULT	;YEAR HI DEFAULT
454)   0C10 CD D9 19    		 CALL DS1307_ADJUST	;
455)   0C13 C3 D3 0A    		 JP OSCMDFIN	;
458)   0C16 CD 22 1A    		RTC_GET: CALL DS1307_GETTIME 	;
463)   0C19 21 A0 FE    		 LD HL,TIMMSG	;
464)   0C1C 11 14 00    		 LD DE,20	;
465)   0C1F AF          		 XOR A	;
466)   0C20 19          		 ADD HL,DE	;
467)   0C21 77          		 LD (HL),A	;
468)   0C22 ED 52       		 SBC HL,DE	;
469)   0C24 CD 22 05    		 CALL OS_PRINTTEXT	;
473)   0C27 C3 D3 0A    		 JP OSCMDFIN	;
479)   0C2A CD 22 1A    		DSSETDATE: CALL DS1307_GETTIME      ;TIMMSG HAS THE DATE AND TIME	;TIMMSG HAS THE DATE AND TIME
482)   0C2D 21 B0 FE    		 LD HL,TIMMSG+16	;
483)   0C30 11 B2 FE    		 LD DE,TIMMSG+18	;
484)   0C33 01 08 00    		 LD BC,8	;
485)   0C36 ED B8       		 LDDR	;
486)   0C38 21 A9 FE    		 LD HL,TIMMSG+9	;
487)   0C3B 36 30       		 LD (HL),'0'	;
488)   0C3D 23          		 INC HL	;
489)   0C3E 36 20       		 LD (HL),' '	;
490)   0C40 FD E5       		 PUSH IY	;
491)   0C42 E1          		 POP HL     ;HL POINTS TO COMDBUFFER	;HL POINTS TO COMDBUFFER
492)   0C43 23          		 INC HL     ;SKIP SPACE	;SKIP SPACE
493)   0C44 11 A0 FE    		 LD DE,TIMMSG	;
494)   0C47 01 08 00    		 LD BC,8        ;DD/MM/YY	;DD/MM/YY
495)   0C4A ED B0       		 LDIR	;
496)   0C4C FD 21 A0 FE 		 LD IY,TIMMSG	;
497)   0C50 CD 5A 19    		 CALL DS1307_SETTIME	;
498)   0C53 C3 D3 0A    		 JP OSCMDFIN	;
500)   0C56 CD 22 1A    		DSSETTIME: CALL DS1307_GETTIME      ;TIMMSG HAS THE DATE AND TIME	;TIMMSG HAS THE DATE AND TIME
503)   0C59 21 B0 FE    		 LD HL,TIMMSG+16	;
504)   0C5C 11 B2 FE    		 LD DE,TIMMSG+18	;
505)   0C5F 01 08 00    		 LD BC,8	;
506)   0C62 ED B8       		 LDDR	;
507)   0C64 21 A9 FE    		 LD HL,TIMMSG+9	;
508)   0C67 36 30       		 LD (HL),'0'	;
509)   0C69 23          		 INC HL	;
510)   0C6A 36 20       		 LD (HL),' '	;
512)   0C6C FD E5       		 PUSH IY	;
513)   0C6E E1          		 POP HL	;
514)   0C6F 23          		 INC HL        ;SKIP SPACE	;SKIP SPACE
515)   0C70 11 AB FE    		 LD DE,TIMMSG + 11      ;SKIP DATE PART 	;SKIP DATE PART
516)   0C73 01 08 00    		 LD BC,8        ;HH:MN:SS	;HH:MN:SS
517)   0C76 ED B0       		 LDIR	;
518)   0C78 FD 21 A0 FE 		 LD IY,TIMMSG	;
519)   0C7C CD 5A 19    		 CALL DS1307_SETTIME	;
520)   0C7F C3 D3 0A    		 JP OSCMDFIN	;
523)   0C82 FD E5       		DSSETDATETIME: PUSH IY	;
524)   0C84 E1          		 POP HL	;
525)   0C85 11 A0 FE    		 LD DE,TIMMSG	;
526)   0C88 01 13 00    		 LD BC,19	;
527)   0C8B ED B0       		 LDIR	;
528)   0C8D CD 5A 19    		 CALL DS1307_SETTIME	;
529)   0C90 C3 D3 0A    		 JP OSCMDFIN  	;
533)   0C93 CD A8 1B    		LCD_BLINKOF: CALL LCD16_BLINKOFF	;
534)   0C96 C3 D3 0A    		 JP OSCMDFIN	;
536)   0C99 CD B6 1B    		LCD_BLINKON: CALL LCD16_BLINKON	;
537)   0C9C C3 D3 0A    		 JP OSCMDFIN	;
539)   0C9F CD 59 1B    		LCD_CLR: CALL LCD16_CLR	;
540)   0CA2 C3 D3 0A    		 JP OSCMDFIN	;
542)   0CA5 CD 8B 0B    		LCD_CURSAT: CALL PARSCMDI     ;TAKE PARAMS D COL E ROW  	;TAKE PARAMS D COL E ROW
543)   0CA8 55          		 LD D, L	;
544)   0CA9 D5          		 PUSH DE                                                 ;SAVE PARAM D	;SAVE PARAM D
545)   0CAA FD 7E 00    		 LD A, (IY)	;
546)   0CAD FE 2C       		 CP ', '	;
547)   0CAF 28 04       		 JR Z, LCDCA_OK	;
548)   0CB1 D1          		 POP DE	;
549)   0CB2 C3 DF 0A    		 JP SNTX_ERROR	;
550)   0CB5 FD 23       		LCDCA_OK: INC IY	;
551)   0CB7 CD 8B 0B    		 CALL PARSCMDI	;
552)   0CBA D1          		               POP DE                                                  ;RESTORE PARAM D	;RESTORE PARAM D
553)   0CBB 5D          		 LD E, L	;
554)   0CBC CD 7D 1B    		 CALL LCD16_SETCURS	;
555)   0CBF C3 D3 0A    		 JP OSCMDFIN	;
557)   0CC2 CD 8C 1B    		LCD_CURSOF: CALL LCD16_CURSOFF	;
558)   0CC5 C3 D3 0A    		 JP OSCMDFIN	;
560)   0CC8 CD 9A 1B    		LCD_CURSON: CALL LCD16_CURSON	;
561)   0CCB C3 D3 0A    		 JP OSCMDFIN	;
563)   0CCE CD 30 1B    		LCD_DISPOF: CALL LCD16_NODISP	;
564)   0CD1 C3 D3 0A    		 JP OSCMDFIN	;
566)   0CD4 CD 3E 1B    		LCD_DISPON: CALL LCD16_DISP	;
567)   0CD7 C3 D3 0A    		 JP OSCMDFIN	;
569)   0CDA CD 70 1B    		LCD_HOME: CALL LCD16_HOME	;
570)   0CDD C3 D3 0A    		 JP OSCMDFIN	;
572)   0CE0 CD D0 1B    		LCD_MOVLFT: CALL LCD16_MOVLEFT	;
573)   0CE3 C3 D3 0A    		 JP OSCMDFIN	;
575)   0CE6 CD D6 1B    		LCD_MOVRGT: CALL LCD16_MOVRIGHT	;
576)   0CE9 C3 D3 0A    		 JP OSCMDFIN	;
578)   0CEC CD 60 0B    		LCD_PRN: CALL PARSCMD	;
579)   0CEF CD 62 1B    		               CALL LCD16_PRINT	;
580)   0CF2 C3 D3 0A    		               JP OSCMDFIN	;
583)   0CF5 CD C4 1B    		LCD_SCRLFT: CALL LCD16_SCRLEFT	;
584)   0CF8 C3 D3 0A    		 JP OSCMDFIN	;
586)   0CFB CD CA 1B    		LCD_SCRRGT: CALL LCD16_SCRRIGHT	;
587)   0CFE C3 D3 0A    		 JP OSCMDFIN	;
592)   0D01 CD 60 0B    		SETVGA: CALL PARSCMD  ;GET PARAM	;GET PARAM
593)   0D04 CD 5B 0D    		 CALL CHKKEYWD	;
594)   0D07 4F 4E       		 DEFM "ON"	;
595)   0D09 00          		 DB 0	;
596)   0D0A 28 12       		 JR Z,SVON	;
597)   0D0C CD 5B 0D    		 CALL CHKKEYWD	;
598)   0D0F 4F 46 46    		 DEFM "OFF"	;
599)   0D12 00          		 DB 0	;
600)   0D13 C2 DF 0A    		 JP NZ, SNTX_ERROR	;
602)   0D16 21 BB FE    		 LD HL,SCRNST	;
603)   0D19 CB 8E       		 RES 1,(HL)	;
604)   0D1B C3 D3 0A    		 JP OSCMDFIN	;
605)   0D1E 21 BB FE    		SVON: LD HL,SCRNST	;
606)   0D21 CB CE       		 SET 1,(HL)	;
607)   0D23 C3 D3 0A    		 JP OSCMDFIN	;
610)   0D26 CD 60 0B    		SETLCD: CALL PARSCMD  ;GET PARAM	;GET PARAM
611)   0D29 CD 5B 0D    		 CALL CHKKEYWD	;
612)   0D2C 4F 4E       		 DEFM "ON"	;
613)   0D2E 00          		 DB 0	;
614)   0D2F 28 12       		 JR Z,SLON	;
615)   0D31 CD 5B 0D    		 CALL CHKKEYWD	;
616)   0D34 4F 46 46    		 DEFM "OFF"	;
617)   0D37 00          		 DB 0	;
618)   0D38 C2 DF 0A    		 JP NZ, SNTX_ERROR	;
621)   0D3B 21 BB FE    		 LD HL,SCRNST	;
622)   0D3E CB 86       		 RES 0,(HL)	;
623)   0D40 C3 D3 0A    		 JP OSCMDFIN	;
624)   0D43 21 BB FE    		SLON: LD HL,SCRNST	;
625)   0D46 CB C6       		 SET 0,(HL)	;
626)   0D48 C3 D3 0A    		 JP OSCMDFIN	;
631)   0D4B CD 8B 0B    		SETVGAMODE: CALL PARSCMDI	;
632)   0D4E E6 03       		 AND 3        ;KEEP ONLY BITS 0-1	;KEEP ONLY BITS 0-1
633)   0D50 6F          		 LD L, A  	;
634)   0D51 CD BE 1C    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
635)   0D54 4D          		 LD C, L        ;VIDEO MODE SCREEN	;VIDEO MODE SCREEN
636)   0D55 CD 8C 1C    		 CALL VGA_SETCONF	;
637)   0D58 C3 D3 0A    		 JP OSCMDFIN	;
646)   0D5B D1          		CHKKEYWD: POP DE ;GET THE START OF THE KEYWD	;GET THE START OF THE KEYWD
647)   0D5C E5          		 PUSH HL	;
648)   0D5D 1A          		CHKNXTL: LD A,(DE) ;	;
649)   0D5E FE 00       		 CP 0	;
650)   0D60 28 13       		 JR Z, CHKEND	;
651)   0D62 47          		 LD B,A	;
652)   0D63 7E          		 LD A,(HL)	;
653)   0D64 FE 00       		 CP 0	;
654)   0D66 28 0D       		 JR Z, CHKEND	;
655)   0D68 B8          		 CP B	;
656)   0D69 20 04       		 JR NZ, CHKNOTEQ	;
657)   0D6B 13          		 INC DE	;
658)   0D6C 23          		 INC HL	;
659)   0D6D 18 EE       		 JR CHKNXTL	;
661)   0D6F 3E 01       		CHKNOTEQ: LD A,1	;
662)   0D71 FE 00       		 CP 0  ;NOT ZERO	;NOT ZERO
663)   0D73 18 01       		 JR CHKEXIT	;
665)   0D75 AF          		CHKEND: XOR A  ;ZERO FLAG SET	;ZERO FLAG SET
667)   0D76 CD 7C 0D    		CHKEXIT: CALL FNDKWDEND	;
668)   0D79 E1          		 POP HL  	;
669)   0D7A D5          		 PUSH DE   ;DE THE RETURN ADDRESS AFTER THE KWD	;DE THE RETURN ADDRESS AFTER THE KWD
670)   0D7B C9          		 RET	;
675)   0D7C F5          		FNDKWDEND: PUSH AF  ;SAVE FLAGS	;SAVE FLAGS
676)   0D7D 1B          		 DEC DE	;
677)   0D7E 13          		CHKEXNXT: INC DE  ;FIND THE KEYWORD END	;FIND THE KEYWORD END
678)   0D7F 1A          		 LD A,(DE)	;
679)   0D80 FE 00       		 CP 0	;
680)   0D82 20 FA       		 JR NZ, CHKEXNXT	;
681)   0D84 13          		 INC DE   ;THIS IS THE RETURN ADDRESS AFTER THE KEYWD 	;THIS IS THE RETURN ADDRESS AFTER THE KEYWD
682)   0D85 F1          		 POP AF   ;RESTORE FLAGS	;RESTORE FLAGS
683)   0D86 C9          		 RET	;
688)   0D87 CD 60 0B    		SETCURSOR: CALL PARSCMD	;
689)   0D8A CD 5B 0D    		 CALL CHKKEYWD	;
690)   0D8D 4F 4E       		 DEFM "ON"	;
691)   0D8F 00          		 DB 0	;
692)   0D90 3E 00       		 LD A,0	;
693)   0D92 28 0B       		 JR Z, SCURSON	;
694)   0D94 CD 5B 0D    		 CALL CHKKEYWD	;
695)   0D97 4F 46 46    		 DEFM "OFF"	;
696)   0D9A 00          		 DB 0	;
697)   0D9B C2 DF 0A    		 JP NZ, SNTX_ERROR	;
698)   0D9E 3C          		SCURSOFF: INC A 	;
700)   0D9F CD BF 05    		SCURSON: CALL OSSETCURSOR	;
701)   0DA2 C3 D3 0A    		 JP OSCMDFIN	;
705)   0DA5 CD 60 0B    		LCDSHOWTIME:   CALL PARSCMD	;
706)   0DA8 CD 5B 0D    		 CALL CHKKEYWD	;
707)   0DAB 4F 4E       		 DEFM "ON"	;
708)   0DAD 00          		 DB 0	;
709)   0DAE 3E 00       		 LD A,0	;
710)   0DB0 28 0B       		 JR Z, STIMSON	;
711)   0DB2 CD 5B 0D    		 CALL CHKKEYWD	;
712)   0DB5 4F 46 46    		 DEFM "OFF"	;
713)   0DB8 00          		 DB 0	;
714)   0DB9 C2 DF 0A    		 JP NZ, SNTX_ERROR	;
715)   0DBC 3C          		STIMSOFF: INC A 	;
717)   0DBD CD AE 05    		STIMSON: CALL OSSETTIME	;
718)   0DC0 C3 D3 0A    		 JP OSCMDFIN	;
 14)   0DC3 F5          		@INTSER: PUSH AF	;
 15)   0DC4 C5          		 PUSH BC	;
 16)   0DC5 D5          		 PUSH DE	;
 17)   0DC6 E5          		 PUSH HL      	;
 18)   0DC7 DD E5       		 PUSH IX	;
 22)   0DC9 DB 68       		 IN A, (DEVINT)       ;WAS DEVINP BEFORE V 0.43	;WAS DEVINP BEFORE V 0.43
 23)   0DCB 2F          		 CPL	;
 24)   0DCC E6 07       		 AND 0X07       ;BITS 0-2  	;BITS 0-2
 28)   0DCE DD 21 94 FF 		 LD IX, INTTAB	;
 29)   0DD2 06 00       		 LD B, 0	;
 30)   0DD4 4F          		 LD C, A	;
 31)   0DD5 CB 21       		 SLA C        ;DOUBLE THIS CAUSE 2 BYTES PER ADDR	;DOUBLE THIS CAUSE 2 BYTES PER ADDR
 32)   0DD7 DD 09       		 ADD IX, BC	;
 33)   0DD9 DD 6E 00    		 LD L, (IX)	;
 34)   0DDC DD 66 01    		 LD H, (IX + 1)	;
 35)   0DDF 01 E4 0D    		 LD BC, IS_EX	;
 36)   0DE2 C5          		 PUSH BC        ;RETURN ADDRESS	;RETURN ADDRESS
 37)   0DE3 E9          		 JP (HL)        ;JP TO HL	;JP TO HL
 39)   0DE4 DD E1       		IS_EX: POP IX	;
 40)   0DE6 E1          		 POP HL	;
 41)   0DE7 D1          		 POP DE	;
 42)   0DE8 C1          		 POP BC	;
 43)   0DE9 F1          		 POP AF	;
 44)   0DEA FB          		 EI	;
 45)   0DEB C9          		 RET        ;SAME AS RETI FOR IM1	;SAME AS RETI FOR IM1
 50)   0DEC F3          		@COPYINTTAB: DI	;
 51)   0DED 21 02 0E    		 LD HL,MYINTADDR	;
 52)   0DF0 11 94 FF    		 LD DE,INTTAB	;
 53)   0DF3 01 10 00    		 LD BC,16	;
 54)   0DF6 ED B0       		 LDIR	;
 55)   0DF8 0E 68       		 LD C,DEVINT	;
 56)   0DFA 06 08       		 LD B,8	;
 57)   0DFC ED 41       		CIT_NXT: OUT (C), B	;
 58)   0DFE 10 FC       		 DJNZ CIT_NXT 	;
 59)   0E00 FB          		 EI 	;
 60)   0E01 C9          		 RET 	;
 62)   0E02 49 0E       		MYINTADDR: DEFW INT_TIMER	;
 63)   0E04 1A 0E       		 DEFW SAVETE	;
 64)   0E06 12 0E       		 DEFW INT_KEYB	;
 65)   0E08 22 0E       		 DEFW DOCLRINT	;
 66)   0E0A 22 0E       		 DEFW DOCLRINT	;
 67)   0E0C 22 0E       		 DEFW DOCLRINT	;
 68)   0E0E 22 0E       		 DEFW DOCLRINT	;
 69)   0E10 22 0E       		 DEFW DOCLRINT	;
 71)   0E12 4F          		INT_KEYB: LD C,A	;
 72)   0E13 CD 44 0F    		 CALL PS2SETKEYAV      ;SET NEW KEY AVAILABLE FROM PS/2	;SET NEW KEY AVAILABLE FROM PS/2
 73)   0E16 79          		 LD A,C	;
 74)   0E17 D3 68       		 OUT (DEVINT), A       ;CLEAR THE INTERRUPT    	;CLEAR THE INTERRUPT
 75)   0E19 C9          		 RET	;
 78)   0E1A D3 68       		SAVETE: OUT (DEVINT), A       ;CLEAR THE INTERRUPT	;CLEAR THE INTERRUPT
 79)   0E1C 3E 01       		 LD A, 1	;
 80)   0E1E 32 C5 FE    		 LD (INT2TE),A        ;TEARING EFFECT	;TEARING EFFECT
 81)   0E21 C9          		 RET	;
 84)   0E22 D3 68       		DOCLRINT: OUT (DEVINT), A	;
 85)   0E24 C9          		 RET	;
 89)   0E25 21 C1 FE    		INT_TIMRINC: LD HL, TIMECTR	;
 90)   0E28 34          		 INC (HL)	;
 91)   0E29 7E          		 LD A, (HL)	;
 92)   0E2A FE 00       		 CP 0	;
 93)   0E2C C0          		 RET NZ	;
 94)   0E2D 23          		 INC HL	;
 95)   0E2E 34          		 INC (HL)	;
 96)   0E2F 7E          		 LD A, (HL)	;
 97)   0E30 FE 00       		 CP 0	;
 98)   0E32 C0          		 RET NZ	;
 99)   0E33 23          		 INC HL	;
100)   0E34 34          		 INC (HL)	;
101)   0E35 7E          		 LD A, (HL)	;
102)   0E36 FE 00       		 CP 0	;
103)   0E38 C0          		 RET NZ	;
104)   0E39 23          		 INC HL	;
105)   0E3A 34          		 INC (HL)	;
106)   0E3B 7E          		 LD A, (HL)	;
107)   0E3C FE 00       		 CP 0	;
108)   0E3E C0          		 RET NZ	;
110)   0E3F 21 00 00    		 LD HL, 0	;
111)   0E42 22 C1 FE    		 LD (TIMECTR), HL	;
112)   0E45 22 C3 FE    		 LD (TIMECTR + 2), HL	;
113)   0E48 C9          		 RET	;
115)   0E49 D3 68       		INT_TIMER: OUT (DEVINT), A   ;SUPPRESS INTERRUPT	;SUPPRESS INTERRUPT
116)   0E4B CD 25 0E    		 CALL INT_TIMRINC   ;INCREASE TIMER	;INCREASE TIMER
117)   0E4E CD 1D 2F    		 CALL SND_INTDELAY   ;UPDATES DELAY VALUES FOR SOUND MODULE	;UPDATES DELAY VALUES FOR SOUND MODULE
118)   0E51 C9          		 RET	;
  9)   0E52 21 33 FF    		INITMMU:       LD HL,BANKS	;
 10)   0E55 06 08       		               LD B,8	;
 11)   0E57 AF          		               XOR A	;
 12)   0E58 77          		INM_AGN:       LD (HL),A	;
 13)   0E59 3C          		               INC A	;
 14)   0E5A 23          		 INC HL	;
 15)   0E5B 10 FB       		               DJNZ INM_AGN	;
 16)   0E5D C9          		               RET                	;
 22)   0E5E 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 23)   0E5F 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 24)   0E60 FE 02       		 CP 2	;
 25)   0E62 D8          		 RET C         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 26)   0E63 FE 07       		 CP 7	;
 27)   0E65 C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 28)   0E66 21 33 FF    		 LD HL, BANKS	;
 29)   0E69 16 00       		 LD D, 0	;
 30)   0E6B 5F          		 LD E, A	;
 31)   0E6C 19          		 ADD HL, DE	;
 32)   0E6D 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 33)   0E6E 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 34)   0E6F 0E 00       		 LD C, DEVMMU	;
 35)   0E71 58          		 LD E,B	;
 36)   0E72 CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 37)   0E74 CB 20       		 SLA B	;
 38)   0E76 CB 20       		 SLA B	;
 39)   0E78 CB 20       		 SLA B	;
 40)   0E7A CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 41)   0E7C ED 79       		 OUT (C), A	;
 42)   0E7E 43          		 LD B,E	;
 43)   0E7F C9          		 RET	;
 48)   0E80 21 33 FF    		GETPGINBANK:   LD HL,BANKS	;
 49)   0E83 16 00       		               LD D,0	;
 50)   0E85 58          		               LD E,B	;
 51)   0E86 19          		               ADD HL,DE	;
 52)   0E87 7E          		               LD A,(HL)	;
 53)   0E88 C9          		               RET	;
 17)   0E89 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 18)   0E89 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 19)   0E89 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 24)   0E89 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 29)   0E89 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 37)   0E89 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 45)   0E89 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 46)   0E89 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 55)   0E89 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 56)   0E89 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 57)   0E89 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 58)   0E89 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 64)   0E89 F5          		RS_INI: PUSH AF	;
 65)   0E8A 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 66)   0E8C D3 1B       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 75)   0E8E F1          		 POP AF	;
 76)   0E8F D3 18       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 77)   0E91 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 78)   0E93 D3 19       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 79)   0E95 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 80)   0E97 D3 1B       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 82)   0E99 3E 00       		 LD A, 0	;
 83)   0E9B D3 1A       		 OUT (FCR), A        ;//was commented	;//was commented
 84)   0E9D 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 85)   0E9F D3 19       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 86)   0EA1 C9          		 RET	;
 89)   0EA2 CD A8 0E    		RS_TX: CALL RSTXRD	;
 90)   0EA5 D3 18       		 OUT (THR), A	;
 92)   0EA7 C9          		 RET	;
 95)   0EA8 F5          		RSTXRD: PUSH AF	;
 96)   0EA9 DB 1D       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 97)   0EAB CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 98)   0EAD 28 FA       		 JR Z, RSTXLP	;
 99)   0EAF F1          		 POP AF	;
100)   0EB0 C9          		 RET	;
104)   0EB1 7E          		RS_TXT: LD A, (HL)	;
105)   0EB2 23          		 INC HL	;
106)   0EB3 FE 00       		 CP 0	;
107)   0EB5 C8          		 RET Z	;
108)   0EB6 CD A2 0E    		 CALL RS_TX	;
109)   0EB9 18 F6       		 JR RS_TXT	;
113)   0EBB E5          		RS_MESG: PUSH HL	;
114)   0EBC C5          		 PUSH BC	;
115)   0EBD D5          		 PUSH DE	;
116)   0EBE F5          		 PUSH AF	;
117)   0EBF 21 09 00    		 LD HL,9 ;POINTS TO RET ADDRESS +10 FROM SP = OUR STRING	;POINTS TO RET ADDRESS +10 FROM SP = OUR STRING
118)   0EC2 39          		 ADD HL,SP	;
119)   0EC3 46          		 LD B,(HL)    	;
120)   0EC4 2B          		 DEC HL	;
121)   0EC5 4E          		 LD C,(HL)	;
122)   0EC6 60          		 LD H,B	;
123)   0EC7 69          		 LD L,C	;
124)   0EC8 CD B1 0E    		 CALL RS_TXT	;
125)   0ECB F1          		 POP AF	;
126)   0ECC D1          		 POP DE	;
127)   0ECD 44          		 LD B,H  ;NEW RET ADDRESS	;NEW RET ADDRESS
128)   0ECE 4D          		 LD C,L	;
129)   0ECF 21 05 00    		 LD HL,5 ;POINTS TO RET ADDRESS +6 FROM SP	;POINTS TO RET ADDRESS +6 FROM SP
130)   0ED2 39          		 ADD HL,SP  	;
131)   0ED3 70          		 LD (HL),B	;
132)   0ED4 2B          		 DEC HL	;
133)   0ED5 71          		 LD (HL),C  	;
134)   0ED6 C1          		 POP BC	;
135)   0ED7 E1          		 POP HL	;
136)   0ED8 C9          		 RET 	;
142)   0ED9 F3          		RS_RX: DI	;
143)   0EDA 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
144)   0EDC D3 1C       		 OUT (MCR), A	;
145)   0EDE CD F7 0E    		 CALL RSRXRD	;
146)   0EE1 AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
147)   0EE2 D3 1C       		 OUT (MCR), A	;
149)   0EE4 DB 18       		 IN A, (RBR)	;
150)   0EE6 FB          		 EI	;
151)   0EE7 C9          		 RET	;
153)   0EE8 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
154)   0EEA D3 1C       		 OUT (MCR), A	;
155)   0EEC DB 1D       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
156)   0EEE CB 47       		 BIT 0, A	;
157)   0EF0 28 03       		 JR Z, RS_NOCHAR	;
158)   0EF2 F3          		 DI	;
159)   0EF3 18 EC       		 JR RS_GTCH	;
160)   0EF5 AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
161)   0EF6 C9          		 RET	;
169)   0EF7 F5          		 PUSH AF	;
175)   0EF8 DB 1D       		 IN A, (LSR)        ; fetch the control register	; fetch the control register
176)   0EFA CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
177)   0EFC 28 FA       		 JR Z, RSRXLP	;
179)   0EFE F1          		 POP AF	;
181)   0EFF C9          		 RET	;
185)   0F00 DB 1D       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
186)   0F02 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
187)   0F04 C9          		 RET	;
189)   0F05 F5          		SHLCD: PUSH AF	;
191)   0F06 F1          		 POP AF	;
193)   0F07 C9          		 RET	;
195)   0F08 F5          		RS_NEWLINE: PUSH AF	;
196)   0F09 3E 0D       		 LD A,13	;
197)   0F0B CD A2 0E    		 CALL RS_TX	;
198)   0F0E 3E 0A       		 LD A,10	;
199)   0F10 CD A2 0E    		 CALL RS_TX	;
200)   0F13 F1          		 POP AF	;
201)   0F14 C9          		 RET  	;
204)   0F15 F5          		CHKERR: PUSH AF	;
205)   0F16 E5          		 PUSH HL	;
206)   0F17 C5          		 PUSH BC	;
207)   0F18 DB 1D       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
208)   0F1A CB 67       		 BIT 4, A	;
209)   0F1C 28 04       		 JR Z, LBLPE	;
210)   0F1E 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
211)   0F20 18 1A       		 JR EXIT	;
212)   0F22 CB 57       		LBLPE: BIT 2, A	;
213)   0F24 28 04       		 JR Z, LBLFE	;
214)   0F26 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
215)   0F28 18 12       		 JR EXIT	;
216)   0F2A CB 5F       		LBLFE: BIT 3, A	;
217)   0F2C 28 04       		 JR Z, LBLOE	;
218)   0F2E 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
219)   0F30 18 0A       		 JR EXIT	;
220)   0F32 CB 4F       		LBLOE: BIT 1, A	;
221)   0F34 28 04       		 JR Z, LBLNE	;
222)   0F36 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
223)   0F38 18 02       		 JR EXIT	;
224)   0F3A 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
225)   0F3C 21 B8 FE    		EXIT: LD HL, SERERR	;
226)   0F3F 77          		 LD (HL), A	;
228)   0F40 C1          		 POP BC	;
229)   0F41 E1          		 POP HL	;
230)   0F42 F1          		 POP AF	;
231)   0F43 C9          		 RET	;
 14)   0F44 21 A6 FF    		PS2SETKEYAV:  LD HL,KBDFLAG	;
 15)   0F47 36 01       		 LD (HL),1	;
 16)   0F49 DB 20       		 IN A, (DEVKBI)        ;JUST TO CLEAR THE INTERRUPT	;JUST TO CLEAR THE INTERRUPT
 17)   0F4B C9          		 RET	;
 20)   0F4C 21 A6 FF    		PS2NOKEYAV: LD HL,KBDFLAG	;
 21)   0F4F 36 00       		 LD (HL),0	;
 22)   0F51 C9          		 RET 	;
 27)   0F52 CD 63 0F    		READCHAR: CALL GTKEY	;
 28)   0F55 B7          		 OR A	;
 29)   0F56 C8          		               RET Z                                                           ;NO KEY IF A=0	;NO KEY IF A=0
 30)   0F57 32 A7 FF    		 LD (LASTKEY),A                	;
 31)   0F5A CD 62 10    		               CALL PS2LOK                                                     ;LOOK UP TABLE TRANSLATION	;LOOK UP TABLE TRANSLATION
 32)   0F5D C9          		               RET	;
 36)   0F5E 3A A6 FF    		PS2ISK:        LD A,(KBDFLAG) 	;
 37)   0F61 B7          		               OR A	;
 38)   0F62 C9          		               RET     	;
 41)   0F63 CD 88 0F    		GTKEY: CALL NGETKEY       ;GET A KEY FROM PS2 HARDWARE	;GET A KEY FROM PS2 HARDWARE
 42)   0F66 B7          		 OR A	;
 43)   0F67 C8          		 RET Z  	;
 44)   0F68 CD A1 0F    		               CALL CHECKEXT                                                   ;CHECK FOR EXTDED KEYS	;CHECK FOR EXTDED KEYS
 45)   0F6B C9          		               RET	;
 49)   0F6C CD 7F 0F    		PS2KBINIT: CALL KBDISABLE       ;RESET KB                	;RESET KB
 50)   0F6F DB 20       		 IN A, (DEVKBI)        ;RESET KB INTERRUPT  	;RESET KB INTERRUPT
 51)   0F71 CD 84 0F    		 CALL KBENABLE	;
 52)   0F74 CD 84 0F    		               CALL KBENABLE  	;
 53)   0F77 CD 4C 0F    		 CALL PS2NOKEYAV	;
 54)   0F7A AF          		 XOR A	;
 55)   0F7B 32 A7 FF    		 LD (LASTKEY),A   	;
 56)   0F7E C9          		 RET	;
 58)   0F7F 3E 02       		KBDISABLE: LD A, 2	;
 59)   0F81 D3 20       		 OUT (DEVKBI), A	;
 60)   0F83 C9          		 RET	;
 62)   0F84 AF          		KBENABLE: XOR A	;
 63)   0F85 D3 20       		 OUT (DEVKBI), A	;
 64)   0F87 C9          		 RET	;
 70)   0F88 F3          		NGETKEY: DI	;
 71)   0F89 3E 02       		 LD A,2	;
 72)   0F8B D3 20       		 OUT (DEVKBI), A 	;
 73)   0F8D DB 20       		 IN A, (DEVKBI)        ;GET KEY	;GET KEY
 75)   0F8F 4F          		 LD C, A	;
 76)   0F90 AF          		 XOR A	;
 77)   0F91 D3 20       		 OUT (DEVKBI), A       ;RESET FOR NEXT KEY	;RESET FOR NEXT KEY
 80)   0F93 D3 20       		 OUT (DEVKBI), A       ;ZERO COUNTER  	;ZERO COUNTER
 81)   0F95 D3 20       		 OUT (DEVKBI), A       ;ZERO COUNTER	;ZERO COUNTER
 83)   0F97 79          		 LD A, C	;
 84)   0F98 FB          		 EI        ;CLEAR INTERRUPT	;CLEAR INTERRUPT
 86)   0F99 06 1E       		 LD B,30	;
 87)   0F9B 10 FE       		AGME: DJNZ AGME  	;
 89)   0F9D CD 4C 0F    		 CALL PS2NOKEYAV       ;READY FOR NEXT KEY 	;READY FOR NEXT KEY
 90)   0FA0 C9          		 RET	;
 96)   0FA1 FE E1       		CHECKEXT:     CP $E1         ;BREAK KEY	;BREAK KEY
 97)   0FA3 C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
 98)   0FA4 FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
 99)   0FA6 C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
100)   0FA7 FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
101)   0FA9 C8          		 RET Z        ;JUST SAVE IT	;JUST SAVE IT
102)   0FAA FE AA       		 CP $AA        ;POST TEST KB OK	;POST TEST KB OK
103)   0FAC C8          		 RET Z	;
105)   0FAD 4F          		 LD C,A        ;SAVE KEY	;SAVE KEY
106)   0FAE 3A A7 FF    		 LD A,(LASTKEY)	;
107)   0FB1 FE E1       		 CP $E1	;
108)   0FB3 28 23       		 JR Z, GTBRK	;
109)   0FB5 FE F0       		 CP $F0	;
110)   0FB7 28 59       		 JR Z, GTREL	;
111)   0FB9 FE E0       		 CP $E0	;
112)   0FBB 28 21       		 JR Z, GTEXT	;
113)   0FBD 79          		 LD A,C	;
115)   0FBE FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
116)   0FC0 CC 3E 10    		 CALL Z, SHFTOG	;
117)   0FC3 FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
118)   0FC5 CC 3E 10    		 CALL Z, SHFTOG	;
119)   0FC8 FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
120)   0FCA CC 47 10    		 CALL Z, CTRTOG	;
121)   0FCD FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
122)   0FCF CC 50 10    		 CALL Z, ALTTOG	;
123)   0FD2 FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
124)   0FD4 CC 59 10    		 CALL Z, CAPSTOG	;
125)   0FD7 C9          		               RET	;
127)   0FD8 79          		GTBRK: LD A,C       ;$14 OR $F0	;$14 OR $F0
128)   0FD9 FE F0       		 CP $F0	;
129)   0FDB C8          		 RET Z  	;
130)   0FDC AF          		 XOR A        	;
131)   0FDD C9          		 RET	;
133)   0FDE 79          		GTEXT: LD A,C       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
134)   0FDF FE 6B       		 CP $6B         ;LEFT	;LEFT
135)   0FE1 C8          		 RET Z	;
136)   0FE2 FE 72       		 CP $72        ;DOWN	;DOWN
137)   0FE4 C8          		 RET Z	;
138)   0FE5 FE 74       		 CP $74        ;RIGHT	;RIGHT
139)   0FE7 C8          		 RET Z	;
140)   0FE8 FE 75       		 CP $75        ;UP	;UP
141)   0FEA C8          		 RET Z	;
142)   0FEB FE 70       		 CP $70        ;INSERT	;INSERT
143)   0FED C8          		 RET Z	;
144)   0FEE FE 6C       		 CP $6C        ;HOME	;HOME
145)   0FF0 C8          		 RET Z	;
146)   0FF1 FE 7D       		 CP $7D        ;PG UP	;PG UP
147)   0FF3 C8          		 RET Z	;
148)   0FF4 FE 7A       		 CP $7A        ;PG DN	;PG DN
149)   0FF6 C8          		 RET Z	;
150)   0FF7 FE 69       		 CP $69        ;END	;END
151)   0FF9 C8          		 RET Z	;
152)   0FFA FE 71       		 CP $71        ;DEL	;DEL
153)   0FFC C8          		 RET Z	;
154)   0FFD FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
155)   0FFF C8          		 RET Z	;
156)   1000 FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
157)   1002 C8          		 RET Z	;
158)   1003 FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
159)   1005 C8          		 RET Z	;
160)   1006 FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
161)   1008 C8          		 RET Z	;
162)   1009 FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
163)   100B C8          		 RET Z	;
164)   100C FE F0       		 CP $F0	;
165)   100E 20 00       		 JR NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY  	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
167)   1010 AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
168)   1011 C9          		 RET	;
171)   1012 79          		GTREL: LD A,C       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
172)   1013 FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
173)   1015 CC 2C 10    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
174)   1018 FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
175)   101A CC 32 10    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
176)   101D FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
177)   101F CC 38 10    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
178)   1022 FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
179)   1024 CC 2C 10    		 CALL Z, SHFRES       ; RESET SHIFT  	; RESET SHIFT
180)   1027 32 A7 FF    		 LD (LASTKEY),A         ; SET LAST KEY	; SET LAST KEY
181)   102A AF          		 XOR A         ; NO KEY  	; NO KEY
182)   102B C9          		 RET	;
184)   102C 21 B7 FE    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
185)   102F CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
186)   1031 C9          		 RET	;
188)   1032 21 B7 FE    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
189)   1035 CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
190)   1037 C9          		 RET	;
192)   1038 21 B7 FE    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
193)   103B CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
194)   103D C9          		 RET	;
196)   103E 21 B7 FE    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
197)   1041 3E 40       		 LD A, $40       ; MASK	; MASK
198)   1043 AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
199)   1044 77          		 LD (HL), A       ; SAVE	; SAVE
200)   1045 AF          		 XOR A         ; NO KEY	; NO KEY
201)   1046 C9          		 RET	;
203)   1047 21 B7 FE    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
204)   104A 3E 80       		 LD A, $80       ; MASK	; MASK
205)   104C AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
206)   104D 77          		 LD (HL), A       ; SAVE	; SAVE
207)   104E AF          		 XOR A         ; NO KEY	; NO KEY
208)   104F C9          		 RET	;
210)   1050 21 B7 FE    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
211)   1053 3E 20       		 LD A, $20	;
212)   1055 AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
213)   1056 77          		 LD (HL), A       ; SAVE	; SAVE
214)   1057 AF          		 XOR A         ; NO KEY	; NO KEY
215)   1058 C9          		 RET	;
217)   1059 21 B7 FE    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
218)   105C 3E 10       		 LD A, $10	;
219)   105E AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
220)   105F 77          		 LD (HL), A       ; SAVE	; SAVE
221)   1060 AF          		 XOR A         ; NO KEY	; NO KEY
222)   1061 C9          		 RET	;
226)   1062 FE AA       		@PS2LOK: CP $AA	;
227)   1064 38 02       		 JR C,DOTRANS       ;ONLY 0-170	;ONLY 0-170
229)   1066 AF          		 XOR A	;
230)   1067 C9          		 RET	;
231)   1068 21 9E 10    		DOTRANS: LD HL, PS2TAB1      ;UNSHIFTED	;UNSHIFTED
232)   106B 57          		 LD D,A        ;SAVE KEY CODE	;SAVE KEY CODE
233)   106C CD 98 10    		 CALL PLK1       ;GET CHAR NO SHIFT NO CAPS	;GET CHAR NO SHIFT NO CAPS
234)   106F 47          		 LD B,A        ;SAVE CHAR	;SAVE CHAR
235)   1070 FE 61       		 CP 'a'	;
236)   1072 38 04       		 JR C,PS2CHKCAPS	;
237)   1074 FE 7B       		PS2SGT: CP 'z'+1  	;
238)   1076 38 09       		 JR C, PS2CPSF;ITS A LETTER CAPS AND SHIFT MATTERS	;ITS A LETTER CAPS AND SHIFT MATTERS
240)   1078 3A B7 FE    		PS2CHKCAPS: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT  	; GET KEYBFLAGS ON A SHIFT
241)   107B CB 77       		 BIT 6, A	;
242)   107D 78          		 LD A,B	;
243)   107E C8          		 RET Z        ;IF NO SHIFT RETURN TAB1 CHAR	;IF NO SHIFT RETURN TAB1 CHAR
245)   107F 18 0F       		 JR PS2SHIFT	;
247)   1081 3A B7 FE    		PS2CPSF: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
248)   1084 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
249)   1085 CB 1F       		 RR A	;
250)   1087 CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
251)   1089 A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
252)   108A CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED      	;CHECK IF BIT 4 IS 0 = UNSHIFTED
253)   108C 20 02       		 JR NZ,PS2SHIFT	;
257)   108E 78          		 LD A,B    	;
258)   108F C9          		 RET	;
259)   1090 7A          		PS2SHIFT: LD A, D       ;RESTORE A KEYCODE	;RESTORE A KEYCODE
260)   1091 21 48 11    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
261)   1094 CD 98 10    		 CALL PLK1       ;GET CHAR	;GET CHAR
262)   1097 C9          		 RET	;
263)   1098 06 00       		PLK1: LD B, 0	;
264)   109A 4F          		 LD C, A	;
265)   109B 09          		 ADD HL, BC	;
266)   109C 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
267)   109D C9          		 RET	;
271)   109E 00 00 00 A5 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
271)   10A2 00 00 00 00 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
271)   10A6 00 00       		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
272)   10A8 A8 A6 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
272)   10AC 60 00 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
272)   10B0 00 00       		 DB 168,166,0,0,'`',0,0,0,0,0	;
273)   10B2 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
273)   10B6 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
273)   10BA 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
274)   10BC 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
274)   10C0 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
274)   10C4 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
275)   10C6 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
275)   10CA 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
275)   10CE 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
276)   10D0 62 68 67 79 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
276)   10D4 36 00 00 2C 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
276)   10D8 6D 6A       		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
277)   10DA 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
277)   10DE 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
277)   10E2 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
278)   10E4 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
278)   10E8 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
278)   10EC 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
279)   10EE 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
279)   10F2 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
279)   10F6 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
280)   10F8 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
280)   10FC 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
280)   1100 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
281)   1102 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
281)   1106 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
281)   110A 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
282)   110C 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
282)   1110 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
282)   1114 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
283)   1116 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
283)   111A 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
283)   111E 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
284)   1120 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
284)   1124 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
284)   1128 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
285)   112A 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
285)   112E 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
285)   1132 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
286)   1134 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
286)   1138 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
286)   113C 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
287)   113E 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
287)   1142 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
287)   1146 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
290)   1148 00 00 00 A5 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
290)   114C 00 00 00 00 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
290)   1150 00 00       		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
291)   1152 A8 A6 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
291)   1156 7E 00 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
291)   115A 00 00       		 DB 168,166,0,0,'~',0,0,0,0,0	;
292)   115C 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
292)   1160 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
292)   1164 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
293)   1166 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
293)   116A 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
293)   116E 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
294)   1170 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
294)   1174 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
294)   1178 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
295)   117A 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
295)   117E 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
295)   1182 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
296)   1184 55 26 2A 00 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
296)   1188 00 3C 4B 49 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
296)   118C 4F 29       		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
297)   118E 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
297)   1192 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
297)   1196 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
298)   1198 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
298)   119C 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
298)   11A0 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
299)   11A2 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
299)   11A6 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
299)   11AA 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
300)   11AC 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
300)   11B0 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
300)   11B4 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
301)   11B6 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
301)   11BA 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
301)   11BE 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
302)   11C0 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
302)   11C4 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
302)   11C8 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
303)   11CA 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
303)   11CE 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
303)   11D2 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
304)   11D4 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
304)   11D8 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
304)   11DC 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
305)   11DE 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
305)   11E2 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
305)   11E6 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
306)   11E8 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
306)   11EC 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
306)   11F0 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
  3)   11F2 	            		INT376CMD EQU DEV376+1	;
  4)   11F2 	            		INT376DAT EQU DEV376	;
 89)   11F2 CD D0 12    		CH376_GETDATA: CALL CH376_DATARD	;
 90)   11F5 FE 00       		 CP 0	;
 91)   11F7 C8          		 RET Z   ;NO DATA AVAILABLE	;NO DATA AVAILABLE
 98)   11F8 F5          		               PUSH AF	;
 99)   11F9 11 00 FF    		 LD DE,USBBUF	;
100)   11FC 47          		 LD B,A	;
101)   11FD CD D0 12    		UDC_NXT1: CALL CH376_DATARD	;
103)   1200 12          		 LD (DE),A	;
104)   1201 13          		 INC DE	;
108)   1202 10 F9       		 DJNZ UDC_NXT1 	;
109)   1204 F1          		               POP AF	;
110)   1205 C9          		 RET	;
113)   1206 F5          		DISKERROR: PUSH AF	;
114)   1207 CD BB 0E    		 CALL RS_MESG	;
115)   120A 46 41 54 41 		 DEFM "FATAL ERROR:" 	;
115)   120E 4C 20 45 52 		 DEFM "FATAL ERROR:" 	;
115)   1212 52 4F 52 3A 		 DEFM "FATAL ERROR:" 	;
116)   1216 00          		 DB 0  	;
117)   1217 F1          		 POP AF	;
118)   1218 CD B3 31    		 CALL PRINTNUM	;
119)   121B 21 27 12    		 LD HL,ERR_PART	;
120)   121E FE 92       		 CP ERR_TYPE_ERROR	;
121)   1220 28 01       		 JR Z,PRNMES	;
122)   1222 C9          		 RET	;
123)   1223 CD B1 0E    		PRNMES: CALL RS_TXT 	;
124)   1226 C9          		 RET	;
126)   1227 50 41 52 54 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
126)   122B 49 54 49 4F 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
126)   122F 4E 2E 4E 4F 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
126)   1233 54 2E 53 55 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
126)   1237 50 50 4F 52 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
126)   123B 54 45 44 21 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
126)   123F 21 21       		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   1241 0A 0D 00    		 DB 10,13,0	;
136)   1244 CD 54 12    		CH376_WTCMDEND: CALL CH376_WAITINT	;
137)   1247 C0          		               RET NZ	;
138)   1248 D8          		 RET C	;
139)   1249 AF          		 XOR A	;
140)   124A CD 73 12    		 CALL CH376_GETSTAT	;
141)   124D FE 14       		 CP USB_INT_SUCCESS	;
142)   124F C8          		 RET Z	;
153)   1250 06 02       		 LD B,2	;
154)   1252 05          		 DEC B  ;NZ FLAG	;NZ FLAG
155)   1253 C9          		 RET	;
161)   1254 AF          		CH376_WAITINT: XOR A	;
162)   1255 01 32 00    		 LD BC,50	;
163)   1258 CD C1 12    		C3AGN2: CALL CH376_INSTAT	;
164)   125B CB 7F       		 BIT 7,A	;
165)   125D C8          		 RET Z	;
166)   125E F5          		 PUSH AF	;
167)   125F C5          		 PUSH BC	;
168)   1260 06 14       		 LD B,20	;
169)   1262 CD 4E 2F    		 CALL DELAYMICRO	;
170)   1265 C1          		 POP BC	;
171)   1266 F1          		 POP AF	;
172)   1267 0B          		 DEC BC	;
173)   1268 5F          		 LD E,A	;
174)   1269 78          		 LD A,B	;
175)   126A B1          		 OR C	;
176)   126B 7B          		 LD A,E	;
177)   126C 20 EA       		 JR NZ, C3AGN2  	;
182)   126E 37          		 SCF ;TIMEOUT       	;TIMEOUT
183)   126F 06 02       		 LD B,2	;
184)   1271 05          		 DEC B  ;NZ FLAG	;NZ FLAG
185)   1272 C9          		 RET	;
187)   1273 3E 22       		CH376_GETSTAT: LD A,CMD_GET_STATUS	;
188)   1275 CD B5 12    		 CALL CH376_COMMD	;
189)   1278 CD D0 12    		 CALL CH376_DATARD	;
190)   127B C9          		 RET	;
198)   127C 01 C4 09    		CH376_CHOK: LD BC,2500	;
199)   127F CD C1 12    		C3AGN: CALL CH376_INSTAT	;
200)   1282 CB 67       		 BIT 4,A   ;CHECK BUSY	;CHECK BUSY
201)   1284 C8          		 RET Z   	;
202)   1285 C5          		 PUSH BC	;
203)   1286 F5          		 PUSH AF	;
204)   1287 06 32       		 LD B,50	;
205)   1289 CD 4E 2F    		 CALL DELAYMICRO	;
206)   128C F1          		 POP AF	;
207)   128D C1          		 POP BC	;
208)   128E 0B          		 DEC BC	;
209)   128F 5F          		 LD E,A	;
210)   1290 78          		 LD A,B	;
211)   1291 B1          		 OR C	;
212)   1292 7B          		 LD A,E	;
213)   1293 20 EA       		 JR NZ,C3AGN	;
214)   1295 F5          		 PUSH AF  	;
215)   1296 CD B3 31    		 CALL PRINTNUM  	;
216)   1299 F1          		 POP AF	;
217)   129A CD BB 0E    		 CALL RS_MESG	;
218)   129D 2A 2A 2A 43 		 DEFM "***CMD TIMEOUT***"	;
218)   12A1 4D 44 20 54 		 DEFM "***CMD TIMEOUT***"	;
218)   12A5 49 4D 45 4F 		 DEFM "***CMD TIMEOUT***"	;
218)   12A9 55 54 2A 2A 		 DEFM "***CMD TIMEOUT***"	;
218)   12AD 2A          		 DEFM "***CMD TIMEOUT***"	;
219)   12AE 0A 0D 00    		 DB 10,13,0       	;
220)   12B1 06 02       		 LD B,2	;
221)   12B3 05          		 DEC B  ;NZ FLAG	;NZ FLAG
222)   12B4 C9          		 RET	;
228)   12B5 D3 31       		CH376_COMMD: OUT (INT376CMD),A	;
229)   12B7 C5          		 PUSH BC	;
230)   12B8 D5          		 PUSH DE	;
231)   12B9 E5          		 PUSH HL	;
232)   12BA CD 7C 12    		 CALL CH376_CHOK  ;CHECK NOT BUSY	;CHECK NOT BUSY
233)   12BD E1          		 POP HL	;
234)   12BE D1          		 POP DE	;
235)   12BF C1          		 POP BC	;
236)   12C0 C9          		 RET	;
238)   12C1 DB 31       		CH376_INSTAT: IN A,(INT376CMD)	;
240)   12C3 C9          		 RET	;
245)   12C4 D3 30       		CH376_DATAWR: OUT (INT376DAT),A 	;
246)   12C6 D5          		 PUSH DE	;
247)   12C7 E5          		 PUSH HL 	;
248)   12C8 C5          		 PUSH BC	;
249)   12C9 CD 7C 12    		 CALL CH376_CHOK  ;CHECK NOT BUSY	;CHECK NOT BUSY
250)   12CC C1          		 POP BC	;
251)   12CD E1          		 POP HL	;
252)   12CE D1          		 POP DE	;
253)   12CF C9          		 RET	;
256)   12D0 DB 30       		CH376_DATARD: IN A,(INT376DAT)	;
261)   12D2 C9          		 RET	;
264)   12D3 3E 01       		CH376_VERSION: LD A,CMD_GET_IC_VER 	;
265)   12D5 CD B5 12    		 CALL CH376_COMMD	;
266)   12D8 CD D0 12    		 CALL CH376_DATARD	;
267)   12DB E6 0F       		 AND 00001111B	;
268)   12DD C9          		               RET	;
270)   12DE 3E 05       		CH376_INIT:    LD A,CMD_RESET_ALL	;
271)   12E0 CD B5 12    		 CALL CH376_COMMD  	;
272)   12E3 3E 06       		 LD A,CMD_CHECK_EXIST 	;
273)   12E5 CD B5 12    		 CALL CH376_COMMD	;
274)   12E8 3E 57       		 LD A,87	;
275)   12EA CD C4 12    		 CALL CH376_DATAWR	;
276)   12ED CD D0 12    		 CALL CH376_DATARD	;
277)   12F0 FE A8       		 CP 255 - 87 	;
278)   12F2 C9          		               RET               	;
282)   12F3 F5          		CH376_SETUSB: PUSH AF	;
283)   12F4 3E 15       		               LD A,CMD_SETUSB_MODE	;
284)   12F6 CD B5 12    		 CALL CH376_COMMD	;
285)   12F9 F1          		               POP AF	;
286)   12FA CD C4 12    		 CALL CH376_DATAWR	;
288)   12FD 06 14       		 LD B,20	;
289)   12FF CD 4E 2F    		 CALL DELAYMICRO     ;WAIT A BIT	;WAIT A BIT
294)   1302 CD 73 12    		 CALL CH376_GETSTAT	;
295)   1305 FE 15       		 CP USB_INT_CONNECT	;
296)   1307 C8          		 RET Z	;
298)   1308 F5          		 PUSH AF	;
299)   1309 CD BB 0E    		 CALL CH376_ERROR	;
300)   130C 45 52 52 3A 		 DEFM "ERR: SETUSBMODE"	;
300)   1310 20 53 45 54 		 DEFM "ERR: SETUSBMODE"	;
300)   1314 55 53 42 4D 		 DEFM "ERR: SETUSBMODE"	;
300)   1318 4F 44 45    		 DEFM "ERR: SETUSBMODE"	;
301)   131B 0A 0D 00    		 DB 10,13,0	;
302)   131E F1          		 POP AF	;
303)   131F CD B3 31    		 CALL PRINTNUM	;
304)   1322 C9          		               RET	;
309)   1323 3E 30       		CH376_CONNECT: LD A, CMD_DISK_CONNECT	;
310)   1325 CD B5 12    		     CALL CH376_COMMD	;
311)   1328 CD 44 12    		 CALL CH376_WTCMDEND	;
313)   132B D8          		 RET C ;TIMEOUT	;TIMEOUT
314)   132C C8          		 RET Z ;CONNECT OK	;CONNECT OK
319)   132D C9          		 RET ;NZ HERE	;NZ HERE
329)   132E 3E 31       		CH376_MOUNT:   LD A,CMD_DISK_MOUNT  	;
330)   1330 CD B5 12    		 CALL CH376_COMMD	;
331)   1333 CD 44 12    		 CALL CH376_WTCMDEND  	;
332)   1336 C9          		 RET	;
337)   1337 06 0A       		CH376_MOUNTDEV:   LD B,10  ;TRY TO MOUNT 10 TIMES	;TRY TO MOUNT 10 TIMES
338)   1339 C5          		CM_AGN1: PUSH BC	;
339)   133A CD F3 12    		 CALL CH376_SETUSB	;
340)   133D 20 10       		 JR NZ,CM_ERROR	;
341)   133F CD 23 13    		 CALL CH376_CONNECT	;
342)   1342 20 0B       		 JR NZ,CM_ERROR	;
343)   1344 3E 31       		        LD A,CMD_DISK_MOUNT  	;
344)   1346 CD B5 12    		 CALL CH376_COMMD	;
345)   1349 CD 44 12    		 CALL CH376_WTCMDEND	;
346)   134C C1          		 POP BC	;
347)   134D C8          		 RET Z	;
348)   134E C5          		 PUSH BC	;
349)   134F 06 64       		CM_ERROR: LD B,100	;
350)   1351 CD 63 2F    		 CALL DELAYMILI     ;WAIT A BIT	;WAIT A BIT
351)   1354 C1          		 POP BC	;
352)   1355 10 E2       		 DJNZ CM_AGN1  	;
353)   1357 06 02       		 LD B,2	;
354)   1359 05          		 DEC B  ;NZ  	;NZ
355)   135A F5          		 PUSH AF	;
356)   135B CD BB 0E    		 CALL CH376_ERROR	;
357)   135E 45 52 52 3A 		 DEFM "ERR: MOUNT DISK"	;
357)   1362 20 4D 4F 55 		 DEFM "ERR: MOUNT DISK"	;
357)   1366 4E 54 20 44 		 DEFM "ERR: MOUNT DISK"	;
357)   136A 49 53 4B    		 DEFM "ERR: MOUNT DISK"	;
358)   136D 0A 0D 00    		 DB 10,13,0	;
359)   1370 F1          		     POP AF	;
360)   1371 C9          		               RET	;
363)   1372 7E          		CH376_WRSTRING: LD A,(HL)	;
364)   1373 F5          		 PUSH AF	;
365)   1374 E5          		 PUSH HL	;
366)   1375 CD A2 0E    		 CALL RS_TX	;
367)   1378 E1          		 POP HL	;
368)   1379 F1          		 POP AF	;
369)   137A CD C4 12    		 CALL CH376_DATAWR	;
370)   137D C0          		 RET NZ	;
371)   137E 7E          		 LD A,(HL)	;
372)   137F FE 00       		 CP 0	;
373)   1381 C8          		 RET Z	;
374)   1382 23          		 INC HL	;
375)   1383 18 ED       		 JR CH376_WRSTRING	;
 31)   1385 	            		@CH376_ERROR EQU RS_MESG	;
 41)   1385 57          		STRG_INIT: LD D,A	;
 42)   1386 AF          		 XOR A  	;
 43)   1387 32 CC FF    		 LD (STRG_STAT),A  ;NOT CONNECTED, NOT EXISTS	;NOT CONNECTED, NOT EXISTS
 44)   138A CD DE 12    		 CALL CH376_INIT	;
 45)   138D 20 06       		 JR NZ,INIERR	;
 46)   138F 7A          		 LD A,D   ;SELECT USB DEVICE 3 FOR SDCARD, 6 FOR FLASH	;SELECT USB DEVICE 3 FOR SDCARD, 6 FOR FLASH
 47)   1390 CD F3 12    		 CALL CH376_SETUSB	;
 48)   1393 28 03       		 JR Z,INIOK	;
 49)   1395 3E 00       		INIERR: LD A,0  	;
 50)   1397 C9          		 RET	;
 51)   1398 CD D3 12    		INIOK: CALL CH376_VERSION	;
 52)   139B BF          		 CP A  ;SET ZF	;SET ZF
 53)   139C 3E 80       		 LD A, $80  ;BIT 7 MEANS EXISTS	;BIT 7 MEANS EXISTS
 54)   139E 32 CC FF    		 LD (STRG_STAT),A  ;	;
 55)   13A1 C9          		 RET	;
 58)   13A2 3A CC FF    		STRG_EXISTS: LD A,(STRG_STAT)	;
 59)   13A5 CB 7F       		 BIT 7,A	;
 60)   13A7 C9          		 RET	;
 66)   13A8 CD A2 13    		STRG_CHECK: CALL STRG_EXISTS	;
 67)   13AB 37          		 SCF	;
 68)   13AC C8          		 RET Z    ;Z MEANS NOT EXISTS	;Z MEANS NOT EXISTS
 69)   13AD 06 05       		 LD B,5	;
 70)   13AF CD 23 13    		SC_AGN1: CALL CH376_CONNECT 	;
 71)   13B2 28 06       		 JR Z,DOCON	;
 72)   13B4 30 1C       		 JR NC,DODISC	;
 73)   13B6 10 F7       		 DJNZ SC_AGN1    	;
 77)   13B8 AF          		 XOR A   	;
 78)   13B9 C9          		 RET   ;TIMEOUT	;TIMEOUT
 80)   13BA AF          		DOCON: XOR A    ;CLCF	;CLCF
 81)   13BB 3A CC FF    		 LD A,(STRG_STAT)	;
 82)   13BE CB 47       		 BIT 0,A	;
 83)   13C0 C0          		 RET NZ    ;ALREADY MOUNTED THE DRIVE	;ALREADY MOUNTED THE DRIVE
 87)   13C1 CD 2E 13    		 CALL CH376_MOUNT   ;MOUNT THE DRIVE	;MOUNT THE DRIVE
 88)   13C4 20 0C       		 JR NZ, DONOMNT	;
 92)   13C6 3A CC FF    		 LD A,(STRG_STAT)	;
 93)   13C9 CB C7       		 SET 0,A	;
 94)   13CB 32 CC FF    		 LD (STRG_STAT),A	;
 95)   13CE AF          		 XOR A    ;CLEAR CARRY FLAG MEANS WE ARE OK	;CLEAR CARRY FLAG MEANS WE ARE OK
 96)   13CF 3E 01       		 LD A,1    ;A=1 IS JUST CONNECTED	;A=1 IS JUST CONNECTED
 97)   13D1 C9          		 RET	;
105)   13D2 AF          		 XOR A 	;
106)   13D3 3A CC FF    		 LD A,(STRG_STAT)  	;
107)   13D6 CB 47       		 BIT 0,A	;
108)   13D8 C8          		 RET Z    ;ALREADY DISCONNECTED	;ALREADY DISCONNECTED
109)   13D9 CB 87       		 RES 0,A    ;SET BIT 0 TO 0=DISCONNECTED	;SET BIT 0 TO 0=DISCONNECTED
110)   13DB 32 CC FF    		 LD (STRG_STAT),A  	;
111)   13DE 3E 02       		 LD A,2    ;A=2 IS JUST DISCONNECTED	;A=2 IS JUST DISCONNECTED
112)   13E0 C9          		 RET	;
118)   13E1 CD 37 13    		STRG_OPENCRD:  CALL CH376_MOUNTDEV	;
119)   13E4 C9          		 RET 	;
122)   13E5 C9          		STRG_DIRLIST: RET	;
123)   13E6 C9          		STRG_DIRCHG: RET	;
124)   13E7 C9          		STRG_TPFILE: RET	;
125)   13E8 C9          		STRG_GETPOS: RET	;
126)   13E9 C9          		STRG_SETPOS: RET	;
127)   13EA C9          		STRG_GETSIZE: RET	;
128)   13EB C9          		STRG_GETEOF: RET	;
135)   13EC 3E 27       		STRG_PRDRVINFO: LD A,CMD_RDUSB_DATA0	;
136)   13EE CD B5 12    		 CALL CH376_COMMD	;
137)   13F1 CD F2 11    		 CALL CH376_GETDATA	;
138)   13F4 F5          		 PUSH AF	;
139)   13F5 D6 08       		 SUB 8  	;
140)   13F7 47          		 LD B,A	;
141)   13F8 F1          		 POP AF   	;
142)   13F9 21 08 FF    		 LD HL,USBBUF+8  ;SKIP 8 BYTES	;SKIP 8 BYTES
143)   13FC 7E          		PDI_NXT: LD A,(HL)	;
144)   13FD E5          		 PUSH HL	;
145)   13FE C5          		 PUSH BC	;
146)   13FF CD 08 05    		 CALL OS_PRINTCHAR	;
147)   1402 C1          		 POP BC	;
148)   1403 E1          		 POP HL	;
149)   1404 23          		 INC HL	;
150)   1405 10 F5       		 DJNZ PDI_NXT  	;
151)   1407 CD 08 0F    		 CALL RS_NEWLINE	;
153)   140A 3E 3F       		 LD A,CMD_DISK_QUERY   	;
154)   140C CD B5 12    		 CALL CH376_COMMD	;
155)   140F CD 44 12    		 CALL CH376_WTCMDEND	;
156)   1412 C0          		 RET NZ	;
157)   1413 3E 27       		 LD A,CMD_RDUSB_DATA0	;
158)   1415 CD B5 12    		 CALL CH376_COMMD  	;
159)   1418 CD F2 11    		 CALL CH376_GETDATA	;
161)   141B DD 21 00 FF 		 LD IX,USBBUF 	;
162)   141F DD E5       		 PUSH IX   	;
163)   1421 DD 56 03    		 LD D,(IX+3)	;
164)   1424 DD 5E 02    		 LD E,(IX+2)	;
165)   1427 DD 66 01    		 LD H,(IX+1)	;
166)   142A DD 6E 00    		 LD L,(IX+0)	;
167)   142D CD 2A 30    		 CALL B2D32    ;DE:HL RES ON B2DBUF	;DE:HL RES ON B2DBUF
168)   1430 21 7F FF    		 LD HL,B2DBUF	;
169)   1433 CD BA 30    		 CALL SKIPSPC	;
170)   1436 CD 22 05    		 CALL OS_PRINTTEXT	;
171)   1439 CD 2E 05    		 CALL OS_PRINTMSG	;
172)   143C 20 53 45 43 		 DEFM " SECTORS"	;
172)   1440 54 4F 52 53 		 DEFM " SECTORS"	;
173)   1444 0A 0D 00    		 DB 10,13 0	;
174)   1447 DD E1       		 POP IX	;
176)   1449 DD E5       		 PUSH IX     	;
177)   144B DD 56 07    		 LD D,(IX+7)	;
178)   144E DD 5E 06    		 LD E,(IX+6)	;
179)   1451 DD 66 05    		 LD H,(IX+5)	;
180)   1454 DD 6E 04    		 LD L,(IX+4)  	;
181)   1457 CD 2A 30    		 CALL B2D32  ;DE:HL RES ON B2DBUF	;DE:HL RES ON B2DBUF
182)   145A 21 7F FF    		 LD HL,B2DBUF	;
183)   145D CD BA 30    		 CALL SKIPSPC	;
184)   1460 CD 22 05    		 CALL OS_PRINTTEXT	;
185)   1463 CD 2E 05    		 CALL OS_PRINTMSG	;
186)   1466 20 53 45 43 		 DEFM " SECTORS FREE   "	;
186)   146A 54 4F 52 53 		 DEFM " SECTORS FREE   "	;
186)   146E 20 46 52 45 		 DEFM " SECTORS FREE   "	;
186)   1472 45 20 20 20 		 DEFM " SECTORS FREE   "	;
187)   1476 0A 0D 00    		 DB 10,13,0   	;
188)   1479 DD E1       		 POP IX	;
190)   147B DD 7E 08    		FILESYSTEM: LD A,(IX+8) ;1-FAT12,2-FAT16,3-FAT32	;1-FAT12,2-FAT16,3-FAT32
191)   147E 3D          		 DEC A	;
192)   147F 28 08       		 JR Z,PDI_NXT0	;
193)   1481 3D          		 DEC A	;
194)   1482 28 18       		 JR Z,PDI_NXT1	;
195)   1484 3D          		 DEC A	;
196)   1485 28 28       		 JR Z,PDI_NXT2	;
197)   1487 18 39       		 JR PDI_NXT3	;
199)   1489 CD 2E 05    		PDI_NXT0: CALL OS_PRINTMSG	;
200)   148C 46 53 20 49 		 DEFM "FS IS FAT-12"	;
200)   1490 53 20 46 41 		 DEFM "FS IS FAT-12"	;
200)   1494 54 2D 31 32 		 DEFM "FS IS FAT-12"	;
201)   1498 0A 0D 00    		 DB 10,13,0	;
202)   149B C9          		 RET	;
203)   149C CD 2E 05    		PDI_NXT1: CALL OS_PRINTMSG	;
204)   149F 46 53 20 49 		 DEFM "FS IS FAT-16"	;
204)   14A3 53 20 46 41 		 DEFM "FS IS FAT-16"	;
204)   14A7 54 2D 31 36 		 DEFM "FS IS FAT-16"	;
205)   14AB 0A 0D 00    		 DB 10,13,0	;
206)   14AE C9          		 RET	;
207)   14AF CD 2E 05    		PDI_NXT2: CALL OS_PRINTMSG	;
208)   14B2 46 53 20 49 		 DEFM "FS IS FAT-32"	;
208)   14B6 53 20 46 41 		 DEFM "FS IS FAT-32"	;
208)   14BA 54 2D 33 32 		 DEFM "FS IS FAT-32"	;
209)   14BE 0A 0D 00    		 DB 10,13,0	;
210)   14C1 C9          		 RET	;
211)   14C2 CD 2E 05    		PDI_NXT3: CALL OS_PRINTMSG	;
212)   14C5 55 4E 4B 4E 		 DEFM "UNKNOWN FS"	;
212)   14C9 4F 57 4E 20 		 DEFM "UNKNOWN FS"	;
212)   14CD 46 53       		 DEFM "UNKNOWN FS"	;
213)   14CF 0A 0D 00    		 DB 10,13,0	;
214)   14D2 DD 7E 08    		 LD A,(IX+8)  ;TO BE PRINTED MAYBE	;TO BE PRINTED MAYBE
215)   14D5 C9          		 RET	;
220)   14D6 F5          		STRG_OPNFILE: PUSH AF	;
221)   14D7 3E 2F       		 LD A, CMD_SETFILENAME	;
222)   14D9 CD B5 12    		     CALL CH376_COMMD	;
223)   14DC 21 D3 FE    		 LD HL, STRGBUFF	;
224)   14DF CD 72 13    		     CALL CH376_WRSTRING	;
225)   14E2 28 1E       		 JR Z,OF_WSOK	;
226)   14E4 F1          		 POP AF	;
227)   14E5 CD 2E 05    		 CALL OS_PRINTMSG	;
228)   14E8 45 52 52 4F 		 DEFM "ERROR SETTING FILENAME"	;
228)   14EC 52 20 53 45 		 DEFM "ERROR SETTING FILENAME"	;
228)   14F0 54 54 49 4E 		 DEFM "ERROR SETTING FILENAME"	;
228)   14F4 47 20 46 49 		 DEFM "ERROR SETTING FILENAME"	;
228)   14F8 4C 45 4E 41 		 DEFM "ERROR SETTING FILENAME"	;
228)   14FC 4D 45       		 DEFM "ERROR SETTING FILENAME"	;
229)   14FE 0A 0D 00    		 DB 10,13,0  	;
230)   1501 C9          		 RET	;
231)   1502 F1          		OF_WSOK: POP AF	;
235)   1503 B7          		 OR A  ;0 READ	;0 READ
236)   1504 28 1F       		 JR Z,OF_OPEN	;
237)   1506 D6 01       		 SUB 1  ;1 WRITE	;1 WRITE
238)   1508 28 1B       		 JR Z,OF_OPEN	;
239)   150A D6 01       		 SUB 1  ;2 READ/WRITE	;2 READ/WRITE
240)   150C 28 17       		 JR Z,OF_OPEN	;
246)   150E CD 2E 05    		OF_CREATE: CALL OS_PRINTMSG	;
247)   1511 0A 0D       		 DB 10,13	;
248)   1513 43 52 45 41 		 DEFM "CREATING..."	;
248)   1517 54 49 4E 47 		 DEFM "CREATING..."	;
248)   151B 2E 2E 2E    		 DEFM "CREATING..."	;
249)   151E 0A 0D 00    		 DB 10,13,0    	;
250)   1521 3E 34       		 LD A, CMD_FILE_CREATE  	;
251)   1523 18 14       		 JR OF_EXEC	;
252)   1525 CD 2E 05    		OF_OPEN: CALL OS_PRINTMSG	;
253)   1528 0A 0D       		 DB 10,13	;
254)   152A 4F 50 45 4E 		 DEFM "OPENING..."	;
254)   152E 49 4E 47 2E 		 DEFM "OPENING..."	;
254)   1532 2E 2E       		 DEFM "OPENING..."	;
255)   1534 0A 0D 00    		 DB 10,13,0 	;
256)   1537 3E 32       		 LD A, CMD_FILE_OPEN	;
260)   1539 CD B5 12    		 CALL CH376_COMMD	;
261)   153C CD 44 12    		 CALL CH376_WTCMDEND	;
262)   153F C9          		 RET	;
264)   1540 3E 36       		STRG_CLSFILE: LD A, CMD_FILE_CLOSE	;
265)   1542 CD B5 12    		     CALL CH376_COMMD	;
266)   1545 3E 01       		     LD A, 1                             ; 1 = update file size if necessary	; 1 = update file size if necessary
267)   1547 CD C4 12    		     CALL CH376_DATAWR	;
268)   154A CD 44 12    		     CALL CH376_WTCMDEND	;
269)   154D C9          		     RET	;
275)   154E D5          		STRG_BLKREAD: PUSH DE	;
276)   154F 3E 3A       		 LD A, CMD_BYTE_READ	;
277)   1551 CD B5 12    		     CALL CH376_COMMD	;
278)   1554 79          		     LD A, C                           ; BYTES REQUEST ON BC	; BYTES REQUEST ON BC
279)   1555 CD C4 12    		     CALL CH376_DATAWR	;
280)   1558 78          		     LD A, B	;
281)   1559 CD C4 12    		     CALL CH376_DATAWR    	;
282)   155C CD 2E 05    		 CALL OS_PRINTMSG	;
283)   155F 42 4C 4F 43 		 DEFM "BLOCK READING"	;
283)   1563 4B 20 52 45 		 DEFM "BLOCK READING"	;
283)   1567 41 44 49 4E 		 DEFM "BLOCK READING"	;
283)   156B 47          		 DEFM "BLOCK READING"	;
284)   156C 0A 0D 00    		 DB 10,13,0	;
285)   156F D1          		 POP DE	;
286)   1570 21 00 00    		 LD HL,0      ;BYTE RECEIVE COUNTER	;BYTE RECEIVE COUNTER
287)   1573 E5          		STBR_DOREST: PUSH HL	;
288)   1574 D5          		 PUSH DE	;
289)   1575 CD 44 12    		 CALL CH376_WTCMDEND	;
290)   1578 D1          		 POP DE	;
291)   1579 E1          		 POP HL	;
292)   157A 28 1C       		 JR Z, FR_DONE   ;Z=NO MORE OR CANNOT READ	;Z=NO MORE OR CANNOT READ
293)   157C FE 1D       		 CP USB_INT_DISK_READ                    	;
294)   157E 20 32       		     JR NZ, FR_ERROR	;
296)   1580 3E 27       		 LD A,CMD_RDUSB_DATA0	;
297)   1582 CD B5 12    		 CALL CH376_COMMD 	;
298)   1585 CD D0 12    		 CALL CH376_DATARD  ;A= BYTES TO READ TO BUFFER	;A= BYTES TO READ TO BUFFER
299)   1588 47          		 LD B,A	;
312)   1589 CD D0 12    		STBR_NXT1: CALL CH376_DATARD ;READ THE BYTES TO BUFFER	;READ THE BYTES TO BUFFER
313)   158C 12          		 LD (DE),A	;
314)   158D 13          		 INC DE	;
315)   158E 23          		 INC HL    ;TOTAL BYTES READ COUNTER	;TOTAL BYTES READ COUNTER
316)   158F 10 F8       		 DJNZ STBR_NXT1  	;
317)   1591 3E 3B       		 LD A, CMD_BYTE_RD_GO 	;
318)   1593 CD B5 12    		 CALL CH376_COMMD 	;
319)   1596 18 DB       		 JR STBR_DOREST	;
320)   1598 E5          		FR_DONE: PUSH HL	;
321)   1599 CD 2E 05    		 CALL OS_PRINTMSG	;
322)   159C 52 45 41 44 		 DEFM "READING DONE!!! "	;
322)   15A0 49 4E 47 20 		 DEFM "READING DONE!!! "	;
322)   15A4 44 4F 4E 45 		 DEFM "READING DONE!!! "	;
322)   15A8 21 21 21 20 		 DEFM "READING DONE!!! "	;
323)   15AC 00          		 DB 0 	;
324)   15AD E1          		 POP HL	;
325)   15AE 44          		 LD B,H	;
326)   15AF 4D          		 LD C,L	;
327)   15B0 B7          		 OR A	;
328)   15B1 C9          		 RET	;
329)   15B2 F5          		FR_ERROR: PUSH AF	;
330)   15B3 CD 2E 05    		 CALL OS_PRINTMSG	;
331)   15B6 45 52 52 4F 		 DEFM "ERROR READING BLOCK!!! "	;
331)   15BA 52 20 52 45 		 DEFM "ERROR READING BLOCK!!! "	;
331)   15BE 41 44 49 4E 		 DEFM "ERROR READING BLOCK!!! "	;
331)   15C2 47 20 42 4C 		 DEFM "ERROR READING BLOCK!!! "	;
331)   15C6 4F 43 4B 21 		 DEFM "ERROR READING BLOCK!!! "	;
331)   15CA 21 21 20    		 DEFM "ERROR READING BLOCK!!! "	;
332)   15CD 00          		 DB 0 	;
333)   15CE F1          		 POP AF	;
334)   15CF 06 02       		 LD B,2	;
335)   15D1 05          		 DEC B	;
336)   15D2 C9          		 RET  	;
343)   15D3 D5          		STRG_LOADFILE: PUSH DE	;
344)   15D4 C5          		 PUSH BC	;
345)   15D5 E5          		 PUSH HL  	;
346)   15D6 CD 2E 05    		 CALL OS_PRINTMSG	;
347)   15D9 4F 50 45 4E 		 DEFM "OPEN FILE"	;
347)   15DD 20 46 49 4C 		 DEFM "OPEN FILE"	;
347)   15E1 45          		 DEFM "OPEN FILE"	;
348)   15E2 0A 0D 00    		 DB 10,13,0	;
349)   15E5 E1          		 POP HL	;
350)   15E6 CD E8 31    		 CALL COPYFNAME	;
351)   15E9 AF          		 XOR A   ;READ ONLY 	;READ ONLY
352)   15EA CD D6 14    		 CALL STRG_OPNFILE  	;
353)   15ED 20 58       		 JR NZ, FOPENERR	;
354)   15EF CD 2E 05    		 CALL OS_PRINTMSG	;
355)   15F2 0A 0D       		 DB 10,13	;
356)   15F4 46 49 4C 45 		 DEFM "FILE OPEN OK"	;
356)   15F8 20 4F 50 45 		 DEFM "FILE OPEN OK"	;
356)   15FC 4E 20 4F 4B 		 DEFM "FILE OPEN OK"	;
357)   1600 0A 0D 00    		 DB 10,13,0	;
359)   1603 C1          		 POP BC  ;BYTECOUNT	;BYTECOUNT
360)   1604 D1          		 POP DE  ;DEST BUFFER	;DEST BUFFER
361)   1605 CD 4E 15    		 CALL STRG_BLKREAD	;
362)   1608 28 19       		 JR Z, FREADOK	;
364)   160A CD 2E 05    		 CALL OS_PRINTMSG	;
365)   160D 20 45 52 52 		 DEFM " ERROR READING FILE"	;
365)   1611 4F 52 20 52 		 DEFM " ERROR READING FILE"	;
365)   1615 45 41 44 49 		 DEFM " ERROR READING FILE"	;
365)   1619 4E 47 20 46 		 DEFM " ERROR READING FILE"	;
365)   161D 49 4C 45    		 DEFM " ERROR READING FILE"	;
366)   1620 0A 0D 00    		 DB 10,13,0	;
367)   1623 C5          		FREADOK: PUSH BC	;
368)   1624 CD 26 30    		 CALL B2D16	;
369)   1627 21 7F FF    		 LD HL,B2DBUF	;
370)   162A CD BA 30    		 CALL SKIPSPC	;
371)   162D CD B1 0E    		 CALL RS_TXT	;
372)   1630 CD 2E 05    		 CALL OS_PRINTMSG	;
373)   1633 20 42 59 54 		 DEFM " BYTES READ"	;
373)   1637 45 53 20 52 		 DEFM " BYTES READ"	;
373)   163B 45 41 44    		 DEFM " BYTES READ"	;
374)   163E 0A 0D 00    		 DB 10,13,0	;
375)   1641 CD 40 15    		 CALL STRG_CLSFILE	;
376)   1644 C1          		 POP BC   ;BYTES LOADED TO BUFFER	;BYTES LOADED TO BUFFER
377)   1645 AF          		 XOR A	;
378)   1646 C9          		 RET	;
379)   1647 C1          		FOPENERR: POP BC	;
380)   1648 D1          		 POP DE	;
382)   1649 CD 2E 05    		 CALL OS_PRINTMSG	;
383)   164C 2D 2D 3E 45 		 DEFM "-->ERROR OPENING FILE"	;
383)   1650 52 52 4F 52 		 DEFM "-->ERROR OPENING FILE"	;
383)   1654 20 4F 50 45 		 DEFM "-->ERROR OPENING FILE"	;
383)   1658 4E 49 4E 47 		 DEFM "-->ERROR OPENING FILE"	;
383)   165C 20 46 49 4C 		 DEFM "-->ERROR OPENING FILE"	;
383)   1660 45          		 DEFM "-->ERROR OPENING FILE"	;
384)   1661 0A 0D 00    		 DB 10,13,0	;
385)   1664 21 D3 FE    		 LD HL,STRGBUFF	;
386)   1667 CD B1 0E    		 CALL RS_TXT	;
387)   166A CD 08 0F    		 CALL RS_NEWLINE	;
388)   166D 37          		 SCF	;
389)   166E C9          		 RET	;
393)   166F D5          		STRG_BLKWRITE: PUSH DE	;
394)   1670 3E 3C       		 LD A, CMD_BYTE_WRITE	;
395)   1672 CD B5 12    		     CALL CH376_COMMD	;
396)   1675 79          		     LD A, C                           ; BYTES REQUEST ON BC	; BYTES REQUEST ON BC
397)   1676 CD C4 12    		     CALL CH376_DATAWR	;
398)   1679 78          		     LD A, B	;
399)   167A CD C4 12    		     CALL CH376_DATAWR    	;
400)   167D CD 2E 05    		 CALL OS_PRINTMSG	;
401)   1680 42 4C 4F 43 		 DEFM "BLOCK WRITING"	;
401)   1684 4B 20 57 52 		 DEFM "BLOCK WRITING"	;
401)   1688 49 54 49 4E 		 DEFM "BLOCK WRITING"	;
401)   168C 47          		 DEFM "BLOCK WRITING"	;
402)   168D 0A 0D 00    		 DB 10,13,0	;
403)   1690 E1          		 POP HL	;
404)   1691 E5          		STBW_DOREST: PUSH HL	;
405)   1692 CD 44 12    		 CALL CH376_WTCMDEND	;
406)   1695 E1          		 POP HL	;
407)   1696 28 1B       		 JR Z, WFR_DONE   ;Z=NO MORE OR CANNOT READ	;Z=NO MORE OR CANNOT READ
408)   1698 FE 1E       		 CP USB_INT_DISK_WRITE                    	;
409)   169A 20 31       		     JR NZ, WFR_ERROR	;
410)   169C 3E 2D       		 LD A,CMD_WR_REQ_DATA	;
411)   169E CD B5 12    		 CALL CH376_COMMD 	;
413)   16A1 CD D0 12    		 CALL CH376_DATARD ;READ BYTE COUNT UP TO 255 BYTES	;READ BYTE COUNT UP TO 255 BYTES
414)   16A4 47          		 LD B,A   	;
416)   16A5 7E          		STBW_NXT1: LD A,(HL)	;
417)   16A6 CD C4 12    		 CALL CH376_DATAWR	;
418)   16A9 23          		 INC HL	;
419)   16AA 10 F9       		 DJNZ STBW_NXT1	;
420)   16AC 3E 3D       		 LD A, CMD_BYTE_WR_GO 	;
421)   16AE CD B5 12    		 CALL CH376_COMMD 	;
422)   16B1 18 DE       		 JR STBW_DOREST	;
423)   16B3 E5          		WFR_DONE: PUSH HL	;
424)   16B4 CD 2E 05    		 CALL OS_PRINTMSG	;
425)   16B7 57 52 49 54 		 DEFM "WRITING DONE!!! "	;
425)   16BB 49 4E 47 20 		 DEFM "WRITING DONE!!! "	;
425)   16BF 44 4F 4E 45 		 DEFM "WRITING DONE!!! "	;
425)   16C3 21 21 21 20 		 DEFM "WRITING DONE!!! "	;
426)   16C7 0D 0A 00    		 DB 13,10,0 	;
427)   16CA E1          		 POP HL	;
428)   16CB B7          		 OR A	;
429)   16CC C9          		 RET	;
430)   16CD F5          		WFR_ERROR: PUSH AF	;
431)   16CE CD 2E 05    		 CALL OS_PRINTMSG	;
432)   16D1 45 52 52 4F 		 DEFM "ERROR WRITING BLOCK!!! "	;
432)   16D5 52 20 57 52 		 DEFM "ERROR WRITING BLOCK!!! "	;
432)   16D9 49 54 49 4E 		 DEFM "ERROR WRITING BLOCK!!! "	;
432)   16DD 47 20 42 4C 		 DEFM "ERROR WRITING BLOCK!!! "	;
432)   16E1 4F 43 4B 21 		 DEFM "ERROR WRITING BLOCK!!! "	;
432)   16E5 21 21 20    		 DEFM "ERROR WRITING BLOCK!!! "	;
433)   16E8 0D 0A 00    		 DB 13,10,0 	;
434)   16EB F1          		 POP AF	;
435)   16EC 06 02       		 LD B,2	;
436)   16EE 05          		 DEC B	;
437)   16EF C9          		 RET  	;
445)   16F0 D5          		STRG_SAVEFILE: PUSH DE	;
446)   16F1 C5          		 PUSH BC	;
447)   16F2 E5          		 PUSH HL  	;
448)   16F3 CD 2E 05    		 CALL OS_PRINTMSG	;
449)   16F6 0A 0D       		 DB 10,13	;
450)   16F8 53 41 56 45 		 DEFM "SAVE FILE"	;
450)   16FC 20 46 49 4C 		 DEFM "SAVE FILE"	;
450)   1700 45          		 DEFM "SAVE FILE"	;
451)   1701 0A 0D 0A 0D 		 DB 10,13,10,13,0	;
451)   1705 00          		 DB 10,13,10,13,0	;
452)   1706 E1          		 POP HL	;
453)   1707 CD E8 31    		 CALL COPYFNAME	;
454)   170A 3E 04       		 LD A,4   ;CREATE THE FILE	;CREATE THE FILE
455)   170C CD D6 14    		 CALL STRG_OPNFILE  	;
456)   170F 20 4E       		 JR NZ, FSAVEERR	;
457)   1711 CD 2E 05    		 CALL OS_PRINTMSG	;
458)   1714 0A 0D       		 DB 10,13	;
459)   1716 46 49 4C 45 		 DEFM "FILE CREATED OK"	;
459)   171A 20 43 52 45 		 DEFM "FILE CREATED OK"	;
459)   171E 41 54 45 44 		 DEFM "FILE CREATED OK"	;
459)   1722 20 4F 4B    		 DEFM "FILE CREATED OK"	;
460)   1725 0A 0D 00    		 DB 10,13,0	;
461)   1728 C1          		 POP BC  ;BYTECOUNT	;BYTECOUNT
462)   1729 D1          		 POP DE  ;SOURCE BUFFER	;SOURCE BUFFER
463)   172A CD 6F 16    		 CALL STRG_BLKWRITE	;
464)   172D 28 19       		 JR Z, FWRITEOK	;
466)   172F CD 2E 05    		 CALL OS_PRINTMSG	;
467)   1732 20 45 52 52 		 DEFM " ERROR WRITING FILE"	;
467)   1736 4F 52 20 57 		 DEFM " ERROR WRITING FILE"	;
467)   173A 52 49 54 49 		 DEFM " ERROR WRITING FILE"	;
467)   173E 4E 47 20 46 		 DEFM " ERROR WRITING FILE"	;
467)   1742 49 4C 45    		 DEFM " ERROR WRITING FILE"	;
468)   1745 0A 0D 00    		 DB 10,13,0	;
469)   1748 CD 2E 05    		FWRITEOK: CALL OS_PRINTMSG	;
470)   174B 42 59 54 45 		 DEFM "BYTE WRITTEN"	;
470)   174F 20 57 52 49 		 DEFM "BYTE WRITTEN"	;
470)   1753 54 54 45 4E 		 DEFM "BYTE WRITTEN"	;
471)   1757 0A 0D 00    		 DB 10,13,0	;
472)   175A CD 40 15    		 CALL STRG_CLSFILE	;
473)   175D AF          		 XOR A	;
474)   175E C9          		 RET	;
475)   175F C1          		FSAVEERR: POP BC	;
476)   1760 D1          		 POP DE	;
477)   1761 CD B3 31    		 CALL PRINTNUM	;
478)   1764 CD 2E 05    		 CALL OS_PRINTMSG	;
479)   1767 2D 2D 3E 45 		 DEFM "-->ERROR CREATING FILE"	;
479)   176B 52 52 4F 52 		 DEFM "-->ERROR CREATING FILE"	;
479)   176F 20 43 52 45 		 DEFM "-->ERROR CREATING FILE"	;
479)   1773 41 54 49 4E 		 DEFM "-->ERROR CREATING FILE"	;
479)   1777 47 20 46 49 		 DEFM "-->ERROR CREATING FILE"	;
479)   177B 4C 45       		 DEFM "-->ERROR CREATING FILE"	;
480)   177D 0A 0D 00    		 DB 10,13,0	;
481)   1780 21 D3 FE    		 LD HL,STRGBUFF	;
482)   1783 CD B1 0E    		 CALL RS_TXT	;
483)   1786 CD 08 0F    		 CALL RS_NEWLINE	;
484)   1789 37          		 SCF	;
485)   178A C9          		 RET	;
  7)   178B 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  8)   178B 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
  9)   178B 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 10)   178B 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 11)   178B 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 56)   178B C5          		I2C_RDSTAT_WT: PUSH BC	;
 57)   178C 01 00 20    		 LD BC, $2000	;
 58)   178F DB 73       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 59)   1791 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 60)   1793 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 61)   1795 0B          		 DEC BC	;
 62)   1796 78          		 LD A, B	;
 63)   1797 B1          		 OR C	;
 64)   1798 20 F5       		 JR NZ, I2CRWT_AGN	;
 65)   179A C1          		I2CRWT_OK: POP BC	;
 66)   179B DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 67)   179D C9          		 RET	;
 69)   179E DB 73       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 70)   17A0 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 71)   17A2 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 72)   17A4 C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 73)   17A5 DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 74)   17A7 C9          		 RET	;
 77)   17A8 3E 01       		I2C_INIT: LD A, I2CADR	;
 78)   17AA D3 70       		 OUT (DI2C_INDPTR), A	;
 79)   17AC 3E E0       		 LD A, $E0	;
 80)   17AE D3 72       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 82)   17B0 3E 40       		 LD A, $40        ;INIT	;INIT
 83)   17B2 D3 73       		 OUT (DI2C_CON), A      ;	;
 84)   17B4 06 FA       		 LD B, 250	;
 85)   17B6 CD 4E 2F    		 CALL DELAYMICRO	;
 86)   17B9 06 FA       		 LD B, 250	;
 87)   17BB CD 4E 2F    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 92)   17BE 3E 06       		 LD A, I2CMODE	;
 93)   17C0 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 94)   17C2 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 95)   17C4 D3 72       		 OUT (DI2C_INDIR), A	;
 96)   17C6 3E 02       		 LD A, I2CSCLL	;
 97)   17C8 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 98)   17CA 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
 99)   17CC D3 72       		 OUT (DI2C_INDIR), A	;
100)   17CE 3E 03       		 LD A, I2CSCLH	;
101)   17D0 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
102)   17D2 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
103)   17D4 D3 72       		 OUT (DI2C_INDIR), A	;
105)   17D6 C9          		 RET	;
112)   17D7 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
113)   17D9 D3 73       		 OUT (DI2C_CON), A	;
114)   17DB CD 8B 17    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
115)   17DE 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
116)   17DF FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
117)   17E1 28 21       		 JR Z, WRB_S1	;
118)   17E3 FE 10       		 CP MASTER_RESTART_TXed	;
119)   17E5 28 1D       		 JR Z, WRB_S1	;
120)   17E7 FE 28       		 CP MASTER_DATA_W_ACK	;
121)   17E9 28 26       		 JR Z, WRB_S2	;
122)   17EB FE 18       		 CP MASTER_SLA_W_ACK	;
123)   17ED 28 23       		 JR Z, WRB_S3	;
124)   17EF FE 20       		 CP MASTER_SLA_W_NAK	;
125)   17F1 28 2D       		 JR Z, WRB_EXIT	;
126)   17F3 FE 30       		 CP MASTER_DATA_W_NAK	;
127)   17F5 28 29       		 JR Z, WRB_EXIT	;
128)   17F7 FE 38       		 CP MASTER_ARB_LOST	;
129)   17F9 C8          		 RET Z	;
130)   17FA FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
131)   17FC C8          		 RET Z	;
132)   17FD FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
133)   17FF C8          		 RET Z	;
134)   1800 FE D8       		 CP SLAVE_GENERALCALL_AL	;
135)   1802 C8          		 RET Z	;
136)   1803 C9          		 RET	;
138)   1804 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
139)   1805 CB 27       		 SLA A	;
140)   1807 E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
141)   1809 D3 71       		 OUT (DI2C_DAT), A	;
142)   180B 3E 40       		 LD A, $40	;
143)   180D D3 73       		 OUT (DI2C_CON), A	;
144)   180F 18 CA       		 JR WRB_LP1	;
145)   1811 0B          		WRB_S2: DEC BC	;
146)   1812 78          		WRB_S3: LD A, B	;
147)   1813 B1          		 OR C	;
148)   1814 28 0A       		 JR Z, WRB_EXIT	;
149)   1816 7E          		 LD A, (HL)	;
150)   1817 23          		 INC HL	;
151)   1818 D3 71       		 OUT (DI2C_DAT), A	;
152)   181A 3E 40       		 LD A, $40	;
153)   181C D3 73       		 OUT (DI2C_CON), A	;
154)   181E 18 BB       		 JR WRB_LP1	;
156)   1820 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
157)   1822 D3 73       		 OUT (DI2C_CON), A	;
158)   1824 78          		 LD A, B	;
159)   1825 B1          		 OR C	;
160)   1826 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
166)   1827 78          		I2C_RD_BYTE: LD A, B	;
167)   1828 B1          		 OR C	;
168)   1829 C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
169)   182A 3E 60       		 LD A, $60	;
170)   182C D3 73       		 OUT (DI2C_CON), A	;
171)   182E CD 8B 17    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
172)   1831 1E 00       		 LD E, 0	;
173)   1833 FE 08       		 CP MASTER_START_TXed	;
174)   1835 28 1F       		 JR Z, RDB_S1	;
176)   1837 28 1D       		 JR Z, RDB_S1	;
177)   1839 FE 58       		 CP MASTER_DATA_R_NAK	;
178)   183B 28 26       		 JR Z, RDB_S2	;
179)   183D FE 50       		 CP MASTER_DATA_R_ACK	;
180)   183F 28 24       		 JR Z, RDB_S3	;
181)   1841 FE 40       		 CP MASTER_SLA_R_ACK	;
182)   1843 28 25       		 JR Z, RDB_S4	;
183)   1845 FE 48       		 CP MASTER_SLA_R_NAK	;
184)   1847 28 38       		 JR Z, RDB_EXIT	;
185)   1849 FE 38       		 CP MASTER_ARB_LOST	;
186)   184B C8          		 RET Z	;
187)   184C FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
188)   184E C8          		 RET Z	;
189)   184F FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
190)   1851 C8          		 RET Z	;
191)   1852 FE D8       		 CP SLAVE_GENERALCALL_AL	;
192)   1854 C8          		 RET Z	;
193)   1855 C9          		 RET	;
196)   1856 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
197)   1857 CB 27       		 SLA A	;
198)   1859 F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
199)   185B D3 71       		 OUT (DI2C_DAT), A	;
200)   185D 3E 40       		 LD A, $40	;
201)   185F D3 73       		 OUT (DI2C_CON), A	;
202)   1861 18 CB       		 JR RDB_LP1	;
203)   1863 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
204)   1865 DB 71       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
205)   1867 77          		 LD (HL), A	;
206)   1868 23          		 INC HL	;
207)   1869 0B          		 DEC BC	;
208)   186A 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
209)   186B B1          		 OR C	;
210)   186C 28 13       		 JR Z, RDB_EXIT	;
211)   186E 7B          		 LD A, E	;
212)   186F FE 01       		 CP 1	;
213)   1871 28 0E       		 JR Z, RDB_EXIT	;
214)   1873 78          		 LD A, B	;
215)   1874 81          		 ADD C	;
216)   1875 FE 01       		 CP 1	;
217)   1877 3E 40       		 LD A, $40	;
218)   1879 28 02       		 JR Z, RDB_NXT1	;
219)   187B 3E C0       		 LD A, $C0	;
220)   187D D3 73       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
221)   187F 18 AD       		 JR RDB_LP1	;
223)   1881 3E 50       		RDB_EXIT: LD A, $50	;
224)   1883 D3 73       		 OUT (DI2C_CON), A	;
225)   1885 78          		 LD A, B	;
226)   1886 B1          		 OR C	;
227)   1887 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
 29)   1888 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 29)   188C 61 79       		 SUN DEFM  "Sunday"	;
 30)   188E 00          		 DB 0	;
 31)   188F 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 31)   1893 61 79       		 MON DEFM  "Monday"	;
 32)   1895 00          		 DB 0	;
 33)   1896 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 33)   189A 64 61 79    		 TUE DEFM  "Tuesday"	;
 34)   189D 00          		 DB 0	;
 35)   189E 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 35)   18A2 65 73 64 61 		 WED DEFM  "Wednesday"	;
 35)   18A6 79          		 WED DEFM  "Wednesday"	;
 36)   18A7 00          		 DB 0	;
 37)   18A8 54 68 75 72 		 THU DEFM  "Thursday"	;
 37)   18AC 73 64 61 79 		 THU DEFM  "Thursday"	;
 38)   18B0 00          		 DB 0	;
 39)   18B1 46 72 69 64 		 FRI DEFM  "Friday"	;
 39)   18B5 61 79       		 FRI DEFM  "Friday"	;
 40)   18B7 00          		 DB 0	;
 41)   18B8 53 61 74 75 		 SAT DEFM  "Saturday"	;
 41)   18BC 72 64 61 79 		 SAT DEFM  "Saturday"	;
 42)   18C0 00          		 DB 0	;
 44)   18C1 88 18       		 DAYS DEFW SUN	;
 45)   18C3 8F 18       		 DEFW MON	;
 46)   18C5 96 18       		 DEFW TUE	;
 47)   18C7 9E 18       		 DEFW WED	;
 48)   18C9 A8 18       		 DEFW THU	;
 49)   18CB B1 18       		 DEFW FRI	;
 50)   18CD B8 18       		 DEFW SAT	;
 52)   18CF 52 54 43 20 		 MESERR DEFM "RTC ERR ON RECV"	;
 52)   18D3 45 52 52 20 		 MESERR DEFM "RTC ERR ON RECV"	;
 52)   18D7 4F 4E 20 52 		 MESERR DEFM "RTC ERR ON RECV"	;
 52)   18DB 45 43 56    		 MESERR DEFM "RTC ERR ON RECV"	;
 53)   18DE 0A 0D 00    		 DEFB 10,13,0	;
 55)   18E1 52 54 43 20 		 MESERR0 DEFM "RTC ERR ON SEND"	;
 55)   18E5 45 52 52 20 		 MESERR0 DEFM "RTC ERR ON SEND"	;
 55)   18E9 4F 4E 20 53 		 MESERR0 DEFM "RTC ERR ON SEND"	;
 55)   18ED 45 4E 44    		 MESERR0 DEFM "RTC ERR ON SEND"	;
 56)   18F0 0A 0D 00    		 DEFB 10,13,0	;
 58)   18F3 7B          		SHERR0: LD A, E	;
 59)   18F4 C5          		 PUSH BC	;
 60)   18F5 CD C4 06    		 CALL SOUTAS	;
 61)   18F8 C1          		 POP BC	;
 62)   18F9 79          		 LD A, C	;
 63)   18FA CD C4 06    		 CALL SOUTAS	;
 65)   18FD 21 E1 18    		 LD HL, MESERR0	;
 66)   1900 CD B1 0E    		 CALL RS_TXT	;
 67)   1903 C9          		 RET	;
 70)   1904 79          		SHERR: LD A, C	;
 71)   1905 CD C4 06    		 CALL SOUTAS	;
 72)   1908 21 CF 18    		 LD HL, MESERR	;
 73)   190B CD B1 0E    		 CALL RS_TXT	;
 74)   190E 37          		 SCF	;
 75)   190F C9          		 RET	;
 78)   1910 AF          		RST_BUF: XOR A	;
 79)   1911 06 14       		 LD B, 20	;
 80)   1913 21 8A FE    		 LD HL, BUFFER	;
 81)   1916 77          		LP1: LD (HL), A	;
 82)   1917 23          		 INC HL	;
 83)   1918 10 FC       		 DJNZ LP1	;
 84)   191A C9          		 RET	;
 86)   191B 64 64 2F 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   191F 6D 2F 79 79 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   1923 20 77 20 68 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   1927 68 3A 6D 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   192B 3A 73 73    		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 89)   192E 21 1B 19    		DS1307_INIT: LD HL,DATEMASK	;
 90)   1931 11 A0 FE    		 LD DE,TIMMSG	;
 91)   1934 01 11 00    		 LD BC,17	;
 92)   1937 ED B0       		 LDIR        	;
 93)   1939 C9          		 RET	;
 95)   193A 21 8A FE    		DS1307_GETNOW: LD HL, BUFFER	;
 96)   193D AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 97)   193E 77          		 LD (HL), A	;
 98)   193F 16 68       		 LD D, DS1307_ADDRESS	;
 99)   1941 01 01 00    		 LD BC, 1	;
100)   1944 CD D7 17    		 CALL I2C_WRITE	;
101)   1947 C2 F3 18    		 JP NZ, SHERR0	;
103)   194A 21 8A FE    		 LD HL, BUFFER	;
104)   194D 16 68       		 LD D, DS1307_ADDRESS	;
105)   194F 01 07 00    		 LD BC, 7	;
106)   1952 CD 27 18    		 CALL I2C_READ	;
107)   1955 C2 04 19    		 JP NZ, SHERR	;
108)   1958 AF          		 XOR A	;
109)   1959 C9          		 RET	;
113)   195A 11 8A FE    		DS1307_SETTIME: LD DE, BUFFER	;
114)   195D AF          		 XOR A	;
115)   195E 12          		 LD (DE), A	;
116)   195F 13          		 INC DE	;
117)   1960 21 B1 FE    		 LD HL,TIMMSG+17  ;SS	;SS
118)   1963 CD 91 19    		 CALL SETTMPARAM	;
119)   1966 21 AE FE    		 LD HL,TIMMSG+14  ;MN	;MN
120)   1969 CD 91 19    		 CALL SETTMPARAM	;
121)   196C 21 AB FE    		 LD HL,TIMMSG+11  ;HH	;HH
122)   196F CD 91 19    		 CALL SETTMPARAM	;
123)   1972 21 A9 FE    		 LD HL,TIMMSG+9  ;D OF WEEK 1-7	;D OF WEEK 1-7
124)   1975 CD 91 19    		 CALL SETTMPARAM	;
125)   1978 21 A0 FE    		 LD HL,TIMMSG  ;DD	;DD
126)   197B CD 91 19    		 CALL SETTMPARAM	;
127)   197E 21 A3 FE    		 LD HL,TIMMSG+3  ;MM	;MM
128)   1981 CD 91 19    		 CALL SETTMPARAM	;
129)   1984 21 A6 FE    		 LD HL,TIMMSG+6  ;YY	;YY
130)   1987 CD 91 19    		 CALL SETTMPARAM	;
131)   198A 3E 00       		 LD A,0	;
132)   198C 12          		 LD (DE), A	;
133)   198D CD D9 19    		 CALL DS1307_ADJUST	;
134)   1990 C9          		 RET	;
136)   1991 D5          		SETTMPARAM: PUSH DE	;
137)   1992 CD 04 31    		 CALL strtob	;
138)   1995 D1          		 POP DE	;
139)   1996 CD 95 2F    		 CALL BN2BCD	;
140)   1999 7D          		 LD A,L	;
141)   199A 12          		 LD (DE),A	;
142)   199B 13          		 INC DE  	;
143)   199C C9          		 RET	;
148)   199D 11 8A FE    		 LD DE, BUFFER	;
149)   19A0 AF          		 XOR A	;
150)   19A1 12          		 LD (DE), A	;
151)   19A2 13          		 INC DE	;
152)   19A3 3E 0A       		 LD A, 10        ; 10 SECS	; 10 SECS
153)   19A5 CD 95 2F    		 CALL BN2BCD	;
154)   19A8 7D          		 LD A, L	;
155)   19A9 12          		 LD (DE), A	;
156)   19AA 13          		 INC DE	;
157)   19AB 3E 22       		 LD A, 34        ; 28 MINS	; 28 MINS
158)   19AD CD 95 2F    		 CALL BN2BCD	;
159)   19B0 7D          		 LD A, L	;
160)   19B1 12          		 LD (DE), A	;
161)   19B2 13          		 INC DE	;
162)   19B3 3E 12       		 LD A, 18        ; 19 HOURS	; 19 HOURS
163)   19B5 CD 95 2F    		 CALL BN2BCD	;
164)   19B8 7D          		 LD A, L	;
165)   19B9 12          		 LD (DE), A	;
166)   19BA 13          		 INC DE	;
167)   19BB 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
168)   19BD 12          		 LD (DE), A	;
169)   19BE 13          		 INC DE	;
170)   19BF 3E 12       		 LD A, 18        ; 8 DAY	; 8 DAY
171)   19C1 CD 95 2F    		 CALL BN2BCD	;
172)   19C4 7D          		 LD A, L	;
173)   19C5 12          		 LD (DE), A	;
174)   19C6 13          		 INC DE	;
175)   19C7 3E 02       		 LD A, 02        ; 10 MONTH	; 10 MONTH
176)   19C9 CD 95 2F    		 CALL BN2BCD	;
177)   19CC 7D          		 LD A, L	;
178)   19CD 12          		 LD (DE), A	;
179)   19CE 13          		 INC DE	;
180)   19CF 3E 15       		 LD A, 21        ; 21 YEAR (2020)	; 21 YEAR (2020)
181)   19D1 CD 95 2F    		 CALL BN2BCD	;
182)   19D4 7D          		 LD A, L	;
183)   19D5 12          		 LD (DE), A	;
184)   19D6 13          		 INC DE	;
185)   19D7 AF          		 XOR A	;
186)   19D8 12          		 LD (DE), A	;
199)   19D9 21 8A FE    		DS1307_ADJUST: LD HL, BUFFER	;
200)   19DC 16 68       		 LD D, DS1307_ADDRESS	;
201)   19DE 01 09 00    		 LD BC, 9	;
202)   19E1 CD D7 17    		 CALL I2C_WRITE	;
203)   19E4 C2 F3 18    		 JP NZ, SHERR0	;
204)   19E7 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
205)   19EA CD 12 30    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
206)   19ED 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
207)   19F0 CD 12 30    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
208)   19F3 C9          		 RET	;
212)   19F4 21 8A FE    		DS1307_SETSQ: LD HL, BUFFER	;
213)   19F7 E5          		 PUSH HL	;
214)   19F8 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
215)   19FA 77          		 LD (HL), A	;
216)   19FB 23          		 INC HL	;
217)   19FC 7A          		 LD A, D	;
218)   19FD 77          		 LD (HL), A	;
219)   19FE E1          		 POP HL	;
220)   19FF 16 68       		 LD D, DS1307_ADDRESS	;
221)   1A01 01 02 00    		 LD BC, 2	;
222)   1A04 CD D7 17    		 CALL I2C_WRITE	;
223)   1A07 C2 F3 18    		 JP NZ, SHERR0	;
224)   1A0A C9          		 RET	;
228)   1A0B CD FC 2F    		CONVHL: CALL Bcd2ASC	;
229)   1A0E 26 00       		 LD H, 0	;
230)   1A10 C9          		 RET	;
233)   1A11 06 07       		CHKERROR: LD B, 7	;
234)   1A13 21 8A FE    		 LD HL, BUFFER	;
235)   1A16 7E          		CEAGN: LD A, (HL)	;
236)   1A17 FE FF       		 CP $FF	;
237)   1A19 28 05       		 JR Z, STER	;
238)   1A1B 23          		 INC HL	;
239)   1A1C 10 F8       		 DJNZ CEAGN	;
240)   1A1E AF          		 XOR A	;
241)   1A1F C9          		 RET	;
244)   1A20 37          		 SCF	;
245)   1A21 C9          		 RET	;
250)   1A22 CD 10 19    		DS1307_GETTIME: CALL RST_BUF	;
251)   1A25 CD 3A 19    		 CALL DS1307_GETNOW	;
252)   1A28 D8          		 RET C         ;ERROR RETURN	;ERROR RETURN
253)   1A29 CD 11 1A    		 CALL CHKERROR	;
254)   1A2C D8          		 RET C         ;ERRREAD  ;IF ERROR DONT PRINT	;ERRREAD  ;IF ERROR DONT PRINT
255)   1A2D DD 21 8A FE 		 LD IX, BUFFER	;
256)   1A31 11 A0 FE    		 LD DE, TIMMSG	;
257)   1A34 26 00       		 LD H, 0	;
258)   1A36 DD 6E 04    		 LD L, (IX + 4)        ;DAY	;DAY
259)   1A39 CD 0B 1A    		 CALL CONVHL	;
260)   1A3C 3E 2F       		 LD A, ' / '	;
261)   1A3E 12          		 LD (DE), A	;
262)   1A3F 13          		 INC DE	;
263)   1A40 DD 6E 05    		 LD L, (IX + 5)        ;MONTH	;MONTH
264)   1A43 CD 0B 1A    		 CALL CONVHL	;
265)   1A46 3E 2F       		 LD A, ' / '	;
266)   1A48 12          		 LD (DE), A	;
267)   1A49 13          		 INC DE	;
268)   1A4A DD 6E 06    		 LD L, (IX + 6)        ;YEAR	;YEAR
269)   1A4D CD 0B 1A    		 CALL CONVHL	;
270)   1A50 3E 20       		 LD A, ' '	;
271)   1A52 12          		 LD (DE), A	;
272)   1A53 13          		 INC DE	;
273)   1A54 DD 6E 02    		 LD L, (IX + 2)        ;HOUR	;HOUR
274)   1A57 CD 0B 1A    		 CALL CONVHL	;
275)   1A5A 3E 3A       		 LD A, ':'	;
276)   1A5C 12          		 LD (DE), A	;
277)   1A5D 13          		 INC DE	;
278)   1A5E DD 6E 01    		 LD L, (IX + 1)        ;MIN	;MIN
279)   1A61 CD 0B 1A    		 CALL CONVHL	;
280)   1A64 3E 3A       		 LD A, ':'	;
281)   1A66 12          		 LD (DE), A	;
282)   1A67 13          		 INC DE	;
283)   1A68 DD 6E 00    		 LD L, (IX)        ;SECS	;SECS
284)   1A6B CD 0B 1A    		 CALL CONVHL	;
285)   1A6E 13          		 INC DE	;
286)   1A6F AF          		 XOR A	;
287)   1A70 12          		 LD (DE), A	;
288)   1A71 C9          		 RET	;
112)   1A72 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
114)   1A74 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
115)   1A75 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
116)   1A77 CB E2       		 SET D4, D	;
117)   1A79 0F          		LWNXT1: RRCA	;
118)   1A7A 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
119)   1A7C CB EA       		 SET D5, D	;
120)   1A7E 0F          		LWNXT2: RRCA	;
121)   1A7F 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
122)   1A81 CB F2       		 SET D6, D	;
123)   1A83 0F          		LWNXT3: RRCA	;
124)   1A84 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
125)   1A86 CB FA       		 SET D7, D	;
126)   1A88 7B          		LWNXT4: LD A, E	;
127)   1A89 0F          		 RRCA	;
128)   1A8A 30 02       		 JR NC, LWNXT5	;
129)   1A8C CB C2       		 SET RS, D	;
131)   1A8E 3A 89 FE    		 LD A,(LCD_STSMASK)       ;ADD THE BACKLIGHT MASKS  	;ADD THE BACKLIGHT MASKS
132)   1A91 B2          		 OR D	;
133)   1A92 57          		 LD D,A	;
135)   1A93 CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
136)   1A95 7A          		 LD A, D	;
137)   1A96 CD A0 1A    		 CALL LCD16_I2CSEND	;
138)   1A99 CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
139)   1A9B 7A          		 LD A, D	;
140)   1A9C CD A0 1A    		 CALL LCD16_I2CSEND	;
141)   1A9F C9          		 RET	;
145)   1AA0 D5          		LCD16_I2CSEND: PUSH DE	;
146)   1AA1 E5          		 PUSH HL	;
147)   1AA2 21 8A FE    		 LD HL, BUFFER	;
148)   1AA5 77          		 LD (HL), A	;
149)   1AA6 16 27       		 LD D, LCDADDR	;
150)   1AA8 01 01 00    		 LD BC, 1	;
151)   1AAB CD D7 17    		 CALL I2C_WRITE	;
152)   1AAE E1          		 POP HL	;
153)   1AAF D1          		 POP DE	;
154)   1AB0 C9          		 RET	;
157)   1AB1 1E 00       		LCD16_COMMD: LD E, COMMAND	;
158)   1AB3 18 02       		 JR LCD16_SEND	;
161)   1AB5 1E 01       		LCD16_DATA: LD E, LCD_DATA 	;
164)   1AB7 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
165)   1AB8 7B          		 LD A, E	;
166)   1AB9 0F          		 RRCA	;
167)   1ABA 38 07       		 JR C, ISCMDDATA	;
168)   1ABC 0F          		 RRCA	;
169)   1ABD 30 04       		 JR NC, ISCMDDATA	;
171)   1ABF 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
172)   1AC1 18 0E       		 JR LCSD_4BIT	;
173)   1AC3 7A          		ISCMDDATA: LD A, D	;
174)   1AC4 CB 3F       		 SRL A	;
175)   1AC6 CB 3F       		 SRL A	;
176)   1AC8 CB 3F       		 SRL A	;
177)   1ACA CB 3F       		 SRL A	;
178)   1ACC D5          		 PUSH DE	;
179)   1ACD CD 72 1A    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
180)   1AD0 D1          		 POP DE	;
181)   1AD1 7A          		LCSD_4BIT: LD A, D	;
182)   1AD2 E6 0F       		 AND $0F	;
183)   1AD4 CD 72 1A    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
184)   1AD7 C9          		 RET	;
186)   1AD8 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
187)   1ADA 1E 02       		 LD E, FOUR_BITS	;
188)   1ADC CD B7 1A    		 CALL LCD16_SEND	;
189)   1ADF 01 00 30    		 LD BC, $3000	;
190)   1AE2 CD 12 30    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
191)   1AE5 3E 03       		 LD A, 3	;
192)   1AE7 1E 02       		 LD E, FOUR_BITS	;
193)   1AE9 CD B7 1A    		 CALL LCD16_SEND	;
194)   1AEC 01 00 30    		 LD BC, $3000	;
195)   1AEF CD 12 30    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
196)   1AF2 3E 03       		 LD A, 3	;
197)   1AF4 1E 02       		 LD E, FOUR_BITS	;
198)   1AF6 CD B7 1A    		 CALL LCD16_SEND	;
199)   1AF9 01 00 30    		 LD BC, $3000	;
200)   1AFC CD 12 30    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
201)   1AFF 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
202)   1B01 1E 02       		 LD E, FOUR_BITS	;
203)   1B03 CD B7 1A    		 CALL LCD16_SEND	;
204)   1B06 01 00 30    		 LD BC, $3000	;
205)   1B09 CD 12 30    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
207)   1B0C 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
208)   1B0E CD B1 1A    		 CALL LCD16_COMMD	;
209)   1B11 3E 02       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
210)   1B13 32 87 FE    		 LD (LCD_DSPCTRL), A	;
211)   1B16 CD 3E 1B    		 CALL LCD16_DISP	;
212)   1B19 CD 59 1B    		 CALL LCD16_CLR	;
213)   1B1C 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
214)   1B1E 32 88 FE    		 LD (LCD_DSPMODE), A	;
215)   1B21 F6 04       		 OR LCD_ENTRYMODESET	;
216)   1B23 CD B1 1A    		 CALL LCD16_COMMD	;
217)   1B26 01 00 30    		 LD BC, $3000	;
218)   1B29 CD 12 30    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
219)   1B2C CD DC 1B    		 CALL LCD16_BKLTON      ;BACKLIGHT ON BY DEFAULT	;BACKLIGHT ON BY DEFAULT
220)   1B2F C9          		 RET	;
222)   1B30 3A 87 FE    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
223)   1B33 CB 97       		 RES LCD_DISPLAYON, A	;
224)   1B35 32 87 FE    		 LD (LCD_DSPCTRL), A	;
225)   1B38 F6 08       		 OR LCD_DISPLAYCONTROL	;
226)   1B3A CD B1 1A    		 CALL LCD16_COMMD	;
227)   1B3D C9          		 RET	;
228)   1B3E 3A 87 FE    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
229)   1B41 CB D7       		 SET LCD_DISPLAYON, A	;
230)   1B43 32 87 FE    		 LD (LCD_DSPCTRL), A	;
231)   1B46 F6 08       		 OR LCD_DISPLAYCONTROL	;
232)   1B48 CD B1 1A    		 CALL LCD16_COMMD	;
233)   1B4B C9          		 RET	;
235)   1B4C 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
236)   1B4F C5          		LCLR_AGN1: PUSH BC	;
237)   1B50 CD 4E 2F    		 CALL DELAYMICRO	;
238)   1B53 C1          		 POP BC	;
239)   1B54 0D          		 DEC C	;
240)   1B55 E2 4F 1B    		 JP PO, LCLR_AGN1	;
241)   1B58 C9          		 RET	;
243)   1B59 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
244)   1B5B CD B1 1A    		 CALL LCD16_COMMD	;
245)   1B5E CD 4C 1B    		 CALL LCDDELAY	;
246)   1B61 C9          		 RET	;
249)   1B62 7E          		@LCD16_PRINT: LD A, (HL)	;
250)   1B63 FE 00       		 CP 0	;
251)   1B65 C8          		 RET Z	;
252)   1B66 CD B5 1A    		 CALL LCD16_DATA	;
253)   1B69 23          		 INC HL	;
254)   1B6A 18 F6       		 JR LCD16_PRINT	;
257)   1B6C CD B5 1A    		@LCD16_PRCHR: CALL LCD16_DATA	;
258)   1B6F C9          		 RET	;
260)   1B70 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
261)   1B72 CD B1 1A    		 CALL LCD16_COMMD	;
262)   1B75 CD 4C 1B    		 CALL LCDDELAY	;
263)   1B78 C9          		 RET	;
266)   1B79 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
267)   1B7D 06 00       		@LCD16_SETCURS: LD B, 0	;
268)   1B7F 4B          		 LD C, E	;
269)   1B80 21 79 1B    		 LD HL, ROWOFFSET	;
270)   1B83 09          		 ADD HL, BC	;
271)   1B84 7E          		 LD A, (HL)	;
272)   1B85 82          		 ADD D	;
273)   1B86 F6 80       		 OR LCD_SETDDRAMADDR	;
274)   1B88 CD B1 1A    		 CALL LCD16_COMMD	;
275)   1B8B C9          		 RET	;
277)   1B8C 3A 87 FE    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
278)   1B8F CB 8F       		 RES LCD_CURSORON, A	;
279)   1B91 32 87 FE    		 LD (LCD_DSPCTRL), A	;
280)   1B94 F6 08       		 OR LCD_DISPLAYCONTROL	;
281)   1B96 CD B1 1A    		 CALL LCD16_COMMD	;
282)   1B99 C9          		 RET	;
285)   1B9A 3A 87 FE    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
286)   1B9D CB CF       		 SET LCD_CURSORON, A	;
287)   1B9F 32 87 FE    		 LD (LCD_DSPCTRL), A	;
288)   1BA2 F6 08       		 OR LCD_DISPLAYCONTROL	;
289)   1BA4 CD B1 1A    		 CALL LCD16_COMMD	;
290)   1BA7 C9          		 RET	;
292)   1BA8 3A 87 FE    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
293)   1BAB CB 87       		 RES LCD_BLINKON, A	;
294)   1BAD 32 87 FE    		 LD (LCD_DSPCTRL), A	;
295)   1BB0 F6 08       		 OR LCD_DISPLAYCONTROL	;
296)   1BB2 CD B1 1A    		 CALL LCD16_COMMD	;
297)   1BB5 C9          		 RET	;
300)   1BB6 3A 87 FE    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
301)   1BB9 CB C7       		 SET LCD_BLINKON, A	;
302)   1BBB 32 87 FE    		 LD (LCD_DSPCTRL), A	;
303)   1BBE F6 08       		 OR LCD_DISPLAYCONTROL	;
304)   1BC0 CD B1 1A    		 CALL LCD16_COMMD	;
305)   1BC3 C9          		 RET	;
307)   1BC4 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
308)   1BC6 CD B1 1A    		 CALL LCD16_COMMD	;
309)   1BC9 C9          		 RET	;
311)   1BCA 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
312)   1BCC CD B1 1A    		 CALL LCD16_COMMD	;
313)   1BCF C9          		 RET	;
315)   1BD0 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
316)   1BD2 CD B1 1A    		 CALL LCD16_COMMD	;
317)   1BD5 C9          		 RET	;
319)   1BD6 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
320)   1BD8 CD B1 1A    		 CALL LCD16_COMMD	;
321)   1BDB C9          		 RET	;
324)   1BDC 3E 08       		@LCD16_BKLTON: LD A, BACKLIGHTPINMASK AND LCD_BACKLIGHT	;
325)   1BDE 32 89 FE    		 LD (LCD_STSMASK),A	;
326)   1BE1 CD A0 1A    		 CALL LCD16_I2CSEND	;
327)   1BE4 C9          		 RET	;
329)   1BE5 3E 00       		@LCD16_BKLTOFF: LD A, BACKLIGHTPINMASK AND LCD_NOBACKLIGHT	;
330)   1BE7 32 89 FE    		 LD (LCD_STSMASK),A	;
331)   1BEA CD A0 1A    		 CALL LCD16_I2CSEND	;
332)   1BED C9          		 RET	;
 76)   1BEE 0E 03       		 LD C, 11B        ;HIRES TEXT SCREEN	;HIRES TEXT SCREEN
 77)   1BF0 3E 04       		 LD A, VGA_NAVY	;
 78)   1BF2 CB 27       		 SLA A	;
 79)   1BF4 CB 27       		 SLA A	;
 80)   1BF6 CB 27       		 SLA A	;
 81)   1BF8 CB 27       		 SLA A	;
 82)   1BFA 06 0F       		 LD B, VGA_WHITE	;
 83)   1BFC B0          		 OR B	;
 84)   1BFD 47          		 LD B, A	;
 85)   1BFE CD 8C 1C    		 CALL VGA_SETCONF	;
 86)   1C01 C9          		 RET	;
 90)   1C02 F5          		VGA_SETLOWGR: PUSH AF	;
 91)   1C03 CD BE 1C    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
 92)   1C06 0E 00       		 LD C, 00B        ;LOW RES GRAPH SCREEN	;LOW RES GRAPH SCREEN
 93)   1C08 CD 8C 1C    		 CALL VGA_SETCONF	;
 94)   1C0B F1          		 POP AF	;
 95)   1C0C C9          		 RET	;
 98)   1C0D F5          		VGA_SETLOWTX: PUSH AF	;
 99)   1C0E CD BE 1C    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
100)   1C11 0E 01       		 LD C, 01B        ;LOW RES TEXT SCREEN	;LOW RES TEXT SCREEN
101)   1C13 CD 8C 1C    		 CALL VGA_SETCONF	;
102)   1C16 F1          		 POP AF	;
103)   1C17 C9          		 RET	;
105)   1C18 F5          		VGA_SETHIGR: PUSH AF	;
106)   1C19 CD BE 1C    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
107)   1C1C 0E 02       		 LD C, 10B        ;HI RES GRAPH SCREEN	;HI RES GRAPH SCREEN
108)   1C1E CD 8C 1C    		 CALL VGA_SETCONF	;
109)   1C21 F1          		 POP AF	;
110)   1C22 C9          		 RET	;
112)   1C23 F5          		VGA_SETHITX: PUSH AF	;
113)   1C24 CD BE 1C    		 CALL VGA_GETCONF       ;GET CURRENT MODE AND COLORS	;GET CURRENT MODE AND COLORS
114)   1C27 0E 03       		 LD C, 11B        ;HI RES TEXT SCREEN	;HI RES TEXT SCREEN
115)   1C29 CD 8C 1C    		 CALL VGA_SETCONF	;
116)   1C2C F1          		 POP AF	;
117)   1C2D C9          		 RET	;
122)   1C2E 0F          		VGA_SETVISBUFF: RRCA       ;BIT 1 > BIT 7	;BIT 1 > BIT 7
123)   1C2F E5          		 PUSH HL	;
124)   1C30 F5          		 PUSH AF	;
125)   1C31 06 04       		 LD B, 4        ;8000h	;8000h
126)   1C33 CD 80 0E    		 CALL GETPGINBANK	;
127)   1C36 E1          		 POP HL        ;H THE BUFFER	;H THE BUFFER
128)   1C37 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
129)   1C38 E5          		 PUSH HL	;
130)   1C39 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
131)   1C3B CD 5E 0E    		 CALL PUTPGINBANK	;
132)   1C3E 21 F8 1F    		 LD HL, CONFADDR	;
133)   1C41 11 00 80    		 LD DE, $8000	;
134)   1C44 B7          		 OR A	;
135)   1C45 ED 5A       		 ADC HL, DE	;
136)   1C47 C1          		 POP BC        ;B THE BUFFER 0 OR 1	;B THE BUFFER 0 OR 1
137)   1C48 7E          		 LD A,(HL)	;
138)   1C49 1F          		 RRA	;
139)   1C4A CB 18       		 RR B        ;BIT 0 ON CARRY	;BIT 0 ON CARRY
140)   1C4C 17          		 RLA	;
141)   1C4D 77          		 LD (HL),A	;
142)   1C4E F1          		 POP AF        ;PREVIOUS PAGE NO	;PREVIOUS PAGE NO
143)   1C4F 06 04       		 LD B, 4	;
144)   1C51 CD 5E 0E    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
145)   1C54 E1          		 POP HL	;
146)   1C55 C9          		 RET  	;
150)   1C56 E5          		VGA_SWVISBUFF: PUSH HL	;
151)   1C57 06 04       		 LD B, 4        ;8000h	;8000h
152)   1C59 CD 80 0E    		 CALL GETPGINBANK	;
153)   1C5C F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
154)   1C5D 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
155)   1C5F CD 5E 0E    		 CALL PUTPGINBANK	;
156)   1C62 21 F8 1F    		 LD HL, CONFADDR	;
157)   1C65 11 00 80    		 LD DE, $8000	;
158)   1C68 B7          		 OR A	;
159)   1C69 ED 5A       		 ADC HL, DE	;
160)   1C6B 7E          		 LD A, (HL)        ;VIDEO CTRL REG1 VIDEO MODE	;VIDEO CTRL REG1 VIDEO MODE
161)   1C6C CB 7F       		 BIT 7,A 	;
162)   1C6E 28 04       		 JR Z,VSVB_SETBUF1	;
164)   1C70 CB BF       		 RES 7,A	;
165)   1C72 18 02       		 JR VSVB_CONT	;
166)   1C74 CB FF       		VSVB_SETBUF1: SET 7,A       ;SET BIT 7	;SET BIT 7
169)   1C76 77          		VSVB_CONT: LD (HL),A	;
170)   1C77 F1          		 POP AF	;
171)   1C78 06 04       		 LD B, 4	;
172)   1C7A CD 5E 0E    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
173)   1C7D E1          		 POP HL	;
174)   1C7E C9          		 RET  	;
178)   1C7F 32 4A FF    		VGA_SETWRKBUFF: LD (VGABUF),A	;
179)   1C82 C9          		 RET	;
182)   1C83 3A 4A FF    		VGA_SWWRKBUFF: LD A,(VGABUF)	;
183)   1C86 EE 01       		 XOR 1	;
184)   1C88 32 4A FF    		 LD (VGABUF),A	;
185)   1C8B C9          		 RET	;
192)   1C8C E5          		VGA_SETCONF: PUSH HL	;
193)   1C8D C5          		 PUSH BC	;
194)   1C8E 06 04       		 LD B, 4        ;8000h	;8000h
195)   1C90 CD 80 0E    		 CALL GETPGINBANK	;
196)   1C93 C1          		 POP BC	;
197)   1C94 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
198)   1C95 C5          		 PUSH BC        ;SAVE SCREEN CODE	;SAVE SCREEN CODE
199)   1C96 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
200)   1C98 06 04       		 LD B, 4	;
201)   1C9A CD 5E 0E    		 CALL PUTPGINBANK	;
202)   1C9D C1          		 POP BC	;
203)   1C9E 79          		 LD A, C	;
204)   1C9F 21 F8 1F    		 LD HL, CONFADDR	;
205)   1CA2 11 00 80    		 LD DE, $8000	;
206)   1CA5 B7          		 OR A	;
207)   1CA6 ED 5A       		 ADC HL, DE	;
208)   1CA8 77          		 LD (HL), A        ;VIDEO CTRL REG1 VIDEO MODE	;VIDEO CTRL REG1 VIDEO MODE
209)   1CA9 23          		 INC HL	;
210)   1CAA 78          		 LD A, B        ;DEFAULT COLORS	;DEFAULT COLORS
211)   1CAB 77          		 LD (HL), A        ;VIDEO CTRL REG2 VIDEO DEF COLORS	;VIDEO CTRL REG2 VIDEO DEF COLORS
212)   1CAC F1          		 POP AF	;
213)   1CAD C5          		 PUSH BC	;
214)   1CAE 06 04       		 LD B, 4	;
215)   1CB0 CD 5E 0E    		 CALL PUTPGINBANK       ;RESTORE PREVIOUS PAGE	;RESTORE PREVIOUS PAGE
216)   1CB3 C1          		 POP BC	;
217)   1CB4 E1          		 POP HL	;
218)   1CB5 79          		 LD A, C        ;SCREEN MODE	;SCREEN MODE
219)   1CB6 CB 47       		 BIT 0, A	;
220)   1CB8 C2 0D 1E    		 JP NZ, VGA_TXTINIT	;
221)   1CBB C3 59 20    		 JP VGA_GRPHINIT	;
228)   1CBE E5          		VGA_GETCONF: PUSH HL	;
229)   1CBF 06 04       		 LD B, 4        ;8000h	;8000h
230)   1CC1 CD 80 0E    		 CALL GETPGINBANK	;
231)   1CC4 F5          		 PUSH AF        ;SAVE PREVIOUS PAGE	;SAVE PREVIOUS PAGE
232)   1CC5 3E 0B       		 LD A, CONFPG        ;PAGE 11	;PAGE 11
233)   1CC7 CD 5E 0E    		 CALL PUTPGINBANK	;
234)   1CCA 21 F8 1F    		 LD HL, CONFADDR	;
235)   1CCD 11 00 80    		 LD DE, $8000	;
236)   1CD0 B7          		 OR A	;
237)   1CD1 ED 5A       		 ADC HL, DE	;
238)   1CD3 7E          		 LD A, (HL)	;
239)   1CD4 E6 03       		 AND 3        ;KEEP ONLY BITS 0,1	;KEEP ONLY BITS 0,1
240)   1CD6 4F          		 LD C, A        ;SCREEN MODE	;SCREEN MODE
241)   1CD7 23          		 INC HL	;
242)   1CD8 7E          		 LD A, (HL)	;
243)   1CD9 47          		 LD B, A        ;DEFAULT COLORS	;DEFAULT COLORS
244)   1CDA F1          		 POP AF	;
245)   1CDB C5          		 PUSH BC	;
246)   1CDC 06 04       		 LD B, 4	;
247)   1CDE CD 5E 0E    		 CALL PUTPGINBANK	;
248)   1CE1 C1          		 POP BC	;
249)   1CE2 E1          		 POP HL	;
250)   1CE3 79          		 LD A, C	;
251)   1CE4 C9          		 RET	;
258)   1CE5 CD BE 1C    		VGA_CLRSCR: CALL VGA_GETCONF	;
259)   1CE8 CB 47       		 BIT 0,A	;
260)   1CEA C2 13 1E    		 JP NZ,VGA_TXTCLR	;
261)   1CED C3 E3 20    		 JP VGA_GRCLS	;
278)   1CF0 F5          		 PUSH AF        ;SAVE FLAGS	;SAVE FLAGS
279)   1CF1 D1          		 POP DE         ;FLAGS ON DE	;FLAGS ON DE
280)   1CF2 FE 1F       		 CP 31	;
281)   1CF4 DC 0D 1D    		 CALL C, VGA_NOTVISCH	;
282)   1CF7 28 06       		 JR Z, PRCH_EX        ;EXIT IF CHAR WAS HANDLED	;EXIT IF CHAR WAS HANDLED
283)   1CF9 CD 00 1D    		 CALL VGA_DOPRNCH       ;PRINT THE CHAR	;PRINT THE CHAR
284)   1CFC CD 5E 1D    		 CALL VGA_TXFORW       ;TEXT FORWARD	;TEXT FORWARD
286)   1CFF C9          		 RET	;
291)   1D00 67          		VGA_DOPRNCH: LD H, A       ;SAVE A	;SAVE A
292)   1D01 CD BE 1C    		 CALL VGA_GETCONF	;
293)   1D04 CB 47       		 BIT 0, A	;
294)   1D06 7C          		 LD A, H        ;RESTORE A	;RESTORE A
295)   1D07 C2 AB 1E    		 JP NZ, VGA_DOPRNCHTXT       ;NZ MEANS TEXT	;NZ MEANS TEXT
296)   1D0A C3 7D 21    		 JP VGA_DOPRNCHGRP	;
304)   1D0D F5          		VGA_NOTVISCH: PUSH AF	;
305)   1D0E D5          		 PUSH DE	;
306)   1D0F CD 19 1F    		 CALL VGA_RMVCURS      ;REMOVE CURSOR	;REMOVE CURSOR
307)   1D12 D1          		 POP DE	;
308)   1D13 F1          		 POP AF	;
309)   1D14 FE 08       		 CP 8         ;BACKSPACE	;BACKSPACE
310)   1D16 20 18       		 JR NZ, NX1	;
311)   1D18 3A 45 FF    		 LD A, (VGATX_X)	;
312)   1D1B FE 00       		 CP 0         ;COL 0 HAS THE PROMPT	;COL 0 HAS THE PROMPT
313)   1D1D C8          		 RET Z         ;DO NOT PRINT ANYTHING	;DO NOT PRINT ANYTHING
314)   1D1E 3D          		 DEC A	;
315)   1D1F 32 45 FF    		 LD (VGATX_X), A	;
316)   1D22 D5          		 PUSH DE	;
317)   1D23 F1          		 POP AF         ;GET FLAGS BACK	;GET FLAGS BACK
318)   1D24 30 1B       		 JR NC, MVLEFT       ;IF C THEN DELETE THE CHAR ON THE LEFT	;IF C THEN DELETE THE CHAR ON THE LEFT
319)   1D26 3E 20       		 LD A, ' '        ;PRINT SPACE	;PRINT SPACE
320)   1D28 32 49 FF    		 LD (VGATMPC),A	;
321)   1D2B CD 00 1D    		 CALL VGA_DOPRNCH       ;	;
322)   1D2E AF          		 XOR A         ;CLEAR ZERO	;CLEAR ZERO
323)   1D2F C9          		 RET	;
324)   1D30 FE 0A       		NX1: CP 10         ;JUST IGNORE IT	;JUST IGNORE IT
325)   1D32 C8          		 RET Z	;
326)   1D33 FE 0D       		 CP 13         ;CR =NEW LINE	;CR =NEW LINE
327)   1D35 20 11       		 JR NZ, NX2	;
328)   1D37 CD 19 1F    		 CALL VGA_RMVCURS	;
329)   1D3A CD 71 1D    		 CALL VGDOY        ;ADD 1 TO TY	;ADD 1 TO TY
330)   1D3D 32 45 FF    		 LD (VGATX_X), A       ;ZF IS SET	;ZF IS SET
331)   1D40 C9          		 RET	;
332)   1D41 CD DC 1E    		MVLEFT: CALL VGA_GETCHAR	;
333)   1D44 7A          		 LD A, D	;
334)   1D45 32 49 FF    		 LD (VGATMPC),A	;
335)   1D48 AF          		NX2: XOR A         ;NC MEANS WE DON'T PRINT	;NC MEANS WE DON'T PRINT
336)   1D49 C9          		 RET	;
340)   1D4A CD 92 1D    		VGA_PRINT: CALL VGA_GETPAGE	;
341)   1D4D 7E          		VGAP_AGN: LD A, (HL)	;
342)   1D4E FE 00       		 CP 0	;
343)   1D50 28 08       		 JR Z, VGAP_EX	;
344)   1D52 E5          		 PUSH HL	;
345)   1D53 CD F0 1C    		 CALL VGA_PRCH	;
346)   1D56 E1          		 POP HL	;
347)   1D57 23          		 INC HL	;
348)   1D58 18 F3       		 JR VGAP_AGN	;
349)   1D5A CD B4 1D    		VGAP_EX: CALL VGA_RMVPAGE	;
350)   1D5D C9          		 RET	;
353)   1D5E F5          		VGA_TXFORW: PUSH AF	;
354)   1D5F E5          		 PUSH HL	;
355)   1D60 21 47 FF    		 LD HL, VGAMAXX	;
356)   1D63 3A 45 FF    		 LD A, (VGATX_X)	;
357)   1D66 3C          		 INC A	;
358)   1D67 BE          		 CP (HL)	;
359)   1D68 CC 71 1D    		 CALL Z, VGDOY	;
360)   1D6B 32 45 FF    		 LD (VGATX_X), A	;
361)   1D6E E1          		 POP HL	;
362)   1D6F F1          		 POP AF	;
363)   1D70 C9          		 RET	;
364)   1D71 21 48 FF    		VGDOY: LD HL, VGAMAXY	;
365)   1D74 3A 46 FF    		 LD A, (VGATX_Y)	;
366)   1D77 3C          		 INC A	;
367)   1D78 BE          		 CP (HL)	;
368)   1D79 CC 81 1D    		 CALL Z, DOSCRL	;
369)   1D7C 32 46 FF    		 LD (VGATX_Y), A	;
370)   1D7F AF          		 XOR A	;
371)   1D80 C9          		 RET	;
373)   1D81 CD BE 1C    		DOSCRL: CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
374)   1D84 CB 47       		 BIT 0, A	;
375)   1D86 CA 80 21    		 JP Z, DOSCRLGR	;
376)   1D89 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
377)   1D8B CC 99 1F    		 CALL Z, DOSCRL_COL       ;SCROLL COLORS IF BIT 1=0	;SCROLL COLORS IF BIT 1=0
378)   1D8E CD 63 1F    		 CALL DOSCRL_TXT       ;SCROLL TEXT	;SCROLL TEXT
379)   1D91 C9          		 RET	;
389)   1D92 3A 3F FF    		VGA_GETPAGE: LD A, (PGSEM)	;
390)   1D95 3C          		 INC A	;
391)   1D96 32 3F FF    		 LD (PGSEM), A	;
392)   1D99 FE 01       		 CP 1	;
393)   1D9B C0          		 RET NZ	;
394)   1D9C E5          		 PUSH HL	;
395)   1D9D 06 04       		 LD B, 4        ;8000h	;8000h
396)   1D9F CD 80 0E    		 CALL GETPGINBANK	;
397)   1DA2 32 3B FF    		 LD (TMPG), A        ;SAVE OLD PAGE	;SAVE OLD PAGE
398)   1DA5 3A 4A FF    		 LD A,(VGABUF)	;
399)   1DA8 1F          		 RRA         ;PUT BIT 0 ON CARRY FLAG	;PUT BIT 0 ON CARRY FLAG
400)   1DA9 3E 08       		 LD A, 8        ;PAGE 8  IS BUFFER 0	;PAGE 8  IS BUFFER 0
401)   1DAB 30 02       		 JR NC, VGP_SETPG	;
402)   1DAD 3E 0C       		 LD A, 12        ;PAGE 12 IS BUFFER 1	;PAGE 12 IS BUFFER 1
403)   1DAF CD 5E 0E    		VGP_SETPG: CALL PUTPGINBANK	;
404)   1DB2 E1          		 POP HL	;
405)   1DB3 C9          		 RET	;
409)   1DB4 3A 3F FF    		VGA_RMVPAGE: LD A, (PGSEM)	;
410)   1DB7 3D          		 DEC A	;
411)   1DB8 32 3F FF    		 LD (PGSEM), A	;
412)   1DBB FE 00       		 CP 0	;
413)   1DBD C0          		 RET NZ	;
414)   1DBE E5          		 PUSH HL	;
415)   1DBF 06 04       		 LD B, 4	;
416)   1DC1 3A 3B FF    		 LD A, (TMPG)	;
417)   1DC4 CD 5E 0E    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
418)   1DC7 E1          		 POP HL	;
419)   1DC8 C9          		 RET	;
421)   1DC9 CD 92 1D    		VGA_SETFONT: CALL VGA_GETPAGE	;
422)   1DCC 21 00 36    		 LD HL, FONT_ADDR	;
423)   1DCF 11 00 90    		 LD DE, $9000        ;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000	;FONT ADDRESS ON VIDEO MEM AT $1000=4096 ON BANK 4=$8000
424)   1DD2 01 00 0A    		 LD BC, 2560	;
425)   1DD5 ED B0       		 LDIR         ;TRANSFER	;TRANSFER
426)   1DD7 CD B4 1D    		 CALL VGA_RMVPAGE	;
427)   1DDA C9          		 RET	;
430)   1DDB 79          		VGA_SETMAXS: LD A, C	;
431)   1DDC 16 28       		 LD D, 40	;
432)   1DDE 1E 14       		 LD E, 20	;
433)   1DE0 CB 4F       		 BIT 1,A        ;LOW RES MODE	;LOW RES MODE
434)   1DE2 28 04       		 JR Z, VGSM_NX	;
436)   1DE4 16 50       		 LD D, 80	;
437)   1DE6 1E 28       		 LD E, 40	;
438)   1DE8 7A          		VGSM_NX: LD A, D	;
439)   1DE9 32 47 FF    		 LD (VGAMAXX), A	;
440)   1DEC 7B          		 LD A, E	;
441)   1DED 32 48 FF    		 LD (VGAMAXY), A	;
442)   1DF0 C9          		 RET	;
445)   1DF1 AF          		VGA_SETSCRDEFS: XOR A	;
446)   1DF2 32 3F FF    		 LD (PGSEM), A	;
447)   1DF5 32 3B FF    		 LD (TMPG), A	;
448)   1DF8 3E 0B       		 LD A, VGA_YELLOW	;
449)   1DFA 32 43 FF    		 LD (VGAFCOL), A	;
450)   1DFD 3E 04       		 LD A, VGA_NAVY	;
451)   1DFF 32 44 FF    		 LD (VGABCOL), A	;
452)   1E02 CD DB 1D    		 CALL VGA_SETMAXS	;
453)   1E05 AF          		 XOR A	;
454)   1E06 32 45 FF    		 LD (VGATX_X), A	;
455)   1E09 32 46 FF    		 LD (VGATX_Y), A	;
456)   1E0C C9          		 RET	;
458)   1E0D CD F1 1D    		VGA_TXTINIT: CALL VGA_SETSCRDEFS	;
459)   1E10 CD C9 1D    		 CALL VGA_SETFONT       ;SET THE FONT ON VIDEO MEM	;SET THE FONT ON VIDEO MEM
462)   1E13 3A 47 FF    		VGA_TXTCLR: LD A, (VGAMAXX)	;
463)   1E16 67          		 LD H, A	;
464)   1E17 3A 48 FF    		 LD A, (VGAMAXY)	;
465)   1E1A 5F          		 LD E, A	;
466)   1E1B CD F4 31    		 CALL MULT8	;
467)   1E1E E5          		 PUSH HL	;
468)   1E1F CD 92 1D    		 CALL VGA_GETPAGE	;
469)   1E22 CD BE 1C    		 CALL VGA_GETCONF	;
470)   1E25 C1          		 POP BC         ;TOTAL BYTES	;TOTAL BYTES
471)   1E26 CB 4F       		 BIT 1, A	;
472)   1E28 28 0E       		 JR Z, ISLOWRES	;
474)   1E2A 21 00 80    		 LD HL, $8000	;
475)   1E2D 3E 20       		 LD A, 32	;
476)   1E2F 77          		 LD (HL), A	;
477)   1E30 11 01 80    		 LD DE, $8001	;
478)   1E33 ED B0       		 LDIR	;
479)   1E35 C3 5D 1E    		 JP VGAC_EXIT	;
481)   1E38 21 00 80    		ISLOWRES: LD HL, $8000       ;BANK4	;BANK4
482)   1E3B 11 00 84    		 LD DE, $8400        ;COLOR INFO	;COLOR INFO
483)   1E3E C3 4D 1E    		 JP VGAC_AGN	;
488)   1E41 CD 92 1D    		VGA_CLR: CALL VGA_GETPAGE	;
489)   1E44 01 20 03    		 LD BC, 800	;
490)   1E47 21 00 80    		 LD HL, $8000        ;DEL CHARS	;DEL CHARS
491)   1E4A 11 00 84    		 LD DE, $8400	;
494)   1E4D 3E 20       		VGAC_AGN: LD A, 32	;
495)   1E4F 77          		 LD (HL), A	;
496)   1E50 C5          		 PUSH BC	;
497)   1E51 CD 72 1E    		 CALL VGA_GETCOL	;
498)   1E54 C1          		 POP BC	;
499)   1E55 12          		 LD (DE), A	;
500)   1E56 23          		 INC HL	;
501)   1E57 13          		 INC DE	;
502)   1E58 0B          		 DEC BC	;
503)   1E59 78          		 LD A, B	;
504)   1E5A B1          		 OR C	;
505)   1E5B 20 F0       		 JR NZ, VGAC_AGN	;
506)   1E5D AF          		VGAC_EXIT: XOR A	;
507)   1E5E 32 45 FF    		 LD (VGATX_X), A	;
508)   1E61 32 46 FF    		 LD (VGATX_Y), A	;
509)   1E64 CD B4 1D    		 CALL VGA_RMVPAGE	;
510)   1E67 C9          		 RET	;
514)   1E68 CB 20       		VGA_MIXCOLOR: SLA B	;
515)   1E6A CB 20       		 SLA B	;
516)   1E6C CB 20       		 SLA B	;
517)   1E6E CB 20       		 SLA B	;
518)   1E70 B0          		 OR B         ;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR	;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR
519)   1E71 C9          		 RET	;
523)   1E72 3A 44 FF    		VGA_GETCOL: LD A, (VGABCOL)      ;GET COLOR INFO	;GET COLOR INFO
524)   1E75 47          		 LD B, A	;
525)   1E76 3A 43 FF    		 LD A, (VGAFCOL)	;
526)   1E79 CD 68 1E    		 CALL VGA_MIXCOLOR	;
527)   1E7C C9          		 RET	;
531)   1E7D F5          		VGA_SETCOL: PUSH AF	;
532)   1E7E E6 0F       		 AND $0F	;
533)   1E80 32 43 FF    		 LD (VGAFCOL), A       ;SET COLOR INFO	;SET COLOR INFO
534)   1E83 F1          		 POP AF	;
535)   1E84 CB 27       		 SLA A	;
536)   1E86 CB 27       		 SLA A	;
537)   1E88 CB 27       		 SLA A	;
538)   1E8A CB 27       		 SLA A	;
539)   1E8C E6 0F       		 AND $0F	;
540)   1E8E 32 44 FF    		 LD (VGABCOL), A       ;SET BACK COLOR	;SET BACK COLOR
541)   1E91 C9          		 RET	;
548)   1E92 F5          		VGA_CALC_VIDAD: PUSH AF	;
549)   1E93 3A 46 FF    		 LD A, (VGATX_Y)	;
550)   1E96 67          		 LD H, A 	;
551)   1E97 3A 47 FF    		 LD A, (VGAMAXX)	;
552)   1E9A 5F          		 LD E, A  	;
553)   1E9B CD F4 31    		 CALL Mult8	;
554)   1E9E 11 00 80    		 LD DE, $8000	;
555)   1EA1 19          		 ADD HL,DE	;
557)   1EA2 16 00       		 LD D, 0	;
558)   1EA4 3A 45 FF    		 LD A, (VGATX_X)	;
559)   1EA7 5F          		 LD E, A	;
560)   1EA8 19          		 ADD HL, DE	;
561)   1EA9 F1          		 POP AF	;
562)   1EAA C9          		 RET	;
566)   1EAB E5          		VGA_DOPRNCHTXT: PUSH HL	;
567)   1EAC F5          		 PUSH AF	;
568)   1EAD CD 92 1D    		 CALL VGA_GETPAGE	;
569)   1EB0 CD 92 1E    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
570)   1EB3 F1          		 POP AF	;
571)   1EB4 77          		 LD (HL), A        ;PUT CHAR ON SCREEN	;PUT CHAR ON SCREEN
572)   1EB5 E5          		 PUSH HL	;
573)   1EB6 CD BE 1C    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
574)   1EB9 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
575)   1EBB E1          		 POP HL	;
576)   1EBC 20 08       		 JR NZ, DPC_EX	;
577)   1EBE 11 00 04    		 LD DE, $400	;
578)   1EC1 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
579)   1EC2 CD 72 1E    		 CALL VGA_GETCOL       ;GET CURRENT COLOR	;GET CURRENT COLOR
580)   1EC5 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
581)   1EC6 E1          		DPC_EX: POP HL	;
582)   1EC7 CD B4 1D    		 CALL VGA_RMVPAGE	;
583)   1ECA C9          		 RET	;
587)   1ECB F5          		VGA_DOCHCLR: PUSH AF	;
588)   1ECC CD 92 1D    		 CALL VGA_GETPAGE	;
589)   1ECF CD 92 1E    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDRESS	;CALC VIDEO ADDRESS
590)   1ED2 11 00 04    		 LD DE, $400	;
591)   1ED5 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
592)   1ED6 F1          		 POP AF	;
593)   1ED7 77          		 LD (HL), A        ;PUT COLOR INFO ON SCREEN	;PUT COLOR INFO ON SCREEN
594)   1ED8 CD B4 1D    		 CALL VGA_RMVPAGE	;
595)   1EDB C9          		 RET	;
598)   1EDC CD BE 1C    		VGA_GETCHAR: CALL VGA_GETCONF      ;GET SCREEEN MODE	;GET SCREEEN MODE
599)   1EDF CB 47       		 BIT 0,A	;
600)   1EE1 20 07       		 JR NZ,GC_DOIT       ;IF TEXT DOIT	;IF TEXT DOIT
602)   1EE3 16 93       		 LD D,  147 ;' '	;' '
603)   1EE5 3A 44 FF    		 LD A,(VGABCOL)	;
604)   1EE8 5F          		 LD E,A	;
605)   1EE9 C9          		 RET	;
606)   1EEA CD 92 1D    		GC_DOIT: CALL VGA_GETPAGE	;
607)   1EED CD 92 1E    		 CALL VGA_CALC_VIDAD       ;CALC VIDEO ADDR ON HL	;CALC VIDEO ADDR ON HL
608)   1EF0 7E          		 LD A, (HL)	;
609)   1EF1 F5          		 PUSH AF	;
610)   1EF2 CD BE 1C    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
611)   1EF5 FE 03       		 CP 3  ;TEXT HI      ; CHECK IF HIRES SO NO COLOR INFO	;TEXT HI      ; CHECK IF HIRES SO NO COLOR INFO
612)   1EF7 D1          		 POP DE        ;AF ON DE TO PRESERVE FLAG  	;AF ON DE TO PRESERVE FLAG
613)   1EF8 28 0A       		 JR Z, GC_NOCOL	;
614)   1EFA 7A          		 LD A, D	;
615)   1EFB 11 00 04    		 LD DE, $400  ;TEXT LOW	;TEXT LOW
616)   1EFE 19          		 ADD HL, DE        ;CALC COLOR ADDRESS	;CALC COLOR ADDRESS
617)   1EFF 57          		 LD D, A        ;THE CHAR	;THE CHAR
618)   1F00 7E          		 LD A, (HL)       ;THE COLOR	;THE COLOR
619)   1F01 5F          		 LD E, A	;
620)   1F02 18 02       		 JR GC_EX	;
622)   1F04 1E 00       		 LD E, 0	;
623)   1F06 62          		GC_EX: LD H,D	;
624)   1F07 6B          		 LD L,E	;
625)   1F08 CD B4 1D    		 CALL VGA_RMVPAGE	;
626)   1F0B 54          		 LD D,H	;
627)   1F0C 5D          		 LD E,L	;
628)   1F0D C9          		 RET	;
631)   1F0E BB          		VGA_REVRCOLRS: CP E	;
632)   1F0F C8          		 RET Z	;
633)   1F10 7B          		 LD A, E	;
634)   1F11 0F          		 RRCA         ;CHANGE FORE AND BACK COLOR INFO	;CHANGE FORE AND BACK COLOR INFO
635)   1F12 0F          		 RRCA	;
636)   1F13 0F          		 RRCA	;
637)   1F14 0F          		 RRCA	;
638)   1F15 CD CB 1E    		 CALL VGA_DOCHCLR     ;CHANGE THE COLOR OF THE CHAR	;CHANGE THE COLOR OF THE CHAR
639)   1F18 C9          		 RET	;
641)   1F19 CD BE 1C    		VGA_RMVCURS: CALL VGA_GETCONF      ;GET SCREEEN MODE	;GET SCREEEN MODE
642)   1F1C CB 47       		 BIT 0,A	;
643)   1F1E 28 04       		 JR Z, RC_GR       ;IF GRAPHICS	;IF GRAPHICS
644)   1F20 CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO	; CHECK IF HIRES SO NO COLOR INFO
645)   1F22 28 05       		 JR Z, RC_LOW	;
646)   1F24 3A 49 FF    		RC_GR: LD A, (VGATMPC)	;
647)   1F27 18 0A       		 JR RC_EX	;
648)   1F29 CD DC 1E    		RC_LOW: CALL VGA_GETCHAR      ;GET CURRENT COLORS	;GET CURRENT COLORS
649)   1F2C CD 72 1E    		 CALL VGA_GETCOL       ;GET DEFAULT COLORS	;GET DEFAULT COLORS
650)   1F2F CD 0E 1F    		 CALL VGA_REVRCOLRS      ;REVERSE IF NECESSARY	;REVERSE IF NECESSARY
651)   1F32 C9          		 RET	;
652)   1F33 CD 00 1D    		RC_EX: CALL VGA_DOPRNCH	;
653)   1F36 C9          		 RET	;
654)   1F37 CD DC 1E    		VGA_PRNCURS: CALL VGA_GETCHAR      ; E HAS THE COLOR INFO	; E HAS THE COLOR INFO
655)   1F3A D5          		 PUSH DE	;
656)   1F3B CD BE 1C    		 CALL VGA_GETCONF       ;GET SCREEEN MODE	;GET SCREEEN MODE
657)   1F3E D1          		 POP DE	;
658)   1F3F CB 4F       		 BIT 1, A        ; CHECK IF HIRES SO NO COLOR INFO  	; CHECK IF HIRES SO NO COLOR INFO
659)   1F41 20 13       		 JR NZ, PC_NOCOL	;
660)   1F43 CB 47       		 BIT 0,A        ;CHECK IF GRAPH SO NO TEXT COLOR INFO	;CHECK IF GRAPH SO NO TEXT COLOR INFO
661)   1F45 28 0B       		 JR Z, PC_LORESGR	;
662)   1F47 CD 72 1E    		 CALL VGA_GETCOL       ;GET CURRENT COLORS	;GET CURRENT COLORS
663)   1F4A 0F          		 RRCA        ;REVERSE BACK & FORE	;REVERSE BACK & FORE
664)   1F4B 0F          		 RRCA	;
665)   1F4C 0F          		 RRCA	;
666)   1F4D 0F          		 RRCA	;
667)   1F4E CD 0E 1F    		 CALL VGA_REVRCOLRS      ;LOWRES TEXT REVERSE COLORS	;LOWRES TEXT REVERSE COLORS
668)   1F51 C9          		 RET	;
669)   1F52 3E 93       		PC_LORESGR: LD A, VGA_CURSCHAR	;
670)   1F54 18 09       		 JR PC_EX	;
671)   1F56 7A          		PC_NOCOL: LD A,D	;
672)   1F57 FE 93       		 CP VGA_CURSCHAR	;
673)   1F59 C8          		 RET Z        ;ALREADY PRINTED	;ALREADY PRINTED
674)   1F5A 32 49 FF    		 LD (VGATMPC), A	;
675)   1F5D 3E 93       		 LD A, VGA_CURSCHAR        ;'_'	;'_'
676)   1F5F CD 00 1D    		PC_EX: CALL VGA_DOPRNCH  	;
677)   1F62 C9          		 RET	;
682)   1F63 CD 92 1D    		DOSCRL_TXT: CALL VGA_GETPAGE	;
683)   1F66 3A 47 FF    		 LD A, (VGAMAXX)	;
684)   1F69 26 00       		 LD H, 0	;
685)   1F6B 6F          		 LD L, A	;
686)   1F6C 11 00 80    		 LD DE, $8000	;
687)   1F6F 19          		 ADD HL, DE	;
689)   1F70 E5          		 PUSH HL	;
690)   1F71 D5          		 PUSH DE	;
692)   1F72 67          		 LD H, A	;
693)   1F73 3A 48 FF    		 LD A, (VGAMAXY)	;
694)   1F76 3D          		 DEC A	;
695)   1F77 5F          		 LD E, A	;
696)   1F78 CD F4 31    		 CALL Mult8	;
697)   1F7B 44          		 LD B, H	;
698)   1F7C 4D          		 LD C, L	;
699)   1F7D D1          		 POP DE	;
700)   1F7E E1          		 POP HL	;
701)   1F7F C5          		 PUSH BC	;
702)   1F80 ED B0       		 LDIR         ;SCROLL UP 39 LINES	;SCROLL UP 39 LINES
703)   1F82 D1          		 POP DE        ;DE = BC	;DE = BC
704)   1F83 21 00 80    		 LD HL, $8000	;
705)   1F86 19          		 ADD HL, DE        ;LINE 39 OR 19 ADDRESS TO BE CLEARED (0-39) (0-19)	;LINE 39 OR 19 ADDRESS TO BE CLEARED (0-39) (0-19)
706)   1F87 3A 47 FF    		 LD A, (VGAMAXX)       ;80 OR 40	;80 OR 40
707)   1F8A 47          		 LD B, A	;
708)   1F8B 3E 20       		 LD A, 32	;
709)   1F8D 77          		DST_AGN: LD (HL), A	;
710)   1F8E 23          		 INC HL	;
711)   1F8F 10 FC       		 DJNZ DST_AGN	;
712)   1F91 CD B4 1D    		 CALL VGA_RMVPAGE	;
713)   1F94 3A 48 FF    		 LD A, (VGAMAXY)	;
714)   1F97 3D          		 DEC A	;
715)   1F98 C9          		 RET	;
717)   1F99 CD 92 1D    		DOSCRL_COL: CALL VGA_GETPAGE	;
718)   1F9C 21 28 84    		 LD HL, $8428        ;LINE 1	;LINE 1
719)   1F9F 11 00 84    		 LD DE, $8400        ;LINE 0	;LINE 0
720)   1FA2 01 F8 02    		 LD BC, 800 - 40       ;BYTES TO SCROLL UP	;BYTES TO SCROLL UP
721)   1FA5 ED B0       		 LDIR	;
722)   1FA7 CD 72 1E    		 CALL VGA_GETCOL       ;SET DEFAULT COLOR	;SET DEFAULT COLOR
723)   1FAA 21 F8 86    		 LD HL, $86F8        ;LINE 19 = LAST LINE	;LINE 19 = LAST LINE
724)   1FAD 06 28       		 LD B, 40	;
725)   1FAF 77          		DOS_AGNCL: LD (HL), A       ;CLEAR LAST LINE	;CLEAR LAST LINE
726)   1FB0 23          		 INC HL	;
727)   1FB1 10 FC       		 DJNZ DOS_AGNCL	;
728)   1FB3 CD B4 1D    		 CALL VGA_RMVPAGE	;
729)   1FB6 C9          		 RET	;
739)   1FB7 3A 3F FF    		 LD A, (PGSEM)	;
740)   1FBA 3C          		 INC A	;
741)   1FBB 32 3F FF    		 LD (PGSEM), A	;
742)   1FBE FE 01       		 CP 1	;
743)   1FC0 C0          		 RET NZ	;
744)   1FC1 E5          		 PUSH HL	;
745)   1FC2 06 02       		 LD B, 2        ;4000h	;4000h
746)   1FC4 CD 80 0E    		 CALL GETPGINBANK	;
747)   1FC7 32 3B FF    		 LD (TMPG), A	;
748)   1FCA 06 03       		 LD B, 3        ;6000h	;6000h
749)   1FCC CD 80 0E    		 CALL GETPGINBANK	;
750)   1FCF 32 3C FF    		 LD (TMPG + 1), A	;
751)   1FD2 3A 4A FF    		 LD A,(VGABUF)	;
752)   1FD5 1F          		 RRA        ;PUT SCREEN BUF ON CARRY FLAG	;PUT SCREEN BUF ON CARRY FLAG
753)   1FD6 38 10       		 JR C,VSPL_SETBUFONE	;
755)   1FD8 3E 08       		 LD A, 8	;
756)   1FDA 06 02       		 LD B, 2	;
757)   1FDC CD 5E 0E    		 CALL PUTPGINBANK	;
759)   1FDF 3E 09       		 LD A, 9	;
760)   1FE1 06 03       		 LD B, 3	;
761)   1FE3 CD 5E 0E    		 CALL PUTPGINBANK	;
762)   1FE6 E1          		 POP HL	;
763)   1FE7 C9          		 RET	;
765)   1FE8 3E 0C       		 LD A, 12	;
766)   1FEA 06 02       		 LD B, 2	;
767)   1FEC CD 5E 0E    		 CALL PUTPGINBANK	;
769)   1FEF 3E 0D       		 LD A, 13	;
770)   1FF1 06 03       		 LD B, 3	;
771)   1FF3 CD 5E 0E    		 CALL PUTPGINBANK	;
772)   1FF6 E1          		 POP HL	;
773)   1FF7 C9          		 RET	;
780)   1FF8 3A 3F FF    		 LD A, (PGSEM)	;
781)   1FFB 3C          		 INC A	;
782)   1FFC 32 3F FF    		 LD (PGSEM), A	;
783)   1FFF FE 01       		 CP 1	;
784)   2001 C0          		 RET NZ	;
785)   2002 E5          		 PUSH HL	;
786)   2003 06 02       		 LD B, 2        ;4000h	;4000h
787)   2005 CD 80 0E    		 CALL GETPGINBANK	;
788)   2008 32 3B FF    		 LD (TMPG), A	;
789)   200B 06 03       		 LD B, 3        ;6000h	;6000h
790)   200D CD 80 0E    		 CALL GETPGINBANK	;
791)   2010 32 3C FF    		 LD (TMPG + 1), A	;
792)   2013 3A 4A FF    		 LD A,(VGABUF)	;
793)   2016 1F          		 RRA        ;PUT SCREEN BUF ON CARRY FLAG	;PUT SCREEN BUF ON CARRY FLAG
794)   2017 38 10       		 JR C,VSPH_SETBUFONE	;
796)   2019 3E 0A       		 LD A, 10	;
797)   201B 06 02       		 LD B, 2	;
798)   201D CD 5E 0E    		 CALL PUTPGINBANK	;
800)   2020 3E 0B       		 LD A, 11	;
801)   2022 06 03       		 LD B, 3	;
802)   2024 CD 5E 0E    		 CALL PUTPGINBANK	;
803)   2027 E1          		 POP HL	;
804)   2028 C9          		 RET	;
806)   2029 3E 0E       		 LD A, 14	;
807)   202B 06 02       		 LD B, 2	;
808)   202D CD 5E 0E    		 CALL PUTPGINBANK	;
810)   2030 3E 0F       		 LD A, 15	;
811)   2032 06 03       		 LD B, 3	;
812)   2034 CD 5E 0E    		 CALL PUTPGINBANK	;
813)   2037 E1          		 POP HL	;
814)   2038 C9          		 RET	;
819)   2039 3A 3F FF    		VGA_RMVGRPG: LD A, (PGSEM)	;
820)   203C FE 00       		 CP 0	;
821)   203E C8          		 RET Z	;
822)   203F 3D          		 DEC A	;
823)   2040 32 3F FF    		 LD (PGSEM), A	;
824)   2043 FE 00       		 CP 0	;
825)   2045 C0          		 RET NZ	;
826)   2046 E5          		 PUSH HL	;
827)   2047 06 02       		 LD B, 2	;
828)   2049 3A 3B FF    		 LD A, (TMPG)	;
829)   204C CD 5E 0E    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
830)   204F 06 03       		 LD B, 3	;
831)   2051 3A 3C FF    		 LD A, (TMPG + 1)	;
832)   2054 CD 5E 0E    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
833)   2057 E1          		 POP HL	;
834)   2058 C9          		 RET	;
837)   2059 CD F1 1D    		VGA_GRPHINIT: CALL VGA_SETSCRDEFS     ;SET SCREEN DEFAULTS	;SET SCREEN DEFAULTS
838)   205C CD E3 20    		 CALL VGA_GRCLS	;
839)   205F AF          		 XOR A	;
840)   2060 C9          		 RET	;
846)   2061 F5          		VGA_CHECKXY32: PUSH AF	;
847)   2062 E5          		 PUSH HL	;
848)   2063 D5          		 PUSH DE	;
849)   2064 B7          		 OR A	;
850)   2065 11 40 01    		 LD DE, 320	;
851)   2068 ED 52       		 SBC HL, DE	;
852)   206A 30 0F       		 JR NC, CXY3_ABEX	;
853)   206C D1          		 POP DE	;
854)   206D D5          		 PUSH DE	;
855)   206E EB          		 EX DE, HL	;
856)   206F 11 C8 00    		 LD DE, 200	;
857)   2072 ED 52       		 SBC HL, DE	;
858)   2074 30 05       		 JR NC, CXY3_ABEX	;
859)   2076 D1          		 POP DE	;
860)   2077 E1          		 POP HL	;
861)   2078 F1          		 POP AF	;
862)   2079 37          		 SCF         ;RETURN WITH C SET	;RETURN WITH C SET
863)   207A C9          		 RET	;
865)   207B D1          		CXY3_ABEX: POP DE        	;
866)   207C E1          		 POP HL	;
867)   207D F1          		 POP AF	;
868)   207E B7          		 OR A	;
869)   207F C9          		 RET         ;RETURN WITH NC  	;RETURN WITH NC
875)   2080 CD 61 20    		VGA_PLTPXL32: CALL VGA_CHECKXY32     ;CHECK BOUNDS	;CHECK BOUNDS
876)   2083 D0          		 RET NC	;
877)   2084 E5          		 PUSH HL        ;CHECK BOUNDS	;CHECK BOUNDS
878)   2085 F5          		 PUSH AF	;
879)   2086 7B          		 LD A, E	;
880)   2087 FE 66       		 CP 102	;
881)   2089 38 27       		 JR C, PPNXT0        ;LESS THAN 102	;LESS THAN 102
882)   208B 20 16       		 JR NZ, NXTBNK        ;MORE THAN 102	;MORE THAN 102
883)   208D E5          		 PUSH HL        ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES	;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
884)   208E 01 80 00    		 LD BC, 128	;
885)   2091 B7          		 OR A	;
886)   2092 ED 42       		 SBC HL, BC	;
887)   2094 47          		 LD B, A	;
888)   2095 7C          		 LD A, H	;
889)   2096 B7          		 OR A         ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128	; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
890)   2097 78          		 LD A, B	;
891)   2098 E1          		 POP HL	;
892)   2099 20 17       		 JR NZ, PPNXT0	;
894)   209B 3E 67       		 LD A, 103        ;WE ARE AT LINE ZERO ON 2ND BANK	;WE ARE AT LINE ZERO ON 2ND BANK
895)   209D 11 40 01    		 LD DE, 129 + 191	;
896)   20A0 B7          		 OR A	;
897)   20A1 ED 52       		 SBC HL, DE        ;	;
898)   20A3 D6 67       		NXTBNK: SUB 103        ;SKIP 102 ROWS	;SKIP 102 ROWS
899)   20A5 11 C0 00    		 LD DE, 192        ;320-128	;320-128
900)   20A8 B7          		 OR A	;
901)   20A9 ED 5A       		 ADC HL, DE	;
902)   20AB F5          		 PUSH AF	;
904)   20AC CD F8 1F    		 CALL VGA_SETGRPGHI	;
906)   20AF F1          		 POP AF         ;A HAS THE ROWS ON 2ND 16K	;A HAS THE ROWS ON 2ND 16K
907)   20B0 18 05       		 JR PPNXT1	;
908)   20B2 F5          		PPNXT0: PUSH AF        ;A=E=ROW=Y	;A=E=ROW=Y
909)   20B3 CD B7 1F    		 CALL VGA_SETGRPGLO	;
910)   20B6 F1          		 POP AF	;
911)   20B7 11 00 40    		PPNXT1: LD DE, BASEADDR	;
913)   20BA CB 3C       		 SRL H	;
914)   20BC CB 1D       		 RR L	;
915)   20BE 19          		 ADD HL, DE        ;FIND COLUMN	;FIND COLUMN
916)   20BF E5          		 PUSH HL	;
917)   20C0 11 A0 00    		 LD DE, 160	;
919)   20C3 CD 00 32    		 CALL Mult12	;
920)   20C6 D1          		 POP DE	;
921)   20C7 19          		 ADD HL, DE	;
922)   20C8 C1          		DOPLOTPX: POP BC        ;B HAS THE COLOR	;B HAS THE COLOR
923)   20C9 D1          		 POP DE         ;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL
924)   20CA 7E          		 LD A, (HL)        ;GET PIXEL BYTE	;GET PIXEL BYTE
925)   20CB CB 43       		 BIT 0, E        ;CHECK X IS EVEN OR ODD	;CHECK X IS EVEN OR ODD
926)   20CD 28 04       		 JR Z, DOEVEN        ;EVEN	;EVEN
928)   20CF E6 F0       		 AND $F0        ;CLEAR RIGHT 4 BITS	;CLEAR RIGHT 4 BITS
929)   20D1 18 0A       		 JR DPEXIT	;
931)   20D3 CB 00       		DOEVEN: RLC B	;
932)   20D5 CB 00       		 RLC B	;
933)   20D7 CB 00       		 RLC B	;
934)   20D9 CB 00       		 RLC B	;
935)   20DB E6 0F       		 AND $0F        ;ZERO LEFT	;ZERO LEFT
936)   20DD B0          		DPEXIT: OR B         ;MIX PIXELS	;MIX PIXELS
937)   20DE 77          		 LD (HL), A	;
938)   20DF CD 39 20    		 CALL VGA_RMVGRPG	;
939)   20E2 C9          		 RET	;
942)   20E3 CD B7 1F    		VGA_GRCLS: CALL VGA_SETGRPGLO	;
943)   20E6 21 00 40    		 LD HL, BASEADDR	;
944)   20E9 11 01 40    		 LD DE, BASEADDR + 1	;
945)   20EC 01 FF 3F    		 LD BC, 16384 - 1       ;BYTES ON 1ST 16K	;BYTES ON 1ST 16K
946)   20EF AF          		 XOR A	;
947)   20F0 77          		 LD (HL), A	;
948)   20F1 ED B0       		 LDIR         ;RED - RED	;RED - RED
950)   20F3 CD 39 20    		 CALL VGA_RMVGRPG	;
951)   20F6 CD F8 1F    		 CALL VGA_SETGRPGHI	;
952)   20F9 21 00 40    		 LD HL, BASEADDR	;
953)   20FC 11 01 40    		 LD DE, BASEADDR + 1	;
954)   20FF 01 FF 3C    		 LD BC, 15616 - 1       ;BYTES ON 2ND 16K	;BYTES ON 2ND 16K
955)   2102 AF          		 XOR A	;
956)   2103 77          		 LD (HL), A	;
957)   2104 ED B0       		 LDIR	;
958)   2106 CD 39 20    		 CALL VGA_RMVGRPG	;
959)   2109 AF          		 XOR A        ;RESET TEXT COORDS	;RESET TEXT COORDS
960)   210A 32 45 FF    		 LD (VGATX_X), A	;
961)   210D 32 46 FF    		 LD (VGATX_Y), A	;
962)   2110 C9          		 RET         ;TO MENU	;TO MENU
964)   2111 C5          		FILLBTS: PUSH BC	;
965)   2112 12          		AGN1: LD (DE), A	;
966)   2113 13          		 INC DE	;
967)   2114 0B          		 DEC BC	;
968)   2115 67          		 LD H, A	;
969)   2116 78          		 LD A, B	;
970)   2117 B1          		 OR C	;
971)   2118 7C          		 LD A, H	;
972)   2119 20 F7       		 JR NZ, AGN1	;
973)   211B 2D          		 DEC L	;
974)   211C 7D          		 LD A, L	;
975)   211D B7          		 OR A	;
976)   211E 7C          		 LD A, H	;
977)   211F C1          		 POP BC	;
978)   2120 20 EF       		 JR NZ, FILLBTS	;
979)   2122 C9          		 RET	;
985)   2123 E5          		VGA_GETPXL32: PUSH HL	;
986)   2124 F5          		 PUSH AF	;
987)   2125 7B          		 LD A, E	;
988)   2126 FE 66       		 CP 102	;
989)   2128 38 25       		 JR C, GPNXT0        ;LESS THAN 102	;LESS THAN 102
990)   212A 20 16       		 JR NZ, GPNXTBNK       ;MORE THAN 102	;MORE THAN 102
991)   212C E5          		 PUSH HL        ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES	;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
992)   212D 01 80 00    		 LD BC, 128	;
993)   2130 B7          		 OR A	;
994)   2131 ED 42       		 SBC HL, BC	;
995)   2133 47          		 LD B, A	;
996)   2134 7C          		 LD A, H	;
997)   2135 B7          		 OR A         ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128	; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
998)   2136 78          		 LD A, B	;
999)   2137 E1          		 POP HL	;
1000)   2138 20 15       		 JR NZ, GPNXT0	;
1002)   213A 3E 67       		 LD A, 103        ;WE ARE AT LINE ZERO ON 2ND BANK	;WE ARE AT LINE ZERO ON 2ND BANK
1003)   213C 11 40 01    		 LD DE, 129 + 191	;
1004)   213F B7          		 OR A	;
1005)   2140 ED 52       		 SBC HL, DE        ;	;
1006)   2142 D6 67       		GPNXTBNK: SUB 103       ;SKIP 102 ROWS	;SKIP 102 ROWS
1007)   2144 11 C0 00    		 LD DE, 192        ;320-128	;320-128
1008)   2147 19          		 ADD HL, DE	;
1009)   2148 F5          		 PUSH AF	;
1011)   2149 CD F8 1F    		 CALL VGA_SETGRPGHI	;
1013)   214C F1          		 POP AF         ;A HAS THE ROWS ON 2ND 16K	;A HAS THE ROWS ON 2ND 16K
1014)   214D 18 05       		 JR GPNXT1	;
1015)   214F F5          		GPNXT0: PUSH AF        ;A=E=ROW=Y	;A=E=ROW=Y
1016)   2150 CD B7 1F    		 CALL VGA_SETGRPGLO	;
1017)   2153 F1          		 POP AF	;
1018)   2154 11 00 40    		GPNXT1: LD DE, BASEADDR	;
1020)   2157 CB 3C       		 SRL H	;
1021)   2159 CB 1D       		 RR L	;
1022)   215B 19          		 ADD HL, DE        ;FIND COLUMN	;FIND COLUMN
1023)   215C 11 A0 00    		 LD DE, 160	;
1024)   215F CD 00 32    		 CALL Mult12        ;HL=A*DE	;HL=A*DE
1025)   2162 C1          		GPDOGETPX: POP BC        ;B HAS THE COLOR	;B HAS THE COLOR
1026)   2163 D1          		 POP DE         ;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL
1027)   2164 7E          		 LD A, (HL)        ;GET PIXEL BYTE	;GET PIXEL BYTE
1028)   2165 CB 43       		 BIT 0, E        ;CHECK X IS EVEN OR ODD	;CHECK X IS EVEN OR ODD
1029)   2167 28 04       		 JR Z, GPDOEVEN        ;EVEN	;EVEN
1031)   2169 E6 0F       		 AND $0F        ;CLEAR LEFT 4 BITS	;CLEAR LEFT 4 BITS
1032)   216B 18 0A       		 JR GPDPEXIT	;
1034)   216D CB 07       		GPDOEVEN: RLC A	;
1035)   216F CB 07       		 RLC A	;
1036)   2171 CB 07       		 RLC A	;
1037)   2173 CB 07       		 RLC A	;
1038)   2175 E6 0F       		 AND $0F        ;ZERO LEFT	;ZERO LEFT
1039)   2177 F5          		GPDPEXIT: PUSH AF       ;SAVE PIXEL	;SAVE PIXEL
1040)   2178 CD 39 20    		 CALL VGA_RMVGRPG	;
1041)   217B F1          		 POP AF         ;RESTORE PIXEL	;RESTORE PIXEL
1042)   217C C9          		 RET	;
1047)   217D C3 86 22    		VGA_DOPRNCHGRP: JP VGA_PRNGRCH	;
1055)   2180 C9          		 RET	;
1061)   2181 06 02       		SETGRAPHPGS: LD B, 2	;
1062)   2183 3A 3F FF    		 LD A, (PGSEM)        ;PG SEM FOR ALL 4 PAGES	;PG SEM FOR ALL 4 PAGES
1063)   2186 3C          		 INC A	;
1064)   2187 32 3F FF    		 LD (PGSEM), A	;
1065)   218A FE 01       		 CP 1	;
1066)   218C C0          		 RET NZ	;
1067)   218D E5          		 PUSH HL	;
1068)   218E 0E 04       		 LD C, 4	;
1069)   2190 21 3B FF    		 LD HL, TMPG	;
1070)   2193 C5          		 PUSH BC	;
1071)   2194 E5          		SGP_NXT: PUSH HL	;
1072)   2195 CD 80 0E    		 CALL GETPGINBANK	;
1073)   2198 E1          		 POP HL	;
1074)   2199 77          		 LD (HL), A	;
1075)   219A 23          		 INC HL	;
1076)   219B 04          		 INC B	;
1077)   219C 0D          		 DEC C	;
1078)   219D 20 F5       		 JR NZ, SGP_NXT	;
1079)   219F C1          		 POP BC	;
1080)   21A0 0E 04       		 LD C, 4	;
1081)   21A2 3A 4A FF    		 LD A,(VGABUF)	;
1082)   21A5 1F          		 RRA	;
1083)   21A6 3E 08       		 LD A, 8       ;BUFFER 0	;BUFFER 0
1084)   21A8 30 02       		 JR NC, SGP_NXT2	;
1085)   21AA 3E 0C       		 LD A, 12      ;BUFFER 1	;BUFFER 1
1088)   21AC C5          		SGP_NXT2: PUSH BC	;
1089)   21AD CD 5E 0E    		 CALL PUTPGINBANK	;
1090)   21B0 C1          		 POP BC	;
1091)   21B1 3C          		 INC A	;
1092)   21B2 04          		 INC B	;
1093)   21B3 0D          		 DEC C	;
1094)   21B4 20 F6       		 JR NZ, SGP_NXT2	;
1095)   21B6 E1          		 POP HL	;
1096)   21B7 C9          		 RET	;
1100)   21B8 06 02       		RMVGRAPHPGS: LD B, 2	;
1101)   21BA 3A 3F FF    		 LD A, (PGSEM)	;
1102)   21BD FE 00       		 CP 0	;
1103)   21BF C8          		 RET Z	;
1104)   21C0 3D          		 DEC A	;
1105)   21C1 32 3F FF    		 LD (PGSEM), A	;
1106)   21C4 FE 00       		 CP 0	;
1107)   21C6 C0          		 RET NZ	;
1108)   21C7 E5          		 PUSH HL	;
1109)   21C8 21 3B FF    		 LD HL, TMPG	;
1110)   21CB 0E 04       		 LD C, 4	;
1111)   21CD 7E          		RGP_NXT: LD A, (HL)	;
1112)   21CE E5          		 PUSH HL	;
1113)   21CF C5          		 PUSH BC	;
1114)   21D0 CD 5E 0E    		 CALL PUTPGINBANK       ;RESTORE OLD PAGE	;RESTORE OLD PAGE
1115)   21D3 C1          		 POP BC	;
1116)   21D4 E1          		 POP HL	;
1117)   21D5 04          		 INC B	;
1118)   21D6 23          		 INC HL	;
1119)   21D7 0D          		 DEC C	;
1120)   21D8 20 F3       		 JR NZ, RGP_NXT	;
1121)   21DA E1          		 POP HL	;
1122)   21DB C9          		 RET	;
1132)   21DC 3E 50       		VGA_CALC_VA64: LD A, 80	;
1134)   21DE E5          		 PUSH HL	;
1135)   21DF CD 00 32    		 CALL Mult12        ;HL=A * DE=Y	;HL=A * DE=Y
1136)   21E2 EB          		 EX DE, HL        ;DE=Y*80	;DE=Y*80
1137)   21E3 E1          		 POP HL	;
1138)   21E4 0E 08       		 LD C, 8	;
1139)   21E6 CD 56 32    		 CALL DIV16_8        ;HL=HL/C  A=REMAINDER	;HL=HL/C  A=REMAINDER
1140)   21E9 19          		 ADD HL, DE        ;THE ADDRESS IN 32K VIDEO BUFFER	;THE ADDRESS IN 32K VIDEO BUFFER
1141)   21EA 11 00 40    		 LD DE, $4000	;
1142)   21ED 19          		 ADD HL, DE        ;THE ADDRESS IN Z80 RAM	;THE ADDRESS IN Z80 RAM
1144)   21EE 4F          		 LD C,A	;
1145)   21EF 3E 07       		 LD A,7	;
1146)   21F1 91          		 SUB C        ;A=7-REM TO FIND THE BIT TO SET LEFT TO RIGHT	;A=7-REM TO FIND THE BIT TO SET LEFT TO RIGHT
1147)   21F2 06 01       		 LD B, 1	;
1148)   21F4 B7          		 OR A	;
1149)   21F5 28 05       		VCVA_AGN: JR Z, VCVA_NXT	;
1150)   21F7 CB 10       		 RL B         ;MOVE B (THE MASK) TO THE RIGHT BIT	;MOVE B (THE MASK) TO THE RIGHT BIT
1151)   21F9 3D          		 DEC A	;
1152)   21FA 18 F9       		 JR VCVA_AGN	;
1153)   21FC 78          		VCVA_NXT: LD A, B	;
1154)   21FD C9          		 RET	;
1161)   21FE F5          		VGA_CHECKXY64: PUSH AF	;
1162)   21FF E5          		 PUSH HL	;
1163)   2200 D5          		 PUSH DE	;
1164)   2201 B7          		 OR A	;
1165)   2202 11 80 02    		 LD DE, 640	;
1166)   2205 ED 52       		 SBC HL, DE	;
1167)   2207 30 0F       		 JR NC, CXY6_ABEX	;
1168)   2209 D1          		 POP DE	;
1169)   220A D5          		 PUSH DE	;
1170)   220B EB          		 EX DE, HL	;
1171)   220C 11 90 01    		 LD DE, 400	;
1172)   220F ED 52       		 SBC HL, DE	;
1173)   2211 D1          		 POP DE         ;ABNORMAL EXIT PIXEL CANT PUT TO SCREEN	;ABNORMAL EXIT PIXEL CANT PUT TO SCREEN
1174)   2212 E1          		 POP HL	;
1175)   2213 30 03       		 JR NC, CXY6_ABEX	;
1176)   2215 F1          		 POP AF	;
1177)   2216 37          		 SCF         ;RETURN WITH C SET	;RETURN WITH C SET
1178)   2217 C9          		 RET	;
1179)   2218 F1          		CXY6_ABEX: POP AF	;
1180)   2219 AF          		 XOR A	;
1181)   221A C9          		 RET         ;RETURN WITH NC	;RETURN WITH NC
1186)   221B CD FE 21    		VGA_PLTPXL64: CALL VGA_CHECKXY64	;
1187)   221E D0          		 RET NC         ;NOT VALID PARAMS	;NOT VALID PARAMS
1188)   221F F5          		 PUSH AF	;
1189)   2220 E5          		 PUSH HL	;
1190)   2221 D5          		 PUSH DE	;
1191)   2222 CD 81 21    		 CALL SETGRAPHPGS       ;BRING VIDEO PAGES TO Z80	;BRING VIDEO PAGES TO Z80
1192)   2225 D1          		PP6_PAROK: POP DE	;
1193)   2226 E1          		 POP HL	;
1195)   2227 CD DC 21    		 CALL VGA_CALC_VA64       ;HL THE VGA ADDRESS AND A THE BIT MASK	;HL THE VGA ADDRESS AND A THE BIT MASK
1196)   222A D1          		 POP DE         ;D HAS THE COLOR 0 OR 1, RESET BIT OR SET	;D HAS THE COLOR 0 OR 1, RESET BIT OR SET
1197)   222B 5F          		 LD E, A	;
1198)   222C 3A 44 FF    		 LD A,(VGABCOL)	;
1199)   222F BA          		 CP D         ;CHECK IF COLOR IS SAME AS BACKG	;CHECK IF COLOR IS SAME AS BACKG
1200)   2230 28 05       		 JR Z, PP6_RESET	;
1202)   2232 7E          		 LD A, (HL)        ;GET THE BYTE	;GET THE BYTE
1203)   2233 B3          		 OR E         ;SET THE BIT	;SET THE BIT
1204)   2234 77          		 LD (HL), A        ;PUT THE BYTE BACK	;PUT THE BYTE BACK
1205)   2235 18 06       		 JR PP6_EXIT	;
1208)   2237 7B          		 LD A, E        ;MASK ON A	;MASK ON A
1209)   2238 2F          		 CPL         ;INVERT ALL PIXELS	;INVERT ALL PIXELS
1210)   2239 5F          		 LD E, A        ;MASK ON E	;MASK ON E
1211)   223A 7E          		 LD A, (HL)        ;GET THE BYTE	;GET THE BYTE
1212)   223B A3          		 AND E         ;RESET THE BIT	;RESET THE BIT
1213)   223C 77          		 LD (HL), A        ;PUT THE BYTE BACK	;PUT THE BYTE BACK
1214)   223D CD B8 21    		PP6_EXIT: CALL RMVGRAPHPGS      ;RESTORE PREVIOUS PAGES TO Z80	;RESTORE PREVIOUS PAGES TO Z80
1215)   2240 C9          		 RET	;
1223)   2241 CD FE 21    		VGA_GETPXL64: CALL VGA_CHECKXY64	;
1224)   2244 D0          		 RET NC         ;NOT VALID PARAMS	;NOT VALID PARAMS
1225)   2245 CD 81 21    		 CALL SETGRAPHPGS       ;BRING VIDEO PAGES TO Z80	;BRING VIDEO PAGES TO Z80
1226)   2248 D1          		 POP DE	;
1227)   2249 E1          		 POP HL	;
1228)   224A F1          		 POP AF	;
1230)   224B CD DC 21    		 CALL VGA_CALC_VA64       ;HL THE VGA ADDRESS AND A THE BIT MASK	;HL THE VGA ADDRESS AND A THE BIT MASK
1231)   224E 5F          		 LD E, A	;
1232)   224F 7E          		 LD A, (HL)	;
1233)   2250 A3          		 AND E	;
1234)   2251 FE 00       		 CP 0	;
1235)   2253 28 02       		 JR Z, GP6EXIT	;
1236)   2255 3E 01       		 LD A, 1	;
1238)   2257 F5          		GP6EXIT: PUSH AF	;
1239)   2258 CD B8 21    		 CALL RMVGRAPHPGS       ;RESTORE PREVIOUS PAGES TO Z80	;RESTORE PREVIOUS PAGES TO Z80
1240)   225B F1          		 POP AF	;
1241)   225C C9          		 RET	;
1249)   225D F5          		VGA_PLTPXL: PUSH AF	;
1250)   225E E5          		 PUSH HL	;
1251)   225F D5          		 PUSH DE        ;SAVE A	;SAVE A
1252)   2260 CD BE 1C    		 CALL VGA_GETCONF	;
1253)   2263 D1          		 POP DE	;
1254)   2264 E1          		 POP HL	;
1255)   2265 F1          		 POP AF	;
1256)   2266 E5          		 PUSH HL	;
1257)   2267 D5          		 PUSH DE	;
1258)   2268 DD 21 76 22 		 LD IX,VGA_PPEXIT	;
1259)   226C DD E5       		 PUSH IX        ;RETURN ADDRESS  	;RETURN ADDRESS
1260)   226E CB 49       		 BIT 1, C        ;test low or hi	;test low or hi
1261)   2270 C2 1B 22    		 JP NZ, VGA_PLTPXL64       ;NZ MEANS HI	;NZ MEANS HI
1262)   2273 C3 80 20    		 JP VGA_PLTPXL32	;
1263)   2276 D1          		VGA_PPEXIT: POP DE	;
1264)   2277 E1          		 POP HL	;
1265)   2278 C9          		 RET	;
1271)   2279 D5          		VGA_GETPXL: PUSH DE	;
1272)   227A CD BE 1C    		 CALL VGA_GETCONF	;
1273)   227D D1          		 POP DE	;
1274)   227E CB 49       		 BIT 1, C        ;test low or hi	;test low or hi
1275)   2280 C2 41 22    		 JP NZ, VGA_GETPXL64       ;NZ MEANS HI	;NZ MEANS HI
1276)   2283 C3 23 21    		 JP VGA_GETPXL32	;
1282)   2286 F5          		VGA_PRNGRCH:  PUSH AF	;
1288)   2287 1E 08       		 LD E,FONT_WIDTH	;
1289)   2289 3A 45 FF    		VPGC_NXT: LD A,(VGATX_X)	;
1290)   228C 67          		 LD H,A	;
1292)   228D CD F4 31    		 CALL MULT8	;
1293)   2290 E5          		 PUSH HL        ;SAVE RESULT	;SAVE RESULT
1294)   2291 1E 0A       		 LD E,FONT_HEIGHT	;
1295)   2293 3A 46 FF    		 LD A,(VGATX_Y)	;
1296)   2296 67          		 LD H,A	;
1297)   2297 CD F4 31    		 CALL MULT8	;
1298)   229A D1          		 POP DE	;
1299)   229B EB          		 EX DE,HL	;
1301)   229C F1          		 POP AF        ;GET THE CHAR	;GET THE CHAR
1303)   229D E5          		VGA_PRNGRCHAT: PUSH HL	;
1304)   229E D5          		 PUSH DE	;
1305)   229F B7          		 OR A	;
1306)   22A0 21 00 36    		 LD HL, FONT_ADDR	;
1307)   22A3 16 00       		 LD D, 0	;
1308)   22A5 5F          		 LD E, A	;
1309)   22A6 ED 5A       		 ADC HL, DE        ;HL THE START OF FONT	;HL THE START OF FONT
1310)   22A8 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
1311)   22AA EB          		 EX DE,HL       ;DE THE START OF FONT PATTERN	;DE THE START OF FONT PATTERN
1312)   22AB 1A          		VPGC_AGN3: LD A, (DE)       ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
1313)   22AC 06 08       		 LD B, FONT_WIDTH	;
1314)   22AE CB 27       		VPGC_AGN4: SLA A        ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
1315)   22B0 67          		 LD H,A        ;SAVE A  	;SAVE A
1316)   22B1 38 05       		 JR C, VPGC_FCOLOR	;
1317)   22B3 3A 44 FF    		 LD A, (VGABCOL)	;
1318)   22B6 18 03       		 JR VPGC_CONT	;
1319)   22B8 3A 43 FF    		VPGC_FCOLOR: LD A, (VGAFCOL) 	;
1321)   22BB D9          		VPGC_CONT: EXX 	;
1322)   22BC D1          		 POP DE	;
1323)   22BD E1          		 POP HL	;
1324)   22BE CD 5D 22    		 CALL VGA_PLTPXL	;
1325)   22C1 23          		 INC HL        ;NEXT PIXEL ON VIDEO BUF	;NEXT PIXEL ON VIDEO BUF
1326)   22C2 E5          		 PUSH HL	;
1327)   22C3 D5          		 PUSH DE	;
1328)   22C4 D9          		 EXX	;
1329)   22C5 7C          		 LD A,H        ;RESTORE A	;RESTORE A
1330)   22C6 10 E6       		 DJNZ VPGC_AGN4	;
1331)   22C8 D9          		 EXX	;
1332)   22C9 D1          		 POP DE	;
1333)   22CA E1          		 POP HL	;
1334)   22CB 06 00       		 LD B,0	;
1335)   22CD 0E 08       		 LD C,FONT_WIDTH	;
1336)   22CF B7          		 OR A	;
1337)   22D0 ED 42       		 SBC HL,BC       ;X=HL AT THE START	;X=HL AT THE START
1338)   22D2 13          		 INC DE        ;Y=DE +1	;Y=DE +1
1339)   22D3 E5          		 PUSH HL	;
1340)   22D4 D5          		 PUSH DE	;
1341)   22D5 D9          		 EXX	;
1342)   22D6 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
1343)   22D7 0D          		 DEC C	;
1344)   22D8 20 D1       		 JR NZ, VPGC_AGN3	;
1345)   22DA D1          		 POP DE	;
1346)   22DB E1          		 POP HL	;
1347)   22DC C9          		 RET	;
1352)   22DD 67          		VGA_CLRTXTLN: LD H,A	;
1353)   22DE 3A 46 FF    		 LD A,(VGATX_Y)	;
1354)   22E1 F5          		 PUSH AF	;
1355)   22E2 7C          		 LD A,H	;
1356)   22E3 32 46 FF    		 LD (VGATX_Y),A	;
1357)   22E6 F5          		 PUSH AF	;
1358)   22E7 CD BE 1C    		 CALL VGA_GETCONF	;
1359)   22EA F1          		 POP AF	;
1360)   22EB CB 49       		 BIT 1, C 	;
1361)   22ED 06 4E       		 LD B,78       ;test low or hi	;test low or hi
1362)   22EF 20 02       		 JR NZ, DOCLRTXT;CLRTXT64    ;NZ MEANS HI	;CLRTXT64    ;NZ MEANS HI
1364)   22F1 06 26       		 LD B,38	;
1365)   22F3 3E 20       		DOCLRTXT: LD A,' '	;
1366)   22F5 C5          		 PUSH BC	;
1367)   22F6 CD F0 1C    		 CALL VGA_PRCH      ;PRINT AND FORWARDS	;PRINT AND FORWARDS
1368)   22F9 C1          		 POP BC	;
1369)   22FA 10 F7       		 DJNZ DOCLRTXT	;
1370)   22FC 3E 20       		 LD A,' '	;
1371)   22FE CD 00 1D    		 CALL VGA_DOPRNCH	;
1372)   2301 AF          		 XOR A	;
1373)   2302 32 45 FF    		 LD (VGATX_X),A	;
1374)   2305 F1          		 POP AF	;
1375)   2306 32 46 FF    		 LD LD (VGATX_Y),A	;
1376)   2309 C9          		 RET	;
 16)   230A 	            		 LCD_RS EQU DEVTFT       ;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS	;PORT TO CONTROL RS PIN 16=cs+rs+low = COMMAND  A0 CONNECT TO RS
 17)   230A 	            		 LCD_CS EQU DEVTFT+1       ;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA	;PORT TO CONTROL CS PIN 17=cs+rs_high  = DATA
 31)   230A 7B          		 LD A, E	;
 32)   230B D3 11       		 OUT (LCD_CS), A	;
 37)   230D DB 11       		 IN A, (LCD_CS)	;
 38)   230F C9          		 RET	;
 45)   2310 7A          		 LD A, D	;
 46)   2311 D3 11       		 OUT (LCD_CS), A	;
 47)   2313 C9          		 RET	;
 53)   2314 7A          		 LD A, D	;
 54)   2315 D3 10       		 OUT (LCD_RS), A	;
 55)   2317 C9          		 RET	;
 62)   2318 AF          		 XOR A	;
 63)   2319 D3 10       		 OUT (LCD_RS), A       ;RS LOW = COMMAND BYTE	;RS LOW = COMMAND BYTE
 64)   231B CD 10 23    		 CALL LCD_WR_BUS	;
 65)   231E 3E 01       		 LD A, 1	;
 66)   2320 D3 10       		 OUT (LCD_RS), A       ;RS HIGH  = DATA BYTE	;RS HIGH  = DATA BYTE
 67)   2322 C9          		 RET	;
 71)   2323 16 E2       		 LD D, 0xE2        ;PLL multiplier, set PLL clock to 120M	;PLL multiplier, set PLL clock to 120M
 72)   2325 CD 14 23    		 CALL LCD_WR_COM       ;N=0x36 for 6.5M, 0x23 for 10M crystal	;N=0x36 for 6.5M, 0x23 for 10M crystal
 73)   2328 16 23       		 LD D, 0x23        ;1E	;1E
 74)   232A CD 10 23    		 CALL LCD_WR_DAT	;
 75)   232D 16 02       		 LD D, 0x02	;
 76)   232F CD 10 23    		 CALL LCD_WR_DAT	;
 77)   2332 16 54       		 LD D, 0x54	;
 78)   2334 CD 10 23    		 CALL LCD_WR_DAT	;
 79)   2337 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 80)   2339 CD 14 23    		 CALL LCD_WR_COM	;
 81)   233C 16 01       		 LD D, 0x01	;
 82)   233E CD 10 23    		 CALL LCD_WR_DAT	;
 83)   2341 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 84)   2343 CD 4E 2F    		 CALL DELAYMICRO	;
 85)   2346 16 E0       		 LD D, 0xE0        ; PLL enable	; PLL enable
 86)   2348 CD 14 23    		 CALL LCD_WR_COM	;
 87)   234B 16 03       		 LD D, 0x03	;
 88)   234D CD 10 23    		 CALL LCD_WR_DAT	;
 89)   2350 06 0A       		 LD B, 10        ;delay(10);	;delay(10);
 90)   2352 CD 4E 2F    		 CALL DELAYMICRO	;
 92)   2355 16 01       		 LD D, 0x01        ; software reset	; software reset
 93)   2357 CD 14 23    		 CALL LCD_WR_COM	;
 94)   235A 06 14       		 LD B, 20        ;delay(20); MICROSECS	;delay(20); MICROSECS
 95)   235C CD 4E 2F    		 CALL DELAYMICRO	;
 96)   235F 16 E6       		 LD D, 0xE6        ;PLL setting for PCLK, depends on resolution	;PLL setting for PCLK, depends on resolution
 97)   2361 CD 14 23    		 CALL LCD_WR_COM	;
 98)   2364 16 03       		 LD D, 0x03	;
 99)   2366 CD 10 23    		 CALL LCD_WR_DAT	;
100)   2369 16 33       		 LD D, 0x33        ;FF	;FF
101)   236B CD 10 23    		 CALL LCD_WR_DAT	;
102)   236E 16 33       		 LD D, 0x33        ;FF	;FF
103)   2370 CD 10 23    		 CALL LCD_WR_DAT	;
105)   2373 16 B0       		 LD D, 0xB0        ;LCD SPECIFICATION	;LCD SPECIFICATION
106)   2375 CD 14 23    		 CALL LCD_WR_COM	;
107)   2378 16 20       		 LD D, 0x20	;
108)   237A CD 10 23    		 CALL LCD_WR_DAT	;
109)   237D 16 00       		 LD D, 0x00	;
110)   237F CD 10 23    		 CALL LCD_WR_DAT	;
111)   2382 16 03       		 LD D, 0x03        ;Set HDP  799	;Set HDP  799
112)   2384 CD 10 23    		 CALL LCD_WR_DAT	;
113)   2387 16 1F       		 LD D, 0x1F	;
114)   2389 CD 10 23    		 CALL LCD_WR_DAT	;
115)   238C 16 01       		 LD D, 0x01        ;Set VDP  479	;Set VDP  479
116)   238E CD 10 23    		 CALL LCD_WR_DAT	;
117)   2391 16 DF       		 LD D, 0xDF	;
118)   2393 CD 10 23    		 CALL LCD_WR_DAT	;
119)   2396 16 00       		 LD D, 0x00	;
120)   2398 CD 10 23    		 CALL LCD_WR_DAT	;
123)   239B 16 B4       		 LD D, 0xB4        ;HSYNC	;HSYNC
124)   239D CD 14 23    		 CALL LCD_WR_COM	;
125)   23A0 16 04       		 LD D, 0x04        ;03         ;Set HT 928	;03         ;Set HT 928
126)   23A2 CD 10 23    		 CALL LCD_WR_DAT	;
127)   23A5 16 1F       		 LD D, 0x1F        ;A0	;A0
128)   23A7 CD 10 23    		 CALL LCD_WR_DAT	;
129)   23AA 16 00       		 LD D, 0x00        ;Set HPS  46	;Set HPS  46
130)   23AC CD 10 23    		 CALL LCD_WR_DAT	;
131)   23AF 16 D2       		 LD D, 0xD2        ;2E	;2E
132)   23B1 CD 10 23    		 CALL LCD_WR_DAT	;
133)   23B4 16 00       		 LD D, 0x00        ;30         ;Set HPW  48	;30         ;Set HPW  48
134)   23B6 CD 10 23    		 CALL LCD_WR_DAT	;
135)   23B9 16 00       		 LD D, 0x00        ;Set LPS  15	;Set LPS  15
136)   23BB CD 10 23    		 CALL LCD_WR_DAT	;
137)   23BE 16 00       		 LD D, 0x00        ;0F	;0F
138)   23C0 CD 10 23    		 CALL LCD_WR_DAT	;
139)   23C3 16 00       		 LD D, 0x00	;
140)   23C5 CD 10 23    		 CALL LCD_WR_DAT	;
142)   23C8 16 B6       		 LD D, 0xB6        ;VSYNC	;VSYNC
143)   23CA CD 14 23    		 CALL LCD_WR_COM	;
144)   23CD 16 02       		 LD D, 0x02        ;Set VT 525	;Set VT 525
145)   23CF CD 10 23    		 CALL LCD_WR_DAT	;
146)   23D2 16 0C       		 LD D, 0x0C        ;0D	;0D
147)   23D4 CD 10 23    		 CALL LCD_WR_DAT	;
148)   23D7 16 00       		 LD D, 0x00        ;Set VPS  16	;Set VPS  16
149)   23D9 CD 10 23    		 CALL LCD_WR_DAT	;
150)   23DC 16 22       		 LD D, 0x22        ;10	;10
151)   23DE CD 10 23    		 CALL LCD_WR_DAT	;
152)   23E1 16 00       		 LD D, 0x00        ;10         ;Set VPW  16	;10         ;Set VPW  16
153)   23E3 CD 10 23    		 CALL LCD_WR_DAT	;
154)   23E6 16 00       		 LD D, 0x00        ;Set FPS  8	;Set FPS  8
155)   23E8 CD 10 23    		 CALL LCD_WR_DAT	;
156)   23EB 16 00       		 LD D, 0x00        ; 08	; 08
157)   23ED CD 10 23    		 CALL LCD_WR_DAT	;
159)   23F0 16 B8       		 LD D, 0xB8	;
160)   23F2 CD 14 23    		 CALL LCD_WR_COM	;
161)   23F5 16 0F       		 LD D, 0x0F        ;07         ;GPIO3=input, GPIO[2:0]=output	;07         ;GPIO3=input, GPIO[2:0]=output
162)   23F7 CD 10 23    		 CALL LCD_WR_DAT	;
163)   23FA 16 01       		 LD D, 0x01        ;GPIO0 normal	;GPIO0 normal
164)   23FC CD 10 23    		 CALL LCD_WR_DAT	;
166)   23FF 16 BA       		 LD D, 0xBA	;
167)   2401 CD 14 23    		 CALL LCD_WR_COM	;
168)   2404 16 01       		 LD D, 0x01        ;0F	;0F
169)   2406 CD 10 23    		 CALL LCD_WR_DAT       ;GPIO[3:0] out 1	;GPIO[3:0] out 1
171)   2409 16 36       		 LD D, 0x36        ;rotation	;rotation
172)   240B CD 14 23    		 CALL LCD_WR_COM	;
173)   240E 16 08       		 LD D, 0x08        ;2A	;2A
174)   2410 CD 10 23    		 CALL LCD_WR_DAT	;
176)   2413 16 F0       		 LD D, 0xF0        ;pixel data interface	;pixel data interface
177)   2415 CD 14 23    		 CALL LCD_WR_COM	;
178)   2418 16 06       		 LD D, 0x06        ;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES	;CHANGE THIS FOR 8 BIT INTERFACE  6=9BIT SEND 2 BYTES
179)   241A CD 10 23    		 CALL LCD_WR_DAT	;
181)   241D 06 05       		 LD B, 5        ;delay(5);	;delay(5);
182)   241F CD 4E 2F    		 CALL DELAYMICRO	;
184)   2422 16 BC       		 LD D, 0xBC        ;SET THE IMAGE POST PROCESSOR	;SET THE IMAGE POST PROCESSOR
185)   2424 CD 14 23    		 CALL LCD_WR_COM	;
186)   2427 16 40       		 LD D, 0x40	;
187)   2429 CD 10 23    		 CALL LCD_WR_DAT	;
188)   242C 16 80       		 LD D, 0x80	;
189)   242E CD 10 23    		 CALL LCD_WR_DAT	;
190)   2431 16 40       		 LD D, 0x40	;
191)   2433 CD 10 23    		 CALL LCD_WR_DAT	;
192)   2436 16 01       		 LD D, 0x01	;
193)   2438 CD 10 23    		 CALL LCD_WR_DAT	;
194)   243B 06 05       		 LD B, 5        ;delay(5);	;delay(5);
195)   243D CD 4E 2F    		 CALL DELAYMICRO	;
197)   2440 16 35       		 LD D, 0x35        ;tear on  0X34 TEAR OFF	;tear on  0X34 TEAR OFF
198)   2442 CD 14 23    		 CALL LCD_WR_COM	;
199)   2445 16 00       		 LD D, 0x00        ;ONLY V-BLNK=0 , V + H =1	;ONLY V-BLNK=0 , V + H =1
200)   2447 CD 10 23    		 CALL LCD_WR_DAT	;
202)   244A 16 29       		 LD D, 0x29        ;display on	;display on
203)   244C CD 14 23    		 CALL LCD_WR_COM	;
204)   244F 16 BE       		 LD D, 0xBE        ;set PWM for B/L	;set PWM for B/L
205)   2451 CD 14 23    		 CALL LCD_WR_COM	;
206)   2454 16 06       		 LD D, 0x06	;
207)   2456 CD 10 23    		 CALL LCD_WR_DAT	;
208)   2459 16 F0       		 LD D, 0xF0	;
209)   245B CD 10 23    		 CALL LCD_WR_DAT	;
210)   245E 16 01       		 LD D, 0x01	;
211)   2460 CD 10 23    		 CALL LCD_WR_DAT	;
212)   2463 16 F0       		 LD D, 0xF0	;
213)   2465 CD 10 23    		 CALL LCD_WR_DAT	;
214)   2468 16 00       		 LD D, 0x00	;
215)   246A CD 10 23    		 CALL LCD_WR_DAT	;
216)   246D 16 00       		 LD D, 0x00	;
217)   246F CD 10 23    		 CALL LCD_WR_DAT	;
219)   2472 16 D0       		 LD D, 0xD0	;
220)   2474 CD 14 23    		 CALL LCD_WR_COM	;
221)   2477 16 0D       		 LD D, 0x0D	;
222)   2479 CD 10 23    		 CALL LCD_WR_DAT	;
225)   247C 21 00 00    		 LD HL, 0	;
226)   247F E5          		 PUSH HL	;
227)   2480 E5          		 PUSH HL	;
228)   2481 21 1F 03    		 LD HL, 799	;
229)   2484 E5          		 PUSH HL	;
230)   2485 21 DF 01    		 LD HL, 479	;
231)   2488 E5          		 PUSH HL	;
232)   2489 CD 8D 24    		 CALL LCD_SETXY	;
233)   248C C9          		 RET	;
250)   248D DD 21 02 00 		 LD IX, 2	;
251)   2491 DD 39       		 ADD IX, SP	;
252)   2493 16 2A       		 LD D, 0x2A        ;SEND IX PARAMS	;SEND IX PARAMS
253)   2495 CD 14 23    		 CALL LCD_WR_COM	;
254)   2498 DD 56 07    		 LD D, (IX + 7)	;
255)   249B CD 10 23    		 CALL LCD_WR_DAT	;
256)   249E DD 56 06    		 LD D, (IX + 6)	;
257)   24A1 CD 10 23    		 CALL LCD_WR_DAT	;
258)   24A4 DD 56 03    		 LD D, (IX + 3)	;
259)   24A7 CD 10 23    		 CALL LCD_WR_DAT	;
260)   24AA DD 56 02    		 LD D, (IX + 2)	;
261)   24AD CD 10 23    		 CALL LCD_WR_DAT	;
262)   24B0 16 2B       		 LD D, 0x2B        ;SEND Y PARAMS	;SEND Y PARAMS
263)   24B2 CD 14 23    		 CALL LCD_WR_COM	;
264)   24B5 DD 56 05    		 LD D, (IX + 5)	;
265)   24B8 CD 10 23    		 CALL LCD_WR_DAT	;
266)   24BB DD 56 04    		 LD D, (IX + 4)	;
267)   24BE CD 10 23    		 CALL LCD_WR_DAT	;
268)   24C1 DD 56 01    		 LD D, (IX + 1)	;
269)   24C4 CD 10 23    		 CALL LCD_WR_DAT	;
270)   24C7 DD 56 00    		 LD D, (IX)	;
271)   24CA CD 10 23    		 CALL LCD_WR_DAT	;
272)   24CD 16 2C       		 LD D, 0x2C        ;SEND DATA	;SEND DATA
273)   24CF CD 14 23    		 CALL LCD_WR_COM	;
274)   24D2 D1          		 POP DE	;
275)   24D3 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
276)   24D6 39          		 ADD HL, SP	;
277)   24D7 F9          		 LD SP, HL	;
278)   24D8 EB          		 EX DE, HL	;
279)   24D9 E9          		 JP (HL)	;
285)   24DA 54          		 LD D, H	;
286)   24DB CD 10 23    		 CALL LCD_WR_DAT	;
287)   24DE 55          		 LD D, L	;
288)   24DF CD 10 23    		 CALL LCD_WR_DAT	;
289)   24E2 C9          		 RET	;
294)   24E3 16 2E       		 LD D, 0x2E        ;READ DATA	;READ DATA
295)   24E5 CD 14 23    		 CALL LCD_WR_COM	;
296)   24E8 CD 0D 23    		@LCD_GTPXL: CALL LCD_RD_DAT	;
297)   24EB 67          		 LD H, A	;
298)   24EC CD 0D 23    		 CALL LCD_RD_DAT	;
299)   24EF 6F          		 LD L, A	;
300)   24F0 C9          		 RET	;
306)   24F1 DD E5       		@LCD_READPIXEL: PUSH IX       ; 2 PARAMS ON STACK TOTAL 4 BYTES	; 2 PARAMS ON STACK TOTAL 4 BYTES
307)   24F3 DD 21 04 00 		 LD IX, 4        ;2 FOR RET ADDR AND 2 FOR PUSH IX	;2 FOR RET ADDR AND 2 FOR PUSH IX
308)   24F7 DD 39       		 ADD IX, SP	;
309)   24F9 DD 66 03    		 LD H, (IX + 3)        ;X	;X
310)   24FC DD 6E 02    		 LD L, (IX + 2)        ;X	;X
311)   24FF DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
312)   2502 DD 5E 00    		 LD E, (IX)        ;Y	;Y
313)   2505 E5          		 PUSH HL	;
314)   2506 D5          		 PUSH DE	;
315)   2507 E5          		 PUSH HL	;
316)   2508 D5          		 PUSH DE	;
317)   2509 CD 8D 24    		 CALL LCD_SETXY	;
318)   250C CD E3 24    		 CALL LCD_GETPIXEL	;
319)   250F E5          		 PUSH HL	;
320)   2510 CD 42 25    		 CALL LCD_CLRXY	;
321)   2513 D1          		 POP DE         ;RESULT COLOR	;RESULT COLOR
322)   2514 DD E1       		 POP IX	;
323)   2516 C1          		 POP BC         ;RET ADDR	;RET ADDR
324)   2517 21 04 00    		 LD HL, 2 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
325)   251A 39          		 ADD HL, SP	;
326)   251B F9          		 LD SP, HL	;
327)   251C EB          		 EX DE, HL        ;HL RESULT	;HL RESULT
328)   251D C5          		 PUSH BC        ;RET ADDR ON STACK	;RET ADDR ON STACK
329)   251E C9          		 RET	;
333)   251F DD 21 02 00 		 LD IX, 2        ;setXY(x, y, x, y);	;setXY(x, y, x, y);
334)   2523 DD 39       		 ADD IX, SP	;
335)   2525 DD 66 03    		 LD H, (IX + 3)        ;X	;X
336)   2528 DD 6E 02    		 LD L, (IX + 2)        ;X	;X
337)   252B DD 56 01    		 LD D, (IX + 1)        ;Y	;Y
338)   252E DD 5E 00    		 LD E, (IX)        ;Y	;Y
339)   2531 E5          		 PUSH HL	;
340)   2532 D5          		 PUSH DE	;
341)   2533 E5          		 PUSH HL	;
342)   2534 D5          		 PUSH DE	;
343)   2535 CD 8D 24    		 CALL LCD_SETXY	;
344)   2538 2A 01 FE    		 LD HL, (FCOLOR)	;
345)   253B CD DA 24    		 CALL LCD_SETPIXEL	;
346)   253E CD 42 25    		 CALL LCD_CLRXY	;
347)   2541 C9          		 RET	;
350)   2542 21 00 00    		 LD HL, 0	;
351)   2545 E5          		 PUSH HL	;
352)   2546 E5          		 PUSH HL	;
353)   2547 21 1F 03    		 LD HL, LCD_WIDTH	;
354)   254A E5          		 PUSH HL	;
355)   254B 21 DF 01    		 LD HL, LCD_HEIGHT	;
356)   254E E5          		 PUSH HL	;
357)   254F CD 8D 24    		 CALL LCD_SETXY	;
358)   2552 C9          		 RET	;
365)   2553 3A BB FE    		@LCD_FILL: LD A,(SCRNST)	;
366)   2556 E6 01       		 AND 1	;
367)   2558 28 0A       		 JR Z,LF_NOTEN	;
368)   255A D9          		 EXX	;
369)   255B D1          		 POP DE         ;save return addr to de'	;save return addr to de'
370)   255C D9          		 EXX	;
371)   255D CD E6 27    		 CALL _FILL	;
372)   2560 D9          		 EXX	;
373)   2561 D5          		 PUSH DE        ;restore return addr from de'	;restore return addr from de'
374)   2562 D9          		 EXX	;
375)   2563 C9          		 RET	;
376)   2564 D1          		LF_NOTEN: POP DE       ;GET RETURN ADDRESS	;GET RETURN ADDRESS
377)   2565 E1          		 POP HL        ;GET 1ST PARAM FROM STACK	;GET 1ST PARAM FROM STACK
378)   2566 E1          		 POP HL        ;GET 2ND PARAZM FROM STACK	;GET 2ND PARAZM FROM STACK
379)   2567 D5          		 PUSH DE        ;PUT RETURN ADDRESS ON STACK	;PUT RETURN ADDRESS ON STACK
380)   2568 C9          		 RET  	;
382)   2569 F5          		@LCD_PRCH: PUSH AF	;
383)   256A CD CD 26    		 CALL LCD_RMVCURS	;
384)   256D F1          		 POP AF	;
388)   256E F5          		 PUSH AF	;
389)   256F D1          		 POP DE         ;FLAGS ON E	;FLAGS ON E
390)   2570 FE 08       		 CP 0X08        ;BACKSPACE	;BACKSPACE
391)   2572 28 0D       		 JR Z, PRCHOS_DOBCKSPC	;
392)   2574 FE 0A       		 CP 0X0A        ;LINE FEED JUST IGNORE IT	;LINE FEED JUST IGNORE IT
393)   2576 C8          		 RET Z	;
394)   2577 FE 0D       		 CP 0X0D        ;CHECK FOR ENTER	;CHECK FOR ENTER
395)   2579 20 1A       		 JR NZ, PRCH_DOPRN	;
396)   257B 21 0D FE    		 LD HL, CURSORX	;
397)   257E C3 AE 26    		 JP PRCH_NEWLN	;
399)   2581 21 0D FE    		 LD HL, CURSORX	;
400)   2584 7E          		 LD A, (HL)    	;
401)   2585 FE 01       		 CP 1         ;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0	;COMPARE WITH COLUMN 1 CAUSE OF THE PROMPT ON COLUMN 0
402)   2587 C8          		 RET Z	;
403)   2588 35          		 DEC (HL)	;
404)   2589 D5          		 PUSH DE	;
405)   258A F1          		 POP AF        ;GET CARRY FLAG BACK	;GET CARRY FLAG BACK
406)   258B D0          		 RET NC        ;IF C THEN DELETE LEFT CHAR ALSO	;IF C THEN DELETE LEFT CHAR ALSO
407)   258C E5          		 PUSH HL	;
408)   258D 3E 20       		 LD A, 32        ;PRINT SPACE	;PRINT SPACE
409)   258F CD 95 25    		 CALL PRCH_DOPRN 	;
410)   2592 E1          		 POP HL	;
411)   2593 35          		 DEC (HL)	;
412)   2594 C9          		 RET	;
414)   2595 F5          		PRCH_DOPRN: PUSH AF       ;SAVE CHAR TO STACK	;SAVE CHAR TO STACK
415)   2596 32 10 FE    		 LD (LASTCHAR), A       ;SAVE LAST PRINTED CHAR	;SAVE LAST PRINTED CHAR
419)   2599 3A 16 FE    		 LD A, (VDUMODE)	;
420)   259C FE 05       		 CP 5	;
421)   259E 20 19       		 JR NZ, VDU4	;
422)   25A0 2A 5F FE    		 LD HL, (GR_LASTX)	;
423)   25A3 E5          		 PUSH HL	;
424)   25A4 ED 5B 61 FE 		 LD DE, (GR_LASTY)	;
425)   25A8 D5          		 PUSH DE	;
426)   25A9 01 07 00    		 LD BC, FONT_WIDTH - 1	;
427)   25AC 09          		 ADD HL, BC	;
428)   25AD E5          		 PUSH HL	;
429)   25AE 01 09 00    		 LD BC, FONT_HEIGHT - 1	;
430)   25B1 EB          		 EX DE, HL	;
431)   25B2 09          		 ADD HL, BC	;
432)   25B3 E5          		 PUSH HL	;
433)   25B4 CD 8D 24    		 CALL LCD_SETXY	;
434)   25B7 18 34       		 JR PRCHDO	;
435)   25B9 3A 0D FE    		VDU4: LD A, (CURSORX)	;
436)   25BC 06 08       		 LD B, FONT_WIDTH	;
437)   25BE 16 00       		 LD D, 0	;
438)   25C0 5F          		 LD E, A	;
439)   25C1 21 00 00    		 LD HL, 0	;
440)   25C4 B7          		 OR A         ; CLEAR CARRY	; CLEAR CARRY
442)   25C5 ED 5A       		 ADC HL, DE	;
443)   25C7 10 FC       		 DJNZ PRCH_AGN1        ;HL=DE*B	;HL=DE*B
444)   25C9 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
445)   25CA 11 08 00    		 LD DE, FONT_WIDTH	;
446)   25CD ED 5A       		 ADC HL, DE	;
447)   25CF 2B          		 DEC HL	;
448)   25D0 E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
450)   25D1 CD 23 26    		 CALL LCD_CALCLINE       ;SCROLL CALC	;SCROLL CALC
451)   25D4 06 0A       		 LD B, FONT_HEIGHT	;
452)   25D6 16 00       		 LD D, 0	;
453)   25D8 5F          		 LD E, A	;
454)   25D9 21 00 00    		 LD HL, 0	;
456)   25DC ED 5A       		 ADC HL, DE	;
457)   25DE 10 FC       		 DJNZ PRCH_AGN2	;
458)   25E0 D1          		 POP DE         ;RETREIVE 3RD PARAM X2	;RETREIVE 3RD PARAM X2
459)   25E1 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
460)   25E2 D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
461)   25E3 11 0A 00    		 LD DE, FONT_HEIGHT	;
462)   25E6 ED 5A       		 ADC HL, DE        ;CALC 4TH PARAM	;CALC 4TH PARAM
463)   25E8 2B          		 DEC HL         ;4TH PARAM -1	;4TH PARAM -1
464)   25E9 E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
465)   25EA CD 8D 24    		 CALL LCD_SETXY	;
466)   25ED F1          		PRCHDO: POP AF         ;CHAR TO PRINT FROM STACK	;CHAR TO PRINT FROM STACK
467)   25EE B7          		 OR A	;
468)   25EF 21 00 36    		 LD HL, FONT_ADDR	;
469)   25F2 16 00       		 LD D, 0	;
470)   25F4 5F          		 LD E, A	;
471)   25F5 ED 5A       		 ADC HL, DE        ;THIS IS THE CHAR ADDRESS	;THIS IS THE CHAR ADDRESS
472)   25F7 E5          		 PUSH HL	;
473)   25F8 D1          		 POP DE         ; CHAR ADDRESS ON DE	; CHAR ADDRESS ON DE
474)   25F9 0E 0A       		 LD C, FONT_HEIGHT       ; TOTAL FONT LINES	; TOTAL FONT LINES
476)   25FB 1A          		 LD A, (DE)        ;FONT 8BIT PATTERN FOR A LINE	;FONT 8BIT PATTERN FOR A LINE
477)   25FC 06 08       		 LD B, FONT_WIDTH	;
479)   25FE CB 27       		 SLA A         ;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR	;CHECK BIT FOR 1=FCOLOR OR 0=BCOLOR
480)   2600 38 05       		 JR C, FORECOLOR	;
481)   2602 2A 03 FE    		 LD HL, (BCOLOR)	;
482)   2605 18 03       		 JR PRCH_CONT	;
484)   2607 2A 01 FE    		 LD HL, (FCOLOR)	;
486)   260A F5          		 PUSH AF	;
487)   260B D5          		 PUSH DE        ;TODO:PROBABLY NOT NEEDED HERE	;TODO:PROBABLY NOT NEEDED HERE
488)   260C CD DA 24    		 CALL LCD_SETPIXEL	;
489)   260F D1          		 POP DE	;
490)   2610 F1          		 POP AF	;
491)   2611 10 EB       		 DJNZ PRCH_AGN4	;
492)   2613 14          		 INC D         ;ADD 256 FOR NEXT CHAR PATTERN	;ADD 256 FOR NEXT CHAR PATTERN
493)   2614 0D          		 DEC C	;
494)   2615 20 E4       		 JR NZ, PRCH_AGN3	;
496)   2617 21 0D FE    		 LD HL, CURSORX	;
497)   261A 7E          		 LD A, (HL)	;
498)   261B 3C          		 INC A	;
499)   261C FE 50       		 CP 80	;
500)   261E CA AE 26    		 JP Z, PRCH_NEWLN       ;NEW LINE	;NEW LINE
501)   2621 77          		 LD (HL), A	;
502)   2622 C9          		 RET	;
505)   2623 3A 0F FE    		@LCD_CALCLINE: LD A, (SCRLN)	;
506)   2626 57          		 LD D, A	;
507)   2627 3A 0E FE    		 LD A, (CURSORY)       ;480/10 MAKES 48 LINES	;480/10 MAKES 48 LINES
508)   262A 82          		 ADD A, D	;
509)   262B FE 30       		 CP TOTLINES	;
510)   262D D8          		 RET C	;
512)   262E D6 30       		 SUB TOTLINES	;
513)   2630 C9          		 RET	;
518)   2631 16 33       		LCD_SETSCROLL: LD D, 0x33	;
519)   2633 CD 14 23    		 CALL LCD_WR_COM	;
520)   2636 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES HIGH (0)	;TOP FIXED NO OF LINES 2 BYTES HIGH (0)
521)   2638 CD 10 23    		 CALL LCD_WR_DAT	;
522)   263B 16 00       		 LD D, 0X00        ;TOP FIXED NO OF LINES 2 BYTES LOW	;TOP FIXED NO OF LINES 2 BYTES LOW
523)   263D CD 10 23    		 CALL LCD_WR_DAT	;
524)   2640 16 01       		 LD D, 0X01        ;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)	;SCROLL LINES NO OF LINES 2 BYTES HIGH (480)
525)   2642 CD 10 23    		 CALL LCD_WR_DAT	;
526)   2645 16 E0       		 LD D, 0XE0        ;SCROLL LINES NO OF LINES 2 BYTES LOW	;SCROLL LINES NO OF LINES 2 BYTES LOW
527)   2647 CD 10 23    		 CALL LCD_WR_DAT	;
528)   264A 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)	;BOTTOM FIXED NO OF LINES 2 BYTES HIGH (0)
529)   264C CD 10 23    		 CALL LCD_WR_DAT	;
530)   264F 16 00       		 LD D, 0X00        ;BOTTOM FIXED NO OF LINES 2 BYTES LOW	;BOTTOM FIXED NO OF LINES 2 BYTES LOW
531)   2651 CD 10 23    		 CALL LCD_WR_DAT	;
532)   2654 AF          		 XOR A	;
533)   2655 32 0F FE    		 LD (SCRLN), A	;
534)   2658 C9          		 RET	;
537)   2659 3A 0F FE    		@LCD_DOSCROLL: LD A, (SCRLN)	;
538)   265C 3C          		 INC A	;
539)   265D FE 30       		 CP TOTLINES	;
540)   265F 38 02       		 JR C, DS_NXT	;
541)   2661 D6 30       		 SUB TOTLINES	;
542)   2663 32 0F FE    		DS_NXT: LD (SCRLN), A	;
543)   2666 6F          		 LD L, A	;
544)   2667 26 00       		 LD H, 0	;
545)   2669 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
546)   266A 29          		 ADD HL, HL	;
547)   266B 29          		 ADD HL, HL	;
548)   266C 5F          		 LD E, A	;
549)   266D 16 00       		 LD D, 0	;
550)   266F 19          		 ADD HL, DE	;
551)   2670 19          		 ADD HL, DE	;
552)   2671 16 37       		 LD D, 0x37	;
553)   2673 CD 14 23    		 CALL LCD_WR_COM	;
554)   2676 54          		 LD D, H        ;NEW TOP SCROLL LINE BYTES HIGH (1-480)	;NEW TOP SCROLL LINE BYTES HIGH (1-480)
555)   2677 CD 10 23    		 CALL LCD_WR_DAT	;
556)   267A 55          		 LD D, L        ;NEW TOP SCROLL LINE BYTES LOW	;NEW TOP SCROLL LINE BYTES LOW
557)   267B CD 10 23    		 CALL LCD_WR_DAT	;
558)   267E C9          		 RET	;
561)   267F 11 00 00    		@LCD_CLRTXTLN: LD DE, 0	;
563)   2682 D5          		 PUSH DE	;
564)   2683 6F          		 LD L, A	;
565)   2684 26 00       		 LD H, 0	;
566)   2686 29          		 ADD HL, HL        ;*10=FONT_HEIGHT	;*10=FONT_HEIGHT
567)   2687 29          		 ADD HL, HL	;
568)   2688 29          		 ADD HL, HL	;
569)   2689 5F          		 LD E, A	;
570)   268A 16 00       		 LD D, 0	;
571)   268C 19          		 ADD HL, DE	;
572)   268D 19          		 ADD HL, DE	;
574)   268E E5          		 PUSH HL	;
575)   268F 11 0A 00    		 LD DE, FONT_HEIGHT	;
576)   2692 19          		 ADD HL, DE	;
578)   2693 EB          		 EX DE, HL	;
579)   2694 21 1F 03    		 LD HL, LCD_WIDTH	;
581)   2697 E5          		 PUSH HL	;
582)   2698 D5          		 PUSH DE        ;PARAM4	;PARAM4
583)   2699 CD 8D 24    		 CALL LCD_SETXY	;
584)   269C 01 40 1F    		 LD BC, 8000        ; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10	; LCD_WIDTH * FONT_HEIGHT ;8000 BYTES 800*10
585)   269F 2A 03 FE    		 LD HL, (BCOLOR)	;
586)   26A2 CD DA 24    		CTL_AGN: CALL LCD_SETPIXEL      ;DESTROYS D,A	;DESTROYS D,A
587)   26A5 0B          		 DEC BC	;
588)   26A6 78          		 LD A, B	;
589)   26A7 B1          		 OR C	;
590)   26A8 20 F8       		 JR NZ, CTL_AGN	;
591)   26AA CD 42 25    		 CALL LCD_CLRXY	;
592)   26AD C9          		 RET	;
596)   26AE AF          		 XOR A	;
597)   26AF 77          		 LD (HL), A	;
598)   26B0 23          		 INC HL	;
599)   26B1 7E          		 LD A, (HL)	;
600)   26B2 3C          		 INC A	;
602)   26B3 FE 30       		 CP 48         ;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!	;47 LINES MAX THEN WRAP OR BETTER SCROLL THE SCREEN!!!
603)   26B5 28 02       		 JR Z, PRCH_SCROLL	;
604)   26B7 77          		 LD (HL), A	;
605)   26B8 C9          		 RET	;
607)   26B9 F5          		PRCH_SCROLL: PUSH AF	;
608)   26BA E5          		 PUSH HL	;
610)   26BB 3A 0F FE    		 LD A, (SCRLN)	;
611)   26BE CD 7F 26    		 CALL LCD_CLRTXTLN	;
613)   26C1 CD 59 26    		 CALL LCD_DOSCROLL	;
614)   26C4 E1          		 POP HL	;
615)   26C5 F1          		 POP AF	;
617)   26C6 3D          		 DEC A	;
618)   26C7 77          		 LD (HL), A        ;CURSORY	;CURSORY
619)   26C8 AF          		 XOR A	;
620)   26C9 32 0D FE    		 LD (CURSORX), A	;
621)   26CC C9          		 RET	;
636)   26CD 2A 03 FE    		 LD HL, (BCOLOR)       ;	;
637)   26D0 18 03       		 JR LCD_SETCURS	;
648)   26D2 2A 01 FE    		 LD HL, (FCOLOR)       ;COLOR PARAM	;COLOR PARAM
651)   26D5 E5          		 PUSH HL        ;COLOR PARAM	;COLOR PARAM
652)   26D6 3A 0D FE    		 LD A, (CURSORX)	;
653)   26D9 06 08       		 LD B, FONT_WIDTH	;
654)   26DB 16 00       		 LD D, 0	;
655)   26DD 5F          		 LD E, A	;
656)   26DE 21 00 00    		 LD HL, 0	;
657)   26E1 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
659)   26E2 ED 5A       		 ADC HL, DE	;
660)   26E4 10 FC       		 DJNZ SCUR_AGN1        ;HL = DE * B	;HL = DE * B
661)   26E6 E5          		 PUSH HL        ;1ST PARAM X1	;1ST PARAM X1
662)   26E7 01 08 00    		 LD BC, FONT_WIDTH	;
663)   26EA ED 4A       		 ADC HL, BC        ;NEXT CHAR	;NEXT CHAR
664)   26EC 2B          		 DEC HL         ;MINUS 1	;MINUS 1
665)   26ED E5          		 PUSH HL        ;SAVE 3RD PARAM X2	;SAVE 3RD PARAM X2
667)   26EE CD 23 26    		 CALL LCD_CALCLINE	;
668)   26F1 06 0A       		 LD B, FONT_HEIGHT	;
669)   26F3 16 00       		 LD D, 0	;
670)   26F5 5F          		 LD E, A	;
671)   26F6 21 00 00    		 LD HL, 0	;
673)   26F9 ED 5A       		 ADC HL, DE	;
674)   26FB 10 FC       		 DJNZ SCUR_AGN2        ;HL=B*DE	;HL=B*DE
675)   26FD 0E 08       		 LD C, FONT_HEIGHT - 2       ;2 PIXEL HEIGTH CURSOR	;2 PIXEL HEIGTH CURSOR
676)   26FF 06 00       		 LD B, 0	;
677)   2701 ED 4A       		 ADC HL, BC        ;ADD FONT_HEIGHT-2 PIXELS	;ADD FONT_HEIGHT-2 PIXELS
678)   2703 D1          		 POP DE         ;RETREIVE 3RD PARAM ON DE	;RETREIVE 3RD PARAM ON DE
679)   2704 E5          		 PUSH HL        ;2ND PARAM Y1	;2ND PARAM Y1
680)   2705 D5          		 PUSH DE        ;3RD PARAM X2	;3RD PARAM X2
682)   2706 23          		 INC HL         ; Y2 ADD THE LAST +2 PIXELS	; Y2 ADD THE LAST +2 PIXELS
683)   2707 E5          		 PUSH HL        ;4TH PARAM Y2	;4TH PARAM Y2
684)   2708 CD 8D 24    		 CALL LCD_SETXY	;
686)   270B E1          		 POP HL         ;GET THE COLOR	;GET THE COLOR
687)   270C 06 10       		 LD B, 2 * FONT_WIDTH       ;2*8=16	;2*8=16
689)   270E CD DA 24    		 CALL LCD_SETPIXEL       ;DESTROYS D,A	;DESTROYS D,A
690)   2711 10 FB       		 DJNZ SCUR_AGN3	;
695)   2713 C9          		 RET	;
699)   2714 CD 42 25    		 CALL LCD_CLRXY        ;	;
700)   2717 2A 03 FE    		 LD HL, (BCOLOR)	;
702)   271A 01 E0 01    		 LD BC, LCD_HEIGHT + 1	;
703)   271D C5          		CS_AGNA2: PUSH BC	;
704)   271E 01 20 03    		 LD BC, LCD_WIDTH + 1	;
705)   2721 CD DA 24    		CS_AGNA1: CALL LCD_SETPIXEL      ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
706)   2724 0B          		 DEC BC	;
707)   2725 78          		 LD A, B	;
708)   2726 B1          		 OR C	;
709)   2727 20 F8       		 JR NZ, CS_AGNA1	;
710)   2729 C1          		 POP BC	;
711)   272A 0B          		 DEC BC	;
712)   272B 78          		 LD A, B	;
713)   272C B1          		 OR C	;
714)   272D 20 EE       		 JR NZ, CS_AGNA2	;
715)   272F 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
716)   2732 22 0D FE    		 LD (CURSORX), HL	;
717)   2735 C9          		 RET	;
722)   2736 06 DF       		 LD B, LCD_HEIGHT.AND.0xFF      ;lsb	;lsb
723)   2738 0E 02       		 LD C, LCD_HEIGHT.SHR.8 + 1      ;MSB+1	;MSB+1
725)   273A C5          		 PUSH BC	;
727)   273B 06 1F       		 LD B, LCD_WIDTH.AND.0xFF      ;lsb	;lsb
728)   273D 0E 04       		 LD C, LCD_WIDTH.SHR.8 + 1      ;MSV+1	;MSV+1
730)   273F CD DA 24    		 CALL LCD_SETPIXEL       ;DESTROYS D,A, HL HAS COLOR INFO	;DESTROYS D,A, HL HAS COLOR INFO
731)   2742 10 FB       		 DJNZ CS_AGN1	;
732)   2744 0D          		 DEC C	;
733)   2745 20 F8       		 JR NZ, CS_AGN1	;
734)   2747 C1          		 POP BC	;
735)   2748 10 F0       		 DJNZ CS_AGN2	;
736)   274A 0D          		 DEC C	;
737)   274B 20 ED       		 JR NZ, CS_AGN2	;
738)   274D 21 00 00    		 LD HL, 0        ;RESET CURSOR AT 0,0	;RESET CURSOR AT 0,0
739)   2750 22 0D FE    		 LD (CURSORX), HL	;
740)   2753 C9          		 RET	;
745)   2754 7E          		@LCD_MSG: LD A, (HL)	;
746)   2755 FE 00       		 CP 0	;
747)   2757 C8          		 RET Z	;
748)   2758 E5          		 PUSH HL	;
749)   2759 CD 69 25    		 CALL LCD_PRCH	;
750)   275C E1          		 POP HL	;
751)   275D 23          		 INC HL	;
752)   275E 18 F4       		 JR LCD_MSG	;
  3)   2760 AF          		NEGHL: xor a	;
  4)   2761 95          		 sub l	;
  5)   2762 6F          		 ld l, a	;
  6)   2763 9F          		 sbc a, a	;
  7)   2764 94          		 sub h	;
  8)   2765 67          		 ld h, a	;
  9)   2766 C9          		 RET	;
 13)   2767 2A 79 FE    		 LD HL, (FILL_IDX)	;
 14)   276A 01 58 02    		 LD BC, MAXQ	;
 15)   276D A7          		 AND A	;
 16)   276E ED 42       		 SBC HL, BC	;
 17)   2770 D0          		 RET NC     ;IF IDX=HL>=MAXQ THEN EXIT	;IF IDX=HL>=MAXQ THEN EXIT
 18)   2771 2A 7B FE    		 LD HL, (FILL_PY)	;
 19)   2774 ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 20)   2778 19          		 ADD HL, DE	;
 21)   2779 7C          		 LD A, H	;
 22)   277A FE 80       		 CP 80H	;
 23)   277C D0          		 RET NC     ;NC MEANS NEGATIVE <0	;NC MEANS NEGATIVE <0
 24)   277D 11 1F 03    		 LD DE, LCD_WIDTH	;
 25)   2780 ED 52       		 SBC HL, DE	;
 26)   2782 D0          		 RET NC      ;C MEANS Y+DY<=LCD_WIDTH	;C MEANS Y+DY<=LCD_WIDTH
 28)   2783 2A 77 FE    		 LD HL, (FILL_Q)	;
 29)   2786 ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 30)   278A 78          		 LD A, B	;
 31)   278B B1          		 OR C       ;IF IDX=0 THEN NXT1	;IF IDX=0 THEN NXT1
 32)   278C 28 08       		 JR Z, QPS_NXT1	;
 33)   278E EB          		 EX DE, HL	;
 34)   278F C5          		 PUSH BC	;
 35)   2790 E1          		 POP HL	;
 36)   2791 29          		 ADD HL, HL	;
 37)   2792 29          		 ADD HL, HL	;
 38)   2793 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 39)   2794 EB          		 EX DE, HL	;
 40)   2795 19          		 ADD HL, DE	;
 42)   2796 11 7B FE    		 LD DE, FILL_PY	;
 43)   2799 EB          		 EX DE, HL      ;DEST=QUEUE ORIGIN=FILL_PY	;DEST=QUEUE ORIGIN=FILL_PY
 44)   279A 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 45)   279D ED B0       		 LDIR       ;COPY	;COPY
 46)   279F 2A 79 FE    		 LD HL, (FILL_IDX)	;
 47)   27A2 23          		 INC HL	;
 48)   27A3 22 79 FE    		 LD (FILL_IDX), HL	;
 49)   27A6 C9          		QPS_EXT: RET	;
 51)   27A7 2A 77 FE    		QPOP: LD HL, (FILL_Q)	;
 52)   27AA ED 4B 79 FE 		 LD BC, (FILL_IDX)	;
 53)   27AE 0B          		 DEC BC	;
 54)   27AF C5          		 PUSH BC	;
 55)   27B0 78          		 LD A, B	;
 56)   27B1 B1          		 OR C       ;IF IDX=0 THEN WE ARE ON START	;IF IDX=0 THEN WE ARE ON START
 57)   27B2 28 08       		 JR Z, QPP_NXT1	;
 58)   27B4 EB          		 EX DE, HL	;
 59)   27B5 C5          		 PUSH BC	;
 60)   27B6 E1          		 POP HL	;
 61)   27B7 29          		 ADD HL, HL	;
 62)   27B8 29          		 ADD HL, HL	;
 63)   27B9 29          		 ADD HL, HL      ; SLEFT 3 TIMES MEANS *8	; SLEFT 3 TIMES MEANS *8
 64)   27BA EB          		 EX DE, HL	;
 65)   27BB 19          		 ADD HL, DE	;
 66)   27BC C1          		QPP_NXT1: POP BC	;
 67)   27BD ED 43 79 FE 		 LD (FILL_IDX), BC	;
 69)   27C1 11 7B FE    		 LD DE, FILL_PY     ;ORIGIN=QUEUE DEST=FILL_PY	;ORIGIN=QUEUE DEST=FILL_PY
 70)   27C4 01 08 00    		 LD BC, 8      ;8 BYTES	;8 BYTES
 71)   27C7 ED B0       		 LDIR       ;COPY	;COPY
 72)   27C9 2A 7D FE    		 LD HL, (FILL_PXL)	;
 73)   27CC 22 71 FE    		 LD (FILL_X1), HL	;
 74)   27CF 2A 7F FE    		 LD HL, (FILL_PXR)	;
 75)   27D2 22 73 FE    		 LD (FILL_X2), HL	;
 76)   27D5 ED 5B 81 FE 		 LD DE, (FILL_PDY)	;
 77)   27D9 ED 53 75 FE 		 LD (FILL_DY), DE	;
 78)   27DD 2A 7B FE    		 LD HL, (FILL_PY)	;
 79)   27E0 A7          		 AND A	;
 80)   27E1 19          		 ADD HL, DE	;
 81)   27E2 22 6D FE    		 LD (FILL_Y), HL	;
 89)   27E5 C9          		 RET	;
 91)   27E6 E1          		@_FILL: POP HL     ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
 92)   27E7 D1          		 POP DE      ;Y	;Y
 93)   27E8 C1          		 POP BC      ;X	;X
 94)   27E9 E5          		 PUSH HL      ;RET ADDR TO SP	;RET ADDR TO SP
 95)   27EA ED 43 6B FE 		 LD (FILL_X), BC	;
 96)   27EE ED 53 6D FE 		 LD (FILL_Y), DE	;
 97)   27F2 ED 73 85 FE 		 LD (FILL_OLDSP), SP	;
 98)   27F6 21 3E ED    		 LD HL, - ((MAXQ * 8) + 2)  ; MAKE SPACE FOR OUR QUEUE	; MAKE SPACE FOR OUR QUEUE
 99)   27F9 39          		 ADD HL, SP	;
100)   27FA F9          		 LD SP, HL      ;NEW SP	;NEW SP
103)   27FB 22 77 FE    		 LD (FILL_Q), HL     ;START OF QUEUE STACK VAR IN C	;START OF QUEUE STACK VAR IN C
104)   27FE 21 00 00    		 LD HL, 0	;
105)   2801 22 79 FE    		 LD (FILL_IDX), HL    ;INDEX OF ITEMS SP IN C	;INDEX OF ITEMS SP IN C
109)   2804 2A 6B FE    		 LD HL, (FILL_X)    ;	;
110)   2807 E5          		 PUSH HL	;
111)   2808 2A 6D FE    		 LD HL, (FILL_y)    ;	;
112)   280B E5          		 PUSH HL	;
113)   280C CD F1 24    		 CALL LCD_READPIXEL	;
114)   280F 22 83 FE    		 LD (FILL_OV), HL	;
116)   2812 ED 5B 01 FE 		 LD DE, (FCOLOR)	;
117)   2816 A7          		 AND A	;
118)   2817 ED 52       		 SBC HL, DE      ;CHK OV=NV	;CHK OV=NV
119)   2819 CA A0 29    		 JP Z, FL_EXIT	;
120)   281C 2A 6B FE    		 LD HL, (FILL_X)	;
121)   281F 7C          		 LD A, H	;
122)   2820 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
123)   2822 D2 A0 29    		 JP NC, FL_EXIT	;
124)   2825 11 1F 03    		 LD DE, LCD_WIDTH	;
125)   2828 A7          		 AND A	;
126)   2829 ED 52       		 SBC HL, DE      ;CHK>799	;CHK>799
127)   282B D2 A0 29    		 JP NC, FL_EXIT	;
128)   282E 2A 6D FE    		 LD HL, (FILL_Y)	;
129)   2831 7C          		 LD A, H	;
130)   2832 FE 80       		 CP 0x80      ;CHK <0	;CHK <0
131)   2834 D2 A0 29    		 JP NC, FL_EXIT	;
132)   2837 11 DF 01    		 LD DE, LCD_HEIGHT	;
133)   283A A7          		 AND A	;
134)   283B ED 52       		 SBC HL, DE      ;CHK>480	;CHK>480
135)   283D D2 A0 29    		 JP NC, FL_EXIT	;
137)   2840 2A 6D FE    		 LD HL, (FILL_Y)	;
138)   2843 22 7B FE    		 LD (FILL_PY), HL	;
139)   2846 2A 6B FE    		 LD HL, (FILL_X)	;
140)   2849 22 7D FE    		 LD (FILL_PXL), HL	;
141)   284C 22 7F FE    		 LD (FILL_PXR), HL	;
142)   284F 21 01 00    		 LD HL, 1	;
143)   2852 22 81 FE    		 LD (FILL_PDY), HL	;
144)   2855 CD 67 27    		 CALL QPUSH      ;     /PUSH VALUES TO QUEUE ADD 8 TO IDX	;     /PUSH VALUES TO QUEUE ADD 8 TO IDX
146)   2858 2A 6D FE    		 LD HL, (FILL_Y)	;
147)   285B 23          		 INC HL	;
148)   285C 22 7B FE    		 LD (FILL_PY), HL	;
149)   285F 21 FF FF    		 LD HL, - 1	;
150)   2862 22 81 FE    		 LD (FILL_PDY), HL	;
151)   2865 CD 67 27    		 CALL QPUSH	;
153)   2868 ED 5B 79 FE 		 LD DE, (FILL_IDX)	;
154)   286C 7A          		 LD A, D	;
155)   286D B3          		 OR E	;
156)   286E CA A0 29    		 JP Z, FL_EXIT     ; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT	; IF FILL_IDX=0 THEN NO MORE ITEMS ON QUEUE SO EXIT
160)   2871 CD A7 27    		 CALL QPOP      ;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY	;POP VALUES FROM QUEUE SUB 8 FROM IDX TO Y,X1,X2,DY
163)   2874 2A 71 FE    		 LD HL, (FILL_X1)	;
164)   2877 22 6B FE    		 LD (FILL_X), HL	;
165)   287A 7C          		FL_LP1: LD A, H	;
166)   287B FE 80       		 CP 0x80      ;CHK X<0 THEN EXIT LOOP	;CHK X<0 THEN EXIT LOOP
167)   287D D2 A6 28    		 JP NC, FL_NXT1	;
168)   2880 ED 5B 6D FE 		 LD DE, (FILL_Y)	;
169)   2884 E5          		 PUSH HL	;
170)   2885 D5          		 PUSH DE	;
171)   2886 CD F1 24    		 CALL LCD_READPIXEL	;
172)   2889 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
173)   288D A7          		 AND A	;
174)   288E ED 52       		 SBC HL, DE      ;PIXELREAD<>0 THEN  EXIT LOOP	;PIXELREAD<>0 THEN  EXIT LOOP
175)   2890 C2 A6 28    		 JP NZ, FL_NXT1	;
176)   2893 ED 5B 6B FE 		 LD DE, (FILL_X)	;
177)   2897 2A 6D FE    		 LD HL, (FILL_Y)	;
178)   289A D5          		 PUSH DE	;
179)   289B EB          		 EX DE,HL	;
180)   289C CD A6 29    		 CALL PLOTP	;
181)   289F E1          		 POP HL	;
182)   28A0 2B          		 DEC HL	;
183)   28A1 22 6B FE    		 LD (FILL_X), HL	;
184)   28A4 18 D4       		 JR FL_LP1	;
188)   28A6 2A 6B FE    		 LD HL, (FILL_X)	;
189)   28A9 ED 5B 71 FE 		 LD DE, (FILL_X1)	;
190)   28AD 7C          		 LD A, H	;
191)   28AE FE 80       		 CP 80H	;
192)   28B0 30 08       		 JR NC, FL_NXT1A     ;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP	;IF X<0 THEN X<X1 IF NEGATIVE DON'T SKIP
193)   28B2 A7          		 AND A	;
194)   28B3 ED 52       		 SBC HL, DE      ;CHK X-X1<0 THEN CONTINUE ELSE SKIP	;CHK X-X1<0 THEN CONTINUE ELSE SKIP
195)   28B5 D2 5E 29    		 JP NC, FL_SKIP     ;C IF DE>HL X1>X, NC IF X>=X1	;C IF DE>HL X1>X, NC IF X>=X1
196)   28B8 ED 5A       		 ADC HL, DE	;
199)   28BA 23          		 INC HL	;
200)   28BB 22 6F FE    		 LD (FILL_L), HL	;
203)   28BE A7          		 AND A	;
204)   28BF ED 52       		 SBC HL, DE      ;CHK L-X1	;CHK L-X1
205)   28C1 30 1E       		 JR NC, FL_NXT2     ;C IF DE>HL X1>L	;C IF DE>HL X1>L
206)   28C3 28 1C       		 JR Z, FL_NXT2	;
207)   28C5 ED 5A       		 ADC HL, DE	;
208)   28C7 22 7D FE    		 LD (FILL_PXL), HL    ;L	;L
209)   28CA 2A 6D FE    		 LD HL, (FILL_Y)	;
210)   28CD 22 7B FE    		 LD (FILL_PY), HL	;
211)   28D0 1B          		 DEC DE	;
212)   28D1 ED 53 7F FE 		 LD (FILL_PXR), DE	;
213)   28D5 2A 75 FE    		 LD HL, (FILL_DY)	;
214)   28D8 CD 60 27    		 CALL NEGHL	;
215)   28DB 22 81 FE    		 LD (FILL_PDY), HL	;
216)   28DE CD 67 27    		 CALL QPUSH	;
220)   28E1 2A 71 FE    		 LD HL, (FILL_X1)     ;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT	;COULD USE DE=X1 OR DE=X1-1 IF WE INCREASE IT
221)   28E4 23          		 INC HL	;
222)   28E5 22 6B FE    		 LD (FILL_X), HL	;
226)   28E8 11 1F 03    		 LD DE, LCD_WIDTH	;
227)   28EB A7          		 AND A	;
228)   28EC EB          		 EX DE, HL	;
229)   28ED ED 52       		 SBC HL, DE      ;800-(X=DE)	;800-(X=DE)
230)   28EF 38 25       		 JR C, FL_NXT3     ;C IF X>800	;C IF X>800
231)   28F1 EB          		 EX DE, HL      ;HL=X	;HL=X
232)   28F2 E5          		 PUSH HL	;
233)   28F3 2A 6D FE    		 LD HL, (FILL_Y)	;
234)   28F6 E5          		 PUSH HL	;
235)   28F7 CD F1 24    		 CALL LCD_READPIXEL	;
236)   28FA ED 5B 83 FE 		 LD DE, (FILL_OV)	;
237)   28FE A7          		 AND A	;
238)   28FF ED 52       		 SBC HL, DE      ;PIXELREAD=OV	;PIXELREAD=OV
239)   2901 20 13       		 JR NZ, FL_NXT3	;
240)   2903 ED 5B 6B FE 		 LD DE, (FILL_X)	;
241)   2907 2A 6D FE    		 LD HL, (FILL_Y)	;
242)   290A D5          		 PUSH DE	;
243)   290B EB          		 EX DE,HL	;
244)   290C CD A6 29    		 CALL PLOTP	;
245)   290F E1          		 POP HL	;
246)   2910 23          		 INC HL	;
247)   2911 22 6B FE    		 LD (FILL_X), HL	;
248)   2914 18 D2       		 JR FL_LP2	;
251)   2916 2A 6D FE    		 LD HL, (FILL_Y)	;
252)   2919 22 7B FE    		 LD (FILL_PY), HL	;
253)   291C 2A 6F FE    		 LD HL, (FILL_L)	;
254)   291F 22 7D FE    		 LD (FILL_PXL), HL	;
255)   2922 2A 6B FE    		 LD HL, (FILL_X)	;
256)   2925 2B          		 DEC HL	;
257)   2926 22 7F FE    		 LD (FILL_PXR), HL	;
258)   2929 2A 75 FE    		 LD HL, (FILL_DY)	;
259)   292C 22 81 FE    		 LD (FILL_PDY), HL	;
260)   292F CD 67 27    		 CALL QPUSH	;
262)   2932 2A 6B FE    		 LD HL, (FILL_X)	;
263)   2935 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
264)   2939 13          		 INC DE	;
265)   293A A7          		 AND A	;
266)   293B ED 52       		 SBC HL, DE      ;X-(X2+1) C IF X2+1>X	;X-(X2+1) C IF X2+1>X
267)   293D 38 1F       		 JR C, FL_NXT4	;
268)   293F 28 1D       		 JR Z, FL_NXT4	;
269)   2941 2A 6D FE    		 LD HL, (FILL_Y)	;
270)   2944 22 7B FE    		 LD (FILL_PY), HL	;
271)   2947 ED 53 7D FE 		 LD (FILL_PXL), DE	;
272)   294B 2A 6B FE    		 LD HL, (FILL_X)    ;	;
273)   294E 2B          		 DEC HL	;
274)   294F 22 7F FE    		 LD (FILL_PXR), HL	;
275)   2952 2A 75 FE    		 LD HL, (FILL_DY)	;
276)   2955 CD 60 27    		 CALL NEGHL	;
277)   2958 22 81 FE    		 LD (FILL_PDY), HL	;
278)   295B CD 67 27    		 CALL QPUSH	;
281)   295E 2A 6B FE    		 LD HL, (FILL_X)	;
282)   2961 23          		 INC HL	;
283)   2962 22 6B FE    		 LD (FILL_X), HL	;
284)   2965 ED 5B 73 FE 		FL_LP3: LD DE, (FILL_X2)	;
285)   2969 A7          		 AND A	;
286)   296A EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
287)   296B ED 52       		 SBC HL, DE      ;C IF DE>HL X>X2	;C IF DE>HL X>X2
288)   296D 38 1C       		 JR C, FL_NXT5	;
289)   296F 19          		 ADD HL, DE      ;	;
290)   2970 EB          		 EX DE, HL      ;X=HL X2=DE	;X=HL X2=DE
291)   2971 E5          		 PUSH HL	;
292)   2972 2A 6D FE    		 LD HL, (FILL_Y)	;
293)   2975 E5          		 PUSH HL	;
294)   2976 CD F1 24    		 CALL LCD_READPIXEL	;
295)   2979 ED 5B 83 FE 		 LD DE, (FILL_OV)	;
296)   297D A7          		 AND A	;
297)   297E ED 52       		 SBC HL, DE      ;CHK PIXELREAD!=OV ELSE EXIT LOOP	;CHK PIXELREAD!=OV ELSE EXIT LOOP
298)   2980 28 09       		 JR Z, FL_NXT5	;
299)   2982 2A 6B FE    		 LD HL, (FILL_X)	;
300)   2985 23          		 INC HL	;
301)   2986 22 6B FE    		 LD (FILL_X), HL	;
302)   2989 18 DA       		 JR FL_LP3	;
305)   298B 2A 6B FE    		 LD HL, (FILL_X)	;
306)   298E 22 6F FE    		 LD (FILL_L), HL	;
308)   2991 ED 5B 73 FE 		 LD DE, (FILL_X2)	;
309)   2995 A7          		 AND A	;
310)   2996 EB          		 EX DE, HL      ;X2=HL X=DE	;X2=HL X=DE
311)   2997 ED 52       		 SBC HL, DE      ;X2-X C IF X>X2	;X2-X C IF X>X2
312)   2999 EB          		 EX DE, HL      ;X=HL X2-X=DE	;X=HL X2-X=DE
313)   299A DA 68 28    		 JP C, FL_LP0    ; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)	; IF X>X2 THEN EXIT DO WHILE GOTO ;while (sp>stack)
314)   299D C3 E8 28    		 JP FL_LP2      ;GOTO DO WHILE	;GOTO DO WHILE
317)   29A0 21 C2 12    		FL_EXIT: LD HL, (MAXQ * 8) + 2  ; RETREIVE SPACE FOR OUR QUEUE	; RETREIVE SPACE FOR OUR QUEUE
318)   29A3 39          		 ADD HL, SP	;
319)   29A4 F9          		 LD SP, HL      ;NEW SP	;NEW SP
320)   29A5 C9          		 RET	;
  7)   29A6 C5          		@PLOTP:        PUSH BC        ;SAVE BC	;SAVE BC
  8)   29A7 DD E5       		 PUSH IX	;
 11)   29A9 3A BB FE    		 LD A,(SCRNST)	;
 12)   29AC E6 01       		 AND 1	;
 13)   29AE 28 11       		 JR Z, PPNX  	;
 15)   29B0 D5          		               PUSH DE	;
 16)   29B1 E5          		               PUSH HL	;
 19)   29B2 E5          		 PUSH HL	;
 20)   29B3 D5          		 PUSH DE	;
 21)   29B4 E5          		 PUSH HL	;
 22)   29B5 D5          		 PUSH DE	;
 23)   29B6 CD 8D 24    		 CALL LCD_SETXY	;
 25)   29B9 2A 01 FE    		 LD HL, (FCOLOR)	;
 26)   29BC CD DA 24    		 CALL LCD_SETPIXEL	;
 29)   29BF E1          		               POP HL	;
 30)   29C0 D1          		               POP DE                 	;
 31)   29C1 3A BB FE    		PPNX: LD A,(SCRNST)	;
 32)   29C4 E6 02       		 AND 2	;
 33)   29C6 28 06       		 JR Z, PPNX2  	;
 35)   29C8 3A 43 FF    		               LD A,(VGAFCOL)	;
 36)   29CB CD 5D 22    		               CALL VGA_PLTPXL	;
 38)   29CE DD E1       		PPNX2: POP IX	;
 39)   29D0 C1          		 POP BC         ;RESTORE BC	;RESTORE BC
 40)   29D1 C9          		 RET	;
 43)   29D2 CD 14 27    		@CLEARGRAPH:   CALL LCD_CLRSCR	;
 44)   29D5 CD E3 20    		 CALL VGA_GRCLS	;
 45)   29D8 C9          		               RET	;
 49)   29D9 DD 21 02 00 		@GR_DRAWHLINE: LD IX, 2      ;3 PARAMS 2-BYTES EACH TOTAL 6 BYTES  	;3 PARAMS 2-BYTES EACH TOTAL 6 BYTES
 50)   29DD DD 39       		 ADD IX, SP	;
 51)   29DF DD 66 05    		 LD H, (IX + 5)        ;X	;X
 52)   29E2 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
 53)   29E5 DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
 54)   29E8 DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
 55)   29EB DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
 56)   29EE DD 4E 00    		 LD C, (IX)        ;LENGTH   	;LENGTH
 57)   29F1 E5          		 PUSH HL	;
 58)   29F2 21 00 80    		 LD HL, $8000	;
 59)   29F5 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
 60)   29F6 ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
 61)   29F8 30 0A       		 JR NC, POSH1	;
 62)   29FA AF          		 XOR A         ;l=-l	;l=-l
 63)   29FB 91          		 SUB C	;
 64)   29FC 4F          		 LD C, A	;
 65)   29FD 9F          		 SBC A, A	;
 66)   29FE 90          		 SUB B	;
 67)   29FF 47          		 LD B, A	;
 68)   2A00 E1          		 POP HL	;
 69)   2A01 ED 42       		 SBC HL, BC        ;x -= l;	;x -= l;
 70)   2A03 E5          		 PUSH HL	;
 71)   2A04 E1          		POSH1: POP HL 	;
 72)   2A05 E5          		NXTH1: PUSH HL	;
 73)   2A06 D5          		               PUSH DE                	;
 74)   2A07 CD A6 29    		               CALL PLOTP                     ;HL X,DE Y                	;HL X,DE Y
 75)   2A0A D1          		               POP DE	;
 76)   2A0B E1          		               POP HL                	;
 77)   2A0C 23          		               INC HL	;
 78)   2A0D 0B          		 DEC BC	;
 79)   2A0E 79          		 LD A, C	;
 80)   2A0F B0          		 OR B	;
 81)   2A10 20 F3       		 JR NZ, NXTH1	;
 82)   2A12 CD 42 25    		 CALL LCD_CLRXY	;
 83)   2A15 D1          		 POP DE	;
 84)   2A16 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
 85)   2A19 39          		 ADD HL, SP	;
 86)   2A1A F9          		 LD SP, HL	;
 87)   2A1B EB          		 EX DE, HL	;
 88)   2A1C E9          		 JP (HL)	;
 94)   2A1D DD 21 02 00 		 LD IX, 2	;
 95)   2A21 DD 39       		 ADD IX, SP	;
 96)   2A23 DD 66 05    		 LD H, (IX + 5)        ;X	;X
 97)   2A26 DD 6E 04    		 LD L, (IX + 4)        ;X	;X
 98)   2A29 DD 56 03    		 LD D, (IX + 3)        ;Y	;Y
 99)   2A2C DD 5E 02    		 LD E, (IX + 2)        ;Y	;Y
100)   2A2F DD 46 01    		 LD B, (IX + 1)        ;LENGTH	;LENGTH
101)   2A32 DD 4E 00    		 LD C, (IX)        ;LENGTH	;LENGTH
102)   2A35 E5          		 PUSH HL	;
103)   2A36 21 00 80    		 LD HL, $8000	;
104)   2A39 B7          		 OR A         ;CLEAR CARRY	;CLEAR CARRY
105)   2A3A ED 42       		 SBC HL, BC        ;CHECK IF LENGTH<0	;CHECK IF LENGTH<0
106)   2A3C 30 0A       		 JR NC, POSV1	;
107)   2A3E AF          		 XOR A         ;l=-l	;l=-l
108)   2A3F 91          		 SUB C	;
109)   2A40 4F          		 LD C, A	;
110)   2A41 9F          		 SBC A, A	;
111)   2A42 90          		 SUB B	;
112)   2A43 47          		 LD B, A	;
113)   2A44 EB          		 EX DE,HL	;
114)   2A45 ED 42       		 SBC HL, BC        ;Y -= l;	;Y -= l;
115)   2A47 EB          		 EX DE,HL	;
116)   2A48 E1          		POSV1: POP HL	;
117)   2A49 E5          		NXTV1: PUSH HL	;
118)   2A4A D5          		               PUSH DE	;
119)   2A4B CD A6 29    		               CALL PLOTP	;
120)   2A4E D1          		               POP DE	;
121)   2A4F E1          		               POP HL	;
122)   2A50 13          		               INC DE	;
123)   2A51 0B          		 DEC BC	;
124)   2A52 79          		 LD A, C	;
125)   2A53 B0          		 OR B	;
126)   2A54 20 F3       		 JR NZ, NXTV1	;
127)   2A56 CD 42 25    		 CALL LCD_CLRXY	;
128)   2A59 D1          		 POP DE	;
129)   2A5A 21 06 00    		 LD HL, 6        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
130)   2A5D 39          		 ADD HL, SP	;
131)   2A5E F9          		 LD SP, HL	;
132)   2A5F EB          		 EX DE, HL	;
133)   2A60 E9          		 JP (HL)	;
137)   2A61 DD 21 02 00 		 LD IX, 2	;
138)   2A65 DD 39       		 ADD IX, SP	;
148)   2A67 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
149)   2A6A DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
150)   2A6D DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
151)   2A70 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
152)   2A73 B7          		 OR A	;
153)   2A74 ED 52       		 SBC HL, DE	;
154)   2A76 20 17       		 JR NZ, YNOTEQ	;
156)   2A78 DD 46 07    		 LD B, (IX + 7)        ;X1	;X1
157)   2A7B DD 4E 06    		 LD C, (IX + 6)        ;X1	;X1
158)   2A7E C5          		 PUSH BC        ;X1 1ST PARAM ON STACK	;X1 1ST PARAM ON STACK
159)   2A7F D5          		 PUSH DE        ;Y 2ND PARAM ON STACK	;Y 2ND PARAM ON STACK
160)   2A80 DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
161)   2A83 DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
162)   2A86 ED 42       		 SBC HL, BC        ;X2-X1 = LENGTH OF HORIZ LINE	;X2-X1 = LENGTH OF HORIZ LINE
163)   2A88 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
164)   2A89 CD D9 29    		 CALL GR_DRAWHLINE	;
165)   2A8C C3 30 2C    		 JP DLNEX	;
167)   2A8F DD 66 07    		 LD H, (IX + 7)        ;X1	;X1
168)   2A92 DD 6E 06    		 LD L, (IX + 6)        ;X1	;X1
169)   2A95 DD 56 03    		 LD D, (IX + 3)        ;X2	;X2
170)   2A98 DD 5E 02    		 LD E, (IX + 2)        ;X2	;X2
171)   2A9B B7          		 OR A	;
172)   2A9C ED 52       		 SBC HL, DE	;
173)   2A9E 20 17       		 JR NZ, XNOTEQ	;
175)   2AA0 D5          		 PUSH DE        ;X2=X1 1ST PARAM ON STACK	;X2=X1 1ST PARAM ON STACK
176)   2AA1 DD 46 05    		 LD B, (IX + 5)        ;Y1	;Y1
177)   2AA4 DD 4E 04    		 LD C, (IX + 4)        ;Y1	;Y1
178)   2AA7 C5          		 PUSH BC        ;Y1 2ND PARAM ON STACK	;Y1 2ND PARAM ON STACK
179)   2AA8 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
180)   2AAB DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
181)   2AAE ED 42       		 SBC HL, BC        ;Y2-Y1 = LENGTH OF VERT LINE	;Y2-Y1 = LENGTH OF VERT LINE
182)   2AB0 E5          		 PUSH HL        ;LENGTH 3RD PARAM ON STACK	;LENGTH 3RD PARAM ON STACK
183)   2AB1 CD 1D 2A    		 CALL GR_DRAWVLINE	;
184)   2AB4 C3 30 2C    		 JP DLNEX	;
187)   2AB7 38 04       		 JR C, X2GTX1	;
189)   2AB9 AF          		 XOR A	;
190)   2ABA 3D          		 DEC A         ;XSTEP=-1	;XSTEP=-1
191)   2ABB 18 0D       		 JR DLNXT1	;
194)   2ABD D5          		 PUSH DE	;
195)   2ABE E1          		 POP HL	;
196)   2ABF DD 56 07    		 LD D, (IX + 7)        ;X1	;X1
197)   2AC2 DD 5E 06    		 LD E, (IX + 6)        ;X1	;X1
198)   2AC5 B7          		 OR A	;
199)   2AC6 ED 52       		 SBC HL, DE        ;X2-X1 ON HL	;X2-X1 ON HL
201)   2AC8 3E 01       		 LD A, 1        ;XSTEP=1	;XSTEP=1
203)   2ACA 06 00       		 LD B, 0	;
204)   2ACC 0E 00       		 LD C, 0	;
205)   2ACE C5          		 PUSH BC        ;T	;T
206)   2ACF E5          		 PUSH HL        ;DX	;DX
207)   2AD0 FE 01       		 CP 1	;
208)   2AD2 28 02       		 JR Z, DLXMINUS1	;
209)   2AD4 06 FF       		 LD B, 0XFF	;
210)   2AD6 4F          		DLXMINUS1: LD C, A	;
211)   2AD7 C5          		 PUSH BC        ;XSTEP	;XSTEP
212)   2AD8 DD 66 05    		 LD H, (IX + 5)        ;Y1	;Y1
213)   2ADB DD 6E 04    		 LD L, (IX + 4)        ;Y1	;Y1
214)   2ADE DD 56 01    		 LD D, (IX + 1)        ;Y2	;Y2
215)   2AE1 DD 5E 00    		 LD E, (IX)        ;Y2	;Y2
216)   2AE4 B7          		 OR A	;
217)   2AE5 ED 52       		 SBC HL, DE	;
218)   2AE7 38 04       		 JR C, Y2GTY1        ;HL=Y1-Y2	;HL=Y1-Y2
219)   2AE9 AF          		 XOR A	;
220)   2AEA 3D          		 DEC A         ;YSTEP=-1	;YSTEP=-1
221)   2AEB 18 0F       		 JR DLNXT2	;
224)   2AED D5          		 PUSH DE	;
225)   2AEE E1          		 POP HL	;
226)   2AEF DD 56 05    		 LD D, (IX + 5)        ;Y1	;Y1
227)   2AF2 DD 5E 04    		 LD E, (IX + 4)        ;Y1	;Y1
228)   2AF5 B7          		 OR A	;
229)   2AF6 ED 52       		 SBC HL, DE        ;HL=Y2-Y1    HL=DY	;HL=Y2-Y1    HL=DY
230)   2AF8 06 00       		 LD B, 0	;
231)   2AFA 3E 01       		 LD A, 1        ;YSTEP=1	;YSTEP=1
233)   2AFC FE 01       		 CP 1	;
234)   2AFE 28 02       		 JR Z, DLYMINUS1	;
235)   2B00 06 FF       		 LD B, 0XFF	;
237)   2B02 4F          		 LD C, A	;
238)   2B03 E5          		 PUSH HL        ;DY	;DY
239)   2B04 C5          		 PUSH BC        ;YSTEP	;YSTEP
240)   2B05 FD 21 00 00 		 LD IY, 0	;
241)   2B09 FD 39       		 ADD IY, SP	;
256)   2B0B FD 56 07    		 LD D, (IY + 7)        ;DX	;DX
257)   2B0E FD 5E 06    		 LD E, (IY + 6)        ;DX	;DX
258)   2B11 B7          		 OR A	;
259)   2B12 ED 52       		 SBC HL, DE        ;DY-DX	;DY-DX
260)   2B14 DA A3 2B    		 JP C, DXGTDY	;
261)   2B17 CA A3 2B    		 JP Z, DXGTDY	;
263)   2B1A 19          		 ADD HL, DE        ;HL=DY	;HL=DY
264)   2B1B 44          		 LD B, H	;
265)   2B1C 4D          		 LD C, L	;
266)   2B1D CB 38       		 SRL B	;
267)   2B1F CB 19       		 RR C         ;(dy >> 1)	;(dy >> 1)
268)   2B21 21 00 00    		 LD HL, 0	;
269)   2B24 ED 42       		 SBC HL, BC        ;t = - (dy >> 1);	;t = - (dy >> 1);
270)   2B26 FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
271)   2B29 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
273)   2B2C DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
274)   2B2F DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
275)   2B32 DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
276)   2B35 DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
277)   2B38 D5          		 PUSH DE	;
278)   2B39 DD E5       		 PUSH IX	;
281)   2B3B E5          		               PUSH HL	;
282)   2B3C D5          		               PUSH DE	;
283)   2B3D CD A6 29    		               CALL PLOTP	;
284)   2B40 D1          		               POP DE	;
285)   2B41 E1          		               POP HL	;
287)   2B42 DD E1       		 POP IX	;
288)   2B44 D1          		 POP DE	;
289)   2B45 DD 66 01    		 LD H, (IX + 1)        ;Y2	;Y2
290)   2B48 DD 6E 00    		 LD L, (IX)        ;Y2	;Y2
291)   2B4B ED 52       		 SBC HL, DE        ; ROW=Y2	; ROW=Y2
292)   2B4D CA 2B 2C    		 JP Z, DLEXIT	;
293)   2B50 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
294)   2B53 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
295)   2B56 EB          		 EX DE, HL	;
296)   2B57 09          		 ADD HL, BC        ;row += ystep;	;row += ystep;
297)   2B58 DD 74 05    		 LD (IX + 5), H        ;SAVE ROW	;SAVE ROW
298)   2B5B DD 75 04    		 LD (IX + 4), L        ;	;
300)   2B5E FD 56 09    		 LD D, (IY + 9)        ; T	; T
301)   2B61 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
302)   2B64 FD 66 07    		 LD H, (IY + 7)        ;DX	;DX
303)   2B67 FD 6E 06    		 LD L, (IY + 6)        ;DX	;DX
304)   2B6A 19          		 ADD HL, DE	;
305)   2B6B FD 74 09    		 LD (IY + 9), H        ;t += dx;	;t += dx;
306)   2B6E FD 75 08    		 LD (IY + 8), L	;
307)   2B71 EB          		 EX DE, HL	;
308)   2B72 21 00 80    		 LD HL, $8000	;
309)   2B75 ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
310)   2B77 38 B3       		 JR C, DLAGN1        ; CARRY SET IF NEGATIVE	; CARRY SET IF NEGATIVE
311)   2B79 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
312)   2B7C FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
313)   2B7F DD 66 07    		 LD H, (IX + 7)        ;COL HI	;COL HI
314)   2B82 DD 6E 06    		 LD L, (IX + 6)        ;COL LO	;COL LO
315)   2B85 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
316)   2B86 DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
317)   2B89 DD 75 06    		 LD (IX + 6), L        ;	;
319)   2B8C FD 66 09    		 LD H, (IY + 9)        ; T	; T
320)   2B8F FD 6E 08    		 LD L, (IY + 8)        ; T	; T
321)   2B92 FD 46 03    		 LD B, (IY + 3)        ;DY	;DY
322)   2B95 FD 4E 02    		 LD C, (IY + 2)        ;DY	;DY
323)   2B98 ED 42       		 SBC HL, BC	;
324)   2B9A FD 74 09    		 LD (IY + 9), H        ;t -= dY;	;t -= dY;
325)   2B9D FD 75 08    		 LD (IY + 8), L	;
326)   2BA0 C3 2C 2B    		 JP DLAGN1	;
328)   2BA3 19          		 ADD HL, DE        ;HL=DY DE=DX	;HL=DY DE=DX
329)   2BA4 42          		 LD B, D	;
330)   2BA5 4B          		 LD C, E	;
331)   2BA6 CB 38       		 SRL B	;
332)   2BA8 CB 19       		 RR C         ;(dX >> 1)	;(dX >> 1)
333)   2BAA 21 00 00    		 LD HL, 0	;
334)   2BAD ED 42       		 SBC HL, BC        ;t = - (dX >> 1);	;t = - (dX >> 1);
335)   2BAF FD 74 09    		 LD (IY + 9), H        ;SAVE T	;SAVE T
336)   2BB2 FD 75 08    		 LD (IY + 8), L        ;SAVE T	;SAVE T
338)   2BB5 DD 56 05    		 LD D, (IX + 5)        ;ROW	;ROW
339)   2BB8 DD 5E 04    		 LD E, (IX + 4)        ;ROW=Y1	;ROW=Y1
340)   2BBB DD 66 07    		 LD H, (IX + 7)        ;COL	;COL
341)   2BBE DD 6E 06    		 LD L, (IX + 6)        ;COL=X1	;COL=X1
342)   2BC1 E5          		 PUSH HL        ;SAVE COL	;SAVE COL
343)   2BC2 DD E5       		 PUSH IX	;
345)   2BC4 E5          		 PUSH HL	;
346)   2BC5 D5          		 PUSH DE	;
347)   2BC6 CD A6 29    		               CALL PLOTP	;
348)   2BC9 D1          		               POP DE	;
349)   2BCA E1          		               POP HL	;
351)   2BCB DD E1       		 POP IX	;
352)   2BCD D1          		 POP DE         ;RETRIEVE COL	;RETRIEVE COL
353)   2BCE DD 66 03    		 LD H, (IX + 3)        ;X2	;X2
354)   2BD1 DD 6E 02    		 LD L, (IX + 2)        ;X2	;X2
355)   2BD4 ED 52       		 SBC HL, DE        ; COL=X2?	; COL=X2?
356)   2BD6 28 53       		 JR Z, DLEXIT	;
357)   2BD8 EB          		 EX DE, HL        ;HL=COL	;HL=COL
358)   2BD9 FD 46 05    		 LD B, (IY + 5)        ;XSTEP HI	;XSTEP HI
359)   2BDC FD 4E 04    		 LD C, (IY + 4)        ;XSTEP LO	;XSTEP LO
360)   2BDF 09          		 ADD HL, BC        ;col += xstep;	;col += xstep;
361)   2BE0 DD 74 07    		 LD (IX + 7), H        ;SAVE COL	;SAVE COL
362)   2BE3 DD 75 06    		 LD (IX + 6), L        ;	;
363)   2BE6 FD 56 09    		 LD D, (IY + 9)        ; T	; T
364)   2BE9 FD 5E 08    		 LD E, (IY + 8)        ; T	; T
365)   2BEC FD 66 03    		 LD H, (IY + 3)        ;DY	;DY
366)   2BEF FD 6E 02    		 LD L, (IY + 2)        ;DY	;DY
367)   2BF2 19          		 ADD HL, DE	;
368)   2BF3 FD 74 09    		 LD (IY + 9), H        ;t += dY;	;t += dY;
369)   2BF6 FD 75 08    		 LD (IY + 8), L	;
370)   2BF9 EB          		 EX DE, HL        ;T=DE	;T=DE
371)   2BFA 21 00 80    		 LD HL, $8000	;
372)   2BFD ED 52       		 SBC HL, DE        ;CHECK IF T<0	;CHECK IF T<0
373)   2BFF 38 B4       		 JR C, DLAGN2        ;CARRY SET IF NEGATIVE	;CARRY SET IF NEGATIVE
374)   2C01 FD 46 01    		 LD B, (IY + 1)        ;YSTEP HI	;YSTEP HI
375)   2C04 FD 4E 00    		 LD C, (IY)        ;YSTEP LO	;YSTEP LO
376)   2C07 DD 66 05    		 LD H, (IX + 5)        ;ROW HI	;ROW HI
377)   2C0A DD 6E 04    		 LD L, (IX + 4)        ;ROW LO	;ROW LO
378)   2C0D 09          		 ADD HL, BC        ;ROW += Ystep;	;ROW += Ystep;
379)   2C0E DD 74 05    		 LD (IX + 5), H        ;SAVE COL	;SAVE COL
380)   2C11 DD 75 04    		 LD (IX + 4), L        ;	;
382)   2C14 FD 66 09    		 LD H, (IY + 9)        ; T	; T
383)   2C17 FD 6E 08    		 LD L, (IY + 8)        ; T	; T
384)   2C1A FD 46 07    		 LD B, (IY + 7)        ;DX	;DX
385)   2C1D FD 4E 06    		 LD C, (IY + 6)        ;DX	;DX
386)   2C20 ED 42       		 SBC HL, BC	;
387)   2C22 FD 74 09    		 LD (IY + 9), H        ;t -= dX;	;t -= dX;
388)   2C25 FD 75 08    		 LD (IY + 8), L	;
389)   2C28 C3 B5 2B    		 JP DLAGN2	;
392)   2C2B 21 0A 00    		 LD HL, 5 * 2        ;REMOVE 5 IY PARAMS FROM STACK	;REMOVE 5 IY PARAMS FROM STACK
393)   2C2E 39          		 ADD HL, SP        ;	;
394)   2C2F F9          		 LD SP, HL	;
395)   2C30 D1          		DLNEX: POP DE         ;RET ADDR	;RET ADDR
396)   2C31 21 08 00    		 LD HL, 4 * 2        ;REMOVE 4 PARAMS FROM STACK	;REMOVE 4 PARAMS FROM STACK
397)   2C34 39          		 ADD HL, SP	;
398)   2C35 F9          		 LD SP, HL	;
399)   2C36 EB          		 EX DE, HL	;
400)   2C37 E9          		 JP (HL)	;
406)   2C38 E1          		 POP HL         ;GET THE RETURN ADDRESS	;GET THE RETURN ADDRESS
407)   2C39 D5          		 PUSH DE        ;F VAR	;F VAR
408)   2C3A D5          		 PUSH DE        ;DDF_X	;DDF_X
409)   2C3B D5          		 PUSH DE        ;DDF_Y	;DDF_Y
410)   2C3C D5          		 PUSH DE        ;X1	;X1
411)   2C3D D5          		 PUSH DE        ;Y1	;Y1
412)   2C3E E5          		 PUSH HL        ;RET ADDR	;RET ADDR
413)   2C3F DD 21 02 00 		 LD IX, 2	;
414)   2C43 DD 39       		 ADD IX, SP	;
432)   2C45 AF          		 XOR A	;
433)   2C46 DD 56 0B    		 LD D, (IX + 11)       ;R	;R
434)   2C49 DD 5E 0A    		 LD E, (IX + 10)       ;R	;R
435)   2C4C DD 72 01    		 LD (IX + 1), D        ;Y1=R	;Y1=R
436)   2C4F DD 73 00    		 LD (IX + 0), E	;
437)   2C52 21 01 00    		 LD HL, 1	;
438)   2C55 DD 74 07    		 LD (IX + 7), H        ;DDF_X=1	;DDF_X=1
439)   2C58 DD 75 06    		 LD (IX + 6), L	;
440)   2C5B DD 74 03    		 LD (IX + 3), H        ;X1=0	;X1=0
441)   2C5E DD 74 02    		 LD (IX + 2), H	;
442)   2C61 ED 52       		 SBC HL, DE	;
443)   2C63 DD 74 09    		 LD (IX + 9), H        ;F	;F
444)   2C66 DD 75 08    		 LD (IX + 8), L        ;F	;F
446)   2C69 EB          		 EX DE, HL        ;HL=RADIUS	;HL=RADIUS
447)   2C6A 29          		 ADD HL, HL        ;2*R	;2*R
448)   2C6B EB          		 EX DE, HL	;
449)   2C6C 21 00 00    		 LD HL, 0	;
450)   2C6F ED 52       		 SBC HL, DE        ;-2*R	;-2*R
451)   2C71 DD 74 05    		 LD (IX + 5), H	;
452)   2C74 DD 75 04    		 LD (IX + 4), L        ;DDF_Y	;DDF_Y
454)   2C77 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
455)   2C7A DD 6E 0C    		 LD L, (IX + 12)	;
456)   2C7D E5          		 PUSH HL        ;SAVE Y	;SAVE Y
457)   2C7E DD 56 0B    		 LD D, (IX + 11)       ;R	;R
458)   2C81 DD 5E 0A    		 LD E, (IX + 10)	;
459)   2C84 D5          		 PUSH DE        ;SAVE R	;SAVE R
460)   2C85 19          		 ADD HL, DE        ;Y+R	;Y+R
461)   2C86 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
462)   2C89 DD 5E 0E    		 LD E, (IX + 14)	;
463)   2C8C D5          		 PUSH DE        ;SAVE X	;SAVE X
464)   2C8D EB          		 EX DE,HL	;
466)   2C8E CD A6 29    		 CALL PLOTP	;
468)   2C91 D1          		 POP DE         ;GET X	;GET X
469)   2C92 C1          		 POP BC         ;GET R	;GET R
470)   2C93 E1          		 POP HL         ;GET Y	;GET Y
471)   2C94 E5          		 PUSH HL        ;SAVE VARS	;SAVE VARS
472)   2C95 C5          		 PUSH BC	;
473)   2C96 D5          		 PUSH DE	;
474)   2C97 AF          		 XOR A	;
475)   2C98 ED 42       		 SBC HL, BC        ;	;
477)   2C9A EB          		 EX DE,HL	;
478)   2C9B CD A6 29    		 CALL PLOTP	;
480)   2C9E E1          		 POP HL         ;GET X	;GET X
481)   2C9F C1          		 POP BC         ;GET R	;GET R
482)   2CA0 D1          		 POP DE         ;GET Y	;GET Y
483)   2CA1 D5          		 PUSH DE        ;SAVE VARS	;SAVE VARS
484)   2CA2 C5          		 PUSH BC	;
485)   2CA3 E5          		 PUSH HL	;
486)   2CA4 AF          		 XOR A	;
487)   2CA5 ED 4A       		 ADC HL, BC	;
490)   2CA7 CD A6 29    		 CALL PLOTP	;
492)   2CAA E1          		 POP HL         ;GET X	;GET X
493)   2CAB C1          		 POP BC         ;GET R	;GET R
494)   2CAC D1          		 POP DE         ;GET Y	;GET Y
495)   2CAD AF          		 XOR A	;
496)   2CAE ED 42       		 SBC HL, BC	;
499)   2CB0 CD A6 29    		 CALL PLOTP	;
502)   2CB3 DD 66 03    		CIRC_AGN: LD H, (IX + 3)       ;X1	;X1
503)   2CB6 DD 6E 02    		 LD L, (IX + 2)        ;X1	;X1
504)   2CB9 DD 56 01    		 LD D, (IX + 1)        ;Y1	;Y1
505)   2CBC DD 5E 00    		 LD E, (IX + 0)        ;Y1	;Y1
506)   2CBF AF          		 XOR A	;
507)   2CC0 ED 52       		 SBC HL, DE	;
508)   2CC2 D2 B9 2D    		 JP NC, CIRC_EXIT	;
510)   2CC5 19          		 ADD HL, DE	;
511)   2CC6 E5          		 PUSH HL        ;SAVE X1	;SAVE X1
512)   2CC7 D5          		 PUSH DE        ;SAVE Y1	;SAVE Y1
513)   2CC8 21 00 00    		 LD HL, 0	;
514)   2CCB AF          		 XOR A	;
517)   2CCC DD 7E 09    		 LD A, (IX + 9)        ;F HI BYTE	;F HI BYTE
518)   2CCF FE 50       		 CP 80	;
519)   2CD1 30 26       		 JR NC, CIRC_SKIP	;
520)   2CD3 28 24       		 JR Z, CIRC_SKIP	;
524)   2CD5 D1          		 POP DE         ;Y1	;Y1
525)   2CD6 1B          		 DEC DE	;
526)   2CD7 DD 72 01    		 LD (IX + 1), D        ;SAVE Y1	;SAVE Y1
527)   2CDA DD 73 00    		 LD (IX + 0), E	;
528)   2CDD D5          		 PUSH DE        ;Y1	;Y1
529)   2CDE DD 66 05    		 LD H, (IX + 5)        ;DDF_Y	;DDF_Y
530)   2CE1 DD 6E 04    		 LD L, (IX + 4)	;
531)   2CE4 23          		 INC HL	;
532)   2CE5 23          		 INC HL	;
533)   2CE6 DD 74 05    		 LD (IX + 5), H        ;SAVE DDF_Y	;SAVE DDF_Y
534)   2CE9 DD 75 04    		 LD (IX + 4), L	;
535)   2CEC DD 56 09    		 LD D, (IX + 9)        ;F	;F
536)   2CEF DD 5E 08    		 LD E, (IX + 8)	;
537)   2CF2 19          		 ADD HL, DE	;
538)   2CF3 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
539)   2CF6 DD 75 08    		 LD (IX + 8), L	;
543)   2CF9 C1          		 POP BC         ;Y1	;Y1
544)   2CFA E1          		 POP HL         ;X1	;X1
545)   2CFB 23          		 INC HL	;
546)   2CFC DD 74 03    		 LD (IX + 3), H        ;SAVE X1	;SAVE X1
547)   2CFF DD 75 02    		 LD (IX + 2), L	;
548)   2D02 E5          		 PUSH HL        ;X1	;X1
549)   2D03 DD 66 07    		 LD H, (IX + 7)        ;DDF_X	;DDF_X
550)   2D06 DD 6E 06    		 LD L, (IX + 6)	;
551)   2D09 23          		 INC HL	;
552)   2D0A 23          		 INC HL	;
553)   2D0B DD 74 07    		 LD (IX + 7), H        ;SAVE DDF_X	;SAVE DDF_X
554)   2D0E DD 75 06    		 LD (IX + 6), L	;
555)   2D11 DD 56 09    		 LD D, (IX + 9)        ;F	;F
556)   2D14 DD 5E 08    		 LD E, (IX + 8)	;
557)   2D17 19          		 ADD HL, DE	;
558)   2D18 DD 74 09    		 LD (IX + 9), H        ;SAVE F	;SAVE F
559)   2D1B DD 75 08    		 LD (IX + 8), L	;
562)   2D1E E1          		 POP HL         ;X1	;X1
563)   2D1F E5          		 PUSH HL	;
564)   2D20 DD 56 0F    		 LD D, (IX + 15)       ;X	;X
565)   2D23 DD 5E 0E    		 LD E, (IX + 14)	;
566)   2D26 D5          		 PUSH DE	;
567)   2D27 19          		 ADD HL, DE	;
568)   2D28 EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
569)   2D29 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
570)   2D2C DD 6E 0C    		 LD L, (IX + 12)  	;
571)   2D2F 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
573)   2D30 EB          		 EX DE,HL	;
574)   2D31 CD A6 29    		 CALL PLOTP	;
576)   2D34 E1          		 POP HL         ;X	;X
577)   2D35 D1          		 POP DE         ;X1	;X1
578)   2D36 D5          		 PUSH DE	;
579)   2D37 E5          		 PUSH HL	;
580)   2D38 AF          		 XOR A	;
581)   2D39 ED 52       		 SBC HL, DE	;
582)   2D3B EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
583)   2D3C DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
584)   2D3F DD 6E 0C    		 LD L, (IX + 12)	;
585)   2D42 09          		 ADD HL, BC        ;HL=Y+Y1	;HL=Y+Y1
587)   2D43 EB          		 EX DE,HL	;
588)   2D44 CD A6 29    		 CALL PLOTP	;
590)   2D47 E1          		 POP HL         ;X	;X
591)   2D48 D1          		 POP DE         ;X1	;X1
592)   2D49 D5          		 PUSH DE	;
593)   2D4A E5          		 PUSH HL	;
594)   2D4B 19          		 ADD HL, DE	;
595)   2D4C EB          		 EX DE, HL        ;DE=X+X1	;DE=X+X1
596)   2D4D DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
597)   2D50 DD 6E 0C    		 LD L, (IX + 12)	;
598)   2D53 AF          		 XOR A	;
599)   2D54 ED 42       		 SBC HL, BC        ;HL=Y+Y1	;HL=Y+Y1
601)   2D56 EB          		 EX DE,HL	;
602)   2D57 CD A6 29    		 CALL PLOTP	;
604)   2D5A E1          		 POP HL         ;X	;X
605)   2D5B D1          		 POP DE         ;X1	;X1
606)   2D5C D5          		 PUSH DE	;
607)   2D5D E5          		 PUSH HL	;
608)   2D5E AF          		 XOR A	;
609)   2D5F ED 52       		 SBC HL, DE	;
610)   2D61 EB          		 EX DE, HL        ;DE=X-X1	;DE=X-X1
611)   2D62 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
612)   2D65 DD 6E 0C    		 LD L, (IX + 12)	;
613)   2D68 AF          		 XOR A	;
614)   2D69 ED 42       		 SBC HL, BC        ;HL=Y-Y1	;HL=Y-Y1
616)   2D6B EB          		 EX DE,HL	;
617)   2D6C CD A6 29    		 CALL PLOTP	;
619)   2D6F E1          		 POP HL         ;X	;X
620)   2D70 D1          		 POP DE         ;X1	;X1
621)   2D71 C5          		 PUSH BC        ;SAVE Y1 SWITCH DE AND BC	;SAVE Y1 SWITCH DE AND BC
622)   2D72 E5          		 PUSH HL        ;SAVE X	;SAVE X
623)   2D73 D5          		 PUSH DE        ;SAVE X1	;SAVE X1
624)   2D74 09          		 ADD HL, BC        ;	;
625)   2D75 C1          		 POP BC         ;BC=X1	;BC=X1
626)   2D76 EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
627)   2D77 DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
628)   2D7A DD 6E 0C    		 LD L, (IX + 12)	;
629)   2D7D 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
631)   2D7E EB          		 EX DE,HL	;
632)   2D7F CD A6 29    		 CALL PLOTP	;
634)   2D82 E1          		 POP HL         ;X	;X
635)   2D83 D1          		 POP DE         ;Y1	;Y1
636)   2D84 D5          		 PUSH DE	;
637)   2D85 E5          		 PUSH HL	;
638)   2D86 AF          		 XOR A	;
639)   2D87 ED 52       		 SBC HL, DE	;
640)   2D89 EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
641)   2D8A DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
642)   2D8D DD 6E 0C    		 LD L, (IX + 12)	;
643)   2D90 09          		 ADD HL, BC        ;HL=Y+X1	;HL=Y+X1
645)   2D91 EB          		 EX DE,HL	;
646)   2D92 CD A6 29    		 CALL PLOTP	;
648)   2D95 E1          		 POP HL         ;X	;X
649)   2D96 D1          		 POP DE         ;Y1	;Y1
650)   2D97 D5          		 PUSH DE	;
651)   2D98 E5          		 PUSH HL	;
652)   2D99 19          		 ADD HL, DE	;
653)   2D9A EB          		 EX DE, HL        ;DE=X+Y1	;DE=X+Y1
654)   2D9B DD 66 0D    		 LD H, (IX + 13)       ;Y	;Y
655)   2D9E DD 6E 0C    		 LD L, (IX + 12)	;
656)   2DA1 AF          		 XOR A	;
657)   2DA2 ED 42       		 SBC HL, BC        ;HL=Y-X1	;HL=Y-X1
658)   2DA4 E5          		 PUSH HL	;
660)   2DA5 EB          		 EX DE,HL	;
661)   2DA6 CD A6 29    		 CALL PLOTP	;
663)   2DA9 C1          		 POP BC         ;Y-X1	;Y-X1
664)   2DAA E1          		 POP HL         ;X	;X
665)   2DAB D1          		 POP DE         ;Y1	;Y1
666)   2DAC AF          		 XOR A	;
667)   2DAD ED 52       		 SBC HL, DE	;
668)   2DAF EB          		 EX DE, HL        ;DE=X-Y1	;DE=X-Y1
669)   2DB0 C5          		 PUSH BC	;
670)   2DB1 E1          		 POP HL         ;HL=Y-X1	;HL=Y-X1
672)   2DB2 EB          		 EX DE,HL	;
673)   2DB3 CD A6 29    		 CALL PLOTP	;
674)   2DB6 C3 B3 2C    		 JP CIRC_AGN	;
675)   2DB9 CD 42 25    		CIRC_EXIT: CALL LCD_CLRXY	;
676)   2DBC D1          		 POP DE         ;GET RET ADDR	;GET RET ADDR
677)   2DBD 21 10 00    		 LD HL, 8 * 2        ;REMOVE PARAMS FROM STACK	;REMOVE PARAMS FROM STACK
678)   2DC0 39          		 ADD HL, SP        ;	;
679)   2DC1 F9          		 LD SP, HL	;
680)   2DC2 EB          		 EX DE, HL	;
681)   2DC3 E9          		 JP (HL)                	;
108)   2DC4 ED 44       		DELAYABIT: NEG  ;8 CLOCK CYCLES	;8 CLOCK CYCLES
109)   2DC6 ED 44       		 NEG	;
110)   2DC8 ED 44       		 NEG	;
111)   2DCA ED 44       		 NEG	;
112)   2DCC ED 44       		 NEG	;
113)   2DCE ED 44       		 NEG	;
114)   2DD0 ED 44       		 NEG	;
115)   2DD2 ED 44       		 NEG	;
116)   2DD4 C9          		 RET	;
123)   2DD5 D3 38       		SND_OUT: OUT (DEVSND),A ;SEND TO SOUND	;SEND TO SOUND
139)   2DD7 CD C4 2D    		 CALL DELAYABIT	;
140)   2DDA C9          		 RET	;
142)   2DDB 3E 9F       		SND_MUTEALL:   LD A,$9F  ;MUTE CHANNEL 0	;MUTE CHANNEL 0
143)   2DDD CD D5 2D    		 CALL SND_OUT	;
144)   2DE0 3E BF       		 LD A,$BF  ;MUTE CHANNEL 1	;MUTE CHANNEL 1
145)   2DE2 CD D5 2D    		 CALL SND_OUT	;
146)   2DE5 3E DF       		 LD A,$DF  ;MUTE CHANNEL 2	;MUTE CHANNEL 2
147)   2DE7 CD D5 2D    		 CALL SND_OUT	;
148)   2DEA 3E FF       		 LD A,$FF  ;MUTE CHANNEL NOISE	;MUTE CHANNEL NOISE
149)   2DEC CD D5 2D    		 CALL SND_OUT                	;
150)   2DEF C9          		               RET	;
152)   2DF0 CD DB 2D    		SND_INIT: CALL SND_MUTEALL	;
153)   2DF3 AF          		               XOR A	;
154)   2DF4 32 C1 FF    		               LD (CHANST),A	;
155)   2DF7 AF          		SND_CLRDAT:    XOR A	;
156)   2DF8 21 AD FF    		               LD HL,CHANDATA	;
157)   2DFB 77          		               LD (HL),A	;
158)   2DFC 54          		               LD D,H	;
159)   2DFD 5D          		               LD E,L	;
160)   2DFE 13          		               INC DE	;
161)   2DFF 01 0B 00    		               LD BC,11  	;
162)   2E02 ED B0       		               LDIR	;
163)   2E04 C9          		 RET	;
168)   2E05 F5          		SND_NOTE:      PUSH AF	;
169)   2E06 E6 03       		               AND $03                  ;KEEP 2 BITS	;KEEP 2 BITS
170)   2E08 07          		               RLCA	;
171)   2E09 07          		               RLCA	;
172)   2E0A 07          		               RLCA	;
173)   2E0B 07          		               RLCA	;
174)   2E0C 07          		               RLCA                    ;TRANSFER TO BITS 6&5	;TRANSFER TO BITS 6&5
175)   2E0D B4          		               OR H                    ;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL	;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL
176)   2E0E CD D5 2D    		               CALL SND_OUT	;
177)   2E11 7D          		SN_LOW:        LD A,L                	;
178)   2E12 CD D5 2D    		               CALL SND_OUT	;
179)   2E15 F1          		               POP AF	;
180)   2E16 C9          		               RET	;
186)   2E17 F5          		SND_DOBEEP:    PUSH AF	;
187)   2E18 3E 02       		               LD A,DEFCHN	;
188)   2E1A 0E 00       		               LD C,SNDVOLHI	;
189)   2E1C CD 40 2E    		               CALL SND_SETVOLUME                	;
190)   2E1F 3E 02       		               LD A,DEFCHN	;
191)   2E21 CD 05 2E    		               CALL SND_NOTE	;
192)   2E24 06 A0       		               LD B,160	;
193)   2E26 CD 63 2F    		               CALL DELAYMILI	;
194)   2E29 3E 02       		               LD A,DEFCHN	;
195)   2E2B 0E 04       		               LD C,SNDMUTE	;
196)   2E2D CD 40 2E    		               CALL SND_SETVOLUME	;
197)   2E30 F1          		               POP AF	;
198)   2E31 C9          		               RET	;
200)   2E32 21 07 83    		SND_BEEP:      LD HL,nG4             ;NOTE G4 ON CHANNEL2	;NOTE G4 ON CHANNEL2
201)   2E35 CD 17 2E    		               CALL SND_DOBEEP	;
202)   2E38 C9          		               RET	;
204)   2E39 21 02 81    		SND_BEEP2:     LD HL,nD6             ;NOTE D6 ON CHANNEL2	;NOTE D6 ON CHANNEL2
205)   2E3C CD 17 2E    		               CALL SND_DOBEEP	;
206)   2E3F C9          		               RET	;
213)   2E40 07          		SND_SETVOLUME: RLCA                            ;DOUBLE CHANNEL 0-3 --> 0,2,4,6               	;DOUBLE CHANNEL 0-3 --> 0,2,4,6
214)   2E41 3C          		               INC A                           ;E=A+1	;E=A+1
215)   2E42 5F          		               LD E,A                          ;SAVE CHANNEL INFO	;SAVE CHANNEL INFO
216)   2E43 79          		               LD A,C	;
217)   2E44 FE 04       		               CP SNDMUTE	;
218)   2E46 3E 0F       		               LD A,$F	;
219)   2E48 28 09       		               JR Z, SV_DOIT                   ;SNDMUTE=4 MEANS NO VOLUME = MUTE	;SNDMUTE=4 MEANS NO VOLUME = MUTE
220)   2E4A 3E 01       		               LD A,1                          ;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3	;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3
221)   2E4C 0C          		               INC C	;
222)   2E4D 0D          		SV_AGN:        DEC C	;
223)   2E4E 28 03       		               JR Z, SV_DOIT	;
224)   2E50 07          		               RLCA	;
225)   2E51 18 FA       		               JR SV_AGN	;
226)   2E53 57          		SV_DOIT:       LD D,A                          ;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV	;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV
227)   2E54 3E 80       		               LD A,$80	;
228)   2E56 CB 03       		               RLC E	;
229)   2E58 CB 03       		               RLC E	;
230)   2E5A CB 03       		               RLC E	;
231)   2E5C CB 03       		               RLC E	;
232)   2E5E B2          		               OR D	;
233)   2E5F B3          		               OR E	;
234)   2E60 CD D5 2D    		               CALL SND_OUT                    ;SET THE VOLUME        	;SET THE VOLUME
235)   2E63 C9          		               RET	;
238)   2E64 F5          		SND_DISABLE:   PUSH AF	;
239)   2E65 CD 8D 2E    		               CALL SND_GETCHMASK	;
240)   2E68 47          		               LD B,A	;
241)   2E69 3A C1 FF    		               LD A,(CHANST)	;
242)   2E6C B0          		               OR B	;
243)   2E6D 32 C1 FF    		               LD (CHANST),A	;
244)   2E70 F1          		               POP AF	;
245)   2E71 0E 04       		               LD C, SNDMUTE	;
246)   2E73 CD 40 2E    		               CALL SND_SETVOLUME	;
247)   2E76 C9          		               RET	;
250)   2E77 F5          		SND_ENABLE:    PUSH AF	;
251)   2E78 CD 8D 2E    		               CALL SND_GETCHMASK	;
252)   2E7B ED 44       		               NEG	;
253)   2E7D 3D          		               DEC A	;
254)   2E7E 47          		               LD B,A	;
255)   2E7F 3A C1 FF    		               LD A,(CHANST)	;
256)   2E82 A0          		               AND B	;
257)   2E83 32 C1 FF    		               LD (CHANST),A	;
258)   2E86 F1          		               POP AF	;
259)   2E87 0E 00       		               LD C, SNDVOLHI                  ;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL	;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL
260)   2E89 CD 40 2E    		               CALL SND_SETVOLUME	;
261)   2E8C C9          		               RET	;
266)   2E8D 3C          		SND_GETCHMASK: INC A	;
267)   2E8E 4F          		               LD C,A	;
268)   2E8F AF          		               XOR A	;
269)   2E90 3C          		               INC A                	;
270)   2E91 0D          		GMCAGN:        DEC C	;
271)   2E92 C8          		               RET Z	;
272)   2E93 07          		               RLCA	;
273)   2E94 18 FB       		               JR GMCAGN             	;
280)   2E96 F5          		SND_PLAYCH:    PUSH AF	;
281)   2E97 21 AD FF    		               LD HL,CHANDATA	;
282)   2E9A 07          		               RLCA                            ;DOUBLE A	;DOUBLE A
283)   2E9B 06 00       		               LD B,0	;
284)   2E9D 4F          		               LD C,A	;
285)   2E9E 09          		               ADD HL,BC                       ;HL ON CHANNELS DATA ADDRESS VAR	;HL ON CHANNELS DATA ADDRESS VAR
286)   2E9F 5E          		               LD E,(HL)	;
287)   2EA0 23          		               INC HL	;
288)   2EA1 56          		               LD D,(HL)                       ;DE THE CHANNEL DATA ADDRESS	;DE THE CHANNEL DATA ADDRESS
289)   2EA2 7A          		               LD A,D	;
290)   2EA3 83          		               ADD E	;
291)   2EA4 B7          		               OR A	;
292)   2EA5 28 4B       		               JR Z, PC_NOMORE                 ;IF CHANDATA ADDRESS IS ZERO RETURN	;IF CHANDATA ADDRESS IS ZERO RETURN
294)   2EA7 F1          		               POP AF                          ;GET CHANNEL	;GET CHANNEL
295)   2EA8 F5          		               PUSH AF	;
296)   2EA9 CD 8D 2E    		               CALL SND_GETCHMASK	;
297)   2EAC 4F          		               LD C, A	;
298)   2EAD 3A C1 FF    		               LD A,(CHANST)	;
299)   2EB0 A1          		               AND C	;
300)   2EB1 C1          		               POP BC	;
301)   2EB2 20 50       		               JR NZ,SNDOK                     ;SIGNAL OK BUT DON'T PLAY ANYTHING	;SIGNAL OK BUT DON'T PLAY ANYTHING
302)   2EB4 C5          		               PUSH BC	;
303)   2EB5 48          		               LD C,B                          ;CHAN NO ON C	;CHAN NO ON C
304)   2EB6 06 00       		               LD B,0	;
305)   2EB8 21 BD FF    		               LD HL,CHANCN	;
306)   2EBB 09          		               ADD HL,BC                       ;HL ON CHANNELS NOTE IDX	;HL ON CHANNELS NOTE IDX
307)   2EBC 7E          		               LD A,(HL)                       ;A THE NOTE IDX 0-255 	;A THE NOTE IDX 0-255
308)   2EBD 3C          		               INC A	;
309)   2EBE 28 32       		               JR Z, PC_NOMORE                 ;IF 255 NO MORE NOTES TO PLAY	;IF 255 NO MORE NOTES TO PLAY
310)   2EC0 3D          		               DEC A          	;
311)   2EC1 34          		               INC (HL)                        ;NEXT NOTE	;NEXT NOTE
312)   2EC2 6F          		               LD L,A                          ;HL THE NOTE IDX	;HL THE NOTE IDX
313)   2EC3 26 00       		               LD H,0                          ;	;
314)   2EC5 29          		               ADD HL,HL                       ;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE	;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE
315)   2EC6 29          		               ADD HL,HL                       ;DOUBLE AGAIN THE IDX CAUSE 2 BYTES IS THE DURATION OF THE NOTE	;DOUBLE AGAIN THE IDX CAUSE 2 BYTES IS THE DURATION OF THE NOTE
316)   2EC7 19          		               ADD HL,DE                       ;THE NOTE ADDRESS ON HL	;THE NOTE ADDRESS ON HL
317)   2EC8 5E          		               LD E,(HL)                       ;E 2ND BYTE OF THE NOTE TO PLAY	;E 2ND BYTE OF THE NOTE TO PLAY
318)   2EC9 23          		               INC HL	;
319)   2ECA 56          		               LD D,(HL)                       ;D 1ST BYTE OF THE NOTE TO PLAY	;D 1ST BYTE OF THE NOTE TO PLAY
320)   2ECB 23          		               INC HL	;
321)   2ECC 4E          		               LD C,(HL)                      ;THE DURATION OF THE NOTE ON BC	;THE DURATION OF THE NOTE ON BC
322)   2ECD 23          		               INC HL	;
323)   2ECE 46          		               LD B,(HL)	;
324)   2ECF ED 43 BE FE 		               LD (PRGEX),BC                   ;SAVE BC                	;SAVE BC
325)   2ED3 C1          		               POP BC                          ;CHANNEL ON B	;CHANNEL ON B
326)   2ED4 C5          		               PUSH BC                         	;
327)   2ED5 21 B5 FF    		               LD HL,CHANDEL                   ;SAVING DURATION ON CHANDEL + CHAN IDX         	;SAVING DURATION ON CHANDEL + CHAN IDX
328)   2ED8 CB 00       		               RLC B                           ;DOUBLE IDX	;DOUBLE IDX
329)   2EDA 48          		               LD C,B	;
330)   2EDB 06 00       		               LD B,0	;
331)   2EDD 09          		               ADD HL,BC	;
332)   2EDE ED 4B BE FE 		               LD BC,(PRGEX)                      ;RESTORE BC	;RESTORE BC
333)   2EE2 71          		               LD (HL),C                       ;SAVE NOTE DELAY ON CHANNEL DELAY	;SAVE NOTE DELAY ON CHANNEL DELAY
334)   2EE3 23          		               INC HL	;
335)   2EE4 70          		               LD (HL),B	;
336)   2EE5 7A          		               LD A,D	;
337)   2EE6 C1          		               POP BC                          ;GET THE CHANNEL ON B	;GET THE CHANNEL ON B
338)   2EE7 FE 0A       		               CP 10                           ;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS	;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS
339)   2EE9 38 0A       		               JR C,SND_SPOPS	;
340)   2EEB EB          		               EX DE,HL                        ;HL THE NOTE	;HL THE NOTE
341)   2EEC 78          		               LD A,B                          ;CHANNEL ON A	;CHANNEL ON A
342)   2EED CD 05 2E    		               CALL SND_NOTE	;
343)   2EF0 18 12       		               JR SNDOK                        ;NOTE PLAYED OK	;NOTE PLAYED OK
344)   2EF2 C1          		PC_NOMORE:     POP BC	;
345)   2EF3 18 11       		               JR SNDEND                       ;SIGNAL  SONG END	;SIGNAL  SONG END
349)   2EF5 FE 03       		SND_SPOPS:     CP 3	;
350)   2EF7 30 07       		               JR NC,SNDOTOPS	;
351)   2EF9 4F          		               LD C,A                          ;VOLUME	;VOLUME
352)   2EFA 78          		               LD A,B                          ;CHANNEL	;CHANNEL
353)   2EFB CD 40 2E    		               CALL SND_SETVOLUME	;
354)   2EFE 18 04       		               JR SNDOK                        ;VOLUME SET OK	;VOLUME SET OK
356)   2F00 FE 09       		SNDOTOPS:      CP 9                            ;9 MEANS SONG ENDED	;9 MEANS SONG ENDED
357)   2F02 28 02       		               JR Z, SNDEND	;
359)   2F04 AF          		SNDOK:         XOR A                           ;END OK                	;END OK
360)   2F05 C9          		               RET	;
361)   2F06 3E 01       		SNDEND:        LD A,1                          ;SONG END	;SONG END
362)   2F08 C9          		               RET	;
368)   2F09 21 B5 FF    		SND_DOCHAN:    LD HL,CHANDEL	;
369)   2F0C 4F          		               LD C,A	;
370)   2F0D 06 00       		               LD B,0	;
371)   2F0F 09          		               ADD HL,BC	;
372)   2F10 09          		               ADD HL,BC       ;DOUBLE CAUSE 2 BYTES PER DELAY VALUE	;DOUBLE CAUSE 2 BYTES PER DELAY VALUE
373)   2F11 4E          		               LD C,(HL)	;
374)   2F12 23          		               INC HL	;
375)   2F13 46          		               LD B,(HL)	;
376)   2F14 57          		               LD D,A          ;SAVE A	;SAVE A
377)   2F15 78          		               LD A,B	;
378)   2F16 B1          		               OR C	;
379)   2F17 7A          		               LD A,D          ;RESTORE CHANNEL ON A	;RESTORE CHANNEL ON A
380)   2F18 CA 96 2E    		               JP Z,SND_PLAYCH ;PLAY CHANNEL NOTES	;PLAY CHANNEL NOTES
381)   2F1B AF          		               XOR A           ;DATA ON CHANNEL CAUSE WE DELAY 	;DATA ON CHANNEL CAUSE WE DELAY
383)   2F1C C9          		               RET	;
389)   2F1D 21 B5 FF    		SND_INTDELAY:  LD HL,CHANDEL	;
390)   2F20 06 04       		               LD B,4                  	;
391)   2F22 5E          		ID_NXTCH:      LD E,(HL)	;
392)   2F23 23          		               INC HL	;
393)   2F24 56          		               LD D,(HL)	;
394)   2F25 7A          		               LD A, D	;
395)   2F26 B3          		               OR E	;
396)   2F27 28 05       		               JR Z, ID_SKP	;
397)   2F29 1B          		               DEC DE          ;MINUS NOTE DELAY VALUE	;MINUS NOTE DELAY VALUE
398)   2F2A 72          		               LD (HL),D	;
399)   2F2B 2B          		               DEC HL	;
400)   2F2C 73          		               LD (HL),E	;
401)   2F2D 23          		               INC HL	;
402)   2F2E 23          		ID_SKP:        INC HL	;
403)   2F2F 10 F1       		               DJNZ ID_NXTCH	;
404)   2F31 C9          		               RET	;
408)   2F32 06 04       		SND_PLAYMUSIC: LD B,4	;
409)   2F34 0E 00       		               LD C,0	;
410)   2F36 05          		PM_NXT:        DEC B                           ;PLAY 3,2,1,0	;PLAY 3,2,1,0
411)   2F37 78          		               LD A,B	;
412)   2F38 C5          		               PUSH BC                	;
413)   2F39 CD 09 2F    		               CALL SND_DOCHAN	;
414)   2F3C C1          		               POP BC                	;
415)   2F3D 81          		               ADD A,C                         ;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES	;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES
416)   2F3E 4F          		               LD C,A	;
417)   2F3F 78          		               LD A,B	;
418)   2F40 B7          		               OR A	;
419)   2F41 20 F3       		               JR NZ, PM_NXT	;
420)   2F43 79          		               LD A,C	;
421)   2F44 FE 04       		               CP 4                            ;MEANS ALL 4 CHANNELS ARE NOT ENABLED	;MEANS ALL 4 CHANNELS ARE NOT ENABLED
422)   2F46 C9          		               RET	;
 34)   2F47 C9          		 RET	;
 37)   2F48 F5          		DELAYMICROSEC: PUSH AF	;
 38)   2F49 D5          		 PUSH DE	;
 39)   2F4A 1B          		 DEC DE	;
 40)   2F4B D1          		 POP DE	;
 41)   2F4C F1          		 POP AF	;
 42)   2F4D C9          		 RET	;
 45)   2F4E CD 48 2F    		S21: CALL DELAYMICROSEC	;
 46)   2F51 10 FB       		 DJNZ S21	;
 47)   2F53 C9          		 RET	;
 51)   2F54 F5          		DELAYMILISEC: PUSH AF	;
 52)   2F55 D5          		 PUSH DE	;
 53)   2F56 11 2C 01    		 LD DE, 300        ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 54)   2F59 1B          		DEL1: DEC DE	;
 55)   2F5A 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 56)   2F5B B3          		 OR E	;
 57)   2F5C 20 FB       		 JR NZ, DEL1	;
 58)   2F5E D1          		 POP DE	;
 59)   2F5F F1          		 POP AF	;
 60)   2F60 C9          		 RET	;
 63)   2F61 06 50       		 LD B, 80	;
 65)   2F63 CD 54 2F    		S1: CALL DELAYMILISEC	;
 66)   2F66 10 FB       		 DJNZ S1	;
 67)   2F68 C9          		 RET	;
 72)   2F69 C5          		@DELAYSEC: PUSH BC	;
 73)   2F6A 01 E8 03    		 LD BC, 1000	;
 74)   2F6D C5          		MYDLAGN: PUSH BC	;
 75)   2F6E CD 54 2F    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 76)   2F71 C1          		 POP BC	;
 77)   2F72 0B          		 DEC BC	;
 78)   2F73 78          		 LD A, B	;
 79)   2F74 B1          		 OR C	;
 80)   2F75 20 F6       		 JR NZ, MYDLAGN	;
 81)   2F77 C1          		 POP BC	;
 82)   2F78 10 EF       		 DJNZ DELAYSEC	;
 83)   2F7A C9          		 RET	;
 88)   2F7B F5          		OUTASC: PUSH AF	;
 89)   2F7C D5          		 PUSH DE	;
 90)   2F7D CD B0 2F    		 CALL B2Bcd	;
 91)   2F80 D1          		 POP DE	;
 92)   2F81 CD D6 2F    		 CALL BCD2HA	;
 93)   2F84 F1          		 POP AF	;
 94)   2F85 C9          		 RET	;
108)   2F86 B7          		BCD2BN: OR A	;
109)   2F87 47          		 LD B, A	;
110)   2F88 E6 F0       		 AND $F0	;
111)   2F8A 0F          		 RRCA	;
112)   2F8B 4F          		 LD C, A	;
113)   2F8C 0F          		 RRCA	;
114)   2F8D 0F          		 RRCA	;
115)   2F8E 81          		 ADD A, C	;
116)   2F8F 4F          		 LD C, A	;
117)   2F90 78          		 LD A, B	;
118)   2F91 E6 0F       		 AND $0F	;
119)   2F93 81          		 ADD A, C	;
120)   2F94 C9          		 RET	;
135)   2F95 26 FF       		BN2BCD: LD H, $FF	;
136)   2F97 24          		D100LP: INC H	;
137)   2F98 D6 64       		 SUB 100	;
138)   2F9A 30 FB       		 JR NC, D100LP	;
139)   2F9C C6 64       		 ADD A, 100	;
140)   2F9E 2E FF       		 LD L, $FF	;
141)   2FA0 2C          		D10LP: INC L	;
142)   2FA1 D6 0A       		 SUB 10	;
143)   2FA3 30 FB       		 JR NC, D10LP	;
144)   2FA5 C6 0A       		 ADD A, 10	;
145)   2FA7 4F          		 LD C, A	;
146)   2FA8 7D          		 LD A, L	;
147)   2FA9 07          		 RLCA	;
148)   2FAA 07          		 RLCA	;
149)   2FAB 07          		 RLCA	;
150)   2FAC 07          		 RLCA	;
151)   2FAD B1          		 OR C	;
152)   2FAE 6F          		 LD L, A	;
153)   2FAF C9          		 RET	;
167)   2FB0 01 00 10    		 LD BC, 16 * 256 + 0       ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
168)   2FB3 11 00 00    		 LD DE, 0	;
170)   2FB6 29          		 ADD HL, HL	;
171)   2FB7 7B          		 LD A, E	;
172)   2FB8 8F          		 ADC A, A	;
173)   2FB9 27          		 DAA	;
174)   2FBA 5F          		 LD E, A	;
175)   2FBB 7A          		 LD A, D	;
176)   2FBC 8F          		 ADC A, A	;
177)   2FBD 27          		 DAA	;
178)   2FBE 57          		 LD D, A	;
179)   2FBF 79          		 LD A, C	;
180)   2FC0 8F          		 ADC A, A	;
181)   2FC1 27          		 DAA	;
182)   2FC2 4F          		 LD C, A	;
183)   2FC3 10 F1       		 DJNZ cvtLp	;
184)   2FC5 EB          		 EX DE, HL	;
185)   2FC6 C9          		 RET	;
199)   2FC7 B7          		BCD2BN: OR A	;
200)   2FC8 47          		 LD B, A	;
201)   2FC9 E6 F0       		 AND $F0	;
202)   2FCB 0F          		 RRCA	;
203)   2FCC 4F          		 LD C, A	;
204)   2FCD 0F          		 RRCA	;
205)   2FCE 0F          		 RRCA	;
206)   2FCF 81          		 ADD A, C	;
207)   2FD0 4F          		 LD C, A	;
208)   2FD1 78          		 LD A, B	;
209)   2FD2 E6 0F       		 AND $0F	;
210)   2FD4 81          		 ADD A, C	;
211)   2FD5 C9          		 RET	;
223)   2FD6 79          		 LD A, C	;
224)   2FD7 CD 03 30    		 CALL cvtUN	;
225)   2FDA 79          		 LD A, C	;
226)   2FDB CD 07 30    		 CALL cvtLN	;
227)   2FDE 7C          		 LD A, H	;
228)   2FDF CD 03 30    		 CALL cvtUN	;
229)   2FE2 7C          		 LD A, H	;
230)   2FE3 CD 07 30    		 CALL cvtLN	;
231)   2FE6 7D          		 LD A, L	;
232)   2FE7 CD 03 30    		 CALL cvtUN	;
233)   2FEA 7D          		 LD A, L	;
234)   2FEB 18 1A       		 JR cvtLN	;
236)   2FED 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
237)   2FEE 1F          		 RRA	;
238)   2FEF 1F          		 RRA	;
239)   2FF0 1F          		 RRA	;
241)   2FF1 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
242)   2FF3 C6 90       		 ADD A, 90h        ; old trick	; old trick
243)   2FF5 27          		 DAA         ; for converting	; for converting
244)   2FF6 CE 40       		 ADC A, 40h        ; one nibble	; one nibble
245)   2FF8 27          		 DAA         ; to hex ASCII	; to hex ASCII
246)   2FF9 12          		 LD (DE), A	;
247)   2FFA 13          		 INC DE	;
248)   2FFB C9          		 RET	;
260)   2FFC 7D          		 LD A, L	;
261)   2FFD CD ED 2F    		 CALL cvtUN	;
262)   3000 7D          		 LD A, L	;
263)   3001 18 EE       		 JR cvtLN	;
265)   3003 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
266)   3004 1F          		 RRA	;
267)   3005 1F          		 RRA	;
268)   3006 1F          		 RRA	;
270)   3007 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
271)   3009 C6 90       		 ADD A, 90h        ; old trick	; old trick
272)   300B 27          		 DAA         ; for converting	; for converting
273)   300C CE 40       		 ADC A, 40h        ; one nibble	; one nibble
274)   300E 27          		 DAA         ; to hex ASCII	; to hex ASCII
275)   300F 12          		 LD (DE), A	;
276)   3010 13          		 INC DE	;
277)   3011 C9          		 RET	;
294)   3012 F5          		 PUSH AF        ; 11 T-states	; 11 T-states
296)   3013 ED 44       		 NEG         ; 8 T-states	; 8 T-states
297)   3015 ED 44       		 NEG         ; 8 T-states	; 8 T-states
298)   3017 ED 44       		 NEG         ; 8 T-states	; 8 T-states
299)   3019 ED 44       		 NEG         ; 8 T-states	; 8 T-states
300)   301B 0B          		 DEC BC         ; 6 T-states	; 6 T-states
301)   301C 79          		 LD A, C        ; 9 T-states	; 9 T-states
302)   301D B0          		 OR B         ; 4 T-states	; 4 T-states
303)   301E C2 13 30    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
304)   3021 F1          		 POP AF         ; 10 T-states	; 10 T-states
305)   3022 C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
343)   3023 26 00       		@B2D8: LD H, 0	;
344)   3025 6F          		 LD L, A	;
345)   3026 1E 00       		@B2D16: LD E, 0	;
346)   3028 16 00       		@B2D24: LD D, 0	;
347)   302A 01 00 00    		@B2D32: LD BC, 0	;
348)   302D DD 21 00 00 		@B2D48: LD IX, 0        ; zero all non-used bits	; zero all non-used bits
349)   3031 22 77 FF    		@B2D64: LD (B2DINV), HL	;
350)   3034 ED 53 79 FF 		 LD (B2DINV + 2), DE	;
351)   3038 ED 43 7B FF 		 LD (B2DINV + 4), BC	;
352)   303C DD 22 7D FF 		 LD (B2DINV + 6), IX       ; place full 64-bit input value in buffer	; place full 64-bit input value in buffer
353)   3040 21 7F FF    		 LD HL, B2DBUF	;
354)   3043 11 80 FF    		 LD DE, B2DBUF + 1	;
355)   3046 36 20       		 LD (HL), ' '	;
357)   3048 01 12 00    		 LD BC, 18	;
358)   304B ED B0       		 LDIR         ; fill 1st 19 bytes of buffer with spaces	; fill 1st 19 bytes of buffer with spaces
359)   304D ED 43 92 FF 		 LD (B2DEND - 1), BC       ;set BCD value to "0" & place terminating 0	;set BCD value to "0" & place terminating 0
360)   3051 1E 01       		 LD E, 1        ; no. of bytes in BCD value	; no. of bytes in BCD value
361)   3053 21 7F FF    		 LD HL, B2DINV + 8       ; (address MSB input)+1	; (address MSB input)+1
362)   3056 01 09 09    		 LD BC, 0x0909	;
363)   3059 AF          		 XOR A	;
364)   305A 05          		B2DSKP0: DEC B	;
365)   305B 28 29       		 JR Z, B2DSIZ        ; all 0: continue with postprocessing	; all 0: continue with postprocessing
366)   305D 2B          		 DEC HL	;
367)   305E B6          		 OR (HL)        ; find first byte <>0	; find first byte <>0
368)   305F 28 F9       		 JR Z, B2DSKP0	;
369)   3061 0D          		B2DFND1: DEC C	;
370)   3062 17          		 RLA	;
371)   3063 30 FC       		 JR NC, B2DFND1        ; determine no. of most significant 1-bit	; determine no. of most significant 1-bit
372)   3065 1F          		 RRA	;
373)   3066 57          		 LD D, A        ; byte from binary input value	; byte from binary input value
374)   3067 E5          		B2DLUS2: PUSH HL	;
375)   3068 C5          		 PUSH BC	;
376)   3069 21 92 FF    		B2DLUS1: LD HL, B2DEND - 1      ; address LSB of BCD value	; address LSB of BCD value
377)   306C 43          		 LD B, E        ; current length of BCD value in bytes	; current length of BCD value in bytes
378)   306D CB 12       		 RL D         ; highest bit from input value -> carry	; highest bit from input value -> carry
379)   306F 7E          		B2DLUS0: LD A, (HL)	;
380)   3070 8F          		 ADC A, A	;
381)   3071 27          		 DAA	;
382)   3072 77          		 LD (HL), A        ; double 1 BCD byte from intermediate result	; double 1 BCD byte from intermediate result
383)   3073 2B          		 DEC HL	;
384)   3074 10 F9       		 DJNZ B2DLUS0        ; and go on to double entire BCD value (+carry!)	; and go on to double entire BCD value (+carry!)
385)   3076 30 03       		 JR NC, B2DNXT	;
386)   3078 1C          		 INC E         ; carry at MSB -> BCD value grew 1 byte larger	; carry at MSB -> BCD value grew 1 byte larger
387)   3079 36 01       		 LD (HL), 1        ; initialize new MSB of BCD value	; initialize new MSB of BCD value
388)   307B 0D          		B2DNXT: DEC C	;
389)   307C 20 EB       		 JR NZ, B2DLUS1        ; repeat for remaining bits from 1 input byte	; repeat for remaining bits from 1 input byte
390)   307E C1          		 POP BC         ; no. of remaining bytes in input value	; no. of remaining bytes in input value
391)   307F 0E 08       		 LD C, 8        ; reset bit-counter	; reset bit-counter
392)   3081 E1          		 POP HL         ; pointer to byte from input value	; pointer to byte from input value
393)   3082 2B          		 DEC HL	;
394)   3083 56          		 LD D, (HL)        ; get next group of 8 bits	; get next group of 8 bits
395)   3084 10 E1       		 DJNZ B2DLUS2        ; and repeat until last byte from input value	; and repeat until last byte from input value
396)   3086 21 93 FF    		B2DSIZ: LD HL, B2DEND        ; address of terminating 0	; address of terminating 0
397)   3089 4B          		 LD C, E        ; size of BCD value in bytes	; size of BCD value in bytes
398)   308A B7          		 OR A	;
399)   308B ED 42       		 SBC HL, BC        ; calculate address of MSB BCD	; calculate address of MSB BCD
400)   308D 54          		 LD D, H	;
401)   308E 5D          		 LD E, L	;
402)   308F ED 42       		 SBC HL, BC	;
403)   3091 EB          		 EX DE, HL        ; HL=address BCD value, DE=start of decimal value	; HL=address BCD value, DE=start of decimal value
404)   3092 41          		 LD B, C        ; no. of bytes BCD	; no. of bytes BCD
405)   3093 CB 21       		 SLA C         ; no. of bytes decimal (possibly 1 too high)	; no. of bytes decimal (possibly 1 too high)
406)   3095 3E 30       		 LD A, '0'	;
407)   3097 ED 6F       		 RLD         ; shift bits 4-7 of (HL) into bit 0-3 of A	; shift bits 4-7 of (HL) into bit 0-3 of A
408)   3099 FE 30       		 CP '0'         ; (HL) was > 9h?	; (HL) was > 9h?
409)   309B 20 06       		 JR NZ, B2DEXPH        ; if yes, start with recording high digit	; if yes, start with recording high digit
410)   309D 0D          		 DEC C         ; correct number of decimals	; correct number of decimals
411)   309E 13          		 INC DE         ; correct start address	; correct start address
412)   309F 18 04       		 JR B2DEXPL        ; continue with converting low digit	; continue with converting low digit
413)   30A1 ED 6F       		B2DEXP: RLD         ; shift high digit (HL) into low digit of A	; shift high digit (HL) into low digit of A
414)   30A3 12          		B2DEXPH: LD (DE), A       ; record resulting ASCII-code	; record resulting ASCII-code
415)   30A4 13          		 INC DE	;
416)   30A5 ED 6F       		B2DEXPL: RLD	;
417)   30A7 12          		 LD (DE), A	;
418)   30A8 13          		 INC DE	;
419)   30A9 23          		 INC HL         ; next BCD-byte	; next BCD-byte
420)   30AA 10 F5       		 DJNZ B2DEXP        ; and go on to convert each BCD-byte into 2 ASCII	; and go on to convert each BCD-byte into 2 ASCII
421)   30AC ED 42       		 SBC HL, BC        ; return with HL pointing to 1st decimal	; return with HL pointing to 1st decimal
422)   30AE C9          		 RET	;
426)   30AF EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
427)   30B0 21 7F FF    		 ld hl, B2DBUF	;
428)   30B3 CD BA 30    		 call SkipWhitespace	;
429)   30B6 ED B0       		 ldir	;
430)   30B8 EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
431)   30B9 C9          		 ret	;
436)   30BA 7E          		 ld a, (hl)	;
437)   30BB FE 20       		 cp ' '	;
438)   30BD C0          		 ret nz	;
439)   30BE 23          		 inc hl	;
440)   30BF 18 F9       		 jr SkipWhitespace	;
444)   30C1 06 08       		@REVBITS: ld b, 8	;
445)   30C3 6F          		 ld l, a	;
447)   30C4 CB 15       		 rl l	;
448)   30C6 1F          		 rra	;
449)   30C7 10 FB       		 djnz REVLOOP	;
450)   30C9 C9          		 RET	;
460)   30CA E5          		 push hl	;
462)   30CB 7E          		 ld a, (hl)	;
464)   30CC FE 00       		 cp  0	;
465)   30CE 28 0E       		 jr z, IsStrDecTrue	;
467)   30D0 FE 30       		 cp  '0'	;
468)   30D2 38 06       		 jr c, IsStrDecFalse	;
470)   30D4 FE 3A       		 cp  '9'+1	;
471)   30D6 38 09       		 jr c, IsStrDecContinue	;
472)   30D8 FE 39       		 cp  '9'	;
475)   30DA F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
476)   30DC E1          		 pop hl	;
477)   30DD C9          		 ret	;
479)   30DE BF          		 cp a         ; Set zero flag	; Set zero flag
480)   30DF E1          		 pop hl	;
481)   30E0 C9          		 ret	;
483)   30E1 23          		 inc hl	;
484)   30E2 18 E7       		 jr IsStrDec00	;
491)   30E4 E5          		 push hl	;
493)   30E5 7E          		 ld a, (hl)	;
495)   30E6 FE 00       		 cp  0	;
496)   30E8 28 14       		 jr z, IsStrHexTrue	;
498)   30EA FE 30       		 cp  '0'	;
499)   30EC 38 0C       		 jr c, IsStrHexFalse	;
501)   30EE FE 3A       		 cp  '9'+1	;
502)   30F0 38 0F       		 jr c, IsStrHexContinue	;
504)   30F2 FE 30       		 cp  '0'	;
505)   30F4 38 04       		 jr c, IsStrHexFalse	;
507)   30F6 FE 47       		 cp  'F'+1	;
508)   30F8 38 07       		 jr c, IsStrHexContinue	;
511)   30FA F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
512)   30FC E1          		 pop hl	;
513)   30FD C9          		 ret	;
515)   30FE BF          		 cp a         ; Set zero flag	; Set zero flag
516)   30FF E1          		 pop hl	;
517)   3100 C9          		 ret	;
519)   3101 23          		 inc hl	;
520)   3102 18 E1       		 jr IsStrHex00	;
527)   3104 AF          		 xor a	;
528)   3105 CD 0A 31    		 call loop	;
529)   3108 7A          		 ld a, d	;
530)   3109 C9          		 ret	;
532)   310A 57          		 ld d, a	;
533)   310B 7E          		 ld a, (hl)	;
534)   310C 23          		 inc hl	;
535)   310D D6 3A       		 sub '9' + 1	;
536)   310F C6 0A       		 add 10	;
537)   3111 D0          		 ret nc	;
538)   3112 5F          		 ld e, a	;
539)   3113 7A          		 ld a, d	;
540)   3114 87          		 add a, a        ;double our accumulator	;double our accumulator
541)   3115 87          		 add a, a        ;double again (now x4)	;double again (now x4)
542)   3116 82          		 add a, d        ;add the original (now x5)	;add the original (now x5)
543)   3117 87          		 add a, a        ;double again (now x10)	;double again (now x10)
544)   3118 83          		 add a, e        ;add in the incoming digit	;add in the incoming digit
545)   3119 18 EF       		 jr loop	;
553)   311B 7E          		 ld a, (hl)        ; Copy first char to A	; Copy first char to A
554)   311C CD 2C 31    		 call Hex12        ; Convert first char	; Convert first char
555)   311F 87          		 add a, a        ; Multiply by 16...	; Multiply by 16...
556)   3120 87          		 add a, a        ; ...	; ...
557)   3121 87          		 add a, a        ; ...	; ...
558)   3122 87          		 add a, a        ; ...done!	; ...done!
559)   3123 57          		 ld d, a        ; Store top 4 bits in D	; Store top 4 bits in D
560)   3124 23          		 inc hl         ; Advance to next char	; Advance to next char
561)   3125 7E          		 ld a, (hl)	;
562)   3126 CD 2C 31    		 call Hex12        ; Convert second char	; Convert second char
563)   3129 B2          		 or d         ; Add back top bits	; Add back top bits
564)   312A 23          		 inc hl         ; Advance for next guy	; Advance for next guy
565)   312B C9          		 ret	;
566)   312C D6 30       		Hex12: sub  '0'	;
567)   312E FE 0A       		 cp 10	;
568)   3130 D8          		 ret c	;
569)   3131 D6 07       		 sub 'A' - '0' - 10	;
570)   3133 C9          		 ret	;
577)   3134 CD 1B 31    		 call Read8bit	;
578)   3137 47          		 ld b, a	;
579)   3138 CD 1B 31    		 call Read8bit	;
580)   313B 4F          		 ld c, a	;
581)   313C C9          		 ret	;
589)   313D 7E          		 ld a, (hl)	;
590)   313E 23          		 inc hl	;
591)   313F D6 30       		 sub '0'	;
592)   3141 CB 27       		 sla a	;
593)   3143 CB 27       		 sla a	;
594)   3145 CB 27       		 sla a	;
595)   3147 CB 27       		 sla a	;
596)   3149 47          		 ld b, a	;
597)   314A 7E          		 ld a, (hl)	;
598)   314B 23          		 inc hl	;
599)   314C D6 30       		 sub '0'	;
600)   314E B0          		 or b	;
601)   314F C9          		 ret	;
606)   3150 4F          		 ld c, a        ; a = number to convert	; a = number to convert
607)   3151 CD 5D 31    		 call Num1	;
608)   3154 77          		 ld (hl), a	;
609)   3155 23          		 inc hl	;
610)   3156 79          		 ld a, c	;
611)   3157 CD 61 31    		 call Num2	;
612)   315A 77          		 ld (hl), a	;
613)   315B 23          		 inc hl	;
614)   315C C9          		 ret	;
615)   315D 1F          		Num1: rra	;
616)   315E 1F          		 rra	;
617)   315F 1F          		 rra	;
618)   3160 1F          		 rra	;
619)   3161 F6 F0       		Num2: or $F0	;
620)   3163 27          		 daa	;
621)   3164 C6 A0       		 add a, $A0	;
622)   3166 CE 40       		 adc a, $40        ; Ascii hex at this point (0 to F)	; Ascii hex at this point (0 to F)
623)   3168 C9          		 ret	;
634)   3169 22 C2 FF    		STR_SET: LD (LINESTR),HL	;
635)   316C C9          		 RET	;
638)   316D AF          		STR_CLR: XOR A	;
639)   316E 32 C4 FF    		 LD (LINEPOS),A	;
640)   3171 32 C2 FF    		 LD (LINESTR),A	;
641)   3174 32 C3 FF    		 LD (LINESTR+1),A	;
642)   3177 C9          		 RET	;
645)   3178 3A C2 FF    		STR_VALID: LD A,(LINESTR)	;
646)   317B 47          		 LD B,A	;
647)   317C 3A C3 FF    		 LD A,(LINESTR+1)	;
648)   317F 80          		 ADD B	;
649)   3180 B7          		 OR A	;
650)   3181 C9          		 RET	;
656)   3182 F5          		STR_CALCADDR: PUSH AF	;
657)   3183 ED 5B C2 FF 		 LD DE,(LINESTR)	;
658)   3187 EB          		 EX DE,HL	;
659)   3188 3A C4 FF    		 LD A,(LINEPOS)	;
660)   318B 4F          		 LD C,A	;
661)   318C 06 00       		 LD B,0	;
662)   318E 09          		 ADD HL,BC	;
663)   318F EB          		 EX DE,HL	;
664)   3190 F1          		 POP AF	;
665)   3191 C9          		 RET	;
669)   3192 3A C4 FF    		STR_NEXTPOS: LD A,(LINEPOS)	;
670)   3195 3C          		 INC A	;
671)   3196 32 C4 FF    		 LD (LINEPOS),A	;
672)   3199 C9          		 RET	;
676)   319A CD 82 31    		STR_ADD: CALL STR_CALCADDR	;
677)   319D CD 92 31    		STRA_AGN: CALL STR_NEXTPOS	;
678)   31A0 7E          		 LD A,(HL)	;
679)   31A1 12          		 LD (DE),A	;
680)   31A2 23          		 INC HL	;
681)   31A3 13          		 INC DE	;
682)   31A4 B7          		 OR A	;
683)   31A5 C8          		 RET Z	;
684)   31A6 18 F5       		 JR STRA_AGN	;
687)   31A8 CD 82 31    		STR_ADDCHAR: CALL STR_CALCADDR	;
688)   31AB 12          		 LD (DE),A	;
689)   31AC CD 92 31    		 CALL STR_NEXTPOS	;
690)   31AF 13          		 INC DE	;
691)   31B0 AF          		 XOR A	;
692)   31B1 12          		 LD (DE),A	;
693)   31B2 C9          		 RET	;
701)   31B3 26 00       		@PRINTNUM: LD H,0	;
702)   31B5 6F          		 LD L,A	;
703)   31B6 F5          		@PRINTNUM16: PUSH AF	;
705)   31B7 11 C5 FF    		 LD DE,NUMBUF	;
706)   31BA CD FC 2F    		 CALL Bcd2ASC  ;FOR HEX	;FOR HEX
707)   31BD 3E 68       		 LD A,'h'	;
708)   31BF 12          		 LD (DE),A  	;
709)   31C0 13          		 INC DE	;
710)   31C1 AF          		 XOR A	;
711)   31C2 12          		 LD (DE),A  	;
713)   31C3 21 C5 FF    		 LD HL,NUMBUF	;
714)   31C6 CD B1 0E    		 CALL RS_TXT	;
715)   31C9 CD 08 0F    		 CALL RS_NEWLINE	;
716)   31CC F1          		 POP AF	;
717)   31CD C9          		 RET	;
725)   31CE E5          		@NUM_ADDZERO: PUSH HL	;
726)   31CF 0E 00       		 LD C,0	;
727)   31D1 7E          		AZ_AGN: LD A,(HL)   	;
728)   31D2 23          		 INC HL	;
729)   31D3 0C          		 INC C	;
730)   31D4 FE 00       		 CP 0	;
731)   31D6 20 F9       		 JR NZ,AZ_AGN	;
732)   31D8 0D          		 DEC C ;EXCLUDE ZERO TERM	;EXCLUDE ZERO TERM
733)   31D9 E1          		 POP HL	;
734)   31DA 79          		 LD A,C	;
735)   31DB B8          		 CP B	;
736)   31DC C8          		 RET Z	;
738)   31DD 78          		 LD A,B	;
739)   31DE 91          		 SUB C	;
740)   31DF D8          		 RET C ;RETURN IF CARRY MEANS WE HAVE MORE DIGITS	;RETURN IF CARRY MEANS WE HAVE MORE DIGITS
741)   31E0 47          		 LD B,A	;
742)   31E1 3E 30       		 LD A,'0'	;
743)   31E3 2B          		AZ_AGN2: DEC HL	;
744)   31E4 77          		 LD (HL),A	;
745)   31E5 10 FC       		 DJNZ AZ_AGN2 	;
746)   31E7 C9          		 RET	;
752)   31E8 11 D3 FE    		@COPYFNAME: LD DE,STRGBUFF	;
753)   31EB 7E          		@COPYSTRING:   LD A,(HL)	;
754)   31EC 12          		 LD (DE),A	;
755)   31ED FE 00       		 CP 0	;
756)   31EF C8          		 RET Z  	;
757)   31F0 13          		 INC DE	;
758)   31F1 23          		 INC HL	;
759)   31F2 18 F7       		 JR COPYSTRING	;
  7)   31F4 16 00       		   ld d,0	;
  8)   31F6 6A          		   ld l,d	;
  9)   31F7 06 08       		   ld b,8	;
 11)   31F9 29          		   add hl,hl	;
 12)   31FA 30 01       		   jr nc,Mult8_NoAdd	;
 13)   31FC 19          		   add hl,de	;
 15)   31FD 10 FA       		   djnz Mult8_Loop	;
 16)   31FF C9          		   ret	;
 23)   3200 2E 00       		   ld l,0	;
 24)   3202 06 08       		   ld b,8	;
 26)   3204 29          		   add hl,hl	;
 27)   3205 87          		   add a,a	;
 28)   3206 30 01       		   jr nc,Mult12_NoAdd	;
 29)   3208 19          		   add hl,de	;
 31)   3209 10 F9       		   djnz Mult12_Loop	;
 32)   320B C9          		   ret	;
 39)   320C 21 00 00    		@Mult16: ld hl, 0	;
 40)   320F 78          		 ld a, b	;
 41)   3210 06 10       		 ld b, 16	;
 43)   3212 29          		 add hl, hl	;
 44)   3213 CB 21       		 sla c	;
 45)   3215 17          		 rla	;
 46)   3216 30 01       		 jr nc, Mult16_NoAdd	;
 47)   3218 19          		 add hl, de	;
 49)   3219 10 F7       		 djnz Mult16_Loop	;
 50)   321B C9          		 ret	;
 56)   321C D5          		@Mult32: PUSH DE	;
 57)   321D 79          		 ld a, c	;
 58)   321E 48          		 ld c, b	;
 59)   321F 21 00 00    		 ld hl, 0	;
 60)   3222 06 10       		 ld b, 16	;
 62)   3224 29          		 add hl, hl	;
 63)   3225 17          		 rla	;
 64)   3226 CB 11       		 rl c	;
 65)   3228 30 07       		 jr nc, Mult32_NoAdd	;
 66)   322A 19          		 add hl, de	;
 67)   322B CE 00       		 adc a, 0	;
 68)   322D D2 31 32    		 jp nc, Mult32_NoAdd	;
 69)   3230 0C          		 inc c	;
 71)   3231 10 F1       		 djnz Mult32_Loop	;
 72)   3233 41          		 ld b, c	;
 73)   3234 4F          		 ld c, a	;
 74)   3235 D1          		 POP DE	;
 75)   3236 C9          		 ret	;
 83)   3237 AF          		   xor a	;
 84)   3238 06 08       		   ld b,8	;
 86)   323A CB 13       		   rl e	;
 87)   323C 17          		   rla	;
 88)   323D 91          		   sub c	;
 89)   323E 30 01       		   jr nc,Div8_NoAdd	;
 90)   3240 81          		   add a,c	;
 92)   3241 10 F7       		   djnz Div8_Loop	;
 93)   3243 47          		   ld b,a	;
 94)   3244 7B          		   ld a,e	;
 95)   3245 17          		   rla	;
 96)   3246 2F          		   cpl	;
 97)   3247 C9          		   ret	;
103)   3248 AF          		  xor a	;
104)   3249 06 08       		  ld b, 8	;
107)   324B CB 22       		  sla d	;
108)   324D 17          		  rla	;
109)   324E BB          		  cp e	;
110)   324F 38 02       		  jr c, $+4	;
111)   3251 93          		  sub e	;
112)   3252 14          		  inc d	;
114)   3253 10 F6       		  djnz DIV8_8_loop	;
116)   3255 C9          		  ret	;
122)   3256 AF          		  xor a	;
123)   3257 06 10       		  ld b, 16	;
126)   3259 29          		  add hl, hl	;
127)   325A 17          		  rla	;
128)   325B 38 03       		  jr c, $+5	;
129)   325D B9          		  cp c	;
130)   325E 38 02       		  jr c, $+4	;
132)   3260 91          		  sub c	;
133)   3261 2C          		  inc l	;
135)   3262 10 F5       		  djnz DIV16_8_loop	;
137)   3264 C9          		  ret	;
145)   3265 21 00 00    		   ld hl,0	;
146)   3268 78          		   ld a,b	;
147)   3269 06 08       		   ld b,8	;
149)   326B 17          		   rla	;
150)   326C ED 6A       		   adc hl,hl	;
151)   326E ED 52       		   sbc hl,de	;
152)   3270 30 01       		   jr nc,Div16_NoAdd1	;
153)   3272 19          		   add hl,de	;
155)   3273 10 F6       		   djnz Div16_Loop1	;
156)   3275 17          		   rla	;
157)   3276 2F          		   cpl	;
158)   3277 47          		   ld b,a	;
159)   3278 79          		   ld a,c	;
160)   3279 48          		   ld c,b	;
161)   327A 06 08       		   ld b,8	;
163)   327C 17          		   rla	;
164)   327D ED 6A       		   adc hl,hl	;
165)   327F ED 52       		   sbc hl,de	;
166)   3281 30 01       		   jr nc,Div16_NoAdd2	;
167)   3283 19          		   add hl,de	;
169)   3284 10 F6       		   djnz Div16_Loop2	;
170)   3286 17          		   rla	;
171)   3287 2F          		   cpl	;
172)   3288 41          		   ld b,c	;
173)   3289 4F          		   ld c,a	;
174)   328A C9          		   ret  	;
181)   328B 19          		 ADD HL, DE        ; 16-BIT ADD OF HL AND DE	; 16-BIT ADD OF HL AND DE
182)   328C D9          		 EXX	;
183)   328D ED 5A       		 ADC HL, DE        ; 16-BIT ADD OF HL AND DE WITH CARRY	; 16-BIT ADD OF HL AND DE WITH CARRY
184)   328F D9          		 EXX	;
187)   3290 C9          		 RET	;
197)   3291 11 40 00    		 ld de, $0040	;
198)   3294 7D          		 ld a, l	;
199)   3295 6C          		 ld l, h	;
200)   3296 62          		 ld h, d	;
201)   3297 B7          		 or a	;
202)   3298 06 08       		 ld b, 8	;
204)   329A ED 52       		 sbc hl, de	;
205)   329C 30 01       		 jr nc, Sqr16_Skip	;
206)   329E 19          		 add hl, de	;
208)   329F 3F          		 ccf	;
209)   32A0 CB 12       		 rl d	;
210)   32A2 87          		 add a, a	;
211)   32A3 ED 6A       		 adc hl, hl	;
212)   32A5 87          		 add a, a	;
213)   32A6 ED 6A       		 adc hl, hl	;
214)   32A8 10 F0       		 djnz Sqr16_Loop	;
215)   32AA C9          		 ret	;
235)   32AB 3A A5 FF    		 ld a, (RNDseed)	;
236)   32AE 47          		 ld b, a 	;
238)   32AF 0F          		 rrca ; multiply by 32	; multiply by 32
239)   32B0 0F          		 rrca	;
240)   32B1 0F          		 rrca	;
241)   32B2 EE 1F       		 xor 0x1f	;
243)   32B4 80          		 add a, b	;
244)   32B5 DE FF       		 sbc a, 255 ; carry	; carry
246)   32B7 32 A5 FF    		 ld (RNDseed), a	;
247)   32BA C9          		 ret	;
 10)   32BB 0E 00       		MNU_CNTITMS: LD C,0   ;ITEM COUNTER	;ITEM COUNTER
 11)   32BD 06 00       		 LD B,0   ;ITEM LENGTH COUNTER	;ITEM LENGTH COUNTER
 12)   32BF 16 00       		 LD D,0   ;TEMP ITEM LENGTH COUNTER	;TEMP ITEM LENGTH COUNTER
 13)   32C1 7E          		MNU_CHKNXT: LD A,(HL)	;
 14)   32C2 B7          		 OR A	;
 15)   32C3 C8          		 RET Z   ;RETURN IF MENU ITEM STARTS WITH ZERO	;RETURN IF MENU ITEM STARTS WITH ZERO
 16)   32C4 0C          		 INC C   ;WE HAVE A NEW ITEM	;WE HAVE A NEW ITEM
 17)   32C5 16 00       		 LD D,0	;
 18)   32C7 23          		MNU_LPITM: INC HL	;
 19)   32C8 14          		 INC D	;
 20)   32C9 78          		 LD A,B	;
 21)   32CA BA          		 CP D	;
 22)   32CB 30 01       		 JR NC,MNU_NOTBIGER	;
 23)   32CD 42          		 LD B,D   ;SAVE THE BIGGER ITEMS LENGTH  	;SAVE THE BIGGER ITEMS LENGTH
 24)   32CE 7E          		MNU_NOTBIGER: LD A,(HL)	;
 25)   32CF B7          		 OR A	;
 26)   32D0 20 F5       		 JR NZ, MNU_LPITM	;
 27)   32D2 23          		 INC HL	;
 28)   32D3 18 EC       		 JR MNU_CHKNXT	;
 30)   32D5 DD E5       		PRINTMNUITM: PUSH IX	;
 31)   32D7 C5          		 PUSH BC	;
 32)   32D8 CD 22 05    		 CALL OS_PRINTTEXT	;
 33)   32DB C1          		 POP BC	;
 34)   32DC DD E1       		 POP IX	;
 35)   32DE C9          		 RET	;
 38)   32DF 3A A8 FF    		VGA_REVMNUCLR: LD A,(MENUVCLR)	;
 39)   32E2 07          		 RLCA	;
 40)   32E3 07          		 RLCA	;
 41)   32E4 07          		 RLCA	;
 42)   32E5 07          		 RLCA	;
 43)   32E6 32 A8 FF    		 LD (MENUVCLR),A	;
 44)   32E9 2A A9 FF    		 LD HL,(MENULFORE)	;
 45)   32EC 22 03 FE    		 LD (BCOLOR),HL	;
 46)   32EF 2A AB FF    		 LD HL,(MENULBACK)	;
 47)   32F2 22 01 FE    		 LD (FCOLOR),HL	;
 48)   32F5 C9          		 RET	;
 51)   32F6 FE 00       		SETITMCOLOR: CP 0	;
 52)   32F8 28 05       		 JR Z,DEFCOLOR	;
 53)   32FA CD DF 32    		 CALL VGA_REVMNUCLR	;
 54)   32FD 18 0C       		 JR SETVGACOL     	;
 55)   32FF 2A A9 FF    		DEFCOLOR: LD HL,(MENULFORE)	;
 56)   3302 22 01 FE    		 LD (FCOLOR),HL	;
 57)   3305 2A AB FF    		 LD HL,(MENULBACK)	;
 58)   3308 22 03 FE    		 LD (BCOLOR),HL	;
 59)   330B 3A A8 FF    		SETVGACOL: LD A,(MENUVCLR)	;
 60)   330E F5          		 PUSH AF	;
 61)   330F E6 0F       		 AND $0F	;
 62)   3311 32 43 FF    		 LD (VGAFCOL),A	;
 63)   3314 F1          		 POP AF	;
 64)   3315 07          		 RLCA	;
 65)   3316 07          		 RLCA	;
 66)   3317 07          		 RLCA	;
 67)   3318 07          		 RLCA	;
 68)   3319 E6 0F       		 AND $0F	;
 69)   331B 32 44 FF    		 LD (VGABCOL),A	;
 70)   331E C9          		 RET	;
 74)   331F FE 00       		RESETITMCOLOR: CP 0	;
 75)   3321 C8          		 RET Z	;
 77)   3322 CD DF 32    		 CALL VGA_REVMNUCLR	;
 78)   3325 2A A9 FF    		 LD HL,(MENULFORE)	;
 79)   3328 22 01 FE    		 LD (FCOLOR),HL	;
 80)   332B 2A AB FF    		 LD HL,(MENULBACK)	;
 81)   332E 22 03 FE    		 LD (BCOLOR),HL	;
 82)   3331 C9          		 RET	;
 88)   3332 F5          		PRINTMENU: PUSH AF	;
 89)   3333 E5          		 PUSH HL	;
 90)   3334 D5          		 PUSH DE  	;
 91)   3335 CD F9 04    		 CALL OS_GOTOXY  ;SET CURSOR TO X,Y=D,E	;SET CURSOR TO X,Y=D,E
 92)   3338 CD BB 32    		 CALL MNU_CNTITMS ;C THE ITEM NUMBER B THE MAX LENGTH	;C THE ITEM NUMBER B THE MAX LENGTH
 93)   333B C5          		 PUSH BC	;
 94)   333C DD 21 00 00 		 LD IX,0	;
 95)   3340 DD 39       		 ADD IX,SP  	;
 96)   3342 C5          		 PUSH BC	;
 97)   3343 CD 72 1E    		 CALL VGA_GETCOL  ;GET VGA COLOR ON A	;GET VGA COLOR ON A
 98)   3346 C1          		 POP BC  	;
 99)   3347 F5          		 PUSH AF   ;SAVE COLOR INFO	;SAVE COLOR INFO
100)   3348 2A 01 FE    		 LD HL,(FCOLOR)	;
101)   334B E5          		 PUSH HL   ;SAVE COLOR INFO	;SAVE COLOR INFO
102)   334C 2A 03 FE    		 LD HL,(BCOLOR)	;
103)   334F E5          		 PUSH HL   ;SAVE COLOR INFO	;SAVE COLOR INFO
104)   3350 3E 00       		 LD A,0   ;SET MENU COLORS	;SET MENU COLORS
105)   3352 CD F6 32    		 CALL SETITMCOLOR	;
106)   3355 21 D3 FE    		 LD HL,STRGBUFF  ;USE STRGBUFF TO CREATE THE OUT TEXT	;USE STRGBUFF TO CREATE THE OUT TEXT
107)   3358 E5          		 PUSH HL	;
109)   3359 04          		 INC B	;
110)   335A 36 8B       		 LD (HL),139  ;'/'	;'/'
111)   335C 23          		PM_AGN1: INC HL	;
112)   335D 36 81       		 LD (HL),129  ;'='	;'='
113)   335F 10 FB       		 DJNZ PM_AGN1	;
114)   3361 23          		 INC HL	;
115)   3362 36 8A       		 LD (HL),138  ;'\'	;'\'
116)   3364 23          		 INC HL	;
117)   3365 36 00       		 LD (HL),0	;
118)   3367 E1          		 POP HL	;
119)   3368 CD D5 32    		 CALL PRINTMNUITM	;
120)   336B 06 01       		 LD B,1   ;;1ST ITEM	;;1ST ITEM
121)   336D DD 66 05    		 LD H,(IX+5)  ;MENU ITEM	;MENU ITEM
122)   3370 DD 6E 04    		 LD L,(IX+4)	;
123)   3373 11 D3 FE    		PM_AGN3: LD DE,STRGBUFF	;
124)   3376 3E 82       		 LD A,130  ;'|'	;'|'
125)   3378 12          		 LD (DE),A	;
126)   3379 DD 7E 07    		 LD A,(IX+07)  ;GET SELECTED ITEM	;GET SELECTED ITEM
127)   337C B8          		 CP B	;
128)   337D 3E 20       		 LD A,' '	;
129)   337F 20 02       		 JR NZ, PM_SKP2	;
130)   3381 3E C5       		 LD A,197  ;'>'	;'>'
131)   3383 13          		PM_SKP2: INC DE	;
132)   3384 12          		 LD (DE),A  	;
133)   3385 0E 00       		 LD C,0   ;COUNT CHARS PRINTED	;COUNT CHARS PRINTED
134)   3387 7E          		PM_AGN2: LD A,(HL)	;
135)   3388 13          		 INC DE	;
136)   3389 B7          		 OR A	;
137)   338A 28 05       		 JR Z,PM_NXT1  ;ITEM END    	;ITEM END
138)   338C 12          		 LD (DE),A	;
139)   338D 23          		 INC HL	;
140)   338E 0C          		 INC C	;
141)   338F 18 F6       		 JR PM_AGN2	;
142)   3391 E5          		PM_NXT1: PUSH HL  ;SAVE MENU ITEMS IDX	;SAVE MENU ITEMS IDX
143)   3392 C5          		 PUSH BC	;
144)   3393 DD 7E 01    		 LD A,(IX+1)  ;A MAX LENGTH	;A MAX LENGTH
145)   3396 91          		 SUB C	;
146)   3397 47          		 LD B,A	;
147)   3398 FE 00       		 CP 0	;
148)   339A 28 06       		 JR Z,NOSPC  	;
149)   339C 3E 20       		 LD A,' '  	;
150)   339E 12          		 LD (DE),A	;
151)   339F 13          		 INC DE	;
152)   33A0 10 FC       		 DJNZ $-2  	;
153)   33A2 C1          		NOSPC: POP BC   	;
154)   33A3 3E 82       		 LD A,130  ;'|'	;'|'
155)   33A5 12          		 LD (DE),A  	;
156)   33A6 13          		 INC DE  	;
157)   33A7 AF          		 XOR A	;
158)   33A8 12          		 LD (DE),A  	;
159)   33A9 DD 56 03    		 LD D,(IX+3)  ;X,Y	;X,Y
160)   33AC DD 7E 02    		 LD A,(IX+2)	;
161)   33AF 80          		 ADD A,B   ;ADD MENU ITEM NO	;ADD MENU ITEM NO
162)   33B0 04          		 INC B	;
163)   33B1 5F          		 LD E,A	;
164)   33B2 CD F9 04    		 CALL OS_GOTOXY  ;GOTO XY	;GOTO XY
165)   33B5 C5          		 PUSH BC	;
166)   33B6 DD 7E 07    		 LD A,(IX+07)  ;GET SELECTED ITEM	;GET SELECTED ITEM
167)   33B9 3C          		 INC A   ;1 BASED	;1 BASED
168)   33BA B8          		 CP B	;
169)   33BB 3E 00       		 LD A,0   ;NO CHANGE OF COLORS	;NO CHANGE OF COLORS
170)   33BD 20 01       		 JR NZ,NOSELEC	;
172)   33BF 3C          		 INC A	;
173)   33C0 F5          		NOSELEC: PUSH AF	;
174)   33C1 CD F6 32    		 CALL SETITMCOLOR ;SETS ITEM COLOR	;SETS ITEM COLOR
175)   33C4 21 D3 FE    		 LD HL,STRGBUFF	;
176)   33C7 CD D5 32    		 CALL PRINTMNUITM	;
177)   33CA F1          		 POP AF	;
178)   33CB CD 1F 33    		 CALL RESETITMCOLOR ;RESETS THE COLOR IF REVERSED	;RESETS THE COLOR IF REVERSED
179)   33CE C1          		 POP BC	;
180)   33CF E1          		 POP HL   ;GET NEXT MENU ITEM	;GET NEXT MENU ITEM
181)   33D0 23          		 INC HL	;
182)   33D1 7E          		 LD A,(HL)	;
183)   33D2 B7          		 OR A	;
184)   33D3 20 9E       		 JR NZ,PM_AGN3	;
185)   33D5 DD 46 01    		 LD B,(IX+1)  ;GET STRING LENGTH AT B	;GET STRING LENGTH AT B
186)   33D8 DD 4E 00    		 LD C,(IX+0)	;
188)   33DB CD F6 32    		 CALL SETITMCOLOR ;SETS ITEM COLOR	;SETS ITEM COLOR
189)   33DE 21 D3 FE    		 LD HL,STRGBUFF  ;USE STRGBUFF TO CREATE THE OUT TEXT	;USE STRGBUFF TO CREATE THE OUT TEXT
190)   33E1 E5          		 PUSH HL	;
191)   33E2 36 89       		 LD (HL),137  ;'\'	;'\'
192)   33E4 04          		 INC B	;
193)   33E5 23          		PM_AGN4: INC HL	;
194)   33E6 36 81       		 LD (HL),129  ;'='	;'='
195)   33E8 10 FB       		 DJNZ PM_AGN4	;
196)   33EA 23          		 INC HL	;
197)   33EB 36 88       		 LD (HL),136  ;'/'	;'/'
198)   33ED 23          		 INC HL	;
199)   33EE 36 00       		 LD (HL),0  	;
200)   33F0 DD 56 03    		 LD D,(IX+3)  ;X,Y	;X,Y
201)   33F3 DD 7E 02    		 LD A,(IX+2)	;
202)   33F6 81          		 ADD A,C	;
203)   33F7 3C          		 INC A	;
204)   33F8 5F          		 LD E,A	;
205)   33F9 CD F9 04    		 CALL OS_GOTOXY	;
206)   33FC E1          		 POP HL	;
207)   33FD CD D5 32    		 CALL PRINTMNUITM	;
209)   3400 E1          		 POP HL	;
210)   3401 22 03 FE    		 LD (BCOLOR),HL	;
211)   3404 E1          		 POP HL	;
212)   3405 22 01 FE    		 LD (FCOLOR),HL	;
213)   3408 F1          		 POP AF	;
214)   3409 CD 7D 1E    		 CALL VGA_SETCOL  ;RESTORE ORIGINAL COLORS	;RESTORE ORIGINAL COLORS
215)   340C C1          		 POP BC	;
216)   340D D1          		 POP DE	;
217)   340E E1          		 POP HL	;
218)   340F F1          		 POP AF	;
219)   3410 C9          		 RET  	;
226)   3411 E5          		CREATEMENU: PUSH HL  ;SAVE MENU POSITION AND INFO	;SAVE MENU POSITION AND INFO
227)   3412 D5          		 PUSH DE	;
228)   3413 F5          		 PUSH AF	;
229)   3414 CD 32 33    		 CALL PRINTMENU	;
230)   3417 CD 0C 04    		CM_GTKEY: CALL GET_CHAR	;
231)   341A C1          		 POP BC   ;CURRENT ITEM SELECTED ON A	;CURRENT ITEM SELECTED ON A
232)   341B FE 0B       		 CP 11   ;ARROW UP	;ARROW UP
233)   341D 20 0B       		 JR NZ,CM_CHKNXT	;
234)   341F 78          		 LD A,B	;
235)   3420 FE 01       		 CP 1	;
236)   3422 C5          		 PUSH BC	;
237)   3423 28 F2       		 JR Z,CM_GTKEY  ;NO CHANGE	;NO CHANGE
238)   3425 F1          		 POP AF	;
239)   3426 3D          		 DEC A	;
240)   3427 F5          		 PUSH AF	;
241)   3428 18 14       		 JR REPRINT  	;
242)   342A FE 0A       		CM_CHKNXT: CP 10  ;ARROW DOWN	;ARROW DOWN
243)   342C 20 15       		 JR NZ,CM_CHKNXT1	;
244)   342E D1          		 POP DE	;
245)   342F E1          		 POP HL	;
246)   3430 E5          		 PUSH HL	;
247)   3431 D5          		 PUSH DE	;
248)   3432 C5          		 PUSH BC  	;
249)   3433 CD BB 32    		 CALL MNU_CNTITMS ;C THE MENU ITEMS	;C THE MENU ITEMS
250)   3436 F1          		 POP AF   ;A THE CURRENT ITEM NO	;A THE CURRENT ITEM NO
251)   3437 B9          		 CP C   ;WE ARE AT THE LAST?	;WE ARE AT THE LAST?
252)   3438 F5          		 PUSH AF	;
253)   3439 28 DC       		 JR Z,CM_GTKEY  ;NO CHANGE	;NO CHANGE
254)   343B F1          		 POP AF	;
255)   343C 3C          		 INC A	;
256)   343D F5          		 PUSH AF	;
258)   343E F1          		REPRINT: POP AF	;
259)   343F D1          		 POP DE	;
260)   3440 E1          		 POP HL	;
261)   3441 18 CE       		 JR CREATEMENU	;
262)   3443 FE 0D       		CM_CHKNXT1: CP 13  ;ENTER RETURN THE SELECTED ITEM	;ENTER RETURN THE SELECTED ITEM
263)   3445 C5          		 PUSH BC	;
264)   3446 20 CF       		 JR NZ,CM_GTKEY	;
265)   3448 C1          		 POP BC	;
266)   3449 78          		 LD A,B   ;SELECTED ITEM	;SELECTED ITEM
267)   344A D1          		 POP DE	;
268)   344B E1          		 POP HL	;
269)   344C C9          		 RET	;
  4)   344D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3451 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3455 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3459 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   345D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3461 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3465 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3469 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   346D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3471 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3475 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3479 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   347D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3481 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3485 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3489 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   348D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3491 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3495 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3499 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   349D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34A9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34AD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34B9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34BD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34C9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34CD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34D9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34DD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34E9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34ED 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34F9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   34FD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3501 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3505 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3509 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   350D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3511 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3515 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3519 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   351D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3521 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3525 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3529 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   352D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3531 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3535 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3539 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   353D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3541 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3545 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3549 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   354D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3551 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3555 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3559 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   355D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3561 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3565 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3569 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   356D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3571 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3575 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3579 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   357D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3581 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3585 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3589 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   358D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3591 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3595 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   3599 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   359D 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35A9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35AD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35B9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35BD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35C9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35CD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35D9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35DD 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35E9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35ED 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F1 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F5 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35F9 00 00 00 00 		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  4)   35FD 00 00 00    		 DS FONT_ADDR-$      ;DS ALWAYS SAVED IN FILE FILL ZEROES	;DS ALWAYS SAVED IN FILE FILL ZEROES
  5)   3600 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3604 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3608 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   360C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3610 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3614 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3618 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   361C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3620 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3624 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3628 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   362C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3630 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3634 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3638 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   363C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3640 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3644 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3648 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   364C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3650 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3654 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3658 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   365C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3660 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3664 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3668 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   366C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3670 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3674 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3678 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   367C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3680 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3684 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3688 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   368C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3690 80 01 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3694 7E 00 C0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3698 00 00 FF 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   369C 80 02 F0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36AC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36B8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36BC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36C8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36CC 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D0 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36D8 00 10 00 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36DC 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E0 14 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E4 00 18 18 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36E8 18 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36EC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36F8 0C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   36FC 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3700 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3704 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3708 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   370C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3710 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3714 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3718 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   371C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3720 00 10 12 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3724 10 60 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3728 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   372C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3730 38 10 38 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3734 08 7C 1C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3738 38 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   373C 08 00 20 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3740 3C 18 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3744 7C 7E 7E 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3748 42 38 02 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   374C 40 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3750 7C 3C 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3754 FE 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3758 44 44 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   375C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3760 20 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3764 04 00 08 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3768 40 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   376C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3770 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3774 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3778 00 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   377C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3780 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3784 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3788 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   378C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3790 C0 03 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3794 7E 00 B0 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3798 00 00 00 06 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   379C 40 04 C0 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A0 7C 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A4 38 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37A8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37AC 60 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B0 00 7E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B4 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37B8 00 00 00 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37BC 38 38 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C0 7E 10 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C4 10 00 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37C8 60 08 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37CC 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D0 08 20 28 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D4 20 10 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37D8 20 28 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37DC 08 20 28 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E0 28 00 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E4 18 18 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37E8 3C 42 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37EC 44 10 10 3A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F0 00 3E 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F4 04 FE 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37F8 10 7E 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   37FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3800 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3804 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3808 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   380C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3810 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3814 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3818 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   381C 00 F0 0F FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3820 00 10 24 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3824 3C 64 50 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3828 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   382C 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3830 44 30 44 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3834 18 40 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3838 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   383C 10 00 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3840 42 24 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3844 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3848 42 10 02 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   384C 40 66 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3850 42 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3854 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3858 44 44 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   385C 40 08 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3860 10 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3864 04 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3868 40 10 10 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   386C 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3870 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3874 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3878 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   387C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3880 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3884 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3888 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   388C 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3890 E0 07 AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3894 7E 7E 8C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3898 00 00 00 0A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   389C 20 08 A0 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A0 44 00 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A4 40 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38A8 00 00 7C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38AC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B0 00 42 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B4 00 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38B8 00 00 7C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38BC 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C0 22 28 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C4 10 10 60 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38C8 10 00 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38CC 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D0 10 10 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D4 10 28 28 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38D8 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38DC 10 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E0 00 00 62 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E4 24 24 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38E8 42 42 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38EC EE 38 00 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F0 00 50 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F4 08 82 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38F8 18 90 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   38FC 28 48 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3900 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3904 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3908 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   390C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3910 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3914 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3918 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   391C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3920 00 10 48 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3924 50 08 50 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3928 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   392C 00 00 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3930 4C 10 04 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3934 28 78 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3938 44 44 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   393C 20 7C 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3940 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3944 22 40 40 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3948 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   394C 40 5A 52 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3950 42 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3954 10 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3958 28 28 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   395C 20 08 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3960 08 38 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3964 3C 38 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3968 78 00 00 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   396C 10 EC 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3970 78 3C 5C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3974 38 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3978 44 44 7C 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   397C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3980 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3984 08 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3988 08 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   398C 10 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3990 F0 0F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3994 7E 7E 82 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3998 18 18 00 12 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   399C 12 90 90 41 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A0 40 34 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A4 38 1C 28 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39A8 58 10 20 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39AC 10 44 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B0 7C 00 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B4 7C 44 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39B8 44 44 20 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39BC 7C 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C0 10 28 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C4 10 08 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39C8 30 08 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39CC 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D0 38 38 38 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D4 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39D8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39DC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E0 78 3C 52 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39E8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39EC FE 7C 38 4C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F0 3A 90 6C 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F4 08 44 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39F8 24 90 6C 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   39FC 28 30 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A24 38 10 20 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A28 40 04 10 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A2C 00 7C 00 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A30 54 10 18 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A34 48 04 78 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A38 38 3C 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A3C 40 00 04 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A40 52 7E 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A44 22 7C 7C 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A48 7E 10 02 70 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A4C 40 5A 4A 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A50 7C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A58 10 10 10 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A5C 10 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A60 00 04 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A64 44 44 38 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A70 44 44 60 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A74 10 44 44 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A78 28 44 08 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A7C 00 04 32 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A80 00 FF 08 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A84 FF FF F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A88 F8 0F F8 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A8C E0 03 E0 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A90 F8 1F 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A94 7E 7E 8C 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A98 24 3C 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3A9C 0A A0 08 31 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA0 40 48 78 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA4 44 20 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AA8 64 10 78 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB0 28 18 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB4 10 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AB8 24 24 40 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ABC 92 92 28 82 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC0 08 44 24 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC4 10 7C 2C 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AC8 14 08 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ACC 04 04 04 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD0 44 44 44 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ADC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE0 44 40 4A 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE4 78 7E 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AE8 42 42 FE FE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AEC FE FE 04 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF0 4C FC 12 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF4 08 44 7C 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AF8 24 9C 92 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3AFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B20 00 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B24 14 20 54 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B28 40 04 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B2C 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B30 64 10 20 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B34 7C 04 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B38 44 04 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B3C 20 7C 08 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B40 4E 42 42 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B44 22 40 40 4E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B48 42 10 02 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B4C 40 42 46 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B50 40 4A 48 02 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B54 10 42 24 5A 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B58 28 10 20 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B5C 08 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B60 00 7C 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B64 44 7C 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B68 44 10 10 60 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B70 44 44 40 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B78 10 44 10 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B7C 10 08 4C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B8C 00 00 10 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B90 FC 3F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B94 7E 7E B0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B98 24 3C 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3B9C 06 C0 04 0D 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA4 44 18 54 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BA8 44 10 20 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BAC 28 44 24 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB0 28 00 44 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BB8 28 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BBC 7C 7C 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC0 10 44 24 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC4 54 08 32 2C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BC8 6C 08 20 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BCC 7C 7C 7C 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD0 7C 7C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE0 44 40 46 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BE8 42 42 54 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BEC 7C D6 7C 64 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF0 54 90 FE 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF4 08 28 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BF8 18 90 9E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3BFC 28 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C04 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C08 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C0C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C10 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C18 0F 0F 0F 0F 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C1C FF FF FF FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C20 00 00 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C24 78 4C 88 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C28 20 08 54 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C2C 00 00 00 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C30 44 10 40 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C34 08 44 44 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C38 44 08 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C3C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C40 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C44 22 40 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C48 42 10 42 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C4C 40 42 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C50 40 44 44 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C54 10 42 24 66 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C58 44 10 40 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C5C 04 08 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C60 00 44 44 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C64 44 40 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C68 44 10 10 50 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C6C 10 92 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C70 78 3C 40 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C74 10 44 28 92 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C78 28 44 20 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C7C 10 08 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C90 FE 7F AA FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C94 7E 7E C0 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C98 18 18 00 80 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3C9C 3E F0 02 03 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA0 40 48 44 54 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA4 44 20 54 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CA8 44 10 40 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CAC 44 44 18 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB0 28 42 64 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB4 10 44 54 40 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CB8 10 24 40 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CBC 10 10 44 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC0 22 82 24 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC4 38 10 0C 14 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CC8 14 08 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CCC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD0 40 40 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD4 10 10 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CD8 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CDC 44 44 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE0 44 40 42 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE4 20 42 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CE8 42 42 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CEC 38 10 44 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF0 64 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF4 08 28 10 44 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CF8 08 90 90 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3CFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D1C F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D20 00 10 00 28 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D24 10 0C 74 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D28 10 10 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D2C 10 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D30 38 38 7C 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D34 08 38 38 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D38 38 70 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D3C 08 00 20 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D40 3C 42 7C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D44 7C 7E 40 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D48 42 38 3C 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D4C 7E 42 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D50 40 3A 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D54 10 3C 18 42 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D58 44 10 7C 0C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D5C 00 18 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D60 00 3C 78 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D64 3C 3C 10 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D68 44 18 10 48 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D6C 18 92 44 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D70 40 04 40 78 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D74 18 3C 10 6C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D78 44 3C 7C 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D7C 10 10 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3D9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA0 40 34 78 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA4 38 1C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DA8 44 08 38 24 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DAC 44 78 10 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB0 24 7E 58 30 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB4 08 38 28 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DB8 28 18 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DBC 38 38 C6 EE 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC0 7E FE 66 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC4 10 00 10 1E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DC8 1E 08 38 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DCC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD0 3C 3C 3C 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD4 18 18 18 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DD8 38 38 38 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DDC 3C 3C 3C 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE0 44 3C 42 3C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE4 7C 42 7E 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DE8 3C 3C 38 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DEC 10 38 3C B8 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF0 B8 9E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF4 08 10 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DF8 30 7E 6E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3DFC 28 00 7E 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E2C 20 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E38 00 00 00 20 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E5C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E64 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E68 00 00 10 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E78 00 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3E9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EA8 04 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB4 00 00 00 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EB8 48 00 04 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC4 00 00 1E 04 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EC8 04 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ECC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3ED8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE0 00 08 00 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF4 10 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3EFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F00 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F04 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F08 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F0C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F10 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F14 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F18 F0 F0 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F1C F0 00 F0 F0 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F20 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F24 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F28 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F2C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F30 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F34 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F38 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F3C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F40 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F44 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F48 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F4C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F50 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F54 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F58 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F5C 00 00 00 7C 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F60 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F64 00 00 00 38 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F68 00 00 30 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F6C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F70 40 04 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F74 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F78 00 38 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F7C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F80 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F84 00 08 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F88 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F8C 00 00 08 08 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F90 FF FF 55 FF 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F94 7E 7E 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F98 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3F9C 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA0 00 00 40 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA4 00 00 10 10 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FA8 04 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FAC 00 40 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB0 00 00 40 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB4 00 00 00 18 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FB8 44 00 18 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FBC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FC8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FCC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD0 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FD8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FDC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE0 00 18 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FE8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FEC 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF0 00 00 00 7E 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF4 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FF8 00 00 00 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
  5)   3FFC 00 00 7E 00 		 INCLUBIN charset2.chr     ;2560 BYTES 8X10 CHARACTER SET	;2560 BYTES 8X10 CHARACTER SET
 14)   FE00 00          		 @FLAGS DEFS 1        ; Flags: B7=ESC PRESSED,B6=ESC DISABLED	; Flags: B7=ESC PRESSED, B6=ESC DISABLED
 15)   FE01 00 00       		 @FCOLOR DEFS 2       ;FOREGROUND COLOR FOR TEXT	;FOREGROUND COLOR FOR TEXT
 16)   FE03 00 00       		 @BCOLOR DEFS 2       ;BACKGROUND COLOR FOR TEXT	;BACKGROUND COLOR FOR TEXT
 17)   FE05 00 00       		 @FGRCOL DEFS 2       ;FOREGROUND COLOR FOR GRAPHICS	;FOREGROUND COLOR FOR GRAPHICS
 18)   FE07 00 00       		 @BGRCOL DEFS 2       ;BACKGROUND COLOR FOR GRAPHICS	;BACKGROUND COLOR FOR GRAPHICS
 19)   FE09 00 00       		 @FCOLTM DEFS 2       ;TEMP FOREGROUND COLOR	;TEMP FOREGROUND COLOR
 20)   FE0B 00 00       		 @BCOLTM DEFS 2       ;TEMP BACKGROUND COLOR	;TEMP BACKGROUND COLOR
 21)   FE0D 00          		 @CURSORX DEFS 1       ;0-79	;0-79
 22)   FE0E 00          		 @CURSORY DEFS 1       ;0-47	;0-47
 23)   FE0F 00          		 @SCRLN DEFS 1        ;0-47 SCROLL LINES	;0-47 SCROLL LINES
 24)   FE10 00          		 @LASTCHAR DEFS 1      ;	;
 25)   FE11 00          		 @CURSSTAT DEFS 1       ;IF BIT 0 SET THEN SHOW ELSE HIDE,IF BIT 1 SET THEN VISIBLE ELSE HIDDEN ,BIT 2 EN/DIS CURSOR; BIT 3 EN/DIS TIME DISPLAY ON LCD	;IF BIT 0 SET THEN SHOW ELSE HIDE, IF BIT 1 SET THEN VISIBLE ELSE HIDDEN , BIT 2 EN/DIS CURSOR; BIT 3 EN/DIS TIME DISPLAY ON LCD
 26)   FE12 00 00       		 @EDPTR DEFS 2	;
 27)   FE14 00          		 @OPTVAL DEFS 1	;
 28)   FE15 00          		 @INKEY DEFS 1	;
 29)   FE16 00          		 @VDUMODE DEFS 1       ;VDU 4 TEXT PRINT 5 GRAPH PRINT	;VDU 4 TEXT PRINT 5 GRAPH PRINT
 30)   FE17 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE1F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE23 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE27 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2B 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE2F 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 30)   FE33 00 00 00 00 		 @FCOLPAL DEFS 16*2       ; FORECOLOR PALETTE	; FORECOLOR PALETTE
 31)   FE37 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE3F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE43 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE47 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4B 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE4F 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 31)   FE53 00 00 00 00 		 @BCOLPAL DEFS 16*2       ; BACKCOLOR PALETTE	; BACKCOLOR PALETTE
 32)   FE57 00 00       		 @GR_LASTX3 DEFS 2	;
 33)   FE59 00 00       		 @GR_LASTY3 DEFS 2	;
 34)   FE5B 00 00       		 @GR_LASTX2 DEFS 2	;
 35)   FE5D 00 00       		 @GR_LASTY2 DEFS 2	;
 36)   FE5F 00 00       		 @GR_LASTX DEFS 2	;
 37)   FE61 00 00       		 @GR_LASTY DEFS 2	;
 38)   FE63 00 00       		 @GR_PARAM1 DEFS 2	;
 39)   FE65 00 00       		 @GR_PARAM2 DEFS 2	;
 40)   FE67 00 00       		 @GR_PARAM3 DEFS 2	;
 41)   FE69 00 00       		 @GR_PARAM4 DEFS 2	;
 43)   FE6B 00 00       		 @FILL_X DEFS 2	;
 44)   FE6D 00 00       		 @FILL_Y DEFS 2	;
 45)   FE6F 00 00       		 @FILL_L DEFS 2	;
 46)   FE71 00 00       		 @FILL_X1 DEFS 2	;
 47)   FE73 00 00       		 @FILL_X2 DEFS 2	;
 48)   FE75 00 00       		 @FILL_DY DEFS 2	;
 49)   FE77 00 00       		 @FILL_Q DEFS 2        ;START OF QUEUE	;START OF QUEUE
 50)   FE79 00 00       		 @FILL_IDX DEFS 2       ;INDEX OF QUEUE	;INDEX OF QUEUE
 51)   FE7B 00 00       		 @FILL_PY DEFS 2       ;FOR PUSH/POP	;FOR PUSH/POP
 52)   FE7D 00 00       		 @FILL_PXL DEFS 2	;
 53)   FE7F 00 00       		 @FILL_PXR DEFS 2	;
 54)   FE81 00 00       		 @FILL_PDY DEFS 2	;
 55)   FE83 00 00       		 @FILL_OV DEFS 2       ;OLD COLOR	;OLD COLOR
 56)   FE85 00 00       		 @FILL_OLDSP DEFS 2      ; OLD SP	; OLD SP
 57)   FE87 00          		 @LCD_DSPCTRL DEFS 1      ;LCD I2C 16X2	;LCD I2C 16X2
 58)   FE88 00          		 @LCD_DSPMODE DEFS 1      ;LCD I2C 16X2	;LCD I2C 16X2
 59)   FE89 00          		 @LCD_STSMASK DEFS 1      ;LCD I2C 16X2 	;LCD I2C 16X2
 60)   FE8A 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE8E 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE92 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE96 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE9A 00 00 00 00 		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 60)   FE9E 00 00       		 @BUFFER DEFS 22       ; 20 BYTE BUFFER FOR I2C USAGE	; 20 BYTE BUFFER FOR I2C USAGE
 61)   FEA0 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEA4 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEA8 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEAC 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEB0 00 00 00 00 		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 61)   FEB4 00 00       		 @TIMMSG  DEFS 22      ;DEFM '10/10/2020 5 12:43:45'DB 0	;DEFM '10/10/2020 5 12:43:45'DB 0
 62)   FEB6 00          		 @FFSTAT DEFS 1        ;FOR OUTPUT FLIP FLOPS DEVEPR,DEVKBD	;FOR OUTPUT FLIP FLOPS DEVEPR, DEVKBD
 63)   FEB7 00          		 @KEYCTR DEFS 1        ;FOR USB KEYBOARD	;FOR USB KEYBOARD
 64)   FEB8 00          		 @SERERR DEFS 1       ;	;
 65)   FEB9 00          		 @SERER2 DEFS 1        ;AT RAM ADDRESS	;AT RAM ADDRESS
 66)   FEBA 00          		 @DISPCT DEFS 1        ;	;
 67)   FEBB 00          		 @SCRNST DEFS 1       ;SCREEN STATUS BIT 0 ON/OFF LCD,BIT 1 ON/OFF VGA	;SCREEN STATUS BIT 0 ON/OFF LCD, BIT 1 ON/OFF VGA
 68)   FEBC 00          		 @LCDCX DEFS 1        ;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)	;DB 0  ;DISPLAY X POS (0..F  FOR 1..16)
 69)   FEBD 00          		 @LCDCY DEFS 1        ;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DB 0  ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 70)   FEBE 00 00       		 @PRGEX DEFS 2        ;2 BYTES	;2 BYTES
 71)   FEC0 00          		 @TVSTAT DEFS 1        ;1 BYTE	;1 BYTE
 72)   FEC1 00 00 00 00 		 @TIMECTR DEFS 4	;
 73)   FEC5 00          		 @INT2TE DEFS 1	;
 74)   FEC6 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FECA 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FECE 00 00 00 00 		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 74)   FED2 00          		 @MYNUM DEFS 13       ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 75)   FED3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FED7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEDB 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEDF 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEE3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEE7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEEB 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEEF 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEF3 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 75)   FEF7 00 00 00 00 		 @STRGBUFF DEFS 40       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 76)   FEFB 00 00 00 00 		 @STRGCMD DEFS 4	;
 77)   FEFF 00          		 @FID DEFS 1	;
 78)   FF00 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF04 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF08 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF0C 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF10 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF14 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF18 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF1C 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF20 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF24 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF28 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF2C 00 00 00 00 		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 78)   FF30 00 00       		 @USBBUF DEFS 50       ;CH376 USB BUFFER	;CH376 USB BUFFER
 79)   FF32 00          		 @SPC DEFS 1	;
 80)   FF33 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 80)   FF37 00 00 00 00 		 @BANKS DEFS 8       ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 81)   FF3B 00 00 00 00 		 @TMPG  DEFS 4  ;TEMP PAGE FOR VIDEO VGA	;TEMP PAGE FOR VIDEO VGA
 82)   FF3F 00 00 00 00 		 @PGSEM DEFS 4  ;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS	;PAGE SEMAPHORES TO KEEP TRACK OF PAGE CALLS
 84)   FF43 00          		 @VGAFCOL DEFS 1  ;VGA FORE COLOR	;VGA FORE COLOR
 85)   FF44 00          		 @VGABCOL DEFS 1  ;VGA BACK COLOR	;VGA BACK COLOR
 86)   FF45 00          		 @VGATX_X DEFS 1  ;VGA CURRENT X POS	;VGA CURRENT X POS
 87)   FF46 00          		 @VGATX_Y DEFS 1  ;VGA CUR Y POS	;VGA CUR Y POS
 88)   FF47 00          		 @VGAMAXX DEFS 1  ;MAX HORZ CHARS	;MAX HORZ CHARS
 89)   FF48 00          		 @VGAMAXY DEFS 1  ;MAX VERT LINES	;MAX VERT LINES
 90)   FF49 00          		 @VGATMPC DEFS 1  ;TMP CHAR FOR CURSOR	;TMP CHAR FOR CURSOR
 91)   FF4A 00          		 @VGABUF  DEFS 1  ;BUFFER TO WRITE-BIT 0 TO SELECT	;BUFFER TO WRITE - BIT 0 TO SELECT
 92)   FF4B 00 00       		 @VGASTADR DEFS 2 ;START ADDRESS TO CALCULATE TEXT OUTPUT	;START ADDRESS TO CALCULATE TEXT OUTPUT
 94)   FF4D 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF51 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF55 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF59 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF5D 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF61 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF65 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF69 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF6D 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 94)   FF71 00 00 00 00 		 @COMDBUF DEFS 40 ;OS COMMAND BUFFER	;OS COMMAND BUFFER
 95)   FF75 00 00       		 @COMDGET DEFS 2  ;OS COMDGET ADDRESS (CHANGE THIS IN BASIC TO RETURN THERE)	;OS COMDGET ADDRESS (CHANGE THIS IN BASIC TO RETURN THERE)
 97)   FF77 00 00 00 00 		 @B2DINV DEFS 8  ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 97)   FF7B 00 00 00 00 		 @B2DINV DEFS 8  ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 98)   FF7F 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 98)   FF83 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 98)   FF87 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 98)   FF8B 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 98)   FF8F 00 00 00 00 		 @B2DBUF DEFS 20  ;ASCCI STRING OF THE NUMBER 	;ASCCI STRING OF THE NUMBER
 99)   FF93 00          		 @B2DEND DEFS 1  ;0 FOR TERMINATE THE STRING	;0 FOR TERMINATE THE STRING
100)   FF94 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
100)   FF98 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
100)   FF9C 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
100)   FFA0 00 00 00 00 		 @INTTAB DEFS 2*8 ;INTERRUPT ROUTINES TABLE (0-7)	;INTERRUPT ROUTINES TABLE (0-7)
101)   FFA4 00          		 @DISPEN DEFS 1  ;BIT 0 = LCD OFF/ON BIT 1 = VGA OFF/ON	;BIT 0 = LCD OFF/ON BIT 1 = VGA OFF/ON
102)   FFA5 00          		 @RNDseed DEFS 1  ;RANDOM SEED	;RANDOM SEED
104)   FFA6 00          		 @KBDFLAG DEFS 1  ;KEYB FLAG	;KEYB FLAG
105)   FFA7 00          		 @LASTKEY DEFS 1  ;LAST KEY PRESSED	;LAST KEY PRESSED
106)   FFA8 00          		 @MENUVCLR DEFS 1 ;MENU VGA COLOR FORE AND BACK HI NIBBLE IS BACKGROUND	;MENU VGA COLOR FORE AND BACK HI NIBBLE IS BACKGROUND
107)   FFA9 00 00       		 @MENULFORE DEFS 2 ;MENU LCD COLOR FOREGROUND	;MENU LCD COLOR FOREGROUND
108)   FFAB 00 00       		 @MENULBACK DEFS 2 ;MENU LCD COLOR BACKGROUND	;MENU LCD COLOR BACKGROUND
112)   FFAD 00 00       		               DEFS 2	;
113)   FFAF 00 00       		               DEFS 2	;
114)   FFB1 00 00       		               DEFS 2	;
115)   FFB3 00 00       		               DEFS 2	;
117)   FFB5 00 00       		               DEFS 2	;
118)   FFB7 00 00       		               DEFS 2	;
119)   FFB9 00 00       		               DEFS 2	;
120)   FFBB 00 00       		               DEFS 2	;
122)   FFBD 00          		               DEFS 1	;
123)   FFBE 00          		               DEFS 1	;
124)   FFBF 00          		               DEFS 1	;
125)   FFC0 00          		               DEFS 1	;
126)   FFC1 00          		 @CHANST         DEFS 1    ;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED                	;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED
127)   FFC2 00 00       		 @LINESTR  DEFS 2  ;ADDRESS OF LINEBUF FOR PRINTING ON STRING	;ADDRESS OF LINEBUF FOR PRINTING ON STRING
128)   FFC4 00          		 @LINEPOS  DEFS 1	;
129)   FFC5 00 00 00 00 		 @NUMBUF  DEFS 7	;
129)   FFC9 00 00 00    		 @NUMBUF  DEFS 7	;
130)   FFCC 00          		 @STRG_STAT DEFS 1  ;STORAGE_NEW STAUS BIT 0=0 NOT CONNECTED,1=CONNECTED,BIT 7 DEVICE EXISTS	;STORAGE_NEW STAUS BIT 0=0 NOT CONNECTED, 1=CONNECTED, BIT 7 DEVICE EXISTS
