;Bit 0 is Blue, 1 is green , 2 is red, 3 is intensity
		@VGA_BLACK EQU 0
		@VGA_MAROON EQU 1
		@VGA_GREEN EQU 2
		@VGA_OLIVE EQU 3
		@VGA_NAVY EQU 4
		@VGA_PURPLE EQU 5
		@VGA_TEAL EQU 6
		@VGA_SILVER EQU 7
		@VGA_GRAY EQU 8
		@VGA_RED EQU 9
		@VGA_LIME EQU 10
		@VGA_YELLOW EQU 11
		@VGA_BLUE EQU 12
		@VGA_FUCHSIA EQU 13
		@VGA_AQUA EQU 14
		@VGA_WHITE EQU 15
		
		
		GLOBAL VGA_INIT		;INITIALIZATION PARAMS
		GLOBAL VGA_CLR		;CLEARS THE SCREEN
		GLOBAL VGA_PRCH		;PRINT A CHAR
		GLOBAL VGA_PRINT	;PRINT A MESSAGE
		GLOBAL VGA_RMVCURS	;REMOVES THE CURSOR
		GLOBAL VGA_PRNCURS	;SETS THE CURSOR
		GLOBAL VGA_GETCHAR	;GETS A CHAR FROM SCREEN
		GLOBAL VGA_DOCHCLR	;CHANGES THE CHAR COLOR INFO
		
VGA_INIT:	XOR A
		LD (PGSEM), A
		LD (TMPG), A
		LD A, VGA_YELLOW
		LD (VGAFCOL), A
		LD A, VGA_NAVY
		LD (VGABCOL), A
		LD A, 0
		LD (VGATX_X), A
		LD A, 0
		LD (VGATX_Y), A
		RET
		
;SETS THE VIDEO PAGE 8 ON $8000 BANK 4
;IT MAY BE CALLED SEVERAL TIMES IT KEEPS TRACK ON THAT
;EACH VGA_GETPAGE MUST HAVE A VGA_RMVPAGE
;LAST ONE SETS THE PREVIOUS PAGE IN BANK 4
;DESTROYS A,BC,DE
VGA_GETPAGE:	LD A, (PGSEM)
		INC A
		LD (PGSEM), A
		CP 1
		RET NZ
		PUSH HL
		LD B, 4 							;8000h
		CALL GETPGINBANK
		LD (TMPG), A 							;SAVE OLD PAGE
		LD A, 8 							;PAGE 8
		CALL PUTPGINBANK
		POP HL
		RET
		
;SET BACK THE PAGE THAT WAS ON BANK 4
;DESTROYS A,BC,DE
VGA_RMVPAGE:	LD A, (PGSEM)
		DEC A
		LD (PGSEM), A
		CP 0
		RET NZ
		PUSH HL
		LD B, 4
		LD A, (TMPG)
		CALL PUTPGINBANK 						;RESTORE OLD PAGE
		POP HL
		RET
		
;CLEARS THE VGA TEXT AREA
;PUTS 32 SPACE AS CHAR AND THE BACKGROUND COLOR ONLY
VGA_CLR:	CALL VGA_GETPAGE
		LD BC, 800
		LD HL, $8000 							;DEL CHARS
		LD DE, $8400
VGAC_AGN:	LD A, 32
		LD (HL), A
		LD A, (VGABCOL)
		SLA A
		SLA A
		SLA A
		SLA A
		LD (DE), A
		INC HL
		INC DE
		DEC BC
		LD A, B
		OR C
		JR NZ, VGAC_AGN
		XOR A
		LD (VGATX_X),A
		LD (VGATX_Y),A
		CALL VGA_RMVPAGE
		RET
		
;RETURNS COLOR INFO
;DESTROYS A,B
VGA_GETCOL:	LD A, (VGAFCOL) 						;GET COLOR INFO
		LD B, A
		LD A, (VGABCOL)
		SLA A
		SLA A
		SLA A
		SLA A
		OR B 								;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR
		RET
		
		
;RETURNS THE VIDEO TEXT ADDRESS OF TX,TY
;DESTROYS BC,DE,HL
VGA_CALC_VIDAD:	PUSH AF
		LD B, 0
		LD A, (VGATX_Y)
		LD C, A
		LD HL, $8000
		LD DE, 40
VGCLC_AGN:	LD A, B
		OR C
		JR Z, VGCLC_DOX
		ADD HL, DE
		DEC BC
		JR VGCLC_AGN
VGCLC_DOX:	LD B, 0
		LD A, (VGATX_X)
		LD C, A
		ADD HL, BC
		POP AF
		RET
		
;PRINTS A CHAR & COLOR TO CURRENT TX,TY
;DESTROYS BC,DE,A
VGA_PRCH:	PUSH AF
		CALL VGA_GETPAGE
		POP AF
		CP 31
		CALL C, VGA_NOTVISCH
		JR Z, PRCH_EX 							;EXIT IF CHAR WAS HANDLED
		CALL VGA_DOPRNCH 						;PRINT THE CHAR
		CALL VGA_TXFORW 						;TEXT FORWARD
PRCH_EX:	CALL VGA_RMVPAGE
		RET
		
;PRINTS A CHAR ON CURRENT POS
VGA_DOPRNCH:	PUSH HL
		PUSH AF
		CALL VGA_GETPAGE
		CALL VGA_CALC_VIDAD 						;CALC VIDEO ADDRESS
		POP AF
		LD (HL), A 							;PUT CHAR ON SCREEN
		LD DE, $400
		ADD HL, DE 							;CALC COLOR ADDRESS
		CALL VGA_GETCOL 						;GET CURRENT COLOR
		LD (HL), A 							;PUT COLOR INFO ON SCREEN
		POP HL
		CALL VGA_RMVPAGE
		RET
		
;A HAS THE NEW COLOR VALUE TO PUT ON CHAR
;DESTROYS HL,DE		
VGA_DOCHCLR:	PUSH AF
		CALL VGA_GETPAGE
		CALL VGA_CALC_VIDAD 						;CALC VIDEO ADDRESS
		LD DE, $400
		ADD HL, DE 							;CALC COLOR ADDRESS
		POP AF
		LD (HL), A 							;PUT COLOR INFO ON SCREEN
		CALL VGA_RMVPAGE
		RET
		
		
;PERFORMS SCREEN ACTIONS BASED ON CONTROL CHARS 0-31
;A= CHAR 0-31
VGA_NOTVISCH:	CP 8 								;BACKSPACE
		JR NZ, NX1
		LD A, (VGATX_X)
		CP 1 								;COL 0 HAS THE PROMPT
		RET Z 								;DO NOT PRINT ANYTHING
		DEC A
		LD (VGATX_X), A
		LD A, 32 							;PRINT SPACE
		CALL VGA_DOPRNCH 						;
		SUB A 								;SET ZF
		RET
NX1:		CP 10 								;JUST IGNORE IT
		RET Z
		CP 13 								;CR =NEW LINE
		JR NZ, NX2
		CALL VGDOY 							;ADD 1 TO TY
		LD (VGATX_X), A 						;ZF IS SET
		RET
NX2:		XOR A 								;NC MEANS WE DON'T PRINT
		RET

;GET THE CURRENT CHAR ON D AND THE COLOR ON E
VGA_GETCHAR:	CALL VGA_GETPAGE
		CALL VGA_CALC_VIDAD 	;CALC VIDEO ADDR ON HL
		LD A,(HL)
		LD DE, $400
		ADD HL, DE 							;CALC COLOR ADDRESS
		LD D,A
		LD A,(HL)
		LD E,A
		CALL VGA_RMVPAGE
		RET


VGA_RMVCURS:	CALL VGA_GETCHAR
		LD A,D
		CALL VGA_DOPRNCH
		RET
VGA_PRNCURS:	CALL VGA_GETPAGE
		CALL VGA_GETCHAR ; E HAVE THE COLOR INFO
		LD A,E
		RRCA		;CHANGE FORE AND BACK COLOR INFO
		RRCA
		RRCA
		RRCA
		CALL VGA_DOCHCLR ;CHANGE THE COLOR
		CALL VGA_RMVPAGE
		RET
		
;HL THE MESSAGE
VGA_PRINT:	CALL VGA_GETPAGE
VGAP_AGN:	LD A, (HL)
		CP 0
		JR Z, VGAP_EX
		CALL VGA_PRCH
		INC HL
		JR VGAP_AGN
VGAP_EX:	CALL VGA_RMVPAGE
		RET
		
		
VGA_TXFORW:	PUSH AF
		LD A, (VGATX_X)
		INC A
		CP 40
		CALL Z, VGDOY
		LD (VGATX_X), A
		POP AF
		RET
VGDOY:		LD A, (VGATX_Y)
		INC A
		CP 20
		CALL Z, DOSCRL
		LD (VGATX_Y), A
		XOR A
		RET

DOSCRL:		CALL DOSCRL_COL							;SCROLL COLORS
		CALL DOSCRL_TXT							;SCROLL TEXT
		RET 		
DOSCRL_TXT:	LD HL, $8028 							;LINE 1
		LD DE, $8000 							;LINE 0
		LD BC, 800 - 40 						;BYTES TO SCROLL UP
		LDIR
		LD A, 32
		LD HL, $82F8 							;LINE 19 = LAST LINE
		LD B, 40
DOS_AGN:	LD (HL), A 							;CLEAR LAST LINE
		INC HL
		DJNZ, DOS_AGN
		LD A, 19 							;SET TO LAST LINE
		RET

DOSCRL_COL:	LD HL, $8428  							;LINE 1
		LD DE, $8400 							;LINE 0
		LD BC, 800 - 40 						;BYTES TO SCROLL UP
		LDIR		
		CALL VGA_GETCOL							;SET DEFAULT COLOR
		LD HL, $86F8 							;LINE 19 = LAST LINE
		LD B, 40
DOS_AGNCL:	LD (HL), A 							;CLEAR LAST LINE
		INC HL
		DJNZ, DOS_AGNCL
		RET
