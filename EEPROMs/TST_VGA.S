ORG $C000


INCLUDE MYOS_2_0000.SYM

;Bit 0 is Blue, 1 is green , 2 is red, 3 is intensity
VGA_BLACK   EQU 0
VGA_MAROON  EQU 1
VGA_GREEN   EQU 2
VGA_OLIVE   EQU 3 
VGA_NAVY    EQU 4
VGA_PURPLE  EQU 5
VGA_TEAL    EQU 6
VGA_SILVER  EQU 7
VGA_GRAY    EQU 8
VGA_RED     EQU 9
VGA_LIME    EQU 10
VGA_YELLOW  EQU 11 
VGA_BLUE    EQU 12
VGA_FUCHSIA EQU 13
VGA_AQUA    EQU 14
VGA_WHITE   EQU 15


START:	CALL VGA_INIT
	CALL VGA_CLR
	LD A,0
	LD B,16
STAGN:	LD (VGAFCOL),A
	PUSH AF
	PUSH BC
	LD HL,MES1
	CALL VGA_PRNT
	POP BC
	POP AF
        INC A
	LD HL,VGATX_Y
	INC (HL)
	LD HL,VGATX_X
	LD C,0
	LD (HL),C
	DJNZ STAGN
	
	RET


VGA_INIT: XOR A
        LD (PGSEM),A
	LD (TMPG),A
	LD A,VGA_YELLOW
	LD (VGAFCOL),A
	LD A,VGA_NAVY
	LD (VGABCOL),A
	LD A,0
        LD (VGATX_X),A
	LD A,0
        LD (VGATX_Y),A
	RET

;SETS THE VIDEO PAGE 8 ON $8000 BANK 4
;IT MAY BE CALLED SEVERAL TIMES IT KEEPS TRACK ON THAT
;EACH VGA_GETPAGE MUST HAVE A VGA_RMVPAGE
;LAST ONE SETS THE PREVIOUS PAGE IN BANK 4
;DESTROYS A,BC,DE
VGA_GETPAGE: LD A,(PGSEM)
	 INC A
         LD (PGSEM),A	 	 
	 CP 1
	 RET NZ         
	 PUSH HL
	 LD B,4		;8000h
	 CALL GETPGINBANK
	 LD (TMPG),A    ;SAVE OLD PAGE
	 LD A,8		;PAGE 8
         CALL PUTPGINBANK
	 POP HL
	 RET

;SET BACK THE PAGE THAT WAS ON BANK 4
;DESTROYS A,BC,DE
VGA_RMVPAGE: LD A,(PGSEM)
	 DEC A
	 LD (PGSEM),A
	 CP 0
	 RET NZ
         PUSH HL
	 LD B,4
	 LD A,(TMPG)
	 CALL PUTPGINBANK ;RESTORE OLD PAGE
         POP HL
	 RET

;CLEARS THE VGA TEXT AREA
;PUTS 32 SPACE AS CHAR AND THE BACKGROUND COLOR ONLY
VGA_CLR: CALL VGA_GETPAGE
	 LD BC,800
	 LD HL,$8000    ;DEL CHARS
         LD DE,$8400
VGAC_AGN: LD A,32
	 LD (HL),A
	 LD A,(VGABCOL)
	 SLA A
	 SLA A
	 SLA A
	 SLA A
	 LD (DE),A
	 INC HL
         INC DE
	 DEC BC
	 LD A,B
	 OR C
	 JR NZ,VGAC_AGN
	 CALL VGA_RMVPAGE
	 RET

;RETURNS COLOR INFO
;DESTROYS A,B
VGA_GETCOL: LD A,(VGAFCOL)  ;GET COLOR INFO
	 LD B,A
	 LD A,(VGABCOL)
         SLA A
	 SLA A
	 SLA A
	 SLA A
	 OR B		  ;BLEND COLOR 4 BITS FCOLOR AND 4 BITS BCOLOR
	 RET


;RETURNS THE VIDEO TEXT ADDRESS OF TX,TY
;DESTROYS BC,DE,HL
VGA_CALC_VIDAD: PUSH AF
         LD B,0
	 LD A,(VGATX_Y)
         LD C,A
	 LD HL,$8000
	 LD DE,40
VGCLC_AGN: LD A,B
	 OR C
	 JR Z,VGCLC_DOX         
         ADD HL,DE
	 DEC BC
         JR VGCLC_AGN
VGCLC_DOX: LD B,0
         LD A,(VGATX_X)
	 LD C,A
	 ADD HL,BC
	 POP AF
	 RET

;PRINTS A CHAR & COLOR TO CURRENT TX,TY
;DESTROYS BC,DE,A
VGA_PRCH: PUSH AF 
	 CALL VGA_GETPAGE         	 	                    
	 POP AF
	 PUSH HL 
	 CALL VGA_CALC_VIDAD
	 LD (HL),A	;PUT CHAR ON SCREEN
 	 LD DE,$400	
	 ADD HL,DE
	 CALL VGA_GETCOL 
	 LD (HL),A      ;PUT COLOR INFO ON SCREEN
         POP HL
         CALL VGA_RMVPAGE
	 RET
	
;HL THE MESSAGE
VGA_PRNT: CALL VGA_GETPAGE         	 	                    
VGAP_AGN: LD A,(HL)
	 CP 0
	 JR Z,VGAP_EX
	 CALL VGA_PRCH
         CALL VGA_TXFORW 
	 INC HL
	 JR VGAP_AGN 	 
VGAP_EX: CALL VGA_RMVPAGE
	 RET


VGA_TXFORW: PUSH AF
	 LD A,(VGATX_X)
	 INC A
	 CP 40
	 CALL Z,VGDOY	
	 LD (VGATX_X),A	 
	 POP AF
	 RET
VGDOY:   LD A,(VGATX_Y)
	 INC A
	 CP 20
	 CALL Z,DOSCRL
	 LD (VGATX_Y),A
         XOR A
	 RET

DOSCRL:	 RET ;TODO: SCROLL UP THE BUFFER



TMPG    DB 255
PGSEM	DB 0
VGAFCOL DB 0
VGABCOL DB 0
VGATX_X DB 0
VGATX_Y DB 0


MES1:	DEFM "HELLO WORLD!"
	DB 0

