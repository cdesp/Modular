;KEYCTR EQU $834E ; ON LAST.Z80
;THIS IS PS/2 KEYBOARD DEVICE
;THE KEYBOARD SIGNALS ARE PROBED BY THE CPU
		
		GLOBAL PS2ISK
		GLOBAL PS2KEY
		GLOBAL READCHAR
		
		
;--DATA BITS FOR USB KEYBOARD
		UKB_OUT_DAT EQU 2
		UKB_OUT_CLK EQU 1
		UKB_IN_DAT EQU 7						;CHANGE NEWBYTE ALSO IF CHANGE THIS
		UKB_IN_CLK EQU 6
		DEVKBI EQU DEVINP						; INPUT FROM THE KEYBOARD IS ROUTED TO BITS 7,6(DAT,CLK) OF THE INPUT DEVICE 74LS257 CHIP
		
;Sampling times
		SAMP EQU 70 							;FOR 10MHZ=30 20MHz=70 works
		
		
@KEYBCLKON:	LD B, UKB_OUT_CLK
		CALL FF_OFF
		RET
		
@KEYBCLKOFF:	LD B, UKB_OUT_CLK
		CALL FF_ON
		RET
		
@KEYBDATON:	LD B, UKB_OUT_DAT
		CALL FF_OFF
		RET
		
@KEYBDATOFF:	LD B, UKB_OUT_DAT
		CALL FF_ON
		RET
		
PS2ISK:		CALL KEYBCLKON 							;KEYBOARD ENABLED
		LD B, SAMP 							;CHECK SEVERAL TIMES 0.2 MS (30 ON 10mHZ)
CHAG:		IN A, (DEVKBI)
		LD D, A
		BIT UKB_IN_CLK, A						;CHECK BIT 6=CLOCK
		NOP								;NEEDED FOR 20MHZ?????WHY
		JR Z, KEYOK
		DJNZ CHAG
;JR PS2NTP
PS2NTP:		LD A, 1								;SET A TO 1 MEANS NO KEY AVAILABLE
		CALL KEYBCLKOFF
		RET
KEYOK:		XOR A								;SET A TO 0 MEANS WE HAVE A KEY
		RET
		
		
WAITFORHIGH:	LD B, SAMP 							;SHOULD HAVE A TIMEOUT ALSO
		OR A 								;CLEAR CARRY
WH1:		IN A, (DEVKBI)
		LD D, A
		BIT UKB_IN_CLK, A 						;CHECK BIT 6=CLOCK
		RET NZ
		DJNZ WH1
		SCF
		RET
		
WAITFORLOW1:	LD B, SAMP 							;SHOULD HAVE A TIMEOUT ALSO
		OR A 								;CLEAR CARRY
WL1:		IN A, (DEVKBI)
		LD D, A
		BIT UKB_IN_CLK, A 						;CHECK BIT 6=CLOCK
		RET Z
		DJNZ WL1
		SCF
		RET
		
WAITFORLOW:	CALL WAITFORLOW1
		RET C
		IN A, (DEVKBI) 							;SOME MORE TIMES TO BE SURE
		IN A, (DEVKBI)
		LD D, A
		RET
		
@NEWBYTE:	DI
		LD A, D								;BIT 7 HAS THE DATA
		BIT UKB_IN_DAT, A
		JR NZ, ERROR0							;ALWAYS START WITH 0
		LD B, 8
NXTBIT:		LD C, B								;SAVE B
		CALL WAITFORHIGH
		RET C
		CALL WAITFORLOW
		RET C
		SLA A								;BIT 7=DATA IS ON C FLAG
		RR E								;CARRY GOES TO BIT 7 OF E
		LD B, C 							;RESTORE B
		DJNZ NXTBIT
		CALL WAITFORHIGH
		RET C
		CALL WAITFORLOW
		RET C
;BIT 7 HAS THE PARITY
		CALL WAITFORHIGH
		RET C
		CALL WAITFORLOW
		RET C
		BIT UKB_IN_DAT, A
		JR Z, ERROR1							;ALWAYS ENDS WITH 1
		CALL WAITFORHIGH 						;WAIT FOR END OF TRANSMITION
		RET C
;XOR A  ;NO ERROR RESET CARRY FLAG NOT NEEDED ALREAD CLEARED
		LD A, E
		EI
		RET
ERROR0:		LD HL, MSER4
		CALL RS_TXT
		SCF								;FLAGS AN ERROR OCCURED
		EI
		RET
ERROR1:		PUSH DE
		LD HL, MSER5
		CALL RS_TXT
		SCF								;FLAGS AN ERROR OCCURED
		POP DE
		LD A, E								;MAYBE IGNORE THIS
		EI
		RET
MSER4:		DEFM "KB_ERR: START BIT."
		DB 10,13,0
MSER5:		DEFM "KB_ERR: STOP BIT."
		DB 10,13,0
		
PS2KEY:		LD BC, 20 ;400
PS2AGN:		DEC BC
		LD A, B
		OR C
		JR Z, PS2TIMEOUT
		PUSH BC
		CALL PS2ISK
		OR A
		POP BC
		JR NZ, PS2AGN							;NO KEY YET
READKEY:	CALL NEWBYTE							;D HAS THE LAST INPUT
		JR C, PS2TIMEOUT						;ERROR SO INVALIDATE A
		JR PS2EX
PS2TIMEOUT:	XOR A								;0 CODE IS INVALID
		EI
PS2EX:		PUSH AF			
		CALL KEYBCLKOFF
		EI
		LD B, 120 ;180 FOR 20MHZ ,80 FOR 10MHZ
		CALL DELAYMILI
		POP AF
		RET
		
;WAIT READ AND TRANSLATE
READCHAR:	CALL GTKEY
		RET Z
		CALL PS2LOK
		RET
		
		
@GTKEY:		CALL PS2KEY							;GET A KEY FROM PS2
		RET Z			
		CP $E1 								;BREAK KEY
		CALL Z, GTBRK
		CP $F0 								;240 KEY RELEASED
		CALL Z, GTREL
		CP $E0 								;224 EXTENDED KEYS
		CALL Z, GTEXT
		
		
		CP 18 								;LEFT SHIFT
		CALL Z, SHFTOG
		CP 89 								;RIGHT SHIFT
		CALL Z, SHFTOG
		CP 20 								;RIGHT CONTROL
		CALL Z, CTRTOG
		CP 17 								;LEFT ALT
		CALL Z, ALTTOG
		CP $58 								;CAPS LOCK
		CALL Z, CAPSTOG
;	CP 0
;	JR Z,GTKEY ;INVALID KEY (RELEASED,ETC)
		RET
		
GTBRK:		CALL PS2KEY							;$14 OR $F0
		CP $F0
		RET Z
		CALL PS2KEY							;$77
		RET
		
GTEXT:		CALL PS2KEY							; THIS IS THE EXTENDED KEY
		CP $6B 								;LEFT
		RET Z
		CP $72								;DOWN
		RET Z
		CP $74								;RIGHT
		RET Z
		CP $75								;UP
		RET Z
		CP $70								;INSERT
		RET Z
		CP $6C								;HOME
		RET Z
		CP $7D								;PG UP
		RET Z
		CP $7A								;PG DN
		RET Z
		CP $69								;END
		RET Z
		CP $71								;DEL
		RET Z
		CP $66 								;BACKSPACE
		RET Z
		CP $5A								;ENTER NUM
		RET Z
		CP $11								;RIGHT ALT
		RET Z
		CP $14								;LEFT ALT
		RET Z
		CP $4A 								;NUMLOCK /
		RET Z
		CP $F0
		JP NZ, EXGTEX							;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
		CALL PS2KEY							; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT
		
EXGTEX:		XOR A								;NOT VALID EXTENDED KEY
		RET
		
		
GTREL:		CALL PS2KEY							; THIS IS THE RELEASED KEY
		CP 18 								; LSHIFT RELEASED
		CALL Z, SHFRES							; RESET SHIFT
		CP 20 								; LCTRL RELEASED
		CALL Z, CTRRES							; RESET CONTROL
		CP 17 								; LALT RELEASED
		CALL Z, ALTRES							; RESET ALT
		CP 89 								; RSHIFT RELEASED
		CALL Z, SHFRES							; RESET SHIFT
		XOR A 								; NO KEY
		RET
		
SHFRES:		LD HL, KEYCTR							;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
		RES 6, (HL) 							; BIT 6 IS SHIFT $40=64
		RET
		
CTRRES:		LD HL, KEYCTR							;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
		RES 7, (HL)							; BIT 7 IS CTRL $80=128
		RET
		
ALTRES:		LD HL, KEYCTR							;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
		RES 5, (HL)							; BIT 5 IS SHIFT $20=32
		RET
		
SHFTOG:		LD HL, KEYCTR							;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
		LD A, $40							; MASK
		XOR (HL) 							; BIT 6 IS SHIFT $40=64
		LD (HL), A							; SAVE
		XOR A 								; NO KEY
		RET
		
CTRTOG:		LD HL, KEYCTR							;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
		LD A, $80							; MASK
		XOR (HL)							; BIT 7 IS CTRL $80=128
		LD (HL), A							; SAVE
		XOR A 								; NO KEY
		RET
		
ALTTOG:		LD HL, KEYCTR							;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
		LD A, $20
		XOR (HL)							; BIT 5 IS ALT $20=32
		LD (HL), A							; SAVE
		XOR A 								; NO KEY
		RET
		
CAPSTOG:	LD HL, KEYCTR							;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
		LD A, $10
		XOR (HL)							; BIT 4 IS CAPS $10=16
		LD (HL), A							; SAVE
		XOR A 								; NO KEY
		RET
		

		
@PS2LOK:	LD HL, PS2TAB1							;UNSHIFTED
		LD D,A								;SAVE KEY CODE
		CALL PLK1							;GET CHAR NO SHIFT NO CAPS
		LD B,A								;SAVE CHAR
		CP 'a'
		JR C,PS2CHKCAPS
PS2SGT:		CP 'z'+1		
		JR C, PS2CPSF;ITS A LETTER CAPS AND SHIFT MATTERS
		;WE DON'T HAVE A LETTER CHECK ONLY SHIFT
PS2CHKCAPS:	LD A, (KEYCTR)							; GET KEYBFLAGS ON A SHIFT		
		BIT 6, A
		LD A,B
		RET Z								;IF NO SHIFT RETURN TAB1 CHAR
		;SHIFTED NOT LETTER
		JR PS2SHIFT
;IT'S A LETTER COULD BE SHIFTED CAPS OR BOTH
PS2CPSF:	LD A, (KEYCTR)							; GET KEYBFLAGS ON A SHIFT
		LD C, A 							;CAPS ON C
		RR A
		RR A 								;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
		XOR C 								;XOR SHIFT WITH CAPS
		BIT 4, A 							;CHECK IF BIT 4 IS 0 = UNSHIFTED						
		JR NZ,PS2SHIFT
		;NOT NEEDED WE ALREADY GOT IT ON B=A
	;	LD HL, PS2TAB1							;UNSHIFTED
	;	CALL PLK1							;GET CHAR
		LD A,B				
		RET
PS2SHIFT:	LD A, D 							;RESTORE A KEYCODE
		LD HL, PS2TAB2							;SHIFTED
		CALL PLK1							;GET CHAR
		RET
PLK1:		LD B, 0
		LD C, A
		ADD HL, BC
		LD A, (HL)							;GET THE CHAR
		RET
		
		ESC EQU $1B
;SCAN CODES
PS2TAB1:	DB 0,0,0,165,0,0,0,0,0,0
		DB 168,166,0,0,'`',0,0,0,0,0
		DB 0,'q','1',0,0,0,'z','s','a','w'
		DB '2',0,0,'c','x','d','e','4','3',0
		DB 0,' ','v','f','t','r','5',0,0,'n' 				;40-49
		DB 'b','h','g','y','6',0,0,44,'m','j' 				;50-59
		DB 'u','7','8',0,0,',','k','i','o','0' 				;60-69
		DB '9',0,0,'.','/','l',59,'p','-',0      			;70-79
		DB 0,0,39,0,'[','=',0,0,0,0              			;80-89
		DB 13,']',0,'\',0,0,0,0,0,0              			;90-99
		DB 0,0,6,0,0,8,0,4,9,0                   			;100-109
		DB 0,0,1,7,10,0,3,11,ESC,0               			;110-119
		DB 0,0,'+','-','*','9',0,0,0,0           			;120-129
		DB 0,167,0,0,0,0,0,0,0,0 					;130-139
		DB 0,0,0,0,0,0,0,0,0,0                   			;140-149
		DB 0,0,0,0,0,0,0,0,0,0 						;150-159
		DB 0,0,0,0,0,0,0,0,0,0                   			;160-169
		
		
PS2TAB2:	DB 0,0,0,165,0,0,0,0,0,0
		DB 168,166,0,0,'~',0,0,0,0,0
		DB 0,'Q','!',0,0,0,'Z','S','A','W'
		DB '@',0,0,'C','X','D','E','$','#',0
		DB 0,' ','V','F','T','R','%',0,0,'N' 				;40-49
		DB 'B','H','G','Y','^',0,0,34,'M','J' 				;50-59 34=""
		DB 'U','&','*',0,0,'<','K','I','O',')' 				;60-69
		DB '(',0,0,'>','?','L',':','P','_',0     			;70-79
		DB 0,0,34,0,'{','+',0,0,0,0              			;80-89
		DB 13,'}',0,'|',0,0,0,0,0,0              			;90-99
		DB 0,0,6,0,0,8,0,4,9,0                   			;100-109
		DB 0,0,1,7,10,0,3,11,ESC,0               			;110-119
		DB 0,0,'+','-','*','9',0,0,0,0           			;120-129
		DB 0,167,0,0,0,0,0,0,0,0 					;130-139
		DB 0,0,0,0,0,0,0,0,0,0                   			;140-149
		DB 0,0,0,0,0,0,0,0,0,0 						;150-159
		DB 0,0,0,0,0,0,0,0,0,0                   			;160-169
