ORG $9000

DEVEPR  EQU $08 ;Y1 EPROM WR SIGNAL ON/OFF 1/0 BIT 0
DEVKBD  EQU $08 ;Y1 USB KEYB ON/OFF ON/OFF 2/0 BIT 1
DEVKBI  EQU $18 ;00;Y0 INPUT FROM DEVICES: DEV1=USB KEYB ON BITS 7=DATA & 6=CLOCK,DEV2=XXX
            ;TEMP

INCLUDE MYOS_1.SYM


AGN:    LD HL,MS3
    CALL RS_TXT
 CALL GET_CHAR	;TAKE A CHAR FROM RS232 OR PS2 KEYB
CP 'O'
CALL Z,S1ON
CP 'P'
CALL Z,S1OFF
CP 'M'
JP Z,MENU
CP 'K'
CALL Z,S2ON
CP 'L'
CALL Z,S2OFF
CP 'T'
CALL Z,KEYB_TEST
CP 'R'
CALL Z,KB_TEST2
CP 'E'
CALL Z,KB_TEST3
CP 'Q'
CALL Z,TESTFFS
JR AGN

MS3:DEFM "O,P,M,L: FF CTRL, T:TEST KEYBOARD"
    DB 10,13,0

FFSTAT DB 0

MYDELAY: LD BC,2000
MYDLAGN: PUSH BC
         CALL DELAY  ;0.1MS ON 8 MHZ
	 POP BC
	 DEC BC
         LD A,B
         OR C
         JR NZ,MYDLAGN
         RET


TESTFFS: LD B,0
         CALL SBON
         LD BC,$FFFF
         CALL MYDELAY
         LD B,1
         CALL SBON
         LD BC,$FFFF
         CALL MYDELAY

         LD B,0
         CALL SBOFF
         LD BC,$FFFF
         CALL MYDELAY

         LD B,1
         CALL SBOFF
         LD BC,$FFFF
         CALL MYDELAY
       


	RET

;B HAS THE BIT TO SET OFF =0 ON THE FLIP FLOPS
SBOFF: INC B   ; DO 0-7 TO 1-8
       XOR A
       SCF
SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE
       DJNZ SBAGN
       CPL	    ;INVERSE BITS ON A
       LD B,A
       LD HL,FFSTAT
       LD A,(HL)
       AND B        ;ZERO THE BIT
       LD (HL),A
       OUT (DEVEPR),A
       RET

;B HAS THE BIT TO SET OFF =0 ON THE FLIP FLOPS
SBON: INC B   ; DO 0-7 TO 1-8
       XOR A
       SCF
SBAGN: RLA         ; MOVE IT TO THE RIGHT PLACE
       DJNZ SBAGN
       LD B,A
       LD HL,FFSTAT
       LD A,(HL)
       OR B        ;SET THE BIT
       LD (HL),A
       OUT (DEVEPR),A
       RET
               
       

S1OFF: LD HL,FFSTAT
RES 0,(HL)  
LD A,(HL)       
OUT (DEVEPR),A
RET

S1ON: LD HL,FFSTAT
SET 0,(HL)  
LD A,(HL)  
OUT (DEVEPR),A
RET

S2OFF: LD HL,FFSTAT
RES 1,(HL)  
LD A,(HL)  
OUT (DEVKBD),A
RET

S2ON: LD HL,FFSTAT
SET 1,(HL)  
LD A,(HL)  
OUT (DEVKBD),A
RET

MS1 DEFM "KEYBOARD TESTING. PRESS A KEY"
    DB 10,13,0

KEYB_TEST:;SHOULD BE ON AN INTERRUPT
    LD HL,MS1
    CALL RS_TXT
    LD HL,MS1
    CALL LCD_MSG
LP1:CALL S2OFF ;KEYBOARD ENABLED
    IN A,(DEVKBI)
    LD D,A
    BIT 6,A ;CHECK BIT 6=CLOCK
    JR NZ,NOBYTE
    ;NEWBYTE ;START RECEIVING
    CALL NEWBYTE
    ;ON A WE HAVE THE BYTE
    ;PRINT IT ON SERIAL
   ; PUSH AF
   ; LD HL,R2 
   ; CALL LCD_MSG
   ; POP AF
    CALL SOUTAS    
    JR KEYB_TEST
NOBYTE:;    CALL S2ON ;KEYBOARD DISABLED
    ;DO STAFF
    JR LP1


KB_TEST2: 
    LD HL,KBMES2 
    CALL LCD_MSG
    LD B,6
KNX1:PUSH BC
    CALL PS2KEY
    CALL SOUTAS
    POP BC
    DJNZ KNX1
    RET

KBMES1:DEFM "PRESS A KEY"
    DB 10,13,0
KBMES2:DEFM "PRESS 6 KEYS"
    DB 10,13,0


KB_TEST3:    LD HL,KBMES2
    CALL LCD_MSG
    LD B,6
KNX:PUSH BC
INVKEY:  CALL GTKEY ;0 IS AN INVALID KEY
    OR A
    JR Z,INVKEY
    CALL PS2LOK
    CALL RS_TX
    POP BC
    DJNZ KNX
    RET
    
MS2: DEFM "KEY PRESSED. RECEIVING"
    DB 10,13,0
MS5: DEFM "KEY RECEIVED OK"
    DB 10,13,0


;---NEW USB KEYBOARD -------

KEYCTR EQU $834E ;TEMP

WAITFORHIGH: ;SHOULD HAVE A TIMEOUT ALSO
WH1:IN A,(DEVKBI)
    LD D,A
    BIT 6,A ;CHECK BIT 6=CLOCK
    RET NZ
    JR WH1

WAITFORLOW: ;SHOULD HAVE A TIMEOUT ALSO
WL1:IN A,(DEVKBI)
    LD D,A
    BIT 6,A ;CHECK BIT 6=CLOCK
    RET Z
    JR WL1




NEWBYTE:
    LD A,D ;BIT 7 HAS THE DATA
    BIT 7,A
    JR NZ,ERROR0 ;ALWAYS START WITH 0
    LD B,8
NXTBIT: CALL WAITFORHIGH 
    CALL WAITFORLOW
    SLA A ;BIT 7=DATA IS ON C FLAG
    RR E ;CARRY GOES TO BIT 0 OF E    
    DJNZ NXTBIT
    CALL WAITFORHIGH 
    CALL WAITFORLOW     
    ;BIT 7 HAS THE PARITY
    CALL WAITFORHIGH 
    CALL WAITFORLOW 
    BIT 7,A
    JR Z,ERROR1 ;ALWAYS ENDS WITH 1  
    CALL WAITFORHIGH    ;WAIT FOR END OF TRANSMITION
    XOR A  ;NO ERROR RESET CARRY FLAG
    LD A,E
    RET
ERROR0:;TODO:PRINT AN ERROR MESSAGE
    LD HL,MSER4
    CALL RS_TXT
    SCF ;FLAGS AN ERROR OCCURED
    RET
ERROR1:;TODO:PRINT AN ERROR MESSAGE
    LD HL,MSER5
    CALL RS_TXT
    SCF ;FLAGS AN ERROR OCCURED
    RET
MSER4 DEFM "ERROR START BIT NOT AS EXPECTED."
    DB 10,13,0
MSER5 DEFM "ERROR STOP BIT NOT AS EXPECTED."
    DB 10,13,0

PS2KEY: CALL PS2ISK
        OR A
        JR NZ, PS2KEY ;NO KEY YET
READKEY:LD D,A
        CALL NEWBYTE 
        PUSH AF       
        CALL S2ON
        POP AF
        RET

READCHAR:CALL PS2KEY
       CALL PS2LOK
       RET


PS2ISK:CALL S2OFF ;KEYBOARD ENABLED
    LD B,10 ;CHECK 10 TIMES
CHAG: IN A,(DEVKBI)
    LD D,A
    BIT 6,A ;CHECK BIT 6=CLOCK
    JR Z,KEYOK
    DJNZ CHAG
    ;JR PS2NTP
PS2NTP: LD A,1 ;SET A TO 1 MEANS NO KEY AVAILABLE
   
    CALL S2ON
    RET
KEYOK: XOR A	;SET A TO 0 MEANS WE HAVE A KEY
    RET

GTKEY:	CALL PS2KEY	;GET A KEY FROM PS2
	CP $E1		;BREAK KEY
	CALL Z,GTBRK
	CP $F0		;240 KEY RELEASED
	CALL Z,GTREL
	CP $E0		;224 EXTENDED KEYS
	CALL Z,GTEXT
 

	CP 18		;LEFT SHIFT
	CALL Z,SHFTOG
	CP 89		;RIGHT SHIFT
	CALL Z,SHFTOG
	CP 20		;RIGHT CONTROL
	CALL Z,CTRTOG	
	CP 17		;LEFT ALT
	CALL Z,ALTTOG
	RET

GTBRK:	CALL PS2KEY	;$14 OR $F0
	CP $F0
	RET Z
	CALL PS2KEY	;$77
	RET

GTEXT:	CALL PS2KEY	; THIS IS THE EXTENDED KEY
	CP $6B  ;LEFT
	RET Z
	CP $72	;DOWN
	RET Z
	CP $74	;RIGHT
	RET Z
	CP $75	;UP
	RET Z
	CP $70	;INSERT
	RET Z
	CP $6C	;HOME
	RET Z
	CP $7D	;PG UP
	RET Z
	CP $7A	;PG DN
	RET Z
	CP $69	;END
	RET Z
	CP $71	;DEL
	RET Z
	CP $5A	;ENTER NUM
	RET Z
	CP $11	;RIGHT ALT
	RET Z
	CP $14	;LEFT ALT
	RET Z
	CP $F0
	JP NZ, 	EXGTEX	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
	CALL PS2KEY	; THIS IS THE EXTENDED RELEASED KEY JUST IGNORE IT

EXGTEX	XOR A	;NOT VALID EXTENDED KEY
	RET


GTREL:	CALL PS2KEY	; THIS IS THE RELEASED KEY
	CP 18		; LSHIFT RELEASED
	CALL Z,SHFRES	; RESET SHIFT
	CP 20		; LCTRL RELEASED
	CALL Z,CTRRES	; RESET CONTROL
	CP 17		; LALT RELEASED
	CALL Z,ALTRES	; RESET ALT
	CP 89		; RSHIFT RELEASED
	CALL Z,SHFRES	; RESET SHIFT
	XOR A		; NO KEY
	RET

SHFRES:	LD HL,KEYCTR	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH 
	RES 6,(HL)  	; BIT 6 IS SHIFT $40=64
	RET

CTRRES:	LD HL,KEYCTR	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
	RES 7,(HL)	; BIT 7 IS CTRL $80=128
	RET

ALTRES:	LD HL,KEYCTR	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
	RES 5,(HL)	; BIT 5 IS SHIFT $20=32 
	RET

SHFTOG:	LD HL,KEYCTR	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH 
	LD A,$40	; MASK
	XOR (HL)  	; BIT 6 IS SHIFT $40=64
	LD (HL),A	; SAVE
	XOR A		; NO KEY
	RET

CTRTOG:	LD HL,KEYCTR	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
	LD A,$80	; MASK
	XOR (HL)	; BIT 7 IS CTRL $80=128
	LD (HL),A	; SAVE
	XOR A		; NO KEY
	RET

ALTTOG:	LD HL,KEYCTR	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
	LD A,$20
	XOR (HL)	; BIT 5 IS ALT $20=32 
	LD (HL),A	; SAVE
	XOR A		; NO KEY
	RET
			
PS2LOK	LD HL,PS2TAB
	LD B,0
	LD C,A
	ADD HL,BC
	LD A,(HL)
	LD HL,KEYCTR
	LD B,(HL)
	BIT 6,B			;BIT 6 IS SHIFT
	RET Z
	ADD A,32
	RET

PS2TAB	DB 0,0,0,0,0,0,0,0,0,0
	DB 0,0,0,0,'`',0,0,0,0,0
	DB 0,'Q','1',0,0,0,'Z','S','A','W'
	DB '2',0,0,'C','X','D','E','4','3',0
	DB 0,' ','V','F','T','R','5',0,0,'N'
	DB 'B','H','G','Y','6',0,0,0,'M','J'
	DB 'U','7','8',0,0,',','K','I','O','0'
	DB '9',0,0,'.','/','L',59,'P','-',0
	DB 0,0,39,0,'[','=',0,0,0,0
	DB 13,']',0,0,0,0,0,0,0,0
	DB 0,0,0,0,0,0,0,0,0,0
	DB 0,0,0,0,0,0,0,0,0,0
	DB 0,0,'3',0,'*','9',0,0,0,0


