	NAME STORAGE_NEW_USB_SDCARD

;STORAGE COMMANDS
		GLOBAL STRG_INIT
		GLOBAL STRG_OPENCRD
		GLOBAL STRG_OPNFILE
		GLOBAL STRG_CLSFILE
		GLOBAL STRG_DIRLIST
		GLOBAL STRG_DIRCHG
		GLOBAL STRG_BLKREAD
		GLOBAL STRG_BLKWRITE
		GLOBAL STRG_TPFILE
		GLOBAL STRG_GETPOS
		GLOBAL STRG_SETPOS
		GLOBAL STRG_GETSIZE
		GLOBAL STRG_GETEOF
		GLOBAL STRG_PRDRVINFO




;INITIALIZE THE CH376S
;RETURNS THE VERSION ON A IF ALL OK
;A=0 IF ERROR OR DEVICE NOT PRESENT
;ALSO CHECK THE ZF NZ=ERROR
STRG_INIT:	CALL CH376_INIT
		JR Z,INIOK
		LD A,0
		RET
INIOK:		CALL CH376_VERSION
		CP A		;SET ZF
		RET

;MOUNTS THE FLASH DISK
;IN A=6 USB STICK 3-SDCARD
;NZ IF ERROR
STRG_OPENCRD:   CALL CH376_MOUNT
		RET 

;PRINTS TO SCREEN USB DRIVE INFO
;VOLUME NAME , TOTAL SECTORS, FREE SECTORS, FILESYSTEM TYPE
		;VOLUME NAME
STRG_PRDRVINFO:	LD A,CMD_RDUSB_DATA0
		CALL CH376_COMMD
		CALL CH376_GETDATA
		PUSH AF
		SUB 8		
		LD B,A
		POP AF			
		LD HL,USBBUF+8		;SKIP 8 BYTES
PDI_NXT:	LD A,(HL)
		PUSH HL
		PUSH BC
		CALL OS_PRINTCHAR
		POP BC
		POP HL
		INC HL
		DJNZ PDI_NXT		
		CALL PRINTNEWLINE
		; SECTORS FREE AND USED
		LD A,CMD_DISK_QUERY  	
		CALL CH376_COMMD
		CALL CH376_WTCMDEND
		JP NZ,MENU
		LD A,CMD_RDUSB_DATA0
		CALL CH376_COMMD		
		CALL CH376_GETDATA
		
		LD IX,USBBUF	
		PUSH IX			
		LD D,(IX+3)
		LD E,(IX+2)
		LD H,(IX+1)
		LD L,(IX+0)
		CALL B2D32				;DE:HL RES ON B2DBUF
		LD HL,B2DBUF
		CALL SKIPSPC
		CALL OS_PRINTTEXT
		CALL OS_PRINTMSG
		DEFM " SECTORS"
		DB 10,13 0
		POP IX

		PUSH IX					
		LD D,(IX+7)
		LD E,(IX+6)
		LD H,(IX+5)
		LD L,(IX+4)		
		CALL B2D32		;DE:HL RES ON B2DBUF
		LD HL,B2DBUF
		CALL SKIPSPC
		CALL OS_PRINTTEXT
		CALL OS_PRINTMSG
		DEFM " SECTORS FREE   "
		DB 10,13,0			
		POP IX
		;FILESYSTEM TYPE		
FILESYSTEM:	LD A,(IX+8)		;1-FAT12,2-FAT16,3-FAT32
		DEC A
		JR Z,PDI_NXT0
		DEC A
		JR Z,PDI_NXT1
		DEC A
		JR Z,PDI_NXT2
		JR PDI_NXT3
		;1-FAT12		
PDI_NXT0:	CALL OS_PRINTMSG
		DEFM "FS IS FAT-12"
		DB 10,13,0
		RET
PDI_NXT1:	CALL OS_PRINTMSG
		DEFM "FS IS FAT-16"
		DB 10,13,0
		RET
PDI_NXT2:	CALL OS_PRINTMSG
		DEFM "FS IS FAT-32"
		DB 10,13,0
		RET
PDI_NXT3:	CALL OS_PRINTMSG
		DEFM "UNKNOWN FS"
		DB 10,13,0
		LD A,(IX+8)		;TO BE PRINTED MAYBE
		RET


STRG_OPNFILE:	LD A, CMD_SETFILENAME
    		CALL CH376_COMMD
		LD HL, STRGBUFF
    		CALL CH376_WRSTRING
		JR Z,OF_WSOK
		CALL OS_PRINTMSG
		DEFM "ERROR SETTING FILENAME"
		DB 10,13,0		
		RET
OF_WSOK:	CALL OS_PRINTMSG
		DEFM "OPENING..."
		DB 10,13,0		
		LD A, CMD_FILE_OPEN
    		CALL CH376_COMMD
		CALL CH376_WTCMDEND
		RET

STRG_CLSFILE:	LD A, CMD_FILE_CLOSE
    		CALL CH376_COMMD
    		LD A, 1                             ; 1 = update file size if necessary
    		CALL CH376_DATAWR
    		CALL CH376_WTCMDEND
    		RET

;BC THE REQUESTED BYTES
;DE THE DESTINATION BUFFER
;RET HL,BC= BYTES RECEIVED
;ZF OK , NZ ERROR
STRG_BLKREAD:	PUSH DE
		LD A, CMD_BYTE_READ
    		CALL CH376_COMMD
    		LD A, C                           ; BYTES REQUEST ON BC
    		CALL CH376_DATAWR
    		LD A, B
    		CALL CH376_DATAWR				
		CALL OS_PRINTMSG
		DEFM "BLOCK READING"
		DB 10,13,0
		POP DE
		LD HL,0				  ;BYTE RECEIVE COUNTER
STBR_DOREST:	PUSH HL
		PUSH DE
		CALL CH376_WTCMDEND
		POP DE
		POP HL
		JR Z, FR_DONE	  ;Z=NO MORE OR CANNOT READ
		CP USB_INT_DISK_READ                    
    		JR NZ, FR_ERROR
		;OK READ THE BYTES
		LD A,CMD_RDUSB_DATA0
		CALL CH376_COMMD	
		CALL CH376_DATARD		;A= BYTES TO READ TO BUFFER
		LD B,A
		;PUSH HL
		;PUSH DE
		;PUSH BC
		;PUSH AF
		;CALL OS_PRINTMSG
		;DEFM "READING "
		;DB 0	
		;POP AF	
		;CALL PRINTNUM
		;POP BC
		;POP DE
		;POP HL
STBR_NXT1:	CALL CH376_DATARD		;READ THE BYTES TO BUFFER
		LD (DE),A
		INC DE
		INC HL				;TOTAL BYTES READ COUNTER
		DJNZ STBR_NXT1		
		LD A, CMD_BYTE_RD_GO	
		CALL CH376_COMMD	
		JR STBR_DOREST
FR_DONE:	PUSH HL
		CALL OS_PRINTMSG
		DEFM "READING DONE!!! "
		DB 0	
		POP HL
		LD B,H
		LD C,L
		OR A
		RET
FR_ERROR:	PUSH AF
		CALL OS_PRINTMSG
		DEFM "ERROR READING BLOCK!!! "
		DB 0	
		POP AF
		LD B,2
		DEC B
		RET		

STRG_BLKWRITE:  RET


