		ORG $4000
		
		
		INCLUDE \..\MYOS_2_0000.SYM

		LOGRAPH EQU 00B
		
		
		SPRSPD EQU 2
		
		DI
		LD A, 4								;PAGE 4
		LD B, 2 							;4000h
		CALL PUTPGINBANK
		JP SWITCHBANK
SWITCHBANK:	LD A, 8								;PAGE 8
		LD B, 3 							;6000h
		CALL PUTPGINBANK
		LD A, 9								;PAGE 9
		LD B, 4 							;8000h
		CALL PUTPGINBANK
		LD A, 10							;PAGE 10
		LD B, 5 							;A000h
		CALL PUTPGINBANK
		LD A, 11							;PAGE 11
		LD B, 6 							;C000h
		CALL PUTPGINBANK		

		LD A, 10
		LD (CURSORX), A
		LD A, 20
		LD (CURSORY), A
		LD HL, MYMSG1
		CALL LCD_MSG
		
AGN:		
		CALL GET_CHAR 							;TAKE A CHAR FROM RS232 OR PS2 KEYB
		CP 'S'
		CALL Z, MAINSETUP
		CP 'P'
		CALL Z, PRINTSPR
		CP 'D'
		CALL Z, DOMOVE
		CP 'R'
		CALL Z, MOVESPR
		CP 'G'
		CALL Z, STARTGAME
		CP 'C'
		CALL Z, CLEARSCREEN
		
		CP 'M'
		JP Z, MENU
		JR AGN
		
MYMSG1:		DEFM "S:CREATE P:PRINT D:MOVE R:REFRESH | M=MENU "
		DB 0
		
		
CLEARSCREEN:				; SET FCOLOR AND BCOLOR DEFAULT VALUES
		LD C, LOGRAPH 							;LOW RES graph SCREEN
		CALL VGA_SETCONF
		
		LD A, 10
		LD (CURSORX), A
		LD A, 20
		LD (CURSORY), A
		LD HL, MYMSG1
		CALL LCD_MSG
		LD A, 10
		LD (CURSORX), A
		LD A, 10
		LD (CURSORY), A
		LD HL, MYMSG1
		CALL LCD_MSG
		XOR A
		RET
		

WAITFORTE:	LD HL, INT2TE	;TIMECTR
		XOR A
		LD (HL), A
		EI
; WFTEAGN1:	LD A, (TIMECTR)
; 		BIT 2, A
; 		JR Z, WFTEAGN1 	
; WFTEAGN2:	LD A, (TIMECTR)
; 		BIT 2, A
; 		JR NZ, WFTEAGN2
WFTEAGN:	LD A, (HL)
		CP 1
		JR NZ, WFTEAGN

		DI
		RET
		
		
LASTKEY:	DB 0								;LAST KEY PRESSED

STARTGAME:	CALL MAINSETUP
		CALL PRINTENEMY
		CALL PRINTSPR
GAMELOOP:	;LD HL, SHPNT
		;LD A, (HL)
		;CP 1
		;JR NZ,CHKKEY
		CALL MOVENEXTSPRIT				
CHKKEY:		;LD A,0
		;CALL SPRNXTPIC	; CHANGE PIC? AND GET STRUCT
		;JR Z,NOPRN
		;LD A,1
		;LD (SHPNT),A	;PRINT NEXT TIME
NOPRN:		CALL GET_CHARNW
		;CALL RS_KEYRD							;CHAR IN RS232?
		;JR Z, GAMELOOP
		;CALL RS_RX
		CP 0
		JR NZ, NEWKEY 
		LD A,(LASTKEY)							;GET OLD KEY
NEWKEY:		LD (LASTKEY),A
		CP 'W'
		JR NZ, NXTBUT1
		CALL SPRMOVEUP
		JR GAMELOOP
NXTBUT1:	CP 'S'
		JR NZ, NXTBUT2
		CALL SPRMOVEDN
		JR GAMELOOP
NXTBUT2:	CP 'A'
		JR NZ, NXTBUT3
		CALL SPRMOVELF
		JR GAMELOOP
NXTBUT3:	CP 'D'
		JR NZ, NXTBUT4
		CALL SPRMOVERG
		JR GAMELOOP
NXTBUT4:	JR GAMELOOP
		
SPRMOVEUP:	LD A, 0
		CALL getSpriteStruct
		LD H, (IX + 2)
		LD L, (IX + 3)
		LD BC, 2
		XOR A
		SBC HL, BC
		RET C 								; NO MOVE
		ADD HL, BC
		LD BC, SPRSPD
		SBC HL, BC
		LD (IX + 6), H
		LD (IX + 7), L
		LD HL, SHPNT
		LD A, 1
		LD (HL), A
		RET
		
SPRMOVEDN:	LD A, 0
		CALL getSpriteStruct
		XOR A
		LD HL, 200
		LD BC, SPH+12
		SBC HL,BC
		LD B,H
		LD C,L		
		LD H, (IX + 2)
		LD L, (IX + 3)	
		SBC HL,BC	
		RET NC 								; NO MOVE
		ADD HL, BC
		LD BC, SPRSPD
		ADD HL, BC
		LD (IX + 6), H
		LD (IX + 7), L
		LD HL, SHPNT
		LD A, 1
		LD (HL), A
		RET
		
SPRMOVELF:	LD A, 0
		CALL getSpriteStruct
		LD H, (IX)
		LD L, (IX + 1)
		LD BC,2
		XOR A
		SBC HL, BC
		RET C 								; NO MOVE
		ADD HL, BC
		LD BC, SPRSPD
		SBC HL, BC
		LD (IX + 4), H
		LD (IX + 5), L
		LD HL, SHPNT
		LD A, 1
		LD (HL), A
		RET
		
SPRMOVERG:	LD A, 0
		CALL getSpriteStruct
		LD HL, 160
		LD BC, (SPW/2)+2
		XOR A
		SBC HL,BC
		LD B,H
		LD C,L								;160-SPW-2
		LD H, (IX)							;CURRENT X POS	
		LD L, (IX + 1)
		SBC HL, BC
		RET NC 								; NO MOVE
		ADD HL, BC
		LD BC, SPRSPD
		ADD HL, BC
		LD (IX + 4), H
		LD (IX + 5), L
		LD HL, SHPNT							;PRINT TO SCREEN SIGNAL SET
		LD A, 1
		LD (HL), A
		RET

PRINTENEMY:	LD A, 1
		CALL PRINTSPR
		RET

;A = SPRITE NO TO PRINT
PRINTSPR:	PUSH AF
		CALL getScreenBG
		OUT ($38), A	
		POP AF
		CALL SPRBLDTOSCR						;PUT SPRITE BLENDED TO SCREEN
		EI
		RET
		
MOVESPR:	PUSH AF
		CALL WAITFORTE 							;WAITFOR TEARING EFFECT
		OUT ($38), A							;Y7
		POP AF
		PUSH AF
		CALL setScreenBG 						;erase sprite
		OUT ($38), A			
		POP AF
		PUSH AF
		CALL getSpriteStruct
		LD A, (IX + 4)							;NEWX
		LD (IX), A
		LD A, (IX + 5)
		LD (IX + 1), A 							;POSX=NEWPOSX
		LD A, (IX + 6)							;NEWY
		LD (IX + 2), A
		LD A, (IX + 7)
		LD (IX + 3), A 							;POSY=NEWPOSY
		POP AF
		CALL PRINTSPR
		OUT ($38), A
		LD HL, SHPNT							;PRINT TO SCREEN SIGNAL RESET
		XOR A
		LD (HL), A
		RET

;A SPRITE NO
;C IS SET IF SPRITE HAS MOVED
SPRITEMOVED:	CALL getSpriteStruct	
		LD H, (IX)
		LD L, (IX+1)
		LD D, (IX+4)
		LD E, (IX+5)
		OR A
		SBC HL,DE
		LD A,H
		OR L
		JR NZ,SPRMOVED
		LD H, (IX+2)
		LD L, (IX+3)
		LD D, (IX+6)
		LD E, (IX+7)
		OR A
		SBC HL,DE
		LD A,H
		OR L
		JR NZ,SPRMOVED
		XOR A
		RET
SPRMOVED:	SCF	
		RET
CURSPRIT	DB 0		
;MOVES AND PRINTS A SPRITE EACH TIME IT IS CALLED
MOVENEXTSPRIT:	LD A,(CURSPRIT)			
		CALL SPRNXTPIC
		JR NZ, DOTHEMOVE		;NZ IF PIC CHANGED
		LD A,(CURSPRIT)
		CALL SPRITEMOVED
		JR NC,MNSNEXT
		;NO MOVE  NO PRINT		
DOTHEMOVE:	LD A,(CURSPRIT)
		CALL MOVESPR	
		;SET NEXT
MNSNEXT:	LD A,(CURSPRIT)
		INC A
		LD HL,NOSPRITES
		CP (HL)		;1 BASED
		JR NZ,MNSEXIT
		XOR A
MNSEXIT:	LD (CURSPRIT),A
		RET
		


DOMOVE:		LD A, 0
		CALL getSpriteStruct
		LD H, (IX)
		LD L, (IX + 1)
		LD BC, 600
		XOR A
		SBC HL, BC
		JR NC, NOMOVE
		ADD HL, BC
		INC HL
		LD (IX + 4), H
		LD (IX + 5), L
		LD HL, SHPNT
		LD A, 1
		LD (HL), A
NOMOVE:		RET
		
		
		
MAINSETUP:	CALL CLEARSCREEN
		CALL createSprite		
		JP Z, GENERROR
		CALL getSpriteStruct
		LD HL, 9 							; POSX
		LD (IX), H
		LD (IX + 1), L
		LD (IX + 4), H 							;NEWPOS
		LD (IX + 5), L
		LD HL, 110 							;POSY
		LD (IX + 2), H
		LD (IX + 3), L
		LD (IX + 6), H 							;NEWPOS
		LD (IX + 7), L
		LD H, SPW 							;WIDTH
		LD (IX + 8), H
		LD H, SPH 							;HEIGHT
		LD (IX + 9), H
		LD H, 1 							;CURPIC (NO OF PICS-1 TO WRAP AT ONCE)
		LD (IX + 10), H
		LD H, 2 							;NO OF PICS
		LD (IX + 11), H
		LD HL, PIRAV 							;GRADDR
		LD (IX + 12), H
		LD (IX + 13), L
		LD HL, PIRAVSCR 						;scraddr
		LD (IX + 14), H
		LD (IX + 15), L
		CALL getScreenBG

		CALL createSprite		
		JP Z, GENERROR
		CALL getSpriteStruct
		LD HL, 70 							; POSX
		LD (IX), H
		LD (IX + 1), L
		LD (IX + 4), H 							;NEWPOS
		LD (IX + 5), L
		LD HL, 16 							;POSY
		LD (IX + 2), H
		LD (IX + 3), L
		LD (IX + 6), H 							;NEWPOS
		LD (IX + 7), L
		LD H, ENW 							;WIDTH
		LD (IX + 8), H
		LD H, ENH 							;HEIGHT
		LD (IX + 9), H
		LD H, 0 							;CURPIC (NO OF PICS-1 TO WRAP AT ONCE)
		LD (IX + 10), H
		LD H, 1 							;NO OF PICS
		LD (IX + 11), H
		LD HL, ENEMY 							;GRADDR
		LD (IX + 12), H
		LD (IX + 13), L
		LD HL, ENEMYSCR 						;scraddr
		LD (IX + 14), H
		LD (IX + 15), L		
		CALL getScreenBG

		XOR A
		RET
		

		

		
GENERROR:									;TODO:PRINT ERROR
		RET

	

		SHPNT DB 0
		INCLUDE SPRITE.Z80		
		SPW EQU 12
		SPH EQU 12
		;INCLUBIN GALAGA_20.BIN
		PIRAVSCR DS SPW * SPH		;SPACE TO SAVE THE SCREEN IMAGE
		PIRAV EQU $			;ALL IMAGES OF PIRAV AFTER THIS
		INCLUBIN pirav12.bin		
		INCLUBIN pirav12a.bin
		
		ENW EQU 16
		ENH EQU 16
		ENEMYSCR DS ENW * ENH 
		ENEMY EQU $
		INCLUBIN enemy16.bin		
