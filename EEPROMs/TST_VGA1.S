ORG $8000

INCLUDE MYOS_2_0000_HARD.SYM

VGA_BLACK   EQU 0
VGA_MAROON  EQU 1
VGA_GREEN   EQU 2
VGA_OLIVE   EQU 3 
VGA_NAVY    EQU 4
VGA_PURPLE  EQU 5
VGA_TEAL    EQU 6
VGA_SILVER  EQU 7
VGA_GRAY    EQU 8
VGA_RED     EQU 9
VGA_LIME    EQU 10
VGA_YELLOW  EQU 11 
VGA_BLUE    EQU 12
VGA_FUCHSIA EQU 13
VGA_AQUA    EQU 14
VGA_WHITE   EQU 15

VGAK equ 2

	CALL CLS

	CALL SHOWIMAGE
	JP 4
	;CALL COL0
	;JP 4


	LD A,VGA_PURPLE  
	LD HL,VGAK
	CALL DRAWVLINE


	LD A,VGA_WHITE  
	LD HL,VGAK+4
	CALL DRAWVLINE

	LD A,VGA_RED   
	LD HL,VGAK+4*2 
	CALL DRAWVLINE

	LD A,VGA_RED   
	LD HL,VGAK+4*3
	CALL DRAWVLINE

	LD A,VGA_GREEN 
	LD HL,VGAK+4*4
	CALL DRAWVLINE

	LD A,VGA_WHITE    
	LD HL,VGAK+4*5
	CALL DRAWVLINE

	LD A,VGA_WHITE 
	LD HL,VGAK+4*6
	CALL DRAWVLINE

	LD A,VGA_BLUE  
	LD HL,VGAK+4*7
	CALL DRAWVLINE

	LD A,VGA_WHITE  
	LD HL,65
	CALL DRAWVLINE

	LD A,VGA_RED  
	LD HL,83
	CALL DRAWVLINE

	LD A,VGA_WHITE  
	LD HL,101
	CALL DRAWVLINE

	LD A,VGA_GREEN
	LD HL,119
	CALL DRAWVLINE



	JP 4

;A = COLOR
;HL=COLUMN
DRAWVLINE: ;LD BC,200 ;200 PIXELS VERTICAL
	   LD DE,0 ;START ROW
           LD B,A
DVLNXT:	   PUSH BC
	   PUSH HL
           PUSH DE
           LD A,B
	   CALL PLOTPXL32
	   POP DE
	   POP HL
           POP BC
           INC E
           LD A,E
           CP 200	   
	   RET Z
           JR DVLNXT

COLOR4:
;GET PAGE 8 AT $A000
	CALL PG8	
;GET PAGE 9 AT $C000
	CALL PG9
	LD DE,$A000
	LD HL,50  ;50 ROWS
	LD BC,160 ;160 BYTES =320 PIXELS
	LD A,$44  ;RED - RED
	CALL FILLBTS
	LD DE,$C000
	LD HL,50  ;50 ROWS
	LD BC,160 ;160 BYTES =320 PIXELS
	LD A,$22  ;RED - RED
	CALL FILLBTS
	CALL PG10
	CALL PG11
	LD DE,$A000
	LD HL,50  ;50 ROWS
	LD BC,160 ;160 BYTES =320 PIXELS
	LD A,$11  ;RED - RED
	CALL FILLBTS
	LD DE,$C000
	LD HL,50  ;50 ROWS
	LD BC,160 ;160 BYTES =320 PIXELS
	LD A,$70  ;RED - RED
	CALL FILLBTS
	RET 	


COL0:   LD HL,159	 ;COLUMN
	LD A,$12 ;COLOR
	CALL PAINTCOL
RET
	LD HL,1 ;COLUMN
	LD A,$02 ;COLOR
	CALL PAINTCOL
	
	LD HL,2 ;COLUMN
	LD A,$11 ;COLOR
	CALL PAINTCOL
	RET
	LD HL,3	 ;COLUMN
	LD A,$20 ;COLOR
	CALL PAINTCOL

	LD HL,20	 ;COLUMN
	LD A,$10 ;COLOR
	CALL PAINTCOL
	LD HL,23	 ;COLUMN
	LD A,$10 ;COLOR
	CALL PAINTCOL

	LD HL,60	 ;COLUMN
	LD A,$12 ;COLOR
	CALL PAINTCOL

	LD HL,40	 ;COLUMN
	LD A,$02 ;COLOR
	CALL PAINTCOL
	LD HL,159 ;COLUMN
	LD A,$41 ;COLOR
	CALL PAINTCOL
	RET ;TO MENU	

PAINTCOL:PUSH HL
	 PUSH AF
	;GET PAGE 8 AT $A000
	CALL PG8	
	;GET PAGE 9 AT $C000
	CALL PG9
	LD DE,$A000
	POP AF
	POP HL
	PUSH HL
	PUSH AF
	LD BC,102 ;NOOF ROWS
	CALL FILLROW
	CALL PG10
	CALL PG11
	POP AF
	POP HL
	LD DE,96
	ADD HL,DE
	LD DE,$A000
	LD BC,98  ;50 ROWS
	CALL FILLROW
	RET ;TO MENU


CLS:	;GET PAGE 8 AT $A000
	CALL PG8	
	;GET PAGE 9 AT $C000
	CALL PG9
	LD DE,$A000	
	LD BC,16384 ;BYTES ON 1ST 16K
	LD HL,1
	LD A,$00  ;RED - RED
	CALL FILLBTS
	CALL PG10
	CALL PG11
	LD DE,$A000
	LD HL,1  
	LD BC,15616 ;BYTES ON 2ND 16K
	LD A,$00  ;RED - RED
	CALL FILLBTS
	RET ;TO MENU	



FILLROW: ;HL = ROW TO FILL
	 ;BC NO OF ROWS
	 PUSH HL
	 OR A
	 ADC HL,DE
	 EX DE,HL  ;DE IS AT THE RIGHT COLUMN
	 POP HL    ;
	 LD H,A
	 EX DE,HL  ;HL HAS THE COLUMN
	 PUSH BC
	 POP DE
	 LD D,A
	 LD BC,160
FRAGN1:	 LD (HL),A 
	 ADD HL,BC
	 DEC E
	 LD A,E
	 OR A
	 LD A,D
	 JR NZ,FRAGN1
	 RET
	 	
;PLOTPIXEL AT 320X200
;HL=X , DE=Y  A=COLOR
BASEADDR EQU $A000
PLOTPXL32: ;CHECK BOUNDS
         PUSH HL 
	 PUSH AF	 
	 LD A,E
	 CP 102
	 JR C,PPNXT0  ;LESS THAN 102
	 JR NZ,NXTBNK ;MORE THAN 102
	 PUSH HL      ;ROW 102 IS SPLIT BETWEEN TWO 16K PAGES
	 LD BC,128
	 OR A
	 SBC HL,BC
	 LD B,A
	 LD A,H
	 OR A   ; IF H IS ZERO THEN GREATER THAN 128 ELSE LESS OR EQUAL TO 128
	 LD A,B
         POP HL
	 JR NZ,PPNXT0
	 ;BANK 2 LINE 102
	 LD A,103 ;WE ARE AT LINE ZERO ON 2ND BANK
	 LD DE,129+191
         OR A
         SBC HL,DE ;
NXTBNK:	 SUB 103 ;SKIP 102 ROWS
	 LD DE,192  ;320-128
	 OR A
	 ADC HL,DE
	 PUSH AF
	 PUSH HL
	 CALL PG10
	 CALL PG11
	 POP HL	 ;L HAS THE EXCESS OF 129	 
	 POP AF  ;A HAS THE ROWS ON 2ND 16K
         JR PPNXT1
PPNXT0:	 PUSH AF ;A=E=ROW=Y
	 PUSH HL
	 CALL PG8
	 CALL PG9
	 POP HL	 
	 POP AF 
PPNXT1:	 LD DE,BASEADDR
         ;HALVE HL=X CAUSE 2 PIXELS ONE BYTE
         SRL H
	 RR L
	 ADD HL,DE  ;FIND COLUMN
	 LD DE,160
DONXTROW: OR A	    ;CHECK ROW=0
	 JR Z,DOPLOTPX	
         ADD HL,DE
         DEC A
	 JR DONXTROW	 	 
DOPLOTPX:POP BC	;B HAS THE COLOR 
	 POP DE	;DE=X CHECK IF IT IS EVEN OR ODD AND CHANGE THE PIXEL 	 
	 LD A,(HL) ;GET PIXEL BYTE
	 BIT 0,E  ;CHECK X IS EVEN OR ODD
	 JR Z,DOEVEN   ;EVEN
	 ;SET RIGHT 4 BITS
	 AND $F0   ;CLEAR RIGHT 4 BITS
	 JR DPEXIT	 	 	 
	 ;SET LEFT 4BITS
DOEVEN:	 RLC B
	 RLC B
         RLC B
         RLC B
	 AND $0F   ;ZERO LEFT
DPEXIT:	 OR B	   ;MIX PIXELS
	 LD (HL),A
	 RET


FILLBTS: PUSH BC
	 
AGN1:    LD (DE),A
	 INC DE
	 DEC BC
	 LD H,A
	 LD A,B
	 OR C	
	 LD A,H
	 JR NZ,AGN1 
	 DEC L
	 LD A,L
	 OR A
	 LD A,H
	 POP BC
	 JR NZ,FILLBTS
	 RET


;PUT PAGE 8 TO BANK 5=$A000
PG8:	LD A,8
	LD B,5
	CALL PUTPGINBANK2
	RET

;PUT PAGE 9 TO BANK 6 $C000
PG9:	LD A,9
	LD B,6
	CALL PUTPGINBANK2
	RET

;PUT PAGE 10 TO BANK 5=$A000
PG10:	LD A,10
	LD B,5
	CALL PUTPGINBANK2
	RET

;PUT PAGE 11 TO BANK 6 $C000
PG11:	LD A,11
	LD B,6
	CALL PUTPGINBANK2
	RET



PUTPGINBANK2:	LD C, A 							;SAVE PAGE
		LD A, B                                                         ;BANK IN A
		CP 2
		RET C 								;BANK 0,1 WILL NEVER CHANGE
		CP 7
		RET Z 								;BANK 7 WILL NEVER CHANGE
		LD HL, BANKS
		LD D, 0
		LD E, A
		ADD HL, DE
		LD A, C 							;RESTORE PAGE
		LD (HL), A 							;SAVE PG IN BANK B MEMORY
		LD C, DEVMMU
		SLA B 								;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
		SLA B
		SLA B
		SLA B
		SLA B 								;SET TO A15,A14,A13
		OUT (C), A
		;LD HL,MES4
		;CALL RS_TXT
		RET

PX DB 0
PY DB 0

SHOWIMAGE:	;LD B,69
SIMAGN2:	;CALL RS_RX
		;DJNZ SIMAGN2
		XOR A
		LD (PX),A
	        LD (PY),A
SIMAGN:		LD A,(PX)
	        LD H,0
		LD L,A
		SLA L	;DOUBLE HL
		RL H
		LD A,(PY)
		LD D,0
		LD E,A
		
		CALL RS_RX	        
		PUSH HL
		PUSH DE
		PUSH AF
		;PLOT LEFT PIXEL
		SRL A
		SRL A
		SRL A
		SRL A
	        AND 0FH			
		;HL=X DE=Y A=COL
		CALL PLOTPXL32
		POP AF
		POP DE
		POP HL
		AND 0FH
	        INC HL		
		CALL PLOTPXL32
		LD HL,PX
		LD A,(HL)
		INC A
		CP 160
		JR NZ,SIMNX1
		XOR A
		LD (HL),A
		INC HL
		LD A,(HL)
		INC A
		CP 200
		RET Z		
SIMNX1:		LD (HL),A
		JR SIMAGN
	

		 






